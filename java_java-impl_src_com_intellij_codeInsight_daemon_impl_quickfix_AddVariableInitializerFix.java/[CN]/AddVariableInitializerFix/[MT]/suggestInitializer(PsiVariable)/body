{
  PsiType type=variable.getType();
  final PsiElementFactory elementFactory=JavaPsiFacade.getElementFactory(variable.getProject());
  final List<LookupElement> result=new SmartList<LookupElement>();
  final String defaultValue=PsiTypesUtil.getDefaultValueOfType(type);
  final ExpressionLookupItem defaultExpression=new ExpressionLookupItem(elementFactory.createExpressionFromText(defaultValue,variable));
  result.add(defaultExpression);
  if (type instanceof PsiClassType) {
    final PsiClass aClass=PsiTypesUtil.getPsiClass(type);
    if (aClass != null && PsiUtil.hasDefaultConstructor(aClass)) {
      final String expressionText=PsiKeyword.NEW + " " + type.getCanonicalText(false)+ "()";
      ExpressionLookupItem newExpression=new ExpressionLookupItem(elementFactory.createExpressionFromText(expressionText,variable));
      result.add(newExpression);
    }
  }
  return result.toArray(new LookupElement[result.size()]);
}
