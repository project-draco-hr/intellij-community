{
  if (editor == null)   return;
  LOG.assertTrue(!initializers.isEmpty());
  final PsiExpression initializer=ContainerUtil.getFirstItem(initializers);
  PsiElement context=initializers.size() == 1 ? initializer : PsiTreeUtil.findCommonParent(initializers);
  PsiDocumentManager.getInstance(initializer.getProject()).doPostponedOperationsAndUnblockDocument(editor.getDocument());
  final TemplateBuilderImpl builder=(TemplateBuilderImpl)TemplateBuilderFactory.getInstance().createTemplateBuilder(context);
  for (  PsiExpression e : initializers) {
    builder.replaceElement(e,new Expression(){
      @Nullable @Override public Result calculateResult(      ExpressionContext context1){
        return calculateQuickResult(context1);
      }
      @Nullable @Override public Result calculateQuickResult(      ExpressionContext context1){
        return new PsiElementResult(suggestedInitializers[0].getPsiElement());
      }
      @Nullable @Override public LookupElement[] calculateLookupItems(      ExpressionContext context1){
        return suggestedInitializers;
      }
    }
);
  }
  builder.run(editor,false);
}
