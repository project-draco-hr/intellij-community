{
  Set<Statement> all=new HashSet<>(lst);
  Set<Statement> handlers=new HashSet<>();
  Set<Statement> intersection=null;
  for (  Statement stat : lst) {
    Set<Statement> setNew=stat.getNeighboursSet(StatEdge.TYPE_EXCEPTION,Statement.DIRECTION_FORWARD);
    if (intersection == null) {
      intersection=setNew;
    }
 else {
      HashSet<Statement> interclone=new HashSet<>(intersection);
      interclone.removeAll(setNew);
      intersection.retainAll(setNew);
      setNew.removeAll(intersection);
      handlers.addAll(interclone);
      handlers.addAll(setNew);
    }
  }
  for (  Statement stat : handlers) {
    if (!all.contains(stat) || !all.containsAll(stat.getNeighbours(StatEdge.TYPE_EXCEPTION,Statement.DIRECTION_BACKWARD))) {
      return false;
    }
  }
  for (int i=1; i < lst.size(); i++) {
    Statement stat=lst.get(i);
    if (!stat.getPredecessorEdges(StatEdge.TYPE_EXCEPTION).isEmpty() && !handlers.contains(stat)) {
      return false;
    }
  }
  return true;
}
