{
  Statement post=null;
  Set<Statement> setDest=head.getNeighboursSet(StatEdge.TYPE_REGULAR,Statement.DIRECTION_FORWARD);
  if (setDest.contains(head)) {
    return false;
  }
  while (true) {
    lst.clear();
    boolean repeat=false;
    setDest.remove(post);
    Iterator<Statement> it=setDest.iterator();
    while (it.hasNext()) {
      Statement stat=it.next();
      if (stat.getLastBasicType() != Statement.LASTBASICTYPE_GENERAL) {
        if (post == null) {
          post=stat;
          repeat=true;
          break;
        }
 else {
          return false;
        }
      }
      Set<Statement> setPred=stat.getNeighboursSet(StatEdge.TYPE_REGULAR,Statement.DIRECTION_BACKWARD);
      setPred.remove(head);
      if (setPred.contains(stat)) {
        return false;
      }
      if (!setDest.containsAll(setPred) || setPred.size() > 1) {
        if (post == null) {
          post=stat;
          repeat=true;
          break;
        }
 else {
          return false;
        }
      }
 else       if (setPred.size() == 1) {
        Statement pred=setPred.iterator().next();
        while (lst.contains(pred)) {
          Set<Statement> setPredTemp=pred.getNeighboursSet(StatEdge.TYPE_REGULAR,Statement.DIRECTION_BACKWARD);
          setPredTemp.remove(head);
          if (!setPredTemp.isEmpty()) {
            pred=setPredTemp.iterator().next();
            if (pred == stat) {
              return false;
            }
          }
 else {
            break;
          }
        }
      }
      List<StatEdge> lstEdges=stat.getSuccessorEdges(Statement.STATEDGE_DIRECT_ALL);
      if (lstEdges.size() > 1) {
        Set<Statement> setSucc=stat.getNeighboursSet(Statement.STATEDGE_DIRECT_ALL,Statement.DIRECTION_FORWARD);
        setSucc.retainAll(setDest);
        if (setSucc.size() > 0) {
          return false;
        }
 else {
          if (post == null) {
            post=stat;
            repeat=true;
            break;
          }
 else {
            return false;
          }
        }
      }
 else       if (lstEdges.size() == 1) {
        StatEdge edge=lstEdges.get(0);
        if (edge.getType() == StatEdge.TYPE_REGULAR) {
          Statement statd=edge.getDestination();
          if (head == statd) {
            return false;
          }
          if (!setDest.contains(statd) && post != statd) {
            if (post != null) {
              return false;
            }
 else {
              Set<Statement> set=statd.getNeighboursSet(StatEdge.TYPE_REGULAR,Statement.DIRECTION_BACKWARD);
              if (set.size() > 1) {
                post=statd;
                repeat=true;
                break;
              }
 else {
                return false;
              }
            }
          }
        }
      }
      lst.add(stat);
    }
    if (!repeat) {
      break;
    }
  }
  lst.add(head);
  lst.remove(post);
  lst.add(0,post);
  return true;
}
