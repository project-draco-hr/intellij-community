{
  if (converter instanceof CustomReferenceConverter) {
    final PsiReference[] references=((CustomReferenceConverter)converter).createReferences(domValue,psiElement,context);
    if (references.length == 0 && converter instanceof ResolvingConverter) {
      return new PsiReference[]{new GenericDomValueReference(domValue)};
    }
 else {
      return references;
    }
  }
  if (converter instanceof PsiReferenceConverter) {
    return ((PsiReferenceConverter)converter).createReferences(psiElement,true);
  }
  if (converter instanceof ResolvingConverter) {
    return new PsiReference[]{new GenericDomValueReference(domValue)};
  }
  final Class clazz=DomUtil.getGenericValueParameter(invocationHandler.getDomElementType());
  if (clazz == null)   return PsiReference.EMPTY_ARRAY;
  if (ReflectionUtil.isAssignable(Integer.class,clazz)) {
    return new PsiReference[]{new GenericDomValueReference<Integer>((GenericDomValue<Integer>)domValue){
      @Override @NotNull public Object[] getVariants(){
        return new Object[]{"0"};
      }
    }
};
  }
  if (ReflectionUtil.isAssignable(String.class,clazz)) {
    return PsiReference.EMPTY_ARRAY;
  }
  PsiReferenceFactory provider=myProviders.get(clazz);
  if (provider != null) {
    return provider.getReferencesByElement(psiElement);
  }
  return PsiReference.EMPTY_ARRAY;
}
