{
  out.append("@Override").newLine().append("public ");
  writeReturnTypeJava(classScope,m,out);
  out.append(' ');
  appendMethodSignatureJava(m,Collections.<String>emptyList(),out);
  out.openBlock();
  out.append("if (");
  fieldBinding.writeGetExpression(out);
  out.append(" == null)").openBlock();
{
    if (parser.isThrowsIOException()) {
      out.append("try").openBlock();
    }
{
      fieldBinding.writeGetExpression(out);
      out.append(" = ");
      parser.writeReadCode(classScope,true,null,classScope.getOutput());
      out.semi();
    }
    if (parser.isThrowsIOException()) {
      out.closeBlock();
      out.newLine().append("catch (IOException e)").openBlock();
      out.append("throw new com.google.gson.JsonParseException(e);").closeBlock();
    }
    out.newLine().append(Util.PENDING_INPUT_READER_NAME).append(" = null;");
  }
  out.closeBlock();
  out.newLine().append("return ");
  fieldBinding.writeGetExpression(out);
  out.semi();
  out.closeBlock();
}
