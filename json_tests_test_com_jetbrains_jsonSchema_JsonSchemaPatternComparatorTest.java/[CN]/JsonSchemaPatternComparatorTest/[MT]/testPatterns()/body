{
  final JsonSchemaPatternComparator comparator=new JsonSchemaPatternComparator(getProject());
  Assert.assertEquals(ThreeState.YES,comparator.isSimilar(p("test"),p("test")));
  Assert.assertEquals(ThreeState.YES,comparator.isSimilar(p("test"),p("tes*")));
  Assert.assertEquals(ThreeState.YES,comparator.isSimilar(p("tes*"),p("test")));
  Assert.assertEquals(ThreeState.YES,comparator.isSimilar(p("test"),p("*est")));
  Assert.assertEquals(ThreeState.YES,comparator.isSimilar(p("testwords"),p("test*words")));
  Assert.assertEquals(ThreeState.YES,comparator.isSimilar(p("testwords"),p("*test*words")));
  Assert.assertEquals(ThreeState.NO,comparator.isSimilar(p("*.abc"),p("*.cde")));
  Assert.assertEquals(ThreeState.UNSURE,comparator.isSimilar(p("*.abc"),p("start.*")));
  Assert.assertEquals(ThreeState.UNSURE,comparator.isSimilar(p("two*words"),p("circus")));
}
