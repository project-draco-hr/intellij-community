{
  runPythonTest(new PyPackagingTestTask(){
    @Override public void runTestOn(    String sdkHome) throws Exception {
      final Sdk sdk=PythonSkeletonsTest.createTempSdk(sdkHome);
      try {
        final File tempDir=FileUtil.createTempDirectory(getTestName(false),null);
        final File venvDir=new File(tempDir,"venv");
        final String venvSdkHome=((PyPackageManagerImpl)PyPackageManagerImpl.getInstance(sdk)).createVirtualEnv(venvDir.toString(),false);
        final Sdk venvSdk=PythonSkeletonsTest.createTempSdk(venvSdkHome);
        assertNotNull(venvSdk);
        assertTrue(PythonSdkType.isVirtualEnv(venvSdk));
        assertInstanceOf(PythonSdkFlavor.getPlatformIndependentFlavor(venvSdk.getHomePath()),VirtualEnvSdkFlavor.class);
        final List<PyPackage> packages=((PyPackageManagerImpl)PyPackageManagerImpl.getInstance(venvSdk)).getPackages();
        final PyPackage distribute=findPackage("distribute",packages);
        assertNotNull(distribute);
        assertEquals("distribute",distribute.getName());
        assertEquals(DISTRIBUTE_VERSION,distribute.getVersion());
        final PyPackage pip=findPackage("pip",packages);
        assertNotNull(pip);
        assertEquals("pip",pip.getName());
        assertEquals(PIP_VERSION,pip.getVersion());
      }
 catch (      IOException e) {
        throw new RuntimeException(e);
      }
catch (      PyExternalProcessException e) {
        throw new RuntimeException(String.format("Error for interpreter '%s': %s",sdk.getHomePath(),e.getMessage()),e);
      }
    }
  }
);
}
