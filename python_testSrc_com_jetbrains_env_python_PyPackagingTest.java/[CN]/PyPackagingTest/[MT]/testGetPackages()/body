{
  forAllPythonEnvs(getTestName(false),new Processor<Sdk>(){
    @Override public boolean process(    Sdk sdk){
      List<PyPackage> packages=null;
      try {
        packages=PyPackageManagerImpl.getInstance(sdk).getPackages();
      }
 catch (      PyExternalProcessException e) {
        final int retcode=e.getRetcode();
        if (retcode != PyPackageManagerImpl.ERROR_NO_PIP && retcode != PyPackageManagerImpl.ERROR_NO_DISTRIBUTE) {
          fail(String.format("Error for interpreter '%s': %s",sdk.getHomePath(),e.getMessage()));
        }
      }
      if (packages != null) {
        assertTrue(packages.size() > 0);
        for (        PyPackage pkg : packages) {
          assertTrue(pkg.getName().length() > 0);
        }
      }
      return true;
    }
  }
);
}
