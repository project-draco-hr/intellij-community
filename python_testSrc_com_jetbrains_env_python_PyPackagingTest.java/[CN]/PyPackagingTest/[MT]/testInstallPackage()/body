{
  runPythonTest(new PyPackagingTestTask(){
    @Override public void runTestOn(    String sdkHome) throws Exception {
      final Sdk sdk=createTempSdk(sdkHome,SdkCreationType.EMPTY_SDK);
      try {
        final File tempDir=FileUtil.createTempDirectory(getTestName(false),null);
        final File venvDir=new File(tempDir,"venv");
        final String venvSdkHome=PyPackageManager.getInstance(sdk).createVirtualEnv(venvDir.getPath(),false);
        final Sdk venvSdk=createTempSdk(venvSdkHome,SdkCreationType.EMPTY_SDK);
        assertNotNull(venvSdk);
        final PyPackageManager manager=PyPackageManager.getInstance(venvSdk);
        final List<PyPackage> packages1=manager.getPackages(false);
        manager.install(list(PyRequirement.fromString("Markdown<2.2"),new PyRequirement("httplib2")),Collections.<String>emptyList());
        final List<PyPackage> packages2=manager.getPackages(false);
        final PyPackage markdown2=findPackage("Markdown",packages2);
        assertNotNull(markdown2);
        assertTrue(markdown2.isInstalled());
        final PyPackage pip1=findPackage("pip",packages1);
        assertNotNull(pip1);
        assertEquals("pip",pip1.getName());
        manager.uninstall(list(pip1));
        final List<PyPackage> packages3=manager.getPackages(false);
        final PyPackage pip2=findPackage("pip",packages3);
        assertNull(pip2);
      }
 catch (      ExecutionException e) {
        new RuntimeException(String.format("Error for interpreter '%s': %s",sdk.getHomePath(),e.getMessage()),e);
      }
catch (      IOException e) {
        throw new RuntimeException(e);
      }
    }
  }
);
}
