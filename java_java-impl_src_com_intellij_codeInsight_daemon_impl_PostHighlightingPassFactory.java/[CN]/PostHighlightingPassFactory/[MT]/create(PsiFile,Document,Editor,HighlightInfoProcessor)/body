{
  HighlightDisplayKey unusedImportKey=HighlightDisplayKey.find(UnusedImportLocalInspection.SHORT_NAME);
  InspectionProfile profile=InspectionProjectProfileManager.getInstance(file.getProject()).getInspectionProfile();
  boolean importEnabled=isUnusedImportEnabled(unusedImportKey,file,profile);
  final UnusedDeclarationInspection myDeadCodeInspection=(UnusedDeclarationInspection)profile.getUnwrappedTool(UnusedDeclarationInspection.SHORT_NAME,file);
  HighlightDisplayKey myDeadCodeKey=HighlightDisplayKey.find(UnusedDeclarationInspection.SHORT_NAME);
  final boolean myDeadCodeEnabled=profile.isToolEnabled(myDeadCodeKey,file);
  return new PostHighlightingPass(myProject,file,editor,document,highlightInfoProcessor,importEnabled,new Predicate<PsiElement>(){
    @Override public boolean apply(    PsiElement member){
      return !myDeadCodeEnabled || myDeadCodeInspection.isEntryPoint(member);
    }
  }
);
}
