{
  final IdeView view=e.getData(LangDataKeys.IDE_VIEW);
  final Project project=e.getData(CommonDataKeys.PROJECT);
  if (view == null || project == null) {
    return;
  }
  final Course course=StudyTaskManager.getInstance(project).getCourse();
  if (course == null) {
    return;
  }
  if (course.getId() > 0) {
    ProgressManager.getInstance().run(new Task.Modal(project,"Updating Course",true){
      @Override public void run(      @NotNull ProgressIndicator indicator){
        for (        Lesson lesson : course.getLessons()) {
          if (lesson.getId() > 0) {
            CCStepicConnector.updateLesson(project,lesson,indicator);
          }
 else {
            final CourseInfo info=CourseInfo.fromCourse(course);
            final int lessonId=CCStepicConnector.postLesson(project,lesson,indicator);
            final List<Integer> sections=info.getSections();
            final Integer sectionId=sections.get(sections.size() - 1);
            CCStepicConnector.postUnit(project,lessonId,lesson.getIndex(),sectionId);
          }
        }
      }
    }
);
  }
 else {
    CCStepicConnector.postCourseWithProgress(project,course);
  }
  EduUsagesCollector.courseUploaded();
}
