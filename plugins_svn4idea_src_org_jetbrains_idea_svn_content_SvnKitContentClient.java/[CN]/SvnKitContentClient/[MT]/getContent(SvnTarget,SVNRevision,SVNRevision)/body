{
  final int maxSize=VcsUtil.getMaxVcsLoadedFileSize();
  ByteArrayOutputStream buffer=new ByteArrayOutputStream(){
    @Override public synchronized void write(    int b){
      if (size() > maxSize)       throw new FileTooBigRuntimeException();
      super.write(b);
    }
    @Override public synchronized void write(    byte[] b,    int off,    int len){
      if (size() > maxSize)       throw new FileTooBigRuntimeException();
      super.write(b,off,len);
    }
    @Override public synchronized void writeTo(    OutputStream out) throws IOException {
      if (size() > maxSize)       throw new FileTooBigRuntimeException();
      super.writeTo(out);
    }
  }
;
  SVNWCClient wcClient=myVcs.getSvnKitManager().createWCClient();
  try {
    if (target.isURL()) {
      wcClient.doGetFileContents(target.getURL(),pegRevision,revision,true,buffer);
    }
 else {
      wcClient.doGetFileContents(target.getFile(),pegRevision,revision,true,buffer);
    }
    ContentRevisionCache.checkContentsSize(target.getPathOrUrlString(),buffer.size());
  }
 catch (  FileTooBigRuntimeException e) {
    ContentRevisionCache.checkContentsSize(target.getPathOrUrlString(),buffer.size());
  }
catch (  SVNException e) {
    throw new VcsException(e);
  }
  return buffer.toByteArray();
}
