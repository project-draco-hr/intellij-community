{
  if (prefix == null)   return null;
  final String stemmedPrefix=PorterStemmerUtil.stem(prefix);
  if (StringUtil.isEmptyOrSpaces(stemmedPrefix))   return null;
  loadHugeFilesIfNecessary();
  Set<OptionDescription> result=null;
  for (  Map.Entry<CharSequence,long[]> entry : myStorage.entrySet()) {
    final long[] descriptions=entry.getValue();
    final CharSequence option=entry.getKey();
    if (!StringUtil.startsWith(option,prefix) && !StringUtil.startsWith(option,stemmedPrefix)) {
      final String stemmedOption=PorterStemmerUtil.stem(option.toString());
      if (stemmedOption != null && !stemmedOption.startsWith(prefix) && !stemmedOption.startsWith(stemmedPrefix)) {
        continue;
      }
    }
    if (result == null) {
      result=new THashSet<>();
    }
    for (    long description : descriptions) {
      OptionDescription desc=unpack(description);
      result.add(desc);
    }
  }
  return result;
}
