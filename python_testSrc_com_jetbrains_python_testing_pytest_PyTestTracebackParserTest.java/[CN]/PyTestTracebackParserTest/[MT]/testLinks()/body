{
  final String s=StreamUtil.readText(PyTestTracebackParserTest.class.getResource("linksDataTest.txt").openStream(),Charset.defaultCharset());
  final Set<String> requiredStrings=new HashSet<String>();
  requiredStrings.add("file:///c:/windows/system32/file.txt - 42");
  requiredStrings.add("file:///c:/windows/system32/file_spam.txt - 42");
  requiredStrings.add("c:\\documents and settings\\foo.txt - 43");
  requiredStrings.add("file:///c:/windows/system32/file.txt - 42");
  requiredStrings.add("/file.py - 42");
  requiredStrings.add("c:\\folder55\\file.py - 12");
  requiredStrings.add("C:\\temp\\untitled55\\test_sample.py - 5");
  requiredStrings.add("C:\\temp\\untitled55\\test_sample.py - 6");
  requiredStrings.add("C:\\temp\\untitled55\\test_sample.py - 7");
  requiredStrings.add("C:\\temp\\untitled55\\test_sample.py - 89999");
  requiredStrings.add("C:\\temp\\untitled55\\test_sample.py - 99999");
  requiredStrings.add("../../../files/files.py - 100");
  requiredStrings.add("/Users/Mac Hipster/Applications/PyCharm 4.0 .app/helpers/lala.py - 12");
  requiredStrings.add("C:\\Users\\ilya.kazakevich\\virtenvs\\spammy\\lib\\site-packages\\django_cron\\models.py - 4");
  final Logger logger=Logger.getInstance(PyTestTracebackParserTest.class);
  final String[] strings=StringUtil.splitByLines(s);
  logger.warn(String.format("Got lines %s",strings));
  for (  final String line : strings) {
    logger.warn(String.format("Starting with string %s",line));
    final LinkInTrace trace=new PyTestTracebackParser().findLinkInTrace(line);
    logger.warn(String.format("Got %s",trace));
    if (trace != null) {
      final boolean removeResult=requiredStrings.remove(trace.getFileName() + " - " + trace.getLineNumber());
      Assert.assertTrue(String.format("Unexpected file found %s line %s",trace.getFileName(),trace.getLineNumber()),removeResult);
    }
  }
  Assert.assertThat("Some lines were not found",requiredStrings,Matchers.empty());
}
