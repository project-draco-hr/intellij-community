{
  super();
  setModel(dataModel);
  myCellRenderer=new CellRenderer();
  setCellRenderer(myCellRenderer);
  setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
  addKeyListener(new KeyAdapter(){
    @Override public void keyTyped(    KeyEvent e){
      if (e.getKeyChar() == ' ') {
        Boolean value=null;
        for (        int index : getSelectedIndices()) {
          if (index >= 0) {
            JCheckBox checkbox=getCheckBoxAt(index);
            value=value != null ? value : !checkbox.isSelected();
            setSelected(checkbox,index,value);
          }
        }
      }
    }
  }
);
  new ClickListener(){
    @Override public boolean onClick(    @NotNull MouseEvent e,    int clickCount){
      if (isEnabled()) {
        int index=locationToIndex(e.getPoint());
        if (index != -1) {
          JCheckBox checkBox=getCheckBoxAt(index);
          Rectangle bounds=getCellBounds(index,index);
          if (bounds == null) {
            return false;
          }
          Point p=findPointRelativeToCheckBox(e.getX() - bounds.x,e.getY() - bounds.y,checkBox,index);
          if (p != null) {
            Dimension dim=getCheckBoxDimension(checkBox);
            if (p.x >= 0 && p.x < dim.width && p.y >= 0 && p.y < dim.height) {
              setSelected(checkBox,index,!checkBox.isSelected());
              return true;
            }
          }
        }
      }
      return false;
    }
  }
.installOn(this);
}
