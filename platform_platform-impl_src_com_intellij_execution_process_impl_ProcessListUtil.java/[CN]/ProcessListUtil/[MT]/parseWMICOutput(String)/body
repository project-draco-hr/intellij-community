{
  List<ProcessInfo> result=ContainerUtil.newArrayList();
  String[] lines=StringUtil.splitByLinesDontTrim(output);
  if (lines.length == 0)   return null;
  String header=lines[0];
  int commandLineStart=header.indexOf("CommandLine");
  if (commandLineStart == -1)   return null;
  int pidStart=header.indexOf("ProcessId");
  if (pidStart == -1)   return null;
  int executablePathStart=header.indexOf("ExecutablePath");
  if (executablePathStart == -1)   return null;
  for (int i=1; i < lines.length; i++) {
    String line=lines[i];
    int pid=StringUtil.parseInt(line.substring(pidStart,line.length()).trim(),-1);
    if (pid == -1 || pid == 0)     continue;
    String executablePath=line.substring(executablePathStart,pidStart).trim();
    String name=line.substring(0,commandLineStart).trim();
    if (name.isEmpty())     continue;
    String commandLine=line.substring(commandLineStart,pidStart).trim();
    String args="";
    if (commandLine.isEmpty()) {
      commandLine=name;
    }
 else {
      int nameIndex=StringUtil.indexOfIgnoreCase(commandLine,name,0);
      if (nameIndex != -1) {
        args=commandLine.substring(nameIndex + name.length()).trim();
      }
    }
    result.add(new ProcessInfo(pid,commandLine,name,args,executablePath));
  }
  return result;
}
