{
  List<MacProcessInfo> commands=doParseMacOutput(commandOnly);
  List<MacProcessInfo> fulls=doParseMacOutput(full);
  if (commands == null || fulls == null)   return null;
  TIntObjectHashMap<String> idToCommand=new TIntObjectHashMap<>();
  for (  MacProcessInfo each : commands) {
    idToCommand.put(each.pid,each.commandLine);
  }
  List<ProcessInfo> result=new ArrayList<>();
  for (  MacProcessInfo each : fulls) {
    if (!idToCommand.containsKey(each.pid))     continue;
    String command=idToCommand.get(each.pid);
    if (!(each.commandLine.equals(command) || each.commandLine.startsWith(command + " ")))     continue;
    String name=PathUtil.getFileName(command);
    String args=each.commandLine.substring(command.length()).trim();
    result.add(new ProcessInfo(each.pid,each.commandLine,name,args,command));
  }
  return result;
}
