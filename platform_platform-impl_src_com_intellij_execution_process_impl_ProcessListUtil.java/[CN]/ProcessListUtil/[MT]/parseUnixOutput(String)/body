{
  List<ProcessInfo> result=ContainerUtil.newArrayList();
  String[] lines=StringUtil.splitByLinesDontTrim(output);
  if (lines.length == 0)   return null;
  String header=lines[0];
  int pidStart=header.indexOf("PID");
  if (pidStart == -1)   return null;
  int statStart=header.indexOf("S",pidStart);
  if (statStart == -1)   return null;
  int userStart=header.indexOf("USER",statStart);
  if (userStart == -1)   return null;
  int commandStart=header.indexOf("COMMAND",userStart);
  if (commandStart == -1)   return null;
  for (int i=1; i < lines.length; i++) {
    String line=lines[i];
    int pid=StringUtil.parseInt(line.substring(0,statStart).trim(),-1);
    if (pid == -1)     continue;
    String state=line.substring(statStart,userStart).trim();
    if (state.contains("Z"))     continue;
    String user=line.substring(userStart,commandStart).trim();
    String commandLine=line.substring(commandStart).trim();
    String executablePath=determineExecutable(commandLine);
    if (executablePath == null)     continue;
    String args=commandLine.substring(executablePath.length()).trim();
    String name=PathUtil.getFileName(StringUtil.trimTrailing(executablePath,'/'));
    result.add(new ProcessInfo(pid,commandLine,name,args,user,state));
  }
  return result;
}
