{
  final DebuggerContextImpl debuggerContext=DebuggerAction.getDebuggerContext(e.getDataContext());
  DebugProcessImpl process=debuggerContext.getDebugProcess();
  if (process == null) {
    return;
  }
  process.getManagerThread().schedule(new DebuggerCommandImpl(){
    protected void action() throws Exception {
      final String name=getClassName(debuggerContext.getFrameProxy());
      if (name == null) {
        return;
      }
      final Project project=e.getData(CommonDataKeys.PROJECT);
      ApplicationManager.getApplication().invokeLater(new Runnable(){
        @Override public void run(){
          String filter=Messages.showInputDialog(project,"","Add Stepping Filter",null,name,null);
          if (filter != null) {
            ClassFilter[] filters=DebuggerSettings.getInstance().getSteppingFilters();
            ClassFilter[] newFilters=Arrays.copyOf(filters,filters.length + 1);
            newFilters[newFilters.length - 1]=new ClassFilter(filter);
            DebuggerSettings.getInstance().setSteppingFilters(newFilters);
          }
        }
      }
);
    }
  }
);
}
