{
  super.addNotify();
  final String key="toolwindow.stripes.buttons.info.shown";
  if (UISettings.getInstance().HIDE_TOOL_STRIPES && !PropertiesComponent.getInstance().isTrueValue(key)) {
    final Alarm alarm=new Alarm();
    alarm.addRequest(new Runnable(){
      @Override public void run(){
        final ToolWindowWidgetInfoPanel panel=new ToolWindowWidgetInfoPanel();
        panel.myButton.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        final Balloon balloon=JBPopupFactory.getInstance().createBalloonBuilder(panel.myRoot).setFillColor(UIUtil.getListBackground()).setHideOnClickOutside(false).setDisposable(ToolWindowsWidget.this).createBalloon();
        panel.myButton.addMouseListener(new MouseAdapter(){
          @Override public void mouseClicked(          MouseEvent e){
            balloon.hide();
            PropertiesComponent.getInstance().setValue(key,String.valueOf(true));
          }
        }
);
        balloon.show(new RelativePoint(ToolWindowsWidget.this,new Point(10,0)),Balloon.Position.above);
        Disposer.dispose(alarm);
      }
    }
,5000);
  }
}
