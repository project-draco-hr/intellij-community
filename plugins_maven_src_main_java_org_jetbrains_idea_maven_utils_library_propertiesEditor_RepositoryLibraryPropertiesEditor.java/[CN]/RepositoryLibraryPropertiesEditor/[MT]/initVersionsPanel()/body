{
  final int selection=getSelection(model.getVersion(),versions);
  CollectionComboBoxModel<String> versionSelectorModel=new CollectionComboBoxModel<>(versions);
  versionSelector.setModel(versionSelectorModel);
  versionSelector.setSelectedIndex(selection);
  setState(State.Loaded);
  initVersionKindSelector();
  versionSelector.addItemListener(new ItemListener(){
    @Override public void itemStateChanged(    ItemEvent e){
      model.setVersion(getSelectedVersion());
      onChangeListener.onChange(RepositoryLibraryPropertiesEditor.this);
    }
  }
);
  downloadSourcesCheckBox.setSelected(model.isDownloadSources());
  downloadSourcesCheckBox.addChangeListener(new ChangeListener(){
    @Override public void stateChanged(    ChangeEvent e){
      model.setDownloadSources(downloadSourcesCheckBox.isSelected());
      onChangeListener.onChange(RepositoryLibraryPropertiesEditor.this);
    }
  }
);
  downloadJavaDocsCheckBox.setSelected(model.isDownloadJavaDocs());
  downloadJavaDocsCheckBox.addChangeListener(new ChangeListener(){
    @Override public void stateChanged(    ChangeEvent e){
      model.setDownloadJavaDocs(downloadJavaDocsCheckBox.isSelected());
      onChangeListener.onChange(RepositoryLibraryPropertiesEditor.this);
    }
  }
);
}
