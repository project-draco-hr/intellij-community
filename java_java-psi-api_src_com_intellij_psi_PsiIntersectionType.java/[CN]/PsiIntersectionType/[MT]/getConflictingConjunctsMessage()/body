{
  final PsiType[] conjuncts=getConjuncts();
  for (int i=0; i < conjuncts.length; i++) {
    PsiClass conjunct=PsiUtil.resolveClassInClassTypeOnly(conjuncts[i]);
    if (conjunct != null && !conjunct.isInterface()) {
      for (int i1=i + 1; i1 < conjuncts.length; i1++) {
        PsiClass oppositeConjunct=PsiUtil.resolveClassInClassTypeOnly(conjuncts[i1]);
        if (oppositeConjunct != null && !oppositeConjunct.isInterface()) {
          if (!conjunct.isInheritor(oppositeConjunct,true) && !oppositeConjunct.isInheritor(conjunct,true)) {
            return conjuncts[i].getPresentableText() + " and " + conjuncts[i1].getPresentableText();
          }
        }
      }
    }
  }
  return null;
}
