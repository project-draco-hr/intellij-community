{
  PsiAssignmentExpression assignment=tb.getSingleExpression(PsiAssignmentExpression.class);
  if (assignment == null)   return null;
  PsiVariable var=StreamApiMigrationInspection.extractAccumulator(assignment);
  if (var == null)   return null;
  PsiExpression addend=StreamApiMigrationInspection.extractAddend(assignment);
  if (addend == null)   return null;
  PsiType type=var.getType();
  if (!(type instanceof PsiPrimitiveType) || type.equals(PsiType.FLOAT))   return null;
  if (!type.equals(PsiType.DOUBLE) && !type.equals(PsiType.LONG)) {
    type=PsiType.INT;
  }
  PsiType addendType=addend.getType();
  if (addendType != null && !TypeConversionUtil.isAssignable(type,addendType)) {
    addend=JavaPsiFacade.getElementFactory(project).createExpressionFromText("(" + type.getCanonicalText() + ")"+ ParenthesesUtils.getText(addend,ParenthesesUtils.MULTIPLICATIVE_PRECEDENCE),addend);
  }
  StringBuilder builder=generateStream(new MapOp(tb.getLastOperation(),addend,tb.getVariable(),type));
  builder.append(".sum()");
  return replaceWithNumericAddition(project,loopStatement,var,builder,type);
}
