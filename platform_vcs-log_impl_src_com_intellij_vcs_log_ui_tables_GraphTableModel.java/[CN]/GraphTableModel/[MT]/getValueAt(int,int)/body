{
  Node commitNode=myDataPack.getGraphModel().getGraph().getCommitNodeInRow(rowIndex);
  VcsShortCommitDetails data;
  if (commitNode == null) {
    data=null;
  }
 else {
    data=myDataHolder.getMiniDetailsGetter().getCommitData(commitNode);
  }
switch (columnIndex) {
case ROOT_COLUMN:
    if (commitNode != null) {
      return commitNode.getBranch().getRepositoryRoot();
    }
 else {
      return null;
    }
case COMMIT_COLUMN:
  GraphPrintCell graphPrintCell=myDataPack.getPrintCellModel().getGraphPrintCell(rowIndex);
String message="";
Collection<VcsRef> refs=Collections.emptyList();
if (data != null) {
message=data.getSubject();
refs=myDataPack.getRefsModel().refsToCommit(data.getHash());
}
return new GraphCommitCell(graphPrintCell,GraphCommitCell.Kind.NORMAL,message,refs);
case AUTHOR_COLUMN:
if (data == null) {
return "";
}
 else {
return data.getAuthorName();
}
case DATE_COLUMN:
if (data == null) {
return "";
}
 else {
return DateFormatUtil.formatDateTime(data.getAuthorTime());
}
default :
throw new IllegalArgumentException("columnIndex is " + columnIndex + " > "+ (COLUMN_COUNT - 1));
}
}
