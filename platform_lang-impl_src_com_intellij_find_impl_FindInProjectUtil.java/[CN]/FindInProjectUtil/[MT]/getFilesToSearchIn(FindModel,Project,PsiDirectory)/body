{
  final String moduleName=findModel.getModuleName();
  final Module module=moduleName == null ? null : ApplicationManager.getApplication().runReadAction(new Computable<Module>(){
    @Override public Module compute(){
      return ModuleManager.getInstance(project).findModuleByName(moduleName);
    }
  }
);
  final FileIndex fileIndex=module == null ? ProjectRootManager.getInstance(project).getFileIndex() : ModuleRootManager.getInstance(module).getFileIndex();
  final Condition<VirtualFile> fileMask=createFileMaskRegExp(findModel);
  Pair<Boolean,Collection<PsiFile>> fastWords=getFilesForFastWordSearch(findModel,project,psiDirectory,fileMask,module,fileIndex);
  final Collection<PsiFile> filesForFastWordSearch=fastWords.getSecond();
  final boolean useIdIndex=fastWords.getFirst() && canOptimizeForFastWordSearch(findModel);
  SearchScope customScope=findModel.getCustomScope();
  final GlobalSearchScope globalCustomScope=toGlobal(project,customScope);
class EnumContentIterator implements ContentIterator {
    final Set<PsiFile> myFiles=new LinkedHashSet<PsiFile>(filesForFastWordSearch);
    final PsiManager psiManager=PsiManager.getInstance(project);
    @Override public boolean processFile(    @NotNull VirtualFile virtualFile){
      ProgressManager.checkCanceled();
      if (virtualFile.isDirectory() || !fileMask.value(virtualFile) || (globalCustomScope != null && !globalCustomScope.contains(virtualFile))) {
        return true;
      }
      if (useIdIndex && isCoveredByIdIndex(virtualFile)) {
        return true;
      }
      PsiFile psiFile=findFile(psiManager,virtualFile);
      if (psiFile != null && !(psiFile instanceof PsiBinaryFile)) {
        PsiFile sourceFile=(PsiFile)psiFile.getNavigationElement();
        if (sourceFile != null)         psiFile=sourceFile;
        myFiles.add(psiFile);
      }
      return true;
    }
    @NotNull private Collection<PsiFile> getFiles(){
      return myFiles;
    }
  }
  EnumContentIterator iterator=new EnumContentIterator();
  if (customScope instanceof LocalSearchScope) {
    for (    VirtualFile file : getLocalScopeFiles((LocalSearchScope)customScope)) {
      iterator.processFile(file);
    }
  }
 else   if (psiDirectory != null) {
    fileIndex.iterateContentUnderDirectory(psiDirectory.getVirtualFile(),iterator);
  }
 else {
    boolean success=fileIndex.iterateContent(iterator);
    if (success && globalCustomScope != null && globalCustomScope.isSearchInLibraries()) {
      final VirtualFile[] librarySources=ApplicationManager.getApplication().runReadAction(new Computable<VirtualFile[]>(){
        @Override public VirtualFile[] compute(){
          OrderEnumerator enumerator=module == null ? OrderEnumerator.orderEntries(project) : OrderEnumerator.orderEntries(module);
          return enumerator.withoutModuleSourceEntries().withoutDepModules().getSourceRoots();
        }
      }
);
      iterateAll(librarySources,globalCustomScope,iterator);
    }
  }
  return iterator.getFiles();
}
