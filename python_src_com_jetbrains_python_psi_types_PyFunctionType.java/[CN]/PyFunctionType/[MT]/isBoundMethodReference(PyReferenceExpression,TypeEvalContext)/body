{
  final PyFunction function=as(getCallable(),PyFunction.class);
  final boolean isNonStaticMethod=function != null && function.getContainingClass() != null && function.getModifier() != STATICMETHOD;
  if (isNonStaticMethod) {
    if (LanguageLevel.forElement(location).isOlderThan(LanguageLevel.PYTHON30)) {
      return true;
    }
    if (location.isQualified()) {
      final PyType qualifierType=PyTypeChecker.toNonWeakType(context.getType(location.getQualifier()),context);
      if (isInstanceType(qualifierType)) {
        return true;
      }
 else       if (qualifierType instanceof PyUnionType) {
        for (        PyType type : ((PyUnionType)qualifierType).getMembers()) {
          if (isInstanceType(type)) {
            return true;
          }
        }
      }
    }
  }
  return false;
}
