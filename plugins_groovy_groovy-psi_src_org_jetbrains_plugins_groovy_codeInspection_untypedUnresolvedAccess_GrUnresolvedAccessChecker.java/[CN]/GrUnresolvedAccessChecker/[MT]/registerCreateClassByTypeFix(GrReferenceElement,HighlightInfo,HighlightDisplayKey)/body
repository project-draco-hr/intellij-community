{
  GrPackageDefinition packageDefinition=PsiTreeUtil.getParentOfType(refElement,GrPackageDefinition.class);
  if (packageDefinition != null)   return;
  PsiElement parent=refElement.getParent();
  if (parent instanceof GrNewExpression && refElement.getManager().areElementsEquivalent(((GrNewExpression)parent).getReferenceElement(),refElement)) {
    QuickFixAction.registerQuickFixAction(info,GroovyQuickFixFactory.getInstance().createClassFromNewAction((GrNewExpression)parent),key);
  }
 else   if (canBeClassOrPackage(refElement)) {
    if (shouldBeInterface(refElement)) {
      QuickFixAction.registerQuickFixAction(info,GroovyQuickFixFactory.getInstance().createClassFixAction(refElement,CreateClassKind.INTERFACE),key);
    }
 else     if (shouldBeClass(refElement)) {
      QuickFixAction.registerQuickFixAction(info,GroovyQuickFixFactory.getInstance().createClassFixAction(refElement,CreateClassKind.CLASS),key);
      QuickFixAction.registerQuickFixAction(info,GroovyQuickFixFactory.getInstance().createClassFixAction(refElement,CreateClassKind.ENUM),key);
    }
 else     if (shouldBeAnnotation(refElement)) {
      QuickFixAction.registerQuickFixAction(info,GroovyQuickFixFactory.getInstance().createClassFixAction(refElement,CreateClassKind.ANNOTATION),key);
    }
 else {
      QuickFixAction.registerQuickFixAction(info,GroovyQuickFixFactory.getInstance().createClassFixAction(refElement,CreateClassKind.CLASS),key);
      QuickFixAction.registerQuickFixAction(info,GroovyQuickFixFactory.getInstance().createClassFixAction(refElement,CreateClassKind.INTERFACE),key);
      QuickFixAction.registerQuickFixAction(info,GroovyQuickFixFactory.getInstance().createClassFixAction(refElement,CreateClassKind.ENUM),key);
      QuickFixAction.registerQuickFixAction(info,GroovyQuickFixFactory.getInstance().createClassFixAction(refElement,CreateClassKind.ANNOTATION),key);
    }
  }
}
