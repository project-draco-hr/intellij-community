{
  extend(CompletionType.BASIC,psiElement().withLanguage(PythonLanguage.getInstance()).and(DICT_KEY),new CompletionProvider<CompletionParameters>(){
    protected void addCompletions(    @NotNull final CompletionParameters parameters,    final ProcessingContext context,    @NotNull final CompletionResultSet result){
      PsiElement original=parameters.getOriginalPosition();
      int offset=parameters.getOffset();
      final CompletionResultSet dictCompletion=createResult(original,result,offset);
      PsiElement operand=PsiTreeUtil.getParentOfType(original,PySubscriptionExpression.class).getOperand();
      if (operand != null) {
        PsiReference reference=operand.getReference();
        if (reference != null) {
          PsiElement resolvedElement=reference.resolve();
          if (resolvedElement instanceof PyTargetExpression) {
            PyDictLiteralExpression dict=PsiTreeUtil.getNextSiblingOfType(resolvedElement,PyDictLiteralExpression.class);
            if (dict != null) {
              addDictLiteralKeys(dict,dictCompletion);
              PsiFile file=parameters.getOriginalFile();
              addAdditionalKeys(file,operand,dictCompletion);
            }
            PyCallExpression dictConstructor=PsiTreeUtil.getNextSiblingOfType(resolvedElement,PyCallExpression.class);
            if (dictConstructor != null) {
              addDictConstructorKeys(dictConstructor,dictCompletion);
              PsiFile file=parameters.getOriginalFile();
              addAdditionalKeys(file,operand,dictCompletion);
            }
          }
        }
      }
      dictCompletion.runRemainingContributors(parameters,new Consumer<LookupElement>(){
        public void consume(        final LookupElement lookupElement){
          if (lookupElement.getLookupString().equals("dict key"))           dictCompletion.addElement(lookupElement);
        }
      }
);
    }
  }
);
}
