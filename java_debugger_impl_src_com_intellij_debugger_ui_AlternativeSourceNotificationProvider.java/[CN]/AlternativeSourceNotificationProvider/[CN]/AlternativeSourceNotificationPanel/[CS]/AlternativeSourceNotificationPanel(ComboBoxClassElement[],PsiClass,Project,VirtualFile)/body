{
  setText(DebuggerBundle.message("editor.notification.alternative.source",aClass.getQualifiedName()));
  final ComboBox switcher=new ComboBox(alternatives);
  switcher.addActionListener(new ActionListener(){
    @Override public void actionPerformed(    ActionEvent e){
      FileEditorManager.getInstance(project).closeFile(file);
      PsiClass item=((ComboBoxClassElement)switcher.getSelectedItem()).myClass;
      DebuggerUtilsEx.setAlternativeSource(file,item.getContainingFile().getVirtualFile());
      item.navigate(true);
      XDebugSession session=XDebuggerManager.getInstance(project).getCurrentSession();
      if (session != null) {
        session.updateExecutionPosition();
      }
    }
  }
);
  myLinksPanel.add(switcher);
  createActionLabel(DebuggerBundle.message("action.disable.text"),new Runnable(){
    @Override public void run(){
      DebuggerSettings.getInstance().SHOW_ALTERNATIVE_SOURCE=false;
      FILE_PROCESSED_KEY.set(file,null);
      FileEditorManager fileEditorManager=FileEditorManager.getInstance(project);
      FileEditor editor=fileEditorManager.getSelectedEditor(file);
      if (editor != null) {
        fileEditorManager.removeTopComponent(editor,AlternativeSourceNotificationPanel.this);
      }
    }
  }
);
}
