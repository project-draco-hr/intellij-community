{
  if (url.isEmpty()) {
    return "URL can't be empty";
  }
  if (!GitRefNameValidator.getInstance().checkInput(name)) {
    return "Remote name is invalid";
  }
  return ProgressManager.getInstance().runProcessWithProgressSynchronously(new ThrowableComputable<String,ProcessCanceledException>(){
    @Override public String compute() throws ProcessCanceledException {
      final GitCommandResult result=myGit.lsRemote(myRepository.getProject(),VfsUtilCore.virtualToIoFile(myRepository.getRoot()),url);
      return !result.success() ? "Remote URL is invalid: " + result.getErrorOutputAsHtmlString() : null;
    }
  }
,"Checking URL...",true,myRepository.getProject());
}
