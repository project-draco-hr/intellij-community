{
  super.visitCommand(o);
  final CommandLineFile file=getFile(o);
  if (file == null) {
    return;
  }
  final Pair<List<Command>,CommandExecutor> commandsAndExecutor=file.getCommandsAndDefaultExecutor();
  if (commandsAndExecutor == null) {
    return;
  }
  for (  final Command command : commandsAndExecutor.first) {
    if (o.getText().equals(command.getName())) {
      return;
    }
  }
  myHolder.registerProblem(o,PyBundle.message("commandLine.inspection.badCommand"));
}
