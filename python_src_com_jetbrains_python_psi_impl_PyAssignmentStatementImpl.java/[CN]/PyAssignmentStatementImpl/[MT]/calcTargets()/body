{
  final ASTNode[] eqSigns=getNode().getChildren(TokenSet.create(PyTokenTypes.EQ));
  if (eqSigns.length == 0) {
    return PyExpression.EMPTY_ARRAY;
  }
  final ASTNode lastEq=eqSigns[eqSigns.length - 1];
  List<PyExpression> candidates=new ArrayList<PyExpression>();
  ASTNode node=getNode().getFirstChildNode();
  while (node != null && node != lastEq) {
    final PsiElement psi=node.getPsi();
    if (psi instanceof PyExpression) {
      addCandidate(candidates,(PyExpression)psi);
    }
    node=node.getTreeNext();
  }
  List<PyExpression> targets=new ArrayList<PyExpression>();
  for (  PyExpression expr : candidates) {
    if (expr instanceof PyTargetExpression || expr instanceof PyReferenceExpression || expr instanceof PySubscriptionExpression|| expr instanceof PySliceExpression) {
      targets.add(expr);
    }
  }
  return targets.toArray(new PyExpression[targets.size()]);
}
