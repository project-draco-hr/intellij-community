{
  try {
    PerformanceWatcher.Snapshot snapshot=PerformanceWatcher.takeSnapshot();
    for (    AnalysisScope scope : myScopes) {
      builders.add(createDependenciesBuilder(scope));
    }
    for (    DependenciesBuilder builder : builders) {
      builder.analyze();
    }
    snapshot.logResponsivenessSinceCreation("Dependency analysis");
  }
 catch (  IndexNotReadyException e) {
    DumbService.getInstance(myProject).showDumbModeNotification("Analyze dependencies is not available until indices are ready");
    throw new ProcessCanceledException();
  }
}
