{
  final Set<String> allNames=ContainerUtil.newTroveSet();
  long start=System.currentTimeMillis();
  List<ChooseByNameContributor> liveContribs=filterDumb(myContributors);
  ProgressIndicator indicator=ProgressManager.getInstance().getProgressIndicator();
  JobLauncher.getInstance().invokeConcurrentlyUnderProgress(liveContribs,indicator,false,new Processor<ChooseByNameContributor>(){
    @Override public boolean process(    ChooseByNameContributor contributor){
      try {
        if (!myProject.isDisposed()) {
          String[] names=contributor.getNames(myProject,checkBoxState);
synchronized (allNames) {
            ContainerUtil.addAll(allNames,names);
          }
        }
      }
 catch (      ProcessCanceledException ex) {
      }
catch (      IndexNotReadyException ex) {
      }
catch (      Exception ex) {
        LOG.error(ex);
      }
      return true;
    }
  }
);
  indicator.checkCanceled();
  long finish=System.currentTimeMillis();
  if (LOG.isDebugEnabled()) {
    LOG.debug("getNames(): " + (finish - start) + "ms; (got "+ allNames.size()+ " elements)");
  }
  return ArrayUtil.toStringArray(allNames);
}
