{
  if (fileEditor instanceof TextEditor) {
    final Editor editor=((TextEditor)fileEditor).getEditor();
    final Project project=editor.getProject();
    if (project != null) {
      Document document=editor.getDocument();
      PsiDocumentManager documentManager=PsiDocumentManager.getInstance(project);
      PsiFile psiFile=documentManager.getPsiFile(document);
      final Ref<FileIndentOptionsProvider> indentOptionsProviderRef=new Ref<FileIndentOptionsProvider>();
      if (psiFile != null) {
        CodeStyleSettings settings=CodeStyleSettingsManager.getSettings(project);
        CommonCodeStyleSettings.IndentOptions userOptions=settings.getIndentOptions(psiFile.getFileType());
        CommonCodeStyleSettings.IndentOptions detectedOptions=CodeStyleSettingsManager.getSettings(project).getIndentOptionsByFile(psiFile,null,true,new Processor<FileIndentOptionsProvider>(){
          @Override public boolean process(          FileIndentOptionsProvider provider){
            indentOptionsProviderRef.set(provider);
            return false;
          }
        }
);
        final FileIndentOptionsProvider provider=indentOptionsProviderRef.get();
        if (provider != null && !provider.isAcceptedWithoutWarning(file) && provider.getDisplayName() != null && !userOptions.equals(detectedOptions)) {
          final EditorNotificationPanel panel=new EditorNotificationPanel().text(ApplicationBundle.message("code.style.indents.detector.message",provider.getDisplayName(),getOptionDiffInfoString(userOptions,detectedOptions)));
          if (provider.getIcon() != null) {
            panel.icon(provider.getIcon());
          }
          panel.createActionLabel(ApplicationBundle.message("code.style.indents.detector.accept"),new Runnable(){
            @Override public void run(){
              provider.setAccepted(file);
              EditorNotifications.getInstance(project).updateAllNotifications();
            }
          }
);
          if (provider.canBeDisabled()) {
            panel.createActionLabel(ApplicationBundle.message("code.style.indents.detector.disable"),new Runnable(){
              @Override public void run(){
                provider.disable(project);
                if (editor instanceof EditorEx) {
                  ((EditorEx)editor).reinitSettings();
                }
                EditorNotifications.getInstance(project).updateAllNotifications();
              }
            }
);
          }
          return panel;
        }
      }
    }
  }
  return null;
}
