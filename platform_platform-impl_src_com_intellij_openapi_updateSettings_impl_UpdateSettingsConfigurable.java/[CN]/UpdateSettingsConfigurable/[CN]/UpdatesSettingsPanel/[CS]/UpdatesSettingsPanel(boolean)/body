{
  mySettings=UpdateSettings.getInstance();
  ApplicationInfo appInfo=ApplicationInfo.getInstance();
  String majorVersion=appInfo.getMajorVersion();
  String versionNumber="";
  if (majorVersion != null && majorVersion.trim().length() > 0) {
    String minorVersion=appInfo.getMinorVersion();
    if (minorVersion != null && minorVersion.trim().length() > 0) {
      versionNumber=majorVersion + "." + minorVersion;
    }
 else {
      versionNumber=majorVersion + ".0";
    }
  }
  myVersionNumber.setText(appInfo.getVersionName() + " " + versionNumber);
  myBuildNumber.setText(appInfo.getBuild().asString());
  LabelTextReplacingUtil.replaceText(myPanel);
  if (checkNowEnabled) {
    myCheckNow.addActionListener(new ActionListener(){
      @Override public void actionPerformed(      ActionEvent e){
        Project project=CommonDataKeys.PROJECT.getData(DataManager.getInstance().getDataContext(myCheckNow));
        UpdateSettings settings=new UpdateSettings();
        settings.loadState(mySettings.getState());
        settings.setUpdateChannelType(getSelectedChannelType().getCode());
        settings.setSecureConnection(myUseSecureConnection.isSelected());
        UpdateChecker.updateAndShowResult(project,settings);
        updateLastCheckedLabel();
      }
    }
);
  }
 else {
    myCheckNow.setVisible(false);
  }
  final ChannelStatus current=ChannelStatus.fromCode(mySettings.getUpdateChannelType());
  myUpdateChannels.setModel(new CollectionComboBoxModel<ChannelStatus>(Arrays.asList(ChannelStatus.values()),current));
  myUpdateChannels.addActionListener(new ActionListener(){
    @Override public void actionPerformed(    ActionEvent e){
      boolean lessStable=current.compareTo(getSelectedChannelType()) > 0;
      myChannelWarning.setVisible(lessStable);
    }
  }
);
  myChannelWarning.setForeground(JBColor.RED);
}
