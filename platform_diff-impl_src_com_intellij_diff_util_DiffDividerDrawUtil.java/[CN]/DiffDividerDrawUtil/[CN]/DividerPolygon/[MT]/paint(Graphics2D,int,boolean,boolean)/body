{
  int startY1;
  int endY1;
  int startY2;
  int endY2;
  if (myEnd1 - myStart1 < 2) {
    startY1=myStart1 - 1;
    endY1=myStart1;
  }
 else {
    startY1=myStart1;
    endY1=myEnd1 - 1;
  }
  if (myEnd2 - myStart2 < 2) {
    startY2=myStart2 - 1;
    endY2=myStart2;
  }
 else {
    startY2=myStart2;
    endY2=myEnd2 - 1;
  }
  Stroke oldStroke=g.getStroke();
  if (myResolved) {
    g.setStroke(BOLD_DOTTED_STROKE);
  }
  Color fillColor=myResolved ? null : myColor;
  Color borderColor=myResolved ? myColor : null;
  if (curve) {
    DiffDrawUtil.drawCurveTrapezium(g,0,width,startY1,endY1,startY2,endY2,fillColor,borderColor);
  }
 else {
    DiffDrawUtil.drawTrapezium(g,0,width,startY1,endY1,startY2,endY2,fillColor,borderColor);
  }
  g.setStroke(oldStroke);
}
