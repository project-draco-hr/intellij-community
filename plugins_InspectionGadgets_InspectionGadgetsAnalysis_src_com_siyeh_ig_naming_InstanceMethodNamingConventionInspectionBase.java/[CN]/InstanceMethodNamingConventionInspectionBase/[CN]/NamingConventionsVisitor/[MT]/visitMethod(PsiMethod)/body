{
  super.visitMethod(method);
  if (method.isConstructor() || method.hasModifierProperty(PsiModifier.STATIC)) {
    return;
  }
  if (method.hasModifierProperty(PsiModifier.NATIVE) && isInspectionEnabled("NativeMethodNamingConvention",method)) {
    return;
  }
  final PsiIdentifier nameIdentifier=method.getNameIdentifier();
  if (nameIdentifier == null) {
    return;
  }
  if (TestUtils.isRunnable(method)) {
    if (TestUtils.isJUnit4TestMethod(method) && isInspectionEnabled("JUnit4MethodNamingConvention",method)) {
      return;
    }
    if (TestUtils.isJUnit3TestMethod(method) && isInspectionEnabled("JUnit3MethodNamingConvention",method)) {
      return;
    }
  }
  if (isTestNGTestMethod(method) && isInspectionEnabled("TestNGMethodNamingConvention",method)) {
    return;
  }
  final String name=method.getName();
  if (isValid(name)) {
    return;
  }
  if (!isOnTheFly() && MethodUtils.hasSuper(method)) {
    return;
  }
  if (LibraryUtil.isOverrideOfLibraryMethod(method)) {
    return;
  }
  registerMethodError(method,name);
}
