{
  final XmlTag parentTag=context.getParentTag();
  if (parentTag != null) {
    final XmlAttribute attribute=context.getAttribute(FxmlConstants.FX_CONTROLLER);
    if (attribute != null) {
      host.addMessage(attribute.getNameElement(),"fx:controller can only be applied to root element",ValidationHost.ErrorType.ERROR);
    }
  }
  PsiClass aClass=myPsiClass;
  final XmlAttribute constAttr=context.getAttribute(FxmlConstants.FX_CONSTANT);
  if (constAttr != null) {
    final PsiField constField=aClass.findFieldByName(constAttr.getValue(),false);
    if (constField != null) {
      aClass=PsiUtil.resolveClassInType(constField.getType());
    }
  }
 else {
    final XmlAttribute factoryAttr=context.getAttribute(FxmlConstants.FX_FACTORY);
    if (factoryAttr != null) {
      final XmlAttributeValue valueElement=factoryAttr.getValueElement();
      if (valueElement != null) {
        final PsiReference reference=valueElement.getReference();
        final PsiElement staticFactoryMethod=reference != null ? reference.resolve() : null;
        if (staticFactoryMethod instanceof PsiMethod && ((PsiMethod)staticFactoryMethod).getParameterList().getParametersCount() == 0 && ((PsiMethod)staticFactoryMethod).hasModifierProperty(PsiModifier.STATIC)) {
          aClass=PsiUtil.resolveClassInType(((PsiMethod)staticFactoryMethod).getReturnType());
        }
      }
    }
  }
  final String canCoerceError=JavaFxPsiUtil.isClassAcceptable(parentTag,aClass);
  if (canCoerceError != null) {
    host.addMessage(context.getNavigationElement(),canCoerceError,ValidationHost.ErrorType.ERROR);
  }
  if (aClass != null && aClass.isValid()) {
    final String message=JavaFxPsiUtil.isAbleToInstantiate(aClass);
    if (message != null) {
      host.addMessage(context,message,ValidationHost.ErrorType.ERROR);
    }
  }
}
