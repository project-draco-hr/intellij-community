{
  IElementType parentType=_node.getElementType();
  IElementType grandparentType=_node.getTreeParent() == null ? null : _node.getTreeParent().getElementType();
  IElementType childType=child.getElementType();
  Wrap wrap=null;
  Indent childIndent=Indent.getNoneIndent();
  Alignment childAlignment=null;
  if (childType == PyElementTypes.STATEMENT_LIST || childType == PyElementTypes.IMPORT_ELEMENT) {
    if (hasLineBreaksBefore(child,1)) {
      childIndent=Indent.getNormalIndent();
    }
  }
  if (ourListElementTypes.contains(parentType)) {
    if ((parentType != PyElementTypes.TUPLE_EXPRESSION || grandparentType == PyElementTypes.PARENTHESIZED_EXPRESSION) && !ourBrackets.contains(childType)) {
      wrap=Wrap.createWrap(WrapType.NORMAL,true);
    }
    if (needListAlignment(child) && !isEmptyList(_node.getPsi())) {
      childAlignment=getAlignmentForChildren();
    }
  }
 else   if (parentType == PyElementTypes.BINARY_EXPRESSION && PyElementTypes.EXPRESSIONS.contains(childType)) {
    childAlignment=getAlignmentForChildren();
  }
  if (parentType == PyElementTypes.LIST_LITERAL_EXPRESSION) {
    if (childType == PyTokenTypes.RBRACKET || childType == PyTokenTypes.LBRACKET) {
      childIndent=Indent.getNoneIndent();
    }
 else {
      childIndent=Indent.getNormalIndent();
    }
  }
 else   if (parentType == PyElementTypes.ARGUMENT_LIST) {
    if (childType == PyTokenTypes.RPAR) {
      childIndent=Indent.getNoneIndent();
    }
 else {
      childIndent=Indent.getNormalIndent();
    }
  }
 else   if (parentType == PyElementTypes.DICT_LITERAL_EXPRESSION || parentType == PyElementTypes.SET_LITERAL_EXPRESSION) {
    if (childType == PyTokenTypes.RBRACE) {
      childIndent=Indent.getNoneIndent();
    }
 else {
      childIndent=Indent.getNormalIndent();
    }
  }
 else   if (parentType == PyElementTypes.STRING_LITERAL_EXPRESSION) {
    if (PyTokenTypes.STRING_NODES.contains(childType)) {
      childAlignment=getAlignmentForChildren();
    }
  }
 else   if (parentType == PyElementTypes.FROM_IMPORT_STATEMENT) {
    if ((childType == PyElementTypes.IMPORT_ELEMENT || childType == PyTokenTypes.RPAR) && _node.findChildByType(PyTokenTypes.LPAR) != null) {
      childAlignment=getAlignmentForChildren();
    }
  }
 else   if (parentType == PyElementTypes.KEY_VALUE_EXPRESSION) {
    PyKeyValueExpression keyValue=(PyKeyValueExpression)_node.getPsi();
    if (keyValue != null && child.getPsi() == keyValue.getValue()) {
      childIndent=Indent.getNormalIndent();
    }
  }
 else   if (parentType == PyElementTypes.PARENTHESIZED_EXPRESSION) {
    childIndent=Indent.getNormalIndent();
  }
  if (isAfterStatementList(child) && !hasLineBreaksBefore(child,2)) {
    childIndent=Indent.getNormalIndent();
  }
  return new PyBlock(child,childAlignment,childIndent,wrap,mySettings);
}
