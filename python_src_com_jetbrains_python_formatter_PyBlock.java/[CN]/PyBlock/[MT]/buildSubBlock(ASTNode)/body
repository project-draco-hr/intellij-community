{
  IElementType parentType=_node.getElementType();
  IElementType childType=child.getElementType();
  Wrap wrap=null;
  Indent childIndent=Indent.getNoneIndent();
  Alignment childAlignment=null;
  if (childType == PyElementTypes.STATEMENT_LIST || childType == PyElementTypes.IMPORT_ELEMENT) {
    if (hasLineBreakBefore(child)) {
      childIndent=Indent.getNormalIndent();
    }
  }
  if (_listElementTypes.contains(parentType)) {
    wrap=Wrap.createWrap(WrapType.NORMAL,true);
    if (!PyTokenTypes.OPEN_BRACES.contains(childType) && !PyTokenTypes.CLOSE_BRACES.contains(childType)) {
      childAlignment=_childListAlignment;
    }
  }
  if (parentType == PyElementTypes.LIST_LITERAL_EXPRESSION || parentType == PyElementTypes.ARGUMENT_LIST) {
    childIndent=Indent.getContinuationIndent();
  }
  try {
    PsiElement prev=sure(child.getPsi().getPrevSibling());
    sure(prev instanceof PyStatement);
    PsiElement lastchild=PsiTreeUtil.getDeepestLast(prev);
    sure(lastchild.getParent() instanceof PyStatementList);
    childIndent=Indent.getNormalIndent();
  }
 catch (  IncorrectOperationException ignored) {
  }
  return new PyBlock(_language,child,childAlignment,childIndent,wrap,_settings);
}
