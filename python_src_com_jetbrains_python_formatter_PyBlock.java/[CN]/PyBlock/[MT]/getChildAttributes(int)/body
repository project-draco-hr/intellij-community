{
  int statementListsBelow=0;
  if (newChildIndex > 0) {
    PyBlock insertAfterBlock=(PyBlock)_subBlocks.get(newChildIndex - 1);
    ASTNode lastChild=insertAfterBlock.getNode();
    while (lastChild != null) {
      if (lastChild.getElementType() == PyElementTypes.STATEMENT_LIST && hasLineBreakBefore(lastChild)) {
        statementListsBelow++;
      }
 else       if (statementListsBelow > 0 && lastChild.getPsi() instanceof PsiErrorElement) {
        statementListsBelow++;
      }
      if (_node.getElementType() == PyElementTypes.STATEMENT_LIST && lastChild.getPsi() instanceof PsiErrorElement) {
        return ChildAttributes.DELEGATE_TO_PREV_CHILD;
      }
      lastChild=getLastNonSpaceChild(lastChild,true);
    }
  }
  if (statementListsBelow > 1) {
    int indent=_settings.getIndentSize(_language.getAssociatedFileType());
    return new ChildAttributes(Indent.getSpaceIndent(indent * statementListsBelow),null);
  }
  return new ChildAttributes(getChildIndent(newChildIndex),getChildAlignment());
}
