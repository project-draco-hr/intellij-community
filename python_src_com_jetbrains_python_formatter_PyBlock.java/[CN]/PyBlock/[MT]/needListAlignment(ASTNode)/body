{
  IElementType childType=child.getElementType();
  ASTNode firstGrandchild=child.getFirstChildNode();
  IElementType firstGrandchildType=firstGrandchild == null ? null : firstGrandchild.getElementType();
  if (PyTokenTypes.OPEN_BRACES.contains(childType)) {
    return false;
  }
  if (PyTokenTypes.OPEN_BRACES.contains(firstGrandchildType)) {
    PsiElement psi=child.getPsi();
    if (psi instanceof PySequenceExpression && ((PySequenceExpression)psi).getElements().length == 0) {
      return false;
    }
  }
  if (PyTokenTypes.CLOSE_BRACES.contains(childType)) {
    ASTNode prevNonSpace=findPrevNonSpaceNode(child);
    if (prevNonSpace != null && prevNonSpace.getElementType() == PyTokenTypes.COMMA && myContext.getMode() == FormattingMode.ADJUST_INDENT) {
      return true;
    }
    return !hasHangingIndent(_node.getPsi());
  }
  if (_node.getElementType() == PyElementTypes.ARGUMENT_LIST) {
    if (!myContext.getSettings().ALIGN_MULTILINE_PARAMETERS_IN_CALLS || hasHangingIndent(_node.getPsi())) {
      return false;
    }
    if (child.getElementType() == PyTokenTypes.COMMA) {
      return false;
    }
    return true;
  }
  if (_node.getElementType() == PyElementTypes.PARAMETER_LIST) {
    return !hasHangingIndent(_node.getPsi()) && myContext.getSettings().ALIGN_MULTILINE_PARAMETERS;
  }
  if (_node.getElementType() == PyElementTypes.SUBSCRIPTION_EXPRESSION) {
    return false;
  }
  if (child.getElementType() == PyTokenTypes.COMMA) {
    return false;
  }
  return myContext.getPySettings().ALIGN_COLLECTIONS_AND_COMPREHENSIONS;
}
