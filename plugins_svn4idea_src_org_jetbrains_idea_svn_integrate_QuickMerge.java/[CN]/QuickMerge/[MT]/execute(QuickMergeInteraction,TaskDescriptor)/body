{
  myInteraction=interaction;
  myInteraction.setTitle(myMergeContext.getTitle());
  FileDocumentManager.getInstance().saveAllDocuments();
  final List<TaskDescriptor> tasks=new LinkedList<>();
  tasks.add(new MergeInitChecksTask(myMergeContext,myInteraction));
  tasks.add(new CheckRepositorySupportsMergeInfoTask(myMergeContext,myInteraction));
  if (finalTasks.length > 0) {
    tasks.addAll(Arrays.asList(finalTasks));
  }
  myContinuation.addExceptionHandler(VcsException.class,new Consumer<VcsException>(){
    @Override public void consume(    VcsException e){
      myInteraction.showErrors(myMergeContext.getTitle(),singletonList(e));
    }
  }
);
  myContinuation.addExceptionHandler(SVNException.class,new Consumer<SVNException>(){
    @Override public void consume(    SVNException e){
      myInteraction.showErrors(myMergeContext.getTitle(),singletonList(new VcsException(e)));
    }
  }
);
  myContinuation.addExceptionHandler(RuntimeException.class,new Consumer<RuntimeException>(){
    @Override public void consume(    RuntimeException e){
      myInteraction.showErrors(notNull(e.getMessage(),e.getClass().getName()),singletonList(new VcsException(e)));
    }
  }
);
  myContinuation.run(tasks);
}
