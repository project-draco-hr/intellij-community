{
  this.startLogicalColumn=endLogicalColumn=startLogicalColumn;
  int indexSize=(fragments.size() - 1) / INDEX_FREQUENCY;
  if (indexSize > 0) {
    offsetIndex=new int[indexSize];
  }
  int i=0;
  int offset=startOffset;
  for (  LineFragment fragment : fragments) {
    if (offsetIndex != null && i > 0 && (i % INDEX_FREQUENCY) == 0) {
      int pos=i / INDEX_FREQUENCY - 1;
      offsetIndex[pos]=offset;
      if (logicalColumnIndex == null && offset != endLogicalColumn) {
        logicalColumnIndex=new int[indexSize];
        System.arraycopy(offsetIndex,0,logicalColumnIndex,0,pos);
      }
      if (logicalColumnIndex != null) {
        logicalColumnIndex[pos]=endLogicalColumn;
      }
    }
    i++;
    offset+=fragment.getLength();
    endLogicalColumn+=fragment.getLogicalColumnCount(endLogicalColumn);
  }
  return endLogicalColumn;
}
