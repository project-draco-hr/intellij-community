{
  return ApplicationManager.getApplication().runReadAction(new Computable<SourcePosition>(){
    @Override public SourcePosition compute(){
      PsiFile file=original.getFile();
      int line=original.getLine();
      if (DebuggerUtilsEx.isLambdaName(myExpectedMethodName) && myLambdaOrdinal > -1) {
        List<PsiLambdaExpression> lambdas=DebuggerUtilsEx.collectLambdas(original,true);
        Document document=PsiDocumentManager.getInstance(file.getProject()).getDocument(file);
        if (document == null || line >= document.getLineCount()) {
          return original;
        }
        if (myLambdaOrdinal < lambdas.size()) {
          PsiElement firstElem=DebuggerUtilsEx.getFirstElementOnTheLine(lambdas.get(myLambdaOrdinal),document,line);
          if (firstElem != null) {
            return SourcePosition.createFromElement(firstElem);
          }
        }
      }
 else {
        for (        PsiElement elem : getLineElements(file,line)) {
          PsiElement remappedElement=remapElement(elem);
          if (remappedElement != null) {
            if (remappedElement.getTextOffset() <= original.getOffset())             break;
            return SourcePosition.createFromElement(remappedElement);
          }
        }
      }
      return original;
    }
  }
);
}
