{
  PsiClass aClass=getEnclosingClass(element);
  if (!Comparing.equal(myExpectedClassName,JVMNameUtil.getClassVMName(aClass))) {
    return null;
  }
  NavigatablePsiElement method=PsiTreeUtil.getParentOfType(element,PsiMethod.class,PsiLambdaExpression.class);
  if (!StringUtil.isEmpty(myExpectedMethodName)) {
    if (method == null) {
      return null;
    }
 else     if ((method instanceof PsiMethod && myExpectedMethodName.equals(((PsiMethod)method).getName()))) {
      return element;
    }
 else     if (method instanceof PsiLambdaExpression && myExpectedMethodName.startsWith(LambdaMethodFilter.LAMBDA_METHOD_PREFIX)) {
      return ((PsiLambdaExpression)method).getBody();
    }
  }
  return null;
}
