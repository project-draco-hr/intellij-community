{
  ApplicationManager.getApplication().assertReadAccessAllowed();
  Document document=PsiDocumentManager.getInstance(file.getProject()).getDocument(file);
  if (document == null || lineNumber < 0 || lineNumber >= document.getLineCount()) {
    return EmptyIterable.getInstance();
  }
  final TextRange lineRange=DocumentUtil.getLineTextRange(document,lineNumber);
  return new Iterable<PsiElement>(){
    @Override public Iterator<PsiElement> iterator(){
      return new Iterator<PsiElement>(){
        PsiElement myElement=DebuggerUtilsEx.findElementAt(file,lineRange.getStartOffset());
        @Override public boolean hasNext(){
          return myElement != null;
        }
        @Override public PsiElement next(){
          PsiElement res=myElement;
          do {
            myElement=PsiTreeUtil.nextLeaf(myElement);
            if (myElement == null || myElement.getTextOffset() > lineRange.getEndOffset()) {
              myElement=null;
              break;
            }
          }
 while (myElement.getTextLength() == 0);
          return res;
        }
        @Override public void remove(){
        }
      }
;
    }
  }
;
}
