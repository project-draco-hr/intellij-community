{
  if (location == null) {
    return null;
  }
  final ReferenceType refType=location.declaringType();
  if (refType == null) {
    return null;
  }
  final String originalQName=refType.name();
  PsiClass psiClass=null;
  Sdk alternativeJre=myDebugProcess.getSession().getAlternativeJre();
  if (alternativeJre != null) {
    psiClass=findClass(project,originalQName,AlternativeJreClassFinder.getSearchScope(alternativeJre));
    if (psiClass instanceof ClsClassImpl) {
      PsiFile psiSource=findSourceFile((ClsClassImpl)psiClass,alternativeJre);
      if (psiSource != null) {
        return psiSource;
      }
    }
  }
  if (psiClass == null) {
    psiClass=findClass(project,originalQName,myDebugProcess.getSearchScope());
  }
  if (psiClass != null) {
    PsiElement element=psiClass.getNavigationElement();
    if (element instanceof PsiCompiledElement) {
      PsiElement fileElement=psiClass.getContainingFile().getNavigationElement();
      if (!(fileElement instanceof PsiCompiledElement)) {
        element=fileElement;
      }
    }
    return element.getContainingFile();
  }
 else {
    try {
      PsiFile[] files=FilenameIndex.getFilesByName(project,refType.sourceName(),GlobalSearchScope.allScope(project));
      for (      PsiFile file : files) {
        if (file instanceof PsiJavaFile) {
          for (          PsiClass cls : ((PsiJavaFile)file).getClasses()) {
            if (StringUtil.equals(originalQName,cls.getQualifiedName())) {
              return file;
            }
          }
        }
      }
    }
 catch (    AbsentInformationException ignore) {
    }
  }
  return null;
}
