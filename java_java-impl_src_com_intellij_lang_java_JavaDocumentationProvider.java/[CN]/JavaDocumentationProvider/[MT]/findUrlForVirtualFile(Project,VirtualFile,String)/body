{
  final ProjectFileIndex fileIndex=ProjectRootManager.getInstance(project).getFileIndex();
  Module module=fileIndex.getModuleForFile(virtualFile);
  if (module == null) {
    final VirtualFileSystem fs=virtualFile.getFileSystem();
    if (fs instanceof JarFileSystem) {
      final VirtualFile jar=((JarFileSystem)fs).getVirtualFileForJar(virtualFile);
      if (jar != null) {
        module=fileIndex.getModuleForFile(jar);
      }
    }
  }
  if (module != null) {
    String[] javadocPaths=JavaModuleExternalPaths.getInstance(module).getJavadocUrls();
    final List<String> httpRoots=PlatformDocumentationUtil.getHttpRoots(javadocPaths,relPath);
    if (httpRoots != null || !fileIndex.isInLibraryClasses(virtualFile)) {
      return httpRoots;
    }
  }
  for (  OrderEntry orderEntry : fileIndex.getOrderEntriesForFile(virtualFile)) {
    List<String> httpRoot=PlatformDocumentationUtil.getHttpRoots(JavadocOrderRootType.getUrls(orderEntry),relPath);
    if (httpRoot != null) {
      return httpRoot;
    }
  }
  return null;
}
