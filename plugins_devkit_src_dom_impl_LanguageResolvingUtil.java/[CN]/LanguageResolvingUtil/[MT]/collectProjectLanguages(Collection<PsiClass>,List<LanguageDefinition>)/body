{
  return ContainerUtil.mapNotNull(projectLanguages,new NullableFunction<PsiClass,LanguageDefinition>(){
    @Nullable @Override public LanguageDefinition fun(    final PsiClass language){
      if (language.hasModifierProperty(PsiModifier.ABSTRACT)) {
        return null;
      }
      if (ContainerUtil.exists(libraryLanguages,new Condition<LanguageDefinition>(){
        @Override public boolean value(        LanguageDefinition definition){
          return definition.clazz.equals(language);
        }
      }
)) {
        return null;
      }
      String id=computeConstantSuperCtorCallParameter(language,0);
      if (id == null) {
        id=computeConstantSuperCtorCallParameter(language,1);
      }
      if (id == null) {
        id=computeConstantReturnValue(language,"getID");
      }
      if (StringUtil.isEmpty(id)) {
        return null;
      }
      return new LanguageDefinition(id,language,null,computeConstantReturnValue(language,"getDisplayName"));
    }
  }
);
}
