{
  if (psiElement instanceof PsiMethodCallExpression) {
    final PsiExpression[] args=((PsiMethodCallExpression)psiElement).getArgumentList().getExpressions();
    if (args.length > 0 && args[0] instanceof PsiLiteralExpression && args[0].isValid() && PropertyFoldingBuilder.isI18nProperty((PsiLiteralExpression)args[0])) {
      final int count=JavaI18nUtil.getPropertyValueParamsMaxCount(args[0]);
      if (args.length == 1 + count) {
        IProperty property=PropertyFoldingBuilder.getI18nProperty((PsiLiteralExpression)args[0]);
        String text=property != null ? property.getValue() : null;
        if (text == null) {
          return null;
        }
        for (int i=1; i < count + 1; i++) {
          Object value=JavaConstantExpressionEvaluator.computeConstantExpression(args[i],false);
          if (value == null) {
            return null;
          }
          text=text.replace("{" + (i - 1) + "}",value.toString());
        }
        return text == null || text.equals(psiElement.getText()) ? text : text.replace("''","'");
      }
    }
  }
  final Pair<PsiElement,String> pair=StringExpressionHelper.evaluateConstantExpression(psiElement);
  return pair != null ? pair.second : null;
}
