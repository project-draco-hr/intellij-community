{
  if (expression instanceof PsiPrefixExpression) {
    return evaluate(expression) != null;
  }
  if (expression instanceof PsiPolyadicExpression) {
    final PsiPolyadicExpression polyadicExpression=(PsiPolyadicExpression)expression;
    final IElementType sign=polyadicExpression.getOperationTokenType();
    if (!booleanTokens.contains(sign)) {
      return false;
    }
    final PsiExpression[] operands=polyadicExpression.getOperands();
    boolean containsConstant=false;
    for (    PsiExpression operand : operands) {
      if (operand == null) {
        return false;
      }
      final PsiType type=operand.getType();
      if (type == null || !type.equals(PsiType.BOOLEAN) && !type.equalsToText(CommonClassNames.JAVA_LANG_BOOLEAN)) {
        return false;
      }
      containsConstant|=evaluate(operand) != null;
    }
    return containsConstant;
  }
  return false;
}
