{
  final SvnAuthenticationManager passive=myVcs.getSvnConfiguration().getPassiveAuthenticationManager(myVcs.getProject());
  final SvnAuthenticationManager active=myVcs.getSvnConfiguration().getAuthenticationManager(myVcs);
  try {
    boolean authenticated=getWithPassive(passive) || getWithActive(active);
    if (!authenticated)     return false;
    SvnAuthenticationManager manager=myStoreInUsual ? active : createTmpManager();
    manager.setArtificialSaving(true);
    return acknowledge(manager);
  }
 catch (  IOException e) {
    LOG.info(e);
    VcsBalloonProblemNotifier.showOverChangesView(myVcs.getProject(),e.getMessage(),MessageType.ERROR);
    return false;
  }
catch (  SVNException e) {
    LOG.info(e);
    VcsBalloonProblemNotifier.showOverChangesView(myVcs.getProject(),e.getMessage(),MessageType.ERROR);
    return false;
  }
}
