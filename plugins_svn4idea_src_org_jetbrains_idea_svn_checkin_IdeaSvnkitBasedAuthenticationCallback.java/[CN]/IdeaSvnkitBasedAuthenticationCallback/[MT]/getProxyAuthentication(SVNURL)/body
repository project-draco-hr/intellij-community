{
  final Proxy proxy=getIdeaDefinedProxy(repositoryUrl);
  if (proxy == null)   return null;
  if (myProxyCredentialsWereReturned) {
    final HttpConfigurable instance=HttpConfigurable.getInstance();
    if (instance.USE_HTTP_PROXY || instance.USE_PROXY_PAC) {
      PopupUtil.showBalloonForActiveComponent("Failed to authenticate to proxy. You can change proxy credentials in HTTP proxy settings.",MessageType.ERROR);
    }
 else {
      PopupUtil.showBalloonForActiveComponent("Failed to authenticate to proxy.",MessageType.ERROR);
    }
    return null;
  }
  final InetSocketAddress address=(InetSocketAddress)proxy.address();
  final PasswordAuthentication authentication;
  try {
    authentication=Authenticator.requestPasswordAuthentication(repositoryUrl.getHost(),address.getAddress(),repositoryUrl.getPort(),repositoryUrl.getProtocol(),repositoryUrl.getHost(),repositoryUrl.getProtocol(),new URL(repositoryUrl.toString()),Authenticator.RequestorType.PROXY);
  }
 catch (  MalformedURLException e) {
    LOG.info(e);
    return null;
  }
  if (authentication != null) {
    myProxyCredentialsWereReturned=true;
  }
  return authentication;
}
