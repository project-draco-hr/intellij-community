{
  return new GroovyPsiElementVisitor(new GroovyElementVisitor(){
    @Override public void visitExpression(    @NotNull GrExpression expression){
      PsiElement expressionParent=expression.getParent();
      if (!(expressionParent instanceof GrParameter))       return;
      GrParameter parameter=(GrParameter)expressionParent;
      if (parameter.getInitializerGroovy() != expression)       return;
      PsiElement parameterParent=parameter.getParent();
      if (!(parameterParent instanceof GrParameterList))       return;
      PsiElement parameterListParent=parameterParent.getParent();
      if (!(parameterListParent instanceof GrMethod))       return;
      GrMethod method=(GrMethod)parameterListParent;
      if (PsiUtil.OPERATOR_METHOD_NAMES.contains(method.getName()))       return;
      if (isInitializerUnused(parameter,method)) {
        holder.registerProblem(expression,message("unused.default.parameter.message"),ProblemHighlightType.LIKE_UNUSED_SYMBOL,new RemoveElementQuickFix(message("unused.default.parameter.fix")));
      }
    }
  }
);
}
