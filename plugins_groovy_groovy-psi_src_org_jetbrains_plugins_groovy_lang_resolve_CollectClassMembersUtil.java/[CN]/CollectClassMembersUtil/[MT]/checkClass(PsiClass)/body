{
  Set<PsiClass> visited=ContainerUtil.newHashSet();
  Queue<PsiClass> queue=ContainerUtil.newLinkedList(aClass);
  while (!queue.isEmpty()) {
    PsiClass current=queue.poll();
    if (current instanceof ClsClassImpl)     continue;
    if (visited.add(current)) {
      if (TransformationUtilKt.isUnderTransformation(current))       return false;
      for (      PsiClass superClass : getSupers(current,true)) {
        queue.offer(superClass);
      }
    }
 else     if (!current.isInterface() && !CommonClassNames.JAVA_LANG_OBJECT.equals(current.getQualifiedName())) {
      return false;
    }
  }
  return true;
}
