{
  return CachedValuesManager.getManager(aClass.getProject()).createCachedValue(new CachedValueProvider<ClassMembers>(){
    @Override public Result<ClassMembers> compute(){
      LinkedHashMap<String,CandidateInfo> allFields=ContainerUtil.newLinkedHashMap();
      LinkedHashMap<String,List<CandidateInfo>> allMethods=ContainerUtil.newLinkedHashMap();
      LinkedHashMap<String,CandidateInfo> allInnerClasses=ContainerUtil.newLinkedHashMap();
      processClass(aClass,allFields,allMethods,allInnerClasses,new HashSet<PsiClass>(),PsiSubstitutor.EMPTY,includeSynthetic);
      return Result.create(ClassMembers.create(allFields,allMethods,allInnerClasses),PsiModificationTracker.OUT_OF_CODE_BLOCK_MODIFICATION_COUNT);
    }
  }
,false);
}
