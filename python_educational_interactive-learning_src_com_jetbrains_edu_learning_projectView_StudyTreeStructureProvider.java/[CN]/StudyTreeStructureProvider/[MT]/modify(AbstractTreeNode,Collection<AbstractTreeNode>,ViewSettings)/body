{
  if (!isCourseBasedProject(parent)) {
    return children;
  }
  Collection<AbstractTreeNode> nodes=new ArrayList<AbstractTreeNode>();
  for (  AbstractTreeNode node : children) {
    final Project project=node.getProject();
    if (project != null) {
      if (node.getValue() instanceof PsiDirectory) {
        final PsiDirectory nodeValue=(PsiDirectory)node.getValue();
        if (!nodeValue.getName().contains(StudyNames.USER_TESTS)) {
          StudyDirectoryNode newNode=new StudyDirectoryNode(project,nodeValue,settings);
          nodes.add(newNode);
        }
      }
 else {
        if (parent instanceof StudyDirectoryNode && node instanceof PsiFileNode) {
          final PsiFileNode psiFileNode=(PsiFileNode)node;
          final VirtualFile virtualFile=psiFileNode.getVirtualFile();
          if (virtualFile == null) {
            return nodes;
          }
          final TaskFile taskFile=StudyUtils.getTaskFile(project,virtualFile);
          if (taskFile != null) {
            nodes.add(node);
          }
          final String parentName=parent.getName();
          if (parentName != null) {
            if (parentName.equals(StudyNames.SANDBOX_DIR)) {
              nodes.add(node);
            }
          }
        }
      }
    }
  }
  return nodes;
}
