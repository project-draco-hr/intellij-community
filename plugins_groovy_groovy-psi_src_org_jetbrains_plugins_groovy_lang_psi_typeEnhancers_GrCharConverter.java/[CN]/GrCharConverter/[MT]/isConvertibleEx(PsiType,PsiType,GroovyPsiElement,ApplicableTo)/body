{
  if (PsiType.CHAR != TypesUtil.unboxPrimitiveTypeWrapper(lType))   return null;
  if (PsiType.CHAR == TypesUtil.unboxPrimitiveTypeWrapper(rType))   return ConversionResult.OK;
  if (TypesUtil.isNumericType(rType)) {
    if (rType instanceof PsiPrimitiveType || currentPosition != ApplicableTo.EXPLICIT_CAST && TypesUtil.unboxPrimitiveTypeWrapper(rType) instanceof PsiPrimitiveType) {
      return PsiType.CHAR == lType ? ConversionResult.OK : ConversionResult.ERROR;
    }
 else {
      return ConversionResult.ERROR;
    }
  }
{
    final GrExpression rValue;
    if (context instanceof GrAssignmentExpression) {
      final GrAssignmentExpression assignmentExpression=(GrAssignmentExpression)context;
      rValue=assignmentExpression.getRValue();
    }
 else     if (context instanceof GrVariable) {
      final GrVariable assignmentExpression=(GrVariable)context;
      rValue=assignmentExpression.getInitializerGroovy();
    }
 else {
      rValue=null;
    }
    if (rValue instanceof GrListOrMap && ((GrListOrMap)rValue).isEmpty()) {
      return ConversionResult.WARNING;
    }
  }
  if (PsiType.BOOLEAN == TypesUtil.unboxPrimitiveTypeWrapper(rType)) {
switch (currentPosition) {
case EXPLICIT_CAST:
      return ConversionResult.ERROR;
case ASSIGNMENT:
case RETURN_VALUE:
    return ConversionResult.WARNING;
default :
  return null;
}
}
if (currentPosition == ApplicableTo.RETURN_VALUE) {
return null;
}
if (!TypesUtil.isClassType(rType,CommonClassNames.JAVA_LANG_STRING)) return null;
final GrLiteral literal=getLiteral(context);
final Object value=literal == null ? null : literal.getValue();
return value == null ? null : value.toString().length() == 1 ? ConversionResult.OK : ConversionResult.ERROR;
}
