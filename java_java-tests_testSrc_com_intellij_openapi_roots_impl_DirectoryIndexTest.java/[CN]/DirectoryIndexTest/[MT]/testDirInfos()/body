{
  checkNotInProject(myRootVFile);
  checkInfo(myFileLibSrc,null,false,true,"",null,myModule);
  checkInfo(myFileLibCls,null,true,false,"",null,myModule);
  checkInfo(myModule1Dir,myModule,false,false,null,null);
  checkInfo(mySrcDir1,myModule,false,false,"",JavaSourceRootType.SOURCE,myModule);
  checkInfo(myPack1Dir,myModule,false,false,"pack1",JavaSourceRootType.SOURCE,myModule);
  checkInfo(myTestSrc1,myModule,false,false,"",JavaSourceRootType.TEST_SOURCE,myModule);
  checkInfo(myPack2Dir,myModule,false,false,"pack2",JavaSourceRootType.TEST_SOURCE,myModule);
  checkInfo(myResDir,myModule,false,false,"",JavaResourceRootType.RESOURCE,myModule);
  checkInfo(myTestResDir,myModule,false,false,"",JavaResourceRootType.TEST_RESOURCE,myModule);
  checkInfo(myLibDir,myModule,false,false,null,null);
  checkInfo(myLibSrcDir,myModule,false,true,"",null,myModule2,myModule3);
  checkInfo(myLibClsDir,myModule,true,false,"",null,myModule2,myModule3);
  assertEquals(myLibSrcDir,checkInProject(myLibSrcDir).getSourceRoot());
  checkInfo(myModule2Dir,myModule2,false,false,null,null);
  checkInfo(mySrcDir2,myModule2,false,false,"",JavaSourceRootType.SOURCE,myModule2,myModule3);
  checkNotInProject(myCvsDir);
  checkExcluded(myExcludeDir,myModule2);
  checkExcluded(myExcludedLibClsDir,myModule);
  checkExcluded(myExcludedLibSrcDir,myModule);
  assertEquals(myModule1Dir,checkInProject(myLibClsDir).getContentRoot());
  checkInfo(myModule3Dir,myModule3,false,false,null,null);
  VirtualFile cvs=myPack1Dir.createChildDirectory(this,"CVS");
  checkNotInProject(cvs);
  assertNull(ProjectRootManager.getInstance(myProject).getFileIndex().getPackageNameByDirectory(cvs));
}
