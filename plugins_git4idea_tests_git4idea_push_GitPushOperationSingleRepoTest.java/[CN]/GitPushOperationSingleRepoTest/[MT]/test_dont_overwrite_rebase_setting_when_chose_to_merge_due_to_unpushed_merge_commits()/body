{
  generateUnpushedMergedCommitProblem();
  myGitSettings.setUpdateType(UpdateMethod.REBASE);
  final Ref<Boolean> rebaseOverMergeProblemDetected=Ref.create(false);
  myDialogManager.registerDialogHandler(GitRejectedPushUpdateDialog.class,new TestDialogHandler<GitRejectedPushUpdateDialog>(){
    @Override public int handleDialog(    @NotNull GitRejectedPushUpdateDialog dialog){
      rebaseOverMergeProblemDetected.set(dialog.warnsAboutRebaseOverMerge());
      return GitRejectedPushUpdateDialog.MERGE_EXIT_CODE;
    }
  }
);
  push("master","origin/master");
  assertTrue(rebaseOverMergeProblemDetected.get());
  assertEquals("Update method was overwritten by temporary update-via-merge decision",UpdateMethod.REBASE,myGitSettings.getUpdateType());
}
