{
  generateUpdateNeeded();
  myGitSettings.setUpdateType(UpdateMethod.BRANCH_DEFAULT);
  git("config branch.master.rebase true");
  final Ref<String> defaultActionName=Ref.create();
  myDialogManager.registerDialogHandler(GitRejectedPushUpdateDialog.class,new TestDialogHandler<GitRejectedPushUpdateDialog>(){
    @Override public int handleDialog(    @NotNull GitRejectedPushUpdateDialog dialog){
      defaultActionName.set((String)dialog.getDefaultAction().getValue(Action.NAME));
      return DialogWrapper.CANCEL_EXIT_CODE;
    }
  }
);
  push("master","origin/master");
  assertTrue("Default action in rejected-push dialog is incorrect: " + defaultActionName.get(),defaultActionName.get().toLowerCase().contains("rebase"));
  git("config branch.master.rebase false");
  push("master","origin/master");
  assertTrue("Default action in rejected-push dialog is incorrect: " + defaultActionName.get(),defaultActionName.get().toLowerCase().contains("merge"));
}
