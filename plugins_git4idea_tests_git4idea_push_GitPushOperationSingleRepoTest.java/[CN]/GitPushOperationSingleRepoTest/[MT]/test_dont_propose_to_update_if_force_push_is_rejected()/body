{
  final Ref<Boolean> dialogShown=Ref.create(false);
  myDialogManager.registerDialogHandler(GitRejectedPushUpdateDialog.class,new TestDialogHandler<GitRejectedPushUpdateDialog>(){
    @Override public int handleDialog(    GitRejectedPushUpdateDialog dialog){
      dialogShown.set(true);
      return DialogWrapper.CANCEL_EXIT_CODE;
    }
  }
);
  Pair<String,GitPushResult> remoteTipAndPushResult=forcePushWithReject();
  assertResult(REJECTED,-1,"master","origin/master",remoteTipAndPushResult.second);
  assertFalse("Rejected push dialog should not be shown",dialogShown.get());
  cd(myParentRepo.getPath());
  assertEquals("The commit pushed from bro should be the last one",remoteTipAndPushResult.first,last());
}
