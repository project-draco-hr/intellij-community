{
  if (registeredLibraries == null) {
    registeredLibraries=new HashMap<String,RepositoryLibraryDescription>();
    for (    RepositoryLibraryDescription description : EP_NAME.getExtensions()) {
      String id=description.getGroupId() + ":" + description.getArtifactId();
      RepositoryLibraryDescription existDescription=registeredLibraries.get(id);
      if (existDescription == null || existDescription.getWeight() >= description.getWeight()) {
        continue;
      }
      registeredLibraries.put(id,description);
    }
  }
  String id=properties.getGroupId() + ":" + properties.getArtifactId();
  RepositoryLibraryDescription description=registeredLibraries.get(id);
  if (description != null) {
    return description;
  }
  return new RepositoryLibraryDescription(){
    @NotNull @Override public String getGroupId(){
      return properties.getGroupId();
    }
    @NotNull @Override public String getArtifactId(){
      return properties.getArtifactId();
    }
    @NotNull @Override public String getDisplayName(){
      return properties.getGroupId() + ":" + properties.getArtifactId();
    }
    @NotNull @Override public Icon getIcon(){
      return MavenIcons.MavenLogo;
    }
  }
;
}
