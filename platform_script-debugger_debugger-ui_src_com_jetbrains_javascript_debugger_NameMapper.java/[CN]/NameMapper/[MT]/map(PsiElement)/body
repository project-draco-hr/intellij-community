{
  int offset=identifierOrNamedElement.getTextOffset();
  int line=document.getLineNumber(offset);
  int sourceEntryIndex=sourceMappings.indexOf(line,offset - document.getLineStartOffset(line));
  if (sourceEntryIndex == -1) {
    return null;
  }
  MappingEntry sourceEntry=sourceMappings.get(sourceEntryIndex);
  MappingEntry next=sourceMappings.getNextOnTheSameLine(sourceEntryIndex,false);
  if (next != null && sourceMappings.getColumn(next) == sourceMappings.getColumn(sourceEntry)) {
    warnSeveralMapping(identifierOrNamedElement);
    return null;
  }
  String sourceEntryName=sourceEntry.getName();
  String generatedName=extractName(getGeneratedName(generatedDocument,sourceMap,sourceEntry));
  if (!generatedName.isEmpty()) {
    String sourceName=sourceEntryName;
    if (sourceName == null) {
      sourceName=identifierOrNamedElement instanceof PsiNamedElement ? ((PsiNamedElement)identifierOrNamedElement).getName() : identifierOrNamedElement.getText();
      if (sourceName == null) {
        return null;
      }
    }
    if (rawNameToSource == null) {
      rawNameToSource=new THashMap<String,String>();
    }
    rawNameToSource.put(generatedName,sourceName);
    return generatedName;
  }
  return null;
}
