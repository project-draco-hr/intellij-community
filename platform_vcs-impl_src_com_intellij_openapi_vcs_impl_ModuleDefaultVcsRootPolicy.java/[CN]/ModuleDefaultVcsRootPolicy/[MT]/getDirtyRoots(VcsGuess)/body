{
  return ApplicationManager.getApplication().runReadAction(new Computable<DirtBuilder>(){
    @Override public DirtBuilder compute(){
      DirtBuilder builder=new DirtBuilder(vcsGuess);
      Module[] modules=myModuleManager.getModules();
      if (ProjectUtil.isDirectoryBased(myProject)) {
        FilePath fp=VcsUtil.getFilePath(myBaseDir,Project.DIRECTORY_STORE_FOLDER,true);
        AbstractVcs vcs=vcsGuess.getVcsForDirty(fp);
        if (vcs != null) {
          builder.addDirtyDirRecursively(vcs,fp);
        }
      }
      for (      Module module : modules) {
        VirtualFile[] files=ModuleRootManager.getInstance(module).getContentRoots();
        for (        VirtualFile file : files) {
          AbstractVcs vcs=vcsGuess.getVcsForDirty(file);
          if (vcs != null) {
            builder.addDirtyDirRecursively(vcs,VcsUtil.getFilePath(file));
          }
        }
      }
      ProjectLevelVcsManager plVcsManager=ProjectLevelVcsManager.getInstance(myProject);
      String defaultMapping=((ProjectLevelVcsManagerEx)plVcsManager).haveDefaultMapping();
      boolean haveDefaultMapping=(defaultMapping != null) && (!defaultMapping.isEmpty());
      if (haveDefaultMapping && (myBaseDir != null)) {
        AbstractVcs vcs=vcsGuess.getVcsForDirty(myBaseDir);
        if (vcs != null) {
          builder.addDirtyFile(vcs,VcsUtil.getFilePath(myBaseDir));
        }
      }
      return builder;
    }
  }
);
}
