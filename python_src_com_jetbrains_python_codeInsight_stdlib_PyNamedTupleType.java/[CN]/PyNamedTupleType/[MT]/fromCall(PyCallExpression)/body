{
  final String name=PyUtil.strValue(call.getArgument(0,PyExpression.class));
  final PyExpression fieldNamesExpression=PyPsiUtils.flattenParens(call.getArgument(1,PyExpression.class));
  if (name == null || fieldNamesExpression == null) {
    return null;
  }
  List<String> fieldNames=null;
  if (fieldNamesExpression instanceof PySequenceExpression) {
    fieldNames=PyUtil.strListValue(fieldNamesExpression);
  }
 else {
    final String fieldNamesString=PyUtil.strValue(fieldNamesExpression);
    if (fieldNamesString != null) {
      fieldNames=parseFieldNamesString(fieldNamesString);
    }
  }
  if (fieldNames != null) {
    PyClass tuple=PyBuiltinCache.getInstance(call).getClass(PyNames.TUPLE);
    if (tuple != null) {
      return new PyNamedTupleType(tuple,call,name,fieldNames,true);
    }
  }
  return null;
}
