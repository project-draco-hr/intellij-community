{
  final PsiElement parent=PsiTreeUtil.getParentOfType(parameters.getPosition(),PsiAssignmentExpression.class,PsiLocalVariable.class,PsiMethodCallExpression.class);
  if (parent == null) {
    return null;
  }
  if (parent instanceof PsiAssignmentExpression) {
    return tryExtractContextFromAssignment((PsiAssignmentExpression)parent);
  }
  if (parent instanceof PsiLocalVariable) {
    final PsiLocalVariable localVariable=(PsiLocalVariable)parent;
    return ContextUtil.createContext(localVariable.getType(),localVariable.getName(),PsiTreeUtil.getParentOfType(parent,PsiDeclarationStatement.class));
  }
  final PsiMethod method=((PsiMethodCallExpression)parent).resolveMethod();
  if (method == null)   return null;
  final PsiExpression expression=PsiTreeUtil.getParentOfType(parameters.getPosition(),PsiExpression.class);
  final PsiExpressionList expressionList=PsiTreeUtil.getParentOfType(parameters.getPosition(),PsiExpressionList.class);
  if (expressionList == null)   return null;
  final int exprPosition=Arrays.asList(expressionList.getExpressions()).indexOf(expression);
  final PsiParameter[] methodParameters=method.getParameterList().getParameters();
  if (exprPosition < methodParameters.length) {
    final PsiParameter methodParameter=methodParameters[exprPosition];
    return ContextUtil.createContext(methodParameter.getType(),null,PsiTreeUtil.getParentOfType(expression,PsiDeclarationStatement.class));
  }
  return null;
}
