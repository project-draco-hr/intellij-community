{
  String s40="class A {\n" + "  /* special comment*/\n" + "  private List<String> a = new ArrayList();\n"+ "  static {\n"+ "    int a = 1;"+ "  }\n"+ "}";
  String s41="class '_Class {\n" + "  '_Stuff2*\n" + "  '_FieldType '_FieldName = '_Init?;\n"+ "  static {\n"+ "    '_Stmt*;\n"+ "  }\n"+ "  '_Stuff*\n"+ "}";
  String s42="class $Class$ {\n" + "  $Stuff2$\n" + "  $FieldType$ $FieldName$ = build$FieldName$Map();\n"+ "  private static $FieldType$ build$FieldName$Map() {\n"+ "    $FieldType$ $FieldName$ = $Init$;\n"+ "    $Stmt$;\n"+ "    return $FieldName$;\n"+ "  }\n"+ "  $Stuff$\n"+ "}";
  String expectedResult15="class A {\n" + "  \n" + "  /* special comment*/\n"+ "  private List<String> a = buildaMap();\n"+ "  private static List<String> buildaMap() {\n"+ "    List<String> a = new ArrayList();\n"+ "    int a = 1;\n"+ "    return a;\n"+ "  }\n"+ "  \n"+ "}";
  assertEquals("Preserving var modifiers and generic information in type during replacement",expectedResult15,replacer.testReplace(s40,s41,s42,options,true));
  String s46="class Foo { int xxx; void foo() { assert false; } void yyy() {}}";
  String s47="class '_Class { void '_foo:[regex( foo )](); }";
  String s48="class $Class$ { void $foo$(int a); }";
  String expectedResult17="class Foo { int xxx; void foo(int a) { assert false; } void yyy() {}}";
  assertEquals("Preserving method bodies",expectedResult17,replacer.testReplace(s46,s47,s48,options,true));
}
