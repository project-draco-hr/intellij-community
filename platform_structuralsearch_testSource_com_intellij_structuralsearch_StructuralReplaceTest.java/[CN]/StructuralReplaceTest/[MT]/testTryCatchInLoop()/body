{
  String code="for (int i = 0; i < MIMEHelper.MIME_MAP.length; i++)\n" + "{\n" + "  String s = aFileNameWithOutExtention + MIMEHelper.MIME_MAP[i][0][0];\n"+ "  try\n"+ "  {\n"+ "    if (ENABLE_Z107_READING)\n"+ "    { in = aFileNameWithOutExtention.getClass().getResourceAsStream(s); }\n"+ "    else\n"+ "    { data = ResourceHelper.readResource(s); }\n"+ "    mime = MIMEHelper.MIME_MAP[i][1][0];\n"+ "    break;\n"+ "  }\n"+ "  catch (final Exception e)\n"+ "  { continue; }\n"+ "}";
  String toFind="try { '_TryStatement*; } catch(Exception '_ExceptionDcl) { '_CatchStatement*; }";
  String replacement="try { $TryStatement$; }\n" + "catch(Throwable $ExceptionDcl$) { $CatchStatement$; }";
  String expectedResult="for (int i = 0; i < MIMEHelper.MIME_MAP.length; i++)\n" + "{\n" + "  String s = aFileNameWithOutExtention + MIMEHelper.MIME_MAP[i][0][0];\n"+ "  try { if (ENABLE_Z107_READING)\n"+ "    { in = aFileNameWithOutExtention.getClass().getResourceAsStream(s); }\n"+ "    else\n"+ "    { data = ResourceHelper.readResource(s); }\n"+ "    mime = MIMEHelper.MIME_MAP[i][1][0];\n"+ "    break; }\n"+ "catch(final Throwable e) { continue; }\n"+ "}";
  actualResult=replacer.testReplace(code,toFind,replacement,options);
  assertEquals("Replacing try/catch in loop",expectedResult,actualResult);
}
