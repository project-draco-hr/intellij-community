{
  final String in="class A {\n" + "  void method(Object... os) {}\n" + "  void f(Object a, Object b, Object c) {\n"+ "    method(a, b, c, \"one\" + \"two\");\n"+ "    method(a);\n"+ "  }\n"+ "}";
  final String what="method('_arg+)";
  final String by="method($newarg$)";
  final ReplacementVariableDefinition variable=new ReplacementVariableDefinition();
  variable.setName("newarg");
  variable.setScriptCodeConstraint("arg.collect { \"(String)\" + it.getText() }.join(',')");
  options.addVariableDefinition(variable);
  final String expected="class A {\n" + "  void method(Object... os) {}\n" + "  void f(Object a, Object b, Object c) {\n"+ "    method((String)a,(String)b,(String)c,(String)\"one\" + \"two\");\n"+ "    method((String)a);\n"+ "  }\n"+ "}";
  assertEquals(expected,replacer.testReplace(in,what,by,options));
  options.clearVariableDefinitions();
}
