{
  final PsiPolyVariantReference ref=node.getReference(resolveWithoutImplicits());
  if (ref != null) {
    final ResolveResult[] results=ref.multiResolve(false);
    String error=null;
    PyExpression arg=null;
    for (    ResolveResult result : results) {
      final PsiElement resolved=result.getElement();
      if (resolved instanceof PyFunction) {
        final PyFunction fun=(PyFunction)resolved;
        PyExpression expr=PyNames.isRightOperatorName(fun.getName()) ? node.getLeftExpression() : node.getRightExpression();
        String msg=checkSingleArgumentFunction(fun,expr,false);
        if (msg == null) {
          return;
        }
        if (error == null) {
          error=msg;
          arg=expr;
        }
      }
 else {
        return;
      }
    }
    if (error != null) {
      registerProblem(arg,error);
    }
  }
}
