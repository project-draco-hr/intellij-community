{
  if (!needModify(parent)) {
    return children;
  }
  Collection<AbstractTreeNode> nodes=new ArrayList<>();
  for (  AbstractTreeNode node : children) {
    final Project project=node.getProject();
    if (project != null) {
      if (node.getValue() instanceof PsiDirectory) {
        final PsiDirectory nodeValue=(PsiDirectory)node.getValue();
        final String name=nodeValue.getName();
        if (!name.contains(EduNames.USER_TESTS) && !name.startsWith(".") && !"lib".equals(name)) {
          AbstractTreeNode newNode=createStudyDirectoryNode(settings,project,nodeValue);
          nodes.add(newNode);
        }
      }
 else {
        if (parent instanceof StudyDirectoryNode && node instanceof PsiFileNode) {
          final PsiFileNode psiFileNode=(PsiFileNode)node;
          final VirtualFile virtualFile=psiFileNode.getVirtualFile();
          if (virtualFile == null) {
            return nodes;
          }
          final TaskFile taskFile=StudyUtils.getTaskFile(project,virtualFile);
          if (taskFile != null) {
            nodes.add(node);
          }
          final String parentName=parent.getName();
          if (parentName != null) {
            if (parentName.equals(EduNames.SANDBOX_DIR)) {
              nodes.add(node);
            }
            if (parentName.startsWith(EduNames.TASK)) {
              addNonInvisibleFiles(nodes,node,project,virtualFile);
            }
          }
        }
      }
    }
  }
  return nodes;
}
