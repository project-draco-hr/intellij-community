{
  final Collection<PatchApplier> appliers=new LinkedList<PatchApplier>();
  final CommitContext commitContext=new CommitContext();
  applyAdditionalInfoBefore(myProject,additionalInfo,commitContext);
  for (  VirtualFile base : patchGroups.keySet()) {
    final PatchApplier patchApplier=new PatchApplier<BinaryFilePatch>(myProject,base,ObjectsConvertor.convert(patchGroups.get(base),new Convertor<AbstractFilePatchInProgress,FilePatch>(){
      public FilePatch convert(      AbstractFilePatchInProgress o){
        return o.getPatch();
      }
    }
),localList,null,commitContext);
    appliers.add(patchApplier);
  }
  if (PatchApplier.executePatchGroup(appliers,localList) != ApplyPatchStatus.ABORT) {
    applyAdditionalInfo(myProject,additionalInfo,commitContext);
  }
}
