{
  myProject=project;
  VirtualFileManager.getInstance().addVirtualFileListener(new VirtualFileAdapter(){
    @Override public void fileDeleted(    @NotNull VirtualFileEvent event){
      getRegisteredFiles(project).remove(event.getFile());
    }
  }
,project);
  myProject.getMessageBus().connect().subscribe(ProjectTopics.PROJECT_ROOTS,new ModuleRootAdapter(){
    @Override public void rootsChanged(    ModuleRootEvent event){
      Map<VirtualFile,AccessStatus> files=getRegisteredFiles(project);
      for (      VirtualFile each : new ArrayList<VirtualFile>(files.keySet())) {
        if (isProjectFile(each,project)) {
          files.remove(each);
        }
      }
    }
  }
);
}
