{
  ProjectFileIndex fileIndex=ProjectFileIndex.SERVICE.getInstance(myProject);
  if (fileIndex.isInContent(file))   return true;
  if (!Registry.is("ide.hide.excluded.files") && fileIndex.isExcluded(file) && !fileIndex.isUnderIgnored(file))   return true;
  if (myProject instanceof ProjectEx) {
    IProjectStore store=((ProjectEx)myProject).getStateStore();
    if (store.getStorageScheme() == StorageScheme.DIRECTORY_BASED) {
      VirtualFile baseDir=myProject.getBaseDir();
      VirtualFile dotIdea=baseDir == null ? null : baseDir.findChild(Project.DIRECTORY_STORE_FOLDER);
      if (dotIdea != null && VfsUtilCore.isAncestor(dotIdea,file,false))       return true;
    }
    if (file.equals(store.getWorkspaceFile()) || file.equals(store.getProjectFile()))     return true;
    for (    Module each : ModuleManager.getInstance(myProject).getModules()) {
      if (file.equals(each.getModuleFile()))       return true;
    }
  }
  for (  NonProjectFileWritingAccessExtension each : Extensions.getExtensions(NonProjectFileWritingAccessExtension.EP_NAME,myProject)) {
    if (each.isWritable(file))     return true;
  }
  return false;
}
