{
  List<SpecialCell> specialCells=new ArrayList<SpecialCell>();
  for (int i=0; i < visibleElements.size(); i++) {
    GraphElement element=visibleElements.get(i);
    Node node=element.getNode();
    if (node != null) {
      if (node.getType() == Node.Type.COMMIT_NODE) {
        specialCells.add(new SpecialCell(node,i,SpecialCell.Type.COMMIT_NODE,selectController.selected(node)));
      }
    }
 else {
      Edge edge=element.getEdge();
      if (edge == null) {
        throw new IllegalStateException();
      }
switch (visibleEdge(edge,rowIndex)) {
case -1:
        break;
case 0:
      break;
case 1:
    specialCells.add(new SpecialCell(edge,i,SpecialCell.Type.HIDE_EDGE,selectController.selected(edge)));
  break;
case 2:
specialCells.add(new SpecialCell(edge,i,SpecialCell.Type.SHOW_EDGE,selectController.selected(edge)));
break;
default :
throw new IllegalStateException();
}
}
}
return Collections.unmodifiableList(specialCells);
}
