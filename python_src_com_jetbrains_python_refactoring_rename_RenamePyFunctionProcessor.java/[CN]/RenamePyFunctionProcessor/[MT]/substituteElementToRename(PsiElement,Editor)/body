{
  PyFunction function=(PyFunction)element;
  final PyClass containingClass=function.getContainingClass();
  if (containingClass == null) {
    return function;
  }
  if (PyNames.INIT.equals(function.getName())) {
    return containingClass;
  }
  final List<PsiElement> superMethods=new ArrayList<PsiElement>(PySuperMethodsSearch.search(function,true).findAll());
  if (superMethods.size() > 0) {
    final PyFunction deepestSuperMethod=(PyFunction)superMethods.get(superMethods.size() - 1);
    String message="Method " + function.getName() + " of class "+ containingClass.getQualifiedName()+ "\noverrides method of class "+ deepestSuperMethod.getContainingClass().getQualifiedName()+ ".\nDo you want to rename the base method?";
    int rc=Messages.showYesNoCancelDialog(element.getProject(),message,"Rename",Messages.getQuestionIcon());
    if (rc == 0) {
      return deepestSuperMethod;
    }
    if (rc == 1) {
      return function;
    }
    return null;
  }
  return function;
}
