{
  new Task.Modal(project,"Collecting Changes...",true){
    private Collection<Change> changes;
    @Override public void run(    @NotNull ProgressIndicator indicator){
      try {
        changes=getDiffChanges(project,file,head,compare);
      }
 catch (      VcsException e) {
        String title;
        String message;
        if (e.getMessage().contains("exists on disk, but not in")) {
          title=DvcsUtil.fileOrFolder(file) + " doesn't exist in branch ";
          message=fileDoesntExistInBranchError(file,compare);
        }
 else {
          title="Couldn't compare with branch";
          message=String.format("Couldn't compare " + DvcsUtil.fileOrFolder(file) + " [%s] with selected branch [%s] ;",file,compare) + e.getMessage();
        }
        VcsNotifier.getInstance(project).notifyImportantWarning(title,message);
        throw new ProcessCanceledException(e);
      }
    }
    @Override public void onSuccess(){
      VcsDiffUtil.showDiffFor(project,changes,VcsDiffUtil.getRevisionTitle(compare,false),VcsDiffUtil.getRevisionTitle(head,true),VcsUtil.getFilePath(file));
    }
  }
.queue();
}
