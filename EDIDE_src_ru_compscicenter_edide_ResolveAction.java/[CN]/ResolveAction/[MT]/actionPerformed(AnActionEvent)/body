{
  Editor editor=StudyEditor.getRecentOpenedEditor(e.getProject());
  if (editor == null) {
    return;
  }
  LogicalPosition pos=editor.getCaretModel().getLogicalPosition();
  VirtualFile vfOpenedFile=FileDocumentManager.getInstance().getFile(editor.getDocument());
  if (vfOpenedFile != null) {
    int currentTaskNum=TaskManager.getInstance().getTaskNumForFile(vfOpenedFile.getName());
    TaskFile tf=TaskManager.getInstance().getTaskFile(currentTaskNum,vfOpenedFile.getName());
    int lastResolvedStartOffset;
    try {
      lastResolvedStartOffset=tf.resolveCurrentHighlighter(editor,pos);
    }
 catch (    IllegalArgumentException ex) {
      return;
    }
    FileDocumentManager.getInstance().saveAllDocuments();
    FileDocumentManager.getInstance().reloadFiles(vfOpenedFile);
    int oldDocumentLength=tf.getLastLength();
    int newDocumentLength=editor.getDocument().getTextLength();
    int delta=newDocumentLength - oldDocumentLength;
    tf.incrementAllTaskWindows(editor,lastResolvedStartOffset,delta);
    Log.print(oldDocumentLength + "\n");
    Log.print(newDocumentLength + "\n");
    Log.flush();
    tf.drawFirstUnresolved(editor);
  }
}
