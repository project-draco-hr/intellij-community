{
  FileManager fileManager=myPsiManager.getFileManager();
  VirtualFile file=createChildData(myPrjDir1,"a.txt");
  PsiFile psiFile=fileManager.findFile(file);
  final EventsTestListener listener=new EventsTestListener();
  myPsiManager.addPsiTreeChangeListener(listener,getTestRootDisposable());
  ApplicationManager.getApplication().runWriteAction(new ThrowableComputable<Object,IOException>(){
    @Override public Object compute() throws IOException {
      ReadOnlyAttributeUtil.setReadOnlyAttribute(file,true);
      return null;
    }
  }
);
  final String expected="beforePropertyChange writable\n" + "propertyChanged writable\n";
  new WaitFor(500){
    @Override protected boolean condition(){
      return expected.equals(listener.getEventsString());
    }
  }
.assertCompleted(listener.getEventsString());
  ApplicationManager.getApplication().runWriteAction(new ThrowableComputable<Object,IOException>(){
    @Override public Object compute() throws IOException {
      ReadOnlyAttributeUtil.setReadOnlyAttribute(file,false);
      return null;
    }
  }
);
}
