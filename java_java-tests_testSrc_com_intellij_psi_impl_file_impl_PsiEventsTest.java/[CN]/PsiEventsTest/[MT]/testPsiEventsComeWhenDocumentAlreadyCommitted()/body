{
  myFile=createFile("A.java","class A { int i; }");
  getPsiManager().addPsiTreeChangeListener(new PsiTreeChangeListener(){
    @Override public void beforeChildAddition(    @NotNull PsiTreeChangeEvent event){
    }
    @Override public void beforeChildRemoval(    @NotNull PsiTreeChangeEvent event){
    }
    @Override public void beforeChildReplacement(    @NotNull PsiTreeChangeEvent event){
    }
    @Override public void beforeChildMovement(    @NotNull PsiTreeChangeEvent event){
    }
    @Override public void beforeChildrenChange(    @NotNull PsiTreeChangeEvent event){
    }
    @Override public void beforePropertyChange(    @NotNull PsiTreeChangeEvent event){
    }
    @Override public void childAdded(    @NotNull PsiTreeChangeEvent event){
      checkCommitted(true,event);
    }
    @Override public void childRemoved(    @NotNull PsiTreeChangeEvent event){
      checkCommitted(true,event);
    }
    @Override public void childReplaced(    @NotNull PsiTreeChangeEvent event){
      checkCommitted(true,event);
    }
    @Override public void childrenChanged(    @NotNull PsiTreeChangeEvent event){
      checkCommitted(true,event);
    }
    @Override public void childMoved(    @NotNull PsiTreeChangeEvent event){
      checkCommitted(true,event);
    }
    @Override public void propertyChanged(    @NotNull PsiTreeChangeEvent event){
      checkCommitted(true,event);
    }
  }
,myTestRootDisposable);
  PsiDocumentManager documentManager=PsiDocumentManager.getInstance(getProject());
  Document document=documentManager.getDocument(getFile());
  assertTrue(documentManager.isCommitted(document));
  ApplicationManager.getApplication().runWriteAction(new Runnable(){
    @Override public void run(){
      document.setText("");
    }
  }
);
  documentManager.commitAllDocuments();
  assertTrue(documentManager.isCommitted(document));
}
