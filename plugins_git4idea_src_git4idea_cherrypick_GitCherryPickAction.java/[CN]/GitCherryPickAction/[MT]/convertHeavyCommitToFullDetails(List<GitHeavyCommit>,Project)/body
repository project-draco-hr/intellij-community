{
  return ContainerUtil.map(commits,new Function<GitHeavyCommit,VcsFullCommitDetails>(){
    @Override public VcsFullCommitDetails fun(    GitHeavyCommit commit){
      final VcsLogObjectsFactory factory=ServiceManager.getService(VcsLogObjectsFactory.class);
      List<Hash> parents=ContainerUtil.map(commit.getParentsHashes(),new Function<String,Hash>(){
        @Override public Hash fun(        String hashValue){
          return factory.createHash(hashValue);
        }
      }
);
      return factory.createFullDetails(factory.createHash(commit.getHash().getValue()),parents,commit.getAuthorTime(),commit.getRoot(),commit.getSubject(),commit.getAuthor(),commit.getAuthorEmail(),commit.getDescription(),commit.getCommitter(),commit.getCommitterEmail(),commit.getDate().getTime(),commit.getChanges(),GitContentRevisionFactory.getInstance(project));
    }
  }
);
}
