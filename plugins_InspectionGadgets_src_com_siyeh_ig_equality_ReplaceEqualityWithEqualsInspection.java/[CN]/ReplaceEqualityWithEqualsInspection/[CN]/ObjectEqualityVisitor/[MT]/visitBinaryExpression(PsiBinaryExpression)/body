{
  super.visitBinaryExpression(expression);
  final IElementType tokenType=expression.getOperationTokenType();
  if (!tokenType.equals(JavaTokenType.NE) && !tokenType.equals(JavaTokenType.EQEQ)) {
    return;
  }
  final PsiExpression lhs=expression.getLOperand();
  final PsiType lhsType=lhs.getType();
  if (lhsType == null || lhsType instanceof PsiPrimitiveType || TypeConversionUtil.isEnumType(lhsType)) {
    return;
  }
  final PsiExpression rhs=expression.getROperand();
  if (rhs == null) {
    return;
  }
  final PsiType rhsType=rhs.getType();
  if (rhsType == null || rhsType instanceof PsiPrimitiveType || TypeConversionUtil.isEnumType(rhsType)) {
    return;
  }
  final String operationText=expression.getOperationSign().getText();
  final String prefix=tokenType.equals(JavaTokenType.NE) ? "!" : "";
  registerError(expression,operationText,prefix);
}
