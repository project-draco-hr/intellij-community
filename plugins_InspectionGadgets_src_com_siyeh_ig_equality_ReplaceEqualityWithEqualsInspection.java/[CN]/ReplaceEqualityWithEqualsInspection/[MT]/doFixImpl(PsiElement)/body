{
  final PsiBinaryExpression exp=(PsiBinaryExpression)element;
  final PsiExpression lhs=exp.getLOperand();
  final PsiExpression rhs=exp.getROperand();
  if (rhs == null) {
    return;
  }
  final PsiExpression strippedLhs=ParenthesesUtils.stripParentheses(lhs);
  if (strippedLhs == null) {
    return;
  }
  final PsiExpression strippedRhs=ParenthesesUtils.stripParentheses(rhs);
  if (strippedRhs == null) {
    return;
  }
  final String lhText=strippedLhs.getText();
  final String rhText=strippedRhs.getText();
  final String prefix=exp.getOperationTokenType().equals(JavaTokenType.EQEQ) ? "" : "!";
  @NonNls final String expString;
  if (ParenthesesUtils.getPrecedence(strippedLhs) > ParenthesesUtils.METHOD_CALL_PRECEDENCE) {
    expString=prefix + '(' + lhText+ ").equals("+ rhText+ ')';
  }
 else {
    expString=prefix + lhText + ".equals("+ rhText+ ')';
  }
  PsiReplacementUtil.replaceExpression(exp,expString);
}
