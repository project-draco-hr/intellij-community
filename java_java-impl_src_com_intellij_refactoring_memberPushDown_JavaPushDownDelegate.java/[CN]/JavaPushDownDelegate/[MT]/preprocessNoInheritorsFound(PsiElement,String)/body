{
  final PsiClass aClass=(PsiClass)sourceClass;
  if (aClass.isEnum() || aClass.hasModifierProperty(PsiModifier.FINAL)) {
    if (Messages.showOkCancelDialog((aClass.isEnum() ? "Enum " + aClass.getQualifiedName() + " doesn't have constants to inline to. " : "Final class " + aClass.getQualifiedName() + "does not have inheritors. ") + "Pushing members down will result in them being deleted. " + "Would you like to proceed?",conflictDialogTitle,Messages.getWarningIcon()) != Messages.OK) {
      return NewSubClassData.EMPTY;
    }
  }
 else {
    String noInheritors=aClass.isInterface() ? RefactoringBundle.message("interface.0.does.not.have.inheritors",aClass.getQualifiedName()) : RefactoringBundle.message("class.0.does.not.have.inheritors",aClass.getQualifiedName());
    final String message=noInheritors + "\n" + RefactoringBundle.message("push.down.will.delete.members");
    final int answer=Messages.showYesNoCancelDialog(message,conflictDialogTitle,Messages.getWarningIcon());
    if (answer == Messages.YES) {
      final CreateClassDialog classDialog=CreateSubclassAction.chooseSubclassToCreate(aClass);
      if (classDialog != null) {
        return new NewSubClassData(classDialog.getTargetDirectory(),classDialog.getClassName());
      }
 else {
        return NewSubClassData.EMPTY;
      }
    }
 else     if (answer != Messages.NO) {
      return NewSubClassData.EMPTY;
    }
  }
  return null;
}
