{
  final PsiElementFactory factory=JavaPsiFacade.getInstance(sourceClass.getProject()).getElementFactory();
  member.accept(new JavaRecursiveElementWalkingVisitor(){
    @Override public void visitReferenceExpression(    PsiReferenceExpression expression){
      decodeRef(sourceClass,expression,factory,targetClass,expression);
      super.visitReferenceExpression(expression);
    }
    @Override public void visitNewExpression(    PsiNewExpression expression){
      final PsiJavaCodeReferenceElement classReference=expression.getClassReference();
      if (classReference != null)       decodeRef(sourceClass,classReference,factory,targetClass,expression);
      super.visitNewExpression(expression);
    }
    @Override public void visitTypeElement(    final PsiTypeElement type){
      final PsiJavaCodeReferenceElement referenceElement=type.getInnermostComponentReferenceElement();
      if (referenceElement != null)       decodeRef(sourceClass,referenceElement,factory,targetClass,type);
      super.visitTypeElement(type);
    }
  }
);
}
