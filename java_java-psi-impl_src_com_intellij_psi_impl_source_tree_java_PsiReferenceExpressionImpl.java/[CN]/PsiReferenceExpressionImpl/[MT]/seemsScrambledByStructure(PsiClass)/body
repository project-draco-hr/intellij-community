{
  PsiClass containingClass=aClass.getContainingClass();
  if (containingClass != null && !seemsScrambledByStructure(containingClass)) {
    return false;
  }
  if (seemsScrambled(aClass.getName())) {
    List<PsiMethod> methods=ContainerUtil.filter(aClass.getMethods(),new Condition<PsiMethod>(){
      @Override public boolean value(      PsiMethod method){
        return !method.hasModifierProperty(PsiModifier.PRIVATE);
      }
    }
);
    return !methods.isEmpty() && ContainerUtil.and(methods,new Condition<PsiMethod>(){
      @Override public boolean value(      PsiMethod method){
        return seemsScrambled(method.getName());
      }
    }
);
  }
  return false;
}
