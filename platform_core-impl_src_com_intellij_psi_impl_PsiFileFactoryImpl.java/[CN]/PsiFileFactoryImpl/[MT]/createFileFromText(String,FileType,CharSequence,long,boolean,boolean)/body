{
  final LightVirtualFile virtualFile=new LightVirtualFile(name,fileType,text,modificationStamp);
  if (fileType instanceof LanguageFileType) {
    final Language language=LanguageSubstitutors.INSTANCE.substituteLanguage(((LanguageFileType)fileType).getLanguage(),virtualFile,myManager.getProject());
    final PsiFile file=trySetupPsiForFile(virtualFile,language,eventSystemEnabled,markAsCopy);
    if (file != null)     return file;
  }
  final SingleRootFileViewProvider singleRootFileViewProvider=new SingleRootFileViewProvider(myManager,virtualFile,eventSystemEnabled);
  final PsiPlainTextFileImpl plainTextFile=new PsiPlainTextFileImpl(singleRootFileViewProvider);
  if (markAsCopy)   CodeEditUtil.setNodeGenerated(plainTextFile.getNode(),true);
  return plainTextFile;
}
