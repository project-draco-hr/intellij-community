{
  Map<Bytes,List<HEquations>> equationsCache=new HashMap<Bytes,List<HEquations>>();
  final Solver notNullSolver=new Solver(new ELattice<Value>(Value.NotNull,Value.Top),Value.Top);
  collectEquations(Collections.singletonList(notNullKey),notNullSolver,equationsCache);
  HashMap<HKey,Value> notNullSolutions=notNullSolver.solve();
  boolean notNull=(Value.NotNull == notNullSolutions.get(notNullKey)) || (Value.NotNull == notNullSolutions.get(notNullKey.mkUnstable()));
  final Solver nullableSolver=new Solver(new ELattice<Value>(Value.Null,Value.Top),Value.Top);
  final HKey nullableKey=new HKey(notNullKey.key,notNullKey.dirKey + 1,true,false);
  collectEquations(Collections.singletonList(nullableKey),nullableSolver,equationsCache);
  HashMap<HKey,Value> nullableSolutions=nullableSolver.solve();
  boolean nullable=(Value.Null == nullableSolutions.get(nullableKey)) || (Value.Null == nullableSolutions.get(nullableKey.mkUnstable()));
  return new ParameterAnnotations(notNull,nullable);
}
