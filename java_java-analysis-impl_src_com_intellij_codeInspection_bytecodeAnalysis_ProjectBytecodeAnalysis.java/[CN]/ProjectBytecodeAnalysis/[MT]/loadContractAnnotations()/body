{
  LOG.info("initializing contract annotations");
  final IntIdSolver solver=new IntIdSolver(new ELattice<Value>(Value.Bot,Value.Top));
  FileBasedIndex.getInstance().processValues(BytecodeAnalysisIndex.NAME,BytecodeAnalysisIndex.CONTRACTS,null,new FileBasedIndex.ValueProcessor<Collection<IntIdEquation>>(){
    @Override public boolean process(    VirtualFile file,    Collection<IntIdEquation> value){
      for (      IntIdEquation intIdEquation : value) {
        solver.addEquation(intIdEquation);
      }
      return true;
    }
  }
,ProjectScope.getLibrariesScope(myProject));
  LOG.info("contract equations are constructed");
  TIntObjectHashMap<Value> solutions=solver.solve();
  LOG.info("contract equations are solved");
  return BytecodeAnalysisConverter.getInstance().makeAnnotations(solutions);
}
