{
  final Element storeElement=new Element(StateMap.COMPONENT);
  for (  Map.Entry<String,Map<String,Object>> componentNameToFileNameToStates : copiedStorageData.entrySet()) {
    for (    Map.Entry<String,Object> entry : componentNameToFileNameToStates.getValue().entrySet()) {
      String fileName=entry.getKey();
      Object state=entry.getValue();
      if (!dirtyFileNames.contains(fileName)) {
        return;
      }
      Element element=null;
      try {
        element=StateMap.stateToElement(fileName,state,Collections.<String,Element>emptyMap());
        if (storage.myPathMacroSubstitutor != null) {
          storage.myPathMacroSubstitutor.collapsePaths(element);
        }
        storeElement.setAttribute(StateMap.NAME,componentNameToFileNameToStates.getKey());
        storeElement.addContent(element);
        VirtualFile file=StorageUtil.getFile(fileName,dir,this);
        StorageUtil.writeFile(null,this,file,storeElement,LineSeparator.fromString(file.exists() ? StorageUtil.loadFile(file).second : SystemProperties.getLineSeparator()),false);
      }
 catch (      IOException e) {
        LOG.error(e);
      }
 finally {
        if (element != null) {
          element.detach();
        }
      }
    }
  }
}
