{
  MessageDigest messageDigest=KdbxHeaderKt.sha256MessageDigest();
  DigestOutputStream digestOutputStream=new DigestOutputStream(outputStream,messageDigest);
  LittleEndianDataOutputStream ledos=new LittleEndianDataOutputStream(digestOutputStream);
  ledos.writeInt(SIG1);
  ledos.writeInt(SIG2);
  ledos.writeInt(FILE_VERSION_32);
  ledos.writeByte(HeaderType.CIPHER_ID);
  ledos.writeShort(16);
  byte[] b=new byte[16];
  ByteBuffer bb=ByteBuffer.wrap(b);
  bb.putLong(kdbxHeader.getCipherUuid().getMostSignificantBits());
  bb.putLong(8,kdbxHeader.getCipherUuid().getLeastSignificantBits());
  ledos.write(b);
  ledos.writeByte(HeaderType.COMPRESSION_FLAGS);
  ledos.writeShort(4);
  ledos.writeInt(kdbxHeader.getCompressionFlags().ordinal());
  ledos.writeByte(HeaderType.MASTER_SEED);
  ledos.writeShort(kdbxHeader.getMasterSeed().length);
  ledos.write(kdbxHeader.getMasterSeed());
  ledos.writeByte(HeaderType.TRANSFORM_SEED);
  ledos.writeShort(kdbxHeader.getTransformSeed().length);
  ledos.write(kdbxHeader.getTransformSeed());
  ledos.writeByte(HeaderType.TRANSFORM_ROUNDS);
  ledos.writeShort(8);
  ledos.writeLong(kdbxHeader.getTransformRounds());
  ledos.writeByte(HeaderType.ENCRYPTION_IV);
  ledos.writeShort(kdbxHeader.getEncryptionIv().length);
  ledos.write(kdbxHeader.getEncryptionIv());
  ledos.writeByte(HeaderType.PROTECTED_STREAM_KEY);
  ledos.writeShort(kdbxHeader.getProtectedStreamKey().length);
  ledos.write(kdbxHeader.getProtectedStreamKey());
  ledos.writeByte(HeaderType.STREAM_START_BYTES);
  ledos.writeShort(kdbxHeader.getStreamStartBytes().length);
  ledos.write(kdbxHeader.getStreamStartBytes());
  ledos.writeByte(HeaderType.INNER_RANDOM_STREAM_ID);
  ledos.writeShort(4);
  ledos.writeInt(kdbxHeader.getProtectedStreamAlgorithm().ordinal());
  ledos.writeByte(HeaderType.END);
  ledos.writeShort(0);
  MessageDigest digest=digestOutputStream.getMessageDigest();
  kdbxHeader.setHeaderHash(digest.digest());
}
