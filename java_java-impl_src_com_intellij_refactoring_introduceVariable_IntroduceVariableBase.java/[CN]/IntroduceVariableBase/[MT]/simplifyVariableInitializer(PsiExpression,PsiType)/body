{
  if (initializer instanceof PsiTypeCastExpression) {
    PsiExpression operand=((PsiTypeCastExpression)initializer).getOperand();
    if (operand != null) {
      PsiType operandType=operand.getType();
      if (operandType != null && TypeConversionUtil.isAssignable(expectedType,operandType)) {
        return operand;
      }
    }
  }
 else   if (initializer instanceof PsiNewExpression) {
    final PsiNewExpression newExpression=(PsiNewExpression)initializer;
    if (newExpression.getArrayInitializer() != null) {
      return newExpression.getArrayInitializer();
    }
 else {
      final PsiExpression tryToDetectDiamondNewExpr=((PsiVariable)JavaPsiFacade.getElementFactory(initializer.getProject()).createVariableDeclarationStatement("x",expectedType,initializer,initializer).getDeclaredElements()[0]).getInitializer();
      if (tryToDetectDiamondNewExpr instanceof PsiNewExpression && PsiDiamondTypeUtil.canCollapseToDiamond((PsiNewExpression)tryToDetectDiamondNewExpr,(PsiNewExpression)tryToDetectDiamondNewExpr,expectedType)) {
        final PsiElement paramList=PsiDiamondTypeUtil.replaceExplicitWithDiamond(newExpression.getClassOrAnonymousClassReference().getParameterList());
        return PsiTreeUtil.getParentOfType(paramList,PsiNewExpression.class);
      }
    }
  }
  return initializer;
}
