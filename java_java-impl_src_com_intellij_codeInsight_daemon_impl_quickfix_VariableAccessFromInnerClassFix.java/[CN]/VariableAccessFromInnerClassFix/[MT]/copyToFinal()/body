{
  PsiManager psiManager=myContext.getManager();
  PsiElementFactory factory=JavaPsiFacade.getInstance(psiManager.getProject()).getElementFactory();
  PsiExpression initializer=factory.createExpressionFromText(myVariable.getName(),myContext);
  String newName=suggestNewName(psiManager.getProject(),myVariable);
  PsiType type=myVariable.getType();
  PsiDeclarationStatement copyDecl=factory.createVariableDeclarationStatement(newName,type,initializer);
  PsiVariable newVariable=(PsiVariable)copyDecl.getDeclaredElements()[0];
  PsiUtil.setModifierProperty(newVariable,PsiModifier.FINAL,true);
  PsiElement statement=getStatementToInsertBefore();
  if (statement == null)   return;
  PsiExpression newExpression=factory.createExpressionFromText(newName,myVariable);
  replaceReferences(myContext,myVariable,newExpression);
  if (RefactoringUtil.isLoopOrIf(statement.getParent())) {
    RefactoringUtil.putStatementInLoopBody(copyDecl,statement.getParent(),statement);
  }
 else {
    statement.getParent().addBefore(copyDecl,statement);
  }
}
