{
  List<DiffContent> originalContents=request.getContents();
  List<PropertyData> properties1=getProperties(originalContents.get(0));
  List<PropertyData> properties2=getProperties(originalContents.get(1));
  Map<String,PropertyValue> before=new HashMap<String,PropertyValue>();
  Map<String,PropertyValue> after=new HashMap<String,PropertyValue>();
  if (properties1 != null) {
    for (    PropertyData data : properties1) {
      before.put(data.getName(),data.getValue());
    }
  }
  if (properties2 != null) {
    for (    PropertyData data : properties2) {
      after.put(data.getName(),data.getValue());
    }
  }
  List<PropertyRecord> records=new ArrayList<PropertyRecord>();
  for (  String name : ContainerUtil.union(before.keySet(),after.keySet())) {
    records.add(createRecord(name,before.get(name),after.get(name)));
  }
  ContainerUtil.sort(records,new Comparator<PropertyRecord>(){
    @Override public int compare(    PropertyRecord o1,    PropertyRecord o2){
      return StringUtil.naturalCompare(o1.getName(),o2.getName());
    }
  }
);
  return records;
}
