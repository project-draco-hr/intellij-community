{
  final PyType type=context.getType(getOperand());
  if (type instanceof PyTupleType) {
    return PyBuiltinCache.getInstance(this).getTupleType();
  }
  if (type instanceof PyCollectionType) {
    return type;
  }
  if (type instanceof PyClassType) {
    final List<? extends RatedResolveResult> resolveResults=type.resolveMember(PyNames.GETITEM,null,AccessDirection.READ,PyResolveContext.noImplicits().withTypeEvalContext(context));
    if (resolveResults != null) {
      final List<PyType> types=new ArrayList<>();
      for (      RatedResolveResult resolveResult : resolveResults) {
        types.addAll(getPossibleReturnTypes(resolveResult.getElement(),context));
      }
      return PyUnionType.union(types);
    }
  }
  return null;
}
