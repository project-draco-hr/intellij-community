{
  PyImportElement importElement=PsiTreeUtil.getParentOfType(myElement,PyImportElement.class);
  if (importElement != null) {
    PsiErrorElement prevError=PsiTreeUtil.getPrevSiblingOfType(importElement,PsiErrorElement.class);
    if (prevError != null) {
      return ArrayUtil.EMPTY_OBJECT_ARRAY;
    }
  }
  PyExpression qualifier=myElement.getQualifier();
  final TypeEvalContext context=TypeEvalContext.userInitiated(myElement.getContainingFile());
  if (qualifier != null) {
    PyType type=context.getType(qualifier);
    if (type != null) {
      Object[] variants=getTypeCompletionVariants(myElement,type);
      if (!alreadyHasImportKeyword()) {
        replaceInsertHandler(variants,ImportKeywordHandler.INSTANCE);
      }
      return variants;
    }
 else {
      return ArrayUtil.EMPTY_OBJECT_ARRAY;
    }
  }
 else {
    return new ImportVariantCollector(context).execute();
  }
}
