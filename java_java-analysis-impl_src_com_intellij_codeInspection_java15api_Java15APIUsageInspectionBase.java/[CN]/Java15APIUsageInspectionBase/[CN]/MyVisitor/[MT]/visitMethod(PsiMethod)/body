{
  super.visitMethod(method);
  PsiAnnotation annotation=!method.isConstructor() ? AnnotationUtil.findAnnotation(method,CommonClassNames.JAVA_LANG_OVERRIDE) : null;
  if (annotation != null) {
    final Module module=ModuleUtilCore.findModuleForPsiElement(annotation);
    if (module != null) {
      final LanguageLevel languageLevel=getEffectiveLanguageLevel(module);
      final PsiMethod[] methods=method.findSuperMethods();
      for (      PsiMethod superMethod : methods) {
        if (superMethod instanceof PsiCompiledElement) {
          if (!isForbiddenApiUsage(superMethod,languageLevel)) {
            return;
          }
        }
 else {
          return;
        }
      }
      if (methods.length > 0) {
        registerError(annotation.getNameReferenceElement(),languageLevel);
      }
    }
  }
}
