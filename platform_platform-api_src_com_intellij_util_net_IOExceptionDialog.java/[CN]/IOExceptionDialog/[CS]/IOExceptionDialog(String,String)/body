{
  super(UIUtil.getActiveWindow(),title,DEFAULT_MODALITY_TYPE);
  new MnemonicHelper().register(getContentPane());
  getContentPane().add(mainPanel);
  mainPanel.getActionMap().put("close",new AbstractAction(){
    public void actionPerformed(    ActionEvent e){
      cancelPressed=true;
      dispose();
    }
  }
);
  mainPanel.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE,0),"close");
  errorLabel.setText(errorText);
  errorLabel.setFont(UIManager.getFont("Label.font"));
  errorLabel.setBackground(UIManager.getColor("Label.background"));
  errorLabel.setForeground(UIManager.getColor("Label.foreground"));
  setupButton.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      HTTPProxySettingsDialog dlg=new HTTPProxySettingsDialog();
      dlg.show();
    }
  }
);
  tryAgainButton.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      cancelPressed=false;
      dispose();
    }
  }
);
  cancelButton.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      cancelPressed=true;
      dispose();
    }
  }
);
  pack();
  setLocationRelativeTo(getOwner());
  setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
  addWindowListener(new WindowAdapter(){
    @Override public void windowClosing(    WindowEvent e){
      cancelPressed=true;
      dispose();
    }
  }
);
}
