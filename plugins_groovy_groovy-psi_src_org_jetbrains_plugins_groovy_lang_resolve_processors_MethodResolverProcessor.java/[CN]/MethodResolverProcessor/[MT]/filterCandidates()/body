{
  List<GroovyMethodResult> array=getCandidatesInternal();
  if (array.size() == 1)   return array.toArray(new GroovyResolveResult[array.size()]);
  List<GroovyMethodResult> result=ContainerUtil.newArrayList();
  Iterator<GroovyMethodResult> itr=array.iterator();
  result.add(itr.next());
  Outer:   while (itr.hasNext()) {
    GroovyMethodResult resolveResult=itr.next();
    for (Iterator<GroovyMethodResult> iterator=result.iterator(); iterator.hasNext(); ) {
      final GroovyMethodResult otherResolveResult=iterator.next();
      int res=GrMethodComparator.compareMethods(resolveResult,otherResolveResult,this);
      if (res > 0) {
        continue Outer;
      }
 else       if (res < 0) {
        iterator.remove();
      }
    }
    result.add(resolveResult);
  }
  return result.toArray(new GroovyResolveResult[result.size()]);
}
