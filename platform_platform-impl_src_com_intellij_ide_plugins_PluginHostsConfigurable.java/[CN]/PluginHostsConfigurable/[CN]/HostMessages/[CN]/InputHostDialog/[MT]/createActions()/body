{
  final AbstractAction checkNowAction=new AbstractAction("Check Now"){
    @Override public void actionPerformed(    @Nullable ActionEvent e){
      ProgressManager.getInstance().run(new Task.Modal(null,"Checking plugins repository...",true){
        private int result;
        private Exception error;
        @Override public void run(        @NotNull ProgressIndicator indicator){
          String host=correctRepositoryRule(getTextField().getText());
          try {
            result=RepositoryHelper.loadPlugins(host,null,indicator).size();
          }
 catch (          Exception e) {
            error=e;
          }
        }
        @Override public void onSuccess(){
          if (error != null) {
            showErrorDialog(myField,"Connection failed: " + error.getMessage());
          }
 else           if (result == 0) {
            showWarningDialog(myField,"No plugins found. Please check log file for possible errors.","Check Plugins Repository");
          }
 else {
            showInfoMessage(myField,"Repository was successfully checked","Check Plugins Repository");
          }
        }
      }
);
    }
  }
;
  myField.getDocument().addDocumentListener(new DocumentAdapter(){
    @Override protected void textChanged(    DocumentEvent e){
      checkNowAction.setEnabled(!StringUtil.isEmptyOrSpaces(myField.getText()));
    }
  }
);
  checkNowAction.setEnabled(!StringUtil.isEmptyOrSpaces(myField.getText()));
  return ArrayUtil.append(super.createActions(),checkNowAction);
}
