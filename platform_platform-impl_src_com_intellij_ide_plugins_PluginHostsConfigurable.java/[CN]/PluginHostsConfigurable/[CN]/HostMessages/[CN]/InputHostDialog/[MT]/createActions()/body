{
  final AbstractAction checkNowAction=new AbstractAction("Check Now"){
    @Override public void actionPerformed(    @Nullable ActionEvent e){
      ProgressManager.getInstance().run(new Task.Modal(null,"Checking plugins repository...",true){
        boolean result;
        Exception ex;
        @Override public void run(        @NotNull ProgressIndicator indicator){
          try {
            result=UpdateChecker.checkPluginsHost(correctRepositoryRule(getTextField().getText()),new THashMap<PluginId,PluginDownloader>(),true,indicator);
          }
 catch (          Exception e1) {
            ex=e1;
          }
        }
        @Override public void onSuccess(){
          if (ex != null) {
            showErrorDialog(myField,"Connection failed: " + ex.getMessage());
          }
 else           if (result) {
            showInfoMessage(myField,"Plugins repository was successfully checked","Check Plugins Repository");
          }
 else {
            showErrorDialog(myField,"Plugin descriptions contain some errors. Please, check idea.log for details.");
          }
        }
      }
);
    }
  }
;
  myField.getDocument().addDocumentListener(new DocumentAdapter(){
    @Override protected void textChanged(    DocumentEvent e){
      checkNowAction.setEnabled(!StringUtil.isEmptyOrSpaces(myField.getText()));
    }
  }
);
  checkNowAction.setEnabled(!StringUtil.isEmptyOrSpaces(myField.getText()));
  return ArrayUtil.append(super.createActions(),checkNowAction);
}
