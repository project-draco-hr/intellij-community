{
  super.paint(g);
  Graphics2D g2=(Graphics2D)g;
  g2.setStroke(new BasicStroke(THICK_LINE,BasicStroke.CAP_ROUND,BasicStroke.JOIN_BEVEL));
  g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING,RenderingHints.VALUE_ANTIALIAS_ON);
  CommitRow commitRow=data.getCommitRow();
  ReadOnlyList<Edge> edges=commitRow.getDownEdges();
  for (  Edge edge : edges) {
    paintDownLine(g2,edge.from(),edge.to(),ColorGenerator.getColor(edge.getColorIndex()));
  }
  edges=commitRow.getUpEdges();
  for (  Edge edge : edges) {
    paintUpLine(g2,edge.from(),edge.to(),ColorGenerator.getColor(edge.getColorIndex()));
  }
  ReadOnlyList<SpecialNode> nodes=commitRow.getSpecialNodes();
  for (  SpecialNode node : nodes) {
    int pos=node.getPosition();
    Color color=ColorGenerator.getColor(node.getColorIndex());
switch (node.getType()) {
case Current:
      paintCircle(g2,pos,color);
    break;
case Hide:
  paintHide(g2,pos,color);
break;
case Show:
paintShow(g2,pos,color);
break;
default :
throw new IllegalStateException();
}
}
}
