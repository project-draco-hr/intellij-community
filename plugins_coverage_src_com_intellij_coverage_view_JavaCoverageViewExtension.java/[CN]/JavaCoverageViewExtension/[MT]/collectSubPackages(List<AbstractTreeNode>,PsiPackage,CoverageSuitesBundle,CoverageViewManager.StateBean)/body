{
  final GlobalSearchScope searchScope=GlobalSearchScope.projectScope(rootPackage.getProject());
  final PsiPackage[] subPackages=ApplicationManager.getApplication().runReadAction(new Computable<PsiPackage[]>(){
    public PsiPackage[] compute(){
      return rootPackage.getSubPackages();
    }
  }
);
  for (  final PsiPackage aPackage : subPackages) {
    final PsiDirectory[] directories=ApplicationManager.getApplication().runReadAction(new Computable<PsiDirectory[]>(){
      public PsiDirectory[] compute(){
        return aPackage.getDirectories(searchScope);
      }
    }
);
    if (directories.length == 0)     continue;
    if (ApplicationManager.getApplication().runReadAction(new Computable<Boolean>(){
      public Boolean compute(){
        return isInCoverageScope(aPackage,data);
      }
    }
)) {
      final CoverageListNode node=new CoverageListNode(aPackage,data,stateBean);
      children.add(node);
    }
 else     if (!stateBean.myFlattenPackages) {
      collectSubPackages(children,aPackage,data,stateBean);
    }
    if (stateBean.myFlattenPackages) {
      collectSubPackages(children,aPackage,data,stateBean);
    }
  }
}
