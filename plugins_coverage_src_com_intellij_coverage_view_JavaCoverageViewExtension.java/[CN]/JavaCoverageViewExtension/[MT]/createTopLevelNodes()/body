{
  final List<AbstractTreeNode> topLevelNodes=new ArrayList<AbstractTreeNode>();
  final LinkedHashSet<PsiPackage> packages=new LinkedHashSet<PsiPackage>();
  final LinkedHashSet<PsiClass> classes=new LinkedHashSet<PsiClass>();
  for (  CoverageSuite suite : mySuitesBundle.getSuites()) {
    packages.addAll(((JavaCoverageSuite)suite).getCurrentSuitePackages(myProject));
    classes.addAll(((JavaCoverageSuite)suite).getCurrentSuiteClasses(myProject));
  }
  for (  PsiPackage aPackage : packages) {
    final GlobalSearchScope searchScope=getSearchScope(mySuitesBundle,myProject);
    if (aPackage.getDirectories(searchScope).length == 0)     continue;
    if (aPackage.getClasses(searchScope).length == 0)     continue;
    final CoverageListNode node=new CoverageListNode(aPackage,mySuitesBundle,myStateBean);
    topLevelNodes.add(node);
    collectSubPackages(topLevelNodes,aPackage,mySuitesBundle,myStateBean);
  }
  for (  PsiClass aClass : classes) {
    topLevelNodes.add(new CoverageListNode(aClass,mySuitesBundle,myStateBean));
  }
  return topLevelNodes;
}
