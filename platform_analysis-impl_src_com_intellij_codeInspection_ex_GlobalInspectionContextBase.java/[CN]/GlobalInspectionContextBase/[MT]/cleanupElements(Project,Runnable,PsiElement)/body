{
  final List<SmartPsiElementPointer<PsiElement>> elements=new ArrayList<SmartPsiElementPointer<PsiElement>>();
  final SmartPointerManager manager=SmartPointerManager.getInstance(project);
  for (  PsiElement element : scope) {
    elements.add(manager.createSmartPsiElementPointer(element));
  }
  Runnable cleanupRunnable=new Runnable(){
    public void run(){
      final List<PsiElement> psiElements=new ArrayList<PsiElement>();
      for (      SmartPsiElementPointer<PsiElement> element : elements) {
        PsiElement psiElement=element.getElement();
        if (psiElement != null) {
          psiElements.add(psiElement);
        }
      }
      GlobalInspectionContextBase globalContext=(GlobalInspectionContextBase)InspectionManager.getInstance(project).createNewGlobalContext(false);
      final InspectionProfile profile=InspectionProjectProfileManager.getInstance(project).getInspectionProfile();
      AnalysisScope analysisScope=new AnalysisScope(new LocalSearchScope(psiElements.toArray(new PsiElement[psiElements.size()])),project);
      globalContext.codeCleanup(project,analysisScope,profile,null,runnable,true);
    }
  }
;
  Application application=ApplicationManager.getApplication();
  if (application.isWriteAccessAllowed()) {
    application.invokeLater(cleanupRunnable);
  }
 else {
    cleanupRunnable.run();
  }
}
