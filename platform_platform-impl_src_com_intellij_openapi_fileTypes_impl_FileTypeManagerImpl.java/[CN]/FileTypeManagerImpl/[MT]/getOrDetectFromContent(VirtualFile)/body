{
  if (!isDetectable(file))   return UnknownFileType.INSTANCE;
  if (file instanceof VirtualFileWithId) {
    int id=((VirtualFileWithId)file).getId();
    if (id < 0)     return UnknownFileType.INSTANCE;
    long flags=packedFlags.get(id);
    if ((flags & ATTRIBUTES_WERE_LOADED_MASK) == 0) {
      flags=readFlagsFromCache(file);
      flags=BitUtil.set(flags,ATTRIBUTES_WERE_LOADED_MASK,true);
      packedFlags.set(id,flags);
      if (toLog()) {
        log("F: readFlagsFromCache(" + file.getName() + ") = "+ flags);
      }
    }
    boolean autoDetectWasRun=(flags & AUTO_DETECT_WAS_RUN_MASK) != 0;
    if (autoDetectWasRun) {
      FileType type=fromCachedFlags(file,flags);
      if (toLog()) {
        log("F: autodetected getFileType(" + file.getName() + ") = "+ type.getName()+ "; packedFlags.get(id):"+ flags+ "; DETECTED_FROM_CONTENT_FILE_TYPE_KEY: "+ file.getUserData(DETECTED_FROM_CONTENT_FILE_TYPE_KEY));
      }
      return type;
    }
  }
  FileType fileType=file.getUserData(DETECTED_FROM_CONTENT_FILE_TYPE_KEY);
  if (fileType == null) {
    fileType=detectFromContentAndCache(file);
  }
  if (toLog()) {
    log("F: getFileType after detect run(" + file.getName() + ") = "+ fileType.getName());
  }
  return fileType;
}
