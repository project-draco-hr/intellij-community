{
  int clsCounter=0;
  List<MatchResult> matches=collectResults(pattern,myClasses,myClassModel);
  final List<Object> classes=new ArrayList<Object>();
  for (  MatchResult matchResult : matches) {
    if (clsCounter > 15)     break;
    Object[] objects=myClassModel.getElementsByName(matchResult.elementName,false,pattern,myProgressIndicator);
    for (    Object object : objects) {
      if (!myListModel.contains(object)) {
        if (object instanceof PsiElement) {
          VirtualFile file=PsiUtilCore.getVirtualFile((PsiElement)object);
          if (file != null) {
            if (myAlreadyAddedFiles.contains(file)) {
              continue;
            }
 else {
              myAlreadyAddedFiles.add(file);
            }
          }
        }
        classes.add(object);
        clsCounter++;
        if (clsCounter > 15)         break;
      }
    }
  }
  myProgressIndicator.checkCanceled();
  if (classes.size() > 0) {
    UIUtil.invokeAndWaitIfNeeded(new Runnable(){
      @Override public void run(){
        if (!myProgressIndicator.isCanceled()) {
          myTitleIndexes.classes=myListModel.size();
          for (          Object cls : classes) {
            myListModel.addElement(cls);
          }
          myMoreClassesIndex=classes.size() >= 15 ? myListModel.size() - 1 : -1;
        }
      }
    }
);
  }
}
