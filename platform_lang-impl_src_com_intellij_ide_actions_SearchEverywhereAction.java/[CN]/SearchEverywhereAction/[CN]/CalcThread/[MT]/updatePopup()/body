{
  SwingUtilities.invokeLater(new Runnable(){
    @Override public void run(){
      myListModel.update();
      myList.revalidate();
      myList.repaint();
      myRenderer.recalculateWidth();
      if (myPopup == null || !myPopup.isVisible()) {
        final ActionCallback callback=ListDelegationUtil.installKeyboardDelegation(field.getTextEditor(),myList);
        final ComponentPopupBuilder builder=JBPopupFactory.getInstance().createComponentPopupBuilder(new JBScrollPane(myList),null);
        myPopup=builder.setRequestFocus(false).createPopup();
        Disposer.register(myPopup,new Disposable(){
          @Override public void dispose(){
            callback.setDone();
          }
        }
);
        myPopup.showUnderneathOf(field);
        ActionManager.getInstance().addAnActionListener(new AnActionListener.Adapter(){
          @Override public void beforeActionPerformed(          AnAction action,          DataContext dataContext,          AnActionEvent event){
            myPopup.cancel();
          }
        }
,myPopup);
      }
 else {
        myList.revalidate();
        myList.repaint();
      }
      ListScrollingUtil.ensureSelectionExists(myList);
      if (myList.getModel().getSize() == 0) {
      }
 else {
        final Dimension size=myList.getPreferredSize();
        Dimension sz=new Dimension(Math.max(field.getWidth(),size.width),size.height);
        if (sz.width > 800 || sz.height > 800) {
          final int extra=new JBScrollPane().getVerticalScrollBar().getWidth();
          sz=new Dimension(Math.min(800,Math.max(field.getWidth(),size.width + extra)),Math.min(800,size.height + extra));
          sz.width+=16;
        }
 else {
          sz.height++;
          sz.height++;
          sz.width++;
          sz.width++;
        }
        sz.width=600;
        sz.height=800;
        myPopup.setSize(sz);
        final Point screen=field.getLocationOnScreen();
        final int x=screen.x + field.getWidth() - myPopup.getSize().width;
        myPopup.setLocation(new Point(x,myPopup.getLocationOnScreen().y));
      }
    }
  }
);
}
