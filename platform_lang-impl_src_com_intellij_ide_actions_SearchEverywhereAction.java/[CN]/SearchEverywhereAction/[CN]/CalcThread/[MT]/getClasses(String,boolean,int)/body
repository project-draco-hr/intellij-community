{
  int counter=0;
  final Set<Object> elements=new LinkedHashSet<Object>();
  myClassChooseByName.getProvider().filterElements(myClassChooseByName,pattern,includeLibs,myProgressIndicator,new Processor<Object>(){
    @Override public boolean process(    Object o){
      if (o instanceof PsiElement && !myListModel.contains(o)) {
        elements.add(o);
      }
      return elements.size() < max;
    }
  }
);
  final List<Object> classes=new ArrayList<Object>();
  for (  Object object : elements) {
    check();
    if (counter > max)     break;
    if (!myListModel.contains(object)) {
      if (object instanceof PsiElement) {
        classes.add(object);
      }
      counter++;
      if (counter > max)       break;
    }
  }
  if (!includeLibs && classes.isEmpty()) {
    return getClasses(pattern,true,max);
  }
  return classes;
}
