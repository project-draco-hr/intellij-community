{
  final MinusculeMatcher matcher=new MinusculeMatcher("*" + pattern,NameUtil.MatchingCaseSensitivity.NONE);
  final ArrayList<VirtualFile> files=new ArrayList<VirtualFile>();
  final List<VirtualFile> selected=Arrays.asList(FileEditorManager.getInstance(project).getSelectedFiles());
  for (  VirtualFile file : ArrayUtil.reverseArray(EditorHistoryManager.getInstance(project).getFiles())) {
    if (StringUtil.isEmptyOrSpaces(pattern) || matcher.matches(file.getName())) {
      if (!files.contains(file) && !selected.contains(file)) {
        files.add(file);
      }
    }
    if (files.size() > MAX_RECENT_FILES)     break;
  }
  if (files.size() > 0) {
    myAlreadyAddedFiles.addAll(files);
    SwingUtilities.invokeLater(new Runnable(){
      @Override public void run(){
        if (isCanceled())         return;
        myListModel.myTitleIndexes.recentFiles=myListModel.size();
        for (        java.lang.Object file : files) {
          myListModel.addElement(file);
        }
      }
    }
);
  }
}
