{
  final Object value=myList.getSelectedValue();
  final Project project=PlatformDataKeys.PROJECT.getData(DataManager.getInstance().getDataContext(field.getTextEditor()));
  IdeFocusManager focusManager=IdeFocusManager.findInstanceByComponent(field.getTextEditor());
  if (myPopup != null && myPopup.isVisible()) {
    myPopup.cancel();
  }
  AccessToken token=ApplicationManager.getApplication().acquireReadActionLock();
  try {
    if (value instanceof PsiElement) {
      NavigationUtil.activateFileWithPsiElement((PsiElement)value,true);
      return;
    }
 else     if (value instanceof VirtualFile) {
      OpenFileDescriptor navigatable=new OpenFileDescriptor(project,(VirtualFile)value);
      if (navigatable.canNavigate()) {
        navigatable.navigate(true);
        return;
      }
    }
 else {
      focusManager.requestDefaultFocus(true);
      IdeFocusManager.getInstance(project).doWhenFocusSettlesDown(new Runnable(){
        @Override public void run(){
          GotoActionAction.openOptionOrPerformAction(value,field.getText(),project,myContextComponent,myActionEvent);
        }
      }
);
      return;
    }
  }
  finally {
    token.finish();
  }
  focusManager.requestDefaultFocus(true);
}
