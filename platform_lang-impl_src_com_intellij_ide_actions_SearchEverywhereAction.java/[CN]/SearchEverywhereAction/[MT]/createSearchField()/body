{
  field=new SearchTextField(){
    @Override public void paint(    Graphics g){
      super.paint(g);
      final JTextField editor=field.getTextEditor();
      if (StringUtil.isEmpty(editor.getText()) && !editor.hasFocus()) {
        final int baseline=editor.getUI().getBaseline(editor,editor.getWidth(),editor.getHeight());
        final Color color=UIUtil.getInactiveTextColor();
        final GraphicsConfig config=GraphicsUtil.setupAAPainting(g);
        g.setColor(color);
        final Font font=editor.getFont();
        g.setFont(new Font(font.getName(),Font.ITALIC,font.getSize()));
        final String shortcut="Ctrl + F10";
        if (UIUtil.isUnderDarcula()) {
          g.drawString(shortcut,30,baseline + 2);
        }
 else {
          g.drawString(shortcut,20,baseline + 4);
        }
        config.restore();
      }
    }
  }
;
  int columns=20;
  if (UIUtil.isUnderDarcula() || UIUtil.isUnderAquaLookAndFeel()) {
    columns=7;
  }
  final JTextField editor=field.getTextEditor();
  editor.setColumns(columns);
  editor.getDocument().addDocumentListener(new DocumentAdapter(){
    @Override protected void textChanged(    DocumentEvent e){
      final String pattern=editor.getText();
      myAlarm.cancelAllRequests();
      myAlarm.addRequest(new Runnable(){
        @Override public void run(){
          rebuildList(pattern);
        }
      }
,300);
    }
  }
);
  editor.addFocusListener(new FocusAdapter(){
    @Override public void focusGained(    FocusEvent e){
      final Project project=PlatformDataKeys.PROJECT.getData(DataManager.getInstance().getDataContext(editor));
      editor.setColumns(25);
      myFocusComponent=e.getOppositeComponent();
      SwingUtilities.invokeLater(new Runnable(){
        @Override public void run(){
          final JComponent parent=(JComponent)editor.getParent();
          parent.revalidate();
          parent.repaint();
        }
      }
);
    }
    @Override public void focusLost(    FocusEvent e){
      editor.setColumns(7);
      myAlarm.cancelAllRequests();
      SwingUtilities.invokeLater(new Runnable(){
        @Override public void run(){
          final JComponent parent=(JComponent)editor.getParent();
          parent.revalidate();
          parent.repaint();
        }
      }
);
    }
  }
);
}
