{
  final SearchResult symbols=new SearchResult();
  final GlobalSearchScope scope=GlobalSearchScope.projectScope(project);
  mySymbolsChooseByName.getProvider().filterElements(mySymbolsChooseByName,pattern,false,myProgressIndicator,new Processor<Object>(){
    @Override public boolean process(    Object o){
      if (o instanceof PsiElement) {
        final PsiElement element=(PsiElement)o;
        final PsiFile file=element.getContainingFile();
        if (!myListModel.contains(o) && file != null && file.getVirtualFile() != null && scope.accept(file.getVirtualFile())) {
          symbols.add(o);
        }
      }
      symbols.needMore=symbols.size() == max;
      return !symbols.needMore;
    }
  }
);
  return symbols;
}
