{
  final SearchResult classes=new SearchResult();
  myClassChooseByName.getProvider().filterElements(myClassChooseByName,pattern,includeLibs,myProgressIndicator,new Processor<Object>(){
    @Override public boolean process(    Object o){
      if (o instanceof PsiElement && !myListModel.contains(o) && !classes.contains(o)) {
        if (classes.size() == max) {
          classes.needMore=true;
          return false;
        }
        classes.add(o);
      }
      return true;
    }
  }
);
  if (!includeLibs && classes.isEmpty()) {
    return getClasses(pattern,true,max);
  }
  return classes;
}
