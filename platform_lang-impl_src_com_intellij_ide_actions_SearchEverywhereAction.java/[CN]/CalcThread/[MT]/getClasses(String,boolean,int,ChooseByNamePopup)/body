{
  final SearchResult classes=new SearchResult();
  if (chooseByNamePopup == null || shouldSkipPattern(pattern)) {
    return classes;
  }
  chooseByNamePopup.getProvider().filterElements(chooseByNamePopup,pattern,includeLibs,myProgressIndicator,new Processor<Object>(){
    @Override public boolean process(    Object o){
      if (SearchEverywhereClassifier.EP_Manager.isClass(o) && !myListModel.contains(o) && !classes.contains(o)) {
        if (classes.size() == max) {
          classes.needMore=true;
          return false;
        }
        PsiElement element=null;
        if (o instanceof PsiElement) {
          element=(PsiElement)o;
        }
 else         if (o instanceof PsiElementNavigationItem) {
          element=((PsiElementNavigationItem)o).getTargetElement();
        }
        classes.add(o);
        if (element instanceof PsiNamedElement) {
          final String name=((PsiNamedElement)element).getName();
          VirtualFile virtualFile=SearchEverywhereClassifier.EP_Manager.getVirtualFile(o);
          if (virtualFile != null) {
            if (StringUtil.equals(name,virtualFile.getNameWithoutExtension())) {
              myAlreadyAddedFiles.add(virtualFile);
            }
          }
        }
      }
      return true;
    }
  }
);
  if (!includeLibs && classes.isEmpty()) {
    return getClasses(pattern,true,max,chooseByNamePopup);
  }
  return classes;
}
