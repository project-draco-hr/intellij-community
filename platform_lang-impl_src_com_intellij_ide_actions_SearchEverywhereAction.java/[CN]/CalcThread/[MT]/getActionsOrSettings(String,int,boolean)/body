{
  final SearchResult result=new SearchResult();
  if ((actions && !Registry.is("search.everywhere.actions")) || (!actions && !Registry.is("search.everywhere.settings"))) {
    return result;
  }
  final MinusculeMatcher matcher=new MinusculeMatcher("*" + pattern,NameUtil.MatchingCaseSensitivity.NONE);
  if (myActionProvider == null) {
    myActionProvider=createActionProvider();
  }
  myActionProvider.filterElements(pattern,true,new Processor<GotoActionModel.MatchedValue>(){
    @Override public boolean process(    GotoActionModel.MatchedValue matched){
      check();
      Object object=matched.value;
      if (myListModel.contains(object))       return true;
      if (!actions && isSetting(object)) {
        if (matcher.matches(getSettingText((OptionDescription)object))) {
          result.add(object);
        }
      }
 else       if (actions && !isToolWindowAction(object) && isActionValue(object)) {
        AnAction action=object instanceof AnAction ? ((AnAction)object) : ((GotoActionModel.ActionWrapper)object).getAction();
        Object lock=myCalcThread;
        if (lock != null) {
synchronized (lock) {
            if (isEnabled(action)) {
              result.add(object);
            }
          }
        }
      }
      return result.size() <= max;
    }
  }
);
  return result;
}
