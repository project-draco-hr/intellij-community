{
  if ("assertThat".equals(methodName) && call != null) {
    PsiExpression[] args=call.getArgumentList().getExpressions();
    if (args.length == paramCount) {
      for (int i=1; i < args.length; i++) {
        if (isNotNullMatcher(args[i])) {
          MethodContract.ValueConstraint[] constraints=createConstraintArray(args.length);
          constraints[i - 1]=NULL_VALUE;
          return Collections.singletonList(new MethodContract(constraints,THROW_EXCEPTION));
        }
      }
      if (args.length == 1) {
        final PsiElement parent=call.getParent();
        if (parent instanceof PsiReferenceExpression && "isNotNull".equals(((PsiReferenceExpression)parent).getReferenceName()) && parent.getParent() instanceof PsiMethodCallExpression) {
          return Collections.singletonList(new MethodContract(new MethodContract.ValueConstraint[]{NULL_VALUE},THROW_EXCEPTION));
        }
      }
    }
    return Collections.emptyList();
  }
  if (!"junit.framework.Assert".equals(className) && !"junit.framework.TestCase".equals(className) && !"org.junit.Assert".equals(className)&& !"org.testng.Assert".equals(className)&& !"org.testng.AssertJUnit".equals(className)) {
    return Collections.emptyList();
  }
  boolean testng=className.startsWith("org.testng.");
  if ("fail".equals(methodName)) {
    return Collections.singletonList(new MethodContract(createConstraintArray(paramCount),THROW_EXCEPTION));
  }
  int checkedParam=testng ? 0 : paramCount - 1;
  MethodContract.ValueConstraint[] constraints=createConstraintArray(paramCount);
  if ("assertTrue".equals(methodName)) {
    constraints[checkedParam]=FALSE_VALUE;
    return Collections.singletonList(new MethodContract(constraints,THROW_EXCEPTION));
  }
  if ("assertFalse".equals(methodName)) {
    constraints[checkedParam]=TRUE_VALUE;
    return Collections.singletonList(new MethodContract(constraints,THROW_EXCEPTION));
  }
  if ("assertNull".equals(methodName)) {
    constraints[checkedParam]=NOT_NULL_VALUE;
    return Collections.singletonList(new MethodContract(constraints,THROW_EXCEPTION));
  }
  if ("assertNotNull".equals(methodName)) {
    constraints[checkedParam]=NULL_VALUE;
    return Collections.singletonList(new MethodContract(constraints,THROW_EXCEPTION));
  }
  return Collections.emptyList();
}
