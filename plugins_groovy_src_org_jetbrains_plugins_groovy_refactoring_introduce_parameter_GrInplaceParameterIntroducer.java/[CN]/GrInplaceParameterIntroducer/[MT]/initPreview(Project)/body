{
  myPreview=(EditorEx)EditorFactory.getInstance().createEditor(EditorFactory.getInstance().createDocument(""),project,GroovyFileType.GROOVY_FILE_TYPE,true);
  myPreview.setOneLineMode(true);
  final EditorSettings settings=myPreview.getSettings();
  settings.setAdditionalLinesCount(0);
  settings.setAdditionalColumnsCount(1);
  settings.setRightMarginShown(false);
  settings.setFoldingOutlineShown(false);
  settings.setLineNumbersShown(false);
  settings.setLineMarkerAreaShown(false);
  settings.setIndentGuidesShown(false);
  settings.setVirtualSpace(false);
  myPreview.setHorizontalScrollbarVisible(false);
  myPreview.setVerticalScrollbarVisible(false);
  myPreview.setCaretEnabled(false);
  settings.setLineCursorWidth(1);
  final Color bg=myPreview.getColorsScheme().getColor(EditorColors.CARET_ROW_COLOR);
  myPreview.setBackgroundColor(bg);
  myPreview.setBorder(BorderFactory.createCompoundBorder(new DottedBorder(Color.gray),new LineBorder(bg,2)));
  myPreviewComponent=new JPanel(new BorderLayout());
  myPreviewComponent.add(myPreview.getComponent(),BorderLayout.CENTER);
  myPreviewComponent.setBorder(new EmptyBorder(2,2,6,2));
  DocumentAdapter documentAdapter=new DocumentAdapter(){
    @Override public void documentChanged(    DocumentEvent e){
      if (myPreview == null)       return;
      final TemplateState templateState=TemplateManagerImpl.getTemplateState(myEditor);
      if (templateState != null) {
        final TextResult value=templateState.getVariableValue(InplaceRefactoring.PRIMARY_VARIABLE_NAME);
        if (value != null) {
          updateTitle(getVariable(),value.getText());
        }
      }
    }
  }
;
  myEditor.getDocument().addDocumentListener(documentAdapter);
}
