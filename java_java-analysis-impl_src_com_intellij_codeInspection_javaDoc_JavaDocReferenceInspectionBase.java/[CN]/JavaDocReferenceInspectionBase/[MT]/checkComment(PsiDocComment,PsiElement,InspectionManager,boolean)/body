{
  if (docComment == null)   return null;
  final List<ProblemDescriptor> problems=new ArrayList<>();
  final Set<PsiJavaCodeReferenceElement> references=new HashSet<>();
  docComment.accept(getVisitor(references,context,problems,manager,isOnTheFly));
  for (  PsiJavaCodeReferenceElement reference : references) {
    final PsiElement referenceNameElement=reference.getReferenceNameElement();
    problems.add(manager.createProblemDescriptor(referenceNameElement != null ? referenceNameElement : reference,cannotResolveSymbolMessage("<code>" + reference.getText() + "</code>"),!isOnTheFly ? null : createAddQualifierFix(reference),ProblemHighlightType.LIKE_UNKNOWN_SYMBOL,isOnTheFly));
  }
  return problems.isEmpty() ? null : problems.toArray(new ProblemDescriptor[problems.size()]);
}
