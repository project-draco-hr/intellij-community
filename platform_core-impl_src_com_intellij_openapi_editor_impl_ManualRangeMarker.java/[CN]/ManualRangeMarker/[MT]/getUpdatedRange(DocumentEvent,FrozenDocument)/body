{
  if (event instanceof RetargetRangeMarkers) {
    int start=((RetargetRangeMarkers)event).getStartOffset();
    if (myRange.getStartOffset() >= start && myRange.getEndOffset() <= ((RetargetRangeMarkers)event).getEndOffset()) {
      ProperTextRange range=myRange.shiftRight(((RetargetRangeMarkers)event).getMoveDestinationOffset() - start);
      return new ManualRangeMarker(range,myGreedyLeft,myGreedyRight,mySurviveOnExternalChange,null);
    }
  }
  if (mySurviveOnExternalChange && PersistentRangeMarkerUtil.shouldTranslateViaDiff(event,myRange)) {
    PersistentRangeMarker.LinesCols linesCols=myLinesCols != null ? myLinesCols : PersistentRangeMarker.storeLinesAndCols(myRange,documentBefore);
    Pair<ProperTextRange,PersistentRangeMarker.LinesCols> pair=PersistentRangeMarker.translateViaDiff((DocumentEventImpl)event,linesCols);
    if (pair != null) {
      return new ManualRangeMarker(pair.first,myGreedyLeft,myGreedyRight,true,pair.second);
    }
  }
  ProperTextRange range=RangeMarkerImpl.applyChange(event,myRange.getStartOffset(),myRange.getEndOffset(),myGreedyLeft,myGreedyRight);
  return range == null ? null : new ManualRangeMarker(range,myGreedyLeft,myGreedyRight,mySurviveOnExternalChange,null);
}
