{
  PsiElement[] methodCalls=PsiTreeUtil.collectElements(method,new PsiElementFilter(){
    public boolean isAccepted(    PsiElement element){
      if (!(element instanceof PsiMethodCallExpression))       return false;
      final PsiMethodCallExpression methodCall=(PsiMethodCallExpression)element;
      final PsiMethod method=methodCall.resolveMethod();
      if (method != null) {
        final PsiClass containingClass=method.getContainingClass();
        if (containingClass != null) {
          final String qualifiedName=containingClass.getQualifiedName();
          if ("junit.framework.Assert".equals(qualifiedName) || "org.junit.Assert".equals(qualifiedName) || "junit.framework.TestCase".equals(qualifiedName)) {
            return true;
          }
        }
      }
      return false;
    }
  }
);
  PsiMethodCallExpression[] expressions=new PsiMethodCallExpression[methodCalls.length];
  System.arraycopy(methodCalls,0,expressions,0,methodCalls.length);
  return expressions;
}
