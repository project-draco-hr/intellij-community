{
  final Project project=e.getData(CommonDataKeys.PROJECT);
  final ShelvedChangeList[] changeLists=e.getData(ShelvedChangesViewManager.SHELVED_CHANGELIST_KEY);
  if (project == null || changeLists == null || changeLists.length != 1)   return;
  FileDocumentManager.getInstance().saveAllDocuments();
  ShelvedChangeList changeList=changeLists[0];
  final VirtualFile virtualFile=LocalFileSystem.getInstance().refreshAndFindFileByIoFile(new File(changeList.PATH));
  if (virtualFile == null) {
    VcsBalloonProblemNotifier.showOverChangesView(project,"Can not find path file",MessageType.ERROR);
    return;
  }
  Change[] preselectedChanges=e.getData(VcsDataKeys.CHANGES);
  List<ShelveChangesManager.ShelvedBinaryFilePatch> binaryShelvedPatches=ContainerUtil.map(changeList.getBinaryFiles(),new Function<ShelvedBinaryFile,ShelveChangesManager.ShelvedBinaryFilePatch>(){
    @Override public ShelveChangesManager.ShelvedBinaryFilePatch fun(    ShelvedBinaryFile file){
      return new ShelveChangesManager.ShelvedBinaryFilePatch(file);
    }
  }
);
  final ApplyPatchDifferentiatedDialog dialog=new ApplyPatchDifferentiatedDialog(project,new ApplyPatchDefaultExecutor(project),Collections.<ApplyPatchExecutor>emptyList(),ApplyPatchMode.UNSHELVE,virtualFile,null,getPredefinedChangeList(changeList.DESCRIPTION,ChangeListManager.getInstance(project)),binaryShelvedPatches,hasNotAllSelectedChanges(project,changeList,preselectedChanges) ? newArrayList(preselectedChanges) : null,changeList.DESCRIPTION);
  dialog.setHelpId("reference.dialogs.vcs.unshelve");
  dialog.show();
}
