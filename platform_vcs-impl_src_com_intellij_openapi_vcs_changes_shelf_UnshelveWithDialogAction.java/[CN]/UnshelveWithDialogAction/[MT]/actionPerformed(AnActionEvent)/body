{
  final Project project=e.getData(CommonDataKeys.PROJECT);
  final ShelvedChangeList[] changeLists=e.getData(ShelvedChangesViewManager.SHELVED_CHANGELIST_KEY);
  if (project == null || changeLists == null || changeLists.length == 0)   return;
  FileDocumentManager.getInstance().saveAllDocuments();
  if (changeLists.length > 1) {
    unshelveMultipleShelveChangeLists(e.getData(ShelvedChangesViewManager.SHELVED_CHANGE_KEY),project,changeLists,e.getData(ShelvedChangesViewManager.SHELVED_BINARY_FILE_KEY));
  }
 else {
    ShelvedChangeList changeList=changeLists[0];
    final VirtualFile virtualFile=LocalFileSystem.getInstance().refreshAndFindFileByIoFile(new File(changeList.PATH));
    if (virtualFile == null) {
      VcsBalloonProblemNotifier.showOverChangesView(project,"Can not find path file",MessageType.ERROR);
      return;
    }
    List<ShelvedBinaryFilePatch> binaryShelvedPatches=ContainerUtil.map(changeList.getBinaryFiles(),new Function<ShelvedBinaryFile,ShelvedBinaryFilePatch>(){
      @Override public ShelvedBinaryFilePatch fun(      ShelvedBinaryFile file){
        return new ShelvedBinaryFilePatch(file);
      }
    }
);
    final ApplyPatchDifferentiatedDialog dialog=new MyUnshelveDialog(project,virtualFile,changeList,binaryShelvedPatches,e.getData(VcsDataKeys.CHANGES));
    dialog.setHelpId("reference.dialogs.vcs.unshelve");
    dialog.show();
  }
}
