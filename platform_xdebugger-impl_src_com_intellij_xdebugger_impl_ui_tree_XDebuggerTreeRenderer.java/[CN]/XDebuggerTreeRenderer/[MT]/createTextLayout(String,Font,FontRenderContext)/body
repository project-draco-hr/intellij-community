{
  if (StringUtil.isEmpty(text))   return null;
  FontPreferences fontPreferences=EditorColorsManager.getInstance().getGlobalScheme().getFontPreferences();
  AttributedString string=new AttributedString(text);
  int start=0;
  int end=text.length();
  AttributedCharacterIterator it=string.getIterator(new AttributedCharacterIterator.Attribute[0],start,end);
  Font currentFont=basefont;
  int currentIndex=start;
  for (char c=it.first(); c != CharacterIterator.DONE; c=it.next()) {
    Font font=basefont;
    if (!font.canDisplay(c)) {
      font=ComplementaryFontsRegistry.getFontAbleToDisplay(c,basefont.getStyle(),fontPreferences).getFont();
    }
    int i=it.getIndex();
    if (!font.equals(currentFont)) {
      if (i > currentIndex) {
        string.addAttribute(TextAttribute.FONT,currentFont,currentIndex,i);
      }
      currentFont=font.deriveFont(basefont.getSize2D());
      currentIndex=i;
    }
  }
  if (currentIndex < end) {
    string.addAttribute(TextAttribute.FONT,currentFont,currentIndex,end);
  }
  return new TextLayout(string.getIterator(),fontRenderContext);
}
