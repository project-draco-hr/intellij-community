{
  if (!isAvailable(parameters)) {
    return;
  }
  final ZenCodingGenerator generator=getGenerator();
  if (!generator.isMyContext(parameters.getPosition(),false) || !generator.isAppliedByDefault(parameters.getPosition())) {
    return;
  }
  ZenCodingTemplate zenCodingTemplate=CustomLiveTemplate.EP_NAME.findExtension(ZenCodingTemplate.class);
  if (zenCodingTemplate == null) {
    return;
  }
  final PsiFile file=parameters.getPosition().getContainingFile();
  final Editor editor=parameters.getEditor();
  final String completionPrefix=result.getPrefixMatcher().getPrefix();
  final String templatePrefix=LiveTemplateCompletionContributor.findLiveTemplatePrefix(file,editor,completionPrefix);
  if (LiveTemplateCompletionContributor.findApplicableTemplate(file,parameters.getOffset(),templatePrefix) != null) {
    result.restartCompletionOnPrefixChange(StandardPatterns.string().startsWith(templatePrefix));
    return;
  }
  final Ref<TemplateImpl> generatedTemplate=new Ref<TemplateImpl>();
  final CustomTemplateCallback callback=new CustomTemplateCallback(editor,file,false){
    @Override public void deleteTemplateKey(    String key){
    }
    @Override public void startTemplate(    Template template,    Map<String,String> predefinedValues,    TemplateEditingListener listener){
      if (template instanceof TemplateImpl && !((TemplateImpl)template).isDeactivated()) {
        generatedTemplate.set((TemplateImpl)template);
      }
    }
  }
;
  final Collection<SingleLineEmmetFilter> extraFilters=ContainerUtil.newLinkedList(new SingleLineEmmetFilter());
  ZenCodingTemplate.expand(templatePrefix,callback,null,generator,extraFilters,false);
  if (!generatedTemplate.isNull()) {
    result=result.withPrefixMatcher(templatePrefix);
    final TemplateImpl template=generatedTemplate.get();
    template.setKey(templatePrefix);
    template.setDescription(template.getTemplateText());
    result.addElement(createLookupElement(zenCodingTemplate,template));
    result.restartCompletionOnPrefixChange(StandardPatterns.string().startsWith(templatePrefix));
  }
}
