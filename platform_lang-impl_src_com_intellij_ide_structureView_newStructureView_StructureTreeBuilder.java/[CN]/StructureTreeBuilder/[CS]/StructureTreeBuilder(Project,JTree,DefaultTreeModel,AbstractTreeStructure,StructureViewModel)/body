{
  super(tree,treeModel,treeStructure,null,false);
  myProject=project;
  myStructureModel=structureModel;
  final ModelListener myModelListener=new ModelListener(){
    @Override public void onModelChanged(){
      addRootToUpdate();
    }
  }
;
  PsiManager.getInstance(myProject).addPsiTreeChangeListener(new MyPsiTreeChangeListener(),this);
  CopyPasteUtil.DefaultCopyPasteListener copyPasteListener=new CopyPasteUtil.DefaultCopyPasteListener(getUpdater());
  CopyPasteManager.getInstance().addContentChangedListener(copyPasteListener,this);
  initRootNode();
  myStructureModel.addModelListener(myModelListener);
  Disposer.register(this,new Disposable(){
    @Override public void dispose(){
      myStructureModel.removeModelListener(myModelListener);
    }
  }
);
  setCanYieldUpdate(!ApplicationManager.getApplication().isUnitTestMode());
}
