{
  final JPanel wholePanel=new JPanel(new BorderLayout());
  final JPanel panelWithFileTextField=new JPanel(new BorderLayout());
  panelWithFileTextField.add(myFileRb,BorderLayout.NORTH);
  panelWithFileTextField.add(myFileFieldComp,BorderLayout.CENTER);
  final JPanel panelWithHistory=new JPanel(new BorderLayout());
  panelWithHistory.add(myHistoryRb,BorderLayout.NORTH);
  final JPanel historyPanel=new JPanel(new BorderLayout());
  final ToolbarDecorator decorator=ToolbarDecorator.createDecorator(myList).disableUpAction().disableDownAction().disableAddAction().setRemoveAction(new AnActionButtonRunnable(){
    @Override public void run(    AnActionButton button){
      ListUtil.removeSelectedItems(myList);
    }
  }
);
  historyPanel.add(decorator.createPanel(),BorderLayout.CENTER);
  myHistorySizeField.setText(PropertiesComponent.getInstance().getValue(ImportTestsAction.TEST_HISTORY_SIZE,"5"));
  final LabeledComponent<JBTextField> sizeComponent=new LabeledComponent<JBTextField>();
  sizeComponent.setText("History size:");
  sizeComponent.setComponent(myHistorySizeField);
  sizeComponent.setLabelLocation(BorderLayout.WEST);
  historyPanel.add(sizeComponent,BorderLayout.SOUTH);
  panelWithHistory.add(historyPanel,BorderLayout.CENTER);
  wholePanel.add(panelWithFileTextField,BorderLayout.NORTH);
  wholePanel.add(panelWithHistory,BorderLayout.CENTER);
  final ActionListener enableListener=new ActionListener(){
    @Override public void actionPerformed(    ActionEvent e){
      updateComponents(historyPanel);
    }
  }
;
  myFileRb.addActionListener(enableListener);
  myHistoryRb.addActionListener(enableListener);
  final boolean hasHistory=!myList.isEmpty();
  myFileRb.setSelected(!hasHistory);
  myHistoryRb.setSelected(hasHistory);
  updateComponents(historyPanel);
  return wholePanel;
}
