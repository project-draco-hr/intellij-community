{
  final String methodName=method.getName();
  if (!HardcodedMethodConstants.FINALIZE.equals(methodName)) {
    return;
  }
  if (method.hasModifierProperty(PsiModifier.NATIVE) || method.hasModifierProperty(PsiModifier.ABSTRACT)) {
    return;
  }
  final PsiClass containingClass=method.getContainingClass();
  if (containingClass == null) {
    return;
  }
  if (ignoreObjectSubclasses) {
    final PsiClass superClass=containingClass.getSuperClass();
    if (superClass != null) {
      final String superClassName=superClass.getQualifiedName();
      if (CommonClassNames.JAVA_LANG_OBJECT.equals(superClassName)) {
        return;
      }
    }
  }
  final PsiParameterList parameterList=method.getParameterList();
  if (parameterList.getParametersCount() != 0) {
    return;
  }
  if (MethodCallUtils.containsSuperMethodCall(HardcodedMethodConstants.FINALIZE,method)) {
    return;
  }
  if (ignoreTrivialFinalizers && MethodUtils.isTrivial(method,false)) {
    return;
  }
  registerMethodError(method);
}
