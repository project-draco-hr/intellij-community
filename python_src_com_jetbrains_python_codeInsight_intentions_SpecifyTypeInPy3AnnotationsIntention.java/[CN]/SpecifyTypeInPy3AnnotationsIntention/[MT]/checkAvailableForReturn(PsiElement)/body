{
  PyCallExpression callExpression=PsiTreeUtil.getParentOfType(elementAt,PyCallExpression.class);
  if (callExpression != null && callExpression.resolveCalleeFunction(PyResolveContext.defaultContext()) != null) {
    final PyExpression callee=callExpression.getCallee();
    if (callee != null) {
      final PsiReference reference=callee.getReference();
      final Callable callable=callExpression.resolveCalleeFunction(PyResolveContext.defaultContext());
      if (callable instanceof PyFunction) {
        if (reference instanceof PsiPolyVariantReference && ((PsiPolyVariantReference)reference).multiResolve(false).length == 1) {
          PyAssignmentStatement assignmentStatement=PsiTreeUtil.getParentOfType(elementAt,PyAssignmentStatement.class);
          if (assignmentStatement != null) {
            final PyExpression assignedValue=assignmentStatement.getAssignedValue();
            if (assignedValue != null) {
              PyType type=assignedValue.getType(TypeEvalContext.slow());
              if (type == null || type instanceof PyReturnTypeReference) {
                myText=PyBundle.message("INTN.specify.returt.type.in.annotation");
                return true;
              }
            }
          }
        }
      }
    }
  }
 else {
    PyFunction parentFunction=PsiTreeUtil.getParentOfType(elementAt,PyFunction.class);
    if (parentFunction != null) {
      final ASTNode nameNode=parentFunction.getNameNode();
      if (nameNode != null && nameNode.getPsi() == elementAt) {
        myText=PyBundle.message("INTN.specify.returt.type.in.annotation");
        return true;
      }
    }
  }
  return false;
}
