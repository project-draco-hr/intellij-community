{
  myText=PyBundle.message("INTN.specify.type.in.annotation");
  if (!LanguageLevel.forElement(file).isPy3K())   return false;
  int offset=editor.getCaretModel().getOffset();
  PsiElement elementAt=PyUtil.findNonWhitespaceAtOffset(file,offset);
  if (elementAt == null)   return false;
  if (checkAvailableForReturn(elementAt))   return true;
  PyExpression problemElement=PyUtil.findProblemElement(editor,file,PyNamedParameter.class,PyQualifiedExpression.class);
  if (problemElement == null)   return false;
  if (problemElement instanceof PyQualifiedExpression) {
    final PyExpression qualifier=((PyQualifiedExpression)problemElement).getQualifier();
    if (qualifier != null && !qualifier.getText().equals(PyNames.CANONICAL_SELF)) {
      problemElement=qualifier;
    }
  }
  if (problemElement.getParent() instanceof PyCallExpression || PsiTreeUtil.getParentOfType(problemElement,PyLambdaExpression.class) != null) {
    return false;
  }
  return checkType(problemElement);
}
