{
  InspectionProfileImpl rootProfile=InspectionProfileManager.getInstance().getCurrentProfile();
  LinkedHashSet<InspectionToolWrapper> allWrappers=new LinkedHashSet<>();
  allWrappers.add(toolWrapper);
  rootProfile.collectDependentInspections(toolWrapper,allWrappers,managerEx.getProject());
  List<InspectionToolWrapper> toolWrappers=allWrappers.size() == 1 ? Collections.singletonList(allWrappers.iterator().next()) : new ArrayList<>(allWrappers);
  InspectionProfileImpl model=InspectionProfileImpl.createSimple(toolWrapper.getDisplayName(),managerEx.getProject(),toolWrappers);
  try {
    Element element=new Element("toCopy");
    for (    InspectionToolWrapper wrapper : toolWrappers) {
      wrapper.getTool().writeSettings(element);
      InspectionToolWrapper tw=psiElement == null ? model.getInspectionTool(wrapper.getShortName(),managerEx.getProject()) : model.getInspectionTool(wrapper.getShortName(),psiElement);
      tw.getTool().readSettings(element);
    }
  }
 catch (  WriteExternalException ignored) {
  }
catch (  InvalidDataException ignored) {
  }
  model.setSingleTool(toolWrapper.getShortName());
  return model;
}
