{
switch (myRelation) {
case LT:
    return VERSION_COMPARATOR.compare(version,myVersion) < 0;
case LTE:
  return VERSION_COMPARATOR.compare(version,myVersion) <= 0;
case GT:
return VERSION_COMPARATOR.compare(version,myVersion) > 0;
case GTE:
return VERSION_COMPARATOR.compare(version,myVersion) >= 0;
case EQ:
final Pair<String,String> publicAndLocalVersions=splitIntoPublicAndLocalVersions(myVersion);
final Pair<String,String> otherPublicAndLocalVersions=splitIntoPublicAndLocalVersions(version);
final boolean publicVersionsAreSame=VERSION_COMPARATOR.compare(otherPublicAndLocalVersions.first,publicAndLocalVersions.first) == 0;
return publicVersionsAreSame && (publicAndLocalVersions.second.isEmpty() || otherPublicAndLocalVersions.second.equals(publicAndLocalVersions.second));
case NE:
return VERSION_COMPARATOR.compare(version,myVersion) != 0;
case COMPATIBLE:
return false;
case STR_EQ:
return version.equals(myVersion);
default :
return false;
}
}
