{
  PsiElement element=configureByFileWithMarker(BASE_PATH + "/" + getTestName(false)+ ".java","<var>");
  assertTrue(element instanceof PsiIdentifier);
  assertTrue(element.getParent() instanceof PsiVariable);
  ApplicationManager.getApplication().runWriteAction(new Runnable(){
    @Override public void run(){
      ((PsiVariable)element.getParent()).normalizeDeclaration();
    }
  }
);
  String textAfter=loadFile(getTestName(false) + "_after.java");
  ApplicationManager.getApplication().runWriteAction(new Runnable(){
    @Override public void run(){
      PostprocessReformattingAspect.getInstance(getProject()).doPostponedFormatting();
    }
  }
);
  PsiDocumentManager.getInstance(getProject()).commitAllDocuments();
  String fileText=myFile.getText();
  assertEquals(textAfter,fileText);
  PsiTestUtil.checkFileStructure(myFile);
}
