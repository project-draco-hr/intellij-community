{
  myProject=project;
  mySdk=sdk;
  sdk.getRootProvider().addRootSetChangedListener(new RootProvider.RootSetChangedListener(){
    @Override public void rootSetChanged(    RootProvider wrapper){
      clearCache();
      if (!project.isDisposed()) {
        final Module[] modules=ModuleManager.getInstance(project).getModules();
        for (        Module module : modules) {
          PythonModulePathCache.getInstance(module).clearCache();
        }
      }
      myBuiltins.set(null);
    }
  }
,this);
  VirtualFileManager.getInstance().addVirtualFileListener(new MyVirtualFileAdapter(),this);
  if (!project.isDisposed()) {
    project.getMessageBus().connect(this).subscribe(ProjectJdkTable.JDK_TABLE_TOPIC,new ProjectJdkTable.Adapter(){
      @Override public void jdkRemoved(      Sdk jdk){
        if (jdk == sdk) {
          Disposer.dispose(PythonSdkPathCache.this);
        }
      }
    }
);
    Disposer.register(project,this);
  }
}
