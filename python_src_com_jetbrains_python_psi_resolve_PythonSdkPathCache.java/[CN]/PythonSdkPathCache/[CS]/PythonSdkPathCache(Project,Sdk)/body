{
  myProject=project;
  mySdk=sdk;
  sdk.getRootProvider().addRootSetChangedListener(new RootProvider.RootSetChangedListener(){
    @Override public void rootSetChanged(    RootProvider wrapper){
      clearCache();
      final Module[] modules=ModuleManager.getInstance(project).getModules();
      for (      Module module : modules) {
        PythonModulePathCache.getInstance(module).clearCache();
      }
    }
  }
,this);
  VirtualFileManager.getInstance().addVirtualFileListener(new MyVirtualFileAdapter(),this);
  project.getMessageBus().connect(this).subscribe(ProjectJdkTable.JDK_TABLE_TOPIC,new ProjectJdkTable.Listener(){
    @Override public void jdkAdded(    Sdk jdk){
    }
    @Override public void jdkRemoved(    Sdk jdk){
      if (jdk == sdk) {
        Disposer.dispose(PythonSdkPathCache.this);
      }
    }
    @Override public void jdkNameChanged(    Sdk jdk,    String previousName){
    }
  }
);
  Disposer.register(project,this);
}
