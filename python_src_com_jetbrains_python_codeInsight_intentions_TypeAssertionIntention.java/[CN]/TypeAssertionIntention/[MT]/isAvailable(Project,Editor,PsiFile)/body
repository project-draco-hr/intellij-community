{
  PsiElement elementAt=PyUtil.findNonWhitespaceAtOffset(file,editor.getCaretModel().getOffset());
  PyExpression problemElement=PsiTreeUtil.getParentOfType(elementAt,PyReferenceExpression.class);
  if (problemElement == null)   return false;
  if (problemElement.getParent() instanceof PyWithItem)   return false;
  if (problemElement instanceof PyQualifiedExpression) {
    final PyExpression qualifier=((PyQualifiedExpression)problemElement).getQualifier();
    if (qualifier != null && !qualifier.getText().equals(PyNames.CANONICAL_SELF)) {
      problemElement=qualifier;
    }
  }
  final PsiReference reference=problemElement.getReference();
  if (problemElement.getParent() instanceof PyCallExpression || PsiTreeUtil.getParentOfType(problemElement,PyListCompExpression.class) != null || PsiTreeUtil.getParentOfType(problemElement,PyLambdaExpression.class) != null || PsiTreeUtil.getParentOfType(problemElement,PyGeneratorExpression.class) != null || (reference != null && reference.resolve() == null)) {
    return false;
  }
  final PyType type=problemElement.getType(TypeEvalContext.fastStubOnly(file));
  return (type == null || type instanceof PyReturnTypeReference);
}
