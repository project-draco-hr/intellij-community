{
  PyExpression problemElement=PsiTreeUtil.getTopmostParentOfType(file.findElementAt(editor.getCaretModel().getOffset() - 1),PyQualifiedExpression.class);
  if (problemElement == null)   return false;
  if (problemElement instanceof PyQualifiedExpression && ((PyQualifiedExpression)problemElement).getReferencedName() == null) {
    final PyExpression qualifier=((PyQualifiedExpression)problemElement).getQualifier();
    if (qualifier != null && !qualifier.getText().equals(PyNames.CANONICAL_SELF)) {
      problemElement=qualifier;
    }
  }
  final PyType type=problemElement.getType(TypeEvalContext.fast());
  return (type == null || type instanceof PyReturnTypeReference);
}
