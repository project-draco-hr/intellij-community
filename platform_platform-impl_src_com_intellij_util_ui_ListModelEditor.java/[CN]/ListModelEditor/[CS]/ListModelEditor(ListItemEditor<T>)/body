{
  super(itemEditor);
  list.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
  list.setCellRenderer(new MyListCellRenderer());
  toolbarDecorator=ToolbarDecorator.createDecorator(list,model).setAddAction(new AnActionButtonRunnable(){
    @Override public void run(    AnActionButton button){
      if (!model.isEmpty()) {
        T lastItem=model.getElementAt(model.getSize() - 1);
        if (itemEditor.isEmpty(lastItem)) {
          ListScrollingUtil.selectItem(list,ContainerUtil.indexOfIdentity(model.getItems(),lastItem));
          return;
        }
      }
      T item=createElement();
      model.add(item);
      ListScrollingUtil.selectItem(list,ContainerUtil.indexOfIdentity(model.getItems(),item));
    }
  }
).setRemoveActionUpdater(new AnActionButtonUpdater(){
    @Override public boolean isEnabled(    AnActionEvent e){
      return areSelectedItemsRemovable(list.getSelectionModel());
    }
  }
);
}
