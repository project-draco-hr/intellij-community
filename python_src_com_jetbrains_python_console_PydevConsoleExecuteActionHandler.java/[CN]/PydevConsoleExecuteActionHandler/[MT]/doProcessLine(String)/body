{
  final LanguageConsoleImpl console=myConsoleView.getConsole();
  final Editor currentEditor=console.getCurrentEditor();
  if (myInputBuffer == null) {
    myInputBuffer=new StringBuilder();
  }
  myInputBuffer.append(line).append("\n");
  if (myInMultilineStringState != null) {
    if (isMultilineStarts(line,DOUBLE_QUOTE_MULTILINE)) {
      myInMultilineStringState=null;
      console.setLanguage(PythonLanguage.getInstance());
      console.setPrompt(PyPromptUtil.ORDINARY_PROMPT);
    }
 else {
      return;
    }
  }
 else {
    if (isMultilineStarts(line,DOUBLE_QUOTE_MULTILINE)) {
      myInMultilineStringState=DOUBLE_QUOTE_MULTILINE;
    }
 else     if (isMultilineStarts(line,SINGLE_QUOTE_MULTILINE)) {
      myInMultilineStringState=SINGLE_QUOTE_MULTILINE;
    }
    if (myInMultilineStringState != null) {
      console.setLanguage(PlainTextLanguage.INSTANCE);
      console.setPrompt(PyPromptUtil.INDENT_PROMPT);
      return;
    }
  }
  if (line.endsWith("\\")) {
    console.setPrompt(PyPromptUtil.INDENT_PROMPT);
    return;
  }
  if (!StringUtil.isEmptyOrSpaces(line)) {
    int indent=myIndentHelper.getIndent(line,false);
    boolean flag=false;
    if (shouldIndent(line)) {
      indent+=getPythonIndent();
      flag=true;
    }
    if ((myCurrentIndentSize != -1 && indent >= myCurrentIndentSize) || flag) {
      myCurrentIndentSize=indent;
      indentEditor(currentEditor,indent);
      more(console,currentEditor);
      return;
    }
  }
  if (myConsoleCommunication != null) {
    final boolean waitedForInputBefore=myConsoleCommunication.isWaitingForInput();
    final String command=myInputBuffer.toString();
    if (myConsoleCommunication.isWaitingForInput()) {
      myInputBuffer.setLength(0);
    }
 else {
      executingPrompt(console);
    }
    myConsoleCommunication.execInterpreter(command,new ICallback<Object,InterpreterResponse>(){
      public Object call(      final InterpreterResponse interpreterResponse){
        myInputBuffer=null;
        if (interpreterResponse.need_input) {
          if (!PyPromptUtil.INPUT_PROMPT.equals(console.getPrompt())) {
            console.setPrompt(PyPromptUtil.INPUT_PROMPT);
            scrollDown(currentEditor);
          }
          myCurrentIndentSize=-1;
        }
 else         if (interpreterResponse.more) {
          more(console,currentEditor);
          if (myCurrentIndentSize == -1) {
            myCurrentIndentSize=myIndentHelper.getIndent(line,false) + getPythonIndent();
            indentEditor(currentEditor,myCurrentIndentSize);
          }
        }
 else {
          if (!myConsoleCommunication.isWaitingForInput()) {
            ordinaryPrompt(console,currentEditor);
          }
          myCurrentIndentSize=-1;
        }
        return null;
      }
    }
);
    if (waitedForInputBefore && !myConsoleCommunication.isWaitingForInput()) {
      console.setPrompt(PyPromptUtil.ORDINARY_PROMPT);
      scrollDown(currentEditor);
    }
  }
}
