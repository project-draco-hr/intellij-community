{
  if (namedScriptableDefinition == null) {
    return SSRBundle.message("no.constraints.specified.tooltip.message");
  }
  final StringBuilder buf=new StringBuilder();
  if (namedScriptableDefinition instanceof MatchVariableConstraint) {
    final MatchVariableConstraint constraint=(MatchVariableConstraint)namedScriptableDefinition;
    if (constraint.isPartOfSearchResults()) {
      append(buf,SSRBundle.message("target.tooltip.message"));
    }
    if (constraint.getRegExp() != null && constraint.getRegExp().length() > 0) {
      append(buf,SSRBundle.message("text.tooltip.message",constraint.isInvertRegExp() ? SSRBundle.message("not.tooltip.message") : "",constraint.getRegExp()));
    }
    if (constraint.isWithinHierarchy() || constraint.isStrictlyWithinHierarchy()) {
      append(buf,SSRBundle.message("within.hierarchy.tooltip.message"));
    }
    if (constraint.isReadAccess()) {
      append(buf,SSRBundle.message("value.read.tooltip.message",constraint.isInvertReadAccess() ? SSRBundle.message("not.tooltip.message") : ""));
    }
    if (constraint.isWriteAccess()) {
      append(buf,SSRBundle.message("value.written.tooltip.message",constraint.isInvertWriteAccess() ? SSRBundle.message("not.tooltip.message") : ""));
    }
    if (constraint.getNameOfExprType() != null && constraint.getNameOfExprType().length() > 0) {
      append(buf,SSRBundle.message("exprtype.tooltip.message",constraint.isInvertExprType() ? SSRBundle.message("not.tooltip.message") : "",constraint.getNameOfExprType(),constraint.isExprTypeWithinHierarchy() ? SSRBundle.message("supertype.tooltip.message") : ""));
    }
    if (constraint.getNameOfFormalArgType() != null && constraint.getNameOfFormalArgType().length() > 0) {
      append(buf,SSRBundle.message("expected.type.tooltip.message",constraint.isInvertFormalType() ? SSRBundle.message("not.tooltip.message") : "",constraint.getNameOfFormalArgType(),constraint.isFormalArgTypeWithinHierarchy() ? SSRBundle.message("supertype.tooltip.message") : ""));
    }
    if (StringUtil.isNotEmpty(constraint.getWithinConstraint())) {
      final String text=StringUtil.unquoteString(constraint.getWithinConstraint());
      append(buf,constraint.isInvertWithinConstraint() ? SSRBundle.message("not.within.constraints.tooltip.message",text) : SSRBundle.message("within.constraints.tooltip.message",text));
    }
    final String name=constraint.getName();
    if (!Configuration.CONTEXT_VAR_NAME.equals(name)) {
      if (constraint.getMinCount() == constraint.getMaxCount()) {
        append(buf,SSRBundle.message("occurs.tooltip.message",constraint.getMinCount()));
      }
 else {
        append(buf,SSRBundle.message("min.occurs.tooltip.message",constraint.getMinCount(),constraint.getMaxCount() == Integer.MAX_VALUE ? StringUtil.decapitalize(SSRBundle.message("editvarcontraints.unlimited")) : constraint.getMaxCount()));
      }
    }
  }
  final String script=namedScriptableDefinition.getScriptCodeConstraint();
  if (script != null && script.length() > 2) {
    final String str=SSRBundle.message("script.tooltip.message",StringUtil.stripQuotesAroundValue(script));
    append(buf,str);
  }
  if (buf.length() == 0) {
    return SSRBundle.message("no.constraints.specified.tooltip.message");
  }
  return buf.toString();
}
