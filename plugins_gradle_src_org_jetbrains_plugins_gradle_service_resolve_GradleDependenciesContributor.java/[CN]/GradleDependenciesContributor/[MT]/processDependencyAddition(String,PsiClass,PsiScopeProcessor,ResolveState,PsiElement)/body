{
  GrLightMethodBuilder builder=new GrLightMethodBuilder(place.getManager(),gradleConfigurationName);
  PsiClassType type=PsiType.getJavaLangObject(place.getManager(),place.getResolveScope());
  builder.addParameter(new GrLightParameter("dependencyInfo",type,builder));
  processor.execute(builder,state);
  GrMethodCall call=PsiTreeUtil.getParentOfType(place,GrMethodCall.class);
  if (call == null) {
    return;
  }
  GrArgumentList args=call.getArgumentList();
  if (args == null) {
    return;
  }
  int argsCount=0;
  boolean namedArgProcessed=false;
  for (  GroovyPsiElement arg : args.getAllArguments()) {
    if (arg instanceof GrNamedArgument) {
      if (!namedArgProcessed) {
        namedArgProcessed=true;
        argsCount++;
      }
    }
 else {
      argsCount++;
    }
  }
  argsCount++;
  for (  PsiMethod method : dependencyHandlerClass.findMethodsByName("add",false)) {
    if (method.getParameterList().getParametersCount() == argsCount) {
      builder.setNavigationElement(method);
    }
  }
}
