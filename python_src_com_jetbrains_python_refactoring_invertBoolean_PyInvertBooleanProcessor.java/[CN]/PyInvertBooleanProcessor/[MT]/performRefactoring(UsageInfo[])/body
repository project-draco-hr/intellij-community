{
  for (  final PsiElement element : myRenameProcessor.getElements()) {
    try {
      RenameUtil.doRename(element,myRenameProcessor.getNewName(element),extractUsagesForElement(element,usages),myProject,null);
    }
 catch (    final IncorrectOperationException e) {
      RenameUtil.showErrorMessage(e,element,myProject);
      return;
    }
  }
  for (  UsageInfo usage : usages) {
    final SmartPsiElementPointer pointerToInvert=myToInvert.get(usage);
    if (pointerToInvert != null) {
      PsiElement expression=pointerToInvert.getElement();
      if (expression != null && PsiTreeUtil.getParentOfType(expression,PyImportStatementBase.class,false) == null) {
        final PyExpression replacement=invertExpression(expression);
        expression.replace(replacement);
      }
    }
  }
}
