{
  final List<SmartPsiElementPointer> toInvert=new ArrayList<SmartPsiElementPointer>();
  addRefsToInvert(toInvert,myElement);
  final UsageInfo[] renameUsages=myRenameProcessor.findUsages();
  final Map<PsiElement,UsageInfo> expressionsToUsages=new HashMap<PsiElement,UsageInfo>();
  final List<UsageInfo> result=new ArrayList<UsageInfo>();
  for (  UsageInfo renameUsage : renameUsages) {
    expressionsToUsages.put(renameUsage.getElement(),renameUsage);
    result.add(renameUsage);
  }
  for (  SmartPsiElementPointer pointer : toInvert) {
    final PyExpression expression=(PyExpression)pointer.getElement();
    if (!expressionsToUsages.containsKey(expression) && expression != null) {
      final UsageInfo usageInfo=new UsageInfo(expression);
      expressionsToUsages.put(expression,usageInfo);
      result.add(usageInfo);
      myToInvert.put(usageInfo,pointer);
    }
 else {
      myToInvert.put(expressionsToUsages.get(expression),pointer);
    }
  }
  return result.toArray(new UsageInfo[result.size()]);
}
