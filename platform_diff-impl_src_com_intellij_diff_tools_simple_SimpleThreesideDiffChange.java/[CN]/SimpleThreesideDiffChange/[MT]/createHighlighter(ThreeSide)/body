{
  Editor editor=side.select(myEditors);
  TextDiffType type=getDiffType();
  int startLine=myFragment.getStartLine(side);
  int endLine=myFragment.getEndLine(side);
  boolean hasInner=myFragment.getInnerFragments() != null;
  TextRange range=DiffUtil.getLinesRange(editor.getDocument(),startLine,endLine,true);
  int start=range.getStartOffset();
  int end=range.getStartOffset();
  myHighlighters.addAll(DiffDrawUtil.createHighlighter(editor,start,end,type,hasInner));
  if (startLine == endLine) {
    if (startLine != 0)     myHighlighters.addAll(DiffDrawUtil.createLineMarker(editor,endLine - 1,type,SeparatorPlacement.BOTTOM,true));
  }
 else {
    myHighlighters.addAll(DiffDrawUtil.createLineMarker(editor,startLine,type,SeparatorPlacement.TOP));
    myHighlighters.addAll(DiffDrawUtil.createLineMarker(editor,endLine - 1,type,SeparatorPlacement.BOTTOM));
  }
  if (hasInner) {
    for (    MergeWordFragment innerFragment : myFragment.getInnerFragments()) {
      int startOffset=innerFragment.getStartOffset(side);
      int endOffset=innerFragment.getEndOffset(side);
      myHighlighters.addAll(DiffDrawUtil.createInlineHighlighter(editor,start + startOffset,start + endOffset,type));
    }
  }
}
