{
  myBrowseButton.putClientProperty("JButton.buttonType","null");
  myBrowseButton.setIcon(InteractiveLearningIcons.InterpreterGear);
  final FileChooserDescriptor fileChooser=new FileChooserDescriptor(true,false,false,true,false,false){
    @Override public boolean isFileVisible(    VirtualFile file,    boolean showHiddenFiles){
      return file.isDirectory() || StudyUtils.isZip(file.getName());
    }
    @Override public boolean isFileSelectable(    VirtualFile file){
      return StudyUtils.isZip(file.getName());
    }
  }
;
  myBrowseButton.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      final BaseListPopupStep<String> popupStep=new BaseListPopupStep<String>("","Add local course","Load private courses"){
        @Override public PopupStep onChosen(        final String selectedValue,        boolean finalChoice){
          return doFinalStep(new Runnable(){
            public void run(){
              if ("Add local course".equals(selectedValue)) {
                Project[] projects=ProjectManager.getInstance().getOpenProjects();
                FileChooser.chooseFile(fileChooser,null,projects.length == 0 ? null : projects[0].getBaseDir(),new Consumer<VirtualFile>(){
                  @Override public void consume(                  VirtualFile file){
                    String fileName=file.getPath();
                    int oldSize=myAvailableCourses.size();
                    CourseInfo courseInfo=myGenerator.addLocalCourse(fileName);
                    if (courseInfo != null) {
                      if (oldSize != myAvailableCourses.size()) {
                        myCoursesComboBox.addItem(courseInfo);
                      }
                      myCoursesComboBox.setSelectedItem(courseInfo);
                      setOK();
                    }
 else {
                      setError(INVALID_COURSE);
                      myCoursesComboBox.removeAllItems();
                      myCoursesComboBox.addItem(CourseInfo.INVALID_COURSE);
                      for (                      CourseInfo course : myAvailableCourses) {
                        myCoursesComboBox.addItem(course);
                      }
                      myCoursesComboBox.setSelectedItem(CourseInfo.INVALID_COURSE);
                    }
                  }
                }
);
              }
 else               if ("Load private courses".equals(selectedValue)) {
                final AddRemoteDialog dialog=new AddRemoteDialog();
                dialog.show();
              }
            }
          }
);
        }
      }
;
      final ListPopup popup=JBPopupFactory.getInstance().createListPopup(popupStep);
      popup.showInScreenCoordinates(myBrowseButton,myBrowseButton.getLocationOnScreen());
    }
  }
);
}
