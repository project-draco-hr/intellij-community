{
  final File newPatchDir=generateUniqueSchemePatchDir(changeList.DESCRIPTION,true);
  final File newPath=getPatchFileInConfigDir(newPatchDir);
  try {
    FileUtil.copy(new File(changeList.PATH),newPath);
  }
 catch (  IOException e) {
    return;
  }
  final ShelvedChangeList listCopy=new ShelvedChangeList(newPath.getAbsolutePath(),changeList.DESCRIPTION,new ArrayList<ShelvedBinaryFile>(changeList.getBinaryFiles()));
  listCopy.markToDelete(changeList.isMarkedToDelete());
  listCopy.setName(newPatchDir.getName());
  writePatchesToFile(myProject,changeList.PATH,remainingPatches,commitContext);
  changeList.getBinaryFiles().retainAll(remainingBinaries);
  changeList.clearLoadedChanges();
  recycleChangeList(listCopy,changeList);
  mySchemeManager.addNewScheme(listCopy,false);
  notifyStateChanged();
}
