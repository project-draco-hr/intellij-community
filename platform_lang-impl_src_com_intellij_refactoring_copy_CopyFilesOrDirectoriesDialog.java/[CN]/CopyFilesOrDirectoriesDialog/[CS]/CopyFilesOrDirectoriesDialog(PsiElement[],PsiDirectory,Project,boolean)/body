{
  super(project,true);
  myProject=project;
  myShowDirectoryField=!doClone;
  myShowNewNameField=elements.length == 1;
  if (doClone && elements.length != 1) {
    throw new IllegalArgumentException("wrong number of elements to clone: " + elements.length);
  }
  setTitle(RefactoringBundle.message(doClone ? "copy.files.clone.title" : "copy.files.copy.title"));
  init();
  if (elements.length == 1) {
    String text;
    if (elements[0] instanceof PsiFile) {
      PsiFile file=(PsiFile)elements[0];
      VirtualFile vFile=file.getVirtualFile();
      text=RefactoringBundle.message(doClone ? "copy.files.clone.file.0" : "copy.files.copy.file.0",shortenPath(vFile));
      String fileName=vFile.isInLocalFileSystem() ? vFile.getName() : PathUtil.suggestFileName(file.getName(),true,true);
      if (StringUtil.isEmpty(vFile.getExtension())) {
        FileType type=ObjectUtils.notNull(file.getLanguage().getAssociatedFileType(),file.getFileType());
        fileName=PathUtil.makeFileName(fileName,type.getDefaultExtension());
      }
      myNewNameField.setText(fileName);
      int dotIdx=fileName.lastIndexOf('.');
      if (dotIdx > 0) {
        myNewNameField.select(0,dotIdx);
        myNewNameField.putClientProperty(DialogWrapperPeer.HAVE_INITIAL_SELECTION,true);
      }
      myFileCopy=true;
    }
 else {
      VirtualFile vFile=((PsiDirectory)elements[0]).getVirtualFile();
      text=RefactoringBundle.message(doClone ? "copy.files.clone.directory.0" : "copy.files.copy.directory.0",shortenPath(vFile));
      myNewNameField.setText(vFile.getName());
    }
    myInformationLabel.setText(text);
  }
 else {
    setMultipleElementCopyLabel(elements);
  }
  boolean allBinary=true;
  for (  PsiElement element : elements) {
    if (!(element.getContainingFile() instanceof PsiBinaryFile)) {
      allBinary=false;
      break;
    }
  }
  if (allBinary) {
    myOpenFilesInEditor.setVisible(false);
  }
  if (myShowDirectoryField) {
    String targetPath=defaultTargetDirectory == null ? "" : defaultTargetDirectory.getVirtualFile().getPresentableUrl();
    myTargetDirectoryField.getChildComponent().setText(targetPath);
  }
  validateOKButton();
}
