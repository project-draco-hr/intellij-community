{
  if (!Registry.is("ide.non.english.keyboard.layout.fix"))   return e;
  if (e instanceof KeyEvent) {
    KeyEvent ke=(KeyEvent)e;
    if (ke.getID() == KeyEvent.KEY_PRESSED) {
switch (ke.getKeyCode()) {
case (KeyEvent.VK_CONTROL):
        if ((ke.getModifiersEx() & (InputEvent.ALT_DOWN_MASK | InputEvent.CTRL_DOWN_MASK)) != (InputEvent.ALT_DOWN_MASK | InputEvent.CTRL_DOWN_MASK)) {
          ctrlIsPressedCount++;
        }
      break;
case (KeyEvent.VK_ALT):
    if (ke.getKeyLocation() == KeyEvent.KEY_LOCATION_LEFT) {
      if ((ke.getModifiersEx() & (InputEvent.ALT_DOWN_MASK | InputEvent.CTRL_DOWN_MASK)) != (InputEvent.ALT_DOWN_MASK | InputEvent.CTRL_DOWN_MASK)) {
        leftAltIsPressed=true;
      }
    }
  break;
}
}
 else if (ke.getID() == KeyEvent.KEY_RELEASED) {
switch (ke.getKeyCode()) {
case (KeyEvent.VK_CONTROL):
ctrlIsPressedCount--;
break;
case (KeyEvent.VK_ALT):
if (ke.getKeyLocation() == KeyEvent.KEY_LOCATION_LEFT) {
leftAltIsPressed=false;
}
break;
}
}
Integer keyCodeFromChar=CharToVKeyMap.get(ke.getKeyChar());
if (keyCodeFromChar != null) {
if (keyCodeFromChar != ke.getKeyCode()) {
ke.setKeyCode(keyCodeFromChar);
}
Component sourceComponent=WindowManagerEx.getInstanceEx().getMostRecentFocusedWindow();
if (sourceComponent != null) {
if (sourceComponent.getInputContext().getLocale().getLanguage().equals("de")) {
if ((ke.getModifiersEx() & (InputEvent.ALT_DOWN_MASK | InputEvent.CTRL_DOWN_MASK)) != 0) {
int modifiers=ke.getModifiersEx() ^ InputEvent.ALT_DOWN_MASK ^ InputEvent.CTRL_DOWN_MASK;
if (ctrlIsPressedCount > 1) {
modifiers|=InputEvent.CTRL_DOWN_MASK;
}
if (leftAltIsPressed) {
modifiers|=InputEvent.ALT_MASK;
}
e=new KeyEvent(ke.getComponent(),ke.getID(),ke.getWhen(),modifiers,ke.getKeyCode(),ke.getKeyChar(),ke.getKeyLocation());
}
}
}
}
}
return e;
}
