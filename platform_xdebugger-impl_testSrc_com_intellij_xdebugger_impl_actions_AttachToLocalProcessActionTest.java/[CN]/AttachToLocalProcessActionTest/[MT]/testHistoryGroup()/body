{
  TestAttachGroup group1=new TestAttachGroup("group1",1);
  TestAttachGroup group2=new TestAttachGroup("group2",2);
  List<XLocalAttachDebugger> debuggers1=createDebuggers("gdb1","lldb1");
  List<XLocalAttachDebugger> debuggers2=createDebuggers("gdb2","lldb2");
  List<AttachItem> originalItems=collectAttachItems(getProject(),new ProcessInfo[]{new ProcessInfo(1,"command line 1","exec1","args1"),new ProcessInfo(2,"command line 2","exec2","args2")},DumbProgressIndicator.INSTANCE,new TestDebuggerProvider(1,group1,debuggers1),new TestDebuggerProvider(2,group2,debuggers2));
  addToHistory(getProject(),originalItems.get(0));
  assertItems("----Recent----\n" + "10 exec10: gdb1\n" + "    gdb1\n"+ "    lldb1\n"+ "----group1----\n"+ "10 exec10: gdb1\n"+ "    gdb1\n"+ "    lldb1\n"+ "----group2----\n"+ "20 exec20: gdb2\n"+ "    gdb2\n"+ "    lldb2\n",new ProcessInfo[]{new ProcessInfo(10,"command line 1","exec10","args10"),new ProcessInfo(20,"command line 2","exec20","args20")},new TestDebuggerProvider(10,group1,debuggers1),new TestDebuggerProvider(20,group2,debuggers2));
  addToHistory(getProject(),originalItems.get(1));
  assertItems("----Recent----\n" + "20 exec20: gdb2\n" + "    gdb2\n"+ "    lldb2\n"+ "10 exec10: gdb1\n"+ "    gdb1\n"+ "    lldb1\n"+ "----group1----\n"+ "10 exec10: gdb1\n"+ "    gdb1\n"+ "    lldb1\n"+ "----group2----\n"+ "20 exec20: gdb2\n"+ "    gdb2\n"+ "    lldb2\n",new ProcessInfo[]{new ProcessInfo(10,"command line 1","exec10","args10"),new ProcessInfo(20,"command line 2","exec20","args20")},new TestDebuggerProvider(10,group1,debuggers1),new TestDebuggerProvider(20,group2,debuggers2));
  addToHistory(getProject(),originalItems.get(0));
  assertItems("----Recent----\n" + "10 exec10: gdb1\n" + "    gdb1\n"+ "    lldb1\n"+ "20 exec20: gdb2\n"+ "    gdb2\n"+ "    lldb2\n"+ "----group1----\n"+ "10 exec10: gdb1\n"+ "    gdb1\n"+ "    lldb1\n"+ "----group2----\n"+ "20 exec20: gdb2\n"+ "    gdb2\n"+ "    lldb2\n",new ProcessInfo[]{new ProcessInfo(10,"command line 1","exec10","args10"),new ProcessInfo(20,"command line 2","exec20","args20")},new TestDebuggerProvider(10,group1,debuggers1),new TestDebuggerProvider(20,group2,debuggers2));
  addToHistory(getProject(),originalItems.get(0).getSubItems().get(1));
  addToHistory(getProject(),originalItems.get(1).getSubItems().get(1));
  assertItems("----Recent----\n" + "20 exec20: lldb2\n" + "    gdb2\n"+ "    lldb2\n"+ "10 exec10: lldb1\n"+ "    gdb1\n"+ "    lldb1\n"+ "----group1----\n"+ "10 exec10: gdb1\n"+ "    gdb1\n"+ "    lldb1\n"+ "----group2----\n"+ "20 exec20: gdb2\n"+ "    gdb2\n"+ "    lldb2\n",new ProcessInfo[]{new ProcessInfo(10,"command line 1","exec10","args10"),new ProcessInfo(20,"command line 2","exec20","args20")},new TestDebuggerProvider(10,group1,debuggers1),new TestDebuggerProvider(20,group2,debuggers2));
  assertItems("----Recent----\n" + "20 exec20: lldb2\n" + "    gdb2\n"+ "    lldb2\n"+ "----group1----\n"+ "10 exec10: gdb1\n"+ "    gdb1\n"+ "    lldb1\n"+ "----group2----\n"+ "20 exec20: gdb2\n"+ "    gdb2\n"+ "    lldb2\n",new ProcessInfo[]{new ProcessInfo(10,"command line 10","exec10","args10"),new ProcessInfo(20,"command line 2","exec20","args20")},new TestDebuggerProvider(10,group1,debuggers1),new TestDebuggerProvider(20,group2,debuggers2));
  assertItems("----group1----\n" + "10 exec10: gdb1\n" + "    gdb1\n"+ "    lldb1\n"+ "----group2----\n"+ "20 exec20: gdb2\n"+ "    gdb2\n"+ "    lldb2\n",new ProcessInfo[]{new ProcessInfo(10,"command line 10","exec10","args10"),new ProcessInfo(20,"command line 20","exec20","args20")},new TestDebuggerProvider(10,group1,debuggers1),new TestDebuggerProvider(20,group2,debuggers2));
  assertItems("----Recent----\n" + "20 exec20: lldb2\n" + "    gdb2\n"+ "    lldb2\n"+ "10 exec10: lldb1\n"+ "    gdb1\n"+ "    lldb1\n"+ "----group1----\n"+ "10 exec10: gdb1\n"+ "    gdb1\n"+ "    lldb1\n"+ "----group2----\n"+ "20 exec20: gdb2\n"+ "    gdb2\n"+ "    lldb2\n",new ProcessInfo[]{new ProcessInfo(10,"command line 1","exec10","args10"),new ProcessInfo(20,"command line 2","exec20","args20")},new TestDebuggerProvider(10,group1,debuggers1),new TestDebuggerProvider(20,group2,debuggers2));
  assertItems("----Recent----\n" + "10 exec10: lldb1\n" + "    gdb1\n"+ "    lldb1\n"+ "----group1----\n"+ "10 exec10: gdb1\n"+ "    gdb1\n"+ "    lldb1\n"+ "20 exec20: gdb2\n"+ "    gdb2\n"+ "    lldb2\n",new ProcessInfo[]{new ProcessInfo(10,"command line 1","exec10","args10"),new ProcessInfo(20,"command line 2","exec20","args20")},new TestDebuggerProvider(10,group1,debuggers1),new TestDebuggerProvider(20,group1,debuggers2));
  assertItems("----Recent----\n" + "20 exec20: lldb2\n" + "    gdb2\n"+ "    lldb2\n"+ "----group2----\n"+ "10 exec10: gdb1\n"+ "    gdb1\n"+ "    lldb1\n"+ "20 exec20: gdb2\n"+ "    gdb2\n"+ "    lldb2\n",new ProcessInfo[]{new ProcessInfo(10,"command line 1","exec10","args10"),new ProcessInfo(20,"command line 2","exec20","args20")},new TestDebuggerProvider(10,group2,debuggers1),new TestDebuggerProvider(20,group2,debuggers2));
  assertItems("----group1----\n" + "10 exec10: gdb1\n" + "    gdb1\n"+ "    lldb1\n"+ "----group2----\n"+ "20 exec20: gdb2\n"+ "    gdb2\n"+ "    lldb2\n",new ProcessInfo[]{new ProcessInfo(10,"command line 1","exec10","args10"),new ProcessInfo(20,"command line 2","exec20","args20")},new TestDebuggerProvider(10,new TestAttachGroup(group1.getGroupName(),group1.getOrder()),debuggers1),new TestDebuggerProvider(20,new TestAttachGroup(group2.getGroupName(),group2.getOrder()),debuggers2));
  assertItems("----Recent----\n" + "10 exec10: lldb1\n" + "    gdb1\n"+ "    lldb1\n"+ "----group1----\n"+ "10 exec10: gdb1\n"+ "    gdb1\n"+ "    lldb1\n"+ "----group2----\n"+ "20 exec20: gdb1\n"+ "    gdb1\n"+ "    lldb1\n",new ProcessInfo[]{new ProcessInfo(10,"command line 1","exec10","args10"),new ProcessInfo(20,"command line 2","exec20","args20")},new TestDebuggerProvider(10,group1,debuggers1),new TestDebuggerProvider(20,group2,debuggers1));
  assertItems("----Recent----\n" + "20 exec20: lldb2\n" + "    gdb2\n"+ "    lldb2\n"+ "10 exec10: lldb1\n"+ "    gdb1\n"+ "    lldb1\n"+ "----group1----\n"+ "10 exec10: gdb1\n"+ "    gdb1\n"+ "    lldb1\n"+ "----group2----\n"+ "20 exec20: gdb2\n"+ "    gdb2\n"+ "    lldb2\n",new ProcessInfo[]{new ProcessInfo(10,"command line 1","exec10","args10"),new ProcessInfo(20,"command line 2","exec20","args20")},new TestDebuggerProvider(10,group1,createDebuggers("gdb1","lldb1")),new TestDebuggerProvider(20,group2,createDebuggers("gdb2","lldb2")));
}
