{
  final PsiElement parent=expression.getParent();
  if (parent instanceof PsiLocalVariable) {
    return isIterable(((PsiLocalVariable)parent).getType());
  }
 else   if (parent instanceof PsiReturnStatement) {
    final PsiElement methodOrLambda=PsiTreeUtil.getParentOfType(parent,PsiMethod.class,PsiLambdaExpression.class);
    PsiType methodReturnType=null;
    if (methodOrLambda instanceof PsiMethod) {
      methodReturnType=((PsiMethod)methodOrLambda).getReturnType();
    }
 else     if (methodOrLambda instanceof PsiLambdaExpression) {
      methodReturnType=LambdaUtil.getFunctionalInterfaceReturnType((PsiFunctionalExpression)methodOrLambda);
    }
    return isIterable(methodReturnType);
  }
  return false;
}
