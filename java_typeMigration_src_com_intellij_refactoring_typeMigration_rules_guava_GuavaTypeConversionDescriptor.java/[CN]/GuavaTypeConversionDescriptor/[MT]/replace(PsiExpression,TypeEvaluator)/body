{
  setReplaceByString(myReplaceByStringSource + (isIterable(expression) ? ".collect(java.util.stream.Collectors.toList())" : ""));
  if (myConvertParameterAsLambda) {
    LOG.assertTrue(expression instanceof PsiMethodCallExpression);
    final PsiExpression[] arguments=((PsiMethodCallExpression)expression).getArgumentList().getExpressions();
    if (arguments.length == 1) {
      GuavaConversionUtil.adjustLambdaContainingExpression(arguments[0],false,null,evaluator);
    }
  }
  return super.replace(expression,evaluator);
}
