{
  int halfHeight=lineHeight / 2;
  int count=((x2 - x1) / X_STEP + 3);
  int[] xPoints=new int[2 * count];
  int[] yPoints=new int[2 * count];
  int shift=Math.max(x1 - shiftX / X_STEP,0);
  for (int index=0; index < count; index++) {
    int absIndex=index + shift;
    int xPos=absIndex * X_STEP + shiftX;
    int yPos1;
    int yPos2;
    if (absIndex == 0) {
      yPos1=halfHeight + shiftY - Y_STEP + Y_STEP_2;
      yPos2=halfHeight + shiftY + Y_STEP - Y_STEP_2;
    }
 else     if (absIndex % 2 == 0) {
      yPos1=halfHeight + shiftY - Y_STEP_2;
      yPos2=halfHeight + shiftY + Y_STEP+ Y_STEP_2;
    }
 else {
      yPos1=halfHeight + shiftY - Y_STEP - Y_STEP_2;
      yPos2=halfHeight + shiftY + Y_STEP_2;
    }
    xPoints[index]=xPos;
    yPoints[index]=yPos1;
    xPoints[2 * count - index - 1]=xPos;
    yPoints[2 * count - index - 1]=yPos2;
  }
  GraphicsConfig config=GraphicsUtil.disableAAPainting(g);
  try {
    paintLine(g,xPoints,yPoints);
  }
  finally {
    config.restore();
  }
}
