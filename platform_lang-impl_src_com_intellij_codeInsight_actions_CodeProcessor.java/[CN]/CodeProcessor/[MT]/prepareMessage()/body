{
  StringBuilder builder=new StringBuilder("<html>");
  LayoutCodeNotification notifications=myProcessor.getNotificationInfo();
  LOG.assertTrue(notifications != null);
  if (notifications.isEmpty()) {
    builder.append("Code looks pretty well").append("<br>");
  }
 else {
    String reformatNotification=notifications.getReformatCodeNotification();
    String rearrangeNotification=notifications.getRearrangeCodeNotification();
    if (rearrangeNotification != null || reformatNotification != null) {
      String firstNotificationLine=joinAndCapitalizeFirst(reformatNotification,rearrangeNotification);
      if (myProcessChangesTextOnly) {
        builder.append("Processed lines, changed since last revision: ");
        firstNotificationLine=StringUtil.decapitalize(firstNotificationLine);
      }
      builder.append(firstNotificationLine);
      builder.append("<br>");
    }
    String optimizeImportsNotification=notifications.getOptimizeImportsNotification();
    if (optimizeImportsNotification != null) {
      builder.append(StringUtil.capitalize(optimizeImportsNotification)).append("<br>");
    }
  }
  String shortcutText=KeymapUtil.getFirstKeyboardShortcutText(ActionManager.getInstance().getAction("ReformatFile"));
  builder.append("<span style='color:").append(COLOR).append("'>").append("Show reformat dialog: ").append(shortcutText).append("</span>").append("</html>");
  return builder.toString();
}
