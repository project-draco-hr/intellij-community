{
  AbstractLayoutCodeProcessor processor=null;
  if (myShouldOptimizeImports) {
    processor=new OptimizeImportsProcessor(myProject,myFile);
  }
  if (processor != null) {
    if (myProcessSelectedText) {
      processor=new ReformatCodeProcessor(processor,myEditor.getSelectionModel());
    }
 else {
      processor=new ReformatCodeProcessor(processor,myProcessChangesTextOnly);
    }
  }
 else {
    if (myProcessSelectedText) {
      processor=new ReformatCodeProcessor(myFile,myEditor.getSelectionModel());
    }
 else {
      processor=new ReformatCodeProcessor(myFile,myProcessChangesTextOnly);
    }
  }
  if (myShouldRearrangeCode) {
    if (myProcessSelectedText) {
      processor=new RearrangeCodeProcessor(processor,myEditor.getSelectionModel());
    }
 else {
      processor=new RearrangeCodeProcessor(processor);
    }
  }
  if (myShouldNotify) {
    Document document=PsiDocumentManager.getInstance(myProject).getDocument(myFile);
    if (document != null) {
      processor.setPostRunnable(getNotificationCallBack(document));
    }
  }
  processor.run();
}
