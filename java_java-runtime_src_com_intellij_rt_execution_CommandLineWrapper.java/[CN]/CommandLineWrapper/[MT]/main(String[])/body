{
  final File jarFile=new File(args[0]);
  JarInputStream inputStream=null;
  try {
    inputStream=new JarInputStream(new FileInputStream(jarFile));
    final Manifest manifest=inputStream.getManifest();
    final String vmParams=manifest.getMainAttributes().getValue("VM-Options");
    if (vmParams != null) {
      final HashMap vmOptions=new HashMap();
      parseVmOptions(vmParams,vmOptions);
      for (Iterator iterator=vmOptions.keySet().iterator(); iterator.hasNext(); ) {
        String optionName=(String)iterator.next();
        System.setProperty(optionName,(String)vmOptions.get(optionName));
      }
    }
  }
 catch (  IOException ignore) {
  }
 finally {
    if (inputStream != null) {
      inputStream.close();
    }
    jarFile.deleteOnExit();
  }
  String mainClassName=args[1];
  String[] mainArgs=new String[args.length - 2];
  System.arraycopy(args,2,mainArgs,0,mainArgs.length);
  Class mainClass=Class.forName(mainClassName);
  Class mainArgType=(new String[0]).getClass();
  Method main=mainClass.getMethod("main",new Class[]{mainArgType});
  ensureAccess(main);
  main.invoke(null,new Object[]{mainArgs});
}
