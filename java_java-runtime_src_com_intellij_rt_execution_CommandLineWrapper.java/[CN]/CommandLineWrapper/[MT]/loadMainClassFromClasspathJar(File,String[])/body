{
  String[] mainArgs;
  final JarInputStream inputStream=new JarInputStream(new FileInputStream(jarFile));
  try {
    final Manifest manifest=inputStream.getManifest();
    final String vmParams=manifest.getMainAttributes().getValue("VM-Options");
    if (vmParams != null) {
      final HashMap vmOptions=new HashMap();
      parseVmOptions(vmParams,vmOptions);
      for (Iterator iterator=vmOptions.keySet().iterator(); iterator.hasNext(); ) {
        String optionName=(String)iterator.next();
        System.setProperty(optionName,(String)vmOptions.get(optionName));
      }
    }
    String programParameters=manifest.getMainAttributes().getValue("Program-Parameters");
    if (programParameters == null) {
      mainArgs=new String[args.length - 2];
      System.arraycopy(args,2,mainArgs,0,mainArgs.length);
    }
 else {
      mainArgs=splitBySpaces(programParameters);
    }
  }
  finally {
    if (inputStream != null) {
      inputStream.close();
    }
    jarFile.deleteOnExit();
  }
  return new MainPair(Class.forName(args[1]),mainArgs);
}
