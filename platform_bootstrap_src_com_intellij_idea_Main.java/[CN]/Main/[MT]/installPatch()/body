{
  String platform=System.getProperty(PLATFORM_PREFIX_PROPERTY,"idea");
  String patchFileName=("jetbrains.patch.jar." + platform).toLowerCase(Locale.US);
  String tempDir=System.getProperty("java.io.tmpdir");
  File patchCopy=new File(tempDir,patchFileName + "_copy");
  File log4jCopy=new File(tempDir,"log4j.jar." + platform + "_copy");
  File jnaUtilsCopy=new File(tempDir,"jna-utils.jar." + platform + "_copy");
  File jnaCopy=new File(tempDir,"jna.jar." + platform + "_copy");
  if (!FileUtilRt.delete(patchCopy) || !FileUtilRt.delete(log4jCopy) || !FileUtilRt.delete(jnaUtilsCopy)|| !FileUtilRt.delete(jnaCopy)) {
    throw new IOException("Cannot delete temporary files in " + tempDir);
  }
  File patch=new File(tempDir,patchFileName);
  if (!patch.exists())   return;
  File log4j=new File(PathManager.getLibPath(),"log4j.jar");
  if (!log4j.exists())   throw new IOException("Log4J is missing: " + log4j);
  File jnaUtils=new File(PathManager.getLibPath(),"jna-utils.jar");
  if (!jnaUtils.exists())   throw new IOException("jna-utils.jar is missing: " + jnaUtils);
  File jna=new File(PathManager.getLibPath(),"jna.jar");
  if (!jna.exists())   throw new IOException("jna is missing: " + jna);
  copyFile(patch,patchCopy,true);
  copyFile(log4j,log4jCopy,false);
  copyFile(jna,jnaCopy,false);
  copyFile(jnaUtils,jnaUtilsCopy,false);
  int status=0;
  if (Restarter.isSupported()) {
    List<String> args=new ArrayList<String>();
    if (SystemInfoRt.isWindows) {
      File launcher=new File(PathManager.getBinPath(),"VistaLauncher.exe");
      args.add(Restarter.createTempExecutable(launcher).getPath());
    }
    Collections.addAll(args,System.getProperty("java.home") + "/bin/java","-Xmx500m","-Djna.nosys=true","-Djna.boot.library.path=","-Djna.debug_load=true","-Djna.debug_load.jna=true","-classpath",patchCopy.getPath() + File.pathSeparator + log4jCopy.getPath()+ File.pathSeparator+ jnaCopy.getPath()+ File.pathSeparator+ jnaUtilsCopy.getPath(),"-Djava.io.tmpdir=" + tempDir,"-Didea.updater.log=" + PathManager.getLogPath(),"-Dswing.defaultlaf=" + UIManager.getSystemLookAndFeelClassName(),"com.intellij.updater.Runner","install",PathManager.getHomePath());
    status=Restarter.scheduleRestart(ArrayUtilRt.toStringArray(args));
  }
 else {
    String message="Patch update is not supported - please do it manually";
    showMessage("Update Error",message,true);
  }
  System.exit(status);
}
