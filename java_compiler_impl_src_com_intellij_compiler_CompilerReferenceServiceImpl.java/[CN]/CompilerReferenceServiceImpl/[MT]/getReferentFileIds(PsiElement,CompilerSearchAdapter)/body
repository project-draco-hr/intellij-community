{
  final PsiFile file=element.getContainingFile();
  if (file == null)   return null;
  final VirtualFile vFile=file.getVirtualFile();
  if (vFile == null)   return null;
  ElementPlace place=ElementPlace.get(vFile,myProjectFileIndex);
  if (place == null) {
    return null;
  }
  if (myDirtyScope.contains(vFile)) {
    return null;
  }
  CompilerElement[] compilerElements;
  if (place == ElementPlace.SRC) {
    final CompilerElement compilerElement=adapter.asCompilerElement(element);
    compilerElements=compilerElement == null ? CompilerElement.EMPTY_ARRAY : new CompilerElement[]{compilerElement};
  }
 else {
    compilerElements=adapter.libraryElementAsCompilerElements(element);
  }
  if (compilerElements.length == 0)   return null;
synchronized (myLock) {
    if (myReader == null)     return null;
    TIntHashSet referentFileIds=new TIntHashSet();
    for (    CompilerElement compilerElement : compilerElements) {
      final TIntHashSet referents=myReader.findReferentFileIds(compilerElement,adapter,place == ElementPlace.SRC);
      if (referents == null)       return null;
      referentFileIds.addAll(referents.toArray());
    }
    return referentFileIds;
  }
}
