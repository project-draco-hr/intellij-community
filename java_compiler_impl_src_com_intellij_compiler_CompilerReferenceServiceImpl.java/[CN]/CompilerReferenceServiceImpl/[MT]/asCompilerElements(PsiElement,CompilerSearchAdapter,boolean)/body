{
  VirtualFile file=PsiUtilCore.getVirtualFile(psiElement);
  ElementPlace place=ElementPlace.get(file,myProjectFileIndex);
  if (place == null || (place == ElementPlace.SRC && myDirtyModulesHolder.contains(file))) {
    return null;
  }
  final CompilerElement compilerElement=adapter.asCompilerElement(psiElement);
  if (compilerElement == null)   return null;
  if (place == ElementPlace.LIB && buildHierarchyForLibraryElements) {
    final CompilerElement[] elements=adapter.getHierarchyRestrictedToLibrariesScope(compilerElement,psiElement);
    final CompilerElement[] fullHierarchy=new CompilerElement[elements.length + 1];
    fullHierarchy[0]=compilerElement;
    System.arraycopy(elements,0,fullHierarchy,1,elements.length);
    return new CompilerElementInfo(place,fullHierarchy);
  }
 else {
    return new CompilerElementInfo(place,compilerElement);
  }
}
