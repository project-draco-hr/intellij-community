{
  MavenWorkspaceSettings settings=MavenWorkspaceSettingsComponent.getInstance(project).getSettings();
  settings.generalSettings=getGeneralSettings();
  settings.importingSettings=getImportingSettings();
  String settingsFile=System.getProperty("idea.maven.import.settings.file");
  if (!StringUtil.isEmptyOrSpaces(settingsFile)) {
    settings.generalSettings.setUserSettingsFile(settingsFile.trim());
  }
  MavenExplicitProfiles selectedProfiles=getSelectedProfiles();
  String enabledProfilesList=System.getProperty("idea.maven.import.enabled.profiles");
  String disabledProfilesList=System.getProperty("idea.maven.import.disabled.profiles");
  if (enabledProfilesList != null || disabledProfilesList != null) {
    selectedProfiles=selectedProfiles.clone();
    appendProfilesFromString(selectedProfiles.getEnabledProfiles(),enabledProfilesList);
    appendProfilesFromString(selectedProfiles.getDisabledProfiles(),disabledProfilesList);
  }
  MavenProjectsManager manager=MavenProjectsManager.getInstance(project);
  manager.setIgnoredState(getParameters().mySelectedProjects,false);
  manager.addManagedFilesWithProfiles(MavenUtil.collectFiles(getParameters().mySelectedProjects),selectedProfiles);
  manager.waitForReadingCompletion();
  boolean isFromUI=model != null;
  return manager.importProjects(isFromUI ? new MavenUIModifiableModelsProvider(project,model,(ModulesConfigurator)modulesProvider,artifactModel) : new MavenDefaultModifiableModelsProvider(project));
}
