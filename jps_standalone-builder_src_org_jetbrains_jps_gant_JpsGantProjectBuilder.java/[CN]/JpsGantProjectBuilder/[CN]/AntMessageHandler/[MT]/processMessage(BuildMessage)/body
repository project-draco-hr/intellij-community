{
  BuildMessage.Kind kind=msg.getKind();
  String text=msg.getMessageText();
switch (kind) {
case ERROR:
    String compilerName=msg instanceof CompilerMessage ? ((CompilerMessage)msg).getCompilerName() : "";
  myBuildInfoPrinter.printCompilationErrors(JpsGantProjectBuilder.this,compilerName,text);
error("Compilation failed");
break;
case WARNING:
warning(text);
break;
case INFO:
if (!text.isEmpty()) {
info(text);
}
break;
case PROGRESS:
if (msg instanceof BuildingTargetProgressMessage) {
String targetsString=StringUtil.join(((BuildingTargetProgressMessage)msg).getTargets(),new NotNullFunction<BuildTarget<?>,String>(){
@NotNull @Override public String fun(BuildTarget<?> dom){
return dom.getPresentableName();
}
}
,",");
switch (((BuildingTargetProgressMessage)msg).getEventType()) {
case STARTED:
myBuildInfoPrinter.printBlockOpenedMessage(JpsGantProjectBuilder.this,targetsString);
break;
case FINISHED:
myBuildInfoPrinter.printBlockClosedMessage(JpsGantProjectBuilder.this,targetsString);
break;
}
}
break;
}
}
