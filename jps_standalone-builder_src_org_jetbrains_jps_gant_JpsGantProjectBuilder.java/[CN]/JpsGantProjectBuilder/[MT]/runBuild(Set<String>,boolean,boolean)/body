{
  if (!myDryRun) {
    final AntMessageHandler messageHandler=new AntMessageHandler();
    AntLoggerFactory.ourMessageHandler=new AntMessageHandler();
    Logger.setFactory(AntLoggerFactory.class);
    boolean forceBuild=true;
    List<TargetTypeBuildScope> scopes=new ArrayList<TargetTypeBuildScope>();
    for (    JavaModuleBuildTargetType type : JavaModuleBuildTargetType.ALL_TYPES) {
      if (includeTests || !type.isTests()) {
        List<String> namesToCompile=new ArrayList<String>(allModules ? getAllModules() : modulesSet);
        if (type.isTests()) {
          namesToCompile.removeAll(myCompiledModuleTests);
          myCompiledModuleTests.addAll(namesToCompile);
        }
 else {
          namesToCompile.removeAll(myCompiledModules);
          myCompiledModules.addAll(namesToCompile);
        }
        if (namesToCompile.isEmpty())         continue;
        TargetTypeBuildScope.Builder builder=TargetTypeBuildScope.newBuilder().setTypeId(type.getTypeId()).setForceBuild(forceBuild);
        if (allModules) {
          scopes.add(builder.setAllTargets(true).build());
        }
 else         if (!modulesSet.isEmpty()) {
          scopes.add(builder.addAllTargetId(modulesSet).build());
        }
      }
    }
    info("Starting build; cache directory: " + myDataStorageRoot.getAbsolutePath());
    try {
      long compilationStart=System.currentTimeMillis();
      Standalone.runBuild(myModelLoader,myDataStorageRoot,messageHandler,scopes,false);
      if (!myStatisticsReported) {
        myBuildInfoPrinter.printStatisticsMessage(this,"Compilation time, ms",String.valueOf(System.currentTimeMillis() - compilationStart));
        myStatisticsReported=true;
      }
    }
 catch (    Throwable e) {
      error(e);
    }
  }
 else {
    info("Building skipped as we're running dry");
  }
}
