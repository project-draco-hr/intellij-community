{
  final String name=getSuperBaseName();
  if (!myNamesValidator.isIdentifier(name,myClass.getProject())) {
    setErrorText(PyBundle.message("refactoring.extract.super.name.0.must.be.ident",name));
    return;
  }
  boolean found_root=false;
  try {
    String target_dir=FileUtil.toSystemIndependentName(new File(myTargetDirField.getText()).getCanonicalPath());
    for (    VirtualFile file : ProjectRootManager.getInstance(myClass.getProject()).getContentRoots()) {
      if (StringUtil.startsWithIgnoreCase(target_dir,file.getPath())) {
        found_root=true;
        break;
      }
    }
  }
 catch (  IOException ignore) {
  }
  if (!found_root) {
    setErrorText(PyBundle.message("refactoring.extract.super.target.path.outside.roots"));
    return;
  }
  super.doOKAction();
}
