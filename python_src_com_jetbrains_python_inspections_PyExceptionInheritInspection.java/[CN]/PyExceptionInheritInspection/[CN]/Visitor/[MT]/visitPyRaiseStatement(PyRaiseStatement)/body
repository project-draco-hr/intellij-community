{
  PyExpression[] expressions=node.getExpressions();
  if (expressions.length == 0) {
    return;
  }
  PyExpression expression=expressions[0];
  if (expression instanceof PyCallExpression) {
    PyExpression callee=((PyCallExpression)expression).getCallee();
    if (callee instanceof PyReferenceExpression) {
      PsiElement psiElement=((PyReferenceExpression)callee).getReference(getResolveContext()).resolve();
      if (psiElement instanceof PyClass) {
        PyClass aClass=(PyClass)psiElement;
        for (        PyClassLikeType type : aClass.getAncestorTypes(myTypeEvalContext)) {
          if (type == null) {
            return;
          }
          final String name=type.getName();
          if (name == null || "BaseException".equals(name) || "Exception".equals(name)) {
            return;
          }
        }
        registerProblem(expression,"Exception doesn't inherit from base \'Exception\' class");
      }
    }
  }
}
