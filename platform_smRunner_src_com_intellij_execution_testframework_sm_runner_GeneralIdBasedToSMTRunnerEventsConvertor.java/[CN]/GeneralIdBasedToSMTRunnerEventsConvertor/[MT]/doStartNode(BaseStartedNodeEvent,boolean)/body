{
  Node node=findNode(startedNodeEvent);
  if (node != null) {
    if (node.getState() == State.REGISTERED && startedNodeEvent.isRunning()) {
      node.setState(State.RUNNING);
      node.getProxy().setStarted();
      if (suite) {
        fireOnSuiteStarted(node.getProxy());
      }
 else {
        fireOnTestStarted(node.getProxy());
      }
    }
 else {
      logProblem(startedNodeEvent + " has been already started: " + node+ "!");
    }
    return;
  }
  Node parentNode=findValidParentNode(startedNodeEvent);
  if (parentNode == null) {
    return;
  }
  if (!validateNodeId(startedNodeEvent)) {
    return;
  }
  String nodeName=startedNodeEvent.getName();
  SMTestProxy childProxy=new SMTestProxy(nodeName,suite,startedNodeEvent.getLocationUrl(),true);
  TestProxyPrinterProvider printerProvider=myTestProxyPrinterProvider;
  String nodeType=startedNodeEvent.getNodeType();
  if (printerProvider != null && nodeType != null && nodeName != null) {
    Printer printer=printerProvider.getPrinterByType(nodeType,nodeName,startedNodeEvent.getNodeArgs());
    if (printer != null) {
      childProxy.setPreferredPrinter(printer);
    }
  }
  State initialState=startedNodeEvent.isRunning() ? State.RUNNING : State.REGISTERED;
  node=new Node(startedNodeEvent.getId(),parentNode,childProxy,initialState);
  myNodeByIdMap.put(startedNodeEvent.getId(),node);
  myRunningNodes.add(node);
  if (myLocator != null) {
    childProxy.setLocator(myLocator);
  }
  parentNode.getProxy().addChild(childProxy);
  if (node.getState() == State.RUNNING) {
    childProxy.setStarted();
    if (suite) {
      fireOnSuiteStarted(childProxy);
    }
 else {
      fireOnTestStarted(childProxy);
    }
  }
}
