{
  myEditor.putUserData(EditorImpl.DO_DOCUMENT_UPDATE_TEST,Boolean.TRUE);
  myEditor.getSettings().setAdditionalLinesCount(0);
  myEditor.getSettings().setAdditionalColumnsCount(1);
  JComponent editorComponent=myEditor.getContentComponent();
  Dimension size=editorComponent.getPreferredSize();
  editorComponent.setSize(size);
  BufferedImage image=new BufferedImage(size.width,size.height,BufferedImage.TYPE_INT_ARGB);
  BitmapFont bitmapFont=BitmapFont.loadFromFile(getFontFile());
  MyGraphics graphics=new MyGraphics(image.createGraphics(),bitmapFont);
  try {
    editorComponent.paint(graphics);
  }
  finally {
    graphics.dispose();
  }
  File fileWithExpectedResult=getTestDataFile(expectedResultFileName);
  if (OVERWRITE_TESTDATA) {
    ImageIO.write(image,"png",fileWithExpectedResult);
    System.out.println("File " + fileWithExpectedResult.getPath() + " created.");
  }
  if (fileWithExpectedResult.exists()) {
    BufferedImage expectedResult=ImageIO.read(fileWithExpectedResult);
    if (expectedResult.getWidth() != image.getWidth()) {
      fail("Unexpected image width",fileWithExpectedResult,image);
    }
    if (expectedResult.getHeight() != image.getHeight()) {
      fail("Unexpected image height",fileWithExpectedResult,image);
    }
    for (int i=0; i < expectedResult.getWidth(); i++) {
      for (int j=0; j < expectedResult.getHeight(); j++) {
        if (expectedResult.getRGB(i,j) != image.getRGB(i,j)) {
          fail("Unexpected image contents",fileWithExpectedResult,image);
        }
      }
    }
  }
 else {
    ImageIO.write(image,"png",fileWithExpectedResult);
    fail("Missing test data created: " + fileWithExpectedResult.getPath());
  }
}
