{
  GrExpression qualifier=myRefExpr.getQualifierExpression();
  if (qualifier == null) {
    ResolveUtil.treeWalkUp(myRefExpr,myProcessor,true);
    ClosureMissingMethodContributor.processMethodsFromClosures(myRefExpr,myProcessor);
    GrExpression runtimeQualifier=PsiImplUtil.getRuntimeQualifier(myRefExpr);
    if (runtimeQualifier != null) {
      getVariantsFromQualifier(runtimeQualifier);
    }
    getBindings();
  }
 else {
    if (myRefExpr.getDotTokenType() != GroovyTokenTypes.mSPREAD_DOT) {
      getVariantsFromQualifier(qualifier);
      if (qualifier instanceof GrReferenceExpression && ("class".equals(((GrReferenceExpression)qualifier).getReferenceName()) || PsiUtil.isThisReference(qualifier) && !PsiUtil.isInstanceThisRef(qualifier))) {
        processIfJavaLangClass(qualifier.getType());
      }
    }
 else {
      getVariantsFromQualifierForSpreadOperator(qualifier);
    }
  }
  ResolveUtil.processCategoryMembers(myRefExpr,myProcessor,ResolveState.initial());
}
