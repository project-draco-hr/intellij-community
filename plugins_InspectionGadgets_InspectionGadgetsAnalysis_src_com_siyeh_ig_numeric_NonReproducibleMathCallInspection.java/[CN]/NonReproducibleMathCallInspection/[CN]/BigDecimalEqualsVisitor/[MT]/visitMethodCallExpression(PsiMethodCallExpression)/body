{
  super.visitMethodCallExpression(expression);
  final PsiReferenceExpression methodExpression=expression.getMethodExpression();
  final String methodName=methodExpression.getReferenceName();
  if (!nonReproducibleMethods.contains(methodName)) {
    return;
  }
  final PsiMethod method=expression.resolveMethod();
  if (method == null) {
    return;
  }
  final PsiClass referencedClass=method.getContainingClass();
  if (referencedClass == null) {
    return;
  }
  final String className=referencedClass.getQualifiedName();
  if (!CommonClassNames.JAVA_LANG_MATH.equals(className)) {
    return;
  }
  registerMethodCallError(expression);
}
