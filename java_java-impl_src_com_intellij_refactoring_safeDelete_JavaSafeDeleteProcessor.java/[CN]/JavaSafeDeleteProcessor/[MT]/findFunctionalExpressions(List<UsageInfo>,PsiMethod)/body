{
  for (  PsiMethod method : methods) {
    final PsiClass containingClass=method.getContainingClass();
    FunctionalExpressionSearch.search(containingClass).forEach(new Processor<PsiFunctionalExpression>(){
      @Override public boolean process(      PsiFunctionalExpression expression){
        usages.add(new SafeDeleteFunctionalExpressionUsageInfo(expression,containingClass));
        return true;
      }
    }
);
  }
}
