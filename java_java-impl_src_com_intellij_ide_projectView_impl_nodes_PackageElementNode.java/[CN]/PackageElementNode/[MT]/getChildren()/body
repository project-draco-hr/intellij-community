{
  final PackageElement value=getValue();
  if (value == null)   return Collections.emptyList();
  final List<AbstractTreeNode> children=new ArrayList<>();
  final Module module=value.getModule();
  final PsiPackage aPackage=value.getPackage();
  if (!getSettings().isFlattenPackages()) {
    final PsiPackage[] subpackages=PackageUtil.getSubpackages(aPackage,module,isLibraryElement());
    for (    PsiPackage subpackage : subpackages) {
      PackageUtil.addPackageAsChild(children,subpackage,module,getSettings(),isLibraryElement());
    }
  }
  final GlobalSearchScope scopeToShow=PackageUtil.getScopeToShow(aPackage.getProject(),module,isLibraryElement());
  PsiFile[] packageChildren=aPackage.getFiles(scopeToShow);
  for (  PsiFile file : packageChildren) {
    if (file.getVirtualFile() != null) {
      children.add(new PsiFileNode(getProject(),file,getSettings()));
    }
  }
  return children;
}
