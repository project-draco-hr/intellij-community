{
  VirtualMachineProxyImpl proxy=(VirtualMachineProxyImpl)process.getVirtualMachineProxy();
  for (  OutputFileObject cls : classes) {
    if (cls.getName().contains(getGenClassName())) {
      Method defineMethod=((ClassType)classLoader.referenceType()).concreteMethodByName("defineClass","(Ljava/lang/String;[BII)Ljava/lang/Class;");
      byte[] bytes=changeSuperToMagicAccessor(cls.toByteArray());
      ArrayList<Value> args=new ArrayList<Value>();
      args.add(proxy.mirrorOf(cls.myOrigName));
      args.add(mirrorOf(bytes,context,process));
      args.add(proxy.mirrorOf(0));
      args.add(proxy.mirrorOf(bytes.length));
      classLoader.invokeMethod(threadReference,defineMethod,args,ClassType.INVOKE_SINGLE_THREADED);
    }
  }
  return (ClassType)process.findClass(context,getGenPackageName() + '.' + getGenClassName(),classLoader);
}
