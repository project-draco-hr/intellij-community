{
  myOptionsCheckBox.setEnabled(myPackages.getSelectedIndex() >= 0);
  myVersionCheckBox.setEnabled(myPackages.getSelectedIndex() >= 0);
  myOptionsCheckBox.setSelected(false);
  myVersionCheckBox.setSelected(false);
  myVersionComboBox.setEnabled(false);
  myOptionsField.setEnabled(false);
  myDescriptionTextArea.setText("<html><body style='text-align: center;padding-top:20px;'>Loading...</body></html>");
  final Object pyPackage=myPackages.getSelectedValue();
  if (pyPackage instanceof RepoPackage) {
    final String packageName=((RepoPackage)pyPackage).getName();
    mySelectedPackageName=packageName;
    myVersionComboBox.removeAllItems();
    if (myVersionCheckBox.isEnabled()) {
      myController.fetchPackageVersions(packageName,new CatchingConsumer<List<String>,Exception>(){
        @Override public void consume(        final List<String> releases){
          ApplicationManager.getApplication().invokeLater(new Runnable(){
            @Override public void run(){
              if (myPackages.getSelectedValue() == pyPackage) {
                myVersionComboBox.removeAllItems();
                for (                String release : releases) {
                  myVersionComboBox.addItem(release);
                }
              }
            }
          }
,ModalityState.any());
        }
        @Override public void consume(        Exception e){
          LOG.info("Error retrieving releases",e);
        }
      }
);
    }
    myInstallButton.setEnabled(!myCurrentlyInstalling.contains(packageName));
    myController.fetchPackageDetails(packageName,new CatchingConsumer<String,Exception>(){
      @Override public void consume(      final String details){
        UIUtil.invokeLaterIfNeeded(new Runnable(){
          @Override public void run(){
            if (myPackages.getSelectedValue() == pyPackage) {
              myDescriptionTextArea.setText(details);
              myDescriptionTextArea.setCaretPosition(0);
            }
          }
        }
);
      }
      @Override public void consume(      Exception exception){
        UIUtil.invokeLaterIfNeeded(new Runnable(){
          @Override public void run(){
            myDescriptionTextArea.setText("No information available");
          }
        }
);
        LOG.info("Error retrieving package details",exception);
      }
    }
);
  }
 else {
    myInstallButton.setEnabled(false);
    myDescriptionTextArea.setText("");
  }
}
