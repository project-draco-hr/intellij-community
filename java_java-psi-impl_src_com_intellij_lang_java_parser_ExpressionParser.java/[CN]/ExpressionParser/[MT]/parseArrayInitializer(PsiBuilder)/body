{
  if (builder.getTokenType() != JavaTokenType.LBRACE)   return null;
  final PsiBuilder.Marker arrayInit=builder.mark();
  builder.advanceLexer();
  boolean first=true;
  while (true) {
    if (builder.getTokenType() == JavaTokenType.RBRACE) {
      builder.advanceLexer();
      break;
    }
    if (builder.getTokenType() == null) {
      error(builder,JavaErrorMessages.message("expected.rbrace"));
      break;
    }
    if (parse(builder) == null) {
      if (builder.getTokenType() == JavaTokenType.COMMA) {
        if (first && builder.lookAhead(1) == JavaTokenType.RBRACE) {
          advance(builder,2);
          break;
        }
        builder.error(JavaErrorMessages.message("expected.expression"));
      }
 else       if (builder.getTokenType() != JavaTokenType.RBRACE) {
        error(builder,JavaErrorMessages.message("expected.rbrace"));
        break;
      }
    }
    first=false;
    final IElementType tokenType=builder.getTokenType();
    if (tokenType == JavaTokenType.COMMA) {
      builder.advanceLexer();
    }
 else     if (tokenType != JavaTokenType.RBRACE) {
      error(builder,JavaErrorMessages.message("expected.comma"));
    }
  }
  arrayInit.done(JavaElementType.ARRAY_INITIALIZER_EXPRESSION);
  return arrayInit;
}
