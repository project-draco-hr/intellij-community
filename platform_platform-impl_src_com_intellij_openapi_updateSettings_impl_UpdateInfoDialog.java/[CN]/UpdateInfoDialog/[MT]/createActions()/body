{
  List<Action> actions=ContainerUtil.newArrayList();
  if (myPatch != null) {
    boolean canRestart=ApplicationManager.getApplication().isRestartCapable();
    String button=IdeBundle.message(canRestart ? "updates.download.and.restart.button" : "updates.download.and.install.button");
    actions.add(new AbstractAction(button){
{
        setEnabled(!myWriteProtected);
      }
      @Override public void actionPerformed(      ActionEvent e){
        downloadPatch();
      }
    }
);
  }
  List<ButtonInfo> buttons=myLatestBuild.getButtons();
  if (buttons.isEmpty()) {
    actions.add(new AbstractAction(IdeBundle.message("updates.more.info.button")){
      @Override public void actionPerformed(      ActionEvent e){
        openDownloadPage();
      }
    }
);
  }
 else {
    for (    ButtonInfo info : buttons) {
      if (!info.isDownload()) {
        actions.add(new ButtonAction(info));
      }
    }
  }
  actions.add(new AbstractAction(IdeBundle.message("updates.ignore.update.button")){
    @Override public void actionPerformed(    ActionEvent e){
      String build=myLatestBuild.getNumber().asStringWithoutProductCode();
      UpdateSettings.getInstance().getIgnoredBuildNumbers().add(build);
      doCancelAction();
    }
  }
);
  actions.add(getCancelAction());
  return actions.toArray(new Action[actions.size()]);
}
