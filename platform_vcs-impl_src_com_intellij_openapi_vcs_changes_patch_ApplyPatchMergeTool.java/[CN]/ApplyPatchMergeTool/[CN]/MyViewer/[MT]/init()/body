{
  final Project project=myMergeContext.getProject();
  final Document document=myMergeRequest.getDocument();
  DiffUtil.executeWriteCommand(document,project,"Init merge content",new Runnable(){
    @Override public void run(){
      document.setText(myMergeRequest.getPatchedContent());
      UndoManager undoManager=project != null ? UndoManager.getInstance(project) : UndoManager.getGlobalInstance();
      if (undoManager != null) {
        DocumentReference ref=DocumentReferenceManager.getInstance().create(document);
        undoManager.nonundoableActionPerformed(ref,false);
      }
    }
  }
);
  ToolbarComponents components=new ToolbarComponents();
  FrameDiffTool.ToolbarComponents init=myViewer.init();
  components.statusPanel=init.statusPanel;
  components.toolbarActions=init.toolbarActions;
  components.closeHandler=new BooleanGetter(){
    @Override public boolean get(){
      return Messages.showYesNoDialog(getComponent().getRootPane(),DiffBundle.message("merge.dialog.exit.without.applying.changes.confirmation.message"),DiffBundle.message("cancel.visual.merge.dialog.title"),Messages.getQuestionIcon()) == Messages.YES;
    }
  }
;
  return components;
}
