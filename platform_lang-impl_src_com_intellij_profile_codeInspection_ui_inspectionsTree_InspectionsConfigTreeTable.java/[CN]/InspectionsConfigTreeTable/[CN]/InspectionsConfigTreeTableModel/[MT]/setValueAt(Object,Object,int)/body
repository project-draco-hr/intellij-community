{
  LOG.assertTrue(column == IS_ENABLED_COLUMN);
  LOG.assertTrue(aValue != null,"node = " + node);
  final boolean doEnable=(Boolean)aValue;
  final InspectionProfileImpl profile=mySettings.getInspectionProfile();
  for (  final InspectionConfigTreeNode aNode : InspectionsAggregationUtil.getInspectionsNodes((InspectionConfigTreeNode)node)) {
    final String toolId=aNode.getKey().toString();
    if (doEnable) {
      profile.enableTool(toolId,mySettings.getProject());
    }
 else {
      profile.disableTool(toolId,mySettings.getProject());
    }
    for (    ScopeToolState state : profile.getTools(toolId,mySettings.getProject()).getTools()) {
      state.setEnabled(doEnable);
    }
    aNode.dropCache();
    mySettings.onChanged(aNode);
  }
  if (myTreeTable != null) {
    if (!myUpdateAlarm.isDisposed()) {
      myUpdateAlarm.cancelAllRequests();
      myUpdateAlarm.addRequest(myUpdateRunnable,10,ModalityState.stateForComponent(myTreeTable));
    }
  }
}
