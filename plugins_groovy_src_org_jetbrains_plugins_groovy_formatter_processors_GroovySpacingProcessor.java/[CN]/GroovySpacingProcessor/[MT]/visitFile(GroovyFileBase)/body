{
  if (isAfterElementOrSemi(GroovyElementTypes.PACKAGE_DEFINITION)) {
    myResult=Spacing.createSpacing(0,0,mySettings.BLANK_LINES_AFTER_PACKAGE + 1,mySettings.KEEP_LINE_BREAKS,keepBlankLines());
  }
 else   if (myType2 == GroovyElementTypes.PACKAGE_DEFINITION) {
    myResult=Spacing.createSpacing(0,0,mySettings.BLANK_LINES_BEFORE_PACKAGE + 1,mySettings.KEEP_LINE_BREAKS,keepBlankLines());
  }
 else   if (isLeftOrRight(TokenSets.TYPE_DEFINITIONS)) {
    if (myType1 == GroovyDocElementTypes.GROOVY_DOC_COMMENT) {
      createLF(true);
    }
 else {
      myResult=Spacing.createSpacing(0,0,mySettings.BLANK_LINES_AROUND_CLASS + 1,mySettings.KEEP_LINE_BREAKS,keepBlankLines());
    }
  }
 else   if (isAfterElementOrSemi(GroovyElementTypes.IMPORT_STATEMENT) && myType2 != GroovyElementTypes.IMPORT_STATEMENT) {
    myResult=Spacing.createSpacing(0,0,mySettings.BLANK_LINES_AFTER_IMPORTS + 1,mySettings.KEEP_LINE_BREAKS,keepBlankLines());
  }
 else   if (myType1 != GroovyElementTypes.IMPORT_STATEMENT && !isSemiAfter(GroovyElementTypes.IMPORT_STATEMENT) && myType2 == GroovyElementTypes.IMPORT_STATEMENT) {
    myResult=Spacing.createSpacing(0,0,mySettings.BLANK_LINES_BEFORE_IMPORTS,mySettings.KEEP_LINE_BREAKS,keepBlankLines());
  }
 else   if (isAfterElementOrSemi(GroovyElementTypes.IMPORT_STATEMENT) && myType2 == GroovyElementTypes.IMPORT_STATEMENT) {
    myResult=Spacing.createSpacing(0,0,1,mySettings.KEEP_LINE_BREAKS,keepBlankLines());
  }
 else {
    processClassMembers(null);
  }
}
