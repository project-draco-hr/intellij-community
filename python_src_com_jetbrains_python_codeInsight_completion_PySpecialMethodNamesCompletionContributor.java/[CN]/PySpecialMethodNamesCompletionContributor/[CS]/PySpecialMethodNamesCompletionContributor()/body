{
  extend(CompletionType.BASIC,psiElement().withLanguage(PythonLanguage.getInstance()).and(psiElement().inside(psiElement(PyFunction.class).inside(psiElement(PyClass.class)))).and(psiElement().afterLeaf("def")),new CompletionProvider<CompletionParameters>(){
    protected void addCompletions(    @NotNull final CompletionParameters parameters,    final ProcessingContext context,    @NotNull final CompletionResultSet result){
      LanguageLevel languageLevel=LanguageLevel.forElement(parameters.getOriginalFile());
      for (      Map.Entry<String,PyNames.BuiltinDescription> entry : PyNames.getBuiltinMethods(languageLevel).entrySet()) {
        LookupElementBuilder item=LookupElementBuilder.create(entry.getKey() + entry.getValue().getSignature()).bold().withTypeText("predefined").withIcon(PythonIcons.Python.Nodes.Cyan_dot);
        result.addElement(TailTypeDecorator.withTail(item,TailType.CASE_COLON));
      }
    }
  }
);
}
