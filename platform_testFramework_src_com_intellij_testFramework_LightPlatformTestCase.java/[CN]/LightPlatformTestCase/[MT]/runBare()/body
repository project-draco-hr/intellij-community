{
  if (!shouldRunTest()) {
    return;
  }
  final AtomicReference<Throwable> throwable=new AtomicReference<Throwable>();
  SwingUtilities.invokeAndWait(new Runnable(){
    @Override public void run(){
      try {
        ourTestThread=Thread.currentThread();
        startRunAndTear();
      }
 catch (      Throwable e) {
        throwable.set(e);
      }
 finally {
        ourTestThread=null;
        try {
          Application application=ApplicationManager.getApplication();
          if (application instanceof ApplicationEx) {
            PlatformTestCase.cleanupApplicationCaches(ourProject);
          }
          resetAllFields();
        }
 catch (        Throwable e) {
          e.printStackTrace();
        }
      }
    }
  }
);
  if (throwable.get() != null) {
    throw throwable.get();
  }
  SwingUtilities.invokeAndWait(EmptyRunnable.getInstance());
  if (IdeaLogger.ourErrorsOccurred != null) {
    throw IdeaLogger.ourErrorsOccurred;
  }
}
