{
  ourProjectDescriptor=descriptor;
  ApplicationManager.getApplication().runWriteAction(new Runnable(){
    @Override public void run(){
      if (ourProject != null) {
        closeAndDeleteProject();
      }
 else {
        cleanPersistedVFSContent();
      }
    }
  }
);
  final File projectFile=FileUtil.createTempFile(ProjectImpl.LIGHT_PROJECT_NAME,ProjectFileType.DOT_DEFAULT_EXTENSION);
  LocalFileSystem.getInstance().refreshAndFindFileByIoFile(projectFile);
  ByteArrayOutputStream buffer=new ByteArrayOutputStream();
  new Throwable(projectFile.getPath()).printStackTrace(new PrintStream(buffer));
  ourProject=PlatformTestCase.createProject(projectFile,LIGHT_PROJECT_MARK + buffer);
  ourPathToKeep=projectFile.getPath();
  if (!ourHaveShutdownHook) {
    ourHaveShutdownHook=true;
    registerShutdownHook();
  }
  ourPsiManager=null;
  ourProjectDescriptor.setUpProject(ourProject,new LightProjectDescriptor.SetupHandler(){
    @Override public void moduleCreated(    @NotNull Module module){
      ourModule=module;
    }
    @Override public void sourceRootCreated(    @NotNull VirtualFile sourceRoot){
      ourSourceRoot=sourceRoot;
    }
  }
);
  ((VirtualFilePointerManagerImpl)VirtualFilePointerManager.getInstance()).storePointers();
}
