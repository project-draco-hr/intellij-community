{
  Project project=getProject();
  CodeStyleSettingsManager.getInstance(project).dropTemporarySettings();
  List<Throwable> errors=new SmartList<Throwable>();
  try {
    checkForSettingsDamage(errors);
    doTearDown(project,ourApplication,true,errors);
  }
 catch (  Throwable e) {
    errors.add(e);
  }
  try {
    super.tearDown();
  }
 catch (  Throwable e) {
    errors.add(e);
  }
  try {
    myThreadTracker.checkLeak();
    InjectedLanguageManagerImpl.checkInjectorsAreDisposed(project);
    ((VirtualFilePointerManagerImpl)VirtualFilePointerManager.getInstance()).assertPointersAreDisposed();
  }
 catch (  Throwable e) {
    errors.add(e);
  }
 finally {
    CompoundRuntimeException.throwIfNotEmpty(errors);
  }
}
