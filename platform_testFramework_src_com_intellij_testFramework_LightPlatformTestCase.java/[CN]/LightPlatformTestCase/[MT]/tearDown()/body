{
  Project project=getProject();
  CodeStyleSettingsManager.getInstance(project).dropTemporarySettings();
  List<Throwable> errors=checkForSettingsDamage();
  try {
    doTearDown(project,ourApplication,true);
  }
  finally {
    try {
      super.tearDown();
    }
  finally {
      myThreadTracker.checkLeak();
      InjectedLanguageManagerImpl.checkInjectorsAreDisposed(project);
      ((VirtualFilePointerManagerImpl)VirtualFilePointerManager.getInstance()).assertPointersAreDisposed();
      CompoundRuntimeException.doThrow(errors);
    }
  }
}
