{
  PsiDocumentManagerImpl documentManager;
  try {
    ((FileTypeManagerImpl)FileTypeManager.getInstance()).drainReDetectQueue();
    DocumentCommitThread.getInstance().clearQueue();
    CodeStyleSettingsManager.getInstance(project).dropTemporarySettings();
    checkJavaSwingTimersAreDisposed(exceptions);
    UsefulTestCase.doPostponedFormatting(project);
    LookupManager lookupManager=LookupManager.getInstance(project);
    if (lookupManager != null) {
      lookupManager.hideActiveLookup();
    }
    ((StartupManagerImpl)StartupManager.getInstance(project)).prepareForNextTest();
    InspectionProfileManager.getInstance().deleteProfile(PROFILE);
    if (ProjectManager.getInstance() == null) {
      exceptions.add(new AssertionError("Application components damaged"));
    }
    ContainerUtil.addIfNotNull(exceptions,new WriteCommandAction.Simple(project){
      @Override protected void run() throws Throwable {
        if (ourSourceRoot != null) {
          try {
            final VirtualFile[] children=ourSourceRoot.getChildren();
            for (            VirtualFile child : children) {
              child.delete(this);
            }
          }
 catch (          IOException e) {
            e.printStackTrace();
          }
        }
        EncodingManager encodingManager=EncodingManager.getInstance();
        if (encodingManager instanceof EncodingManagerImpl)         ((EncodingManagerImpl)encodingManager).clearDocumentQueue();
        FileDocumentManager manager=FileDocumentManager.getInstance();
        ApplicationManager.getApplication().runWriteAction(EmptyRunnable.getInstance());
        manager.saveAllDocuments();
        if (manager instanceof FileDocumentManagerImpl) {
          ((FileDocumentManagerImpl)manager).dropAllUnsavedDocuments();
        }
      }
    }
.execute().getThrowable());
    assertFalse(PsiManager.getInstance(project).isDisposed());
    if (!ourAssertionsInTestDetected) {
      if (IdeaLogger.ourErrorsOccurred != null) {
        throw IdeaLogger.ourErrorsOccurred;
      }
    }
    documentManager=clearUncommittedDocuments(project);
    ((HintManagerImpl)HintManager.getInstance()).cleanup();
    DocumentCommitThread.getInstance().clearQueue();
    EdtTestUtil.runInEdtAndWait(new Runnable(){
      @Override public void run(){
        ((UndoManagerImpl)UndoManager.getGlobalInstance()).dropHistoryInTests();
        ((UndoManagerImpl)UndoManager.getInstance(project)).dropHistoryInTests();
        UIUtil.dispatchAllInvocationEvents();
      }
    }
);
    TemplateDataLanguageMappings.getInstance(project).cleanupForNextTest();
  }
  finally {
    ProjectManagerEx.getInstanceEx().closeTestProject(project);
    application.setDataProvider(null);
    ourTestCase=null;
    ((PsiManagerImpl)PsiManager.getInstance(project)).cleanupForNextTest();
    CompletionProgressIndicator.cleanupForNextTest();
  }
  if (checkForEditors) {
    checkEditorsReleased(exceptions);
  }
  documentManager.clearUncommittedDocuments();
  if (ourTestCount++ % 100 == 0) {
    GCUtil.clearBeanInfoCache();
  }
}
