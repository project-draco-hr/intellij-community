{
  List<File> files=getClassRoots(project,null);
  if (files == null)   return null;
  final LocalFileSystem localFileSystem=LocalFileSystem.getInstance();
  final JarFileSystem jarFileSystem=JarFileSystem.getInstance();
  return ContainerUtil.mapNotNull(files,new Function<File,VirtualFile>(){
    @Override public VirtualFile fun(    File file){
      final VirtualFile virtualFile=localFileSystem.refreshAndFindFileByIoFile(file);
      return virtualFile != null ? jarFileSystem.getJarRootForLocalFile(virtualFile) : null;
    }
  }
);
}
