{
  if (settingsType == SettingsType.SPACING_SETTINGS) {
    consumer.showStandardOptions("SPACE_BEFORE_METHOD_CALL_PARENTHESES","SPACE_BEFORE_METHOD_PARENTHESES","SPACE_AROUND_ASSIGNMENT_OPERATORS","SPACE_AROUND_EQUALITY_OPERATORS","SPACE_AROUND_RELATIONAL_OPERATORS","SPACE_AROUND_BITWISE_OPERATORS","SPACE_AROUND_ADDITIVE_OPERATORS","SPACE_AROUND_MULTIPLICATIVE_OPERATORS","SPACE_AROUND_SHIFT_OPERATORS","SPACE_WITHIN_METHOD_CALL_PARENTHESES","SPACE_WITHIN_METHOD_PARENTHESES","SPACE_WITHIN_BRACKETS","SPACE_AFTER_COMMA","SPACE_BEFORE_COMMA","SPACE_BEFORE_SEMICOLON");
    consumer.showCustomOption(PyCodeStyleSettings.class,"SPACE_BEFORE_LBRACKET","Left bracket",SPACES_BEFORE_PARENTHESES);
    consumer.showCustomOption(PyCodeStyleSettings.class,"SPACE_AROUND_EQ_IN_NAMED_PARAMETER","Around = in named parameter",SPACES_AROUND_OPERATORS);
    consumer.showCustomOption(PyCodeStyleSettings.class,"SPACE_AROUND_EQ_IN_KEYWORD_ARGUMENT","Around = in keyword argument",SPACES_AROUND_OPERATORS);
    consumer.showCustomOption(PyCodeStyleSettings.class,"SPACE_WITHIN_BRACES","Braces",SPACES_WITHIN);
    consumer.showCustomOption(PyCodeStyleSettings.class,"SPACE_BEFORE_PY_COLON",ApplicationBundle.message("checkbox.spaces.before.colon"),SPACES_OTHER);
    consumer.showCustomOption(PyCodeStyleSettings.class,"SPACE_AFTER_PY_COLON",ApplicationBundle.message("checkbox.spaces.after.colon"),SPACES_OTHER);
    consumer.showCustomOption(PyCodeStyleSettings.class,"SPACE_BEFORE_BACKSLASH","Before '\\'",SPACES_OTHER);
    consumer.showCustomOption(PyCodeStyleSettings.class,"SPACE_BEFORE_NUMBER_SIGN","Before '#'",SPACES_OTHER);
    consumer.showCustomOption(PyCodeStyleSettings.class,"SPACE_AFTER_NUMBER_SIGN","After '#'",SPACES_OTHER);
  }
 else   if (settingsType == SettingsType.BLANK_LINES_SETTINGS) {
    consumer.showStandardOptions("BLANK_LINES_AROUND_CLASS","BLANK_LINES_AROUND_METHOD","BLANK_LINES_AFTER_IMPORTS","KEEP_BLANK_LINES_IN_DECLARATIONS","KEEP_BLANK_LINES_IN_CODE");
    consumer.showCustomOption(PyCodeStyleSettings.class,"BLANK_LINES_AROUND_TOP_LEVEL_CLASSES_FUNCTIONS","Around top-level classes and functions:",BLANK_LINES);
  }
 else   if (settingsType == SettingsType.WRAPPING_AND_BRACES_SETTINGS) {
    consumer.showStandardOptions("RIGHT_MARGIN","KEEP_LINE_BREAKS","WRAP_LONG_LINES","ALIGN_MULTILINE_PARAMETERS","ALIGN_MULTILINE_PARAMETERS_IN_CALLS");
    consumer.showCustomOption(PyCodeStyleSettings.class,"NEW_LINE_AFTER_COLON","Single-clause statements","Force new line after colon");
    consumer.showCustomOption(PyCodeStyleSettings.class,"NEW_LINE_AFTER_COLON_MULTI_CLAUSE","Multi-clause statements","Force new line after colon");
    consumer.showCustomOption(PyCodeStyleSettings.class,"ALIGN_COLLECTIONS_AND_COMPREHENSIONS","Align when multiline","Collections and Comprehensions");
    consumer.showCustomOption(PyCodeStyleSettings.class,"ALIGN_MULTILINE_IMPORTS","Align when multiline","Import Statements");
    consumer.showCustomOption(PyCodeStyleSettings.class,"DICT_WRAPPING","Dictionary literals",null,WRAP_OPTIONS,WRAP_VALUES);
  }
}
