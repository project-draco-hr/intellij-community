{
  x=indentX;
  y=indentY;
  ApplicationInfoEx appInfo=(ApplicationInfoEx)ApplicationInfo.getInstance();
  boolean showCopyButton=myShowCopy;
  for (  AboutBoxLine line : lines) {
    final String s=line.getText();
    setFont(line.isBold() ? myBoldFont : myFont);
    if (line.getUrl() != null) {
      g2.setColor(myLinkColor);
      FontMetrics metrics=g2.getFontMetrics(font);
      myLinks.add(new Link(new Rectangle(xBase + x,yBase + y - fontAscent,metrics.stringWidth(s + " "),fontHeight),line.getUrl()));
    }
 else {
      g2.setColor(Registry.is("ide.new.about") ? Gray.x33 : appInfo.getAboutForeground());
    }
    renderString(s,indentX);
    if (showCopyButton) {
      final FontMetrics metrics=g2.getFontMetrics(myFont);
      String copyString="Copy to Clipboard";
      final int width=metrics.stringWidth(copyString);
      g2.setFont(myFont);
      g2.setColor(myLinkColor);
      final int xOffset=myImage.getIconWidth() - width - 10;
      final GraphicsConfig config=GraphicsUtil.paintWithAlpha(g2,0.5f);
      g2.drawString(copyString,xOffset,yBase + y);
      config.restore();
      myLinks.add(new Link(new Rectangle(xOffset,yBase + y - fontAscent,width,fontHeight),COPY_URL));
      showCopyButton=false;
    }
    if (!line.isKeepWithNext() && !line.equals(lines.get(lines.size() - 1))) {
      lineFeed(indentX,s);
    }
  }
}
