{
  if (!isOnlyTopElement(element))   return false;
  JSExpression expression=element.getExpression();
  String expText=expression.getText();
  if (expText == null || !expText.equals(element.getText())) {
    return false;
  }
  MatchingHandler handler=new MatchingHandler(){
    public boolean match(    PsiElement patternNode,    PsiElement matchedNode,    MatchContext context){
      if (!super.match(patternNode,matchedNode,context)) {
        return false;
      }
      JSExpression jsExpression=((JSExpressionStatement)patternNode).getExpression();
      return context.getMatcher().match(jsExpression,matchedNode);
    }
  }
;
  myGlobalVisitor.setHandler(element,handler);
  handler.setFilter(new NodeFilter(){
    public boolean accepts(    PsiElement element){
      return element instanceof JSExpression || (element instanceof LeafElement && ((LeafElement)element).getElementType() == JSTokenTypes.IDENTIFIER);
    }
  }
);
  return true;
}
