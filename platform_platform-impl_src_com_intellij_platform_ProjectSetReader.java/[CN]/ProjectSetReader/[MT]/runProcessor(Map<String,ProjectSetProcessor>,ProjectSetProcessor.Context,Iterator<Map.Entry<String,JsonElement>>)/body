{
  if (!iterator.hasNext())   return;
  Map.Entry<String,JsonElement> entry=iterator.next();
  String key=entry.getKey();
  ProjectSetProcessor processor=processors.get(key);
  if (processor == null) {
    LOG.error("Processor not found for " + key);
    return;
  }
  List<Pair<String,String>> list;
  if (entry.getValue().isJsonObject()) {
    JsonObject object=entry.getValue().getAsJsonObject();
    list=ContainerUtil.map(object.entrySet(),new Function<Map.Entry<String,JsonElement>,Pair<String,String>>(){
      @Override public Pair<String,String> fun(      Map.Entry<String,JsonElement> entry){
        JsonElement value=entry.getValue();
        return Pair.create(entry.getKey(),value instanceof JsonPrimitive ? value.getAsString() : value.toString());
      }
    }
);
  }
 else {
    list=Collections.singletonList(Pair.create(entry.getKey(),entry.getValue().getAsString()));
  }
  processor.processEntries(list,context,new Runnable(){
    @Override public void run(){
      runProcessor(processors,context,iterator);
    }
  }
);
}
