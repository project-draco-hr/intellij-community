{
  final DataContext dataContext=context.getDataContext();
  final Location<?>[] locations=Location.DATA_KEYS.getData(dataContext);
  if (locations != null) {
    List<PsiElement> elements=new ArrayList<PsiElement>();
    for (    Location<?> location : locations) {
      final PsiElement psiElement=location.getPsiElement();
      classes.add(getQName(psiElement,location));
      elements.add(psiElement);
    }
    return elements.toArray(new PsiElement[elements.size()]);
  }
  PsiElement[] elements=LangDataKeys.PSI_ELEMENT_ARRAY.getData(dataContext);
  if (elements != null) {
    for (    PsiMember psiMember : collectTestMembers(elements)) {
      classes.add(getQName(psiMember,null));
    }
    return elements;
  }
 else {
    final PsiFile file=CommonDataKeys.PSI_FILE.getData(dataContext);
    if (file instanceof PsiClassOwner) {
      for (      PsiMember psiMember : collectTestMembers(((PsiClassOwner)file).getClasses())) {
        classes.add(((PsiClass)psiMember).getQualifiedName());
      }
      return new PsiElement[]{file};
    }
  }
  return null;
}
