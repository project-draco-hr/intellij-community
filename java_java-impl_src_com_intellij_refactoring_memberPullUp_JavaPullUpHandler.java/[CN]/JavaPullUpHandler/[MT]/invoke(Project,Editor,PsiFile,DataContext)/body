{
  editor.getScrollingModel().scrollToCaret(ScrollType.MAKE_VISIBLE);
  List<PsiElement> elements=new ArrayList<>();
  for (  Caret caret : editor.getCaretModel().getAllCarets()) {
    int offset=caret.getOffset();
    PsiElement element=file.findElementAt(offset);
    while (element != null && !(element instanceof PsiFile)) {
      if (element instanceof PsiClass || element instanceof PsiField || element instanceof PsiMethod) {
        elements.add(element);
        break;
      }
      element=element.getParent();
    }
  }
  if (elements.isEmpty()) {
    String message=RefactoringBundle.getCannotRefactorMessage(RefactoringBundle.message("the.caret.should.be.positioned.inside.a.class.to.pull.members.from"));
    CommonRefactoringUtil.showErrorHint(project,editor,message,REFACTORING_NAME,HelpID.MEMBERS_PULL_UP);
  }
 else {
    invoke(project,elements.toArray(PsiElement.EMPTY_ARRAY),dataContext);
  }
}
