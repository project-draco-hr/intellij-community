{
  long ms;
  ms=System.currentTimeMillis();
  GraphFlags flags=new GraphFlags(commits.size());
  PermanentGraphImpl permanentGraph=PermanentGraphBuilder.build(flags.getSimpleNodeFlags(),commits);
  System.out.println("PermanentGraph:" + (System.currentTimeMillis() - ms));
  ms=System.currentTimeMillis();
  PermanentGraphLayout graphLayout=PermanentGraphLayoutBuilder.build(permanentGraph);
  System.out.println("LayoutModel:" + (System.currentTimeMillis() - ms));
  ms=System.currentTimeMillis();
  for (int i=0; i < permanentGraph.nodesCount(); i++) {
    graphLayout.getOneOfHeadNodeIndex(i);
  }
  System.out.println("getOneOfHead:" + (System.currentTimeMillis() - ms));
  ms=System.currentTimeMillis();
  List<Integer> headers=new ArrayList<Integer>();
  for (int i=0; i < permanentGraph.nodesCount(); i++) {
    if (permanentGraph.getUpNodes(i).size() == 0) {
      headers.add(i);
    }
  }
  System.out.println("graph walk:" + (System.currentTimeMillis() - ms));
  PermanentAsMutableGraph mutableGraph=new PermanentAsMutableGraph(permanentGraph,graphLayout);
  GraphRender graphRender=new GraphRender(mutableGraph,new ThickHoverControllerTest());
  return new GraphFacadeImpl(flags,permanentGraph,graphLayout,mutableGraph,graphRender);
}
