{
  return new GraphInfoProvider(){
    @NotNull @Override public Set<Integer> getContainingBranches(    int visibleRow){
      assertRange(visibleRow);
      return Collections.emptySet();
    }
    @NotNull @Override public RowInfo getRowInfo(    int visibleRow){
      assertRange(visibleRow);
      int indexInPermanentGraph=myGraphData.getMutableGraph().getIndexInPermanentGraph(visibleRow);
      final int oneOfHeadNodeIndex=myGraphData.getPermanentGraphLayout().getOneOfHeadNodeIndex(indexInPermanentGraph);
      return new RowInfo(){
        @Override public int getOneOfHeads(){
          return myGraphData.getPermanentGraph().getHashIndex(oneOfHeadNodeIndex);
        }
      }
;
    }
    @Override public boolean areLongEdgesHidden(){
      return !myGraphData.getGraphRender().isShowLongEdges();
    }
  }
;
}
