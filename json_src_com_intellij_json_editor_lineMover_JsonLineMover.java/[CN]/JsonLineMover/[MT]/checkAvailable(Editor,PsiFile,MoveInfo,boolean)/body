{
  myShouldAddComma=false;
  if (!(file instanceof JsonFile) || !super.checkAvailable(editor,file,info,down)) {
    return false;
  }
  final Pair<PsiElement,PsiElement> movedElementRange=getElementRange(editor,file,info.toMove);
  final Pair<PsiElement,PsiElement> destElementRange=getElementRange(editor,file,info.toMove2);
  if (!isValidElementRange(movedElementRange) || !isValidElementRange(destElementRange)) {
    return false;
  }
  if (movedElementRange.getFirst().getParent() != destElementRange.getSecond().getParent()) {
    return false;
  }
  final PsiElement commonParent=movedElementRange.getFirst().getParent();
  final PsiElement lowerRightElement=down ? destElementRange.getSecond() : movedElementRange.getSecond();
  if (lowerRightElement instanceof JsonElement) {
    if (commonParent instanceof JsonArray && notFollowedByNextElementOrComma(lowerRightElement,JsonValue.class) || commonParent instanceof JsonObject && notFollowedByNextElementOrComma(lowerRightElement,JsonProperty.class)) {
      myShouldAddComma=true;
    }
  }
  return true;
}
