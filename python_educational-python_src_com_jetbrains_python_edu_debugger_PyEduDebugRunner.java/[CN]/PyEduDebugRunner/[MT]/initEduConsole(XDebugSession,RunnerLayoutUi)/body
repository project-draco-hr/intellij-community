{
  Project project=session.getProject();
  final Sdk sdk=PythonSdkType.findPythonSdk(ModuleManager.getInstance(project).getModules()[0]);
  final PythonDebugLanguageConsoleView view=new PythonDebugLanguageConsoleView(project,sdk);
  final ProcessHandler processHandler=session.getDebugProcess().getProcessHandler();
  view.attachToProcess(processHandler);
  view.addMessageFilter(new PythonTracebackFilter(project));
  view.addMessageFilter(new UrlFilter());
  view.addMessageFilter(new PyRunCythonExtensionsFilter(project));
  view.enableConsole(false);
  Content eduConsole=ui.createContent("EduConsole",view.getComponent(),XDebuggerBundle.message("debugger.session.tab.console.content.name"),AllIcons.Debugger.ToolConsole,view.getPreferredFocusableComponent());
  eduConsole.setCloseable(false);
  ui.addContent(eduConsole,0,PlaceInGrid.right,false);
  Presentation presentation=view.getSwitchConsoleActionPresentation();
  ToggleAction action=new ToggleAction(presentation.getText(),presentation.getDescription(),presentation.getIcon()){
    @Override public boolean isSelected(    AnActionEvent e){
      return !view.isPrimaryConsoleEnabled();
    }
    @Override public void setSelected(    AnActionEvent e,    boolean state){
      view.enableConsole(!state);
    }
  }
;
  eduConsole.setActions(new DefaultActionGroup(action),ActionPlaces.DEBUGGER_TOOLBAR,view.getPreferredFocusableComponent());
  PyDebugProcess process=(PyDebugProcess)session.getDebugProcess();
  PyDebugRunner.initDebugConsoleView(project,process,view,processHandler,session);
  patchLeftToolbar(session,ui);
}
