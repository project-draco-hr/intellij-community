{
  if (startLongIndex < 0 || endLongIndex < startLongIndex || endLongIndex >= longSize())   throw new IllegalArgumentException("ShortSize is: " + shortSize() + ", but updateRequest is: ("+ startLongIndex+ ", "+ endLongIndex+ ")");
  int startNode=startLongIndex + myTree.length;
  int endNode=endLongIndex + myTree.length;
  int commonNode=startNode >> countDigits(startNode ^ endNode);
  updateNodeCount(commonNode);
  int parent=commonNode >> 1;
  while (parent != 0) {
    myTree[parent]=getCountInNode(parent << 1) + getCountInNode((parent << 1) + 1);
    parent>>=1;
  }
}
