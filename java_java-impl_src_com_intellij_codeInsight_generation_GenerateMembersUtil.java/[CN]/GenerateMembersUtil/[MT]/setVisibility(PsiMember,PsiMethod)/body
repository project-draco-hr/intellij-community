{
  if (prototype == null)   return null;
  String visibility=CodeStyleSettingsManager.getSettings(member.getProject()).VISIBILITY;
  @PsiModifier.ModifierConstant String newVisibility;
  if (VisibilityUtil.ESCALATE_VISIBILITY.equals(visibility)) {
    PsiClass aClass=member instanceof PsiClass ? (PsiClass)member : member.getContainingClass();
    newVisibility=PsiUtil.getMaximumModifierForMember(aClass,false);
  }
 else {
    newVisibility=visibility;
  }
  VisibilityUtil.setVisibility(prototype.getModifierList(),newVisibility);
  return prototype;
}
