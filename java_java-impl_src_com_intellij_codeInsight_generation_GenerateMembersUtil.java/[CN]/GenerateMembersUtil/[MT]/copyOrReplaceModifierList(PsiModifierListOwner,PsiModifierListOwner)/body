{
  PsiModifierList sourceModifierList=sourceParam.getModifierList();
  PsiModifierList targetModifierList=targetParam.getModifierList();
  if (sourceModifierList != null && targetModifierList != null) {
    final Module module=ModuleUtilCore.findModuleForPsiElement(targetModifierList);
    final GlobalSearchScope moduleScope=module != null ? GlobalSearchScope.moduleWithDependenciesAndLibrariesScope(module) : null;
    final Project project=targetModifierList.getProject();
    final JavaPsiFacade facade=JavaPsiFacade.getInstance(project);
    JVMElementFactory factory=JVMElementFactories.requireFactory(targetParam.getLanguage(),targetParam.getProject());
    for (    PsiAnnotation annotation : AnnotationUtil.getAllAnnotations(sourceParam,false,null,false)) {
      final String qualifiedName=annotation.getQualifiedName();
      if (qualifiedName != null && (moduleScope == null || facade.findClass(qualifiedName,moduleScope) != null) && !AnnotationTargetUtil.isTypeAnnotation(annotation)) {
        targetModifierList.add(factory.createAnnotationFromText(annotation.getText(),sourceParam));
      }
    }
    for (    @PsiModifier.ModifierConstant String m : PsiModifier.MODIFIERS) {
      targetModifierList.setModifierProperty(m,sourceParam.hasModifierProperty(m));
    }
    filterAnnotations(sourceModifierList.getProject(),targetModifierList,targetModifierList.getResolveScope());
  }
}
