{
  int flags=Iconable.ICON_FLAG_VISIBILITY;
  if (isMarkReadOnly()) {
    flags|=Iconable.ICON_FLAG_READ_STATUS;
  }
  boolean changes=super.update();
  final PsiElement psiClass=getPsiClass();
  if (psiClass == null) {
    final String invalidPrefix=IdeBundle.message("node.hierarchy.invalid");
    if (!myHighlightedText.getText().startsWith(invalidPrefix)) {
      myHighlightedText.getBeginning().addText(invalidPrefix,HierarchyNodeDescriptor.getInvalidPrefixAttributes());
    }
    return true;
  }
  final Icon newRawIcon=psiClass.getIcon(flags);
  final Icon newStateIcon=psiClass instanceof PsiClass ? calculateState((PsiClass)psiClass) : AllIcons.Hierarchy.MethodDefined;
  if (changes || newRawIcon != myRawIcon || newStateIcon != myStateIcon) {
    changes=true;
    myRawIcon=newRawIcon;
    myStateIcon=newStateIcon;
    Icon newIcon=myRawIcon;
    if (myIsBase) {
      final LayeredIcon icon=new LayeredIcon(2);
      icon.setIcon(newIcon,0);
      icon.setIcon(AllIcons.Hierarchy.Base,1,-AllIcons.Hierarchy.Base.getIconWidth() / 2,0);
      newIcon=icon;
    }
    if (myStateIcon != null) {
      final RowIcon icon=new RowIcon(2);
      icon.setIcon(myStateIcon,0);
      icon.setIcon(newIcon,1);
      newIcon=icon;
    }
    setIcon(newIcon);
  }
  final CompositeAppearance oldText=myHighlightedText;
  myHighlightedText=new CompositeAppearance();
  TextAttributes classNameAttributes=null;
  if (myColor != null) {
    classNameAttributes=new TextAttributes(myColor,null,null,null,Font.PLAIN);
  }
  if (psiClass instanceof PsiClass) {
    myHighlightedText.getEnding().addText(ClassPresentationUtil.getNameForClass((PsiClass)psiClass,false),classNameAttributes);
    myHighlightedText.getEnding().addText("  (" + JavaHierarchyUtil.getPackageName((PsiClass)psiClass) + ")",HierarchyNodeDescriptor.getPackageNameAttributes());
  }
 else   if (psiClass instanceof PsiFunctionalExpression) {
    myHighlightedText.getEnding().addText(ClassPresentationUtil.getFunctionalExpressionPresentation((PsiFunctionalExpression)psiClass,false));
  }
  myName=myHighlightedText.getText();
  if (!Comparing.equal(myHighlightedText,oldText)) {
    changes=true;
  }
  return changes;
}
