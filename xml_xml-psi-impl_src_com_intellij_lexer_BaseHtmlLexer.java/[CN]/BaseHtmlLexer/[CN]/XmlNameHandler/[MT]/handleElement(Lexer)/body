{
  final CharSequence buffer;
  if (lexerOfCacheBufferSequence == lexer) {
    buffer=cachedBufferSequence;
  }
 else {
    cachedBufferSequence=lexer.getBufferSequence();
    buffer=cachedBufferSequence;
    lexerOfCacheBufferSequence=lexer;
  }
  final char firstCh=buffer.charAt(lexer.getTokenStart());
  if (seenScript && !seenTag) {
    seenContentType=false;
    if (((firstCh == 'l' || firstCh == 't') || (caseInsensitive && (firstCh == 'L' || firstCh == 'T')))) {
      @NonNls String name=TreeUtil.getTokenText(lexer);
      seenContentType=Comparing.strEqual("language",name,!caseInsensitive) || Comparing.strEqual("type",name,!caseInsensitive);
    }
    return;
  }
  if (seenStyle && !seenTag) {
    seenStylesheetType=false;
    if (firstCh == 'r' || caseInsensitive && firstCh == 'R') {
      seenStylesheetType=Comparing.strEqual(TreeUtil.getTokenText(lexer),"rel",!caseInsensitive);
    }
    return;
  }
  if (firstCh != 'o' && firstCh != 's' && (!caseInsensitive || (firstCh != 'S' && firstCh != 'O'))) {
    return;
  }
  String name=TreeUtil.getTokenText(lexer);
  if (caseInsensitive)   name=name.toLowerCase();
  final boolean style=name.equals(TOKEN_STYLE);
  final int state=getState() & BASE_STATE_MASK;
  final boolean script=name.equals(TOKEN_SCRIPT) || ((name.startsWith(TOKEN_ON) && name.indexOf(':') == -1 && !isHtmlTagState(state) && HtmlDescriptorsTable.getAttributeDescriptor(name) != null));
  if (style || script) {
    if (seenTag) {
      if (isHtmlTagState(state)) {
        seenTag=false;
      }
      return;
    }
    seenStyle=style;
    seenScript=script;
    if (!isHtmlTagState(state)) {
      seenAttribute=true;
    }
  }
}
