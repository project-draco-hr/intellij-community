{
  final PyDecoratorList decoratorList=element.getDecoratorList();
  if (decoratorList == null) {
    return Collections.emptyList();
  }
  final List<KnownDecorator> result=new ArrayList<KnownDecorator>();
  final boolean allowResolve=context.maySwitchToAST((PsiElement)element);
  for (  PyDecorator decorator : decoratorList.getDecorators()) {
    final QualifiedName qualifiedName=decorator.getQualifiedName();
    if (qualifiedName == null) {
      continue;
    }
    final KnownDecorator knownDecorator=ourByShortName.get(qualifiedName.getLastComponent());
    if (knownDecorator != null) {
      if (allowResolve) {
        PyQualifiedNameOwner resolved=as(resolveDecorator(decorator),PyQualifiedNameOwner.class);
        if (resolved instanceof PyFunction && PyNames.INIT.equals(resolved.getName())) {
          resolved=((PyFunction)resolved).getContainingClass();
        }
        if (resolved != null && resolved.getQualifiedName() != null) {
          final QualifiedName resolvedName=QualifiedName.fromDottedString(resolved.getQualifiedName());
          if (resolvedName.equals(knownDecorator.getQualifiedName())) {
            result.add(knownDecorator);
          }
        }
      }
 else {
        result.add(knownDecorator);
      }
    }
  }
  return result;
}
