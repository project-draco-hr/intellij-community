{
  String transformed=transform.transform(word);
  if (transformed == null)   return Collections.emptyList();
  List<String> rawSuggestions=new ArrayList<String>();
  restore(transformed.charAt(0),0,Integer.MAX_VALUE,bundledDictionaries,rawSuggestions);
  restore(word.charAt(0),0,Integer.MAX_VALUE,dictionaries,rawSuggestions);
  if (rawSuggestions.isEmpty())   return Collections.emptyList();
  List<Suggestion> suggestions=new ArrayList<Suggestion>(rawSuggestions.size());
  for (  String rawSuggestion : rawSuggestions) {
    int distance=EditDistance.levenshtein(transformed,rawSuggestion,true);
    suggestions.add(new Suggestion(rawSuggestion,distance));
  }
  Collections.sort(suggestions);
  int limit=Math.min(maxSuggestions,suggestions.size());
  List<String> result=new ArrayList<String>(limit);
  int bestMetrics=suggestions.get(0).getMetrics();
  for (int i=0; i < limit; i++) {
    Suggestion suggestion=suggestions.get(i);
    if (bestMetrics - suggestion.getMetrics() > quality) {
      break;
    }
    result.add(i,suggestion.getWord());
  }
  return result;
}
