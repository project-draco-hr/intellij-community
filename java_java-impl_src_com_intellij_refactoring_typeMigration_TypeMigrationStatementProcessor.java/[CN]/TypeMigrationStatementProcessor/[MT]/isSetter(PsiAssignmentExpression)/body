{
  final PsiExpression lExpression=expression.getLExpression();
  if (lExpression instanceof PsiReferenceExpression) {
    final PsiElement resolved=((PsiReferenceExpression)lExpression).resolve();
    if (resolved instanceof PsiField) {
      PsiField field=(PsiField)resolved;
      final NavigatablePsiElement containingMethod=PsiTreeUtil.getParentOfType(expression,PsiMethod.class,PsiLambdaExpression.class);
      if (containingMethod instanceof PsiMethod) {
        final PsiMethod setter=PropertyUtil.findPropertySetter(field.getContainingClass(),field.getName(),field.hasModifierProperty(PsiModifier.STATIC),false);
        if (containingMethod.isEquivalentTo(setter)) {
          return true;
        }
      }
    }
  }
  return false;
}
