{
  final Collection<LightUsage> rawOldSupers=myIndex.getHierarchyMap().get(classId);
  Set<LightUsage> oldSuperClasses=rawOldSupers == null ? null : new THashSet<LightUsage>(rawOldSupers);
  for (  LightUsage.LightClassUsage superId : superIds) {
    if (oldSuperClasses == null || !oldSuperClasses.remove(superId)) {
      myIndex.getBackwardHierarchyMap().put(superId,classId);
      myIndex.getHierarchyMap().put(classId,superId);
    }
  }
  if (oldSuperClasses != null && !oldSuperClasses.isEmpty()) {
    myIndex.getHierarchyMap().removeAll(classId,oldSuperClasses);
    for (    LightUsage anOldClass : oldSuperClasses) {
      myIndex.getBackwardHierarchyMap().put(anOldClass,classId);
    }
  }
}
