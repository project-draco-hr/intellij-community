{
  final TIntHashSet rawOldSupers=myIndex.getHierarchyMap().get(classId);
  TIntHashSet oldSuperClasses=rawOldSupers == null ? null : new TIntHashSet(rawOldSupers);
  for (  int superId : superIds) {
    if (oldSuperClasses == null || !oldSuperClasses.remove(superId)) {
      myIndex.getBackwardHierarchyMap().put(superId,classId);
      myIndex.getHierarchyMap().put(classId,superId);
    }
  }
  if (oldSuperClasses != null && !oldSuperClasses.isEmpty()) {
    myIndex.getHierarchyMap().removeAll(classId,oldSuperClasses);
    oldSuperClasses.forEach(new TIntProcedure(){
      @Override public boolean execute(      int oldSuperId){
        myIndex.getBackwardHierarchyMap().put(oldSuperId,classId);
        return true;
      }
    }
);
  }
}
