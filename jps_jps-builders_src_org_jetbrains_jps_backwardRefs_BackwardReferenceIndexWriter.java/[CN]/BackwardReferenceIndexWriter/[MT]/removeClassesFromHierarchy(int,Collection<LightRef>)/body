{
  if (definedClasses != null) {
    for (    LightRef aClass : definedClasses) {
      myIndex.getBackwardClassDefinitionMap().removeFrom(aClass,deletedFileId);
      final CompilerBackwardReferenceIndex.LightDefinition def=new CompilerBackwardReferenceIndex.LightDefinition(aClass,deletedFileId);
      final Collection<LightRef> superClasses=myIndex.getHierarchyMap().get(def);
      if (superClasses != null) {
        for (        LightRef superClass : superClasses) {
          myIndex.getBackwardHierarchyMap().removeFrom(superClass,def);
        }
      }
      myIndex.getHierarchyMap().remove(def);
    }
  }
}
