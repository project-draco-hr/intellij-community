{
  Set<VirtualFile> result=null;
  Project project=PlatformDataKeys.PROJECT_CONTEXT.getData(dataProvider);
  if (project != null && !project.isDisposed()) {
    result=addFiles(result,ProjectRootManager.getInstance(project).getContentRoots());
  }
  Module[] selectedModules=LangDataKeys.MODULE_CONTEXT_ARRAY.getData(dataProvider);
  if (selectedModules != null && selectedModules.length > 0) {
    for (    Module selectedModule : selectedModules) {
      result=addFiles(result,ModuleRootManager.getInstance(selectedModule).getContentRoots());
    }
  }
  Module selectedModule=LangDataKeys.MODULE_CONTEXT.getData(dataProvider);
  if (selectedModule != null && !selectedModule.isDisposed()) {
    result=addFiles(result,ModuleRootManager.getInstance(selectedModule).getContentRoots());
  }
  PsiElement[] psiElements=LangDataKeys.PSI_ELEMENT_ARRAY.getData(dataProvider);
  if (psiElements != null) {
    for (    PsiElement element : psiElements) {
      result=addFilesFromPsiElement(result,element);
    }
  }
  result=addFile(result,PlatformDataKeys.VIRTUAL_FILE.getData(dataProvider));
  PsiFile psiFile=LangDataKeys.PSI_FILE.getData(dataProvider);
  if (psiFile != null) {
    result=addFile(result,psiFile.getVirtualFile());
  }
  PsiElement elem=LangDataKeys.PSI_ELEMENT.getData(dataProvider);
  if (elem != null) {
    result=addFilesFromPsiElement(result,elem);
  }
  Usage[] usages=UsageView.USAGES_KEY.getData(dataProvider);
  UsageTarget[] usageTargets=UsageView.USAGE_TARGETS_KEY.getData(dataProvider);
  if (usages != null || usageTargets != null) {
    for (    VirtualFile file : UsageDataUtil.provideVirtualFileArray(usages,usageTargets)) {
      result=addFile(result,file);
    }
  }
  return result == null ? null : VfsUtilCore.toVirtualFileArray(result);
}
