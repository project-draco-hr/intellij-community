{
  if (HierarchyService.IGNORE_LOCAL_CLASSES && psiClass.getName() == null) {
    return null;
  }
  int psiFlags=translateFlags(psiClass);
  int fileId=FileBasedIndex.getFileId(psiClass.getContainingFile().getVirtualFile());
  ClassAnchor.DirectClassAnchor classAnchor=new ClassAnchor.DirectClassAnchor(fileId,psiClass);
  int shortName=myNameEnvironment.simpleName(psiClass.getName(),true);
  ClassSymbol classSymbol=mySymbols.enterClass(classAnchor,psiFlags,shortName,owner,null,null,myPsiHierachyConnector);
  if (myQueue != null) {
    myQueue.add(classSymbol);
  }
  ClassSymbol[] members=enter(psiClass.getInnerClasses(),classSymbol);
  classSymbol.setMembers(members);
  return classSymbol;
}
