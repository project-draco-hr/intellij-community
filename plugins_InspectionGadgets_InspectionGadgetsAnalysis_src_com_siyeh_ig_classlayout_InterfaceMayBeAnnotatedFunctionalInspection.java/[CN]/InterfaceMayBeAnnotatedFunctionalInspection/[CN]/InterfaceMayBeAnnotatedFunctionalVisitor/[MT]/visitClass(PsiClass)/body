{
  super.visitClass(aClass);
  if (!aClass.isInterface() || AnnotationUtil.isAnnotated(aClass,CommonClassNames.JAVA_LANG_FUNCTIONAL_INTERFACE,false)) {
    return;
  }
  if (LambdaHighlightingUtil.checkInterfaceFunctional(aClass) != null) {
    return;
  }
  MethodSignature signature=LambdaUtil.getFunction(aClass);
  if (signature == null || signature.getTypeParameters().length > 0) {
    return;
  }
  registerClassError(aClass,aClass);
}
