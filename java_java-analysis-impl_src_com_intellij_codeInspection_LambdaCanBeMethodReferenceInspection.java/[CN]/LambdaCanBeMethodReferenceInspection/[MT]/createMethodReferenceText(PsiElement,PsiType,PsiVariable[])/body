{
  if (element instanceof PsiMethodCallExpression) {
    final PsiMethodCallExpression methodCall=(PsiMethodCallExpression)element;
    JavaResolveResult result=methodCall.resolveMethodGenerics();
    final PsiMethod psiMethod=(PsiMethod)result.getElement();
    if (psiMethod == null) {
      return null;
    }
    final PsiReferenceExpression methodExpression=methodCall.getMethodExpression();
    final String qualifierByMethodCall=getQualifierTextByMethodCall(methodCall,functionalInterfaceType,parameters,psiMethod,result.getSubstitutor());
    if (qualifierByMethodCall != null) {
      return qualifierByMethodCall + "::" + ((PsiMethodCallExpression)element).getTypeArgumentList().getText()+ methodExpression.getReferenceName();
    }
  }
 else   if (element instanceof PsiNewExpression) {
    final String qualifierByNew=getQualifierTextByNewExpression((PsiNewExpression)element);
    if (qualifierByNew != null) {
      return qualifierByNew + ((PsiNewExpression)element).getTypeArgumentList().getText() + "::new";
    }
  }
 else   if (element instanceof PsiInstanceOfExpression) {
    if (isSoleParameter(parameters,((PsiInstanceOfExpression)element).getOperand())) {
      PsiTypeElement type=((PsiInstanceOfExpression)element).getCheckType();
      if (type != null) {
        return type.getText() + ".class::isInstance";
      }
    }
  }
 else   if (element instanceof PsiBinaryExpression) {
    PsiBinaryExpression nullCheck=(PsiBinaryExpression)element;
    PsiExpression operand;
    if (ExpressionUtils.isNullLiteral(nullCheck.getROperand())) {
      operand=nullCheck.getLOperand();
    }
 else     if (ExpressionUtils.isNullLiteral(nullCheck.getLOperand())) {
      operand=nullCheck.getROperand();
    }
 else     return null;
    if (isSoleParameter(parameters,operand)) {
      IElementType tokenType=nullCheck.getOperationTokenType();
      if (JavaTokenType.EQEQ.equals(tokenType)) {
        return "java.util.Objects::isNull";
      }
 else       if (JavaTokenType.NE.equals(tokenType)) {
        return "java.util.Objects::nonNull";
      }
    }
  }
 else   if (element instanceof PsiTypeCastExpression) {
    PsiTypeCastExpression castExpression=(PsiTypeCastExpression)element;
    if (isSoleParameter(parameters,castExpression.getOperand())) {
      PsiTypeElement type=castExpression.getCastType();
      if (type != null) {
        return type.getText() + ".class::cast";
      }
    }
  }
  return null;
}
