{
  final PsiMethod nonAmbiguousMethod=ensureNonAmbiguousMethod(parameters,psiMethod,true);
  if (nonAmbiguousMethod == null) {
    return null;
  }
  final PsiClass nonAmbiguousContainingClass=nonAmbiguousMethod.getContainingClass();
  if (!containingClass.equals(nonAmbiguousContainingClass)) {
    return getClassReferenceName(nonAmbiguousContainingClass);
  }
  if (nonAmbiguousContainingClass.isPhysical() && qualifierExpression instanceof PsiReferenceExpression) {
    final PsiElement resolve=((PsiReferenceExpression)qualifierExpression).resolve();
    if (resolve instanceof PsiParameter && ArrayUtil.find(parameters,resolve) > -1 && ((PsiParameter)resolve).getTypeElement() == null) {
      return getClassReferenceName(nonAmbiguousContainingClass);
    }
  }
  final PsiType qualifierExpressionType=qualifierExpression.getType();
  return qualifierExpressionType != null ? qualifierExpressionType.getCanonicalText() : getClassReferenceName(nonAmbiguousContainingClass);
}
