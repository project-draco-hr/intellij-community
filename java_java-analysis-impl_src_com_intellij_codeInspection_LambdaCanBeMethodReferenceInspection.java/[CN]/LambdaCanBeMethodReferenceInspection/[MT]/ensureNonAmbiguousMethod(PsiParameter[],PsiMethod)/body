{
  String methodName=psiMethod.getName();
  PsiClass containingClass=psiMethod.getContainingClass();
  if (containingClass == null)   return null;
  for (  PsiMethod method : containingClass.findMethodsByName(methodName,false)) {
    PsiParameter[] candidateParams=method.getParameterList().getParameters();
    if (candidateParams.length == 1) {
      if (TypeConversionUtil.areTypesConvertible(candidateParams[0].getType(),parameters[0].getType())) {
        for (        PsiMethod superMethod : psiMethod.findDeepestSuperMethods()) {
          PsiMethod validSuperMethod=ensureNonAmbiguousMethod(parameters,superMethod);
          if (validSuperMethod != null)           return validSuperMethod;
        }
        return null;
      }
    }
  }
  return psiMethod;
}
