{
  return new JavaElementVisitor(){
    @Override public void visitLambdaExpression(    PsiLambdaExpression expression){
      super.visitLambdaExpression(expression);
      if (PsiUtil.getLanguageLevel(expression).isAtLeast(LanguageLevel.JDK_1_8)) {
        final PsiElement body=expression.getBody();
        final PsiType functionalInterfaceType=expression.getFunctionalInterfaceType();
        if (functionalInterfaceType != null) {
          final PsiExpression candidate=canBeMethodReferenceProblem(body,expression.getParameterList().getParameters(),functionalInterfaceType,null);
          if (candidate != null) {
            holder.registerProblem(candidate,"Can be replaced with method reference",ProblemHighlightType.GENERIC_ERROR_OR_WARNING,new ReplaceWithMethodRefFix());
          }
        }
      }
    }
  }
;
}
