{
  super(new MyModel<T>(project,valueClass,valueTitle,showContentFilesOnly ? new ProjectContentFileFilter(project,filter) : filter));
  myProject=project;
  myModel=(MyModel)getTableModel();
  myModel.setTreeTable(this);
  new TreeTableSpeedSearch(this,new Convertor<TreePath,String>(){
    @Override public String convert(    final TreePath o){
      final DefaultMutableTreeNode node=(DefaultMutableTreeNode)o.getLastPathComponent();
      final Object userObject=node.getUserObject();
      if (userObject == null) {
        return getProjectNodeText();
      }
      if (userObject instanceof VirtualFile) {
        return ((VirtualFile)userObject).getName();
      }
      return node.toString();
    }
  }
);
  final DefaultTreeExpander treeExpander=new DefaultTreeExpander(getTree());
  CommonActionsManager.getInstance().createExpandAllAction(treeExpander,this);
  CommonActionsManager.getInstance().createCollapseAllAction(treeExpander,this);
  getTree().setShowsRootHandles(true);
  getTree().setLineStyleAngled();
  getTree().setRootVisible(showProjectNode);
  final ProjectFileIndex fileIndex=ProjectRootManager.getInstance(project).getFileIndex();
  getTree().setCellRenderer(new DefaultTreeCellRenderer(){
    @Override public Component getTreeCellRendererComponent(    JTree tree,    Object value,    boolean sel,    boolean expanded,    boolean leaf,    int row,    boolean hasFocus){
      SimpleColoredComponent c=new SimpleColoredComponent();
      if (value instanceof ProjectRootNode) {
        c.append(getProjectNodeText());
        c.setIcon(AllIcons.Nodes.Project);
      }
 else {
        FileNode fileNode=(FileNode)value;
        VirtualFile file=fileNode.getObject();
        c.append(fileNode.getParent() instanceof FileNode ? file.getName() : file.getPresentableUrl());
        Icon icon=file.isDirectory() ? fileIndex.isExcluded(file) ? AllIcons.Modules.ExcludeRoot : PlatformIcons.DIRECTORY_CLOSED_ICON : IconUtil.getIcon(file,0,null);
        c.setIcon(icon);
      }
      SpeedSearchUtil.applySpeedSearchHighlighting(AbstractFileTreeTable.this,c,false,selected);
      return c;
    }
  }
);
  getTableHeader().setReorderingAllowed(false);
  setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
  setPreferredScrollableViewportSize(new Dimension(300,getRowHeight() * 10));
  getColumnModel().getColumn(0).setPreferredWidth(280);
  getColumnModel().getColumn(1).setPreferredWidth(60);
}
