{
  myConfiguration=serverConfiguration;
  myTasksExecutor=taskExecutor;
  myLogManager=logManager;
  myRemoteName=remoteName;
  myCloudName=cloudName;
  DeploymentSource deploymentSource=task.getSource();
  if (!(deploymentSource instanceof ModuleDeploymentSource)) {
    throw new ServerRuntimeException("Module deployment source is the only supported");
  }
  ModuleDeploymentSource moduleDeploymentSource=(ModuleDeploymentSource)deploymentSource;
  Module module=moduleDeploymentSource.getModule();
  if (module == null) {
    throw new ServerRuntimeException("Module not found: " + moduleDeploymentSource.getModulePointer().getModuleName());
  }
  VirtualFile contentRoot=moduleDeploymentSource.getContentRoot();
  LOG.assertTrue(contentRoot != null,"Content root is not found");
  myContentRoot=contentRoot;
  File contentRootFile=moduleDeploymentSource.getFile();
  LOG.assertTrue(contentRootFile != null,"Content root file is not found");
  myContentRootFile=contentRootFile;
  myProject=task.getProject();
  myGitRepositoryManager=GitUtil.getRepositoryManager(myProject);
  myGit=ServiceManager.getService(Git.class);
  if (myGit == null) {
    throw new ServerRuntimeException("Can't initialize GIT");
  }
  myAgentTaskExecutor=agentTaskExecutor;
  myLoggingHandler=logManager == null ? new CloudSilentLoggingHandlerImpl() : new CloudLoggingHandlerImpl(logManager);
  myPresentableName=deploymentSource.getPresentableName();
  DC deploymentConfiguration=task.getConfiguration();
  myApplicationName=deploymentConfiguration.isDefaultDeploymentName() ? deploymentNameProvider.getDeploymentName(deploymentSource) : deploymentConfiguration.getDeploymentName();
  myDeployment=agent.createDeployment(getApplicationName(),myLoggingHandler);
}
