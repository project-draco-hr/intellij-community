{
  Map<String,String> macros=new HashMap<String,String>();
  macros.put("element.name",element == null ? null : element.getName());
  PyClass pyClass=element == null ? null : PsiTreeUtil.getParentOfType(element,PyClass.class,false);
  macros.put("class.name",pyClass == null ? null : pyClass.getName());
  if (element != null) {
    StringBuilder qName=new StringBuilder(moduleQName.toString()).append(".");
    if (element instanceof PyFunction && ((PyFunction)element).getContainingClass() != null) {
      qName.append(((PyFunction)element).getContainingClass().getName()).append(".");
    }
    qName.append(element.getName());
    macros.put("element.qname",qName.toString());
  }
 else {
    macros.put("element.qname","");
  }
  macros.put("function.name",element instanceof PyFunction ? element.getName() : "");
  macros.put("module.name",moduleQName.toString());
  macros.put("python.version",pyVersion);
  final String pattern=transformPattern(urlPattern,macros);
  if (pattern == null) {
    return rootForPattern(urlPattern);
  }
  return pattern;
}
