{
  List<String> parts=new ArrayList<String>();
  for (  String each : StringUtil.tokenize(pattern," :")) {
    parts.add(each);
  }
  List<MavenArtifactSearchResult> searchResults=ContainerUtil.newSmartList();
  MavenProjectIndicesManager m=MavenProjectIndicesManager.getInstance(project);
  int count=0;
  for (  String groupId : m.getGroupIds()) {
    if (count >= maxResult)     break;
    if (parts.size() < 1 || StringUtil.contains(groupId,parts.get(0))) {
      for (      String artifactId : m.getArtifactIds(groupId)) {
        if (parts.size() < 2 || StringUtil.contains(artifactId,parts.get(1))) {
          List<MavenArtifactInfo> versions=ContainerUtil.newSmartList();
          for (          String version : m.getVersions(groupId,artifactId)) {
            if (parts.size() < 3 || StringUtil.contains(version,parts.get(2))) {
              versions.add(new MavenArtifactInfo(groupId,artifactId,version,"jar",null));
              if (++count >= maxResult)               break;
            }
          }
          if (!versions.isEmpty()) {
            MavenArtifactSearchResult searchResult=new MavenArtifactSearchResult();
            searchResult.versions.addAll(versions);
            searchResults.add(searchResult);
          }
        }
        if (count >= maxResult)         break;
      }
    }
  }
  return searchResults;
}
