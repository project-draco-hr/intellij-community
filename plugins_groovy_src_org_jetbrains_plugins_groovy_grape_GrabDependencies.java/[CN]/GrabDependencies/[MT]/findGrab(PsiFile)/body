{
  if (!(file instanceof GroovyFile))   return null;
  return CachedValuesManager.getCachedValue(file,new CachedValueProvider<PsiAnnotation>(){
    @Nullable @Override public Result<PsiAnnotation> compute(){
      PsiClass grab=JavaPsiFacade.getInstance(file.getProject()).findClass(GRAB_ANNO,file.getResolveScope());
      final Ref<PsiAnnotation> result=Ref.create();
      if (grab != null) {
        ReferencesSearch.search(grab,new LocalSearchScope(file)).forEach(new Processor<PsiReference>(){
          @Override public boolean process(          PsiReference reference){
            if (reference instanceof GrCodeReferenceElement) {
              PsiElement parent=((GrCodeReferenceElement)reference).getParent();
              if (parent instanceof PsiAnnotation) {
                result.set((PsiAnnotation)parent);
                return false;
              }
            }
            return true;
          }
        }
);
      }
      return Result.create(result.get(),file);
    }
  }
);
}
