{
  GeneralCommandLine cmd=new GeneralCommandLine();
  final File helpersRoot=PythonHelpersLocator.getHelpersRoot();
  cmd.setExePath(myConfig.getInterpreterPath());
  if (!StringUtil.isEmptyOrSpaces(myConfig.getWorkingDirectory())) {
    cmd.setWorkDirectory(myConfig.getWorkingDirectory());
  }
  Map<String,String> envs=myConfig.getEnvs();
  if (envs == null)   envs=new HashMap<String,String>();
 else   envs=new HashMap<String,String>(envs);
  envs.put(PYTHONUNBUFFERED,"1");
  List<String> pythonPathList=new ArrayList<String>();
  pythonPathList.add(helpersRoot.getPath());
  final Module module=myConfig.getModule();
  if (module != null) {
    final VirtualFile[] contentRoots=ModuleRootManager.getInstance(module).getContentRoots();
    for (    VirtualFile contentRoot : contentRoots) {
      pythonPathList.add(FileUtil.toSystemDependentName(contentRoot.getPath()));
    }
  }
  String pythonPath=StringUtil.join(pythonPathList,File.pathSeparator);
  if (new File(myConfig.getInterpreterPath()).getName().toLowerCase().startsWith("jython")) {
    cmd.getParametersList().add("-Dpython.path=" + pythonPath);
  }
 else {
    insertToPythonPath(envs,pythonPath);
  }
  cmd.getParametersList().addParametersString(myConfig.getInterpreterOptions());
  cmd.addParameter(new File(helpersRoot,UTRUNNER_PY).getAbsolutePath());
  for (  String testSpec : getTestSpecs()) {
    cmd.addParameter(testSpec);
  }
  cmd.setEnvParams(envs);
  cmd.setPassParentEnvs(myConfig.isPassParentEnvs());
  return cmd;
}
