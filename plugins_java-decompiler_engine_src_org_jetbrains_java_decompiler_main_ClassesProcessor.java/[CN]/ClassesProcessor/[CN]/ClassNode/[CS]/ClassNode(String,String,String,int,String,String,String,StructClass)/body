{
  this.type=CLASS_LAMBDA;
  this.classStruct=classStruct;
  lambdaInformation=new LambdaInformation();
  lambdaInformation.class_name=lambda_class_name;
  lambdaInformation.method_name=lambda_method_name;
  lambdaInformation.method_descriptor=lambda_method_descriptor;
  lambdaInformation.content_class_name=content_class_name;
  lambdaInformation.content_method_name=content_method_name;
  lambdaInformation.content_method_descriptor=content_method_descriptor;
  lambdaInformation.content_method_invocation_type=content_method_invocation_type;
  lambdaInformation.content_method_key=InterpreterUtil.makeUniqueKey(lambdaInformation.content_method_name,lambdaInformation.content_method_descriptor);
  anonymousClassType=new VarType(lambda_class_name,true);
  boolean is_method_reference=(content_class_name != classStruct.qualifiedName);
  if (!is_method_reference) {
    StructMethod mt=classStruct.getMethod(content_method_name,content_method_descriptor);
    is_method_reference=!mt.isSynthetic();
  }
  lambdaInformation.is_method_reference=is_method_reference;
  lambdaInformation.is_content_method_static=(lambdaInformation.content_method_invocation_type == CodeConstants.CONSTANT_MethodHandle_REF_invokeStatic);
}
