{
  List<MethodContract> result=ContainerUtil.newArrayList();
  for (  PsiStatement statement : statements) {
    if (statement instanceof PsiBlockStatement) {
      result.addAll(visitStatements(states,((PsiBlockStatement)statement).getCodeBlock().getStatements()));
    }
 else     if (statement instanceof PsiIfStatement) {
      List<MethodContract> conditionResults=visitExpression(states,((PsiIfStatement)statement).getCondition());
      PsiStatement thenBranch=((PsiIfStatement)statement).getThenBranch();
      if (thenBranch != null) {
        result.addAll(visitStatements(antecedentsOf(filterReturning(conditionResults,TRUE_VALUE)),thenBranch));
      }
      List<ValueConstraint[]> falseStates=antecedentsOf(filterReturning(conditionResults,FALSE_VALUE));
      PsiStatement elseBranch=((PsiIfStatement)statement).getElseBranch();
      if (elseBranch != null) {
        result.addAll(visitStatements(falseStates,elseBranch));
      }
 else {
        states=falseStates;
        continue;
      }
    }
 else     if (statement instanceof PsiThrowStatement) {
      result.addAll(toContracts(states,THROW_EXCEPTION));
    }
 else     if (statement instanceof PsiReturnStatement) {
      result.addAll(visitExpression(states,((PsiReturnStatement)statement).getReturnValue()));
    }
 else     if (statement instanceof PsiAssertStatement) {
      List<MethodContract> conditionResults=visitExpression(states,((PsiAssertStatement)statement).getAssertCondition());
      result.addAll(toContracts(antecedentsOf(filterReturning(conditionResults,FALSE_VALUE)),THROW_EXCEPTION));
    }
 else     if (statement instanceof PsiDeclarationStatement && !mayHaveSideEffects((PsiDeclarationStatement)statement)) {
      continue;
    }
 else     if (statement instanceof PsiDoWhileStatement) {
      result.addAll(visitStatements(states,((PsiDoWhileStatement)statement).getBody()));
    }
    break;
  }
  return result;
}
