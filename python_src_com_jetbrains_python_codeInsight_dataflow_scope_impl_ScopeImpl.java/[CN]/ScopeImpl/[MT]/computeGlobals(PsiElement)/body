{
  final Set<String> names=new HashSet<String>();
  owner.accept(new PyRecursiveElementVisitor(){
    @Override public void visitPyGlobalStatement(    final PyGlobalStatement node){
      for (      PyTargetExpression expression : node.getGlobals()) {
        names.add(expression.getReferencedName());
      }
    }
    @Override public void visitPyNonlocalStatement(    final PyNonlocalStatement node){
      for (      PyTargetExpression expression : node.getVariables()) {
        names.add(expression.getReferencedName());
      }
    }
  }
);
  return names;
}
