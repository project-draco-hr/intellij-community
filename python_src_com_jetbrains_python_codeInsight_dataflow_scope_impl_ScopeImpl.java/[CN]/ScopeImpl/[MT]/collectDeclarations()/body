{
  final Map<String,PsiNamedElement> namedElements=new HashMap<String,PsiNamedElement>();
  final List<NameDefiner> nameDefiners=new ArrayList<NameDefiner>();
  myFlowOwner.acceptChildren(new PyRecursiveElementVisitor(){
    @Override public void visitPyTargetExpression(    PyTargetExpression node){
      final PsiElement parent=node.getParent();
      if (!(parent instanceof PyImportElement)) {
        super.visitPyTargetExpression(node);
      }
    }
    @Override public void visitPyElement(    PyElement node){
      if (node instanceof PsiNamedElement) {
        namedElements.put(node.getName(),(PsiNamedElement)node);
      }
      if (node instanceof NameDefiner && !(node instanceof PsiNamedElement)) {
        nameDefiners.add((NameDefiner)node);
      }
      if (!(node instanceof ScopeOwner)) {
        super.visitPyElement(node);
      }
    }
  }
);
  myNamedElements=namedElements;
  myNameDefiners=nameDefiners;
}
