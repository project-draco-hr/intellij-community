{
  final List<PsiClass> classes=new ArrayList<>();
  final String[] classNames=getFilteredClassNames();
  if (classNames.length > 0) {
    for (    final String className : classNames) {
      final PsiClass aClass=ApplicationManager.getApplication().runReadAction(new Computable<PsiClass>(){
        @Nullable public PsiClass compute(){
          final DumbService dumbService=DumbService.getInstance(project);
          dumbService.setAlternativeResolveEnabled(true);
          try {
            return JavaPsiFacade.getInstance(project).findClass(className.replace("$","."),GlobalSearchScope.allScope(project));
          }
  finally {
            dumbService.setAlternativeResolveEnabled(false);
          }
        }
      }
);
      if (aClass != null) {
        classes.add(aClass);
      }
    }
  }
  return classes;
}
