{
  LocalSearchScope scope=new LocalSearchScope(psiFile);
  for (int i=0; i < compiledOptions.matchContexts.size(); i++) {
    MatchContext context=compiledOptions.matchContexts.get(i);
    final Configuration configuration=compiledOptions.myConfigurations.get(i);
    matchContext.clear();
    matchContext.setMatcher(visitor);
    MatchOptions options=context.getOptions();
    matchContext.setOptions(options);
    matchContext.setPattern(context.getPattern());
    visitor.setMatchContext(matchContext);
    matchContext.setSink(new MatchConstraintsSink(new MatchResultSink(){
      public void newMatch(      MatchResult result){
        processor.process(result,configuration);
      }
      public void processFile(      PsiFile element){
      }
      public void setMatchingProcess(      MatchingProcess matchingProcess){
      }
      public void matchingFinished(){
      }
      public ProgressIndicator getProgressIndicator(){
        return null;
      }
    }
,options.getMaxMatchesCount(),options.isDistinct(),options.isCaseSensitiveMatch()));
    options.setScope(scope);
    match(psiFile);
  }
  return true;
}
