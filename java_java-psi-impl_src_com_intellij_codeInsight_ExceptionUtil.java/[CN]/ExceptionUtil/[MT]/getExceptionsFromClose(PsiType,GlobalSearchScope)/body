{
  PsiClassType.ClassResolveResult resourceType=PsiUtil.resolveGenericsClassInType(type);
  PsiClass resourceClass=resourceType.getElement();
  if (resourceClass == null)   return null;
  PsiMethod[] methods=PsiUtil.getResourceCloserMethodsForType((PsiClassType)type);
  if (methods != null) {
    List<PsiClassType> ex=null;
    for (    PsiMethod method : methods) {
      PsiClass closerClass=method.getContainingClass();
      if (closerClass != null) {
        PsiSubstitutor substitutor=TypeConversionUtil.getClassSubstitutor(closerClass,resourceClass,resourceType.getSubstitutor());
        if (substitutor != null) {
          final PsiClassType[] exceptionTypes=method.getThrowsList().getReferencedTypes();
          if (exceptionTypes.length == 0)           return Collections.emptyList();
          if (ex == null) {
            ex=collectSubstituted(substitutor,exceptionTypes,scope);
          }
 else {
            retainExceptions(ex,collectSubstituted(substitutor,exceptionTypes,scope));
          }
        }
      }
    }
    return ex;
  }
  return null;
}
