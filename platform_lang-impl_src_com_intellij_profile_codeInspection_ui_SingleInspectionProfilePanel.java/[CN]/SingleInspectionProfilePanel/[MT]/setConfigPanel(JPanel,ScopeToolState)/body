{
  configPanelAnchor.removeAll();
  final JComponent additionalConfigPanel=state.getAdditionalConfigPanel();
  if (additionalConfigPanel != null) {
    if (UIUtil.hasScrollPane(additionalConfigPanel)) {
      configPanelAnchor.add(additionalConfigPanel);
    }
 else {
      final JScrollPane pane=ScrollPaneFactory.createScrollPane(additionalConfigPanel,SideBorder.NONE);
      FocusManager.getCurrentManager().addPropertyChangeListener("focusOwner",new PropertyChangeListener(){
        @Override public void propertyChange(        PropertyChangeEvent evt){
          if (!(evt.getNewValue() instanceof JComponent)) {
            return;
          }
          final JComponent component=(JComponent)evt.getNewValue();
          if (component.isAncestorOf(pane)) {
            pane.scrollRectToVisible(component.getBounds());
          }
        }
      }
);
      configPanelAnchor.add(pane);
    }
  }
  UIUtil.setEnabled(configPanelAnchor,state.isEnabled(),true);
}
