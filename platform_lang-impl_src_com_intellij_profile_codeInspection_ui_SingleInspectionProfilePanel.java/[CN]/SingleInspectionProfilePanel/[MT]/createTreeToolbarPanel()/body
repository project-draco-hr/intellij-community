{
  final CommonActionsManager actionManager=CommonActionsManager.getInstance();
  DefaultActionGroup actions=new DefaultActionGroup();
  actions.add(actionManager.createExpandAllAction(myTreeExpander,myTreeTable));
  actions.add(actionManager.createCollapseAllAction(myTreeExpander,myTreeTable));
  actions.add(new AnAction(CommonBundle.message("button.reset.to.default"),CommonBundle.message("button.reset.to.default"),AllIcons.General.Reset){
{
      registerCustomShortcutSet(new CustomShortcutSet(KeyStroke.getKeyStroke(KeyEvent.VK_R,InputEvent.CTRL_MASK)),myTreeTable);
    }
    @Override public void update(    AnActionEvent e){
      e.getPresentation().setEnabled(myRoot.isProperSetting());
    }
    @Override public void actionPerformed(    AnActionEvent e){
      mySelectedProfile.resetToBase(myProjectProfileManager.getProject());
      postProcessModification();
    }
  }
);
  actions.add(new AnAction("Reset to Empty","Reset to empty",AllIcons.Actions.Reset_to_empty){
    @Override public void update(    AnActionEvent e){
      e.getPresentation().setEnabled(mySelectedProfile != null && mySelectedProfile.isExecutable(myProjectProfileManager.getProject()));
    }
    @Override public void actionPerformed(    AnActionEvent e){
      mySelectedProfile.resetToEmpty(e.getProject());
      postProcessModification();
    }
  }
);
  actions.add(new ToggleAction("Lock Profile","Lock profile",AllIcons.Nodes.Padlock){
    @Override public boolean isSelected(    AnActionEvent e){
      return mySelectedProfile != null && mySelectedProfile.isProfileLocked();
    }
    @Override public void setSelected(    AnActionEvent e,    boolean state){
      mySelectedProfile.lockProfile(state);
    }
  }
);
  actions.addSeparator();
  final ActionToolbar actionToolbar=ActionManager.getInstance().createActionToolbar(ActionPlaces.UNKNOWN,actions,true);
  actionToolbar.setTargetComponent(this);
  return actionToolbar;
}
