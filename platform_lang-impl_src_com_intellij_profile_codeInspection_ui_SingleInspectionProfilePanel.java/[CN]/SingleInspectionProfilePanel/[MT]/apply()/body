{
  final boolean modified=isModified();
  if (!modified) {
    return;
  }
  final ModifiableModel selectedProfile=getSelectedProfile();
  ProfileManager profileManager=myIsProjectLevel ? myProjectProfileManager : InspectionProfileManager.getInstance();
  selectedProfile.setProjectLevel(myIsProjectLevel);
  if (selectedProfile.getProfileManager() != profileManager) {
    if (selectedProfile.getProfileManager().getProfile(selectedProfile.getName(),false) == myOriginal) {
      selectedProfile.getProfileManager().deleteProfile(selectedProfile.getName());
    }
    selectedProfile.setName(myCurrentProfileName);
    copyUsedSeveritiesIfUndefined(selectedProfile,profileManager);
    selectedProfile.setProfileManager(profileManager);
  }
 else {
    if (!Comparing.equal(myCurrentProfileName,selectedProfile.getName())) {
      if (selectedProfile.getProfileManager().getProfile(selectedProfile.getName(),false) == myOriginal) {
        selectedProfile.getProfileManager().deleteProfile(selectedProfile.getName());
      }
      selectedProfile.setName(myCurrentProfileName);
      selectedProfile.getProfileManager().updateProfile(selectedProfile);
    }
  }
  final InspectionProfile parentProfile=selectedProfile.getParentProfile();
  try {
    selectedProfile.commit();
  }
 catch (  IOException e) {
    throw new ConfigurationException(e.getMessage());
  }
  setSelectedProfile(parentProfile.getModifiableModel());
  setSelectedProfileModified(false);
  myModified=false;
  myOriginal=selectedProfile.getProfileManager().getProfile(selectedProfile.getName());
}
