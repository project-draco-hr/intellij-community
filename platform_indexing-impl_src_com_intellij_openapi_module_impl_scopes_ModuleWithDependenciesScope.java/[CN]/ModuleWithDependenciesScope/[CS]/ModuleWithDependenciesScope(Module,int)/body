{
  super(module.getProject());
  myModule=module;
  myOptions=options;
  myProjectFileIndex=ProjectRootManager.getInstance(module.getProject()).getFileIndex();
  final LinkedHashSet<VirtualFile> roots=ContainerUtil.newLinkedHashSet();
  if (hasOption(CONTENT)) {
    Set<Module> modules=calcModules();
    myModules=ContainerUtil.newTroveSet(modules);
    for (    Module m : modules) {
      for (      ContentEntry entry : ModuleRootManager.getInstance(m).getContentEntries()) {
        ContainerUtil.addIfNotNull(entry.getFile(),roots);
      }
    }
  }
 else {
    OrderEnumerator en=getOrderEnumeratorForOptions();
    Collections.addAll(roots,en.roots(new NotNullFunction<OrderEntry,OrderRootType>(){
      @NotNull @Override public OrderRootType fun(      OrderEntry entry){
        if (entry instanceof ModuleOrderEntry || entry instanceof ModuleSourceOrderEntry)         return OrderRootType.SOURCES;
        return OrderRootType.CLASSES;
      }
    }
).getRoots());
  }
  int i=1;
  for (  VirtualFile root : roots) {
    myRoots.put(root,i++);
  }
}
