{
  String parameterName=parameter.getName();
  if (generatePrologueAndEpilogue)   generatePrologue(buffer);
  buffer.append("<PRE>");
  String modifiers=PsiFormatUtil.formatModifiers(parameter,PsiFormatUtilBase.JAVADOC_MODIFIERS_ONLY);
  if (!modifiers.isEmpty()) {
    buffer.append(modifiers);
    buffer.append(" ");
  }
  generateAnnotations(buffer,parameter,true,true,false);
  generateType(buffer,parameter.getType(),parameter);
  buffer.append(" ");
  buffer.append("<b>");
  buffer.append(parameterName);
  appendInitializer(buffer,parameter);
  buffer.append("</b>");
  buffer.append("</PRE>");
  final PsiElement method=PsiTreeUtil.getParentOfType(parameter,PsiMethod.class,PsiLambdaExpression.class);
  if (method instanceof PsiMethod) {
    PsiMethod psiMethod=(PsiMethod)method;
    PsiParameterList parameterList=psiMethod.getParameterList();
    if (parameter.getParent() == parameterList) {
      final PsiDocComment docComment=getDocComment(psiMethod);
      final PsiDocTag[] localTags=docComment != null ? docComment.getTags() : PsiDocTag.EMPTY_ARRAY;
      int parameterIndex=parameterList.getParameterIndex(parameter);
      final ParamInfo tagInfoProvider=findDocTag(localTags,parameterName,psiMethod,parameterLocator(parameterIndex));
      if (tagInfoProvider != null) {
        generateOneParameter(buffer,tagInfoProvider);
      }
    }
  }
  if (generatePrologueAndEpilogue)   generateEpilogue(buffer);
}
