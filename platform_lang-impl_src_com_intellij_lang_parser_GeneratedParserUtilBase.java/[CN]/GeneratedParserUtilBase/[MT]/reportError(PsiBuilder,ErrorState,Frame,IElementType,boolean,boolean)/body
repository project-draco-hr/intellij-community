{
  String expectedText=state.getExpectedText(builder);
  boolean notEmpty=StringUtil.isNotEmpty(expectedText);
  if (force || notEmpty || advance) {
    String gotText=builder.eof() ? "unexpected end of file" : notEmpty ? "got '" + builder.getTokenText() + "'" : "'" + builder.getTokenText() + "' unexpected";
    String message=expectedText + gotText;
    if (advance) {
      PsiBuilder.Marker mark=builder.mark();
      builder.advanceLexer();
      mark.error(message);
    }
 else     if (!force) {
      PsiBuilder.Marker extensionMarker=null;
      IElementType extensionTokenType=null;
      PsiBuilderImpl.ProductionMarker latestDoneMarker=elementType == null ? null : (PsiBuilderImpl.ProductionMarker)builder.getLatestDoneMarker();
      if (latestDoneMarker != null && frame.position >= latestDoneMarker.getStartIndex() && frame.position <= latestDoneMarker.getEndIndex()) {
        extensionMarker=((PsiBuilder.Marker)latestDoneMarker).precede();
        extensionTokenType=latestDoneMarker.getTokenType();
        ((PsiBuilder.Marker)latestDoneMarker).drop();
      }
      builder.error(message);
      if (extensionMarker != null)       extensionMarker.done(extensionTokenType);
    }
 else {
      builder.error(message);
    }
    builder.eof();
    frame.errorReportedAt=builder.rawTokenIndex();
    return true;
  }
  return false;
}
