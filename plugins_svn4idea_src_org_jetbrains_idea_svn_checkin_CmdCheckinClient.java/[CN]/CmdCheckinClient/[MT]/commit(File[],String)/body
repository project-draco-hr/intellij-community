{
  if (paths.length == 0)   return new SVNCommitInfo[]{SVNCommitInfo.NULL};
  final List<String> parameters=new ArrayList<String>();
  CommandUtil.put(parameters,SVNDepth.EMPTY);
  CommandUtil.put(parameters,false,"--no-unlock");
  CommandUtil.put(parameters,false,"--keep-changelists");
  CommandUtil.putChangeLists(parameters,null);
  parameters.add("-m");
  parameters.add(message);
  Arrays.sort(paths);
  CommandUtil.put(parameters,paths);
  IdeaCommitHandler handler=new IdeaCommitHandler(ProgressManager.getInstance().getProgressIndicator());
  CmdCheckinClient.CommandListener listener=new CommandListener(handler);
  listener.setBaseDirectory(CommandUtil.correctUpToExistingParent(paths[0]));
  execute(myVcs,SvnTarget.fromFile(paths[0]),SvnCommandName.ci,parameters,listener);
  listener.throwExceptionIfOccurred();
  long revision=validateRevisionNumber(listener.getCommittedRevision());
  return new SVNCommitInfo[]{new SVNCommitInfo(revision,null,null,null)};
}
