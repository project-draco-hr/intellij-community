{
  final SVNInfo info1=myVcs.getInfo(myTarget1.getFile(),SVNRevision.HEAD);
  if (info1 == null) {
    SVNErrorMessage err=SVNErrorMessage.create(SVNErrorCode.ENTRY_NOT_FOUND,"''{0}'' is not under version control",myTarget1);
    SVNErrorManager.error(err,SVNLogType.WC);
  }
 else   if (info1.getURL() == null) {
    SVNErrorMessage err=SVNErrorMessage.create(SVNErrorCode.ENTRY_MISSING_URL,"''{0}'' has no URL",myTarget1);
    SVNErrorManager.error(err,SVNLogType.WC);
  }
  final SVNReporter17 reporter17=new SVNReporter17(myTarget1.getFile(),new SVNWCContext(myVcs.getSvnKitManager().getSvnOptions(),new ISVNEventHandler(){
    @Override public void handleEvent(    SVNEvent event,    double progress) throws SVNException {
    }
    @Override public void checkCancelled() throws SVNCancelException {
    }
  }
),false,true,SVNDepth.INFINITY,false,false,true,false,SVNDebugLog.getDefaultLog());
  SVNRepository repository=null;
  SVNRepository repository2=null;
  try {
    repository=myVcs.getSvnKitManager().createRepository(info1.getURL());
    long rev=repository.getLatestRevision();
    repository2=myVcs.getSvnKitManager().createRepository(myTarget2.getURL());
    SvnDiffEditor diffEditor=new SvnDiffEditor(myTarget1.getFile(),repository2,rev,true);
    repository.diff(myTarget2.getURL(),rev,rev,null,true,SVNDepth.INFINITY,false,reporter17,SVNCancellableEditor.newInstance(diffEditor,new SvnProgressCanceller(),null));
    return diffEditor.getChangesMap().values();
  }
  finally {
    if (repository != null) {
      repository.closeSession();
    }
    if (repository2 != null) {
      repository2.closeSession();
    }
  }
}
