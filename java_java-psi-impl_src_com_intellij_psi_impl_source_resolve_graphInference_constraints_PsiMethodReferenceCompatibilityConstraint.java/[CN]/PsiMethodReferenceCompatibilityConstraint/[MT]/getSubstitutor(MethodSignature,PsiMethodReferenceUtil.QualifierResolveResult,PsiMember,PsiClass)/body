{
  final PsiClass qContainingClass=qualifierResolveResult.getContainingClass();
  PsiSubstitutor psiSubstitutor=qualifierResolveResult.getSubstitutor();
  if (qContainingClass != null && containingClass != null) {
    if (PsiUtil.isRawSubstitutor(qContainingClass,psiSubstitutor)) {
      if (member instanceof PsiMethod && PsiMethodReferenceUtil.isSecondSearchPossible(signature.getParameterTypes(),qualifierResolveResult,myExpression)) {
        final PsiType pType=signature.getParameterTypes()[0];
        PsiClassType.ClassResolveResult resolveResult=PsiUtil.resolveGenericsClassInType(PsiImplUtil.normalizeWildcardTypeByPosition(pType,myExpression));
        PsiClass paramClass=resolveResult.getElement();
        LOG.assertTrue(paramClass != null);
        psiSubstitutor=TypeConversionUtil.getClassSubstitutor(qContainingClass,paramClass,resolveResult.getSubstitutor());
        LOG.assertTrue(psiSubstitutor != null);
      }
 else {
        psiSubstitutor=PsiSubstitutor.EMPTY;
      }
    }
    if (qContainingClass.isInheritor(containingClass,true)) {
      psiSubstitutor=TypeConversionUtil.getClassSubstitutor(containingClass,qContainingClass,psiSubstitutor);
      LOG.assertTrue(psiSubstitutor != null);
    }
  }
  return psiSubstitutor;
}
