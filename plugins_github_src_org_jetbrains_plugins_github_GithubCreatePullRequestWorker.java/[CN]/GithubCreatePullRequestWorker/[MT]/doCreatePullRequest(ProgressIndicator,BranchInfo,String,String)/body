{
  final ForkInfo fork=branch.getForkInfo();
  final String head=myPath.getUser() + ":" + myCurrentBranch;
  final String base=branch.getRemoteName();
  try {
    return GithubUtil.runTask(myProject,myAuthHolder,indicator,new ThrowableConvertor<GithubConnection,GithubPullRequest,IOException>(){
      @NotNull @Override public GithubPullRequest convert(      @NotNull GithubConnection connection) throws IOException {
        return GithubApiUtil.createPullRequest(connection,fork.getPath().getUser(),fork.getPath().getRepository(),title,description,head,base);
      }
    }
);
  }
 catch (  IOException e) {
    GithubNotifications.showError(myProject,CANNOT_CREATE_PULL_REQUEST,e);
    return null;
  }
}
