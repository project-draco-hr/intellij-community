{
  createRepositoryFile("jmock/jmock/1.0/jmock-1.0.jar");
  VirtualFile m1=createModulePom("m1","<groupId>test</groupId>" + "<artifactId>m1</artifactId>" + "<version>1</version>"+ "<dependencies>"+ "  <dependency>"+ "    <groupId>test</groupId>"+ "    <artifactId>m2</artifactId>"+ "    <version>1</version>"+ "    <scope>" + scope + "</scope>"+ "  </dependency>"+ "</dependencies>");
  VirtualFile m2=createModulePom("m2","<groupId>test</groupId>" + "<artifactId>m2</artifactId>" + "<version>1</version>"+ "<dependencies>"+ "  <dependency>"+ "    <groupId>test</groupId>"+ "    <artifactId>m3</artifactId>"+ "    <version>1</version>"+ "    <scope>" + scope + "</scope>"+ "  </dependency>"+ "  <dependency>"+ "    <groupId>jmock</groupId>"+ "    <artifactId>jmock</artifactId>"+ "    <version>1.0</version>"+ "    <scope>test</scope>"+ "  </dependency>"+ "  <dependency>"+ "    <groupId>test</groupId>"+ "    <artifactId>m5</artifactId>"+ "    <version>1</version>"+ "    <scope>"+ scope+ "</scope>"+ "  </dependency>"+ "</dependencies>");
  VirtualFile m3=createModulePom("m3","<groupId>test</groupId>" + "<artifactId>m3</artifactId>" + "<version>1</version>"+ "<dependencies>"+ "  <dependency>"+ "    <groupId>jmock</groupId>"+ "    <artifactId>jmock</artifactId>"+ "    <version>1.0</version>"+ "    <scope>test</scope>"+ "  </dependency>"+ "</dependencies>");
  VirtualFile m4=createModulePom("m4","<groupId>test</groupId>" + "<artifactId>m4</artifactId>" + "<version>1</version>"+ "<dependencies>"+ "  <dependency>"+ "    <groupId>test</groupId>"+ "    <artifactId>m3</artifactId>"+ "    <version>1</version>"+ "    <scope>" + scope + "</scope>"+ "  </dependency>"+ "</dependencies>");
  new WriteCommandAction.Simple(myProject){
    @Override protected void run() throws Throwable {
      createProjectSubDirs("m5/src/main/java","m5/src/test/java","m6/src/main/java","m6/src/test/java");
    }
  }
.execute();
  VirtualFile m5=createModulePom("m5","<groupId>test</groupId>" + "<artifactId>m5</artifactId>" + "<version>1</version>"+ "<dependencies>"+ "  <dependency>"+ "    <groupId>test</groupId>"+ "    <artifactId>m6</artifactId>"+ "    <version>1</version>"+ "    <scope>compile</scope>"+ "  </dependency>"+ "</dependencies>");
  VirtualFile m6=createModulePom("m6","<groupId>test</groupId>" + "<artifactId>m6</artifactId>" + "<version>1</version>");
  importProjects(m1,m2,m3,m4,m5,m6);
  assertModules("m1","m2","m3","m4","m5","m6");
  createOutputDirectories();
  return Arrays.asList(getModule("m1"),getModule("m2"),getModule("m3"),getModule("m4"),getModule("m5"),getModule("m6"));
}
