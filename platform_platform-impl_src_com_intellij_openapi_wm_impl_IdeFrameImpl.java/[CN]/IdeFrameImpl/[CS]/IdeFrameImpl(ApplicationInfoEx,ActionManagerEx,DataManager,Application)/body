{
  super(applicationInfoEx.getFullApplicationName());
  myRootPane=createRootPane(actionManager,UISettings.getInstance(),dataManager,application);
  setRootPane(myRootPane);
  setBackground(UIUtil.getPanelBackground());
  AppUIUtil.updateWindowIcon(this);
  final Dimension size=ScreenUtil.getMainScreenBounds().getSize();
  size.width=Math.min(1400,size.width - 20);
  size.height=Math.min(1000,size.height - 40);
  setSize(size);
  setLocationRelativeTo(null);
  LayoutFocusTraversalPolicyExt layoutFocusTraversalPolicy=new LayoutFocusTraversalPolicyExt();
  setFocusTraversalPolicy(layoutFocusTraversalPolicy);
  setupCloseAction();
  MnemonicHelper.init(this);
  myBalloonLayout=new BalloonLayoutImpl(myRootPane,new Insets(8,8,8,8));
  if (SystemInfo.isMac)   setIconImage(null);
  MouseGestureManager.getInstance().add(this);
  myFrameDecorator=IdeFrameDecorator.decorate(this);
  addWindowStateListener(new WindowAdapter(){
    @Override public void windowStateChanged(    WindowEvent e){
      updateBorder();
    }
  }
);
  if (SystemInfo.isWindows) {
    myWindowsBorderUpdater=new PropertyChangeListener(){
      @Override public void propertyChange(      @NotNull PropertyChangeEvent evt){
        updateBorder();
      }
    }
;
    Toolkit.getDefaultToolkit().addPropertyChangeListener("win.xpstyle.themeActive",myWindowsBorderUpdater);
    if (!SystemInfo.isJavaVersionAtLeast("1.8")) {
      final Ref<Dimension> myDimensionRef=new Ref<Dimension>(new Dimension());
      final Alarm alarm=new Alarm(Alarm.ThreadToUse.SWING_THREAD);
      final Runnable runnable=new Runnable(){
        @Override public void run(){
          if (isDisplayable() && !getSize().equals(myDimensionRef.get())) {
            Rectangle bounds=getBounds();
            bounds.width--;
            setBounds(bounds);
            bounds.width++;
            setBounds(bounds);
            myDimensionRef.set(getSize());
          }
          alarm.addRequest(this,50);
        }
      }
;
      alarm.addRequest(runnable,50);
    }
  }
  IdeMenuBar.installAppMenuIfNeeded(this);
}
