{
  PsiAnnotationMemberValue[] initializers;
  if (options instanceof PsiLiteral) {
    initializers=new PsiAnnotationMemberValue[]{options};
  }
 else   if ((options instanceof PsiArrayInitializerMemberValue)) {
    initializers=((PsiArrayInitializerMemberValue)options).getInitializers();
  }
 else {
    return Collections.emptyList();
  }
  return Collections.singletonList(ContainerUtil.map(initializers,new Function<PsiAnnotationMemberValue,PsiType>(){
    @Override public PsiType fun(    PsiAnnotationMemberValue memberValue){
      if (memberValue instanceof PsiLiteral) {
        Object value=((PsiLiteral)memberValue).getValue();
        if (value instanceof String) {
          try {
            PsiType original=JavaPsiFacade.getElementFactory(memberValue.getProject()).createTypeFromText((String)value,method);
            return substitutor.substitute(original);
          }
 catch (          IncorrectOperationException e) {
          }
        }
      }
      return PsiType.NULL;
    }
  }
,new PsiType[initializers.length]));
}
