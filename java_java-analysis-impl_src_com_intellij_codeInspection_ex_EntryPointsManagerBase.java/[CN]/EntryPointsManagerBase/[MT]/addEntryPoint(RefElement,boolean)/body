{
  if (!newEntryPoint.isValid())   return;
  if (newEntryPoint instanceof RefClass) {
    RefClass refClass=(RefClass)newEntryPoint;
    if (refClass.isAnonymous()) {
      return;
    }
    List<RefMethod> refConstructors=refClass.getConstructors();
    if (refConstructors.size() == 1) {
      addEntryPoint(refConstructors.get(0),isPersistent);
    }
 else     if (refConstructors.size() > 1) {
      for (int i=0; i < refConstructors.size(); i++) {
        addEntryPoint(refConstructors.get(i),isPersistent);
      }
    }
  }
  if (!isPersistent) {
    myTemporaryEntryPoints.add(newEntryPoint);
    ((RefElementImpl)newEntryPoint).setEntry(true);
  }
 else {
    if (myPersistentEntryPoints.get(newEntryPoint.getExternalName()) == null) {
      final SmartRefElementPointerImpl entry=new SmartRefElementPointerImpl(newEntryPoint,true);
      myPersistentEntryPoints.put(entry.getFQName(),entry);
      ((RefElementImpl)newEntryPoint).setEntry(true);
      ((RefElementImpl)newEntryPoint).setPermanentEntry(true);
      if (entry.isPersistent()) {
        final EntryPointsManager entryPointsManager=getInstance(newEntryPoint.getElement().getProject());
        if (this != entryPointsManager) {
          entryPointsManager.addEntryPoint(newEntryPoint,true);
        }
      }
    }
  }
}
