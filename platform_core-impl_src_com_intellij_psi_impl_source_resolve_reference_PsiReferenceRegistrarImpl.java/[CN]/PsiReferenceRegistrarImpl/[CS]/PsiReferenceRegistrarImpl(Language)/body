{
  myBindingCache=new ConcurrentFactoryMap<Class,ProviderBinding<PsiReferenceProvider>[]>(){
    @Nullable @Override protected ProviderBinding<PsiReferenceProvider>[] create(    Class key){
      List<ProviderBinding<PsiReferenceProvider>> result=ContainerUtil.newSmartList();
      for (      Class<?> bindingClass : myBindingsMap.keySet()) {
        if (bindingClass.isAssignableFrom(key)) {
          result.add(myBindingsMap.get(bindingClass));
        }
      }
      for (      Class<?> bindingClass : myNamedBindingsMap.keySet()) {
        if (bindingClass.isAssignableFrom(key)) {
          result.add(myNamedBindingsMap.get(bindingClass));
        }
      }
      if (language != Language.ANY) {
        final PsiReferenceRegistrar anyRegistrar=ReferenceProvidersRegistry.getInstance().getRegistrar(Language.ANY);
        Collections.addAll(result,((PsiReferenceRegistrarImpl)anyRegistrar).myBindingCache.get(key));
      }
      return result.toArray(new ProviderBinding[result.size()]);
    }
  }
;
}
