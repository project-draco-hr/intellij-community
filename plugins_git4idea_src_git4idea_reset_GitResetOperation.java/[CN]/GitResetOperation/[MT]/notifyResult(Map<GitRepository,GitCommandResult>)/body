{
  Map<GitRepository,GitCommandResult> successes=ContainerUtil.newHashMap();
  Map<GitRepository,GitCommandResult> errors=ContainerUtil.newHashMap();
  for (  Map.Entry<GitRepository,GitCommandResult> entry : results.entrySet()) {
    GitCommandResult result=entry.getValue();
    GitRepository repository=entry.getKey();
    if (result.success()) {
      successes.put(repository,result);
    }
 else {
      errors.put(repository,result);
    }
  }
  if (errors.isEmpty()) {
    myNotifier.notifySuccess("","Reset successful");
  }
 else   if (!successes.isEmpty()) {
    myNotifier.notifyImportantWarning("Reset partially failed","Reset was successful for " + joinRepos(successes.keySet()) + "<br/>but failed for "+ joinRepos(errors.keySet())+ ": <br/>"+ formErrorReport(errors));
  }
 else {
    myNotifier.notifyError("Reset Failed",formErrorReport(errors));
  }
}
