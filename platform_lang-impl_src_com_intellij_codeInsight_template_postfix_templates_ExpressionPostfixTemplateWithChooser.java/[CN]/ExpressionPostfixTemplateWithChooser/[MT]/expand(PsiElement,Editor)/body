{
  List<PsiElement> expressions=getExpressions(context,editor.getDocument(),editor.getCaretModel().getOffset());
  if (expressions.isEmpty()) {
    PostfixTemplatesUtils.showErrorHint(context.getProject(),editor);
  }
 else   if (expressions.size() == 1) {
    doIt(editor,expressions.get(0));
  }
 else {
    if (ApplicationManager.getApplication().isUnitTestMode()) {
      doIt(editor,expressions.get(expressions.size() - 1));
      return;
    }
    IntroduceTargetChooser.showChooser(editor,expressions,new Pass<PsiElement>(){
      public void pass(      @NotNull final PsiElement e){
        ApplicationManager.getApplication().runWriteAction(new Runnable(){
          @Override public void run(){
            CommandProcessor.getInstance().executeCommand(e.getProject(),new Runnable(){
              public void run(){
                doIt(editor,e);
              }
            }
,"Expand postfix template",PostfixLiveTemplate.POSTFIX_TEMPLATE_ID);
          }
        }
);
      }
    }
,myInfo.getRenderer(),"Expressions",0,ScopeHighlighter.NATURAL_RANGER);
  }
}
