{
  myPatchRequest=patchRequest;
  myProject=context.getProject();
  myResultDocument=resultDocument != null ? resultDocument : new DocumentImpl("");
  VirtualFile file=patchRequest.getHighlightFile();
  DiffContentFactory contentFactory=DiffContentFactory.getInstance();
  DocumentContent localContent=contentFactory.create(myPatchRequest.getLocalContent(),file);
  DocumentContent mergedContent=contentFactory.create(myProject,myResultDocument,file);
  SimpleDiffRequest diffRequest=new SimpleDiffRequest(myPatchRequest.getTitle(),localContent,mergedContent,myPatchRequest.getLocalTitle(),myPatchRequest.getResultTitle());
  if (resultDocument == null)   diffRequest.putUserData(DiffUserDataKeys.FORCE_READ_ONLY,true);
  myViewer=new MySimpleDiffViewer(context,diffRequest);
  myResultEditor=myViewer.getEditor2();
  myPatchEditor=DiffUtil.createEditor(new DocumentImpl("",true),myProject,true,true);
  DiffUtil.setEditorHighlighter(myProject,myPatchEditor,mergedContent);
  DiffUtil.disableBlitting(myPatchEditor);
  myPatchEditor.getGutterComponentEx().setForceShowRightFreePaintersArea(true);
  JPanel patchPanel=new JPanel(new BorderLayout(0,DiffUtil.TITLE_GAP));
  patchPanel.add(myPatchEditor.getComponent(),BorderLayout.CENTER);
  patchPanel.add(myViewer.getPatchTitle(),BorderLayout.NORTH);
  myPatchSplitter=new DiffSplitter(2f / 3);
  myPatchSplitter.setFirstComponent(myViewer.getComponent());
  myPatchSplitter.setSecondComponent(patchPanel);
  myPatchSplitter.setHonorComponentsMinimumSize(false);
  myStatusPanel=new MyStatusPanel();
}
