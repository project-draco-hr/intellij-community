{
  if (myLength == 0) {
    return createLineSet(replacement,!wholeTextReplaced);
  }
  LineSet result=isSingleLineChange(prevText,start,end,replacement) ? updateInsideOneLine(findLineIndex(start),replacement.length() - (end - start)) : genericUpdate(prevText,start,end,replacement);
  if (doTest) {
    MergingCharSequence newText=new MergingCharSequence(new MergingCharSequence(prevText.subSequence(0,start),replacement),prevText.subSequence(end,prevText.length()));
    result.checkEquals(createLineSet(newText));
  }
  return wholeTextReplaced ? result.clearModificationFlags() : result;
}
