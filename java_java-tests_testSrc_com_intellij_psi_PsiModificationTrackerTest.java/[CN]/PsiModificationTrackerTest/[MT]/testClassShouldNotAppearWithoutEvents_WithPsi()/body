{
  final VirtualFile file=myFixture.getTempDirFixture().createFile("Foo.java","");
  final Document document=FileDocumentManager.getInstance().getDocument(file);
  assertNotNull(document);
  new WriteCommandAction.Simple(getProject()){
    @Override protected void run() throws Throwable {
      assertNull(JavaPsiFacade.getInstance(getProject()).findClass("Foo",GlobalSearchScope.allScope(getProject())));
      PsiManager psiManager=PsiManager.getInstance(getProject());
      PsiModificationTracker tracker=psiManager.getModificationTracker();
      long count1=tracker.getJavaStructureModificationCount();
      PsiJavaFile psiFile=(PsiJavaFile)psiManager.findFile(file);
      document.insertString(0,"class Foo {}");
      assertEquals(count1,tracker.getJavaStructureModificationCount());
      assertNull(JavaPsiFacade.getInstance(getProject()).findClass("Foo",GlobalSearchScope.allScope(getProject())));
      assertSize(0,psiFile.getClasses());
      assertEquals("",psiManager.findFile(file).getText());
      PlatformTestUtil.tryGcSoftlyReachableObjects();
      PsiDocumentManager.getInstance(getProject()).commitAllDocuments();
      assertFalse(count1 == tracker.getJavaStructureModificationCount());
      assertNotNull(JavaPsiFacade.getInstance(getProject()).findClass("Foo",GlobalSearchScope.allScope(getProject())));
      assertEquals("class Foo {}",psiManager.findFile(file).getText());
      assertEquals("class Foo {}",psiManager.findFile(file).getNode().getText());
      assertSize(1,psiFile.getClasses());
    }
  }
.execute();
}
