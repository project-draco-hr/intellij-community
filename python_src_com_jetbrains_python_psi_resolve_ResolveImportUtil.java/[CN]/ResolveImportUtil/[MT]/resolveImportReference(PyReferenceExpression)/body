{
  if (importRef == null)   return Collections.emptyList();
  if (!importRef.isValid())   return Collections.emptyList();
  final String referencedName=importRef.getReferencedName();
  if (referencedName == null)   return Collections.emptyList();
  final PsiFile file=importRef.getContainingFile();
  if (file == null || !file.isValid())   return Collections.emptyList();
  final PsiElement parent=PsiTreeUtil.getParentOfType(importRef,PyImportElement.class,PyFromImportStatement.class);
  if (parent instanceof PyImportElement) {
    PyImportElement import_element=(PyImportElement)parent;
    return multiResolveImportElement(import_element,importRef.asQualifiedName());
  }
 else   if (parent instanceof PyFromImportStatement) {
    PyFromImportStatement from_import_statement=(PyFromImportStatement)parent;
    return resolveFromImportStatementSource(from_import_statement,importRef.asQualifiedName());
  }
  return Collections.emptyList();
}
