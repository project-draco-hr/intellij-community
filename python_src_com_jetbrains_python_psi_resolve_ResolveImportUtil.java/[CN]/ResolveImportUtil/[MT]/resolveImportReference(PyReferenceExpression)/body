{
  if (importRef == null)   return null;
  if (!importRef.isValid())   return null;
  final String referencedName=importRef.getReferencedName();
  if (referencedName == null)   return null;
  final PsiFile file=importRef.getContainingFile();
  if (file == null || !file.isValid())   return null;
  PyReferenceExpression module_reference=null;
  boolean absolute_import_enabled=isAbsoluteImportEnabledFor(importRef);
  final PsiElement parent=PsiTreeUtil.getParentOfType(importRef,PyImportElement.class,PyFromImportStatement.class);
  if (parent instanceof PyImportElement) {
    PyImportElement import_element=(PyImportElement)parent;
    final PsiElement grandparent=import_element.getParent();
    if (grandparent instanceof PyFromImportStatement) {
      PsiElement imported_from_module;
      PyFromImportStatement from_import_statement=(PyFromImportStatement)grandparent;
      module_reference=from_import_statement.getImportSource();
      final int relative_level=from_import_statement.getRelativeLevel();
      if (relative_level > 0 && module_reference == null) {
        return resolveChild(stepBackFrom(file,relative_level),referencedName,file,false);
      }
      if (module_reference != null) {
        imported_from_module=resolveModule(getQualifiedName(module_reference),file,absolute_import_enabled,relative_level);
        PsiElement result=resolveChild(imported_from_module,referencedName,file,false);
        if (result != null)         return result;
      }
    }
 else     if (grandparent instanceof PyImportStatement) {
      PsiElement result=resolveModule(getQualifiedName(importRef),file,absolute_import_enabled,0);
      if (result != null)       return result;
    }
  }
 else   if (parent instanceof PyFromImportStatement) {
    PyFromImportStatement from_import_statement=(PyFromImportStatement)parent;
    PsiElement module=resolveModule(getQualifiedName(importRef),file,absolute_import_enabled,from_import_statement.getRelativeLevel());
    if (module != null)     return module;
  }
  if (module_reference != null) {
    return resolveForeignImport(importRef,importRef.getText(),resolveModule(getQualifiedName(module_reference),file,false,0));
  }
  return null;
}
