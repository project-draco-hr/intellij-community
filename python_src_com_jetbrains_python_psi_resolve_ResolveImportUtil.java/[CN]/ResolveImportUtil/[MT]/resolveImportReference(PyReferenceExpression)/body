{
  if (importRef == null)   return Collections.emptyList();
  if (!importRef.isValid())   return Collections.emptyList();
  final String referencedName=importRef.getReferencedName();
  if (referencedName == null)   return Collections.emptyList();
  final PsiFile file=importRef.getContainingFile();
  if (file == null || !file.isValid())   return Collections.emptyList();
  final PyElement parent=PsiTreeUtil.getParentOfType(importRef,PyImportElement.class,PyFromImportStatement.class);
  final PyQualifiedName qname=importRef.asQualifiedName();
  if (parent instanceof PyImportElement) {
    PyImportElement import_element=(PyImportElement)parent;
    return multiResolveImportElement(import_element,qname);
  }
 else   if (parent instanceof PyFromImportStatement) {
    return resolveFromOrForeignImport((PyFromImportStatement)parent,qname);
  }
  return Collections.emptyList();
}
