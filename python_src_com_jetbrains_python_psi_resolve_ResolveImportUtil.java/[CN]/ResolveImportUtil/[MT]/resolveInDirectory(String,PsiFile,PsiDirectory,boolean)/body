{
  if (referencedName == null)   return null;
  final PsiFile file=dir.findFile(referencedName + PyNames.DOT_PY);
  if (file != null && FileUtil.getNameWithoutExtension(file.getName()).equals(referencedName)) {
    return file;
  }
  String binaryExt=SystemInfo.isWindows ? ".pyd" : ".so";
  final PsiFile binaryModule=dir.findFile(referencedName + binaryExt);
  if (binaryModule != null && FileUtil.getNameWithoutExtension(binaryModule.getName()).equals(referencedName)) {
    String qName=findShortestImportableName(binaryModule,binaryModule.getVirtualFile());
    if (qName != null) {
      VirtualFile root=findSkeletonsRoot(containingFile);
      if (root != null) {
        PsiElement skeleton=resolveInRoot(root,PyQualifiedName.fromDottedString(qName),dir.getManager(),containingFile);
        if (skeleton instanceof PyFile) {
          return skeleton;
        }
      }
    }
  }
  final PsiDirectory subdir=dir.findSubdirectory(referencedName);
  if (subdir != null && subdir.findFile(PyNames.INIT_DOT_PY) != null) {
    return subdir;
  }
 else   if (!isFileOnly) {
    final PsiFile initPy=dir.findFile(PyNames.INIT_DOT_PY);
    if (initPy == containingFile)     return null;
    if (initPy instanceof PyFile) {
      return ((PyFile)initPy).getElementNamed(referencedName);
    }
  }
  return null;
}
