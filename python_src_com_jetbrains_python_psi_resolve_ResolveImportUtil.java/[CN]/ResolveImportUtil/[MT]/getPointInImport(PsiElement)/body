{
  PsiElement parent=PsiTreeUtil.getNonStrictParentOfType(element,PyImportElement.class,PyFromImportStatement.class);
  if (parent instanceof PyFromImportStatement) {
    return new PointInImport((PyFromImportStatement)parent,null,AS_MODULE);
  }
  if (parent instanceof PyImportElement) {
    PsiElement statement=parent.getParent();
    if (statement instanceof PyImportStatement) {
      return new PointInImport(null,(PyImportStatement)statement,AS_MODULE);
    }
 else     if (statement instanceof PyFromImportStatement) {
      PyFromImportStatement importer=(PyFromImportStatement)statement;
      if (importer.getImportSource() == null && importer.getRelativeLevel() > 0) {
        return new PointInImport(importer,null,AS_MODULE);
      }
 else {
        return new PointInImport(importer,null,AS_NAME);
      }
    }
  }
  return NOT_IN_IMPORT;
}
