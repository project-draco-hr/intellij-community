{
  mySdkList=new JBList();
  mySdkList.setCellRenderer(new PySdkListCellRenderer("",myModificators));
  mySdkList.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
  ToolbarDecorator decorator=ToolbarDecorator.createDecorator(mySdkList).disableUpDownActions().setAddAction(new AnActionButtonRunnable(){
    @Override public void run(    AnActionButton button){
      addSdk(button);
      updateOkButton();
    }
  }
).setEditAction(new AnActionButtonRunnable(){
    @Override public void run(    AnActionButton button){
      editSdk();
      updateOkButton();
    }
  }
).setRemoveAction(new AnActionButtonRunnable(){
    @Override public void run(    AnActionButton button){
      removeSdk();
      updateOkButton();
    }
  }
).addExtraAction(new CreateVirtualEnvButton()).addExtraAction(new ToggleVirtualEnvFilterButton()).addExtraAction(new ShowPathButton());
  decorator.setPreferredSize(new Dimension(600,500));
  myPanel=decorator.createPanel();
  refreshSdkList();
  addListeners();
  return myPanel;
}
