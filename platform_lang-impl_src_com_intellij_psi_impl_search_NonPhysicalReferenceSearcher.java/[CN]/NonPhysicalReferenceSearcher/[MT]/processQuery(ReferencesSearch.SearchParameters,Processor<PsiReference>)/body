{
  if (ApplicationManager.getApplication().isUnitTestMode())   return;
  final SearchScope scope=queryParameters.getScopeDeterminedByUser();
  final PsiElement element=queryParameters.getElementToSearch();
  final PsiFile containingFile=element.getContainingFile();
  if (isPhysicalAndNonScratch(containingFile) && !(scope instanceof GlobalSearchScope))   return;
  final LocalSearchScope currentScope;
  if (scope instanceof LocalSearchScope) {
    if (queryParameters.isIgnoreAccessScope())     return;
    currentScope=(LocalSearchScope)scope;
  }
 else {
    currentScope=null;
  }
  Project project=element.getProject();
  if (!project.isInitialized())   return;
  PsiManager psiManager=PsiManager.getInstance(project);
  for (  VirtualFile virtualFile : FileEditorManager.getInstance(project).getOpenFiles()) {
    if (virtualFile.getFileType().isBinary())     continue;
    PsiFile file=psiManager.findFile(virtualFile);
    if (isPhysicalAndNonScratch(file))     continue;
    LocalSearchScope newScope=new LocalSearchScope(file);
    LocalSearchScope searchScope=currentScope == null ? newScope : newScope.intersectWith(currentScope);
    ReferencesSearch.searchOptimized(element,searchScope,true,queryParameters.getOptimizer(),consumer);
  }
}
