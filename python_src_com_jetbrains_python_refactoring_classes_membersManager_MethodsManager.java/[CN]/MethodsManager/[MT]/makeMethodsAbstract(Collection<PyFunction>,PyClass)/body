{
  final Set<PsiFile> filesToCheckImport=new HashSet<>();
  final Set<PyClass> classesToAddMetaAbc=new HashSet<>();
  for (  final PyFunction function : currentFunctions) {
    for (    final PyClass destClass : to) {
      final PyFunctionBuilder functionBuilder=PyFunctionBuilder.copySignature(function,DECORATORS_MAY_BE_COPIED_TO_ABSTRACT);
      functionBuilder.decorate(PyNames.ABSTRACTMETHOD);
      final LanguageLevel level=LanguageLevel.forElement(destClass);
      PyClassRefactoringUtil.addMethods(destClass,false,functionBuilder.buildFunction(destClass.getProject(),level));
      classesToAddMetaAbc.add(destClass);
    }
  }
  for (  final PyClass aClass : classesToAddMetaAbc) {
    if (addMetaAbcIfNeeded(aClass)) {
      filesToCheckImport.add(aClass.getContainingFile());
    }
  }
  for (  final PsiFile file : filesToCheckImport) {
    addImportFromAbc(file,PyNames.ABSTRACTMETHOD);
    addImportFromAbc(file,PyNames.ABC_META_CLASS);
    PyClassRefactoringUtil.optimizeImports(file);
  }
}
