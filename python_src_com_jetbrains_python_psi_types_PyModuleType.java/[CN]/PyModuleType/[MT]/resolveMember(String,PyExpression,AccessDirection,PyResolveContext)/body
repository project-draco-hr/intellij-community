{
  for (  PyModuleMembersProvider provider : Extensions.getExtensions(PyModuleMembersProvider.EP_NAME)) {
    final PsiElement element=provider.resolveMember(myModule,name);
    if (element != null) {
      return ResolveResultList.to(element);
    }
  }
  final PsiElement attribute=myModule.getElementNamed(name);
  if (attribute != null) {
    return ResolveResultList.to(attribute);
  }
  if (location != null && isPackage(myModule)) {
    final PsiFile file=location.getContainingFile();
    if (file instanceof PyFile) {
      final PyQualifiedName packageQName=ResolveImportUtil.findCanonicalImportPath(myModule,location);
      if (packageQName != null) {
        final List<PyImportElement> imports=((PyFile)file).getImportTargets();
        for (        PyImportElement importElement : imports) {
          final PyStatement stmt=importElement.getContainingImportStatement();
          PyQualifiedName importedQName=null;
          if (stmt instanceof PyFromImportStatement) {
            importedQName=((PyFromImportStatement)stmt).getImportSourceQName();
          }
 else           if (stmt instanceof PyImportStatement) {
            importedQName=importElement.getImportedQName();
          }
          final PyQualifiedName submoduleQName=packageQName.append(name);
          if (importedQName != null && importedQName.matchesPrefix(submoduleQName)) {
            final PsiElement submodule=ResolveImportUtil.resolveChild(myModule,name,myModule,null,null,false,true);
            if (submodule != null) {
              final ResolveResultList results=new ResolveResultList();
              results.poke(submodule,RatedResolveResult.RATE_NORMAL);
              results.add(new ImportedResolveResult(submodule,RatedResolveResult.RATE_LOW,Collections.<PsiElement>singletonList(importElement)));
              return results;
            }
          }
        }
      }
    }
  }
  return Collections.emptyList();
}
