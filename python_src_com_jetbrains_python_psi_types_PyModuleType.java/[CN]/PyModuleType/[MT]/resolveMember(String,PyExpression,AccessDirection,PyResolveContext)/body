{
  for (  PyModuleMembersProvider provider : Extensions.getExtensions(PyModuleMembersProvider.EP_NAME)) {
    final PsiElement element=provider.resolveMember(myModule,name);
    if (element != null) {
      return ResolveResultList.to(element);
    }
  }
  final PsiElement attribute=myModule.getElementNamed(name);
  if (attribute != null) {
    return ResolveResultList.to(attribute);
  }
  if (PyUtil.isPackage(myModule)) {
    final List<PyImportElement> importElements=new ArrayList<PyImportElement>();
    if (myImportedModule != null && (location == null || !inSameFile(location,myImportedModule))) {
      final PyImportElement importElement=myImportedModule.getImportElement();
      if (importElement != null) {
        importElements.add(importElement);
      }
    }
 else     if (location != null) {
      final ScopeOwner owner=ScopeUtil.getScopeOwner(location);
      if (owner != null) {
        importElements.addAll(getVisibleImports(owner));
      }
    }
    final List<? extends RatedResolveResult> implicitMembers=resolveImplicitPackageMember(name,importElements);
    if (implicitMembers != null) {
      return implicitMembers;
    }
  }
  return null;
}
