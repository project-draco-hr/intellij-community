{
  Set<String> names_already=context.get(PyType.CTX_NAMES);
  List<Object> result=new ArrayList<Object>();
  if (PsiTreeUtil.getParentOfType(referenceExpression,PyImportElement.class) == null) {
    final VariantsProcessor processor=new VariantsProcessor();
    myModule.processDeclarations(processor,ResolveState.initial(),null,referenceExpression);
    if (names_already != null) {
      for (      LookupElement le : processor.getResultList()) {
        String name=le.getLookupString();
        if (!names_already.contains(name)) {
          result.add(le);
          names_already.add(name);
        }
      }
    }
 else     result.addAll(processor.getResultList());
  }
 else {
    for (    PsiFileSystemItem pfsi : getSubmodulesList()) {
      String s=pfsi.getName();
      int pos=s.lastIndexOf('.');
      if (pos > 0)       s=s.substring(0,pos);
      if (!PyNames.isIdentifier(s))       continue;
      if (names_already != null) {
        if (names_already.contains(s))         continue;
 else         names_already.add(s);
      }
      result.add(LookupElementBuilder.create(pfsi,s).setPresentableText(s));
    }
  }
  return result.toArray();
}
