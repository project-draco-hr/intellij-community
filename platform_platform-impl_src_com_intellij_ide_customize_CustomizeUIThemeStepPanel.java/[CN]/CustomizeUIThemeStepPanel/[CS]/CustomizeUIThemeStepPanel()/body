{
  setLayout(createSmallBorderLayout());
  IconLoader.activate();
  initThemes(myThemes);
  myColumnMode=myThemes.size() > 2;
  JPanel buttonsPanel=new JPanel(new GridLayout(myColumnMode ? myThemes.size() : 1,myColumnMode ? 1 : myThemes.size(),5,5));
  ButtonGroup group=new ButtonGroup();
  ThemeInfo myDefaultTheme=null;
  for (  final ThemeInfo theme : myThemes) {
    final JRadioButton radioButton=new JRadioButton(theme.name,myDefaultTheme == null);
    radioButton.setOpaque(false);
    if (myDefaultTheme == null) {
      radioButton.setSelected(true);
      myDefaultTheme=theme;
    }
    final JPanel panel=createBigButtonPanel(createSmallBorderLayout(),radioButton,new Runnable(){
      @Override public void run(){
        applyLaf(theme,CustomizeUIThemeStepPanel.this);
        theme.apply();
      }
    }
);
    panel.setBorder(createSmallEmptyBorder());
    panel.add(radioButton,myColumnMode ? BorderLayout.WEST : BorderLayout.NORTH);
    Icon icon=theme.getIcon();
    final JLabel label=new JLabel(myColumnMode ? IconUtil.scale(IconUtil.cropIcon(icon,icon.getIconWidth() * 2 / 3,icon.getIconHeight() * 2 / 3),.5) : icon);
    label.setVerticalAlignment(SwingConstants.TOP);
    label.setHorizontalAlignment(SwingConstants.RIGHT);
    panel.add(label,BorderLayout.CENTER);
    group.add(radioButton);
    buttonsPanel.add(panel);
  }
  add(buttonsPanel,BorderLayout.CENTER);
  myPreviewLabel=new JLabel();
  myPreviewLabel.setHorizontalAlignment(myColumnMode ? SwingConstants.LEFT : SwingConstants.CENTER);
  myPreviewLabel.setVerticalAlignment(SwingConstants.CENTER);
  if (myColumnMode) {
    add(buttonsPanel,BorderLayout.WEST);
    JPanel wrapperPanel=new JPanel(new FlowLayout(FlowLayout.LEFT,0,0));
    wrapperPanel.add(myPreviewLabel);
    add(wrapperPanel,BorderLayout.CENTER);
  }
  applyLaf(myDefaultTheme,this);
  myInitial=false;
}
