{
  setLayout(new BorderLayout(10,10));
  IconLoader.activate();
  initLafs();
  myColumnMode=myLafNames.size() > 2;
  JPanel buttonsPanel=new JPanel(new GridLayout(myColumnMode ? myLafNames.size() : 1,myColumnMode ? 1 : myLafNames.size(),5,5));
  ButtonGroup group=new ButtonGroup();
  String myDefaultLafName=null;
  for (  Map.Entry<String,Icon> entry : myLafNames.entrySet()) {
    final String lafName=entry.getKey();
    Icon icon=entry.getValue();
    final JRadioButton radioButton=new JRadioButton(lafName,myDefaultLafName == null);
    radioButton.setOpaque(false);
    if (myDefaultLafName == null) {
      radioButton.setSelected(true);
      myDefaultLafName=lafName;
    }
    final JPanel panel=createBigButtonPanel(new BorderLayout(10,10),radioButton,new Runnable(){
      @Override public void run(){
        applyLaf(lafName,CustomizeUIThemeStepPanel.this);
      }
    }
);
    panel.setBorder(BorderFactory.createEmptyBorder(10,10,10,10));
    panel.add(radioButton,myColumnMode ? BorderLayout.WEST : BorderLayout.NORTH);
    final JLabel label=new JLabel(myColumnMode ? IconUtil.scale(IconUtil.cropIcon(icon,icon.getIconWidth() * 2 / 3,icon.getIconHeight() * 2 / 3),.5) : icon);
    label.setVerticalAlignment(SwingConstants.TOP);
    label.setHorizontalAlignment(SwingConstants.RIGHT);
    panel.add(label,BorderLayout.CENTER);
    group.add(radioButton);
    buttonsPanel.add(panel);
  }
  add(buttonsPanel,BorderLayout.CENTER);
  myPreviewLabel=new JLabel();
  myPreviewLabel.setHorizontalAlignment(myColumnMode ? SwingConstants.LEFT : SwingConstants.CENTER);
  myPreviewLabel.setVerticalAlignment(SwingConstants.CENTER);
  if (myColumnMode) {
    add(buttonsPanel,BorderLayout.WEST);
    JPanel wrapperPanel=new JPanel(new FlowLayout(FlowLayout.LEFT,0,0));
    wrapperPanel.add(myPreviewLabel);
    add(wrapperPanel,BorderLayout.CENTER);
  }
  applyLaf(myDefaultLafName,this);
  myInitial=false;
}
