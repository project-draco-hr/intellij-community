{
  PsiElement element1=myStatementToMove;
  PyStatementPart statementPart1=PsiTreeUtil.getParentOfType(element1,PyStatementPart.class,false);
  int offset2=getLineStartSafeOffset(editor.getDocument(),info.toMove2.startLine);
  PsiElement element2=file.findElementAt(offset2 - 1);
  if (element2 instanceof PsiWhiteSpace) {
    if (down) {
      PsiElement tmp=PyPsiUtils.getSignificantToTheRight(element2,true);
      if (tmp != null && editor.offsetToLogicalPosition(tmp.getTextRange().getStartOffset()).line == info.toMove2.startLine)       element2=tmp;
    }
 else {
      PsiElement tmp=PyPsiUtils.getSignificantToTheRight(element2,true);
      if (tmp != null) {
        int start=editor.offsetToLogicalPosition(tmp.getParent().getTextRange().getStartOffset()).line;
        int end=editor.offsetToLogicalPosition(tmp.getParent().getTextRange().getEndOffset()).line;
        if (start == info.toMove2.startLine && (start == end || tmp.getParent() instanceof PyClass || tmp.getParent() instanceof PyFunction))         element2=tmp;
 else         element2=PyPsiUtils.getSignificantToTheLeft(element2,true);
      }
 else {
        element2=PyPsiUtils.getSignificantToTheLeft(element2,true);
      }
    }
  }
  PyStatementPart statementPart2=PsiTreeUtil.getParentOfType(element2,PyStatementPart.class);
  if (statementPart2 != null) {
    PyStatementList stList=statementPart2.getStatementList();
    if (stList != null && stList.getStatements().length > 0) {
      if (down && stList.getStatements()[stList.getStatements().length - 1] == element2) {
        PyStatementPart parent=PsiTreeUtil.getParentOfType(statementPart2,PyStatementPart.class);
        if (parent != null) {
          stList=parent.getStatementList();
          if (stList != null && stList.getStatements().length > 0) {
            if (stList.getStatements()[stList.getStatements().length - 1] == statementPart2) {
              statementPart2=parent;
            }
          }
        }
      }
    }
  }
  return new Pair<PyStatementPart,PyStatementPart>(statementPart1,statementPart2);
}
