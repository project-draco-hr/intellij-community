{
  final Document document=editor.getDocument();
  if (document.getLineCount() >= info.toMove2.endLine) {
    final TextRange range=new TextRange(getLineStartSafeOffset(document,info.toMove2.startLine),getLineStartSafeOffset(document,info.toMove2.endLine));
    final String lineToMoveTo=document.getText(range);
    if (StringUtil.isEmptyOrSpaces(lineToMoveTo)) {
      if (myStatementToMove instanceof PyFunction || myStatementToMove instanceof PyClass) {
        final CommonCodeStyleSettings indentOptions=CodeStyleSettingsManager.getInstance(editor.getProject()).getCurrentSettings().getCommonSettings(PythonLanguage.getInstance());
        final int blankLines=myStatementToMove instanceof PyFunction ? indentOptions.BLANK_LINES_AROUND_METHOD : indentOptions.BLANK_LINES_AROUND_CLASS;
        final int nearLine=down ? info.toMove2.endLine + blankLines - 1 : info.toMove2.startLine - blankLines;
        if (document.getLineCount() > nearLine && nearLine > 0)         info.toMove2=new LineRange(nearLine,nearLine + 1);
        return false;
      }
      return true;
    }
  }
  return false;
}
