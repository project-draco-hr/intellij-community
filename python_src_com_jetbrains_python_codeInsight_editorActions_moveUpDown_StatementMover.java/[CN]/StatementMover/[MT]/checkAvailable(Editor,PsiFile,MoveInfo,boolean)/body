{
  if (!(file instanceof PyFile))   return false;
  init(editor,info,down);
  if (editor.getSelectionModel().hasSelection()) {
    return false;
  }
  Document document=editor.getDocument();
  String lineToMove=document.getText(new TextRange(getLineStartSafeOffset(document,info.toMove.startLine),getLineStartSafeOffset(document,info.toMove.endLine)));
  if (StringUtil.isEmptyOrSpaces(lineToMove)) {
    info.toMove2=info.toMove;
    return true;
  }
  myStatementListToAddPass=null;
  myStatementListToAddPassAfter=null;
  myStatementToDecreaseIndent=null;
  myStatementToIncreaseIndent=null;
  myStatementToAddLinebreak=null;
  myStatementPartToRemovePass=null;
  myStatementToMove=findStatement(editor,file,info);
  if (myStatementToMove == null)   return false;
  if (myStatementToMove instanceof PyPassStatement) {
    info.toMove2=info.toMove;
    return true;
  }
  if (myStatementToMove instanceof PyBreakStatement || myStatementToMove instanceof PyContinueStatement) {
    PyLoopStatement parent=PsiTreeUtil.getParentOfType(myStatementToMove,PyLoopStatement.class);
    if (parent != null) {
      PyStatementPart part=PsiTreeUtil.getChildOfType(parent,PyStatementPart.class);
      if (part != null && part.getStatementList() != null) {
        PyStatementList statementList=part.getStatementList();
        if (statementList != null && statementList.getStatements().length > 0) {
          if ((statementList.getStatements()[0] == myStatementToMove && !down) || (statementList.getStatements()[statementList.getStatements().length - 1] == myStatementToMove && down)) {
            info.toMove2=info.toMove;
            return true;
          }
        }
      }
    }
  }
  if (isFirstOrLastStatement(down)) {
    info.toMove2=info.toMove;
    return true;
  }
  expandLineRangeToStatement(info,editor,down,file);
  boolean theSameLevel=isTheSameIndentLevel(info,editor,file,down);
  if (isMoveOut(info,editor,file,down)) {
    myStatementToDecreaseIndent=myStatementToMove;
    if (down)     info.toMove2=new LineRange(myStatementToMove);
  }
 else {
    LineRange range=StatementUpDownMover.getLineRangeFromSelection(editor);
    final int maxLine=editor.getDocument().getLineCount();
    if (range.startLine == 0 && !down)     return false;
    if (range.endLine >= maxLine && down)     return false;
  }
  if (isMoveToCompound(info,editor,file,down) && !moveToEmptyLine) {
    myStatementToIncreaseIndent=myStatementToMove;
    if (!down)     info.toMove2=new LineRange(myStatementToMove);
  }
  PyElement statementPart=getStatementParts(info,editor,file,down).first;
  if (statementPart instanceof PyStatementPart) {
    PyStatementList statementList=((PyStatementPart)statementPart).getStatementList();
    if (statementList != null && statementList.getStatements().length == 1) {
      if (theSameLevel) {
        myStatementListToAddPassAfter=statementList;
      }
 else       myStatementListToAddPass=statementList;
    }
  }
  return true;
}
