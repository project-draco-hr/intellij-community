{
  final GrExpression[] argArray=argumentList.getExpressionArguments();
  final ArrayList<GrExpression> args=ContainerUtil.newArrayList();
  for (  GrExpression arg : argArray) {
    if (arg instanceof GrSpreadArgument) {
      GrExpression spreaded=((GrSpreadArgument)arg).getArgument();
      if (spreaded instanceof GrListOrMap && !((GrListOrMap)spreaded).isMap()) {
        Collections.addAll(args,((GrListOrMap)spreaded).getInitializers());
      }
 else {
        return null;
      }
    }
 else {
      args.add(arg);
    }
  }
  final PsiElement parent=argumentList.getParent();
  if (parent instanceof GrIndexProperty && PsiUtil.isLValue((GroovyPsiElement)parent)) {
    args.add(TypeInferenceHelper.getInitializerFor((GrExpression)parent));
  }
  return args;
}
