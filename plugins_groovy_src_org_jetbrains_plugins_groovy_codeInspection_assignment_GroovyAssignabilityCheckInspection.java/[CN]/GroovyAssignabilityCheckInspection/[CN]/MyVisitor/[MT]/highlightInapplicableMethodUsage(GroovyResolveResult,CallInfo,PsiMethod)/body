{
  final PsiClass containingClass=method instanceof GrGdkMethod ? ((GrGdkMethod)method).getStaticMethod().getContainingClass() : method.getContainingClass();
  PsiType[] argumentTypes=info.getArgumentTypes();
  if (containingClass == null) {
    registerCannotApplyError(method.getName(),info);
    return;
  }
  final String typesString=buildArgTypesList(argumentTypes);
  final PsiElementFactory factory=JavaPsiFacade.getElementFactory(method.getProject());
  final PsiClassType containingType=factory.createType(containingClass,methodResolveResult.getSubstitutor());
  final String canonicalText=containingType.getInternalCanonicalText();
  String message=method.isConstructor() ? GroovyBundle.message("cannot.apply.constructor",method.getName(),canonicalText,typesString) : GroovyBundle.message("cannot.apply.method1",method.getName(),canonicalText,typesString);
  registerError(info.getElementToHighlight(),message,genCastFixes(GrClosureSignatureUtil.createSignature(methodResolveResult),argumentTypes,info.getArgumentList()),ProblemHighlightType.GENERIC_ERROR_OR_WARNING);
}
