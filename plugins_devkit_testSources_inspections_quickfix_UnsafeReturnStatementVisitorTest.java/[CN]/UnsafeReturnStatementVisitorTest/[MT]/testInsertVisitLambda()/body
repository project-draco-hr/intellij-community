{
  myFixture.addClass("package com.intellij.psi;\n" + "public interface PsiLambdaExpression{}");
  myFixture.addClass("package com.intellij.psi;\n" + "public abstract class JavaRecursiveElementVisitor{}");
  myFixture.addClass("package com.intellij.psi;\n" + "public interface PsiReturnStatement{}");
  myFixture.addClass("package com.intellij.psi;\n" + "public interface PsiClass{}");
  myFixture.configureByText(JavaFileType.INSTANCE,"import com.intellij.psi.*;\n" + "class Te<caret>st extends JavaRecursiveElementVisitor {\n" + "   public void visitReturnStatement(PsiReturnStatement statement) {}\n"+ "   public void visitClass(PsiClass aClass) {}\n"+ "}");
  IntentionAction intention=myFixture.findSingleIntention("Insert visitLambdaExpression method");
  myFixture.launchAction(intention);
  myFixture.checkResult("import com.intellij.psi.*;\n" + "class Test extends JavaRecursiveElementVisitor {\n" + "   public void visitReturnStatement(PsiReturnStatement statement) {}\n"+ "   public void visitClass(PsiClass aClass) {}\n"+ "\n"+ "    public void visitLambdaExpression(PsiLambdaExpression expression) {\n"+ "    }\n"+ "}");
}
