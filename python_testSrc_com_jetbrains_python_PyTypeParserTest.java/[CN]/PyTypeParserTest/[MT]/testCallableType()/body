{
  myFixture.configureByFile("typeParser/typeParser.py");
  final PyType type=PyTypeParser.getTypeByName(myFixture.getFile(),"(int, T) -> T");
  assertInstanceOf(type,PyCallableType.class);
  final PyCallableType callableType=(PyCallableType)type;
  assertNotNull(callableType);
  final TypeEvalContext context=getTypeEvalContext();
  final PyType returnType=callableType.getReturnType(context);
  assertInstanceOf(returnType,PyGenericType.class);
  final List<PyCallableParameter> parameterTypes=callableType.getParameters(context);
  assertNotNull(parameterTypes);
  assertEquals(2,parameterTypes.size());
  final PyType type0=parameterTypes.get(0).getType(context);
  assertNotNull(type0);
  assertEquals("int",type0.getName());
  final PyType type1=parameterTypes.get(1).getType(context);
  assertNotNull(type1);
  assertEquals("TypeVar('T')",type1.getName());
}
