{
  CodeStyleSettings settings=myFormatter.getSettings();
  CommonCodeStyleSettings.IndentOptions indentOptions=settings.getIndentOptions(JavaFileType.INSTANCE);
  String continuationIndent=new IndentInfo(0,indentOptions.CONTINUATION_INDENT_SIZE,0).generateNewWhiteSpace(indentOptions);
  int max=0;
  if (align_comments && !wrapDescription) {
    for (    NameDesc nd : list) {
      int currentLength=nd.name.length();
      if (isNull(nd.desc) && !generate_empty_tags)       continue;
      if (currentLength > max) {
        max=currentLength;
      }
    }
  }
  StringBuilder fill=new StringBuilder(prefix.length() + tag.length() + max+ 1);
  fill.append(prefix);
  StringUtil.repeatSymbol(fill,' ',max + 1 + tag.length());
  String wrapParametersPrefix=prefix + continuationIndent;
  for (  NameDesc nd : list) {
    if (isNull(nd.desc) && !generate_empty_tags)     continue;
    if (wrapDescription && !isNull(nd.desc)) {
      sb.append(prefix).append(tag).append(nd.name).append("\n");
      sb.append(wrapParametersPrefix);
      sb.append(myFormatter.getParser().formatJDTagDescription(nd.desc,wrapParametersPrefix));
    }
 else     if (align_comments) {
      sb.append(prefix);
      sb.append(tag);
      sb.append(nd.name);
      int spacesNumber=max + 1 - nd.name.length();
      StringUtil.repeatSymbol(sb,' ',Math.max(0,spacesNumber));
      sb.append(myFormatter.getParser().formatJDTagDescription(nd.desc,fill));
    }
 else {
      sb.append(prefix);
      String description=(nd.desc == null) ? "" : nd.desc;
      sb.append(myFormatter.getParser().formatJDTagDescription(tag + nd.name + " "+ description,prefix));
    }
  }
}
