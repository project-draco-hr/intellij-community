{
  LocalFileSystem lfs=LocalFileSystem.getInstance();
  List<String> pathsChecked=new ArrayList<String>();
  String path=FileUtil.toSystemIndependentName(PathManager.getHomePath()) + "/java/jdkAnnotations";
  VirtualFile root=lfs.findFileByPath(path);
  pathsChecked.add(path);
  if (root == null) {
    path=FileUtil.toSystemIndependentName(PathManager.getHomePath()) + "/community/java/jdkAnnotations";
    root=lfs.findFileByPath(path);
    pathsChecked.add(path);
  }
  if (root == null) {
    String url="jar://" + FileUtil.toSystemIndependentName(PathManager.getHomePath()) + "/lib/jdkAnnotations.jar!/";
    root=VirtualFileManager.getInstance().findFileByUrl(url);
    pathsChecked.add(FileUtil.toSystemIndependentName(PathManager.getHomePath()) + "/lib/jdkAnnotations.jar");
  }
  if (root == null) {
    String msg="Paths checked:\n";
    for (    String p : pathsChecked) {
      File file=new File(p);
      msg+="Path: '" + p + "' "+ (file.exists() ? "Found" : "Not found")+ "; directory children: "+ Arrays.toString(file.getParentFile().listFiles())+ "\n";
    }
    LOG.error("JDK annotations not found",msg);
    return;
  }
  OrderRootType annoType=AnnotationOrderRootType.getInstance();
  modificator.removeRoot(root,annoType);
  modificator.addRoot(root,annoType);
}
