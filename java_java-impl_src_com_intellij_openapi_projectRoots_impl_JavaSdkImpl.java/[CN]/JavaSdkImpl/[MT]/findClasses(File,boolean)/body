{
  List<File> roots=JavaSdkUtil.getJdkClassesRoots(file,isJre);
  List<String> urls=ContainerUtil.newArrayListWithCapacity(roots.size() + 1);
  if (JrtFileSystem.isModularJdk(file.getPath())) {
    urls.add(VirtualFileManager.constructUrl(JrtFileSystem.PROTOCOL,FileUtil.toSystemIndependentName(file.getPath()) + JrtFileSystem.SEPARATOR));
  }
  for (  File root : roots) {
    urls.add(VfsUtil.getUrlForLibraryRoot(root));
  }
  List<VirtualFile> result=ContainerUtil.newArrayListWithCapacity(urls.size());
  for (  String url : urls) {
    VirtualFile vFile=VirtualFileManager.getInstance().findFileByUrl(url);
    if (vFile != null) {
      result.add(vFile);
    }
  }
  Collections.sort(result,new Comparator<VirtualFile>(){
    @Override public int compare(    VirtualFile o1,    VirtualFile o2){
      return o1.getPath().compareTo(o2.getPath());
    }
  }
);
  return result;
}
