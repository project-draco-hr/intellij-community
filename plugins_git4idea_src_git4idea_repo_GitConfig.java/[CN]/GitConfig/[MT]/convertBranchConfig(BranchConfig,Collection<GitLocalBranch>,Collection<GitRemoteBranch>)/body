{
  if (branchConfig == null) {
    return null;
  }
  final String branchName=branchConfig.getName();
  String remoteName=branchConfig.getBean().getRemote();
  String mergeName=branchConfig.getBean().getMerge();
  String rebaseName=branchConfig.getBean().getRebase();
  if (StringUtil.isEmptyOrSpaces(mergeName) && StringUtil.isEmptyOrSpaces(rebaseName)) {
    LOG.info("No branch." + branchName + ".merge/rebase item in the .git/config");
    return null;
  }
  if (StringUtil.isEmptyOrSpaces(remoteName)) {
    LOG.info("No branch." + branchName + ".remote item in the .git/config");
    return null;
  }
  boolean merge=mergeName != null;
  final String remoteBranchName=StringUtil.unquoteString(merge ? mergeName : rebaseName);
  GitLocalBranch localBranch=findLocalBranch(branchName,localBranches);
  GitRemoteBranch remoteBranch=findRemoteBranch(remoteBranchName,remoteName,remoteBranches);
  if (localBranch == null || remoteBranch == null) {
    LOG.debug("localBranch: " + localBranch + ", remoteBranch: "+ remoteBranch);
    return null;
  }
  return new GitBranchTrackInfo(localBranch,remoteBranch,merge);
}
