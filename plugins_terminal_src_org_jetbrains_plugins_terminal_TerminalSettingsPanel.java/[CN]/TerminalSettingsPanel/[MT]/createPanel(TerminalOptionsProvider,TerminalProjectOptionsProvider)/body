{
  myOptionsProvider=provider;
  myProjectOptionsProvider=projectOptionsProvider;
  myProjectSettingsPanel.setBorder(IdeBorderFactory.createTitledBorder("Project settings"));
  myGlobalSettingsPanel.setBorder(IdeBorderFactory.createTitledBorder("Application settings"));
  FileChooserDescriptor fileChooserDescriptor=new FileChooserDescriptor(true,false,false,false,false,false);
  myShellPathField.addBrowseFolderListener("","Shell executable path",null,fileChooserDescriptor,TextComponentAccessor.TEXT_FIELD_WHOLE_TEXT);
  fileChooserDescriptor=new FileChooserDescriptor(false,true,false,false,false,false);
  myStartDirectoryField.addBrowseFolderListener("","Starting directory",null,fileChooserDescriptor,TextComponentAccessor.TEXT_FIELD_WHOLE_TEXT);
  myShellPathField.getTextField().getDocument().addDocumentListener(new DocumentAdapter(){
    @Override protected void textChanged(    DocumentEvent e){
      myShellPathField.getTextField().setForeground(StringUtil.equals(myShellPathField.getText(),myProjectOptionsProvider.getDefaultShellPath()) ? getDefaultValueColor() : getChangedValueColor());
    }
  }
);
  myStartDirectoryField.getTextField().getDocument().addDocumentListener(new DocumentAdapter(){
    @Override protected void textChanged(    DocumentEvent e){
      myStartDirectoryField.getTextField().setForeground(StringUtil.equals(myStartDirectoryField.getText(),myProjectOptionsProvider.getDefaultStartingDirectory()) ? getDefaultValueColor() : getChangedValueColor());
    }
  }
);
  return myWholePanel;
}
