{
  if (editor.isViewer())   return;
  Document doc=editor.getDocument();
  Project project=CommonDataKeys.PROJECT.getData(dataContext);
  if (!FileDocumentManager.getInstance().requestWriting(doc,project)) {
    return;
  }
  doc.startGuardedBlockChecking();
  try {
    final String str=String.valueOf(charTyped);
    CommandProcessor.getInstance().setCurrentCommandName(EditorBundle.message("typing.in.editor.command.name"));
    if (editor.getCaretModel().getAllCarets().size() == 1) {
      EditorModificationUtil.typeInStringAtCaretHonorBlockSelection(editor,str,true);
    }
 else {
      editor.getCaretModel().runForEachCaret(new CaretAction(){
        @Override public void perform(        Caret caret){
          EditorModificationUtil.typeInStringAtCaretHonorBlockSelection(editor,str,true);
        }
      }
);
    }
  }
 catch (  ReadOnlyFragmentModificationException e) {
    EditorActionManager.getInstance().getReadonlyFragmentModificationHandler(doc).handle(e);
  }
 finally {
    doc.stopGuardedBlockChecking();
  }
}
