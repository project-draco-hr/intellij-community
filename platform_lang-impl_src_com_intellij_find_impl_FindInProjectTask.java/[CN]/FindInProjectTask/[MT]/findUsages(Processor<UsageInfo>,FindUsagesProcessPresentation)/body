{
  try {
    myProgress.setIndeterminate(true);
    myProgress.setText("Scanning indexed files...");
    Pair<Boolean,Collection<PsiFile>> fastWords=getFilesForFastWordSearch();
    final Set<PsiFile> filesForFastWordSearch=ContainerUtil.newLinkedHashSet(fastWords.getSecond());
    myProgress.setIndeterminate(false);
    searchInFiles(consumer,processPresentation,filesForFastWordSearch);
    myProgress.setIndeterminate(true);
    myProgress.setText("Scanning non-indexed files...");
    final boolean useIdIndex=fastWords.getFirst() && canOptimizeForFastWordSearch(myFindModel);
    final Collection<PsiFile> otherFiles=collectFilesInScope(filesForFastWordSearch,useIdIndex);
    myProgress.setIndeterminate(false);
    searchInFiles(consumer,processPresentation,otherFiles);
  }
 catch (  ProcessCanceledException e) {
  }
  if (!myLargeFiles.isEmpty()) {
    processPresentation.setLargeFilesWereNotScanned(myLargeFiles);
  }
  if (!myProgress.isCanceled()) {
    myProgress.setText(FindBundle.message("find.progress.search.completed"));
  }
}
