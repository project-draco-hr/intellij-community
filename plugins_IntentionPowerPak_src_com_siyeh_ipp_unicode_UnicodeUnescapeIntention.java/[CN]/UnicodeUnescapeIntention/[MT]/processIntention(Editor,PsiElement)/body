{
  final SelectionModel selectionModel=editor.getSelectionModel();
  if (selectionModel.hasSelection()) {
    final Document document=editor.getDocument();
    final int start=selectionModel.getSelectionStart();
    final int end=selectionModel.getSelectionEnd();
    final String text=document.getText(new TextRange(start,end));
    final int textLength=end - start;
    final StringBuilder replacement=new StringBuilder(textLength);
    int anchor=0;
    while (true) {
      final int index=indexOfUnicodeEscape(text,anchor + 1);
      if (index < 0) {
        break;
      }
      replacement.append(text.substring(anchor,index));
      int hexStart=index + 1;
      while (text.charAt(hexStart) == 'u') {
        hexStart++;
      }
      anchor=hexStart + 4;
      final int c=Integer.parseInt(text.substring(hexStart,anchor),16);
      replacement.appendCodePoint(c);
    }
    replacement.append(text.substring(anchor,textLength));
    document.replaceString(start,end,replacement);
  }
 else {
    final CaretModel caretModel=editor.getCaretModel();
    final Document document=editor.getDocument();
    final int lineNumber=document.getLineNumber(caretModel.getOffset());
    final int lineStartOffset=document.getLineStartOffset(lineNumber);
    final String line=document.getText(new TextRange(lineStartOffset,document.getLineEndOffset(lineNumber)));
    final int column=caretModel.getLogicalPosition().column;
    final int index1=indexOfUnicodeEscape(line,column);
    final int index2=indexOfUnicodeEscape(line,column + 1);
    final int escapeStart=index2 == column ? index2 : index1;
    int hexStart=escapeStart + 1;
    while (line.charAt(hexStart) == 'u') {
      hexStart++;
    }
    final int c=Integer.parseInt(line.substring(hexStart,hexStart + 4),16);
    document.replaceString(lineStartOffset + escapeStart,lineStartOffset + hexStart + 4,String.valueOf((char)c));
  }
}
