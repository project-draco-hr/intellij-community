{
  if (second_arg != null) {
    PyType second_type=context.getType(second_arg);
    if (second_type instanceof PyClassType) {
      PyClass secondClass=((PyClassType)second_type).getPyClass();
      if (CompletionUtil.getOriginalOrSelf(firstClass) == secondClass) {
        return getSuperClassUnionType(firstClass);
      }
      if (secondClass != null && secondClass.isSubclass(firstClass)) {
        final Iterator<PyClass> iterator=firstClass.iterateAncestorClasses().iterator();
        if (iterator.hasNext()) {
          return new PyClassType(iterator.next(),false);
        }
      }
    }
  }
  return null;
}
