{
  this.value=value;
  super.getTableCellRendererComponent(table,getCellText(value),isSelected,hasFocus,row,column);
  if (isMarked(value) && !isSelected) {
    setBackground(MARKED_BACKGROUND);
  }
 else {
    setBackground(isSelected ? table.getSelectionBackground() : JBColor.WHITE);
  }
  Border paddingBorder=BorderFactory.createEmptyBorder(0,getLeftPadding(table,value),0,0);
  this.setBorder(BorderFactory.createCompoundBorder(this.getBorder(),paddingBorder));
  GraphCommitCell.Kind kind=getKind(value);
  Color textColor=isSelected ? table.getSelectionForeground() : JBColor.BLACK;
switch (kind) {
case APPLIED:
    setBackground(APPLIED_BACKGROUND);
  break;
case NORMAL:
setForeground(textColor);
break;
case PICK:
setFont(getFont().deriveFont(Font.BOLD));
setForeground(textColor);
break;
case FIXUP:
setFont(getFont().deriveFont(Font.BOLD));
setForeground(JBColor.GRAY);
break;
case REWORD:
setFont(getFont().deriveFont(Font.BOLD));
setForeground(JBColor.BLUE);
break;
}
return this;
}
