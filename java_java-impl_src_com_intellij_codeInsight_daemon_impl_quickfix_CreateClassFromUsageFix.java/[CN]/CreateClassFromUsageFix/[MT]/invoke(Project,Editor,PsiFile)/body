{
  PsiDocumentManager.getInstance(project).commitAllDocuments();
  final PsiJavaCodeReferenceElement element=getRefElement();
  if (element == null)   return;
  if (!FileModificationService.getInstance().preparePsiElementForWrite(element))   return;
  final String superClassName=getSuperClassName(element);
  final PsiClass aClass=CreateFromUsageUtils.createClass(element,myKind,superClassName);
  if (aClass == null)   return;
  ApplicationManager.getApplication().runWriteAction(new Runnable(){
    @Override public void run(){
      PsiJavaCodeReferenceElement refElement=element;
      try {
        refElement=(PsiJavaCodeReferenceElement)refElement.bindToElement(aClass);
      }
 catch (      IncorrectOperationException e) {
        LOG.error(e);
      }
      IdeDocumentHistory.getInstance(project).includeCurrentPlaceAsChangePlace();
      OpenFileDescriptor descriptor=new OpenFileDescriptor(refElement.getProject(),aClass.getContainingFile().getVirtualFile(),aClass.getTextOffset());
      FileEditorManager.getInstance(aClass.getProject()).openTextEditor(descriptor,true);
    }
  }
);
}
