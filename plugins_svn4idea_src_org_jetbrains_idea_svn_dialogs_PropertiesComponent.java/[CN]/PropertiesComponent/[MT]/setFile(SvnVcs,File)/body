{
  final Map<String,String> props=new TreeMap<String,String>();
  boolean firstTime=myFile == null;
  if (file != null) {
    myFile=file;
    myVcs=vcs;
    collectProperties(vcs,file,props);
  }
  DefaultTableModel model=(DefaultTableModel)myTable.getModel();
  model.setDataVector(createTableModel(props),new Object[]{"Name","Value"});
  myTable.getColumnModel().setColumnSelectionAllowed(false);
  myTable.getColumnModel().getColumn(1).setCellRenderer(new DefaultTableCellRenderer(){
    protected void setValue(    Object value){
      if (value != null) {
        if (value.toString().indexOf('\r') >= 0) {
          value=value.toString().substring(0,value.toString().indexOf('\r')) + " [...]";
        }
        if (value.toString().indexOf('\n') >= 0) {
          value=value.toString().substring(0,value.toString().indexOf('\n')) + " [...]";
        }
      }
      super.setValue(value);
    }
  }
);
  if (firstTime) {
    mySplitPane.setDividerLocation(.5);
  }
  if (myTable.getRowCount() > 0) {
    myTable.getSelectionModel().setSelectionInterval(0,0);
  }
}
