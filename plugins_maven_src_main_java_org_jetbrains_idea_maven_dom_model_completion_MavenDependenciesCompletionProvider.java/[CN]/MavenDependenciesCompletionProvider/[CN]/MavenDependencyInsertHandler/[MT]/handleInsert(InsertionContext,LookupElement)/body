{
  String s=item.getLookupString();
  int idx=s.indexOf(':');
  String groupId=s.substring(0,idx);
  String artifactId=s.substring(idx + 1);
  int startOffset=context.getStartOffset();
  PsiFile psiFile=context.getFile();
  DomFileElement<MavenDomProjectModel> domModel=DomManager.getDomManager(context.getProject()).getFileElement((XmlFile)psiFile,MavenDomProjectModel.class);
  if (domModel == null)   return;
  boolean shouldInvokeCompletion=false;
  MavenDomDependency managedDependency=MavenDependencyCompletionUtil.findManagedDependency(domModel.getRootElement(),context.getProject(),groupId,artifactId);
  if (managedDependency == null) {
    String value="<groupId>" + groupId + "</groupId>\n"+ "<artifactId>"+ artifactId+ "</artifactId>\n"+ "<version></version>";
    context.getDocument().replaceString(startOffset,context.getSelectionEndOffset(),value);
    context.getEditor().getCaretModel().moveToOffset(startOffset + value.length() - 10);
    shouldInvokeCompletion=true;
  }
 else {
    StringBuilder sb=new StringBuilder();
    sb.append("<groupId>").append(groupId).append("</groupId>\n").append("<artifactId>").append(artifactId).append("</artifactId>\n");
    String type=managedDependency.getType().getRawText();
    if (type != null && !type.equals("jar")) {
      sb.append("<type>").append(type).append("</type>\n");
    }
    String classifier=managedDependency.getClassifier().getRawText();
    if (StringUtil.isNotEmpty(classifier)) {
      sb.append("<classifier>").append(classifier).append("</classifier>\n");
    }
    context.getDocument().replaceString(startOffset,context.getSelectionEndOffset(),sb);
  }
  context.commitDocument();
  PsiElement e=psiFile.findElementAt(startOffset);
  while (e != null && (!(e instanceof XmlTag) || !"dependency".equals(((XmlTag)e).getName()))) {
    e=e.getParent();
  }
  if (e != null) {
    new ReformatCodeProcessor(psiFile.getProject(),psiFile,e.getTextRange(),true).run();
  }
  if (shouldInvokeCompletion) {
    MavenDependencyCompletionUtil.invokeCompletion(context,CompletionType.BASIC);
  }
}
