{
  String s=item.getLookupString();
  int idx=s.indexOf(':');
  String groupId=s.substring(0,idx);
  String artifactId=s.substring(idx + 1);
  String value="<groupId>" + groupId + "</groupId>\n"+ "<artifactId>"+ artifactId+ "</artifactId>\n"+ "<version></version>";
  int startOffset=context.getStartOffset();
  context.getDocument().replaceString(startOffset,context.getSelectionEndOffset(),value);
  context.getEditor().getCaretModel().moveToOffset(startOffset + value.length() - 10);
  context.commitDocument();
  PsiFile psiFile=context.getFile();
  PsiElement e=psiFile.findElementAt(startOffset);
  while (e != null && (!(e instanceof XmlTag) || !"dependency".equals(((XmlTag)e).getName()))) {
    e=e.getParent();
  }
  if (e != null) {
    new ReformatCodeProcessor(psiFile.getProject(),psiFile,e.getTextRange(),true).run();
  }
  context.setLaterRunnable(new Runnable(){
    @Override public void run(){
      new CodeCompletionHandlerBase(CompletionType.BASIC).invokeCompletion(context.getProject(),context.getEditor());
    }
  }
);
}
