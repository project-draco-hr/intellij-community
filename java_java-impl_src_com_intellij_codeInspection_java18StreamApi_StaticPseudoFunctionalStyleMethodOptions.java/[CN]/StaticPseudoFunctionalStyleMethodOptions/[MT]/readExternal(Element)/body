{
  restoreDefault(myElements);
  for (  Element element : xmlElement.getChildren(PIPELINE_ELEMENT_NAME)) {
    final String fqn=element.getAttributeValue(FQN_ATTR);
    final String method=element.getAttributeValue(METHOD_ATTR);
    final String streamApiMethod=element.getAttributeValue(STREAM_API_METHOD_ATTR);
    final PseudoLambdaReplaceTemplate.LambdaRole lambdaRole=PseudoLambdaReplaceTemplate.LambdaRole.valueOf(element.getAttributeValue(LAMBDA_ROLE_ATTR));
    final boolean acceptsDefault=Boolean.valueOf(element.getAttributeValue(ACCEPTS_DEFAULT_ATTR));
    final boolean toDelete=element.getAttribute(DELETE_ATTR) != null;
    final PipelineElement pipelineElement=new PipelineElement(fqn,method,new PseudoLambdaReplaceTemplate(streamApiMethod,lambdaRole,acceptsDefault));
    if (toDelete) {
      myElements.remove(pipelineElement);
    }
 else {
      myElements.add(pipelineElement);
    }
  }
}
