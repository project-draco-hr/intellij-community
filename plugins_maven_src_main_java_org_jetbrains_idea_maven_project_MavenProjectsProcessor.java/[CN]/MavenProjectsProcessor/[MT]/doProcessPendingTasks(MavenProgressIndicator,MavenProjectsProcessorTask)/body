{
  int counter=0;
  try {
    while (true) {
      indicator.checkCanceled();
      counter++;
      int remained;
synchronized (myQueue) {
        remained=myQueue.size();
      }
      indicator.setFraction(counter / (double)(counter + remained));
      try {
        final MavenGeneralSettings mavenGeneralSettings=MavenProjectsManager.getInstance(myProject).getGeneralSettings();
        task.perform(myProject,myEmbeddersManager,new SoutMavenConsole(mavenGeneralSettings.getOutputLevel(),mavenGeneralSettings.isPrintErrorStackTraces()),indicator);
      }
 catch (      MavenProcessCanceledException e) {
        throw e;
      }
catch (      Throwable e) {
        MavenLog.LOG.error(e);
        new Notification(MavenUtil.MAVEN_NOTIFICATION_GROUP,"Unable to import maven project","See logs for details",NotificationType.ERROR).notify(myProject);
      }
synchronized (myQueue) {
        task=myQueue.poll();
        if (task == null) {
          isProcessing=false;
          return;
        }
      }
    }
  }
 catch (  MavenProcessCanceledException e) {
synchronized (myQueue) {
      myQueue.clear();
      isProcessing=false;
    }
    throw e;
  }
}
