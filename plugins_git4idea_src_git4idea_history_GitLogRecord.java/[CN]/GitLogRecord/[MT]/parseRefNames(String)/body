{
  if (decoration == null) {
    return ContainerUtil.emptyList();
  }
  final int startParentheses=decoration.indexOf("(");
  final int endParentheses=decoration.indexOf(")");
  if ((startParentheses == -1) || (endParentheses == -1))   return Collections.emptyList();
  String refs=decoration.substring(startParentheses + 1,endParentheses);
  String[] names=refs.split(", ");
  List<String> result=ContainerUtil.newArrayList();
  for (  String item : names) {
    final String POINTER=" -> ";
    if (item.contains(POINTER)) {
      List<String> parts=StringUtil.split(item,POINTER);
      result.addAll(ContainerUtil.map(parts,new Function<String,String>(){
        @Override public String fun(        String s){
          return shortBuffer(s.trim());
        }
      }
));
    }
 else {
      int colon=item.indexOf(':');
      result.add(shortBuffer(colon > 0 ? item.substring(colon + 1).trim() : item));
    }
  }
  return result;
}
