{
  final Module module=myFixture.getModule();
  if (hasFile) {
    assertTrue(PyPackageUtil.hasSetupPy(module));
    final PyFile setupPy=PyPackageUtil.findSetupPy(module);
    assertNotNull(setupPy);
    if (hasCall) {
      final PyCallExpression callByModule=PyPackageUtil.findSetupCall(module);
      final PyCallExpression callByFile=PyPackageUtil.findSetupCall(setupPy);
      assertNotNull(callByModule);
      assertNotNull(callByFile);
      assertSame(callByFile,callByModule);
      if (requires) {
        checkRequirements(PyPackageUtil.findSetupPyRequires(module));
      }
 else {
        final List<PyRequirement> requirements=PyPackageUtil.findSetupPyRequires(module);
        assertNotNull(requirements);
        assertEmpty(requirements);
      }
    }
 else {
      assertNull(PyPackageUtil.findSetupCall(module));
      assertNull(PyPackageUtil.findSetupCall(setupPy));
      assertNull(PyPackageUtil.findSetupPyRequires(module));
    }
  }
 else {
    assertFalse(PyPackageUtil.hasSetupPy(module));
    assertNull(PyPackageUtil.findSetupPy(module));
    assertNull(PyPackageUtil.findSetupCall(module));
    assertNull(PyPackageUtil.findSetupPyRequires(module));
  }
}
