{
  Element warCfg=mavenProject.getPluginConfiguration("org.apache.maven.plugins","maven-war-plugin");
  if (warCfg == null)   return;
  Element webResources=warCfg.getChild("webResources");
  if (webResources == null)   return;
  for (  Element resource : webResources.getChildren("resource")) {
    ResourceRootConfiguration r=new ResourceRootConfiguration();
    String directory=resource.getChildTextTrim("directory");
    if (StringUtil.isEmptyOrSpaces(directory))     continue;
    r.directory=directory;
    r.isFiltered=Boolean.parseBoolean(resource.getChildTextTrim("filtering"));
    r.targetPath=resource.getChildTextTrim("targetPath");
    Element includes=resource.getChild("includes");
    if (includes != null) {
      for (      Element include : includes.getChildren("include")) {
        String includeText=include.getTextTrim();
        if (!includeText.isEmpty()) {
          r.includes.add(includeText);
        }
      }
    }
    Element excludes=resource.getChild("excludes");
    if (excludes != null) {
      for (      Element exclude : excludes.getChildren("exclude")) {
        String excludeText=exclude.getTextTrim();
        if (!excludeText.isEmpty()) {
          r.excludes.add(excludeText);
        }
      }
    }
    container.add(r);
  }
}
