{
  Element pluginCfg=mavenProject.getPluginConfiguration("org.apache.maven.plugins","maven-ejb-plugin");
  if (pluginCfg == null || !Boolean.parseBoolean(pluginCfg.getChildTextTrim("generateClient"))) {
    return;
  }
  MavenEjbClientConfiguration ejbClientCfg=new MavenEjbClientConfiguration();
  Element includes=pluginCfg.getChild("clientIncludes");
  if (includes != null) {
    for (    Element include : includes.getChildren("clientInclude")) {
      String includeText=include.getTextTrim();
      if (!includeText.isEmpty()) {
        ejbClientCfg.includes.add(includeText);
      }
    }
  }
  Element excludes=pluginCfg.getChild("clientExcludes");
  if (excludes != null) {
    for (    Element exclude : excludes.getChildren("clientExclude")) {
      String excludeText=exclude.getTextTrim();
      if (!excludeText.isEmpty()) {
        ejbClientCfg.excludes.add(excludeText);
      }
    }
  }
  if (!ejbClientCfg.isEmpty()) {
    projectCfg.ejbClientArtifactConfigs.put(MavenUtil.getEjbClientArtifactName(module,true),ejbClientCfg);
  }
}
