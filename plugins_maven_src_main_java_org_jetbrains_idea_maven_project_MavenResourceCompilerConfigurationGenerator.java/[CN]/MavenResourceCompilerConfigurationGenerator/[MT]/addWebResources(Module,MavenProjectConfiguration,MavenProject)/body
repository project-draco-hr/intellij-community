{
  Element warCfg=mavenProject.getPluginConfiguration("org.apache.maven.plugins","maven-war-plugin");
  if (warCfg == null)   return;
  boolean filterWebXml=Boolean.parseBoolean(warCfg.getChildTextTrim("filteringDeploymentDescriptors"));
  Element webResources=warCfg.getChild("webResources");
  if (webResources == null && !filterWebXml)   return;
  String webArtifactName=MavenUtil.getArtifactName("war",module,true);
  MavenWebArtifactConfiguration artifactResourceCfg=projectCfg.webArtifactConfigs.get(webArtifactName);
  if (artifactResourceCfg == null) {
    artifactResourceCfg=new MavenWebArtifactConfiguration();
    artifactResourceCfg.moduleName=module.getName();
    projectCfg.webArtifactConfigs.put(webArtifactName,artifactResourceCfg);
  }
 else {
    LOG.error("MavenWebArtifactConfiguration already exists.");
  }
  if (webResources != null) {
    for (    Element resource : webResources.getChildren("resource")) {
      ResourceRootConfiguration r=new ResourceRootConfiguration();
      String directory=resource.getChildTextTrim("directory");
      if (StringUtil.isEmptyOrSpaces(directory))       continue;
      if (!FileUtil.isAbsolute(directory)) {
        directory=mavenProject.getDirectory() + '/' + directory;
      }
      r.directory=directory;
      r.isFiltered=Boolean.parseBoolean(resource.getChildTextTrim("filtering"));
      r.targetPath=resource.getChildTextTrim("targetPath");
      Element includes=resource.getChild("includes");
      if (includes != null) {
        for (        Element include : includes.getChildren("include")) {
          String includeText=include.getTextTrim();
          if (!includeText.isEmpty()) {
            r.includes.add(includeText);
          }
        }
      }
      Element excludes=resource.getChild("excludes");
      if (excludes != null) {
        for (        Element exclude : excludes.getChildren("exclude")) {
          String excludeText=exclude.getTextTrim();
          if (!excludeText.isEmpty()) {
            r.excludes.add(excludeText);
          }
        }
      }
      artifactResourceCfg.webResources.add(r);
    }
  }
  if (filterWebXml) {
    ResourceRootConfiguration r=new ResourceRootConfiguration();
    r.directory=mavenProject.getDirectory() + "/src/main/webapp";
    r.includes=Collections.singleton("WEB-INF/web.xml");
    r.isFiltered=true;
    r.targetPath="";
    artifactResourceCfg.webResources.add(r);
  }
}
