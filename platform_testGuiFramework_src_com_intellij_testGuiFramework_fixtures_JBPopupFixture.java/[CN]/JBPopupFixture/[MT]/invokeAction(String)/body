{
  boolean assertion=false;
  final MenuElement[] elements=myContextMenu.getSubElements();
  if (actionPath.length > 1) {
    for (    MenuElement element : elements) {
      if (element instanceof ActionMenu) {
        final ActionMenu actionMenu=(ActionMenu)element;
        if (actionMenu.getText().toLowerCase().contains(actionPath[0].toLowerCase())) {
          final Point locationOnScreen=myContextMenu.getLocationOnScreen();
          final Rectangle bounds=actionMenu.getBounds();
          final Point point=new Point(locationOnScreen.x + bounds.x + bounds.width / 2,locationOnScreen.y + bounds.y + bounds.height / 2);
          robot().click(point,MouseButton.LEFT_BUTTON,1);
          final String actionName=actionPath[1];
          final JBPopupFixture fixture=new JBPopupFixture(waitUntilFoundMenu(actionName),myRobot);
          fixture.invokeAction(ArrayUtil.remove(actionPath,0));
          return;
        }
      }
    }
  }
 else {
    for (    MenuElement element : elements) {
      if (element instanceof ActionMenuItem) {
        final ActionMenuItem actionMenuItem=(ActionMenuItem)element;
        if (actionMenuItem.getText().toLowerCase().contains(actionPath[0].toLowerCase())) {
          pause(new Condition("Waiting to showing JBPopupMenu on screen"){
            @Override public boolean test(){
              try {
                myContextMenu.getLocationOnScreen();
                return true;
              }
 catch (              IllegalComponentStateException e) {
                return false;
              }
            }
          }
,SHORT_TIMEOUT);
          final Point locationOnScreen=myContextMenu.getLocationOnScreen();
          final Rectangle bounds=actionMenuItem.getBounds();
          final Point point=new Point(locationOnScreen.x + bounds.x + bounds.width / 2,locationOnScreen.y + bounds.y + bounds.height / 2);
          robot().click(point,MouseButton.LEFT_BUTTON,1);
          return;
        }
      }
    }
  }
}
