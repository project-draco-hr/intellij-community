{
  final GrMembersDeclaration prev=getPreviousStatement(semicolon,GrMembersDeclaration.class);
  final GrMembersDeclaration next=getNextStatement(semicolon,GrMembersDeclaration.class);
  if (prev == null || next == null)   return true;
  final int startOffset=prev.getTextRange().getStartOffset();
  final int endOffset=next.getTextRange().getEndOffset();
  final int offset=semicolon.getTextRange().getStartOffset();
  final String declarationsWithoutSemicolon=text.substring(startOffset,offset) + text.substring(offset + 1,endOffset);
  PsiElement parent=semicolon.getParent().getParent();
  String prefix=parent instanceof GrClassDefinition ? "class" : parent instanceof GrEnumTypeDefinition ? "enum" : parent instanceof GrInterfaceDefinition ? "interface" : parent instanceof GrAnnotationTypeDefinition ? "@interface" : parent instanceof GrAnonymousClassDefinition ? "class" : "class";
  final GroovyFile file=GroovyPsiElementFactory.getInstance(project).createGroovyFile(prefix + " Name {\n" + declarationsWithoutSemicolon+ "\n}",false,null);
  GrTypeDefinition[] typeDefs=file.getTypeDefinitions();
  if (typeDefs.length != 1)   return false;
  GrTypeDefinition clazz=typeDefs[0];
  GrMembersDeclaration[] declarations=clazz.getMemberDeclarations();
  if (declarations.length != 2)   return false;
  return checkStatementsAreEqual(prev,declarations[0]) && checkStatementsAreEqual(next,declarations[1]);
}
