{
  Map<GlobalSearchScope,Map<String,PsiClass[]>> scopeMap=SoftReference.dereference(myDumbModeFullCache);
  if (scopeMap == null) {
    myDumbModeFullCache=new SoftReference<Map<GlobalSearchScope,Map<String,PsiClass[]>>>(scopeMap=ContainerUtil.newConcurrentMap());
  }
  Map<String,PsiClass[]> map=scopeMap.get(scope);
  if (map == null) {
    PsiClass[] array=findClassesHeuristically(name,scope);
    if (array != null)     return array;
    map=new HashMap<String,PsiClass[]>();
    for (    PsiClass psiClass : getClasses(scope)) {
      String psiClassName=psiClass.getName();
      if (psiClassName != null) {
        PsiClass[] existing=map.get(psiClassName);
        map.put(psiClassName,existing == null ? new PsiClass[]{psiClass} : ArrayUtil.append(existing,psiClass));
      }
    }
    scopeMap.put(scope,map);
  }
  PsiClass[] classes=map.get(name);
  return classes == null ? PsiClass.EMPTY_ARRAY : classes;
}
