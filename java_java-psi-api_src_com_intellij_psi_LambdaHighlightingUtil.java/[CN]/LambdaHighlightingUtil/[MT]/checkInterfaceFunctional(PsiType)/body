{
  if (functionalInterfaceType instanceof PsiIntersectionType) {
    for (    PsiType type : ((PsiIntersectionType)functionalInterfaceType).getConjuncts()) {
      if (checkInterfaceFunctional(type) == null)       return null;
    }
  }
  final PsiClassType.ClassResolveResult resolveResult=PsiUtil.resolveGenericsClassInType(GenericsUtil.eliminateWildcards(functionalInterfaceType));
  final PsiClass aClass=resolveResult.getElement();
  if (aClass != null) {
    if (checkReturnTypeApplicable(resolveResult,aClass)) {
      return "No instance of type " + functionalInterfaceType.getPresentableText() + " exists so that lambda expression can be type-checked";
    }
    return checkInterfaceFunctional(aClass);
  }
  return functionalInterfaceType.getPresentableText() + " is not a functional interface";
}
