{
  final PsiParameter[] lambdaParameters=expression.getParameterList().getParameters();
  if (lambdaParameters.length != methodParameters.length) {
    return expression;
  }
 else {
    boolean hasFormalParameterTypes=expression.hasFormalParameterTypes();
    for (int i=0; i < lambdaParameters.length; i++) {
      PsiParameter lambdaParameter=lambdaParameters[i];
      PsiType lambdaParameterType=lambdaParameter.getType();
      PsiType substitutedParamType=substitutor.substitute(methodParameters[i].getType());
      if (hasFormalParameterTypes) {
        if (!PsiTypesUtil.compareTypes(lambdaParameterType,substitutedParamType,true)) {
          return lambdaParameter;
        }
      }
 else {
        if (!TypeConversionUtil.isAssignable(lambdaParameterType,substitutedParamType)) {
          return lambdaParameter;
        }
      }
    }
  }
  return null;
}
