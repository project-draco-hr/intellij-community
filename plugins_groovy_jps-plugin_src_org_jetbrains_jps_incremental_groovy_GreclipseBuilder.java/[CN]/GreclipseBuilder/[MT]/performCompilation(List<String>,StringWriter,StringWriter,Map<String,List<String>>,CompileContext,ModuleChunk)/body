{
  try {
    Class<?> mainClass=Class.forName(GreclipseMain.class.getName(),true,myGreclipseLoader);
    Constructor<?> constructor=mainClass.getConstructor(PrintWriter.class,PrintWriter.class,Map.class,Map.class);
    Method compileMethod=mainClass.getMethod("compile",String[].class);
    HashMap<String,Object> customDefaultOptions=ContainerUtil.newHashMap();
    customDefaultOptions.put("org.eclipse.jdt.core.compiler.groovy.groovyClassLoaderPath",getClasspathString(chunk));
    customDefaultOptions.put("org.eclipse.jdt.core.compiler.groovy.groovyProjectName",chunk.getPresentableShortName());
    Object main=constructor.newInstance(new PrintWriter(out),new PrintWriter(err),customDefaultOptions,outputs);
    return (Boolean)compileMethod.invoke(main,new Object[]{ArrayUtil.toStringArray(args)});
  }
 catch (  Exception e) {
    context.processMessage(new CompilerMessage(getPresentableName(),e));
    return false;
  }
}
