{
  if (childDescriptor1.getType() != childDescriptor2.getType()) {
    return false;
  }
  final PsiElement element1=childDescriptor1.getElement();
  final PsiElement element2=childDescriptor2.getElement();
  if (duplicatesProfile != null) {
    final ChildRole role1=element1 != null ? duplicatesProfile.getRole(element1) : null;
    final ChildRole role2=element2 != null ? duplicatesProfile.getRole(element2) : null;
    if (role1 == role2 && skippedRoles.contains(role1)) {
      return true;
    }
  }
switch (childDescriptor1.getType()) {
case DEFAULT:
    return g.match(element1,element2);
case OPTIONALLY_IN_PATTERN:
case OPTIONALLY:
  return g.matchOptionally(element1,element2);
case CHILDREN:
return g.matchSons(element1,element2);
case CHILDREN_OPTIONALLY_IN_PATTERN:
case CHILDREN_OPTIONALLY:
return g.matchSonsOptionally(element1,element2);
case CHILDREN_IN_ANY_ORDER:
return g.matchSonsInAnyOrder(element1,element2);
default :
return false;
}
}
