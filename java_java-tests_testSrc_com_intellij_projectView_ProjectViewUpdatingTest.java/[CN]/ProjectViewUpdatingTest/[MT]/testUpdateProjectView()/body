{
  getProjectTreeStructure().setProviders(new ClassesTreeStructureProvider(myProject),new FormMergerTreeStructureProvider(myProject));
  final AbstractProjectViewPSIPane pane=myStructure.createPane();
  final JTree tree=pane.getTree();
  PlatformTestUtil.assertTreeEqual(tree,"-Project\n" + " +PsiDirectory: updateProjectView\n" + getRootFiles() + " +External Libraries\n");
  final PsiJavaFile classFile=(PsiJavaFile)getContentDirectory().findSubdirectory("src").findSubdirectory("com").findSubdirectory("package1").findFile("Form1.java");
  final PsiClass aClass=classFile.getClasses()[0];
  final PsiFile containingFile=aClass.getContainingFile();
  pane.select(aClass,containingFile.getVirtualFile(),true);
  PlatformTestUtil.assertTreeEqual(pane.getTree(),"-Project\n" + " -PsiDirectory: updateProjectView\n" + "  -PsiDirectory: src\n"+ "   -PsiDirectory: com\n"+ "    -PsiDirectory: package1\n"+ "     Class1\n"+ "     +Class2.java\n"+ "     Class4.java\n"+ "     Form2.form\n"+ "     -Form:Form1\n"+ "      [Form1]\n"+ "      Form1.form\n" + getRootFiles() + " +External Libraries\n",true);
  CommandProcessor.getInstance().executeCommand(myProject,new Runnable(){
    @Override public void run(){
      new RenameProcessor(myProject,aClass,"Form1_renamed",false,false).run();
    }
  }
,null,null);
  PlatformTestUtil.waitForAlarm(600);
  PlatformTestUtil.assertTreeEqual(tree,"-Project\n" + " -PsiDirectory: updateProjectView\n" + "  -PsiDirectory: src\n"+ "   -PsiDirectory: com\n"+ "    -PsiDirectory: package1\n"+ "     Class1\n"+ "     +Class2.java\n"+ "     Class4.java\n"+ "     Form2.form\n"+ "     -Form:Form1_renamed\n"+ "      Form1.form\n"+ "      [Form1_renamed]\n" + getRootFiles() + " +External Libraries\n",true);
  TreeUtil.collapseAll(pane.getTree(),-1);
  PlatformTestUtil.assertTreeEqual(tree,"-Project\n" + " +PsiDirectory: updateProjectView\n" + getRootFiles() + " +External Libraries\n");
  final PsiClass aClass2=JavaDirectoryService.getInstance().createClass(getContentDirectory().findSubdirectory("src").findSubdirectory("com").findSubdirectory("package1"),"Class6");
  PlatformTestUtil.waitForAlarm(600);
  final PsiFile containingFile2=aClass2.getContainingFile();
  pane.select(aClass2,containingFile2.getVirtualFile(),true);
  PlatformTestUtil.assertTreeEqual(pane.getTree(),"-Project\n" + " -PsiDirectory: updateProjectView\n" + "  -PsiDirectory: src\n"+ "   -PsiDirectory: com\n"+ "    -PsiDirectory: package1\n"+ "     Class1\n"+ "     +Class2.java\n"+ "     Class4.java\n"+ "     [Class6]\n"+ "     Form2.form\n"+ "     +Form:Form1_renamed\n" + getRootFiles() + " +External Libraries\n",true);
}
