{
  final List<String> superClassNames=new ArrayList<String>();
  for (  final PyClass superClass : Collections2.filter(Arrays.asList(superClasses),NotNullPredicate.INSTANCE)) {
    if (superClass.getName() != null) {
      superClassNames.add(superClass.getName());
      PyClassRefactoringUtil.insertImport(clazz,superClass);
    }
  }
  PyArgumentList superClassExpressionList=clazz.getSuperClassExpressionList();
  PyElementGenerator generator=PyElementGenerator.getInstance(project);
  if (superClassExpressionList != null) {
    for (    String superClassName : superClassNames) {
      superClassExpressionList.addArgument(generator.createExpressionFromText(superClassName));
    }
  }
 else {
    String superClassText=String.format("(%s)",StringUtil.join(superClassNames,","));
    clazz.addAfter(generator.createExpressionFromText(superClassText),clazz.getNameNode().getPsi());
  }
}
