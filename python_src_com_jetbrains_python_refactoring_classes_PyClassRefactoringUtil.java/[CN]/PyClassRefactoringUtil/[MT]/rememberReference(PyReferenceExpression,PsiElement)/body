{
  final PyExpression qualifier=node.getQualifier();
  if (qualifier != null && !(resolveExpression(qualifier) instanceof PyImportedModule)) {
    return;
  }
  final PsiElement target=resolveExpression(node);
  if (target instanceof PsiNamedElement && !PsiTreeUtil.isAncestor(element,target,false)) {
    final NameDefiner importElement=getImportElement(node);
    if (!PyUtil.inSameFile(element,target) && importElement == null && !(target instanceof PsiFileSystemItem)) {
      return;
    }
    node.putCopyableUserData(ENCODED_IMPORT,(PsiNamedElement)target);
    if (importElement instanceof PyImportElement) {
      node.putCopyableUserData(ENCODED_IMPORT_AS,((PyImportElement)importElement).getAsName());
    }
    node.putCopyableUserData(ENCODED_USE_FROM_IMPORT,qualifier == null);
  }
}
