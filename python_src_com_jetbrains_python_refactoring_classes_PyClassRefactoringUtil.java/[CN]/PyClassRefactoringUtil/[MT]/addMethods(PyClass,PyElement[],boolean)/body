{
  if (elements.length == 0)   return;
  final Project project=superClass.getProject();
  final String text=prepareClassText(superClass,elements,up,false,null);
  if (text == null)   return;
  final PyClass newClass=PyElementGenerator.getInstance(project).createFromText(LanguageLevel.getDefault(),PyClass.class,text);
  final PyStatementList statements=superClass.getStatementList();
  final PyStatementList newStatements=newClass.getStatementList();
  if (statements.getStatements().length != 0) {
    for (    PyElement newStatement : newStatements.getStatements()) {
      if (newStatement instanceof PyExpressionStatement && newStatement.getFirstChild() instanceof PyStringLiteralExpression)       continue;
      final PsiElement anchor=statements.add(newStatement);
      final Set<PsiElement> comments=PyUtil.getComments(newStatement);
      for (      PsiElement comment : comments) {
        statements.addBefore(comment,anchor);
      }
    }
  }
 else {
    statements.replace(newStatements);
  }
}
