{
  if (elements.length == 0)   return;
  final Project project=superClass.getProject();
  final StringBuilder builder=new StringBuilder("class Foo:\n\n");
  boolean hasChanges=false;
  PsiElement sibling=elements[0].getPrevSibling();
  sibling=sibling == null ? elements[0].getParent().getPrevSibling() : sibling;
  final String white=sibling.getText();
  for (  PyElement element : elements) {
    final String name=element.getName();
    if (name != null && (up || superClass.findMethodByName(name,false) == null)) {
      builder.append("  ").append(element.getText()).append("\n\n");
      hasChanges=true;
    }
  }
  if (!hasChanges)   return;
  final String text=builder.toString();
  final PyClass statement=PythonLanguage.getInstance().getElementGenerator().createFromText(project,PyClass.class,text);
  if (superClass.getMethods().length != 0) {
    final PyFunction previousLastMethod=superClass.getMethods()[0];
    PyPsiUtils.addBeforeInParent(previousLastMethod,statement.getLastChild().getChildren());
    PyPsiUtils.addBeforeInParent(previousLastMethod,statement.getLastChild().getPrevSibling());
  }
 else {
    PyPsiUtils.addToEnd(superClass,statement.getLastChild());
  }
}
