{
  if (elements.length == 0)   return;
  final Project project=superClass.getProject();
  final String text=prepareClassText(superClass,elements,up,false,null);
  if (text == null)   return;
  final PyClass newClass=PythonLanguage.getInstance().getElementGenerator().createFromText(project,PyClass.class,text);
  if (superClass.getMethods().length != 0) {
    final PyFunction previousLastMethod=superClass.getMethods()[0];
    final ASTNode node=newClass.getLastChild().getNode();
    for (    ASTNode child : node.getChildren(null)) {
      PyPsiUtils.addBeforeInParent(previousLastMethod,child.getPsi());
    }
    PyPsiUtils.addBeforeInParent(previousLastMethod,newClass.getLastChild().getPrevSibling());
    PyPsiUtils.addBeforeInParent(previousLastMethod,newClass.getLastChild());
  }
 else {
    PyPsiUtils.addToEnd(superClass,newClass.getLastChild());
  }
}
