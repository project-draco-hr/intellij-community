{
  if (elements.length == 0)   return;
  final PyStatementList statements=superClass.getStatementList();
  for (  PyElement newStatement : elements) {
    if (up && newStatement instanceof PyFunction) {
      final String name=newStatement.getName();
      if (name != null && superClass.findMethodByName(name,false) != null) {
        continue;
      }
    }
    if (newStatement instanceof PyExpressionStatement && newStatement.getFirstChild() instanceof PyStringLiteralExpression)     continue;
    final PsiElement anchor=statements.add(newStatement);
    restoreReferences((PyElement)anchor);
    final Set<PsiElement> comments=PyUtil.getComments(newStatement);
    for (    PsiElement comment : comments) {
      statements.addBefore(comment,anchor);
    }
  }
  PyPsiUtils.removeRedundantPass(statements);
}
