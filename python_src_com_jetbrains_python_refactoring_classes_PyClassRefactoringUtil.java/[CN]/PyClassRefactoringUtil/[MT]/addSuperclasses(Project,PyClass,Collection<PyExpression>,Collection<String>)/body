{
  if (superClassesAsStrings.size() == 0)   return;
  PyArgumentList argList=superClass.getSuperClassExpressionList();
  if (argList != null) {
    if (superClassesAsPsi != null) {
      for (      PyExpression element : superClassesAsPsi) {
        argList.addArgument(element);
      }
    }
 else {
      for (      String s : superClassesAsStrings) {
        argList.addArgument(PyElementGenerator.getInstance(project).createExpressionFromText(s));
      }
    }
  }
 else {
    addSuperclasses(project,superClass,superClassesAsStrings);
  }
}
