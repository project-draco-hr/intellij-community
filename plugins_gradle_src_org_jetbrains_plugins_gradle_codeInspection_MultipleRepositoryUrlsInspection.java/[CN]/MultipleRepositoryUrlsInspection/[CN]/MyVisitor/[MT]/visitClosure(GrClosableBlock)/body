{
  PsiFile file=closure.getContainingFile();
  if (file == null || !FileUtilRt.extensionEquals(file.getName(),GradleConstants.EXTENSION))   return;
  super.visitClosure(closure);
  GrMethodCall mavenMethodCall=PsiTreeUtil.getParentOfType(closure,GrMethodCall.class);
  if (mavenMethodCall == null)   return;
  GrExpression mavenMethodExpression=mavenMethodCall.getInvokedExpression();
  if (mavenMethodExpression == null || !ArrayUtil.contains(mavenMethodExpression.getText(),"maven","ivy")) {
    return;
  }
  GrMethodCall repositoryMethodCall=PsiTreeUtil.getParentOfType(mavenMethodCall,GrMethodCall.class);
  if (repositoryMethodCall == null)   return;
  GrExpression repositoryMethodExpression=repositoryMethodCall.getInvokedExpression();
  if (repositoryMethodExpression == null || !repositoryMethodExpression.getText().equals("repositories"))   return;
  List<GrCallExpression> statements=findUrlCallExpressions(closure);
  if (statements.size() > 1) {
    registerError(closure);
    registerError(closure,GradleInspectionBundle.message("multiple.repository.urls"),new LocalQuickFix[]{new MultipleRepositoryUrlsFix(closure,mavenMethodExpression.getText())},ProblemHighlightType.GENERIC_ERROR);
  }
}
