{
  try {
    File zipFile=new File(myLocationDir,myZipName + ".zip");
    ZipOutputStream zos=new ZipOutputStream(new BufferedOutputStream(new FileOutputStream(zipFile)));
    final CCLanguageManager manager=CCUtils.getStudyLanguageManager(course);
    for (    Map.Entry<String,Lesson> entry : lessons.entrySet()) {
      final VirtualFile lessonDir=baseDir.findChild(entry.getKey());
      if (lessonDir == null)       continue;
      ZipUtil.addFileOrDirRecursively(zos,null,new File(lessonDir.getPath()),lessonDir.getName(),new FileFilter(){
        @Override public boolean accept(        File pathname){
          String name=pathname.getName();
          String nameWithoutExtension=FileUtil.getNameWithoutExtension(pathname);
          if (nameWithoutExtension.endsWith(".answer") || name.contains("_windows")) {
            return false;
          }
          return manager == null || manager.packFile(pathname);
        }
      }
,null);
    }
    packFile("hints",zos,baseDir);
    packFile("course.json",zos,baseDir);
    if (manager != null) {
      String[] additionalFilesToPack=manager.getAdditionalFilesToPack();
      for (      String filename : additionalFilesToPack) {
        packFile(filename,zos,baseDir);
      }
    }
    zos.close();
    Messages.showInfoMessage("Course archive was saved to " + zipFile.getPath(),"Course Archive Was Created Successfully");
  }
 catch (  IOException e1) {
    LOG.error(e1);
  }
}
