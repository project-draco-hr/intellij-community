{
  AutoImportQuickFix fix=new AutoImportQuickFix(node,reference,refText,!PyCodeInsightSettings.getInstance().PREFER_FROM_IMPORT);
  Set<String> seenFileNames=new HashSet<String>();
  PsiFile existingImportFile=addCandidatesFromExistingImports(node,refText,fix,seenFileNames);
  if (fix.getCandidatesCount() == 0 || fix.hasProjectImports() || Registry.is("python.import.always.ask")) {
    ProgressManager.checkCanceled();
    addSymbolImportCandidates(node,refText,asName,fix,seenFileNames,existingImportFile);
  }
  for (  PyImportCandidateProvider provider : Extensions.getExtensions(PyImportCandidateProvider.EP_NAME)) {
    provider.addImportCandidates(reference,refText,fix);
  }
  if (fix.getCandidatesCount() > 0) {
    fix.sortCandidates();
    return fix;
  }
  return null;
}
