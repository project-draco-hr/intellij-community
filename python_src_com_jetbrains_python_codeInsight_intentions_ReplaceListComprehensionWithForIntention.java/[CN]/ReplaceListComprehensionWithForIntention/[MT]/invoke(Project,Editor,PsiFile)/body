{
  PyListCompExpression expression=PsiTreeUtil.getTopmostParentOfType(file.findElementAt(editor.getCaretModel().getOffset()),PyListCompExpression.class);
  if (expression == null) {
    return;
  }
  PsiElement parent=expression.getParent();
  PyElementGenerator elementGenerator=PyElementGenerator.getInstance(project);
  if (parent instanceof PyAssignmentStatement) {
    PsiElement leftExpr=((PyAssignmentStatement)parent).getLeftHandSideExpression();
    PyAssignmentStatement initAssignment=elementGenerator.createFromText(LanguageLevel.forElement(expression),PyAssignmentStatement.class,leftExpr.getText() + " = []");
    PyForStatement forStatement=createForLoop(expression,elementGenerator,leftExpr.getText() + ".append(" + getResult(expression).getText()+ ")");
    PyStatementList stList=new PyStatementListImpl(initAssignment.getNode());
    stList.add(initAssignment);
    stList.add(forStatement);
    stList.getStatements()[0].delete();
    parent.replace(stList);
  }
 else   if (parent instanceof PyPrintStatement) {
    PyForStatement forStatement=createForLoop(expression,elementGenerator,"print " + "(" + getResult(expression).getText() + ")");
    parent.replace(forStatement);
  }
}
