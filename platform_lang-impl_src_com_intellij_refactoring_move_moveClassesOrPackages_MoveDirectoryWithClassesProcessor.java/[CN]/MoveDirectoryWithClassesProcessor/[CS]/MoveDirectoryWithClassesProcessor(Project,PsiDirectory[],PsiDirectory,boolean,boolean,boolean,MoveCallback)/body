{
  super(project);
  if (targetDirectory != null) {
    final List<PsiDirectory> dirs=new ArrayList<>(Arrays.asList(directories));
    for (Iterator<PsiDirectory> iterator=dirs.iterator(); iterator.hasNext(); ) {
      final PsiDirectory directory=iterator.next();
      if (targetDirectory.equals(directory.getParentDirectory()) || targetDirectory.equals(directory)) {
        iterator.remove();
      }
    }
    directories=dirs.toArray(new PsiDirectory[dirs.size()]);
  }
  myDirectories=directories;
  myTargetDirectory=targetDirectory;
  mySearchInComments=searchInComments;
  mySearchInNonJavaFiles=searchInNonJavaFiles;
  myMoveCallback=moveCallback;
  myFilesToMove=new HashMap<>();
  myNestedDirsToMove=new HashMap<>();
  for (  PsiDirectory dir : directories) {
    collectFiles2Move(myFilesToMove,myNestedDirsToMove,dir,includeSelf ? dir.getParentDirectory() : dir,getTargetDirectory(dir));
  }
}
