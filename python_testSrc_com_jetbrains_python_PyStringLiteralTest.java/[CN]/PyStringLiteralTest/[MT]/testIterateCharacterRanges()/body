{
  final PyStringLiteralExpression expr=createLiteralFromText("'\\nfoo'  'bar'");
  assertNotNull(expr);
  final List<String> characters=new ArrayList<String>();
  expr.iterateCharacterRanges(new PyStringLiteralExpression.TextRangeConsumer(){
    @Override public boolean process(    int startOffset,    int endOffset,    String value){
      characters.add(value);
      return true;
    }
  }
);
  final List<String> expected=Arrays.asList("\n","f","o","o","b","a","r");
  assertSameElements(characters,expected);
}
