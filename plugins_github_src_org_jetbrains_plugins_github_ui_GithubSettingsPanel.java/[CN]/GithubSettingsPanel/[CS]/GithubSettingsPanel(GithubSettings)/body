{
  mySettings=settings;
  mySignupTextField.addHyperlinkListener(new HyperlinkAdapter(){
    @Override protected void hyperlinkActivated(    final HyperlinkEvent e){
      BrowserUtil.browse(e.getURL());
    }
  }
);
  mySignupTextField.setText("<html>Do not have an account at github.com? <a href=\"https://github.com\">" + "Sign up" + "</a></html>");
  mySignupTextField.setBackground(myPane.getBackground());
  mySignupTextField.setCursor(new Cursor(Cursor.HAND_CURSOR));
  myAuthTypeComboBox.addItem(AUTH_PASSWORD);
  myAuthTypeComboBox.addItem(AUTH_TOKEN);
  reset();
  myTestButton.addActionListener(new ActionListener(){
    @Override public void actionPerformed(    ActionEvent e){
      try {
        if (GithubUtil.checkAuthData(getAuthData(),getLogin())) {
          Messages.showInfoMessage(myPane,"Connection successful","Success");
        }
 else {
          Messages.showErrorDialog(myPane,"Can't login to " + getHost() + " using given credentials","Login Failure");
        }
      }
 catch (      IOException ex) {
        LOG.info(ex);
        Messages.showErrorDialog(myPane,String.format("Can't login to %s: %s",getHost(),GithubUtil.getErrorTextFromException(ex)),"Login Failure");
      }
    }
  }
);
  myPasswordField.getDocument().addDocumentListener(new DocumentListener(){
    @Override public void insertUpdate(    DocumentEvent e){
      myCredentialsModified=true;
    }
    @Override public void removeUpdate(    DocumentEvent e){
      myCredentialsModified=true;
    }
    @Override public void changedUpdate(    DocumentEvent e){
      myCredentialsModified=true;
    }
  }
);
  DocumentListener passwordEraser=new DocumentListener(){
    @Override public void insertUpdate(    DocumentEvent e){
      if (!myCredentialsModified) {
        setPassword("");
        myCredentialsModified=true;
      }
    }
    @Override public void removeUpdate(    DocumentEvent e){
      if (!myCredentialsModified) {
        setPassword("");
        myCredentialsModified=true;
      }
    }
    @Override public void changedUpdate(    DocumentEvent e){
      if (!myCredentialsModified) {
        setPassword("");
        myCredentialsModified=true;
      }
    }
  }
;
  myHostTextField.getDocument().addDocumentListener(passwordEraser);
  myLoginTextField.getDocument().addDocumentListener(passwordEraser);
  myPasswordField.addFocusListener(new FocusListener(){
    @Override public void focusGained(    FocusEvent e){
      if (!myCredentialsModified) {
        setPassword("");
        myCredentialsModified=true;
      }
    }
    @Override public void focusLost(    FocusEvent e){
    }
  }
);
  myAuthTypeComboBox.addItemListener(new ItemListener(){
    @Override public void itemStateChanged(    ItemEvent e){
      setPassword("");
      myCredentialsModified=true;
    }
  }
);
}
