{
  PsiBuilder.Marker parameterList;
  parameterList=myBuilder.mark();
  if (advanceLexer) {
    myBuilder.advanceLexer();
  }
  boolean first=true;
  while (myBuilder.getTokenType() != endToken) {
    if (first) {
      first=false;
    }
 else {
      if (myBuilder.getTokenType() == PyTokenTypes.COMMA) {
        myBuilder.advanceLexer();
      }
 else {
        myBuilder.error(message("PARSE.expected.comma.lpar.rpar"));
        break;
      }
    }
    if (myBuilder.getTokenType() == PyTokenTypes.LPAR) {
      parseParameterSubList();
      continue;
    }
    if (!parseParameter(endToken,isLambda)) {
      break;
    }
  }
  if (myBuilder.getTokenType() == endToken && endToken == PyTokenTypes.RPAR) {
    myBuilder.advanceLexer();
  }
  parameterList.done(PyElementTypes.PARAMETER_LIST);
  if (myBuilder.getTokenType() == endToken && endToken == PyTokenTypes.COLON) {
    myBuilder.advanceLexer();
  }
}
