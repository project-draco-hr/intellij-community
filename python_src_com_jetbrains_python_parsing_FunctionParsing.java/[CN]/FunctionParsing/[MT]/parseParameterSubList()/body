{
  assertCurrentToken(PyTokenTypes.LPAR);
  myBuilder.advanceLexer();
  while (true) {
    if (myBuilder.getTokenType() == PyTokenTypes.IDENTIFIER) {
      final PsiBuilder.Marker parameter=myBuilder.mark();
      myBuilder.advanceLexer();
      parameter.done(PyElementTypes.FORMAL_PARAMETER);
    }
 else     if (myBuilder.getTokenType() == PyTokenTypes.LPAR) {
      parseParameterSubList();
    }
    if (myBuilder.getTokenType() == PyTokenTypes.RPAR) {
      myBuilder.advanceLexer();
      break;
    }
    if (myBuilder.getTokenType() != PyTokenTypes.COMMA) {
      myBuilder.error(", or ( or ) expected");
      break;
    }
    myBuilder.advanceLexer();
  }
}
