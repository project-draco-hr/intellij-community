{
  LOG.assertTrue(builder.getTokenType() == PyTokenTypes.LPAR);
  builder.advanceLexer();
  while (true) {
    if (builder.getTokenType() == PyTokenTypes.IDENTIFIER) {
      final PsiBuilder.Marker parameter=builder.mark();
      builder.advanceLexer();
      parameter.done(PyElementTypes.FORMAL_PARAMETER);
    }
 else     if (builder.getTokenType() == PyTokenTypes.LPAR) {
      parseParameterSubList(builder);
    }
    if (builder.getTokenType() == PyTokenTypes.RPAR) {
      builder.advanceLexer();
      break;
    }
    if (builder.getTokenType() != PyTokenTypes.COMMA) {
      builder.error(", or ( or ) expected");
      break;
    }
    builder.advanceLexer();
  }
}
