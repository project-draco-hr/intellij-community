{
  GeneralSettings.ProcessCloseConfirmation confirmation=GeneralSettings.getInstance().getProcessCloseConfirmation();
  if (confirmation != GeneralSettings.ProcessCloseConfirmation.ASK) {
    if (confirmation == GeneralSettings.ProcessCloseConfirmation.DISCONNECT && !canDisconnect) {
      confirmation=GeneralSettings.ProcessCloseConfirmation.TERMINATE;
    }
    return confirmation;
  }
  List<String> options=new ArrayList<>(3);
  options.add(ExecutionBundle.message("button.terminate"));
  if (canDisconnect) {
    options.add(ExecutionBundle.message("button.disconnect"));
  }
  options.add(CommonBundle.getCancelButtonText());
  DialogWrapper.DoNotAskOption.Adapter doNotAskOption=new DialogWrapper.DoNotAskOption.Adapter(){
    @Override public void rememberChoice(    boolean isSelected,    int exitCode){
      if (isSelected) {
        GeneralSettings.ProcessCloseConfirmation confirmation=getConfirmation(exitCode,canDisconnect);
        if (confirmation != null) {
          GeneralSettings.getInstance().setProcessCloseConfirmation(confirmation);
          ApplicationManager.getApplication().saveSettings();
        }
      }
    }
  }
;
  return getConfirmation(Messages.showDialog(project,ExecutionBundle.message("terminate.process.confirmation.text",sessionName),ExecutionBundle.message("process.is.running.dialog.title",sessionName),ArrayUtil.toStringArray(options),canDisconnect && defaultDisconnect ? 1 : 0,Messages.getWarningIcon(),doNotAskOption),canDisconnect);
}
