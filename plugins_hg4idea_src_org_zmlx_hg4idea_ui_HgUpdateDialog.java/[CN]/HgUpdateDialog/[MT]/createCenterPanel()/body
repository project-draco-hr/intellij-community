{
  MigLayout migLayout=new MigLayout("flowy,ins 0, fill");
  JPanel contentPane=new JPanel(migLayout);
  contentPane.setBorder(IdeBorderFactory.createTitledBorder("Update Type"));
  myMergeRadioButton=new JRadioButton("Merge",true);
  myMergeRadioButton.setMnemonic('m');
  myMergeRadioButton.setToolTipText("Merge if pulling resulted in extra heads");
  myCommitAfterMergeCheckBox=new JCheckBox("Commit after merge without conflicts",false);
  myCommitAfterMergeCheckBox.setMnemonic('c');
  myCommitAfterMergeCheckBox.setToolTipText("Commit automatically after the merge");
  myRebaseRadioButton=new JRadioButton("Rebase",false);
  myRebaseRadioButton.setToolTipText("Rebase changesets to a branch tip as destination");
  myRebaseRadioButton.setMnemonic('r');
  final ButtonGroup radioButtonGroup=new ButtonGroup();
  radioButtonGroup.add(myMergeRadioButton);
  radioButtonGroup.add(myRebaseRadioButton);
  contentPane.add(myMergeRadioButton,"left");
  contentPane.add(myCommitAfterMergeCheckBox,"gapx 5%");
  contentPane.add(myRebaseRadioButton,"left");
  myMergeRadioButton.addItemListener(new ItemListener(){
    public void itemStateChanged(    ItemEvent e){
      updateEnabledStates();
    }
  }
);
  updateEnabledStates();
  return contentPane;
}
