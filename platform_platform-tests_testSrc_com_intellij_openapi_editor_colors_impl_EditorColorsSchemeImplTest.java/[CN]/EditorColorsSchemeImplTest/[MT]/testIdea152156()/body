{
  EditorColorsScheme defaultScheme=EditorColorsManager.getInstance().getScheme(EditorColorsScheme.DEFAULT_SCHEME_NAME);
  EditorColorsScheme parentScheme=(EditorColorsScheme)defaultScheme.clone();
  parentScheme.setName("DefaultTest");
  EditorColorsScheme editorColorsScheme=new EditorColorsSchemeImpl(parentScheme);
  editorColorsScheme.setName("test");
  TextAttributes defaultAttributes=new TextAttributes(null,null,Color.BLACK,EffectType.LINE_UNDERSCORE,Font.PLAIN);
  TextAttributesKey testKey=TextAttributesKey.createTextAttributesKey("TEST_KEY",DefaultLanguageHighlighterColors.PARAMETER);
  parentScheme.setAttributes(testKey,defaultAttributes);
  editorColorsScheme.setAttributes(testKey,USE_INHERITED_MARKER);
  try {
    Element root=new Element("scheme");
    ((AbstractColorsScheme)editorColorsScheme).writeExternal(root);
    EditorColorsScheme targetScheme=new EditorColorsSchemeImpl(parentScheme);
    for (    final Element child : root.getChildren()) {
      if ("attributes".equals(child.getName())) {
        ((EditorColorsSchemeImpl)targetScheme).readAttributes(child);
      }
    }
    TextAttributes targetAttributes=((AbstractColorsScheme)targetScheme).getDirectlyDefinedAttributes(testKey);
    assertTrue(targetAttributes != null && targetAttributes == USE_INHERITED_MARKER);
  }
  finally {
    TextAttributesKey.removeTextAttributesKey(testKey.getExternalName());
  }
}
