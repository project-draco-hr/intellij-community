{
  super.visitMethodCallExpression(expression);
  final PsiReferenceExpression methodExpression=expression.getMethodExpression();
  if (!ThreadingUtils.isNotifyOrNotifyAllCall(expression) && !ThreadingUtils.isWaitCall(expression)) {
    return;
  }
  final PsiExpression qualifier=ParenthesesUtils.stripParentheses(methodExpression.getQualifierExpression());
  if (qualifier == null || (qualifier instanceof PsiThisExpression)) {
    registerMethodCallError(expression,Boolean.FALSE);
  }
 else   if (hasJavaLangClassType(qualifier)) {
    registerMethodCallError(expression,Boolean.TRUE);
  }
}
