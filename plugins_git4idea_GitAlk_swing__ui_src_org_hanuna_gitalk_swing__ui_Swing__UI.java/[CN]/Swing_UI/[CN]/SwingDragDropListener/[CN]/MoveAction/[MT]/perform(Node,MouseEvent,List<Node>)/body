{
  Set<Node> upRefNodes=ui_controller.getDataPackUtils().getUpRefNodes(commit);
  List<Ref> refs=new ArrayList<Ref>();
  for (  Node refNode : upRefNodes) {
    List<Ref> nodeRefs=ui_controller.getDataPack().getRefsModel().refsToCommit(refNode.getCommitHash());
    for (    Ref ref : nodeRefs) {
      if (ref.getType() == Ref.RefType.LOCAL_BRANCH || ref.getType() == Ref.RefType.REMOTE_BRANCH) {
        refs.add(ref);
      }
    }
  }
  if (refs.size() == 1) {
    Ref ref=refs.get(0);
    ui_controller.getInteractiveRebaseBuilder().moveCommits(ref,commit,myPosition,commitsBeingDragged);
  }
 else {
    JBPopupFactory.getInstance().createListPopup(new BaseListPopupStep<Ref>("Select target branch",refs.toArray(new Ref[refs.size()])){
      @NotNull @Override public String getTextFor(      Ref value){
        return value.getName();
      }
      @Override public PopupStep onChosen(      Ref selectedValue,      boolean finalChoice){
        ui_controller.getInteractiveRebaseBuilder().moveCommits(selectedValue,commit,myPosition,commitsBeingDragged);
        return FINAL_CHOICE;
      }
      @Override public boolean isSpeedSearchEnabled(){
        return true;
      }
    }
).showInCenterOf(e.getComponent());
  }
}
