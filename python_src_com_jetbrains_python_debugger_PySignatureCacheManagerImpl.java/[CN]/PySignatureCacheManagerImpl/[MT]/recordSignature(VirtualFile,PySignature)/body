{
  byte[] data;
  try {
    data=CALL_SIGNATURES_ATTRIBUTE.readAttributeBytes(file);
  }
 catch (  Exception e) {
    data=null;
  }
  String[] lines;
  if (data != null) {
    lines=(new String(data)).split("\n");
  }
 else {
    lines=new String[0];
  }
  boolean found=false;
  int i=0;
  for (  String sign : lines) {
    String[] parts=sign.split("\t");
    if (parts.length > 0 && parts[0].equals(signature.getFunctionName())) {
      found=true;
      if (SHOULD_OVERWRITE_TYPES) {
        lines[i]=signatureToString(signature);
      }
 else {
        lines[i]=signatureToString(stringToSignature(file.getCanonicalPath(),lines[i]).merge(signature));
      }
    }
    i++;
  }
  if (!found) {
    String[] lines2=new String[lines.length + 1];
    System.arraycopy(lines,0,lines2,0,lines.length);
    lines2[lines2.length - 1]=signatureToString(signature);
    lines=lines2;
  }
  String attrString=StringUtil.join(lines,"\n");
  try {
    CALL_SIGNATURES_ATTRIBUTE.writeAttributeBytes(file,attrString.getBytes());
  }
 catch (  IOException e) {
    LOG.warn("Can't write attribute " + file.getCanonicalPath() + " "+ attrString);
  }
}
