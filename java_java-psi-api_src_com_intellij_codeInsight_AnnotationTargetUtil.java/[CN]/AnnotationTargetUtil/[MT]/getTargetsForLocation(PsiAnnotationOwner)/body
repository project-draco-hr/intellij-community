{
  if (owner == null) {
    return TargetType.EMPTY_ARRAY;
  }
  if (owner instanceof PsiType || owner instanceof PsiTypeElement) {
    return TYPE_USE_TARGETS;
  }
  if (owner instanceof PsiTypeParameter) {
    return TYPE_PARAMETER_TARGETS;
  }
  if (owner instanceof PsiModifierList) {
    PsiElement element=((PsiModifierList)owner).getParent();
    if (element instanceof PsiPackageStatement) {
      return PACKAGE_TARGETS;
    }
    if (element instanceof PsiClass) {
      if (((PsiClass)element).isAnnotationType()) {
        return ANNOTATION_TARGETS;
      }
 else {
        return TYPE_TARGETS;
      }
    }
    if (element instanceof PsiMethod) {
      if (((PsiMethod)element).isConstructor()) {
        return CONSTRUCTOR_TARGETS;
      }
 else {
        return METHOD_TARGETS;
      }
    }
    if (element instanceof PsiField) {
      return FIELD_TARGETS;
    }
    if (element instanceof PsiParameter) {
      PsiElement scope=element.getParent();
      if (scope instanceof PsiForeachStatement) {
        return LOCAL_VARIABLE_TARGETS;
      }
      if (scope instanceof PsiParameterList && scope.getParent() instanceof PsiLambdaExpression && ((PsiParameter)element).getTypeElement() == null) {
        return TargetType.EMPTY_ARRAY;
      }
      return PARAMETER_TARGETS;
    }
    if (element instanceof PsiLocalVariable) {
      return LOCAL_VARIABLE_TARGETS;
    }
    if (element instanceof PsiReceiverParameter) {
      return TYPE_USE_TARGETS;
    }
  }
  return TargetType.EMPTY_ARRAY;
}
