{
  PyArgumentList argumentList=PsiTreeUtil.getParentOfType(referenceExpression,PyArgumentList.class);
  if (argumentList != null) {
    PyReferenceExpression pyReferenceExpression=PsiTreeUtil.getPrevSiblingOfType(argumentList,PyReferenceExpression.class);
    PyStringLiteralExpression formattedString=PsiTreeUtil.getChildOfType(pyReferenceExpression,PyStringLiteralExpression.class);
    if (formattedString != null) {
      List<LookupElementBuilder> keys=getLookupBuilders(formattedString);
      result.addAllElements(keys);
    }
  }
}
