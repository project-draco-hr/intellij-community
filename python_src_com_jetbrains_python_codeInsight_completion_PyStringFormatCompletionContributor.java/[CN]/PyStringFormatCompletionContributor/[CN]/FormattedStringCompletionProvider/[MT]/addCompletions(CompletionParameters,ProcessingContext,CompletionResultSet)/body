{
  PsiElement original=parameters.getOriginalPosition();
  if (original != null) {
    PsiElement parent=original.getParent();
    if (parent instanceof PyStringLiteralExpression) {
      int stringOffset=parameters.getOffset() - parameters.getPosition().getTextRange().getStartOffset();
      if (isInsideSubstitutionChunk((PyStringLiteralExpression)parent,stringOffset)) {
        PyExpression[] arguments=getFormatFunctionKeyWordArguments(original);
        for (        PyExpression argument : arguments) {
          result=result.withPrefixMatcher(getPrefix(parameters.getOffset(),argument.getContainingFile()));
          tryToAddKeysFromStarArgument(result,argument);
          tryToAddKeyWordArgument(result,argument);
        }
      }
    }
 else     if (PyUtil.instanceOf(parent,PyKeywordArgument.class,PyReferenceExpression.class)) {
      PyArgumentList argumentList=PsiTreeUtil.getParentOfType(original,PyArgumentList.class);
      result=result.withPrefixMatcher(getPrefix(parameters.getOffset(),parent.getContainingFile()));
      tryToAddElementsFromFormattedString(result,argumentList);
    }
  }
}
