{
  if (argumentList != null) {
    final PyReferenceExpression refExpr=PsiTreeUtil.getPrevSiblingOfType(argumentList,PyReferenceExpression.class);
    final PyStringLiteralExpression strExpr=PsiTreeUtil.getChildOfType(refExpr,PyStringLiteralExpression.class);
    if (strExpr != null) {
      return getFormatLookupBuilders(strExpr);
    }
 else {
      final PyBinaryExpression binExpr=PsiTreeUtil.getParentOfType(refExpr,PyBinaryExpression.class);
      if (binExpr != null) {
        final PyStringLiteralExpression stringLiteralExpr=PyUtil.as(binExpr.getLeftExpression(),PyStringLiteralExpression.class);
        if (stringLiteralExpr != null) {
          return getPercentLookupBuilders(stringLiteralExpr);
        }
      }
    }
  }
  return Collections.emptyList();
}
