{
  PyClass klass=PsiTreeUtil.getParentOfType(node,PyClass.class);
  if (klass != null && !klass.isNewStyleClass()) {
    final List<PyClassLikeType> types=klass.getSuperClassTypes(myTypeEvalContext);
    for (    PyClassLikeType type : types) {
      if (type == null)       return;
      final String qName=type.getClassQName();
      if (qName != null && qName.contains("PyQt"))       return;
      if (!(type instanceof PyClassType))       return;
    }
    if (PyUtil.isSuperCall(node))     registerProblem(node.getCallee(),"Old-style class contains call for super method");
  }
}
