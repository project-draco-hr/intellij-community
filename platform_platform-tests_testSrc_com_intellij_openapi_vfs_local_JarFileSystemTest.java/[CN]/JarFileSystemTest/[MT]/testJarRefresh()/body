{
  File jar=IoTestUtil.createTestJar();
  assertTrue(jar.setLastModified(jar.lastModified() - 1000));
  VirtualFile vFile=LocalFileSystem.getInstance().refreshAndFindFileByIoFile(jar);
  assertNotNull(vFile);
  VirtualFile jarRoot=findByPath(jar.getPath() + JarFileSystem.JAR_SEPARATOR);
  assertEquals(1,jarRoot.getChildren().length);
  VirtualFile entry=findByPath(jar.getPath() + JarFileSystem.JAR_SEPARATOR + JarFile.MANIFEST_NAME);
  assertContent(entry,"");
  Ref<Boolean> updated=Ref.create(false);
  ApplicationManager.getApplication().getMessageBus().connect(getTestRootDisposable()).subscribe(VirtualFileManager.VFS_CHANGES,new BulkFileListener.Adapter(){
    @Override public void before(    @NotNull List<? extends VFileEvent> events){
      for (      VFileEvent event : events) {
        if (event instanceof VFileContentChangeEvent && entry.equals(event.getFile())) {
          updated.set(true);
          break;
        }
      }
    }
  }
);
  IoTestUtil.createTestJar(jar,JarFile.MANIFEST_NAME,"update","some.txt","some text");
  vFile.refresh(false,false);
  assertTrue(updated.get());
  assertTrue(entry.isValid());
  assertContent(entry,"update");
  assertEquals(2,jarRoot.getChildren().length);
  VirtualFile newEntry=findByPath(jar.getPath() + JarFileSystem.JAR_SEPARATOR + "some.txt");
  assertContent(newEntry,"some text");
}
