{
  File[] tests=dataFolder.listFiles(new FilenameFilter(){
    @Override public boolean accept(    File dir,    String name){
      return !name.startsWith(".");
    }
  }
);
  Collection<TestSpec> data=ContainerUtil.newArrayList();
  for (  File testDir : tests) {
    File descriptionFile=null;
    File configFile=null;
    File resultFile=null;
    File[] files=testDir.listFiles();
    assertNotNull("No test specifications found in " + testDir.getPath(),files);
    for (    File file : files) {
      if (file.getName().endsWith("_desc.txt")) {
        descriptionFile=file;
      }
 else       if (file.getName().endsWith("_config.txt")) {
        configFile=file;
      }
 else       if (file.getName().endsWith("_result.txt")) {
        resultFile=file;
      }
    }
    assertNotNull(String.format("description file not found in %s among %s",testDir,Arrays.toString(testDir.list())),descriptionFile);
    assertNotNull(String.format("config file file not found in %s among %s",testDir,Arrays.toString(testDir.list())),configFile);
    assertNotNull(String.format("result file file not found in %s among %s",testDir,Arrays.toString(testDir.list())),resultFile);
    String testName=FileUtil.loadFile(descriptionFile).split("\n")[0];
    if (!testName.toLowerCase().startsWith("ignore")) {
      data.add(new TestSpec(testName,configFile,resultFile));
    }
  }
  return data;
}
