{
  StopWatch sw=StopWatch.start("validating data in " + root.getName());
  final Set<Hash> refs=ContainerUtil.map2Set(allRefs,new Function<VcsRef,Hash>(){
    @Override public Hash fun(    VcsRef ref){
      return ref.getCommitHash();
    }
  }
);
  PermanentGraphImpl.newInstance(sortedCommits,new GraphColorManager<Hash>(){
    @Override public int getColorOfBranch(    Hash headCommit){
      return 0;
    }
    @Override public int getColorOfFragment(    Hash headCommit,    int magicIndex){
      return 0;
    }
    @Override public int compareHeads(    Hash head1,    Hash head2){
      if (!refs.contains(head1) || !refs.contains(head2)) {
        LOG.error("GitLogProvider returned inconsistent data",new Attachment("error-details.txt",printErrorDetails(root,allRefs,sortedCommits,firstBlockSyncData,manuallyReadBranches,currentTagNames,commitsFromTags)));
      }
      return 0;
    }
  }
,refs);
  sw.report();
}
