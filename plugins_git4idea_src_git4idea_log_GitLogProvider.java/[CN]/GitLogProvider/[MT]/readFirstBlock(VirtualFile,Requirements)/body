{
  if (!isRepositoryReady(root)) {
    return Collections.emptyList();
  }
  int commitCount=requirements.getCommitCount();
  if (requirements.isOrdered()) {
    commitCount*=2;
  }
  String[] params=ArrayUtil.mergeArrays(ArrayUtil.toStringArray(GitHistoryUtils.LOG_ALL),"--encoding=UTF-8","--full-history","--sparse","--max-count=" + commitCount);
  List<? extends VcsCommitMetadata> firstBlock=GitHistoryUtils.loadMetadata(myProject,root,params);
  if (requirements.isOrdered()) {
    firstBlock=VcsLogSorter.sortByDateTopoOrder(firstBlock);
    firstBlock=new ArrayList<VcsCommitMetadata>(firstBlock.subList(0,Math.min(firstBlock.size(),requirements.getCommitCount())));
  }
  return firstBlock;
}
