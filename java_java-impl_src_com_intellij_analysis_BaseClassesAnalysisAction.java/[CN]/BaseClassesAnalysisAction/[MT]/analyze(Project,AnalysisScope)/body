{
  FileDocumentManager.getInstance().saveAllDocuments();
  ProgressManager.getInstance().run(new Task.Backgroundable(project,AnalysisScopeBundle.message("analyzing.project"),true){
    @Override public void run(    @NotNull final ProgressIndicator indicator){
      indicator.setIndeterminate(true);
      indicator.setText(AnalysisScopeBundle.message("checking.class.files"));
      if (project.isDisposed()) {
        return;
      }
      final CompilerManager compilerManager=CompilerManager.getInstance(project);
      final boolean upToDate=compilerManager.isUpToDate(compilerManager.createProjectCompileScope(project));
      ApplicationManager.getApplication().invokeLater(new Runnable(){
        @Override public void run(){
          if (project.isDisposed()) {
            return;
          }
          if (!upToDate) {
            final int i=Messages.showYesNoCancelDialog(getProject(),AnalysisScopeBundle.message("recompile.confirmation.message"),AnalysisScopeBundle.message("project.is.out.of.date"),Messages.getWarningIcon());
            if (i == Messages.CANCEL)             return;
            if (i == Messages.YES) {
              compileAndAnalyze(project,scope);
            }
 else {
              doAnalyze(project,scope);
            }
          }
 else {
            doAnalyze(project,scope);
          }
        }
      }
);
    }
  }
);
}
