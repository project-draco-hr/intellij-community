{
  PsiElement psiElement=(PsiElement)this;
  if (!psiElement.isValid())   return null;
  if (Registry.is("psi.deferIconLoading")) {
    TIntObjectHashMap<Icon> cache=getUserData(BASE_ICONS);
    if (cache == null) {
      cache=putUserDataIfAbsent(BASE_ICONS,new TIntObjectHashMap<Icon>());
    }
    Icon baseIcon;
synchronized (cache) {
      if (!cache.containsKey(flags)) {
        cache.put(flags,computeBaseIcon(flags));
      }
      baseIcon=cache.get(flags);
    }
    return IconDeferrer.getInstance().defer(baseIcon,new ElementIconRequest(psiElement,flags),ICON_COMPUTE);
  }
  return computeIconNow(psiElement,flags);
}
