{
  if (source != null && source.getLanguage() instanceof PythonLanguage) {
    ParentMatcher parent_matcher=new ParentMatcher(PyForStatement.class,PyWhileStatement.class);
    parent_matcher.limitBy(PyFunction.class,PyClass.class);
    List<? extends PsiElement> cycle_list=parent_matcher.search(source);
    if (cycle_list != null && cycle_list.size() == 1) {
      PsiElement cycle_element=cycle_list.get(0);
      ASTNode node=source.getNode();
      if (node != null) {
        IElementType node_type=node.getElementType();
        if (node_type == PyTokenTypes.CONTINUE_KEYWORD) {
          return cycle_element;
        }
        if (node_type == PyTokenTypes.BREAK_KEYWORD) {
          PsiElement outer_element=cycle_element;
          PsiElement after_cycle;
          while (true) {
            after_cycle=outer_element.getNextSibling();
            if (after_cycle != null) {
              if (after_cycle instanceof PsiWhiteSpace) {
                after_cycle=after_cycle.getNextSibling();
              }
              if (after_cycle instanceof PyStatement)               return after_cycle;
            }
            outer_element=outer_element.getParent();
            if (PyUtil.instanceOf(outer_element,PsiFile.class,PyFunction.class,PyClass.class)) {
              break;
            }
          }
          return PsiTreeUtil.getDeepestLast(cycle_element);
        }
      }
    }
  }
  return null;
}
