{
  final AstPath parentPath=getNodePath(parent);
  if (parentPath == null) {
    return;
  }
  final List<CompositeElement> children=ContainerUtil.newArrayList();
  parent.acceptTree(new RecursiveTreeElementWalkingVisitor(false){
    @Override public void visitComposite(    CompositeElement composite){
      if (composite != parent && (composite instanceof LazyParseableElement || composite.getElementType() instanceof IStubElementType)) {
        composite.putUserData(NODE_PATH,new ChildPath(parentPath,children.size()));
        children.add(composite);
      }
      super.visitComposite(composite);
    }
  }
);
  parent.putUserData(PATH_CHILDREN,children.toArray(new CompositeElement[0]));
}
