{
  final PsiFile file;
  AccessToken accessToken=ReadAction.start();
  try {
    if (!fileOrDir.isValid())     return false;
    file=psiManager.findFile(fileOrDir);
    if (file == null) {
      return true;
    }
    if (!shouldHighlightFile(file))     return true;
  }
  finally {
    accessToken.finish();
  }
  final Runnable runnable=new Runnable(){
    @Override public void run(){
      doProcessFile(visitor,psiManager,file);
    }
  }
;
  if (needReadAction && !ApplicationManager.getApplication().isDispatchThread()) {
    commitAndRunInSmartMode(runnable,psiManager.getProject());
  }
 else {
    runnable.run();
  }
  final ProgressIndicator indicator=ProgressManager.getInstance().getProgressIndicator();
  return indicator == null || !indicator.isCanceled();
}
