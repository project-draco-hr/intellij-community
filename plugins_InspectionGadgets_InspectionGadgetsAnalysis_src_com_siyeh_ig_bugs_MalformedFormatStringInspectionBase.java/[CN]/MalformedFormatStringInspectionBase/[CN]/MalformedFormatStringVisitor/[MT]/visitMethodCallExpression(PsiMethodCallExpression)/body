{
  super.visitMethodCallExpression(expression);
  if (!FormatUtils.isFormatCall(expression,methodNames,classNames)) {
    return;
  }
  final PsiExpressionList argumentList=expression.getArgumentList();
  final PsiExpression[] arguments=argumentList.getExpressions();
  final int formatArgumentIndex=findFirstStringArgumentIndex(arguments);
  if (formatArgumentIndex < 0) {
    return;
  }
  final PsiExpression formatArgument=arguments[formatArgumentIndex];
  if (!ExpressionUtils.hasStringType(formatArgument) || !PsiUtil.isConstantExpression(formatArgument)) {
    return;
  }
  final PsiType formatType=formatArgument.getType();
  if (formatType == null) {
    return;
  }
  final String value=(String)ConstantExpressionUtil.computeCastTo(formatArgument,formatType);
  if (value == null) {
    return;
  }
  final int argumentCount=arguments.length - (formatArgumentIndex + 1);
  final FormatDecode.Validator[] validators;
  try {
    validators=FormatDecode.decode(value,argumentCount);
  }
 catch (  Exception e) {
    registerError(formatArgument,e);
    return;
  }
  if (validators.length != argumentCount) {
    if (argumentCount == 1) {
      final PsiExpression argument=arguments[formatArgumentIndex + 1];
      final PsiType argumentType=argument.getType();
      if (argumentType instanceof PsiArrayType) {
        return;
      }
    }
    registerMethodCallError(expression,validators,Integer.valueOf(argumentCount));
    return;
  }
  for (int i=0; i < validators.length; i++) {
    final FormatDecode.Validator validator=validators[i];
    final PsiExpression argument=arguments[i + formatArgumentIndex + 1];
    final PsiType argumentType=argument.getType();
    if (argumentType == null) {
      continue;
    }
    if (validator != null && !validator.valid(argumentType)) {
      registerError(argument,validators,Integer.valueOf(argumentCount),argumentType,validator);
      return;
    }
  }
}
