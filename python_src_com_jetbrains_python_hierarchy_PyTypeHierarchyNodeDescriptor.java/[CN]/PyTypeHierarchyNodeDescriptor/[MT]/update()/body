{
  boolean changes=super.update();
  final CompositeAppearance oldText=myHighlightedText;
  myHighlightedText=new CompositeAppearance();
  TextAttributes classNameAttributes=null;
  if (myColor != null) {
    classNameAttributes=new TextAttributes(myColor,null,null,null,Font.PLAIN);
  }
  NavigatablePsiElement element=(NavigatablePsiElement)myElement;
  if (element == null) {
    final String invalidPrefix=IdeBundle.message("node.hierarchy.invalid");
    if (!myHighlightedText.getText().startsWith(invalidPrefix)) {
      myHighlightedText.getBeginning().addText(invalidPrefix,HierarchyNodeDescriptor.getInvalidPrefixAttributes());
    }
    return true;
  }
  final ItemPresentation presentation=element.getPresentation();
  if (presentation != null) {
    final PyClass cl=getClassElement();
    myHighlightedText.getEnding().addText(cl.getName(),classNameAttributes);
    myHighlightedText.getEnding().addText(" (" + cl.getContainingFile().getName() + ")",HierarchyNodeDescriptor.getPackageNameAttributes());
  }
  myName=myHighlightedText.getText();
  if (!Comparing.equal(myHighlightedText,oldText)) {
    changes=true;
  }
  return changes;
}
