{
  if (SystemInfo.isWindows && op == WatcherOp.RECDIRTY) {
    VirtualFile root=LocalFileSystem.getInstance().findFileByPath(path);
    if (root != null) {
      myNotificationSink.notifyPathsRecursive(list(root.getPresentableUrl()));
    }
    notifyOnAnyEvent();
    return;
  }
  if ((op == WatcherOp.CHANGE || op == WatcherOp.STATS) && isRepetition(path)) {
    if (LOG.isDebugEnabled()) {
      LOG.debug("Repetition: " + path);
    }
    return;
  }
  boolean exactPath=op != WatcherOp.DIRTY && op != WatcherOp.RECDIRTY;
  Collection<String> paths=checkWatchable(path,exactPath,false);
  if (paths.isEmpty()) {
    if (LOG.isDebugEnabled()) {
      LOG.debug("Not watchable, filtered: " + path);
    }
    return;
  }
switch (op) {
case STATS:
case CHANGE:
    myNotificationSink.notifyDirtyPaths(paths);
  break;
case CREATE:
case DELETE:
myNotificationSink.notifyPathsCreatedOrDeleted(paths);
break;
case DIRTY:
myNotificationSink.notifyDirtyDirectories(paths);
break;
case RECDIRTY:
myNotificationSink.notifyPathsRecursive(paths);
break;
default :
LOG.error("Unexpected op: " + op);
}
notifyOnAnyEvent();
}
