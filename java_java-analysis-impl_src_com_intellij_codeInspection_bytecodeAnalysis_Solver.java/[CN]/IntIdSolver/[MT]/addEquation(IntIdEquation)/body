{
  size++;
  IntIdResult rhs=equation.rhs;
  if (rhs instanceof IntIdFinal) {
    solved.put(equation.id,((IntIdFinal)rhs).value);
    moving.push(equation.id);
  }
 else   if (rhs instanceof IntIdPending) {
    IntIdPending pendResult=((IntIdPending)rhs).copy();
    IntIdResult norm=normalize(pendResult.delta);
    if (norm instanceof IntIdFinal) {
      solved.put(equation.id,((IntIdFinal)norm).value);
      moving.push(equation.id);
    }
 else {
      IntIdPending pendResult1=((IntIdPending)rhs).copy();
      for (      IntIdComponent component : pendResult1.delta) {
        for (        int trigger : component.ids) {
          dependencies.addOccurence(trigger,equation.id);
        }
        pending.put(equation.id,pendResult1);
      }
    }
  }
}
