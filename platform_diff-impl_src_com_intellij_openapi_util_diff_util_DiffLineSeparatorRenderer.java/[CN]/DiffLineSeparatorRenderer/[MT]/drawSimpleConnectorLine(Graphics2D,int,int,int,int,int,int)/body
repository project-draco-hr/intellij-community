{
  int y1=(start1 + end1) / 2;
  int y2=(start2 + end2) / 2;
  if (Math.abs(x2 - x1) < Math.abs(y2 - y1)) {
    int dx=TornLine.ourOuterRadius;
    int dy=TornLine.ourInnerRadius;
    if (y2 < y1) {
      g.setColor(getOuterColor());
      g.drawLine(x1 + dx,y1 - dy + TornLine.ourOuterRadius,x2,y2 + TornLine.ourOuterRadius);
      g.drawLine(x1,y1 - TornLine.ourOuterRadius,x2 - dx,y2 + dy - TornLine.ourOuterRadius);
      g.drawLine(x1,y1 + TornLine.ourOuterRadius,x1 + dx,y1 - dy + TornLine.ourOuterRadius);
      g.drawLine(x2,y2 - TornLine.ourOuterRadius,x2 - dx,y2 + dy - TornLine.ourOuterRadius);
      g.setColor(getInnerColor());
      g.drawLine(x1 + dx,y1 - dy + TornLine.ourInnerRadius,x2,y2 + TornLine.ourInnerRadius);
      g.drawLine(x1,y1 - TornLine.ourInnerRadius,x2 - dx,y2 + dy - TornLine.ourInnerRadius);
      g.drawLine(x1,y1 + TornLine.ourInnerRadius,x1 + dx,y1 - dy + TornLine.ourInnerRadius);
      g.drawLine(x2,y2 - TornLine.ourInnerRadius,x2 - dx,y2 + dy - TornLine.ourInnerRadius);
    }
 else {
      g.setColor(getOuterColor());
      g.drawLine(x1,y1 + TornLine.ourOuterRadius,x2 - dx,y2 - dy + TornLine.ourOuterRadius);
      g.drawLine(x1 + dx,y1 + dy - TornLine.ourOuterRadius,x2,y2 - TornLine.ourOuterRadius);
      g.drawLine(x2,y2 + TornLine.ourOuterRadius,x2 - dx,y2 - dy + TornLine.ourOuterRadius);
      g.drawLine(x1,y1 - TornLine.ourOuterRadius,x1 + dx,y1 + dy - TornLine.ourOuterRadius);
      g.setColor(getInnerColor());
      g.drawLine(x1,y1 + TornLine.ourInnerRadius,x2 - dx,y2 - dy + TornLine.ourInnerRadius);
      g.drawLine(x1 + dx,y1 + dy - TornLine.ourInnerRadius,x2,y2 - TornLine.ourInnerRadius);
      g.drawLine(x2,y2 + TornLine.ourInnerRadius,x2 - dx,y2 - dy + TornLine.ourInnerRadius);
      g.drawLine(x1,y1 - TornLine.ourInnerRadius,x1 + dx,y1 + dy - TornLine.ourInnerRadius);
    }
  }
 else {
    g.setColor(getOuterColor());
    UIUtil.drawLine(g,x1,y1 - TornLine.ourOuterRadius,x2,y2 - TornLine.ourOuterRadius);
    UIUtil.drawLine(g,x1,y1 + TornLine.ourOuterRadius,x2,y2 + TornLine.ourOuterRadius);
    g.setColor(getInnerColor());
    UIUtil.drawLine(g,x1,y1 - TornLine.ourInnerRadius,x2,y2 - TornLine.ourInnerRadius);
    UIUtil.drawLine(g,x1,y1 + TornLine.ourInnerRadius,x2,y2 + TornLine.ourInnerRadius);
  }
}
