{
  new WriteAction<Object>(){
    @Override protected void run(    @NotNull Result<Object> result) throws Throwable {
      final VirtualFile dir1=getProject().getBaseDir().createChildDirectory(this,"dir1");
      final VirtualFile dir2=getProject().getBaseDir().createChildDirectory(this,"dir2");
      VirtualFile child=dir1.createChildDirectory(this,"child");
      long outOfCodeBlockCount=myTracker.getOutOfCodeBlockModificationCount();
      child.move(this,dir2);
      assertFalse(myTracker.getOutOfCodeBlockModificationCount() == outOfCodeBlockCount);
      outOfCodeBlockCount=myTracker.getOutOfCodeBlockModificationCount();
      child.move(this,dir1);
      assertFalse(myTracker.getOutOfCodeBlockModificationCount() == outOfCodeBlockCount);
    }
  }
.execute();
}
