{
  final List<VirtualFile> basicVfRoots=ObjectsConvertor.convert(myTopRoots,new Convertor<RootUrlInfo,VirtualFile>(){
    public VirtualFile convert(    final RootUrlInfo real){
      return real.getVirtualFile();
    }
  }
);
  final ChangeListManager clManager=ChangeListManager.getInstance(myVcs.getProject());
  if (clearState) {
    myTempSink.getAndClear();
  }
  clManager.invokeAfterUpdate(new Runnable(){
    public void run(){
      final List<RootUrlInfo> nestedRoots=new ArrayList<RootUrlInfo>();
      for (      NestedCopiesBuilder.MyPointInfo info : myTempSink.getAndClear()) {
        if (NestedCopyType.external.equals(info.getType()) || NestedCopyType.switched.equals(info.getType())) {
          RootUrlInfo topRoot=findTopRoot(VfsUtilCore.virtualToIoFile(info.getFile()));
          if (topRoot != null) {
            topRoot.setType(info.getType());
            continue;
          }
          if (!refreshPointInfo(info)) {
            continue;
          }
        }
        registerRootUrlFromNestedPoint(info,nestedRoots);
      }
      myTopRoots.addAll(nestedRoots);
      myApplier.apply(myTopRoots,myLonelyRoots);
      callback.run();
    }
  }
,InvokeAfterUpdateMode.SILENT_CALLBACK_POOLED,null,new Consumer<VcsDirtyScopeManager>(){
    public void consume(    VcsDirtyScopeManager vcsDirtyScopeManager){
      if (clearState) {
        vcsDirtyScopeManager.filesDirty(null,basicVfRoots);
      }
    }
  }
,null);
}
