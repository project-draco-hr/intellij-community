{
  File classFile=new File(FileUtil.getTempDirectory(),"ReuseTest.class");
  assertTrue(classFile.getPath(),classFile.createNewFile());
  VirtualFile vFile=StandardFileSystems.local().findFileByPath(classFile.getPath());
  assertNotNull(classFile.getPath(),vFile);
  PsiFile psiFile=PsiManager.getInstance(getProject()).findFile(vFile);
  assertNotNull(psiFile);
  String testDir=JavaTestUtil.getJavaTestDataPath() + "/psi/cls/mirror/";
  FileUtil.copy(new File(testDir,"pkg/ReuseTestV1.class"),classFile);
  vFile.refresh(false,false);
  String text1=psiFile.getText();
  assertTrue(text1,text1.contains("private int f1"));
  assertFalse(text1,text1.contains("private int f2"));
  Document doc1=FileDocumentManager.getInstance().getCachedDocument(vFile);
  assertNotNull(doc1);
  assertSame(doc1,PsiDocumentManager.getInstance(getProject()).getDocument(psiFile));
  FileUtil.copy(new File(testDir,"pkg/ReuseTestV2.class"),classFile);
  vFile.refresh(false,false);
  String text2=psiFile.getText();
  assertTrue(text2,text2.contains("private int f1"));
  assertTrue(text2,text2.contains("private int f2"));
  Document doc2=FileDocumentManager.getInstance().getCachedDocument(vFile);
  assertNotNull(doc2);
  assertSame(doc2,PsiDocumentManager.getInstance(getProject()).getDocument(psiFile));
}
