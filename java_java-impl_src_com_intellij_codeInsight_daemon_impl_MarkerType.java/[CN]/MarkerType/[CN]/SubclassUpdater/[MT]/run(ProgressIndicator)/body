{
  super.run(indicator);
  ClassInheritorsSearch.search(myClass,ApplicationManager.getApplication().runReadAction(new Computable<SearchScope>(){
    @Override public SearchScope compute(){
      return myClass.getUseScope();
    }
  }
),true).forEach(new CommonProcessors.CollectProcessor<PsiClass>(){
    @Override public boolean process(    final PsiClass o){
      if (!updateComponent(o,myRenderer.getComparator())) {
        indicator.cancel();
      }
      indicator.checkCanceled();
      return super.process(o);
    }
  }
);
  FunctionalExpressionSearch.search(myClass).forEach(new CommonProcessors.CollectProcessor<PsiFunctionalExpression>(){
    @Override public boolean process(    final PsiFunctionalExpression expr){
      if (!updateComponent(expr,myRenderer.getComparator())) {
        indicator.cancel();
      }
      indicator.checkCanceled();
      return super.process(expr);
    }
  }
);
}
