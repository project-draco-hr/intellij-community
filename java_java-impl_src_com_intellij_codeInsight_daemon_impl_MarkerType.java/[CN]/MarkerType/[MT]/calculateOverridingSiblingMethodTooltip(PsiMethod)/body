{
  FindSuperElementsHelper.SiblingInfo pair=FindSuperElementsHelper.getSiblingInfoInheritedViaSubClass(method);
  if (pair == null)   return null;
  PsiMethod superMethod=pair.superMethod;
  PsiClass subClass=pair.subClass;
  boolean isAbstract=method.hasModifierProperty(PsiModifier.ABSTRACT);
  boolean isSuperAbstract=superMethod.hasModifierProperty(PsiModifier.ABSTRACT);
  String postfix=MessageFormat.format(" via sub-class <a href=\"#javaClass/{0}\">{0}</a>",ClassPresentationUtil.getNameForClass(subClass,true));
  @NonNls String pattern=DaemonBundle.message(isSuperAbstract && !isAbstract ? "method.implements" : "method.overrides") + postfix;
  return composeText(new PsiElement[]{superMethod},"",pattern,IdeActions.ACTION_GOTO_SUPER);
}
