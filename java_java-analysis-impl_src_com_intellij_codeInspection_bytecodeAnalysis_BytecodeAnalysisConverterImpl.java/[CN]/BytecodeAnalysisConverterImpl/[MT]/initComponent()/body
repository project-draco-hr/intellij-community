{
  final File keysDir=new File(PathManager.getIndexRoot(),"bytecodekeys");
  final File namesFile=new File(keysDir,"names");
  final File compoundKeysFile=new File(keysDir,"compound");
  final int previousLogicVersion=PropertiesComponent.getInstance().getOrInitInt(LOGIC_VERSION_KEY,0);
  version=PropertiesComponent.getInstance().getOrInitInt(ENUMERATORS_VERSION_KEY,0);
  if (previousLogicVersion != LOGIC_VERSION) {
    IOUtil.deleteAllFilesStartingWith(keysDir);
    version++;
  }
  try {
    IOUtil.openCleanOrResetBroken(new ThrowableComputable<Void,IOException>(){
      @Override public Void compute() throws IOException {
        myNamesEnumerator=new PersistentStringEnumerator(namesFile,true);
        myCompoundKeyEnumerator=new IntArrayPersistentEnumerator(compoundKeysFile,new IntArrayKeyDescriptor());
        return null;
      }
    }
,new Runnable(){
      @Override public void run(){
        LOG.info("Error during initialization of enumerators in bytecode analysis. Re-initializing.");
        IOUtil.deleteAllFilesStartingWith(keysDir);
        version++;
      }
    }
);
  }
 catch (  IOException e) {
    LOG.error("Re-initialization of enumerators in bytecode analysis failed.",e);
  }
  PropertiesComponent.getInstance().setValue(ENUMERATORS_VERSION_KEY,String.valueOf(version));
  PropertiesComponent.getInstance().setValue(LOGIC_VERSION_KEY,String.valueOf(LOGIC_VERSION));
}
