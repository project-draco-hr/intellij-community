{
  final Future<Boolean> future=log.jumpToReference(revision.asString());
  if (!future.isDone()) {
    ProgressManager.getInstance().run(new Task.Backgroundable(project,"Searching for revision " + revision.asString(),false,PerformInBackgroundOption.ALWAYS_BACKGROUND){
      @Override public void run(      @NotNull ProgressIndicator indicator){
        try {
          future.get();
        }
 catch (        CancellationException ignored) {
        }
catch (        InterruptedException ignored) {
        }
catch (        ExecutionException e) {
          LOG.error(e);
        }
      }
    }
);
  }
}
