{
  FileChooserDescriptor descriptor=FileChooserDescriptorFactory.createMultipleJavaPathDescriptor();
  descriptor.setTitle(ProjectBundle.message("library.attach.sources.action"));
  descriptor.setDescription(ProjectBundle.message("library.attach.sources.description"));
  Library firstLibrary=libraries.get(0).getLibrary();
  VirtualFile[] roots=firstLibrary != null ? firstLibrary.getFiles(OrderRootType.CLASSES) : VirtualFile.EMPTY_ARRAY;
  VirtualFile[] candidates=FileChooser.chooseFiles(descriptor,myProject,roots.length == 0 ? null : PathUtil.getLocalFile(roots[0]));
  final VirtualFile[] files=PathUIUtils.scanAndSelectDetectedJavaSourceRoots(myParentComponent,candidates);
  if (files.length == 0) {
    return new ActionCallback.Rejected();
  }
  final Map<Library,LibraryOrderEntry> librariesToAppendSourcesTo=new HashMap<Library,LibraryOrderEntry>();
  for (  LibraryOrderEntry library : libraries) {
    librariesToAppendSourcesTo.put(library.getLibrary(),library);
  }
  if (librariesToAppendSourcesTo.size() == 1) {
    appendSources(firstLibrary,files);
  }
 else {
    librariesToAppendSourcesTo.put(null,null);
    String title=ProjectBundle.message("library.choose.one.to.attach");
    List<LibraryOrderEntry> entries=ContainerUtil.newArrayList(librariesToAppendSourcesTo.values());
    JBPopupFactory.getInstance().createListPopup(new BaseListPopupStep<LibraryOrderEntry>(title,entries){
      @Override public ListSeparator getSeparatorAbove(      LibraryOrderEntry value){
        return value == null ? new ListSeparator() : null;
      }
      @NotNull @Override public String getTextFor(      LibraryOrderEntry value){
        return value == null ? "All" : value.getPresentableName() + " (" + value.getOwnerModule().getName()+ ")";
      }
      @Override public PopupStep onChosen(      LibraryOrderEntry libraryOrderEntry,      boolean finalChoice){
        if (libraryOrderEntry != null) {
          appendSources(libraryOrderEntry.getLibrary(),files);
        }
 else {
          for (          Library libOrderEntry : librariesToAppendSourcesTo.keySet()) {
            if (libOrderEntry != null) {
              appendSources(libOrderEntry,files);
            }
          }
        }
        return FINAL_CHOICE;
      }
    }
).showCenteredInCurrentWindow(myProject);
  }
  return new ActionCallback.Done();
}
