{
  MavenUtil.smartInvokeAndWait(myModule.getProject(),ModalityState.defaultModalityState(),new Runnable(){
    public void run(){
      if (myModule.isDisposed())       return;
      final ModuleType moduleType=ModuleType.get(myModule);
      ApplicationManager.getApplication().runWriteAction(new Runnable(){
        @Override public void run(){
          for (          final MavenImporter importer : getSuitableImporters()) {
            final MavenProjectChanges changes;
            if (myMavenProjectChanges == null) {
              if (importer.processChangedModulesOnly())               continue;
              changes=MavenProjectChanges.NONE;
            }
 else {
              changes=myMavenProjectChanges;
            }
            if (importer.getModuleType() == moduleType) {
              importer.process(myModifiableModelsProvider,myModule,myRootModelAdapter,myMavenTree,myMavenProject,changes,myMavenProjectToModuleName,postTasks);
            }
          }
        }
      }
);
    }
  }
);
}
