{
  JsonElement value=null;
  if (myElement instanceof JsonFile) {
    value=((JsonFile)myElement).getTopLevelValue();
  }
 else   if (myElement instanceof JsonProperty) {
    value=((JsonProperty)myElement).getValue();
  }
 else   if (myElement instanceof JsonObject) {
    value=myElement;
  }
  if (value instanceof JsonObject) {
    final JsonObject object=((JsonObject)value);
    return ContainerUtil.map2Array(object.getPropertyList(),TreeElement.class,new Function<JsonProperty,TreeElement>(){
      @Override public TreeElement fun(      JsonProperty property){
        return new JsonStructureViewElement(property);
      }
    }
);
  }
 else   if (value instanceof JsonArray) {
    final JsonArray array=(JsonArray)value;
    final List<TreeElement> childObjects=ContainerUtil.mapNotNull(array.getValueList(),new Function<JsonValue,TreeElement>(){
      @Override public TreeElement fun(      JsonValue value){
        return value instanceof JsonObject ? new JsonStructureViewElement(value) : null;
      }
    }
);
    return ArrayUtil.toObjectArray(childObjects,TreeElement.class);
  }
  return EMPTY_ARRAY;
}
