{
  String absPath=file.getAbsolutePath();
  if (!includeUnconventionallyNamedTests) {
    if (absPath.endsWith("Test.class")) {
      return StringUtil.trimEnd(absPath.substring(startPackageName),".class").replace(File.separatorChar,'.');
    }
  }
 else {
    String className=file.getName();
    if (className.endsWith(".class")) {
      int dollar=className.lastIndexOf("$");
      if (dollar != -1) {
        className=className.substring(dollar + 1);
        if (!Character.isUpperCase(className.charAt(0)))         return null;
      }
      List<String> words=Arrays.asList(NameUtil.nameToWords(className));
      if (words.contains("Test") || words.contains("Tests") || words.contains("Suite")) {
        String fqn=StringUtil.trimEnd(absPath.substring(startPackageName),".class").replace(File.separatorChar,'.');
        if (!Arrays.asList("com.intellij.tests.BootstrapTests","com.intellij.AllTests").contains(fqn)) {
          return fqn;
        }
      }
    }
  }
  return null;
}
