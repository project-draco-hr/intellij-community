{
  final Matcher m=DICT_TYPE.matcher(type);
  PyClassType dict=PyBuiltinCache.getInstance(anchor).getDictType();
  if (dict != null) {
    if (m.matches()) {
      PyType from=parse(anchor,m.group(1),types,fullRanges,offset + m.start(1));
      PyType to=parse(anchor,m.group(2),types,fullRanges,offset + m.start(2));
      final PyType p=PyTupleType.create(anchor,new PyType[]{from,to});
      return new PyCollectionTypeImpl(dict.getPyClass(),false,p);
    }
    return dict;
  }
  return null;
}
