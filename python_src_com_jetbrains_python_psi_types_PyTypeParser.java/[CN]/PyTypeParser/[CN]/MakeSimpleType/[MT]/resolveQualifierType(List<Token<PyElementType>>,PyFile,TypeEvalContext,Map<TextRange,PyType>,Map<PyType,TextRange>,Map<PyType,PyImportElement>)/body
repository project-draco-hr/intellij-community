{
  if (tokens.isEmpty()) {
    return null;
  }
  final Token<PyElementType> firstToken=tokens.get(0);
  final String firstText=firstToken.getText().toString();
  final TextRange firstRange=firstToken.getRange();
  final PsiElement resolved=file.getElementNamed(firstText);
  if (resolved == null) {
    return getImplicitlyResolvedType(tokens,context,types,fullRanges,firstRange);
  }
  PyType type=null;
  if (resolved instanceof PyTargetExpression) {
    type=PyTypingTypeProvider.getTypeFromTargetExpression((PyTargetExpression)resolved,context);
  }
  if (type == null && resolved instanceof PyTypedElement) {
    type=context.getType((PyTypedElement)resolved);
  }
  if (type != null) {
    tokens.remove(0);
    if (!allowResolveToType(type)) {
      return null;
    }
    if (type instanceof PyClassLikeType) {
      type=((PyClassLikeType)type).toInstance();
    }
    types.put(firstRange,type);
    fullRanges.put(type,firstRange);
    for (    PyFromImportStatement fromImportStatement : file.getFromImports()) {
      for (      PyImportElement importElement : fromImportStatement.getImportElements()) {
        if (firstText.equals(importElement.getVisibleName())) {
          imports.put(type,importElement);
        }
      }
    }
    for (    PyImportElement importElement : file.getImportTargets()) {
      if (firstText.equals(importElement.getVisibleName())) {
        imports.put(type,importElement);
      }
    }
  }
  return type;
}
