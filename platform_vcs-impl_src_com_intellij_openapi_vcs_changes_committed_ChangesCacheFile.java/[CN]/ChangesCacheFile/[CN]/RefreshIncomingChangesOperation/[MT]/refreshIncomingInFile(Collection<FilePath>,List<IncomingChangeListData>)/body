{
  boolean hadChanges=!list.isEmpty();
  for (  IncomingChangeListData data : list) {
    debug("Checking incoming changelist " + data.changeList.getNumber());
    boolean updated=false;
    boolean anyChangeFound=false;
    for (    Change change : data.changeList.getChanges()) {
      if (data.accountedChanges.contains(change))       continue;
      final ContentRevision revision=(change.getAfterRevision() == null) ? change.getBeforeRevision() : change.getAfterRevision();
      final ProcessingResult result=processIncomingChange(change,data,incomingFiles);
      new IncomingChangeState(change,revision.getRevisionNumber().asString(),result.state).logSelf();
      if (result.changeFound) {
        updated=true;
        data.accountedChanges.add(change);
      }
 else {
        anyChangeFound=true;
      }
    }
    if (updated || !anyChangeFound) {
      myAnyChanges=true;
      myChangesCacheFile.saveIncoming(data,!anyChangeFound);
    }
  }
  return myAnyChanges || hadChanges;
}
