{
  final List<DiffContent> contents=new ArrayList<DiffContent>();
  final List<String> titles=new ArrayList<String>();
  boolean focused=true;
  String windowTitle=null;
  JsonReader reader=createJsonReader(request);
  if (reader.hasNext()) {
    String fileType=null;
    reader.beginObject();
    while (reader.hasNext()) {
      String name=reader.nextName();
      if (name.equals("fileType")) {
        fileType=reader.nextString();
      }
 else       if (name.equals("focused")) {
        focused=reader.nextBoolean();
      }
 else       if (name.equals("windowTitle")) {
        windowTitle=StringUtil.nullize(reader.nextString(),true);
      }
 else       if (name.equals("contents")) {
        String error=readContent(reader,contents,titles,fileType);
        if (error != null) {
          return error;
        }
      }
 else {
        reader.skipValue();
      }
    }
    reader.endObject();
  }
  if (contents.isEmpty()) {
    return "Empty request";
  }
  Project project=guessProject();
  if (project == null) {
    project=ProjectManager.getInstance().getDefaultProject();
  }
  final boolean finalFocused=focused;
  final String finalWindowTitle=windowTitle;
  final Project finalProject=project;
  ApplicationManager.getApplication().invokeLater(new Runnable(){
    @Override public void run(){
      DiffManager.getInstance().showDiff(finalProject,new SimpleDiffRequest(StringUtil.notNullize(finalWindowTitle,"Diff Service"),contents.toArray(new DiffContent[contents.size()]),ArrayUtil.toStringArray(titles)));
      if (finalFocused) {
        ProjectUtil.focusProjectWindow(finalProject,true);
      }
    }
  }
,project.getDisposed());
  sendOk(request,context);
  return null;
}
