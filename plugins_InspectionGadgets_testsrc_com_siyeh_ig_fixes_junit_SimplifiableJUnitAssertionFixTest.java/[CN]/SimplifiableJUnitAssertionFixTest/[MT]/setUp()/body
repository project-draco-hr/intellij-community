{
  super.setUp();
  myFixture.enableInspections(new SimplifiableJUnitAssertionInspection());
  myRelativePath="junit/simplifiable_junit_assertion";
  myDefaultHint=InspectionGadgetsBundle.message("simplify.junit.assertion.simplify.quickfix");
  myFixture.addClass("package junit.framework;" + "public abstract class TestCase extends Assert {" + "    protected void setUp() throws Exception {}"+ "    protected void tearDown() throws Exception {}"+ "}");
  myFixture.addClass("package junit.framework;" + "public class Assert {" + "    public static void assertTrue(String message, boolean condition) {}"+ "    public static void assertTrue(boolean condition) {}"+ "    public static void assertEquals(String message, Object expected, Object actual) {}"+ "    public static void assertEquals(Object expected, Object actual) {}"+ "    public static void assertFalse(String message, boolean condition) {}"+ "    public static void assertFalse(boolean condition) {}"+ "}");
  myFixture.addClass("package org.junit;" + "public class Assert {" + "    public static void assertTrue(boolean condition) {}"+ "    public static void assertEquals(boolean expected, boolean actual) {}"+ "    public static void assertFalse(String message, boolean condition) {}"+ "}");
  myFixture.addClass("package org.junit;" + "import java.lang.annotation.ElementType;" + "import java.lang.annotation.Retention;"+ "import java.lang.annotation.RetentionPolicy;"+ "import java.lang.annotation.Target;"+ "@Retention(RetentionPolicy.RUNTIME)"+ "@Target({ElementType.METHOD})"+ "public @interface Test {}");
  myFixture.addClass("package java.util.function; public interface Supplier<T> { T get();}");
  myFixture.addClass("package org.junit.jupiter.api;\n" + "import java.util.function.Supplier;\n" + "public final class Assertions {\n"+ "    public static void assertEquals(Object expected, Object actual) {}\n"+ "    public static void assertTrue(boolean expected) {}\n"+ "    public static void assertEquals(Object expected, Object actual, Supplier<String> message) {}\n"+ "    public static void assertTrue(Object expected, Supplier<String> message) {}\n"+ "}");
}
