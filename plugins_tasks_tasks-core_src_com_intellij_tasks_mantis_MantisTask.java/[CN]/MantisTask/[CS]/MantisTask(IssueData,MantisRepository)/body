{
  myRepository=repository;
  myId=String.valueOf(data.getId());
  mySummary=data.getSummary();
  myClosed=data.getStatus().getId().intValue() >= 90;
  myDescription=data.getDescription();
  myCreated=data.getDate_submitted().getTime();
  myUpdated=data.getLast_updated().getTime();
  if (data.getNotes() == null) {
    myComments=Comment.EMPTY_ARRAY;
  }
 else {
    myComments=ContainerUtil.map2Array(data.getNotes(),Comment.class,new Function<IssueNoteData,Comment>(){
      @Override public Comment fun(      final IssueNoteData data){
        return new Comment(){
          @Override public String getText(){
            return data.getText();
          }
          @Nullable @Override public String getAuthor(){
            return data.getReporter().getName();
          }
          @Nullable @Override public Date getDate(){
            return data.getDate_submitted().getTime();
          }
        }
;
      }
    }
);
  }
}
