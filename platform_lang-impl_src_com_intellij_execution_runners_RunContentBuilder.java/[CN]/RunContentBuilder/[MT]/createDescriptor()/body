{
  if (myExecutionResult == null) {
    throw new IllegalStateException("Missing ExecutionResult");
  }
  ExecutionEnvironment environment=getEnvironment();
  if (environment == null) {
    throw new IllegalStateException("Missing ExecutionEnvironment");
  }
  final ExecutionConsole console=myExecutionResult.getExecutionConsole();
  String runnerType=JAVA_RUNNER;
  if (console instanceof ExecutionConsoleEx) {
    final String id=((ExecutionConsoleEx)console).getExecutionConsoleId();
    if (id != null) {
      runnerType=JAVA_RUNNER + "." + id;
    }
  }
  final RunProfile profile=environment.getRunProfile();
  myUi=RunnerLayoutUi.Factory.getInstance(getProject()).create(runnerType,getEnvironment().getExecutor().getId(),profile.getName(),this);
  myUi.getOptions().setMoveToGridActionEnabled(false).setMinimizeActionEnabled(false);
  if (ApplicationManager.getApplication().isUnitTestMode()) {
    RunContentDescriptor contentDescriptor=new RunContentDescriptor(profile,myExecutionResult,myUi.getComponent());
    Disposer.register(contentDescriptor,this);
    return contentDescriptor;
  }
  if (console != null) {
    if (console instanceof ExecutionConsoleEx) {
      ((ExecutionConsoleEx)console).buildUi(myUi);
    }
 else {
      buildConsoleUiDefault(myUi,console);
    }
    if (profile instanceof RunConfigurationBase) {
      myManager.initLogConsoles((RunConfigurationBase)profile,myExecutionResult.getProcessHandler());
      OutputFileUtil.attachDumpListener((RunConfigurationBase)profile,myExecutionResult.getProcessHandler(),console);
    }
  }
  RunContentDescriptor contentDescriptor=new RunContentDescriptor(profile,myExecutionResult,myUi.getComponent());
  Disposer.register(contentDescriptor,this);
  myUi.getOptions().setLeftToolbar(createActionToolbar(contentDescriptor,myUi.getComponent()),ActionPlaces.UNKNOWN);
  if (profile instanceof RunConfigurationBase) {
    if (console instanceof ObservableConsoleView && !ApplicationManager.getApplication().isUnitTestMode()) {
      ((ObservableConsoleView)console).addChangeListener(new ConsoleToFrontListener((RunConfigurationBase)profile,getProject(),getEnvironment().getExecutor(),contentDescriptor,myUi),this);
    }
  }
  return contentDescriptor;
}
