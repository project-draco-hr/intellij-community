{
  if (!CCProjectService.setCCActionAvailable(event)) {
    return;
  }
  final Presentation presentation=event.getPresentation();
  final Project project=event.getData(CommonDataKeys.PROJECT);
  if (project == null) {
    presentation.setVisible(false);
    presentation.setEnabled(false);
    return;
  }
  final Editor editor=CommonDataKeys.EDITOR.getData(event.getDataContext());
  final PsiFile file=CommonDataKeys.PSI_FILE.getData(event.getDataContext());
  if (editor == null || file == null) {
    presentation.setVisible(false);
    presentation.setEnabled(false);
    return;
  }
  if (!editor.getSelectionModel().hasSelection()) {
    presentation.setVisible(false);
    presentation.setEnabled(false);
    return;
  }
  final CCProjectService service=CCProjectService.getInstance(project);
  final Course course=service.getCourse();
  final PsiDirectory taskDir=file.getContainingDirectory();
  final PsiDirectory lessonDir=taskDir.getParent();
  if (lessonDir == null)   return;
  final Lesson lesson=course.getLesson(lessonDir.getName());
  final Task task=lesson.getTask(taskDir.getName());
  if (task == null) {
    presentation.setVisible(false);
    presentation.setEnabled(false);
    return;
  }
  presentation.setVisible(true);
  presentation.setEnabled(true);
}
