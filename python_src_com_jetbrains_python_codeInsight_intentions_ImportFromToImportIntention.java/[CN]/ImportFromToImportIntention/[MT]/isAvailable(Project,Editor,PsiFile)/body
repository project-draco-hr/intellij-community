{
  myModuleReference=null;
  final PsiElement position=file.findElementAt(editor.getCaretModel().getOffset());
  myFromImportStatement=PsiTreeUtil.getParentOfType(position,PyFromImportStatement.class);
  if (myFromImportStatement != null && myFromImportStatement.isValid() && !myFromImportStatement.isFromFuture()) {
    myRelativeLevel=myFromImportStatement.getRelativeLevel();
    myModuleReference=myFromImportStatement.getImportSource();
    if (myRelativeLevel > 0) {
      for (      PyImportElement import_element : myFromImportStatement.getImportElements()) {
        PyReferenceExpression ref=import_element.getImportReference();
        if (ref != null && ref.isValid()) {
          PsiElement target=ref.getReference().resolve();
          if (target instanceof PyExpression && ((PyExpression)target).getType() instanceof PyModuleType)           return false;
        }
      }
    }
  }
  if (myModuleReference != null) {
    myModuleName=PyResolveUtil.toPath(myModuleReference,".");
  }
  return myModuleReference != null && myModuleName != null && myFromImportStatement != null;
}
