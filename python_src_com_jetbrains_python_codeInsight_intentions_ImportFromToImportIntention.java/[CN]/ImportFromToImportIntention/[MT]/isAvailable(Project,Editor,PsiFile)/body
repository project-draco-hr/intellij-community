{
  InfoHolder info=InfoHolder.collect(getElementFromEditor(editor,file));
  ourInfoHolder.set(info);
  info.myModuleReference=null;
  final PsiElement position=file.findElementAt(editor.getCaretModel().getOffset());
  info.myFromImportStatement=PsiTreeUtil.getParentOfType(position,PyFromImportStatement.class);
  if (info.myFromImportStatement != null && info.myFromImportStatement.isValid() && !info.myFromImportStatement.isFromFuture()) {
    info.myRelativeLevel=info.myFromImportStatement.getRelativeLevel();
    info.myModuleReference=info.myFromImportStatement.getImportSource();
    if (info.myRelativeLevel > 0) {
      for (      PyImportElement import_element : info.myFromImportStatement.getImportElements()) {
        PyReferenceExpression ref=import_element.getImportReference();
        if (ref != null && ref.isValid()) {
          PsiElement target=ref.getReference().resolve();
          if (target instanceof PyExpression && ((PyExpression)target).getType(TypeEvalContext.fast()) instanceof PyModuleType)           return false;
        }
      }
    }
  }
  if (info.myModuleReference != null) {
    info.myModuleName=PyResolveUtil.toPath(info.myModuleReference,".");
  }
  return info.myModuleReference != null && info.myModuleName != null && info.myFromImportStatement != null;
}
