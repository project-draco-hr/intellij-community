{
  final JPanel result=new JPanel(new BorderLayout());
  final JPanel internalPanel=new JPanel(new BorderLayout());
  result.add(internalPanel,BorderLayout.NORTH);
  final FieldPanel additionalAttributesPanel=new FieldPanel(null,inspection.getPanelTitle(),null,null);
  additionalAttributesPanel.getTextField().getDocument().addDocumentListener(new DocumentAdapter(){
    @Override protected void textChanged(    DocumentEvent e){
      final Document document=e.getDocument();
      try {
        final String text=document.getText(0,document.getLength());
        if (text != null) {
          inspection.myValues=reparseProperties(text.trim());
        }
      }
 catch (      BadLocationException e1) {
        inspection.getLogger().error(e1);
      }
    }
  }
);
  final JCheckBox checkBox=new JCheckBox(inspection.getCheckboxTitle());
  checkBox.setSelected(inspection.myCustomValuesEnabled);
  checkBox.addActionListener(new ActionListener(){
    @Override public void actionPerformed(    ActionEvent e){
      final boolean b=checkBox.isSelected();
      if (b != inspection.myCustomValuesEnabled) {
        inspection.myCustomValuesEnabled=b;
        additionalAttributesPanel.setEnabled(inspection.myCustomValuesEnabled);
      }
    }
  }
);
  internalPanel.add(checkBox,BorderLayout.NORTH);
  internalPanel.add(additionalAttributesPanel,BorderLayout.CENTER);
  additionalAttributesPanel.setPreferredSize(new Dimension(150,additionalAttributesPanel.getPreferredSize().height));
  additionalAttributesPanel.setEnabled(inspection.myCustomValuesEnabled);
  additionalAttributesPanel.setText(inspection.createPropertiesString());
  return result;
}
