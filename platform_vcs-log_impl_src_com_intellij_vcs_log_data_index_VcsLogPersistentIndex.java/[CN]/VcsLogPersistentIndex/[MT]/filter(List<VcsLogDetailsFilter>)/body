{
  VcsLogTextFilter textFilter=ContainerUtil.findInstance(detailsFilters,VcsLogTextFilter.class);
  VcsLogUserFilterImpl userFilter=ContainerUtil.findInstance(detailsFilters,VcsLogUserFilterImpl.class);
  VcsLogStructureFilter pathFilter=ContainerUtil.findInstance(detailsFilters,VcsLogStructureFilter.class);
  TIntHashSet filteredByMessage=null;
  if (textFilter != null) {
    filteredByMessage=filterMessages(textFilter.getText());
  }
  TIntHashSet filteredByUser=null;
  if (userFilter != null) {
    Set<VcsUser> users=ContainerUtil.newHashSet();
    for (    VirtualFile root : myRoots) {
      users.addAll(userFilter.getUsers(root));
    }
    filteredByUser=filterUsers(users);
  }
  TIntHashSet filteredByPath=null;
  if (pathFilter != null) {
    filteredByPath=filterPaths(pathFilter.getFiles());
  }
  return TroveUtil.intersect(filteredByMessage,filteredByPath,filteredByUser);
}
