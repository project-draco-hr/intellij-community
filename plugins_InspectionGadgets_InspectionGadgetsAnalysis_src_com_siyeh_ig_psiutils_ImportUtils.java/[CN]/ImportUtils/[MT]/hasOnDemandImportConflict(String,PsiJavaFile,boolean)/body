{
  final PsiImportList imports=file.getImportList();
  if (imports == null) {
    return false;
  }
  final PsiImportStatement[] importStatements=imports.getImportStatements();
  final String shortName=ClassUtil.extractClassName(fqName);
  final String packageName=ClassUtil.extractPackageName(fqName);
  for (  final PsiImportStatement importStatement : importStatements) {
    if (!importStatement.isOnDemand()) {
      continue;
    }
    final PsiJavaCodeReferenceElement importReference=importStatement.getImportReference();
    if (importReference == null) {
      continue;
    }
    final String packageText=importReference.getText();
    if (packageText.equals(packageName)) {
      continue;
    }
    final PsiElement element=importReference.resolve();
    if (element == null || !(element instanceof PsiPackage)) {
      continue;
    }
    final PsiPackage aPackage=(PsiPackage)element;
    if (!strict) {
      return aPackage.containsClassNamed(shortName);
    }
    final PsiClass[] classes=aPackage.findClassByShortName(shortName,file.getResolveScope());
    for (    final PsiClass aClass : classes) {
      final String qualifiedClassName=aClass.getQualifiedName();
      if (qualifiedClassName == null || fqName.equals(qualifiedClassName)) {
        continue;
      }
      return containsConflictingReference(file,qualifiedClassName);
    }
  }
  return hasJavaLangImportConflict(fqName,file);
}
