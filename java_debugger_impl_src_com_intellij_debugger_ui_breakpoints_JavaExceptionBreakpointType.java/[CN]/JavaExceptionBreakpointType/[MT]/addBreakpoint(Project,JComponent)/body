{
  final PsiClass throwableClass=JavaPsiFacade.getInstance(project).findClass("java.lang.Throwable",GlobalSearchScope.allScope(project));
  TreeClassChooser chooser=TreeClassChooserFactory.getInstance(project).createInheritanceClassChooser(DebuggerBundle.message("add.exception.breakpoint.classchooser.title"),GlobalSearchScope.allScope(project),throwableClass,true,true,null);
  chooser.showDialog();
  final PsiClass selectedClass=chooser.getSelected();
  final String qName=selectedClass == null ? null : JVMNameUtil.getNonAnonymousClassName(selectedClass);
  if (qName != null && qName.length() > 0) {
    return ApplicationManager.getApplication().runWriteAction(new Computable<XBreakpoint<JavaExceptionBreakpointProperties>>(){
      @Override public XBreakpoint<JavaExceptionBreakpointProperties> compute(){
        return XDebuggerManager.getInstance(project).getBreakpointManager().addBreakpoint(JavaExceptionBreakpointType.this,new JavaExceptionBreakpointProperties(qName,((PsiClassOwner)selectedClass.getContainingFile()).getPackageName()));
      }
    }
);
  }
  return null;
}
