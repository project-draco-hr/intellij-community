{
  ClassLoader loader=config.getClassLoader();
  try {
    final Class<?> interfaceClass=Class.forName(config.getInterfaceClass(),true,loader);
    final Class<?> implementationClass=Comparing.equal(config.getInterfaceClass(),config.getImplementationClass()) ? interfaceClass : StringUtil.isEmpty(config.getImplementationClass()) ? null : Class.forName(config.getImplementationClass(),true,loader);
    MutablePicoContainer picoContainer=getPicoContainer();
    if (config.options != null && Boolean.parseBoolean(config.options.get("overrides"))) {
      ComponentAdapter oldAdapter=picoContainer.getComponentAdapterOfType(interfaceClass);
      if (oldAdapter == null) {
        throw new RuntimeException(config + " does not override anything");
      }
      picoContainer.unregisterComponent(oldAdapter.getComponentKey());
    }
    if (implementationClass != null) {
      picoContainer.registerComponent(new ComponentConfigComponentAdapter(interfaceClass,implementationClass,config.getPluginId(),config.options != null && Boolean.parseBoolean(config.options.get("workspace"))));
    }
  }
 catch (  Throwable t) {
    handleInitComponentError(t,null,config.getPluginId());
  }
}
