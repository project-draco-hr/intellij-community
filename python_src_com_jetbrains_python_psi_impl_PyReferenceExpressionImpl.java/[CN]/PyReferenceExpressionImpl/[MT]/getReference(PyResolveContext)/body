{
  final PsiFile file=getContainingFile();
  final PyExpression qualifier=getQualifier();
  if (CythonLanguageDialect.isInsideCythonFile(this)) {
    if (PsiTreeUtil.getParentOfType(this,CythonCImportElement.class,CythonFromCImportStatement.class) != null) {
      return new CythonImportReference(this,context);
    }
  }
  final PsiElement importParent=PsiTreeUtil.getParentOfType(this,PyImportElement.class,PyFromImportStatement.class);
  if (importParent != null) {
    if (importParent instanceof PyImportElement) {
      final PyImportStatementBase importStatement=PsiTreeUtil.getParentOfType(importParent,PyImportStatementBase.class);
      if (importStatement instanceof PyFromImportStatement) {
        return new PyFromImportNameReference(this,context);
      }
      return new PyImportReference(this,context);
    }
    return new PyFromImportSourceReference(this,context);
  }
  if (file != null) {
    final ConsoleCommunication communication=file.getCopyableUserData(PydevConsoleRunner.CONSOLE_KEY);
    if (communication != null) {
      if (qualifier != null) {
        return new PydevConsoleReference(this,communication,qualifier.getText() + ".");
      }
      return new PydevConsoleReference(this,communication,"");
    }
  }
  if (qualifier != null) {
    return new PyQualifiedReference(this,context);
  }
  return new PyReferenceImpl(this,context);
}
