{
  final PyAugAssignmentStatement augAssignment=PsiTreeUtil.getParentOfType(anchor,PyAugAssignmentStatement.class);
  final PyElement element=augAssignment != null ? augAssignment : anchor;
  try {
    final List<Instruction> defs=PyDefUseUtil.getLatestDefs(scopeOwner,name,element,true,false);
    if (!defs.isEmpty()) {
      final ReadWriteInstruction firstInstruction=PyUtil.as(defs.get(0),ReadWriteInstruction.class);
      PyType type=firstInstruction != null ? firstInstruction.getType(context,anchor) : null;
      for (int i=1; i < defs.size(); i++) {
        final ReadWriteInstruction instruction=PyUtil.as(defs.get(i),ReadWriteInstruction.class);
        type=PyUnionType.union(type,instruction != null ? instruction.getType(context,anchor) : null);
      }
      return type;
    }
  }
 catch (  PyDefUseUtil.InstructionNotFoundException ignored) {
  }
  return null;
}
