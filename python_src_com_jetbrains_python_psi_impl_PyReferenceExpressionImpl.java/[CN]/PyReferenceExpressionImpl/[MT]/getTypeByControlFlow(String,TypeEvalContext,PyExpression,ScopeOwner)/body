{
  PyAugAssignmentStatement augAssignment=PsiTreeUtil.getParentOfType(anchor,PyAugAssignmentStatement.class);
  try {
    final PyElement element=augAssignment != null ? augAssignment : anchor;
    final List<ReadWriteInstruction> defs=PyDefUseUtil.getLatestDefs(scopeOwner,name,element,true);
    if (!defs.isEmpty()) {
      PyType type=defs.get(0).getType(context,anchor);
      for (int i=1; i < defs.size(); i++) {
        type=PyUnionType.union(type,defs.get(i).getType(context,anchor));
      }
      return type;
    }
  }
 catch (  PyDefUseUtil.InstructionNotFoundException ignored) {
  }
  return null;
}
