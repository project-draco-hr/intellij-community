{
  final PyExpression qualifier=getQualifier();
  if (qualifier != null) {
    PyType qualifierType=qualifier.getType();
    if (qualifierType != null) {
      return qualifierType.getCompletionVariants(this);
    }
    return new Object[0];
  }
  if (PsiTreeUtil.getParentOfType(this,PyImportElement.class,PyFromImportStatement.class) != null) {
    return ResolveImportUtil.suggestImportVariants(this);
  }
  final PyResolveUtil.VariantsProcessor processor=new PyResolveUtil.VariantsProcessor();
  PyResolveUtil.treeCrawlUp(processor,this);
  return processor.getResult();
}
