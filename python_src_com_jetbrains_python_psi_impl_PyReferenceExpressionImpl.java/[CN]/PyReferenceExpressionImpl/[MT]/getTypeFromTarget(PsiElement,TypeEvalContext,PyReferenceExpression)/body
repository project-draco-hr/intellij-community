{
  final PyType type=getGenericTypeFromTarget(target,context,anchor);
  if (context.maySwitchToAST(anchor)) {
    final PyExpression qualifier=anchor.getQualifier();
    if (qualifier != null) {
      if (!(type instanceof PyFunctionType) && PyTypeChecker.hasGenerics(type,context)) {
        final Map<PyExpression,PyNamedParameter> parameters=Collections.emptyMap();
        final Map<PyGenericType,PyType> substitutions=PyTypeChecker.unifyGenericCall(qualifier,parameters,context);
        if (substitutions != null && !substitutions.isEmpty()) {
          final PyType substituted=PyTypeChecker.substitute(type,substitutions,context);
          if (substituted != null) {
            return substituted;
          }
        }
      }
    }
  }
  return type;
}
