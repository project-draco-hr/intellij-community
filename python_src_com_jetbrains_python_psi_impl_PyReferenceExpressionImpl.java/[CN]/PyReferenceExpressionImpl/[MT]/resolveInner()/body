{
  ResultList ret=new ResultList();
  final String referencedName=getReferencedName();
  if (referencedName == null)   return ret;
  if (PsiTreeUtil.getParentOfType(this,PyImportElement.class,PyFromImportStatement.class) != null) {
    PsiElement target=ResolveImportUtil.resolveImportReference(this);
    target=turnDirIntoInit(target);
    if (target == null) {
      ret.clear();
      return ret;
    }
    ret.poke(target,RatedResolveResult.RATE_HIGH);
    return ret;
  }
  final PyExpression qualifier=getQualifier();
  if (qualifier != null) {
    PyType qualifierType=qualifier.getType();
    if (qualifierType != null) {
      if (qualifier instanceof PyQualifiedExpression) {
        List<PyQualifiedExpression> qualifier_path=PyResolveUtil.unwindQualifiers((PyQualifiedExpression)qualifier);
        if (qualifier_path != null) {
          for (          PyExpression ex : collectAssignedAttributes((PyQualifiedExpression)qualifier)) {
            if (referencedName.equals(ex.getName())) {
              ret.poke(ex,RatedResolveResult.RATE_NORMAL);
              return ret;
            }
          }
        }
      }
      PsiElement ref_elt=turnDirIntoInit(qualifierType.resolveMember(referencedName));
      if (ref_elt != null)       ret.poke(ref_elt,RatedResolveResult.RATE_NORMAL);
    }
    if ("__doc__".equals(referencedName)) {
      PsiElement docstring=null;
      if (qualifierType instanceof PyClassType) {
        PyClass qual_class=((PyClassType)qualifierType).getPyClass();
        if (qual_class != null)         docstring=qual_class.getDocStringExpression();
      }
 else       if (qualifierType instanceof PyModuleType) {
        PsiFile qual_module=((PyModuleType)qualifierType).getModule();
        if (qual_module instanceof PyDocStringOwner) {
          docstring=((PyDocStringOwner)qual_module).getDocStringExpression();
        }
      }
 else       if (qualifier instanceof PyReferenceExpression) {
        PsiElement qual_object=((PyReferenceExpression)qualifier).resolve();
        if (qual_object instanceof PyDocStringOwner) {
          docstring=((PyDocStringOwner)qual_object).getDocStringExpression();
        }
      }
      if (docstring != null) {
        ret.poke(docstring,RatedResolveResult.RATE_HIGH);
      }
    }
    return ret;
  }
  ResolveProcessor processor=new ResolveProcessor(referencedName);
  PsiElement uexpr=PyResolveUtil.treeCrawlUp(processor,false,this,getContainingFile());
  if ((uexpr != null)) {
    if ((uexpr instanceof PyClass)) {
      PyClass cls=(PyClass)uexpr;
      if (isSuperClassExpression(cls)) {
        ret.clear();
        return ret;
      }
    }
    for (    NameDefiner hit : processor.getDefiners()) {
      ret.poke(hit,getRate(hit));
    }
  }
  if (uexpr == null) {
    PyType otype=PyBuiltinCache.getInstance(this).getObjectType();
    if (otype != null)     uexpr=otype.resolveMember(getName());
  }
  if (uexpr == null) {
    PyFile bfile=PyBuiltinCache.getInstance(this).getBuiltinsFile();
    if (bfile != null) {
      uexpr=bfile.resolveExportedName(referencedName);
    }
  }
  if (uexpr == null) {
    uexpr=PyResolveUtil.scanOuterContext(new ResolveProcessor(referencedName),this);
  }
  uexpr=turnDirIntoInit(uexpr);
  if (uexpr != null)   ret.poke(uexpr,getRate(uexpr));
  return ret;
}
