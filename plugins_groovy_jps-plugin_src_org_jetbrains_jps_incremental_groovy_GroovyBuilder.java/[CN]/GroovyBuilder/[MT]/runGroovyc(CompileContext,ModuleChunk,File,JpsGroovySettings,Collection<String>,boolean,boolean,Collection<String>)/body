{
  List<String> programParams=ContainerUtilRt.newArrayList(optimizeClassLoading ? GroovyRtConstants.OPTIMIZE : "do_not_optimize",myForStubs ? "stubs" : "groovyc",tempFile.getPath());
  if (settings.invokeDynamic) {
    programParams.add("--indy");
  }
  final GroovycOutputParser parser=new GroovycOutputParser(){
    @Override protected void updateStatus(    @NotNull String status){
      context.processMessage(new ProgressMessage(status + " [" + chunk.getPresentableShortName()+ "]"));
    }
  }
;
  if (inProcess) {
synchronized (ourInProcessGroovycLock) {
      InProcessGroovyc.runGroovycInThisProcess(compilationClassPath,outputs,programParams,parser);
    }
  }
 else {
    forkGroovycProcess(chunk,settings,compilationClassPath,optimizeClassLoading,programParams,parser);
  }
  return parser;
}
