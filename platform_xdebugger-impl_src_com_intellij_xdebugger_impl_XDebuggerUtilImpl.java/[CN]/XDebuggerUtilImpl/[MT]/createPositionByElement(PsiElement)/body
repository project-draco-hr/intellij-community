{
  if (element == null)   return null;
  PsiFile psiFile=element.getContainingFile();
  if (psiFile == null)   return null;
  VirtualFile file=psiFile.getVirtualFile();
  if (file == null)   return null;
  final SmartPsiElementPointer<PsiElement> pointer=SmartPointerManager.getInstance(element.getProject()).createSmartPsiElementPointer(element);
  return new XSourcePosition(){
    private volatile XSourcePosition myDelegate;
    private XSourcePosition getDelegate(){
      if (myDelegate == null) {
        myDelegate=ApplicationManager.getApplication().runReadAction(new Computable<XSourcePosition>(){
          @Override public XSourcePosition compute(){
            PsiElement elem=pointer.getElement();
            return XSourcePositionImpl.createByOffset(pointer.getVirtualFile(),elem != null ? elem.getTextOffset() : -1);
          }
        }
);
      }
      return myDelegate;
    }
    @Override public int getLine(){
      return getDelegate().getLine();
    }
    @Override public int getOffset(){
      return getDelegate().getOffset();
    }
    @NotNull @Override public VirtualFile getFile(){
      return getDelegate().getFile();
    }
    @NotNull @Override public Navigatable createNavigatable(    @NotNull Project project){
      if (myDelegate != null) {
        return myDelegate.createNavigatable(project);
      }
      PsiElement elem=pointer.getElement();
      if (elem instanceof Navigatable) {
        return ((Navigatable)elem);
      }
      return NonNavigatable.INSTANCE;
    }
  }
;
}
