{
  List<TextAttributesKey> list=new ArrayList<>(myAttributesMap.keySet());
  list.sort(null);
  for (  TextAttributesKey key : list) {
    TextAttributes attributes=myAttributesMap.get(key);
    TextAttributesKey baseKey=key.getFallbackAttributeKey();
    if (attributes == USE_INHERITED_MARKER) {
      if (baseKey != null) {
        attrElements.addContent(new Element(OPTION_ELEMENT).setAttribute(NAME_ATTR,key.getExternalName()).setAttribute(BASE_ATTRIBUTES_ATTR,baseKey.getExternalName()));
      }
      continue;
    }
    if (myParentScheme != null) {
      TextAttributes parentAttributes=myParentScheme instanceof AbstractColorsScheme ? ((AbstractColorsScheme)myParentScheme).getDirectlyDefinedAttributes(key) : myParentScheme.getAttributes(key);
      if (parentAttributes != null && attributes.equals(parentAttributes)) {
        continue;
      }
    }
    Element valueElement=new Element(VALUE_ELEMENT);
    attributes.writeExternal(valueElement);
    attrElements.addContent(new Element(OPTION_ELEMENT).setAttribute(NAME_ATTR,key.getExternalName()).addContent(valueElement));
  }
}
