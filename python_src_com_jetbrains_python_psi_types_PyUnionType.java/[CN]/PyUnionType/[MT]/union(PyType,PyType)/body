{
  if (type1 == null || type2 == null) {
    return null;
  }
  if (type1 instanceof PyTupleType && type2 instanceof PyTupleType) {
    final PyTupleType tupleType1=(PyTupleType)type1;
    final PyTupleType tupleType2=(PyTupleType)type2;
    if (tupleType1.getElementCount() == tupleType2.getElementCount()) {
      int count=tupleType1.getElementCount();
      PyType[] members=new PyType[count];
      for (int i=0; i < count; i++) {
        members[i]=union(tupleType1.getElementType(i),tupleType2.getElementType(i));
      }
      return new PyTupleType(tupleType1,members);
    }
  }
  Set<PyType> members=new HashSet<PyType>();
  if (type1 instanceof PyUnionType) {
    members.addAll(((PyUnionType)type1).myMembers);
  }
 else {
    members.add(type1);
  }
  if (type2 instanceof PyUnionType) {
    members.addAll(((PyUnionType)type2).myMembers);
  }
 else {
    members.add(type2);
  }
  if (members.size() == 1) {
    return members.iterator().next();
  }
  return new PyUnionType(members);
}
