{
  final JPanel labelPanel=new JPanel(new BorderLayout());
  labelPanel.setBackground(myTree.getBackground());
  final LinkLabel<String> linkLabel=new LinkLabel<String>("Edit all targets",null);
  linkLabel.setBorder(new EmptyBorder(2,2,2,2));
  linkLabel.setListener(new LinkListener<String>(){
    @Override public void linkSelected(    LinkLabel aSource,    String aLinkData){
      if (linkLabel.isEnabled()) {
        mySyncStrategy=true;
        DefaultMutableTreeNode nodeToEdit=getFirstNodeToEdit();
        if (nodeToEdit != null) {
          myTree.startEditingAtPath(TreeUtil.getPathFromRoot(nodeToEdit));
        }
      }
    }
  }
,null);
  myTree.addPropertyChangeListener(PushLogTreeUtil.EDIT_MODE_PROP,new PropertyChangeListener(){
    @Override public void propertyChange(    PropertyChangeEvent evt){
      Boolean editMode=(Boolean)evt.getNewValue();
      linkLabel.setEnabled(!editMode);
      linkLabel.setPaintUnderline(!editMode);
      linkLabel.repaint();
    }
  }
);
  labelPanel.add(linkLabel,BorderLayout.EAST);
  return labelPanel;
}
