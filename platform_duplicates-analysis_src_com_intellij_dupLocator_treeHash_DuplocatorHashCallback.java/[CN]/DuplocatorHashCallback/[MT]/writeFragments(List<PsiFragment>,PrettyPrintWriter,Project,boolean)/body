{
  final PathMacroManager macroManager=PathMacroManager.getInstance(project);
  final PsiDocumentManager documentManager=PsiDocumentManager.getInstance(project);
  for (  PsiFragment fragment : psiFragments) {
    final PsiFile psiFile=fragment.getFile();
    final VirtualFile virtualFile=psiFile != null ? psiFile.getVirtualFile() : null;
    if (virtualFile != null) {
      writer.startNode("fragment");
      writer.addAttribute("file",macroManager.collapsePath(virtualFile.getUrl()));
      if (shouldWriteOffsets) {
        final Document document=documentManager.getDocument(psiFile);
        LOG.assertTrue(document != null);
        int startOffset=fragment.getStartOffset();
        final int line=document.getLineNumber(startOffset);
        writer.addAttribute("line",String.valueOf(line));
        final int lineStartOffset=document.getLineStartOffset(line);
        if (StringUtil.isEmptyOrSpaces(document.getText().substring(lineStartOffset,startOffset))) {
          startOffset=lineStartOffset;
        }
        writer.addAttribute("start",String.valueOf(startOffset));
        writer.addAttribute("end",String.valueOf(fragment.getEndOffset()));
        if (fragment.containsMultipleFragments()) {
          final int[][] offsets=fragment.getOffsets();
          for (          int[] offset : offsets) {
            writer.startNode("offset");
            writer.addAttribute("start",String.valueOf(offset[0]));
            writer.addAttribute("end",String.valueOf(offset[1]));
            writer.endNode();
          }
        }
      }
      writer.endNode();
    }
  }
}
