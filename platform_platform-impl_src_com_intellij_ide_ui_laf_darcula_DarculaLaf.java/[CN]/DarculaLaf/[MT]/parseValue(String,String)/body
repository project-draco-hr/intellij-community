{
  if ("null".equals(value)) {
    return null;
  }
  if ("system".equals(value)) {
    return SYSTEM;
  }
  if (key.endsWith("Insets")) {
    return parseInsets(value);
  }
 else   if (key.endsWith("Border") || key.endsWith("border")) {
    try {
      if (StringUtil.split(value,",").size() == 4) {
        return new BorderUIResource.EmptyBorderUIResource(parseInsets(value));
      }
 else {
        return Class.forName(value).newInstance();
      }
    }
 catch (    Exception e) {
      log(e);
    }
  }
 else {
    final Color color=parseColor(value);
    final Integer invVal=getInteger(value);
    final Boolean boolVal="true".equals(value) ? Boolean.TRUE : "false".equals(value) ? Boolean.FALSE : null;
    Icon icon=value.startsWith("AllIcons.") ? IconLoader.getIcon(value) : null;
    if (icon == null && value.endsWith(".png")) {
      icon=IconLoader.findIcon(value,DarculaLaf.class,true);
    }
    if (color != null) {
      return new ColorUIResource(color);
    }
 else     if (invVal != null) {
      return invVal;
    }
 else     if (icon != null) {
      return new IconUIResource(icon);
    }
 else     if (boolVal != null) {
      return boolVal;
    }
  }
  return value;
}
