{
  final Properties properties=new Properties();
  final String osSuffix=SystemInfo.isMac ? "mac" : SystemInfo.isWindows ? "windows" : "linux";
  try {
    InputStream stream=getClass().getResourceAsStream(getPrefix() + ".properties");
    properties.load(stream);
    stream.close();
    stream=getClass().getResourceAsStream(getPrefix() + "_" + osSuffix+ ".properties");
    properties.load(stream);
    stream.close();
    HashMap<String,Object> darculaGlobalSettings=new HashMap<>();
    final String prefix=getPrefix() + ".";
    for (    String key : properties.stringPropertyNames()) {
      if (key.startsWith(prefix)) {
        Object value=parseValue(key,properties.getProperty(key));
        String darculaKey=key.substring(prefix.length());
        if (value == SYSTEM) {
          darculaGlobalSettings.remove(darculaKey);
        }
 else {
          darculaGlobalSettings.put(darculaKey,value);
        }
      }
    }
    for (    Object key : defaults.keySet()) {
      if (key instanceof String && ((String)key).contains(".")) {
        final String s=(String)key;
        final String darculaKey=s.substring(s.lastIndexOf('.') + 1);
        if (darculaGlobalSettings.containsKey(darculaKey)) {
          defaults.put(key,darculaGlobalSettings.get(darculaKey));
        }
      }
    }
    for (    String key : properties.stringPropertyNames()) {
      final String value=properties.getProperty(key);
      defaults.put(key,parseValue(key,value));
    }
  }
 catch (  IOException e) {
    log(e);
  }
}
