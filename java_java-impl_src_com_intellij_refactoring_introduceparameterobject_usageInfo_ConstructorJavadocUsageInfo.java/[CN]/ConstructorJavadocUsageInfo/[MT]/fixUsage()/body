{
  final PsiDocComment docComment=myMethod.getDocComment();
  if (docComment != null) {
    final List<PsiDocTag> mergedTags=new ArrayList<PsiDocTag>();
    final PsiDocTag[] paramTags=docComment.findTagsByName("param");
    for (    PsiDocTag paramTag : paramTags) {
      final PsiElement[] dataElements=paramTag.getDataElements();
      if (dataElements.length > 0) {
        if (dataElements[0] instanceof PsiDocParamRef) {
          final PsiReference reference=dataElements[0].getReference();
          if (reference != null) {
            final PsiElement resolve=reference.resolve();
            if (resolve instanceof PsiParameter) {
              final int parameterIndex=myMethod.getParameterList().getParameterIndex((PsiParameter)resolve);
              if (myDescriptor.getParameterInfo(parameterIndex) == null)               continue;
            }
          }
        }
        mergedTags.add((PsiDocTag)paramTag.copy());
      }
    }
    PsiMethod compatibleParamObjectConstructor=null;
    final PsiMethod existingConstructor=myDescriptor.getExistingClassCompatibleConstructor();
    if (existingConstructor != null && existingConstructor.getDocComment() == null) {
      compatibleParamObjectConstructor=existingConstructor;
    }
 else     if (!myDescriptor.isUseExistingClass()) {
      compatibleParamObjectConstructor=myDescriptor.getExistingClass().getConstructors()[0];
    }
    if (compatibleParamObjectConstructor != null) {
      PsiDocComment psiDocComment=JavaPsiFacade.getElementFactory(myMethod.getProject()).createDocCommentFromText("/**\n*/");
      psiDocComment=(PsiDocComment)compatibleParamObjectConstructor.addBefore(psiDocComment,compatibleParamObjectConstructor.getFirstChild());
      for (      PsiDocTag tag : mergedTags) {
        psiDocComment.add(tag);
      }
    }
  }
}
