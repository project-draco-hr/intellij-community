{
  PsiBuilder.Marker marker=builder.mark();
  if (ShiftExpression.parse(builder,parser)) {
    if (ParserUtils.getToken(builder,TokenSets.RELATIONS) || getCompositeSign(builder)) {
      ParserUtils.getToken(builder,GroovyTokenTypes.mNLS);
      ShiftExpression.parse(builder,parser);
      marker.done(GroovyElementTypes.RELATIONAL_EXPRESSION);
    }
 else     if (GroovyTokenTypes.kINSTANCEOF.equals(builder.getTokenType())) {
      advanceLexerAndParseType(builder);
      marker.done(GroovyElementTypes.INSTANCEOF_EXPRESSION);
    }
 else     if (GroovyTokenTypes.kAS.equals(builder.getTokenType())) {
      advanceLexerAndParseType(builder);
      marker.done(GroovyElementTypes.SAFE_CAST_EXPRESSION);
    }
 else {
      marker.drop();
    }
    return true;
  }
 else {
    marker.drop();
    return false;
  }
}
