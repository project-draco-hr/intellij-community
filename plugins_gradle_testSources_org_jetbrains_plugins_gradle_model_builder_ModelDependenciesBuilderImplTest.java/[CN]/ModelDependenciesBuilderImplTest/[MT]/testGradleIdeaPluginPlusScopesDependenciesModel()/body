{
  ModelDependenciesBuilderImpl dependenciesBuilder=new ModelDependenciesBuilderImpl();
  assertTrue(dependenciesBuilder.canBuild("org.jetbrains.plugins.gradle.model.ProjectDependenciesModel"));
  DomainObjectSet<? extends IdeaModule> ideaModules=allModels.getIdeaProject().getModules();
  final int modulesSize=5;
  assertEquals(modulesSize,ideaModules.size());
  for (  IdeaModule ideaModule : ideaModules) {
    DomainObjectSet<? extends IdeaDependency> dependencies=ideaModule.getDependencies();
    if (ideaModule.getName().equals("lib") || ideaModule.getName().equals("testGradleIdeaPluginPlusScopesDependenciesModel")) {
      assertTrue((dependencies.isEmpty()));
    }
 else     if (ideaModule.getName().equals("api")) {
      assertEquals(1,dependencies.size());
      IdeaDependency libDependency=dependencies.getAt(0);
      assertEquals(GradleDependencyScope.PROVIDED.getIdeaMappingName(),libDependency.getScope().getScope().toLowerCase());
      assertTrue(libDependency instanceof IdeaModuleDependency);
      IdeaModuleDependency libModuleDependency=(IdeaModuleDependency)libDependency;
      assertNotNull(libModuleDependency.getDependencyModule());
      assertEquals("lib",libModuleDependency.getDependencyModule().getName());
    }
 else     if (ideaModule.getName().equals("service")) {
      assertEquals(1,dependencies.size());
      IdeaDependency apiDependency=dependencies.getAt(0);
      assertEquals(GradleDependencyScope.COMPILE.getIdeaMappingName(),apiDependency.getScope().getScope().toLowerCase());
      assertTrue(apiDependency instanceof IdeaModuleDependency);
      IdeaModuleDependency apiModuleDependency=(IdeaModuleDependency)apiDependency;
      assertNotNull(apiModuleDependency.getDependencyModule());
      assertEquals("api",apiModuleDependency.getDependencyModule().getName());
    }
 else     if (ideaModule.getName().equals("withIdeaModelCustomisations")) {
      assertTrue(findLocalLibraries(dependencies,GradleDependencyScope.TEST_COMPILE.getIdeaMappingName()).isEmpty());
      List<IdeaSingleEntryLibraryDependency> libraryDependencies=findLocalLibraries(dependencies,GradleDependencyScope.COMPILE.getIdeaMappingName());
      assertEquals(2,libraryDependencies.size());
      IdeaSingleEntryLibraryDependency someDep=libraryDependencies.get(0);
      assertEquals(GradleDependencyScope.COMPILE.getIdeaMappingName(),someDep.getScope().getScope().toLowerCase());
      assertEquals("someDep.jar",someDep.getFile().getName());
      IdeaSingleEntryLibraryDependency someTestDep=libraryDependencies.get(1);
      assertEquals(GradleDependencyScope.COMPILE.getIdeaMappingName(),someTestDep.getScope().getScope().toLowerCase());
      assertEquals("someTestDep.jar",someTestDep.getFile().getName());
    }
 else {
      fail();
    }
  }
}
