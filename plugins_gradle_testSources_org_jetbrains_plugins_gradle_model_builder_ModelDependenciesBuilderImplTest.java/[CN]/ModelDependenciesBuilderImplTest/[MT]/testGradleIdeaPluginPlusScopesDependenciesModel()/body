{
  ModelDependenciesBuilderImpl dependenciesBuilder=new ModelDependenciesBuilderImpl();
  assertTrue(dependenciesBuilder.canBuild("org.jetbrains.plugins.gradle.model.ProjectDependenciesModel"));
  DomainObjectSet<? extends IdeaModule> ideaModules=allModels.getIdeaProject().getModules();
  IdeaModule apiModule=ContainerUtil.find(ideaModules,new Condition<IdeaModule>(){
    @Override public boolean value(    IdeaModule module){
      return module.getName().equals("api");
    }
  }
);
  assertNotNull(apiModule);
  DomainObjectSet<? extends IdeaDependency> dependencies=apiModule.getDependencies();
  assertEquals(1,dependencies.size());
  IdeaDependency libDependency=dependencies.getAt(0);
  assertEquals(GradleDependencyScope.PROVIDED.name(),libDependency.getScope().getScope());
  assertTrue(libDependency instanceof IdeaModuleDependency);
  IdeaModuleDependency libModuleDependency=(IdeaModuleDependency)libDependency;
  assertNotNull(libModuleDependency.getDependencyModule());
  assertEquals("lib",libModuleDependency.getDependencyModule().getName());
  IdeaModule serviceModule=ContainerUtil.find(ideaModules,new Condition<IdeaModule>(){
    @Override public boolean value(    IdeaModule module){
      return module.getName().equals("service");
    }
  }
);
  assertNotNull(serviceModule);
  DomainObjectSet<? extends IdeaDependency> serviceModuleDependencies=serviceModule.getDependencies();
  assertEquals(1,serviceModuleDependencies.size());
  IdeaDependency apiDependency=serviceModuleDependencies.getAt(0);
  assertEquals(GradleDependencyScope.COMPILE.name(),apiDependency.getScope().getScope());
  assertTrue(apiDependency instanceof IdeaModuleDependency);
  IdeaModuleDependency apiModuleDependency=(IdeaModuleDependency)apiDependency;
  assertNotNull(apiModuleDependency.getDependencyModule());
  assertEquals("api",apiModuleDependency.getDependencyModule().getName());
}
