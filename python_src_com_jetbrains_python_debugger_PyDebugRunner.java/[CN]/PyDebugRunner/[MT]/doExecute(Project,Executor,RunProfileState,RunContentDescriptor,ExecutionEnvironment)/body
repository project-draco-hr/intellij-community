{
  FileDocumentManager.getInstance().saveAllDocuments();
  final ServerSocket serverSocket;
  try {
    serverSocket=new ServerSocket(0);
  }
 catch (  IOException e) {
    throw new ExecutionException("Failed to find free socket port",e);
  }
  final PythonCommandLineState pyState=(PythonCommandLineState)profileState;
  final int serverLocalPort=serverSocket.getLocalPort();
  RunProfile profile=env.getRunProfile();
  final ExecutionResult result=pyState.execute(executor,createCommandLinePatchers(pyState,profile,serverLocalPort));
  final XDebugSession session=XDebuggerManager.getInstance(project).startSession(this,env,contentToReuse,new XDebugProcessStarter(){
    @NotNull public XDebugProcess start(    @NotNull final XDebugSession session){
      PyDebugProcess pyDebugProcess=new PyDebugProcess(session,serverSocket,result.getExecutionConsole(),result.getProcessHandler());
      createConsoleCommunicationAndSetupActions(project,result,pyDebugProcess);
      return pyDebugProcess;
    }
  }
);
  return session.getRunContentDescriptor();
}
