{
  Platform.setImplicitExit(false);
  final String text=ourPrefix + source + "</div></body></html>";
  final JFXPanel javafxPanel=new JFXPanel();
  javafxPanel.addMouseListener(new MouseAdapter(){
    @Override public void mouseClicked(    MouseEvent e){
      final MouseEvent parentEvent=SwingUtilities.convertMouseEvent(javafxPanel,e,panel);
      panel.dispatchEvent(parentEvent);
    }
  }
);
  Platform.runLater(new Runnable(){
    @Override public void run(){
      final BorderPane borderPane=new BorderPane();
      final WebView webComponent=new WebView();
      webComponent.setPrefWidth(IpnbEditorUtil.PANEL_WIDTH + 100);
      webComponent.setPrefHeight(5);
      final WebEngine engine=webComponent.getEngine();
      engine.locationProperty().addListener(new ChangeListener<String>(){
        @Override public void changed(        ObservableValue<? extends String> value,        String newValue,        String t1){
          try {
            final URI address=new URI(value.getValue());
            BrowserUtil.browse(address);
          }
 catch (          URISyntaxException e) {
            LOG.warn(e);
          }
        }
      }
);
      engine.getLoadWorker().stateProperty().addListener(new ChangeListener<Worker.State>(){
        @Override public void changed(        ObservableValue<? extends Worker.State> arg0,        Worker.State oldState,        Worker.State newState){
          if (newState == Worker.State.SUCCEEDED) {
            adjustHeight(webComponent,javafxPanel,panel);
          }
        }
      }
);
      engine.loadContent(text);
      borderPane.setCenter(webComponent);
      final Scene scene=new Scene(borderPane);
      javafxPanel.setScene(scene);
    }
  }
);
  panel.add(javafxPanel);
}
