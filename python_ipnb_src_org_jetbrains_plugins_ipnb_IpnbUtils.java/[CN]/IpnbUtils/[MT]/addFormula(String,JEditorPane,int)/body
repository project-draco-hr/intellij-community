{
  final SnuggleEngine engine=new SnuggleEngine();
  engine.getPackages().add(0,IpnbTexPackageDefinitions.getPackage());
  final SnuggleSession session=engine.createSession();
  final SnuggleInput input=new SnuggleInput(formulaText);
  try {
    session.parseInput(input);
    XMLStringOutputOptions options=new XMLStringOutputOptions();
    options.setIndenting(true);
    options.setAddingMathSourceAnnotations(false);
    final String xmlString=session.buildXMLString(options);
    if (xmlString == null)     return;
    final LayoutContextImpl context=(LayoutContextImpl)LayoutContextImpl.getDefaultLayoutContext();
    context.setParameter(Parameter.MATHSIZE,18);
    final Document document=MathMLParserSupport.parseString(xmlString);
    final BufferedImage image=Converter.getInstance().render(document,context);
    try {
      @SuppressWarnings("unchecked") Dictionary<URL,BufferedImage> cache=(Dictionary<URL,BufferedImage>)editorPane.getDocument().getProperty("imageCache");
      if (cache == null) {
        cache=new Hashtable<URL,BufferedImage>();
        editorPane.getDocument().putProperty("imageCache",cache);
      }
      final URL u=new URL(ourImagePrefix + imageIndex + ".jpg");
      cache.put(u,image);
    }
 catch (    MalformedURLException e) {
      LOG.error(e);
    }
  }
 catch (  IOException e) {
    LOG.error(e);
  }
catch (  SAXException e) {
    LOG.error(e);
  }
catch (  ParserConfigurationException e) {
    LOG.error(e);
  }
}
