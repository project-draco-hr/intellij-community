{
  try {
    if (args != null && args.length > 1) {
      HashMap<String,Object> mapOptions=new HashMap<String,Object>();
      List<String> lstSources=new ArrayList<String>();
      List<String> lstLibraries=new ArrayList<String>();
      boolean isOption=true;
      for (int i=0; i < args.length - 1; ++i) {
        String arg=args[i];
        if (isOption && arg.startsWith("-") && arg.length() > 5 && arg.charAt(4) == '=') {
          String value=arg.substring(5).toUpperCase();
          if ("TRUE".equals(value)) {
            value="1";
          }
 else           if ("FALSE".equals(value)) {
            value="0";
          }
          mapOptions.put(arg.substring(1,4),value);
        }
 else {
          isOption=false;
          if (arg.startsWith("-e=")) {
            lstLibraries.add(arg.substring(3));
          }
 else {
            lstSources.add(arg);
          }
        }
      }
      if (lstSources.isEmpty()) {
        printHelp();
      }
 else {
        ConsoleDecompiler decompiler=new ConsoleDecompiler(new PrintStreamLogger(IFernflowerLogger.INFO,System.out),mapOptions);
        for (        String source : lstSources) {
          decompiler.addSpace(new File(source),true);
        }
        for (        String library : lstLibraries) {
          decompiler.addSpace(new File(library),false);
        }
        decompiler.decompileContext(new File(args[args.length - 1]));
      }
    }
 else {
      printHelp();
    }
  }
 catch (  Exception ex) {
    ex.printStackTrace();
  }
}
