{
  State stateSpec=StoreUtil.getStateSpec(component);
  String name=stateSpec.name();
  if (changedStorages == null || !reloadData) {
    doAddComponent(name,component);
  }
  if (optimizeTestLoading()) {
    return name;
  }
  Class<T> stateClass=ComponentSerializationUtil.getStateClass(component.getClass());
  T defaultState=getDefaultState(component,name,stateClass);
  T state=defaultState;
  Storage[] storageSpecs=getComponentStorageSpecs(component,stateSpec,StateStorageOperation.READ);
  for (  Storage storageSpec : storageSpecs) {
    StateStorage stateStorage=getStateStorageManager().getStateStorage(storageSpec);
    if (stateStorage != null && (stateStorage.hasState(component,name,stateClass,reloadData) || (changedStorages != null && changedStorages.contains(stateStorage)))) {
      state=stateStorage.getState(component,name,stateClass,state);
      break;
    }
  }
  if (state != null) {
    if (defaultState != state && component instanceof FileTypeManager) {
      component.loadState(defaultState);
    }
    component.loadState(state);
  }
  validateUnusedMacros(name,true);
  return name;
}
