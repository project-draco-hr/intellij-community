{
  ServerBootstrap bootstrap=new ServerBootstrap(channelFactory);
  bootstrap.setOption("child.tcpNoDelay",true);
  bootstrap.setOption("child.keepAlive",true);
  if (xmlRpcHandlers == null) {
    final ChannelHandler handler=new PortUnificationServerHandler(openChannels);
    bootstrap.setPipelineFactory(new ChannelPipelineFactory(){
      @Override public ChannelPipeline getPipeline() throws Exception {
        return Channels.pipeline(handler);
      }
    }
);
  }
 else {
    final XmlRpcDelegatingHttpRequestHandler handler=new XmlRpcDelegatingHttpRequestHandler(xmlRpcHandlers);
    bootstrap.setPipelineFactory(new ChannelPipelineFactory(){
      @Override public ChannelPipeline getPipeline() throws Exception {
        return Channels.pipeline(new HttpRequestDecoder(),new HttpChunkAggregator(1048576),new HttpResponseEncoder(),handler);
      }
    }
);
  }
  return bootstrap;
}
