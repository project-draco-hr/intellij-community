{
  super(new BorderLayout());
  myProject=project;
  myNotificationArea=area;
  myPackagesTableModel=new DefaultTableModel(new String[]{"Package","Version","Latest"},0){
    @Override public boolean isCellEditable(    int i,    int i1){
      return false;
    }
  }
;
  final TableCellRenderer tableCellRenderer=new MyTableCellRenderer();
  myPackagesTable=new JBTable(myPackagesTableModel){
    @Override public TableCellRenderer getCellRenderer(    int row,    int column){
      return tableCellRenderer;
    }
  }
;
  myPackagesTable.getTableHeader().setReorderingAllowed(false);
  myUpgradeButton=new AnActionButton("Upgrade",IconUtil.getMoveUpIcon()){
    @Override public void actionPerformed(    AnActionEvent e){
      upgradeAction();
    }
  }
;
  final ToolbarDecorator decorator=ToolbarDecorator.createDecorator(myPackagesTable).disableUpDownActions().setAddAction(new AnActionButtonRunnable(){
    @Override public void run(    AnActionButton button){
      if (myPackageManagementService != null) {
        ManagePackagesDialog dialog=createManagePackagesDialog();
        dialog.show();
      }
    }
  }
).setRemoveAction(new AnActionButtonRunnable(){
    @Override public void run(    AnActionButton button){
      uninstallAction();
    }
  }
).addExtraAction(myUpgradeButton);
  decorator.setPreferredSize(new Dimension(500,500));
  add(decorator.createPanel());
  myInstallButton=decorator.getActionsPanel().getAnActionButton(CommonActionsPanel.Buttons.ADD);
  myUninstallButton=decorator.getActionsPanel().getAnActionButton(CommonActionsPanel.Buttons.REMOVE);
  myInstallButton.setEnabled(false);
  myUninstallButton.setEnabled(false);
  myUpgradeButton.setEnabled(false);
  myPackagesTable.getSelectionModel().addListSelectionListener(new ListSelectionListener(){
    @Override public void valueChanged(    ListSelectionEvent event){
      updateUninstallUpgrade();
    }
  }
);
  new DoubleClickListener(){
    @Override protected boolean onDoubleClick(    MouseEvent e){
      if (myPackageManagementService != null && myInstallButton.isEnabled()) {
        ManagePackagesDialog dialog=createManagePackagesDialog();
        Point p=e.getPoint();
        int row=myPackagesTable.rowAtPoint(p);
        int column=myPackagesTable.columnAtPoint(p);
        if (row >= 0 && column >= 0) {
          Object pkg=myPackagesTable.getValueAt(row,0);
          if (pkg instanceof InstalledPackage) {
            dialog.selectPackage((InstalledPackage)pkg);
          }
        }
        dialog.show();
        return true;
      }
      return false;
    }
  }
.installOn(myPackagesTable);
}
