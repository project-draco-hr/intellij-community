{
  if (visited.contains(type)) {
    return UNKNOWN;
  }
  visited.add(type);
  if (type == null) {
    return UNKNOWN;
  }
  if (type instanceof PyTypeReference) {
    final PyType resolved=((PyTypeReference)type).resolve(null,context);
    if (resolved != null) {
      return getTypeName(resolved,context,visited);
    }
    return UNKNOWN;
  }
  final String name=type.getName();
  if (type instanceof PyCollectionType) {
    final PyType elementType=((PyCollectionType)type).getElementType(context);
    if (elementType != null) {
      return String.format("%s of %s",name,getTypeName(elementType,context,visited));
    }
  }
  if (type instanceof PyUnionType) {
    return String.format("one of (%s)",StringUtil.join(((PyUnionType)type).getMembers(),new Function<PyType,String>(){
      @Override public String fun(      PyType t){
        return getTypeName(t,context,visited);
      }
    }
,", "));
  }
  return name != null ? name : UNKNOWN;
}
