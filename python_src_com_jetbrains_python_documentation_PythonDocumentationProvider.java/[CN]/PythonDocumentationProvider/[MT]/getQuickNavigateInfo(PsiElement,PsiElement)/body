{
  for (  final PythonDocumentationQuickInfoProvider point : PythonDocumentationQuickInfoProvider.EP_NAME.getExtensions()) {
    String info=point.getQuickInfo(originalElement);
    if (info != null) {
      return info;
    }
  }
  if (element instanceof PyFunction) {
    PyFunction func=(PyFunction)element;
    StringBuilder cat=new StringBuilder();
    PyClass cls=func.getContainingClass();
    if (cls != null) {
      String cls_name=cls.getName();
      cat.append("class ").append(cls_name).append("\n");
    }
    String summary="";
    final PyStringLiteralExpression docStringExpression=func.getDocStringExpression();
    if (docStringExpression != null) {
      final StructuredDocString docString=DocStringUtil.parse(docStringExpression.getStringValue());
      if (docString != null) {
        summary=docString.getSummary();
      }
    }
    return $(cat.toString()).add(describeDecorators(func,LSame2,", ",LSame1)).add(describeFunction(func,LSame2,LSame1)).toString() + "\n" + summary;
  }
 else   if (element instanceof PyClass) {
    PyClass cls=(PyClass)element;
    String summary="";
    PyStringLiteralExpression docStringExpression=cls.getDocStringExpression();
    if (docStringExpression == null) {
      final PyFunction initOrNew=cls.findInitOrNew(false,null);
      if (initOrNew != null) {
        docStringExpression=initOrNew.getDocStringExpression();
      }
    }
    if (docStringExpression != null) {
      final StructuredDocString docString=DocStringUtil.parse(docStringExpression.getStringValue());
      if (docString != null) {
        summary=docString.getSummary();
      }
    }
    return describeDecorators(cls,LSame2,", ",LSame1).add(describeClass(cls,LSame2,false,false)).toString() + "\n" + summary;
  }
 else   if (element instanceof PyExpression) {
    return describeExpression((PyExpression)element,originalElement);
  }
  return null;
}
