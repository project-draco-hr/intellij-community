{
  ChainIterable<String> cat=new ChainIterable<String>();
  final String name=fun.getName();
  cat.addItem("def ").addWith(func_name_wrapper,$(name));
  final TypeEvalContext context=TypeEvalContext.userInitiated(fun.getContainingFile());
  final List<PyParameter> parameters=PyUtil.getParameters(fun,context);
  final String paramStr="(" + StringUtil.join(parameters,new Function<PyParameter,String>(){
    @Override public String fun(    PyParameter parameter){
      return PyUtil.getReadableRepr(parameter,false);
    }
  }
,", ") + ")";
  cat.addItem(escaper.apply(paramStr));
  if (!PyNames.INIT.equals(name)) {
    cat.addItem(escaper.apply("\nInferred type: "));
    getTypeDescription(fun,cat);
    cat.addItem(BR);
  }
  return cat;
}
