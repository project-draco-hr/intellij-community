{
  PyElementGenerator elementGenerator=PyElementGenerator.getInstance(project);
  PsiWhiteSpace whitespace=PsiTreeUtil.getPrevSiblingOfType(insertPlace,PsiWhiteSpace.class);
  String ws="\n";
  if (whitespace != null) {
    String[] spaces=whitespace.getText().split("\n");
    if (spaces.length > 1) {
      ws+=spaces[spaces.length - 1];
    }
  }
  String docContent=ws + generateDocumentationContentStub(function,ws,true);
  PyExpressionStatement string=elementGenerator.createDocstring("\"\"\"" + docContent + "\"\"\"");
  if (insertPlace.getStatements().length != 0) {
    insertPlace.addBefore(string,insertPlace.getStatements()[0]);
  }
  PyStringLiteralExpression docstring=function.getDocStringExpression();
  if (editor != null && docstring != null) {
    int offset=docstring.getTextOffset();
    editor.getCaretModel().moveToOffset(offset);
    editor.getCaretModel().moveCaretRelatively(0,1,false,false,false);
  }
}
