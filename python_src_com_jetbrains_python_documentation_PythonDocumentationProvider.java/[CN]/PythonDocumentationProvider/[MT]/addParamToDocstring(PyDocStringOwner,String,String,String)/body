{
  final PyStringLiteralExpression docstring=function.getDocStringExpression();
  String text;
  if (docstring != null)   text=docstring.getText();
 else   text="\"\"\"\"\"\"";
  String[] lines=LineTokenizer.tokenize(text,true);
  StringBuilder replacementText=new StringBuilder();
  int ind=lines.length - 1;
  if (lines.length == 1) {
    return createSingleLineReplacement(function,keyword,paramName,prefix);
  }
  for (int i=0; i != lines.length - 1; ++i) {
    String line=lines[i];
    if (line.contains(prefix)) {
      ind=i;
      break;
    }
    replacementText.append(line);
  }
  int offset=addParamOrType(replacementText,function,false,keyword,paramName,prefix);
  for (int i=ind; i != lines.length; ++i) {
    String line=lines[i];
    replacementText.append(line);
  }
  return new Pair<String,Integer>(replacementText.toString(),offset);
}
