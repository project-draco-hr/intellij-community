{
  StringBuilder builder=new StringBuilder();
  if (checkReturn) {
    RaiseVisitor visitor=new RaiseVisitor();
    PyStatementList statementList=element.getStatementList();
    statementList.accept(visitor);
    if (visitor.myHasReturn) {
      builder.append(prefix).append("return:").append(offset);
      if (PyCodeInsightSettings.getInstance().INSERT_TYPE_DOCSTUB) {
        builder.append(prefix).append("rtype:").append(offset);
      }
    }
    if (visitor.myHasRaise) {
      builder.append(prefix).append("raise");
      if (visitor.myRaiseTarget != null) {
        String raiseTarget=visitor.myRaiseTarget.getText();
        if (visitor.myRaiseTarget instanceof PyCallExpression) {
          final PyExpression callee=((PyCallExpression)visitor.myRaiseTarget).getCallee();
          if (callee != null) {
            raiseTarget=callee.getText();
          }
        }
        builder.append(" ").append(raiseTarget);
      }
      builder.append(":").append(offset);
    }
  }
 else {
    builder.append(prefix).append("return:").append(offset);
    if (PyCodeInsightSettings.getInstance().INSERT_TYPE_DOCSTUB) {
      builder.append(prefix).append("rtype:").append(offset);
    }
  }
  return builder.toString();
}
