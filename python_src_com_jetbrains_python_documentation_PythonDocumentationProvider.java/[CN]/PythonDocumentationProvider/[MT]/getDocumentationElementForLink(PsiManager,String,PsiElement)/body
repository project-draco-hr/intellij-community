{
  if (link.equals(LINK_TYPE_CLASS)) {
    return inferContainingClassOf(context);
  }
 else   if (link.equals(LINK_TYPE_PARAM)) {
    return inferClassOfParameter(context);
  }
 else   if (link.startsWith(LINK_TYPE_PARENT)) {
    final PyClass cls=inferContainingClassOf(context);
    if (cls != null) {
      final String desiredName=link.substring(LINK_TYPE_PARENT.length());
      for (      PyClass parent : cls.getAncestorClasses(null)) {
        final String parentName=parent.getName();
        if (parentName != null && parentName.equals(desiredName))         return parent;
      }
    }
  }
 else   if (link.startsWith(LINK_TYPE_TYPENAME)) {
    final String typeName=link.substring(LINK_TYPE_TYPENAME.length());
    final PyType type=PyTypeParser.getTypeByName(context,typeName);
    if (type instanceof PyClassType) {
      return ((PyClassType)type).getPyClass();
    }
  }
  return null;
}
