{
  if (link.equals(LINK_TYPE_CLASS)) {
    return inferContainingClassOf(context);
  }
 else   if (link.equals(LINK_TYPE_PARAM)) {
    return inferClassOfParameter(context);
  }
 else   if (link.startsWith(LINK_TYPE_PARENT)) {
    PyClass cls=inferContainingClassOf(context);
    if (cls != null) {
      String desired_name=link.substring(LINK_TYPE_PARENT.length());
      for (      PyClassRef parent : cls.iterateAncestors()) {
        final String parent_name=parent.getClassName();
        if (parent_name != null && parent_name.equals(desired_name))         return parent.getPyClass();
      }
    }
  }
 else   if (link.startsWith(LINK_TYPE_TYPENAME)) {
    String typeName=link.substring(LINK_TYPE_TYPENAME.length());
    PyType type=PyTypeParser.getTypeByName(context,typeName);
    if (type instanceof PyClassType) {
      return ((PyClassType)type).getPyClass();
    }
  }
  return null;
}
