{
  ChainIterable<String> cat=new ChainIterable<String>();
  final String name=cls.getName();
  cat.addItem("class ");
  if (allow_html && link_own_name)   cat.addWith(LinkMyClass,$(name));
 else   cat.addWith(name_wrapper,$(name));
  final PyExpression[] ancestors=cls.getSuperClassExpressions();
  if (ancestors.length > 0) {
    cat.addItem("(");
    boolean is_not_first=false;
    for (    PyExpression parent : ancestors) {
      if (is_not_first)       cat.addItem(", ");
 else       is_not_first=true;
      final String parent_name=parent.getName();
      if (allow_html)       cat.addWith(new DocumentationBuilderKit.LinkWrapper(LINK_TYPE_PARENT + parent_name),$(parent_name));
 else       cat.addItem(parent_name);
    }
    cat.addItem(")");
  }
  return cat;
}
