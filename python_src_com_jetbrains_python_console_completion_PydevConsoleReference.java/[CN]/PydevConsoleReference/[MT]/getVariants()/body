{
  List<LookupElement> variants=Lists.newArrayList();
  try {
    final List<PydevCompletionVariant> completions=myCommunication.getCompletions(getText(),myPrefix);
    for (    PydevCompletionVariant completion : completions) {
      final PsiManager manager=myElement.getManager();
      final String name=completion.getName();
      final int type=completion.getType();
      LookupElementBuilder builder=LookupElementBuilder.create(new PydevConsoleElement(manager,name,completion.getDescription())).withIcon(PyCodeCompletionImages.getImageForType(type));
      String args=completion.getArgs();
      if (args.equals("(%)")) {
        builder.withPresentableText("%" + completion.getName());
        builder=builder.withInsertHandler(new InsertHandler<LookupElement>(){
          @Override public void handleInsert(          InsertionContext context,          LookupElement item){
            final Editor editor=context.getEditor();
            final Document document=editor.getDocument();
            int offset=context.getStartOffset();
            if (offset == 0 || !"%".equals(document.getText(TextRange.from(offset - 1,1)))) {
              document.insertString(offset,"%");
            }
          }
        }
);
        args="";
      }
 else       if (!StringUtil.isEmptyOrSpaces(args)) {
        builder=builder.withTailText(args);
      }
      if (type == IToken.TYPE_FUNCTION || args.endsWith(")")) {
        builder=builder.withInsertHandler(ParenthesesInsertHandler.WITH_PARAMETERS);
      }
      variants.add(builder);
    }
  }
 catch (  Exception e) {
  }
  return variants.toArray();
}
