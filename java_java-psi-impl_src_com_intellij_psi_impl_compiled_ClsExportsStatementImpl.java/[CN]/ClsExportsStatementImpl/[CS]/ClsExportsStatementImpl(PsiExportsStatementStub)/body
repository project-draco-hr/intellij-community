{
  super(stub);
  myPackageReference=new AtomicNotNullLazyValue<PsiJavaCodeReferenceElement>(){
    @NotNull @Override protected PsiJavaCodeReferenceElement compute(){
      return new ClsJavaCodeReferenceElementImpl(ClsExportsStatementImpl.this,getStub().getPackageName());
    }
  }
;
  myModuleReferences=new AtomicNotNullLazyValue<Iterable<PsiJavaModuleReferenceElement>>(){
    @NotNull @Override protected Iterable<PsiJavaModuleReferenceElement> compute(){
      return ContainerUtil.map(getStub().getTargets(),new Function<String,PsiJavaModuleReferenceElement>(){
        @Override public PsiJavaModuleReferenceElement fun(        String target){
          return new ClsJavaModuleReferenceElementImpl(ClsExportsStatementImpl.this,target);
        }
      }
);
    }
  }
;
}
