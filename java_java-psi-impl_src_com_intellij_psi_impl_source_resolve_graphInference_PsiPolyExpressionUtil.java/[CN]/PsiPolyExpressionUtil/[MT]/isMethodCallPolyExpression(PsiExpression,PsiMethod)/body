{
  if (isInAssignmentOrInvocationContext(expression) && ((PsiCallExpression)expression).getTypeArguments().length == 0) {
    if (method != null) {
      final Set<PsiTypeParameter> typeParameters=new HashSet<PsiTypeParameter>(Arrays.asList(method.getTypeParameters()));
      if (!typeParameters.isEmpty()) {
        final PsiType returnType=method.getReturnType();
        if (returnType != null) {
          return mentionsTypeParameters(returnType,typeParameters);
        }
      }
 else       if (method.isConstructor() && expression instanceof PsiNewExpression) {
        final PsiJavaCodeReferenceElement classReference=((PsiNewExpression)expression).getClassOrAnonymousClassReference();
        if (classReference != null) {
          final PsiReferenceParameterList parameterList=classReference.getParameterList();
          if (parameterList != null) {
            final PsiTypeElement[] parameterElements=parameterList.getTypeParameterElements();
            if (parameterElements.length == 1 && parameterElements[0].getType() instanceof PsiDiamondType) {
              return true;
            }
          }
        }
      }
    }
 else {
      return true;
    }
  }
  return false;
}
