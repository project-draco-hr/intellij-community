{
  PyUtil.ensureWritable(this);
  if (afterThis == null) {
    addArgumentFirst(argument);
    return;
  }
  boolean good=false;
  for (  PyExpression expression : getArguments()) {
    if (expression == afterThis) {
      good=true;
      break;
    }
  }
  if (!good) {
    throw new IllegalArgumentException("Expression " + afterThis + " is not an argument ("+ Arrays.toString(getArguments())+ ")");
  }
  ASTNode node=afterThis.getNode().getTreeNext();
  while (node != null) {
    IElementType type=node.getElementType();
    if (type == PyTokenTypes.RPAR) {
      addArgumentNode(argument,node,true);
      break;
    }
 else     if (PyElementTypes.EXPRESSIONS.contains(type)) {
      addArgumentNode(argument,node,true);
      break;
    }
 else     if (type == PyTokenTypes.COMMA) {
      ASTNode next=PyUtil.getNextNonWhitespace(node);
      if (next == null) {
        addArgumentLastWithoutComma(argument);
      }
 else       if (next.getElementType() == PyTokenTypes.RPAR) {
        addArgumentNode(argument,next,false);
      }
 else {
        addArgumentNode(argument,next,false);
      }
      break;
    }
    node=node.getTreeNext();
  }
}
