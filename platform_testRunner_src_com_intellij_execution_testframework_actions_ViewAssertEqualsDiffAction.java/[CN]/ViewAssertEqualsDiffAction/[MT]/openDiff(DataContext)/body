{
  final AbstractTestProxy testProxy=AbstractTestProxy.DATA_KEY.getData(context);
  if (testProxy != null) {
    final AbstractTestProxy.AssertEqualsDiffViewerProvider diffViewerProvider=testProxy.getDiffViewerProvider();
    if (diffViewerProvider != null) {
      final Project project=CommonDataKeys.PROJECT.getData(context);
      if (diffViewerProvider instanceof AbstractTestProxy.AssertEqualsMultiDiffViewProvider) {
        final TestFrameworkRunningModel runningModel=TestTreeView.MODEL_DATA_KEY.getData(context);
        final List<AbstractTestProxy.AssertEqualsMultiDiffViewProvider> providers=collectAvailableProviders(runningModel);
        final MyAssertEqualsDiffChain diffChain=providers.size() > 1 ? new MyAssertEqualsDiffChain(providers,(AbstractTestProxy.AssertEqualsMultiDiffViewProvider)diffViewerProvider) : null;
        ((AbstractTestProxy.AssertEqualsMultiDiffViewProvider)diffViewerProvider).openMultiDiff(project,diffChain);
      }
 else {
        diffViewerProvider.openDiff(project);
      }
      return true;
    }
  }
  return false;
}
