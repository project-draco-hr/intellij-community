{
  final PyPackage pyPackage=new PyPackage("somePackage","1.2.3.4",null,Collections.<PyRequirement>emptyList());
  Assert.assertTrue("Failed to check normal version",pyPackage.matches(PyRequirement.fromStringGuaranteed("somePackage>=1.2")));
  Assert.assertTrue("Failed to check normal version",pyPackage.matches(PyRequirement.fromStringGuaranteed("somePackage>=1.2.3")));
  Assert.assertTrue("Failed to check normal version",pyPackage.matches(PyRequirement.fromStringGuaranteed("somePackage>=1")));
  Assert.assertTrue("Failed to check normal version",pyPackage.matches(PyRequirement.fromStringGuaranteed("somePackage>=1.2.3.4")));
  Assert.assertFalse("Failed to check normal version",pyPackage.matches(PyRequirement.fromStringGuaranteed("somePackage>=1.2.3.4.5")));
  Assert.assertFalse("Failed to check normal version",pyPackage.matches(PyRequirement.fromStringGuaranteed("somePackage>=2")));
  Assert.assertFalse("Failed to check normal version",pyPackage.matches(PyRequirement.fromStringGuaranteed("somePackage>=2.2")));
  Assert.assertFalse("Failed to check normal version",pyPackage.matches(PyRequirement.fromStringGuaranteed("somePackage>=1.9.1")));
  Assert.assertFalse("Failed to check normal version",pyPackage.matches(PyRequirement.fromStringGuaranteed("somePackage>=1.2.3.5")));
  Assert.assertFalse("Failed to check normal version",pyPackage.matches(PyRequirement.fromStringGuaranteed("PackageFoo>=1.2.3.4")));
}
