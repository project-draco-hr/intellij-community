{
  final PyPackage pyPackage=new PyPackage("somePackage","1.2.3.4",null,Collections.<PyRequirement>emptyList());
  assertTrue("Failed to check normal version",pyPackage.matches(createRequirement("somePackage>=1.2")));
  assertTrue("Failed to check normal version",pyPackage.matches(createRequirement("somePackage>=1.2.3")));
  assertTrue("Failed to check normal version",pyPackage.matches(createRequirement("somePackage>=1")));
  assertTrue("Failed to check normal version",pyPackage.matches(createRequirement("somePackage>=1.2.3.4")));
  assertFalse("Failed to check normal version",pyPackage.matches(createRequirement("somePackage>=1.2.3.4.5")));
  assertFalse("Failed to check normal version",pyPackage.matches(createRequirement("somePackage>=2")));
  assertFalse("Failed to check normal version",pyPackage.matches(createRequirement("somePackage>=2.2")));
  assertFalse("Failed to check normal version",pyPackage.matches(createRequirement("somePackage>=1.9.1")));
  assertFalse("Failed to check normal version",pyPackage.matches(createRequirement("somePackage>=1.2.3.5")));
  assertFalse("Failed to check normal version",pyPackage.matches(createRequirement("PackageFoo>=1.2.3.4")));
}
