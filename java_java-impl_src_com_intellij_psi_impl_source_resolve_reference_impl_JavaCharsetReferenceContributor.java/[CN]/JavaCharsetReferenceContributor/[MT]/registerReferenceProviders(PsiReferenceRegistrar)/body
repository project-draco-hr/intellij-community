{
  registrar.registerReferenceProvider(literalExpression().methodCallParameter(0,psiMethod().withName(string().oneOf("forName","isSupported")).inClass(Charset.class.getName())),new PsiReferenceProvider(){
    @NotNull @Override public PsiReference[] getReferencesByElement(    @NotNull PsiElement element,    @NotNull ProcessingContext context){
      PsiLiteralExpression literal=(PsiLiteralExpression)element;
      Object value=literal.getValue();
      if (value instanceof String) {
        return new PsiReference[]{new EncodingReference(element,(String)value,StringLiteralManipulator.getValueRange(literal))};
      }
      return PsiReference.EMPTY_ARRAY;
    }
  }
);
}
