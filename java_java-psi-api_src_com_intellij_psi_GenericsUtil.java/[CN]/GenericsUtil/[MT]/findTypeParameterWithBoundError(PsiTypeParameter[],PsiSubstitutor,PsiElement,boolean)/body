{
  nextTypeParam:   for (  PsiTypeParameter typeParameter : typeParams) {
    PsiType substituted=substitutor.substitute(typeParameter);
    if (substituted == null)     return null;
    if (context != null) {
      substituted=PsiUtil.captureToplevelWildcards(substituted,context);
    }
    PsiClassType[] extendsTypes=typeParameter.getExtendsListTypes();
    for (    PsiClassType type : extendsTypes) {
      PsiType extendsType=substitutor.substitute(type);
      if (substituted instanceof PsiWildcardType) {
        if (((PsiWildcardType)substituted).isSuper()) {
          continue;
        }
        final PsiType extendsBound=((PsiWildcardType)substituted).getExtendsBound();
        if (acceptExtendsBound(extendsType,extendsBound)) {
          continue nextTypeParam;
        }
      }
 else       if (substituted instanceof PsiIntersectionType) {
        for (        PsiType extendsBound : ((PsiIntersectionType)substituted).getConjuncts()) {
          if (acceptExtendsBound(extendsType,extendsBound))           continue nextTypeParam;
        }
      }
 else       if (substituted instanceof PsiCapturedWildcardType) {
        final PsiType extendsBound=((PsiCapturedWildcardType)substituted).getUpperBound();
        if (acceptExtendsBound(extendsType,extendsBound)) {
          continue nextTypeParam;
        }
      }
      if (extendsType != null && !TypeConversionUtil.isAssignable(extendsType,substituted,allowUncheckedConversion)) {
        return Pair.create(typeParameter,extendsType);
      }
    }
  }
  return null;
}
