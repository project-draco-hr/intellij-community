{
  nextTypeParam:   for (  PsiTypeParameter typeParameter : typeParams) {
    PsiType substituted=substitutor.substitute(typeParameter);
    if (substituted == null)     return true;
    substituted=PsiUtil.captureToplevelWildcards(substituted,context);
    PsiClassType[] extendsTypes=typeParameter.getExtendsListTypes();
    for (    PsiClassType type : extendsTypes) {
      PsiType extendsType=substitutor.substitute(type);
      if (substituted instanceof PsiWildcardType) {
        if (((PsiWildcardType)substituted).isSuper()) {
          continue;
        }
        final PsiType extendsBound=((PsiWildcardType)substituted).getExtendsBound();
        if (TypeConversionUtil.erasure(extendsType).equals(TypeConversionUtil.erasure(extendsBound))) {
          if (extendsBound instanceof PsiClassType) {
            if (acceptExtendsBound((PsiClassType)extendsBound,0))             continue;
          }
 else           if (extendsBound instanceof PsiIntersectionType) {
            for (            PsiType psiType : ((PsiIntersectionType)extendsBound).getConjuncts()) {
              if (psiType instanceof PsiClassType) {
                if (acceptExtendsBound((PsiClassType)psiType,0))                 continue nextTypeParam;
              }
            }
          }
        }
      }
      if (!TypeConversionUtil.isAssignable(extendsType,substituted)) {
        return false;
      }
    }
  }
  return true;
}
