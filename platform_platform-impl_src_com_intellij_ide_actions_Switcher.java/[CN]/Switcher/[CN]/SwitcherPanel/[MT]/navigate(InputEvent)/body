{
  final boolean openInNewWindow=e != null && e.isShiftDown() && e instanceof KeyEvent && ((KeyEvent)e).getKeyCode() == VK_ENTER;
  final Object[] values=getSelectedList().getSelectedValues();
  final String searchQuery=mySpeedSearch != null ? mySpeedSearch.getEnteredPrefix() : null;
  myPopup.cancel(null);
  if (values.length == 0) {
    tryToOpenFileSearch(e,searchQuery);
  }
 else   if (values[0] instanceof ToolWindow) {
    final ToolWindow toolWindow=(ToolWindow)values[0];
    IdeFocusManager.getInstance(project).doWhenFocusSettlesDown(new Runnable(){
      @Override public void run(){
        toolWindow.activate(null,true,true);
      }
    }
);
  }
 else {
    IdeFocusManager.getInstance(project).doWhenFocusSettlesDown(new Runnable(){
      @Override public void run(){
        final FileEditorManagerImpl manager=(FileEditorManagerImpl)FileEditorManager.getInstance(project);
        for (        Object value : values) {
          if (value instanceof FileInfo) {
            final FileInfo info=(FileInfo)value;
            VirtualFile file=info.first;
            if (openInNewWindow) {
              manager.openFileInNewWindow(file);
            }
 else             if (info.second != null) {
              EditorWindow wnd=findAppropriateWindow(info);
              if (wnd != null) {
                manager.openFileImpl2(wnd,file,true);
                manager.addSelectionRecord(file,wnd);
              }
            }
 else {
              boolean oldValue=UISettings.getInstance().REUSE_NOT_MODIFIED_TABS;
              UISettings.getInstance().REUSE_NOT_MODIFIED_TABS=false;
              manager.openFile(file,true,true);
              if (oldValue) {
                CommandProcessor.getInstance().executeCommand(project,new Runnable(){
                  @Override public void run(){
                    UISettings.getInstance().REUSE_NOT_MODIFIED_TABS=true;
                  }
                }
,"",null);
              }
            }
          }
        }
      }
    }
);
  }
}
