{
  myContext=context;
  myWizard=wizard;
  myModulesProvider=modulesProvider;
  myTemplatesMap=new ConcurrentMultiMap<TemplatesGroup,ProjectTemplate>();
  List<TemplatesGroup> groups=fillTemplatesMap(context);
  myProjectTypeList.setModel(new CollectionListModel<TemplatesGroup>(groups));
  myProjectTypeList.setCellRenderer(new ColoredListCellRenderer<TemplatesGroup>(){
    @Override protected void customizeCellRenderer(    JList list,    TemplatesGroup value,    int index,    boolean selected,    boolean hasFocus){
      if (value.getParentGroup() != null) {
        append("         ");
      }
 else {
        setBorder(IdeBorderFactory.createEmptyBorder(2,10,2,5));
        setIcon(value.getIcon());
      }
      append(value.getName());
    }
  }
);
  myProjectTypeList.getSelectionModel().addListSelectionListener(new ListSelectionListener(){
    @Override public void valueChanged(    ListSelectionEvent e){
      projectTypeChanged();
    }
  }
);
  myTemplatesList.setNewProject(context.isCreatingNewProject());
  myTemplatesList.addListSelectionListener(new ListSelectionListener(){
    @Override public void valueChanged(    ListSelectionEvent e){
      updateSelection();
    }
  }
);
  for (  ProjectTemplate category : myTemplatesMap.values()) {
    myWizard.getSequence().addStepsForBuilder(myBuilders.get(category),context,modulesProvider);
  }
  myProjectTypeList.setSelectedIndex(0);
}
