{
  ModuleBuilder builder=myBuilders.get(projectCategory);
  JComponent panel=builder.getCustomOptionsPanel(new Disposable(){
    @Override public void dispose(){
      disposeUIResources();
    }
  }
);
  String card;
  if (panel != null) {
    card=builder.getBuilderId();
    if (myCards.add(card)) {
      myOptionsPanel.add(panel,card);
    }
  }
 else {
    card=FRAMEWORKS_CARD;
    List<FrameworkSupportInModuleProvider> allProviders=FrameworkSupportUtil.getProviders(builder);
    List<FrameworkSupportInModuleProvider> matched=ContainerUtil.filter(allProviders,new Condition<FrameworkSupportInModuleProvider>(){
      @Override public boolean value(      FrameworkSupportInModuleProvider provider){
        return matchFramework(projectCategory,provider);
      }
    }
);
    myFrameworksPanel.setProviders(matched,new HashSet<String>(Arrays.asList(projectCategory.getAssociatedFrameworkIds())),new HashSet<String>(Arrays.asList(projectCategory.getPreselectedFrameworkIds())));
    myFrameworksTab.setEnabled(!matched.isEmpty());
    updateTemplates(projectCategory,true);
  }
  ((CardLayout)myOptionsPanel.getLayout()).show(myOptionsPanel,card);
}
