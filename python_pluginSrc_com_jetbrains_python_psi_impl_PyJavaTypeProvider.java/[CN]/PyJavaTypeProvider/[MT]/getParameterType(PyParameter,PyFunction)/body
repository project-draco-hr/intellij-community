{
  if (!(param.getParent() instanceof PyParameterList))   return null;
  PyParameter[] params=((PyParameterList)param.getParent()).getParameters();
  final int index=ArrayUtil.indexOf(params,param);
  if (index < 0)   return null;
  final List<PyType> superMethodParameterTypes=new ArrayList<PyType>();
  PySuperMethodsSearch.search(func).forEach(new Processor<PsiElement>(){
    public boolean process(    final PsiElement psiElement){
      if (psiElement instanceof PsiMethod) {
        final PsiMethod method=(PsiMethod)psiElement;
        final PsiParameter[] psiParameters=method.getParameterList().getParameters();
        int javaIndex=method.hasModifierProperty(PsiModifier.STATIC) ? index : index - 1;
        if (javaIndex < psiParameters.length) {
          PsiType paramType=psiParameters[javaIndex].getType();
          if (paramType instanceof PsiClassType) {
            final PsiClass psiClass=((PsiClassType)paramType).resolve();
            if (psiClass != null) {
              superMethodParameterTypes.add(new PyJavaClassType(psiClass));
            }
          }
        }
      }
      return true;
    }
  }
);
  if (superMethodParameterTypes.size() > 0) {
    return superMethodParameterTypes.get(0);
  }
  return null;
}
