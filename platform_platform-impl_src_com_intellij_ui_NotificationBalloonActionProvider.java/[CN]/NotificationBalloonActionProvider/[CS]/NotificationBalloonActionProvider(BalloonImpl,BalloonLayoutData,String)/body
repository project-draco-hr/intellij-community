{
  myLayoutData=layoutData;
  myDisplayGroupId=displayGroupId;
  myBalloon=balloon;
  if (myDisplayGroupId == null || !NotificationsConfigurationImpl.getInstanceImpl().isRegistered(myDisplayGroupId)) {
    mySettingButton=null;
  }
 else {
    mySettingButton=myBalloon.new ActionButton(icon(AllIcons.Ide.Notification.Gear),icon(AllIcons.Ide.Notification.GearHover),new Consumer<MouseEvent>(){
      @Override public void consume(      MouseEvent event){
        final NotificationsConfigurable configurable=new NotificationsConfigurable();
        ShowSettingsUtil.getInstance().editConfigurable(myLayoutData.project,configurable,new Runnable(){
          @Override public void run(){
            configurable.enableSearch(myDisplayGroupId).run();
          }
        }
);
      }
    }
);
    myActions.add(mySettingButton);
  }
  myCloseButton=myBalloon.new ActionButton(icon(AllIcons.Ide.Notification.Close),icon(AllIcons.Ide.Notification.CloseHover),new Consumer<MouseEvent>(){
    @Override public void consume(    MouseEvent event){
      final int modifiers=event.getModifiers();
      SwingUtilities.invokeLater(new Runnable(){
        @Override public void run(){
          if ((modifiers & InputEvent.ALT_MASK) != 0) {
            myLayoutData.closeAll.run();
          }
 else {
            myBalloon.hide();
          }
        }
      }
);
    }
  }
);
  myActions.add(myCloseButton);
  layoutData.showActions=new Computable<Boolean>(){
    @Override public Boolean compute(){
      for (      BalloonImpl.ActionButton action : myActions) {
        if (!action.isShowing() || !action.hasPaint()) {
          return Boolean.FALSE;
        }
      }
      return Boolean.TRUE;
    }
  }
;
}
