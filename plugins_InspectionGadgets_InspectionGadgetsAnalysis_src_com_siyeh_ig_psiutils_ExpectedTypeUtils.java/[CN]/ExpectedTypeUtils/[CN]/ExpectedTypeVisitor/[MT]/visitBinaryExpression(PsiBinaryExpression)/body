{
  final PsiExpression rhs=binaryExpression.getROperand();
  if (rhs == null) {
    expectedType=null;
    return;
  }
  final PsiExpression lhs=binaryExpression.getLOperand();
  PsiType lhsType=lhs.getType();
  if (lhsType == null) {
    expectedType=null;
    return;
  }
  PsiType rhsType=rhs.getType();
  if (rhsType == null) {
    expectedType=null;
    return;
  }
  final IElementType tokenType=binaryExpression.getOperationTokenType();
  final PsiType type=binaryExpression.getType();
  if (TypeUtils.isJavaLangString(type) || isArithmeticOperation(tokenType) || isBooleanOperation(tokenType)) {
    expectedType=type;
  }
 else   if (isShiftOperation(tokenType)) {
    if (lhs == wrappedExpression) {
      expectedType=unaryNumericPromotion(lhsType);
    }
 else {
      expectedType=unaryNumericPromotion(rhsType);
    }
  }
 else   if (ComparisonUtils.isEqualityComparison(binaryExpression)) {
    final PsiType wrappedExpressionType=wrappedExpression.getType();
    if (TypeConversionUtil.isPrimitiveAndNotNull(wrappedExpressionType)) {
      expectedType=wrappedExpressionType;
      return;
    }
    if (lhs == wrappedExpression) {
      if (TypeConversionUtil.isPrimitiveAndNotNull(rhsType)) {
        expectedType=PsiPrimitiveType.getUnboxedType(wrappedExpressionType);
        return;
      }
      expectedType=TypeUtils.getObjectType(wrappedExpression);
    }
 else {
      if (TypeConversionUtil.isPrimitiveAndNotNull(lhsType)) {
        expectedType=PsiPrimitiveType.getUnboxedType(wrappedExpressionType);
        return;
      }
      expectedType=TypeUtils.getObjectType(wrappedExpression);
    }
  }
 else   if (ComparisonUtils.isComparisonOperation(tokenType)) {
    if (lhs == wrappedExpression && !TypeConversionUtil.isPrimitiveAndNotNull(lhsType)) {
      lhsType=PsiPrimitiveType.getUnboxedType(lhsType);
      if (lhsType == null) {
        expectedType=null;
        return;
      }
    }
    if (rhs == wrappedExpression && !TypeConversionUtil.isPrimitiveAndNotNull(rhsType)) {
      rhsType=PsiPrimitiveType.getUnboxedType(rhsType);
      if (rhsType == null) {
        expectedType=null;
        return;
      }
    }
    if (PsiType.DOUBLE.equals(lhsType) || PsiType.DOUBLE.equals(rhsType)) {
      expectedType=PsiType.DOUBLE;
    }
 else     if (PsiType.FLOAT.equals(lhsType) || PsiType.FLOAT.equals(rhsType)) {
      expectedType=PsiType.FLOAT;
    }
 else     if (PsiType.LONG.equals(lhsType) || PsiType.LONG.equals(rhsType)) {
      expectedType=PsiType.LONG;
    }
 else {
      expectedType=PsiType.INT;
    }
  }
 else {
    expectedType=null;
  }
}
