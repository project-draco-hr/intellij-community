{
  final MultiMap<String,IProperty> propertyNames=MultiMap.createLinked();
  TObjectIntHashMap<String> occurrences=new TObjectIntHashMap<String>();
  for (  PropertiesFile file : resourceBundle.getPropertiesFiles()) {
    MultiMap<String,IProperty> currentFilePropertyNames=MultiMap.createLinked();
    for (    IProperty property : file.getProperties()) {
      String name=property.getKey();
      currentFilePropertyNames.putValue(name,property);
    }
    propertyNames.putAllValues(currentFilePropertyNames);
    for (    String propertyName : currentFilePropertyNames.keySet()) {
      if (occurrences.contains(propertyName)) {
        occurrences.adjustValue(propertyName,1);
      }
 else {
        occurrences.put(propertyName,1);
      }
    }
  }
  final int targetOccurrences=resourceBundle.getPropertiesFiles().size();
  occurrences.forEachEntry(new TObjectIntProcedure<String>(){
    @Override public boolean execute(    String propertyName,    int occurrences){
      if (occurrences == targetOccurrences) {
        propertyNames.remove(propertyName);
      }
      return true;
    }
  }
);
  return propertyNames;
}
