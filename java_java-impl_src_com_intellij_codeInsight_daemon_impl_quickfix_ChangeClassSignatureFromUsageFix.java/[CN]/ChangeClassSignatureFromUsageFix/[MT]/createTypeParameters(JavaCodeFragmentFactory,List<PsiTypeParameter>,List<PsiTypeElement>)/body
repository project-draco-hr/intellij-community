{
  final LinkedHashMap<TypeParameterInfo,PsiTypeCodeFragment> result=new LinkedHashMap<TypeParameterInfo,PsiTypeCodeFragment>();
  final TypeParameterNameSuggester suggester=new TypeParameterNameSuggester(classTypeParameters);
  int listIndex=0;
  for (  PsiTypeElement typeElement : typeElements) {
    if (listIndex < classTypeParameters.size()) {
      final PsiTypeParameter typeParameter=classTypeParameters.get(listIndex);
      if (isAssignable(typeParameter,typeElement.getType())) {
        result.put(new TypeParameterInfo(listIndex++),null);
        continue;
      }
    }
    final PsiType type=typeElement.getType();
    final String suggestedName=type instanceof PsiClassType ? suggester.suggest((PsiClassType)type) : suggester.suggestUnusedName("T");
    result.put(new TypeParameterInfo(suggestedName,type),factory.createTypeCodeFragment(suggestedName,typeElement,true));
  }
  return result;
}
