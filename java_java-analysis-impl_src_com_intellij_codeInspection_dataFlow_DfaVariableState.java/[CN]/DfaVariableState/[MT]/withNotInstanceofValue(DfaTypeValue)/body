{
  if (myNotInstanceofValues.contains(dfaType.getDfaType()))   return this;
  for (  DfaPsiType dfaTypeValue : myInstanceofValues) {
    if (dfaType.getDfaType().isAssignableFrom(dfaTypeValue))     return null;
  }
  List<DfaPsiType> moreSpecific=ContainerUtil.newArrayList();
  for (  DfaPsiType alreadyNotInstanceof : myNotInstanceofValues) {
    if (alreadyNotInstanceof.isAssignableFrom(dfaType.getDfaType())) {
      return this;
    }
    if (dfaType.getDfaType().isAssignableFrom(alreadyNotInstanceof)) {
      moreSpecific.add(alreadyNotInstanceof);
    }
  }
  HashSet<DfaPsiType> newNotInstanceof=ContainerUtil.newHashSet(myNotInstanceofValues);
  newNotInstanceof.removeAll(moreSpecific);
  newNotInstanceof.add(dfaType.getDfaType());
  return createCopy(myInstanceofValues,newNotInstanceof,myNullability);
}
