{
  VirtualFile genRoot=getVirtualFile(createTempDir("genSrcRoot"));
  VirtualFile srcRoot=getVirtualFile(createTempDir("srcRoot"));
  VirtualFile child=srcRoot.createChildDirectory(this,"child");
  GlobalSearchScope childScope=GlobalSearchScopesCore.directoryScope(getProject(),child,true);
  GlobalSearchScope directoryScope=GlobalSearchScopesCore.directoryScope(getProject(),srcRoot,true);
  GlobalSearchScope scope=GlobalSearchScope.EMPTY_SCOPE.uniteWith(directoryScope);
  assertSame(scope,directoryScope);
  scope=scope.uniteWith(directoryScope);
  assertSame(scope,directoryScope);
  scope=scope.uniteWith(childScope);
  assertSame(scope,directoryScope);
  GlobalSearchScope s=childScope;
  int N=1000;
  VirtualFile[] d=new VirtualFile[N];
  for (int i=0; i < N; i++) {
    d[i]=srcRoot.createChildDirectory(this,"d" + i);
    GlobalSearchScope united=s.uniteWith(GlobalSearchScopesCore.directoryScope(getProject(),d[i],true));
    assertNotSame(s,united);
    s=united;
    assertTrue(s instanceof GlobalSearchScopesCore.DirectoriesScope);
  }
  for (  VirtualFile file : d) {
    VirtualFile f=createChildData(file,"f");
    assertTrue(s.contains(f));
  }
  assertFalse(s.contains(genRoot));
  assertSame(s.uniteWith(childScope),s);
  assertSame(s.uniteWith(s),s);
}
