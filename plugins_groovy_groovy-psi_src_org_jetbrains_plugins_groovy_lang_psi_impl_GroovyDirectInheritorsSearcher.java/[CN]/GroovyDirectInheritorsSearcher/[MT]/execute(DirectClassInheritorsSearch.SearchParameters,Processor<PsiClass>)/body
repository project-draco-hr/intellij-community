{
  final PsiClass clazz=queryParameters.getClassToProcess();
  final SearchScope scope=queryParameters.getScope();
  if (scope instanceof GlobalSearchScope) {
    final List<PsiClass> candidates=ApplicationManager.getApplication().runReadAction(new Computable<List<PsiClass>>(){
      @Override public List<PsiClass> compute(){
        if (!clazz.isValid())         return Collections.emptyList();
        return getDerivingClassCandidates(clazz,(GlobalSearchScope)scope,queryParameters.includeAnonymous());
      }
    }
);
    for (    final PsiClass candidate : candidates) {
      if (!queryParameters.isCheckInheritance() || isInheritor(clazz,candidate)) {
        if (!consumer.process(candidate)) {
          return false;
        }
      }
    }
    return true;
  }
  return true;
}
