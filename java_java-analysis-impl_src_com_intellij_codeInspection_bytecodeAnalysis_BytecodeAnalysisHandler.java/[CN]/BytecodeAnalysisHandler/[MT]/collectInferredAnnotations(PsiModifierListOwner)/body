{
  String key=getExternalName(listOwner);
  if (key == null) {
    return NO_DATA;
  }
  SmartList<AnnotationData> result=new SmartList<AnnotationData>();
  if (myAnnotations == null) {
    LOG.info("initializing annotations");
    final IntIdSolver solver=new IntIdSolver();
    FileBasedIndex.getInstance().processValues(BytecodeAnalysisIndex.NAME,BytecodeAnalysisIndex.KEY,null,new FileBasedIndex.ValueProcessor<Collection<IntIdEquation>>(){
      @Override public boolean process(      VirtualFile file,      Collection<IntIdEquation> value){
        for (        IntIdEquation intIdEquation : value) {
          solver.addEquation(intIdEquation);
        }
        return true;
      }
    }
,ProjectScope.getLibrariesScope(myProject));
    myAnnotations=Util.makeAnnotations(solver.solve());
    LOG.info("initialized " + myAnnotations.size());
  }
  Iterable<AnnotationData> inferred=myAnnotations.get(key);
  ContainerUtil.addAll(result,inferred);
  return result;
}
