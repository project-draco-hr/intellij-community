{
  indicator.setText("Bytecode analysis");
  indicator.setIndeterminate(false);
  HashSet<VirtualFile> classRoots=new HashSet<VirtualFile>();
  ModuleManager moduleManager=ModuleManager.getInstance(myProject);
  for (  Module module : moduleManager.getModules()) {
    ModuleRootManager moduleRootManager=ModuleRootManager.getInstance(module);
    OrderEntry[] entries=moduleRootManager.getOrderEntries();
    for (    OrderEntry entry : entries) {
      Collections.addAll(classRoots,entry.getFiles(OrderRootType.CLASSES));
    }
  }
  for (  VirtualFile classRoot : classRoots) {
    VfsUtilCore.visitChildrenRecursively(classRoot,myClassFilesCounter);
  }
  LOG.info("Found " + myClassFilesCount + " classes to Index");
  BytecodeAnalysisHandler handler=myProject.getComponent(BytecodeAnalysisHandler.class);
  ClassProcessor myClassProcessor=new ClassProcessor(indicator,myClassFilesCount,myEnumerators);
  for (  VirtualFile classRoot : classRoots) {
    VfsUtilCore.visitChildrenRecursively(classRoot,myClassProcessor);
  }
  handler.setAnnotations(myClassProcessor.annotations());
}
