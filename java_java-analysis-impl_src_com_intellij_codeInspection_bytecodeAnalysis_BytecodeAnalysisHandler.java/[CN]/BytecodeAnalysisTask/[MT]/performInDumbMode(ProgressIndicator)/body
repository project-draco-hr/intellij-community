{
  indicator.setText("Bytecode analysis");
  HashSet<VirtualFile> classRoots=new HashSet<VirtualFile>();
  ModuleManager moduleManager=ModuleManager.getInstance(myProject);
  for (  Module module : moduleManager.getModules()) {
    ModuleRootManager moduleRootManager=ModuleRootManager.getInstance(module);
    OrderEntry[] entries=moduleRootManager.getOrderEntries();
    for (    OrderEntry entry : entries) {
      if (!(entry instanceof JdkOrderEntry)) {
        Collections.addAll(classRoots,entry.getFiles(OrderRootType.CLASSES));
      }
    }
  }
  for (  VirtualFile classRoot : classRoots) {
    VfsUtilCore.visitChildrenRecursively(classRoot,myCountFileVisitor);
  }
  indicator.setFraction(0.01);
  LOG.info("Found " + myFileCount + " classes to Index");
  ClassProcessor myClassProcessor=new ClassProcessor(indicator,myFileCount);
  for (  VirtualFile classRoot : classRoots) {
    VfsUtilCore.visitChildrenRecursively(classRoot,myClassProcessor);
  }
  myProject.getComponent(BytecodeAnalysisHandler.class).setAnnotations(myClassProcessor.annotations());
}
