{
  final Element unusedSymbolElement=elements.get("UNUSED_SYMBOL");
  final Element unusedDeclarationElement=elements.get("UnusedDeclaration");
  if (unusedDeclarationElement != null || unusedSymbolElement != null) {
    final Element toolElement=new Element(InspectionProfileImpl.INSPECTION_TOOL_TAG);
    final LinkedHashMap<String,Element> scopes=new LinkedHashMap<String,Element>();
    final List<Element> content=new ArrayList<Element>();
    boolean enabled=cloneContent(unusedDeclarationElement,content,scopes);
    enabled|=cloneContent(unusedSymbolElement,content,scopes);
    toolElement.setAttribute(InspectionProfileImpl.CLASS_TAG,getNewToolName());
    toolElement.setAttribute(ToolsImpl.ENABLED_ATTRIBUTE,String.valueOf(enabled));
    String level=getLevel(unusedSymbolElement);
    if (level == null) {
      level=getLevel(unusedDeclarationElement);
    }
    if (level != null) {
      toolElement.setAttribute(ToolsImpl.LEVEL_ATTRIBUTE,level);
    }
    for (    Element scopeEl : scopes.values()) {
      toolElement.addContent(scopeEl);
    }
    for (    Element element : content) {
      toolElement.addContent(element);
    }
    return toolElement;
  }
  return null;
}
