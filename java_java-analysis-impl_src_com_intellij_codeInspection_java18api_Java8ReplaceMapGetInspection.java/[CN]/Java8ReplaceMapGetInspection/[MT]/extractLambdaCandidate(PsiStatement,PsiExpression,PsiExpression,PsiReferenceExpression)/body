{
  EquivalenceChecker equivalence=EquivalenceChecker.getCanonicalPsiEquivalence();
  PsiAssignmentExpression assignment;
  PsiMethodCallExpression putCall=extractPutCall(statement);
  if (putCall != null) {
    PsiExpression[] putArguments=putCall.getArgumentList().getExpressions();
    if (putArguments.length != 2 || !equivalence.expressionsAreEquivalent(putCall.getMethodExpression().getQualifierExpression(),mapExpression) || !equivalence.expressionsAreEquivalent(keyExpression,putArguments[0])) {
      return null;
    }
    assignment=ExpressionUtils.getAssignment(putArguments[1]);
  }
 else {
    if (!(statement instanceof PsiBlockStatement))     return null;
    PsiStatement[] statements=((PsiBlockStatement)statement).getCodeBlock().getStatements();
    putCall=extractPutCall(statements[1]);
    if (putCall == null)     return null;
    PsiExpression[] putArguments=putCall.getArgumentList().getExpressions();
    if (putArguments.length != 2 || !equivalence.expressionsAreEquivalent(putCall.getMethodExpression().getQualifierExpression(),mapExpression) || !equivalence.expressionsAreEquivalent(keyExpression,putArguments[0]) || !equivalence.expressionsAreEquivalent(valueExpression,putArguments[1])) {
      return null;
    }
    assignment=ExpressionUtils.getAssignment(statements[0]);
  }
  if (assignment == null)   return null;
  PsiExpression lambdaCandidate=assignment.getRExpression();
  if (lambdaCandidate == null || !equivalence.expressionsAreEquivalent(assignment.getLExpression(),valueExpression))   return null;
  if (!LambdaGenerationUtil.canBeUncheckedLambda(lambdaCandidate))   return null;
  return lambdaCandidate;
}
