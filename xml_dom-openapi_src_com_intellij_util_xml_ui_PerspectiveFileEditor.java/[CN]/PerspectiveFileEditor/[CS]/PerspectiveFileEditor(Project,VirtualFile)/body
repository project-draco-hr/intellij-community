{
  myProject=project;
  myUndoHelper=new UndoHelper(project,this);
  myFile=file;
  FileEditorManager.getInstance(myProject).addFileEditorManagerListener(new FileEditorManagerAdapter(){
    @Override public void selectionChanged(    @NotNull FileEditorManagerEvent event){
      if (!isValid())       return;
      ApplicationManager.getApplication().invokeLater(new Runnable(){
        @Override public void run(){
          if (myUndoHelper.isShowing() && !getComponent().isShowing()) {
            deselectNotify();
          }
 else           if (!myUndoHelper.isShowing() && getComponent().isShowing()) {
            selectNotify();
          }
        }
      }
);
      final FileEditor oldEditor=event.getOldEditor();
      final FileEditor newEditor=event.getNewEditor();
      if (oldEditor == null || newEditor == null)       return;
      if (oldEditor.getComponent().isShowing() && newEditor.getComponent().isShowing())       return;
      if (PerspectiveFileEditor.this.equals(oldEditor)) {
        if (newEditor instanceof TextEditor) {
          ensureInitialized();
          DomElement selectedDomElement=getSelectedDomElement();
          if (selectedDomElement != null) {
            setSelectionInTextEditor((TextEditor)newEditor,selectedDomElement);
          }
        }
      }
 else       if (PerspectiveFileEditor.this.equals(newEditor)) {
        if (oldEditor instanceof TextEditor) {
          final DomElement element=getSelectedDomElementFromTextEditor((TextEditor)oldEditor);
          if (element != null) {
            ensureInitialized();
            setSelectedDomElement(element);
          }
        }
 else         if (oldEditor instanceof PerspectiveFileEditor) {
          ensureInitialized();
          DomElement selectedDomElement=((PerspectiveFileEditor)oldEditor).getSelectedDomElement();
          if (selectedDomElement != null) {
            setSelectedDomElement(selectedDomElement);
          }
        }
      }
    }
  }
,this);
  myUndoHelper.startListeningDocuments();
  final PsiFile psiFile=getPsiFile();
  if (psiFile != null) {
    final Document document=PsiDocumentManager.getInstance(getProject()).getDocument(psiFile);
    if (document != null) {
      addWatchedDocument(document);
    }
  }
}
