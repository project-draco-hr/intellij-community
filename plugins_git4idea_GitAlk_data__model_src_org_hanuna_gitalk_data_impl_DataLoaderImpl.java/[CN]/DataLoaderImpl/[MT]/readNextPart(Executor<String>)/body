{
switch (state) {
case ALL_LOG_READER:
    throw new IllegalStateException("data was read");
case UNINITIALIZED:
  System.out.println("=== readNextPart() called with " + myInteractiveRebaseBuilder.fakeCommits.size() + " fake commits");
List<CommitParents> commitParentsList=new ArrayList<CommitParents>();
List<CommitParents> commits=partReader.readNextBlock(statusUpdater);
for (CommitParents commit : commits) {
if (myInteractiveRebaseBuilder.base != null && commit.getCommitHash().equals(myInteractiveRebaseBuilder.base.getCommitHash())) {
commitParentsList.addAll(myInteractiveRebaseBuilder.fakeCommits);
}
commitParentsList.add(commit);
}
state=State.PART_LOG_READER;
List<Ref> allRefs=new ArrayList<Ref>();
allRefs.addAll(new RefReader(myProject).readAllRefs());
if (myInteractiveRebaseBuilder.resultRef != null) {
allRefs.add(myInteractiveRebaseBuilder.resultRef);
}
dataPack=DataPackImpl.buildDataPack(commitParentsList,allRefs,statusUpdater,myProject);
break;
case PART_LOG_READER:
List<CommitParents> nextPart=partReader.readNextBlock(statusUpdater);
dataPack.appendCommits(nextPart,statusUpdater);
break;
default :
throw new IllegalStateException();
}
}
