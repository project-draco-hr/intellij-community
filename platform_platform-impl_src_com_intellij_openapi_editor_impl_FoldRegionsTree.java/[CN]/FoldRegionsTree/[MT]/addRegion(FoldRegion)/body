{
  boolean canUseCachedValue=false;
  if (isBatchFoldingProcessing() && myCachedLastIndex >= 0 && myCachedLastIndex < myRegions.size()) {
    FoldRegion lastRegion=myRegions.get(myCachedLastIndex);
    if (RangeMarker.BY_START_OFFSET.compare(lastRegion,range) < 0) {
      canUseCachedValue=myCachedLastIndex == (myRegions.size() - 1) || RangeMarker.BY_START_OFFSET.compare(range,myRegions.get(myCachedLastIndex + 1)) <= 0;
    }
  }
  int index=canUseCachedValue ? myCachedLastIndex + 1 : Collections.binarySearch(myRegions,range,RangeMarker.BY_START_OFFSET);
  if (index < 0)   index=-index - 1;
  if (index < myRegions.size()) {
    FoldRegion foldRegion=myRegions.get(index);
    if (TextRange.areSegmentsEqual(foldRegion,range)) {
      return false;
    }
  }
  for (int i=index - 1; i >= 0; --i) {
    final FoldRegion region=myRegions.get(i);
    if (region.getEndOffset() < range.getStartOffset())     break;
    if (region.isValid() && intersects(region,range)) {
      return false;
    }
  }
  for (int i=index; i < myRegions.size(); i++) {
    final FoldRegion region=myRegions.get(i);
    if (region.getStartOffset() > range.getEndOffset())     break;
    if (region.isValid() && intersects(region,range)) {
      return false;
    }
  }
  myRegions.add(myCachedLastIndex=index,range);
  return true;
}
