{
  ApplicationManager.getApplication().assertIsDispatchThread();
  final JavaExceptionBreakpointType type=(JavaExceptionBreakpointType)XDebuggerUtil.getInstance().findBreakpointType(JavaExceptionBreakpointType.class);
  return ApplicationManager.getApplication().runWriteAction(new Computable<ExceptionBreakpoint>(){
    @Override public ExceptionBreakpoint compute(){
      XBreakpoint<JavaExceptionBreakpointProperties> xBreakpoint=XDebuggerManager.getInstance(myProject).getBreakpointManager().addBreakpoint(type,new JavaExceptionBreakpointProperties(exceptionClassName,packageName));
      Breakpoint javaBreakpoint=getJavaBreakpoint(xBreakpoint);
      if (javaBreakpoint instanceof ExceptionBreakpoint) {
        ExceptionBreakpoint exceptionBreakpoint=(ExceptionBreakpoint)javaBreakpoint;
        exceptionBreakpoint.setQualifiedName(exceptionClassName);
        exceptionBreakpoint.setPackageName(packageName);
        addBreakpoint(exceptionBreakpoint);
        if (LOG.isDebugEnabled()) {
          LOG.debug("ExceptionBreakpoint Added");
        }
        return exceptionBreakpoint;
      }
      return null;
    }
  }
);
}
