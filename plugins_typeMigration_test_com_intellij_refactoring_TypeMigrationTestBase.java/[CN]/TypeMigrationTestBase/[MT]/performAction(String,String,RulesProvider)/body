{
  PsiClass aClass=myJavaFacade.findClass(className);
  assertNotNull("Class " + className + " not found",aClass);
  final TestTypeMigrationProcessor pr=new TestTypeMigrationProcessor(getProject(),provider.victims(aClass),provider.provide());
  final UsageInfo[] usages=pr.findUsages();
  final String itemRepr=pr.getLabeler().getMigrationReport();
  pr.performRefactoring(usages);
  String itemName=className + ".items";
  String patternName=getTestDataPath() + getTestRoot() + getTestName(true)+ "/after/"+ itemName;
  File patternFile=new File(patternName);
  if (!patternFile.exists()) {
    PrintWriter writer=new PrintWriter(new FileOutputStream(patternFile));
    writer.print(itemRepr);
    writer.close();
    System.out.println("Pattern not found, file " + patternName + " created.");
    LocalFileSystem.getInstance().refreshAndFindFileByIoFile(patternFile);
  }
  File graFile=new File(FileUtil.getTempDirectory() + File.separator + rootDir+ File.separator+ itemName);
  PrintWriter writer=new PrintWriter(new FileOutputStream(graFile));
  writer.print(itemRepr);
  writer.close();
  LocalFileSystem.getInstance().refreshAndFindFileByIoFile(graFile);
  FileDocumentManager.getInstance().saveAllDocuments();
}
