{
  if (myCachedMapStorage == null) {
    final CachedValuesManager manager=CachedValuesManager.getManager(project);
synchronized (myLock) {
      if (myCachedMapStorage == null) {
        myCachedMapStorage=manager.createCachedValue(this,false);
        Disposer.register(project,this);
      }
    }
  }
synchronized (myLock) {
    final Map<TypeEvalConstraints,TypeEvalContext> map=myCachedMapStorage.getValue();
    final TypeEvalContext context=map.get(standard.getConstraints());
    if (context != null) {
      return context;
    }
    map.put(standard.getConstraints(),standard);
    return standard;
  }
}
