{
  final TIntArrayList componentSizes=getSCCs();
  if (componentSizes.isEmpty())   return Collections.emptyList();
  return new MyCollection<Collection<Node>>(componentSizes.size()){
    @Override public Iterator<Collection<Node>> iterator(){
      return new MyIterator<Collection<Node>>(componentSizes.size()){
        private int offset=0;
        @Override protected Collection<Node> get(        int i){
          final int cSize=componentSizes.get(i), cOffset=offset;
          if (cSize == 0)           return Collections.emptyList();
          offset+=cSize;
          return new MyCollection<Node>(cSize){
            @Override public Iterator<Node> iterator(){
              return new MyIterator<Node>(cSize){
                @Override public Node get(                int i){
                  return getNodeByTNumber(cOffset + i);
                }
              }
;
            }
          }
;
        }
      }
;
    }
  }
;
}
