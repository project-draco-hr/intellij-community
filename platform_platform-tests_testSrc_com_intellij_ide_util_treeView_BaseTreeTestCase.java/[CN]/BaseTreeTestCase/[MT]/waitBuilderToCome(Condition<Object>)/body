{
  boolean success=waitFor(60000,new Condition(){
    @Override public boolean value(    Object o){
      final boolean[] ready={false};
      invokeAndWaitIfNeeded(new Runnable(){
        @Override public void run(){
          AbstractTreeUi ui=getBuilder().getUi();
          if (ui == null) {
            ready[0]=true;
            return;
          }
          ready[0]=myCancelRequest != null || myReadyRequest || condition.value(null) && ui.isReady();
        }
      }
);
      return ready[0];
    }
  }
);
  if (myCancelRequest != null) {
    throw new Exception(myCancelRequest);
  }
  if (!myReadyRequest) {
    if (!getBuilder().isDisposed()) {
      Assert.assertTrue(getBuilder().getUi().getNodeActions().isEmpty());
    }
  }
  Assert.assertTrue(success);
}
