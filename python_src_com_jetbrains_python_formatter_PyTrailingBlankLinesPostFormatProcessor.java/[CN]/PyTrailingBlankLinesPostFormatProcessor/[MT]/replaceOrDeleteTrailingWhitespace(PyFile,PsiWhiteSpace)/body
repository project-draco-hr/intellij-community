{
  final Project project=pyFile.getProject();
  final PsiDocumentManager documentManager=PsiDocumentManager.getInstance(project);
  final Document document=documentManager.getDocument(pyFile);
  if (document != null) {
    documentManager.doPostponedOperationsAndUnblockDocument(document);
    final CodeStyleManager codeStyleManager=CodeStyleManager.getInstance(project);
    int numLineFeedsAtEnd=CodeStyleSettingsManager.getSettings(project).getCustomSettings(PyCodeStyleSettings.class).NEW_LINE_AT_FILE_END;
    if (numLineFeedsAtEnd <= 0 && EditorSettingsExternalizable.getInstance().isEnsureNewLineAtEOF()) {
      numLineFeedsAtEnd=1;
    }
    if (numLineFeedsAtEnd > 0) {
      final PyElementGenerator generator=PyElementGenerator.getInstance(project);
      final String text=StringUtil.repeat("\n",numLineFeedsAtEnd);
      final LanguageLevel language=LanguageLevel.forElement(pyFile);
      final PsiWhiteSpace lineFeeds=generator.createFromText(language,PsiWhiteSpace.class,"(" + text + ")",new int[]{0,0,1});
      codeStyleManager.performActionWithFormatterDisabled(new Computable<PsiWhiteSpace>(){
        @Override public PsiWhiteSpace compute(){
          if (whitespace != null) {
            return (PsiWhiteSpace)whitespace.replace(lineFeeds);
          }
 else {
            return (PsiWhiteSpace)pyFile.add(lineFeeds);
          }
        }
      }
);
    }
 else     if (whitespace != null) {
      codeStyleManager.performActionWithFormatterDisabled(new Runnable(){
        @Override public void run(){
          whitespace.delete();
        }
      }
);
      return null;
    }
  }
  return whitespace;
}
