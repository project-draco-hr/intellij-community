{
  final String name=node.getName();
  if (name == null)   return;
  boolean highlighted_as_attribute=highlightAsAttribute(node,name);
  if (!highlighted_as_attribute && !node.isQualified()) {
    ResolveResult[] resolved=node.getReference().multiResolve(false);
    if (resolved.length > 0) {
      if (PyBuiltinCache.getInstance(node).isBuiltin(resolved[0].getElement())) {
        Annotation ann;
        PsiElement parent=node.getParent();
        if (parent instanceof PyDecorator) {
          ann=getHolder().createInfoAnnotation(parent.getFirstChild(),null);
        }
 else         ann=getHolder().createInfoAnnotation(node,null);
        ann.setTextAttributes(PyHighlighter.PY_BUILTIN_NAME);
      }
    }
  }
}
