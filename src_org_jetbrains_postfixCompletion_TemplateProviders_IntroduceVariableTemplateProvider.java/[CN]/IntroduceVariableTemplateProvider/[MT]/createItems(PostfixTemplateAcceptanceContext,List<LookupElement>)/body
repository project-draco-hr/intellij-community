{
  PrefixExpressionContext forcedTarget=null;
  PsiClass invokedOnType=null;
  for (  PrefixExpressionContext expressionContext : context.expressions) {
    PsiExpression expression=expressionContext.expression;
    PsiElement referenced=expressionContext.referencedElement;
    if (referenced != null) {
      if (referenced instanceof PsiClass) {
        invokedOnType=(PsiClass)referenced;
        if (invokedOnType.isEnum())         break;
      }
 else {
        if (referenced instanceof PsiPackage)         continue;
        if (referenced instanceof PsiLocalVariable || referenced instanceof PsiParameter) {
          forcedTarget=expressionContext;
          continue;
        }
      }
    }
    PsiType expressionType=expression.getType();
    if (expressionType == null && invokedOnType == null) {
      if (context.expressions.size() == 1)       break;
    }
    if (expressionType != null && expressionType.equals(PsiType.VOID))     continue;
    if (expressionContext.canBeStatement) {
      consumer.add(new IntroduceVarStatementLookupElement(expressionContext,invokedOnType));
      return;
    }
 else {
      forcedTarget=expressionContext;
    }
  }
  if (forcedTarget != null && context.executionContext.isForceMode) {
    if (forcedTarget.referencedElement instanceof PsiClass) {
      invokedOnType=(PsiClass)forcedTarget.referencedElement;
    }
    if (forcedTarget.canBeStatement) {
      consumer.add(new IntroduceVarStatementLookupElement(forcedTarget,invokedOnType));
    }
 else {
      consumer.add(new IntroduceVarExpressionLookupElement(forcedTarget,invokedOnType));
    }
  }
}
