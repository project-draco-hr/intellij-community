{
  myFactory=toCopy.myFactory;
  myEphemeral=toCopy.myEphemeral;
  myDefaultVariableStates=toCopy.myDefaultVariableStates;
  myStack=new Stack<DfaValue>(toCopy.myStack);
  myDistinctClasses=new TLongHashSet(toCopy.myDistinctClasses.toArray());
  myUnknownVariables=ContainerUtil.newLinkedHashSet(toCopy.myUnknownVariables);
  myEqClasses=ContainerUtil.newArrayList(toCopy.myEqClasses);
  myIdToEqClassesIndices=new MyIdMap(toCopy.myIdToEqClassesIndices.size());
  toCopy.myIdToEqClassesIndices.forEachEntry(new TIntObjectProcedure<int[]>(){
    @Override public boolean execute(    int id,    int[] set){
      myIdToEqClassesIndices.put(id,set);
      return true;
    }
  }
);
  myVariableStates=ContainerUtil.newLinkedHashMap(toCopy.myVariableStates);
  myCachedDistinctClassPairs=toCopy.myCachedDistinctClassPairs;
  myCachedNonTrivialEqClasses=toCopy.myCachedNonTrivialEqClasses;
  myCachedHash=toCopy.myCachedHash;
}
