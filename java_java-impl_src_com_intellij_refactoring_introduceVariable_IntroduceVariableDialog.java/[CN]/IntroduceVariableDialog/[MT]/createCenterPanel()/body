{
  JPanel panel=new JPanel(new GridBagLayout());
  GridBagConstraints gbConstraints=new GridBagConstraints();
  gbConstraints.fill=GridBagConstraints.HORIZONTAL;
  gbConstraints.weightx=1;
  gbConstraints.weighty=0;
  gbConstraints.gridwidth=1;
  gbConstraints.gridx=0;
  gbConstraints.gridy=0;
  gbConstraints.insets=JBUI.emptyInsets();
  if (myOccurrencesCount > 1) {
    myCbReplaceAll=new NonFocusableCheckBox();
    myCbReplaceAll.setText(RefactoringBundle.message("replace.all.occurences",myOccurrencesCount));
    panel.add(myCbReplaceAll,gbConstraints);
    myReplaceAllListener=new ItemListener(){
      public void itemStateChanged(      ItemEvent e){
        updateControls();
      }
    }
;
    myCbReplaceAll.addItemListener(myReplaceAllListener);
    if (myAnyLValueOccurences) {
      myCbReplaceWrite=new StateRestoringCheckBox();
      myCbReplaceWrite.setText(RefactoringBundle.message("replace.write.access.occurrences"));
      gbConstraints.insets=JBUI.insetsLeft(8);
      gbConstraints.gridy++;
      panel.add(myCbReplaceWrite,gbConstraints);
      myCbReplaceWrite.addItemListener(myReplaceAllListener);
    }
  }
  myCbFinal=new NonFocusableCheckBox();
  myCbFinal.setText(RefactoringBundle.message("declare.final"));
  final Boolean createFinals=JavaRefactoringSettings.getInstance().INTRODUCE_LOCAL_CREATE_FINALS;
  myCbFinalState=createFinals == null ? CodeStyleSettingsManager.getSettings(myProject).GENERATE_FINAL_LOCALS : createFinals.booleanValue();
  gbConstraints.insets=JBUI.emptyInsets();
  gbConstraints.gridy++;
  panel.add(myCbFinal,gbConstraints);
  myFinalListener=new ItemListener(){
    public void itemStateChanged(    ItemEvent e){
      if (myCbFinal.isEnabled()) {
        myCbFinalState=myCbFinal.isSelected();
      }
    }
  }
;
  myCbFinal.addItemListener(myFinalListener);
  updateControls();
  return panel;
}
