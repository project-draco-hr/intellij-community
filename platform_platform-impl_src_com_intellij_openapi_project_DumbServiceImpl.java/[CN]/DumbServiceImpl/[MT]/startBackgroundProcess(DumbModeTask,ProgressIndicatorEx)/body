{
  ProgressManager.getInstance().run(new Task.Backgroundable(myProject,IdeBundle.message("progress.indexing"),false){
    @Override public void run(    @NotNull final ProgressIndicator visibleIndicator){
      if (ApplicationManager.getApplication().isInternal())       LOG.info("Running dumb mode task: " + task);
      final ShutDownTracker shutdownTracker=ShutDownTracker.getInstance();
      final Thread self=Thread.currentThread();
      try {
        HeavyProcessLatch.INSTANCE.processStarted();
        shutdownTracker.registerStopperThread(self);
        indicator.checkCanceled();
        if (visibleIndicator instanceof ProgressIndicatorEx) {
          indicator.addStateDelegate((ProgressIndicatorEx)visibleIndicator);
        }
        indicator.addStateDelegate(new AppIconProgress());
        indicator.setIndeterminate(true);
        indicator.setText(IdeBundle.message("progress.indexing.scanning"));
        task.performInDumbMode(indicator);
      }
 catch (      ProcessCanceledException ignored) {
      }
catch (      Throwable unexpected) {
        LOG.error(unexpected);
      }
 finally {
        shutdownTracker.unregisterStopperThread(self);
        HeavyProcessLatch.INSTANCE.processFinished();
        taskFinished(task);
      }
    }
  }
);
}
