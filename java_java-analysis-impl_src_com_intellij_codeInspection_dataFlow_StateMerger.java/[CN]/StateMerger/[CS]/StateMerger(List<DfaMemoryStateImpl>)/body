{
  myStates=states;
  for (  DfaMemoryStateImpl state : myStates) {
    ProgressManager.checkCanceled();
    Map<DfaVariableValue,DfaConstValue> varValues=ContainerUtil.newHashMap();
    for (    UnorderedPair<DfaValue> pair : getEqPairs(state)) {
      myStatesByEq.putValue(pair,state);
      if (pair.first instanceof DfaVariableValue && pair.second instanceof DfaConstValue) {
        varValues.put((DfaVariableValue)pair.first,(DfaConstValue)pair.second);
      }
    }
    myVarValues.put(state,varValues);
    for (    DfaVariableValue value : state.getChangedVariable()) {
      for (      DfaPsiType instanceofValue : state.getVariableState(value).myInstanceofValues) {
        myStatesByInstanceof.putValue(Pair.create(value,instanceofValue),state);
      }
    }
  }
}
