{
  String patchedContent=content;
  if (!(myTemplate instanceof LocalArchivedTemplate) || ((LocalArchivedTemplate)myTemplate).isEscaped()) {
    for (    WizardInputField field : myAdditionalFields) {
      if (!field.acceptFile(file)) {
        return null;
      }
    }
    Properties properties=FileTemplateManager.getDefaultInstance().getDefaultProperties();
    for (    WizardInputField field : myAdditionalFields) {
      properties.putAll(field.getValues());
    }
    if (projectName != null) {
      properties.put(ProjectTemplateParameterFactory.IJ_PROJECT_NAME,projectName);
    }
    String merged=FileTemplateUtil.mergeTemplate(properties,content,true,exceptionConsumer);
    patchedContent=merged.replace("\\$","$").replace("\\#","#");
  }
 else {
    int i=content.indexOf(SaveProjectAsTemplateAction.FILE_HEADER_TEMPLATE_PLACEHOLDER);
    if (i != -1) {
      final FileTemplate template=FileTemplateManager.getDefaultInstance().getDefaultTemplate(SaveProjectAsTemplateAction.getFileHeaderTemplateName());
      Properties properties=FileTemplateManager.getDefaultInstance().getDefaultProperties();
      String templateText=template.getText(properties);
      patchedContent=patchedContent.substring(0,i) + templateText + patchedContent.substring(i + SaveProjectAsTemplateAction.FILE_HEADER_TEMPLATE_PLACEHOLDER.length());
    }
  }
  return StringUtilRt.convertLineSeparators(patchedContent,CodeStyleFacade.getInstance().getLineSeparator()).getBytes(CharsetToolkit.UTF8_CHARSET);
}
