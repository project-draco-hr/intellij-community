{
  PsiDocumentManager.getInstance(project).commitAllDocuments();
  if (!(file instanceof GroovyFileBase)) {
    throw new GrRefactoringError(GroovyRefactoringBundle.message("only.in.groovy.files"));
  }
  if (!CommonRefactoringUtil.checkReadOnlyStatus(project,file)) {
    throw new GrRefactoringError(RefactoringBundle.message("readonly.occurences.found"));
  }
  SelectionModel selectionModel=editor.getSelectionModel();
  PsiDocumentManager.getInstance(project).commitAllDocuments();
  final StringPartInfo stringPart=StringPartInfo.findStringPart(file,selectionModel.getSelectionStart(),selectionModel.getSelectionEnd());
  if (stringPart != null) {
    return new InitialInfo(new VariableInfo[0],new VariableInfo[0],PsiElement.EMPTY_ARRAY,GrStatement.EMPTY_ARRAY,new ArrayList<GrStatement>(),stringPart,project,null);
  }
  if (!forceStatements) {
    GrVariable variable=GrIntroduceHandlerBase.findVariable(file,start,end);
    if (variable != null) {
      GrExpression initializer=variable.getInitializerGroovy();
      if (initializer != null) {
        TextRange range=initializer.getTextRange();
        return buildInfo(project,file,range.getStartOffset(),range.getEndOffset(),forceStatements,selectionModel,variable);
      }
    }
  }
  return buildInfo(project,file,start,end,forceStatements,selectionModel,null);
}
