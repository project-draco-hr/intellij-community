{
  GrCall call=getContainingCall(closableBlock);
  if (call == null)   return null;
  GroovyResolveResult result=resolveActualCall(call);
  if (GdkMethodUtil.isWithOrIdentity(result.getElement())) {
    final GrExpression qualifier=inferCallQualifier((GrMethodCall)call);
    if (qualifier == null)     return null;
    return new DelegatesToInfo(qualifier.getType(),Closure.DELEGATE_FIRST);
  }
  GrClosureSignature signature=inferSignature(result.getElement());
  if (signature == null)   return null;
  final GrClosureSignatureUtil.ArgInfo<PsiElement>[] map=mapArgs(place,call,signature);
  if (map == null)   return null;
  final PsiParameter parameter=findParameter(closableBlock,map,result);
  if (parameter == null)   return null;
  final String delegateFqnData=parameter.getUserData(DELEGATES_TO_KEY);
  final Integer strategyData=parameter.getUserData(DELEGATES_TO_STRATEGY_KEY);
  if (delegateFqnData != null) {
    return new DelegatesToInfo(TypesUtil.createType(delegateFqnData,place),strategyData == null ? Closure.OWNER_FIRST : strategyData);
  }
  final PsiModifierList modifierList=parameter.getModifierList();
  if (modifierList == null)   return null;
  final PsiAnnotation delegatesTo=modifierList.findAnnotation(GroovyCommonClassNames.GROOVY_LANG_DELEGATES_TO);
  if (delegatesTo == null)   return null;
  PsiType delegateType=getFromValue(delegatesTo);
  if (delegateType == null)   delegateType=getFromTarget(delegatesTo,signature,map);
  if (delegateType == null)   delegateType=getFromType(result,delegatesTo);
  final int strategyValue=getStrategyValue(delegatesTo.findAttributeValue("strategy"));
  return new DelegatesToInfo(delegateType,strategyValue);
}
