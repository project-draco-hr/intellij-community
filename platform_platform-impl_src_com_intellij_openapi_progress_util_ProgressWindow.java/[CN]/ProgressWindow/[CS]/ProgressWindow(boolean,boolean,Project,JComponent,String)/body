{
  myProject=project;
  myShouldShowCancel=shouldShowCancel;
  myCancelText=cancelText;
  setModalityProgress(shouldShowBackground ? null : this);
  TransactionGuardImpl guard=(TransactionGuardImpl)TransactionGuard.getInstance();
  guard.registerProgress(this,guard.getContextTransaction());
  myFocusTrackback=new FocusTrackback(this,WindowManager.getInstance().suggestParentWindow(project),false);
  Component parent=parentComponent;
  if (parent == null && project == null && !ApplicationManager.getApplication().isHeadlessEnvironment()) {
    parent=JOptionPane.getRootFrame();
  }
  if (parent == null) {
    myDialog=new ProgressDialog(this,shouldShowBackground,myProject,myCancelText);
  }
 else {
    myDialog=new ProgressDialog(this,shouldShowBackground,parent,myCancelText);
  }
  Disposer.register(this,myDialog);
  myFocusTrackback.registerFocusComponent(myDialog.getPanel());
  addStateDelegate(new AbstractProgressIndicatorExBase(){
    @Override public void cancel(){
      super.cancel();
      if (myDialog != null) {
        myDialog.cancel();
      }
    }
  }
);
  ApplicationManager.getApplication().getMessageBus().syncPublisher(TOPIC).progressWindowCreated(this);
}
