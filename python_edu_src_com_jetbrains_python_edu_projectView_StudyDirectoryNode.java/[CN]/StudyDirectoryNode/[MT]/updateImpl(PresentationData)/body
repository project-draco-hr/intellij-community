{
  data.setIcon(StudyIcons.Unchecked);
  String valueName=myValue.getName();
  StudyTaskManager studyTaskManager=StudyTaskManager.getInstance(myProject);
  Course course=studyTaskManager.getCourse();
  if (course == null) {
    return;
  }
  if (valueName.equals(myProject.getName())) {
    data.clearText();
    data.addText(course.getName(),new SimpleTextAttributes(Font.BOLD,JBColor.BLUE));
    data.addText(" (" + valueName + ")",SimpleTextAttributes.GRAYED_ATTRIBUTES);
    return;
  }
  if (valueName.contains(Task.TASK_DIR)) {
    TaskFile file=null;
    for (    PsiElement child : myValue.getChildren()) {
      VirtualFile virtualFile=child.getContainingFile().getVirtualFile();
      file=studyTaskManager.getTaskFile(virtualFile);
      if (file != null) {
        break;
      }
    }
    if (file != null) {
      Task task=file.getTask();
      setStudyAttributes(task,data,task.getName());
    }
  }
  if (valueName.contains(Lesson.LESSON_DIR)) {
    int lessonIndex=Integer.parseInt(valueName.substring(Lesson.LESSON_DIR.length())) - 1;
    Lesson lesson=course.getLessons().get(lessonIndex);
    setStudyAttributes(lesson,data,lesson.getName());
  }
  if (valueName.contains(Course.PLAYGROUND_DIR)) {
    if (myValue.getParent() != null) {
      if (!myValue.getParent().getName().contains(Course.PLAYGROUND_DIR)) {
        data.setPresentableText(Course.PLAYGROUND_DIR);
        data.setIcon(StudyIcons.Playground);
        return;
      }
    }
  }
  data.setPresentableText(valueName);
}
