{
  final Set<String> names=new HashSet<>();
  for (int i=0; i < rootNode.getChildCount(); i++) {
    final MyNode node=(MyNode)rootNode.getChildAt(i);
    final NamedConfigurable scopeConfigurable=node.getConfigurable();
    if (configurableClass.isInstance(scopeConfigurable)) {
      final String name=scopeConfigurable.getDisplayName();
      if (name.trim().length() == 0) {
        selectNodeInTree(node);
        throw new ConfigurationException("Name should contain non-space characters");
      }
      if (names.contains(name)) {
        final NamedConfigurable selectedConfigurable=getSelectedConfigurable();
        if (selectedConfigurable == null || !Comparing.strEqual(selectedConfigurable.getDisplayName(),name)) {
          selectNodeInTree(node);
        }
        throw new ConfigurationException(CommonBundle.message("smth.already.exist.error.message",prefix,name),title);
      }
      names.add(name);
    }
    if (recursively) {
      checkForEmptyAndDuplicatedNames(node,prefix,title,configurableClass,true);
    }
  }
}
