{
  if (expressionType != null) {
    return PsiType.BOOLEAN.isAssignableFrom(expressionType);
  }
  IElementType sign;
  if (expression instanceof PsiBinaryExpression) {
    PsiBinaryExpression binary=(PsiBinaryExpression)expression;
    sign=binary.getOperationSign().getTokenType();
  }
 else   if (expression instanceof PsiPolyadicExpression) {
    PsiPolyadicExpression polyadic=(PsiPolyadicExpression)expression;
    sign=polyadic.getOperationTokenType();
  }
 else   if (expression instanceof PsiPrefixExpression) {
    PsiPrefixExpression prefix=(PsiPrefixExpression)expression;
    return prefix.getOperationSign() == JavaTokenType.EXCL;
  }
 else   if (expression instanceof PsiParenthesizedExpression) {
    PsiParenthesizedExpression parenthesized=(PsiParenthesizedExpression)expression;
    return isBooleanExpression(parenthesized.getExpression());
  }
 else   return false;
  if (sign == JavaTokenType.GE || sign == JavaTokenType.LE || sign == JavaTokenType.LT || sign == JavaTokenType.GT || sign == JavaTokenType.NE || sign == JavaTokenType.EQEQ || sign == JavaTokenType.ANDAND || sign == JavaTokenType.OROR || sign == JavaTokenType.INSTANCEOF_KEYWORD)   return true;
  if (sign == JavaTokenType.AND || sign == JavaTokenType.OR || sign == JavaTokenType.XOR) {
    if (expression instanceof PsiBinaryExpression) {
      PsiBinaryExpression binary=(PsiBinaryExpression)expression;
      return isBooleanExpression(binary.getLOperand()) || isBooleanExpression(binary.getROperand());
    }
 else {
      PsiPolyadicExpression polyadic=(PsiPolyadicExpression)expression;
      for (      PsiExpression operand : polyadic.getOperands()) {
        if (isBooleanExpression(operand))         return true;
      }
    }
  }
  return false;
}
