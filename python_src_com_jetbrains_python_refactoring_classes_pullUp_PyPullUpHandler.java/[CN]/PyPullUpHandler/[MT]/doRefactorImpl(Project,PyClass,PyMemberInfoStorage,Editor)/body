{
  if (PyAncestorsUtils.getAncestorsUnderUserControl(classUnderRefactoring).isEmpty() || infoStorage.getClassMemberInfos(classUnderRefactoring).isEmpty()) {
    CommonRefactoringUtil.showErrorHint(project,editor,PyBundle.message("refactoring.pull.up.error.cannot.perform.refactoring.no.base.classes",classUnderRefactoring.getName()),RefactoringBundle.message("pull.members.up.title"),"members.pull.up");
    return;
  }
  ViewPresenterUtils.linkViewWithPresenterAndLaunch(PyPullUpPresenter.class,PyPullUpView.class,new Creator<PyPullUpView,PyPullUpPresenter>(){
    @NotNull @Override public PyPullUpPresenter createPresenter(    @NotNull final PyPullUpView view){
      return new PyPullUpPresenterImpl(view,infoStorage,classUnderRefactoring);
    }
    @NotNull @Override public PyPullUpView createView(    @NotNull final PyPullUpPresenter presenter){
      return new PyPullUpViewSwingImpl(project,presenter,classUnderRefactoring);
    }
  }
);
}
