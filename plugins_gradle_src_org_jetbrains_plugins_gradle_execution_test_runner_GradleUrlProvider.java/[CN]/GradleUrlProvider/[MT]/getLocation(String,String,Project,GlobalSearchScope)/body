{
  if (!PROTOCOL_ID.equals(protocol))   return Collections.emptyList();
  final String className=extractFullClassName(path);
  if (className == null)   return Collections.emptyList();
  final PsiClass testClass=JavaPsiFacade.getInstance(project).findClass(className,GlobalSearchScope.allScope(project));
  if (testClass == null)   return Collections.emptyList();
  final String methodName=extractMethodName(path);
  if (methodName == null) {
    return Collections.<Location>singletonList(new PsiLocation<>(project,testClass));
  }
  final PsiMethod[] methods=testClass.findMethodsByName(methodName,true);
  final List<Location> list=new ArrayList<>(methods.length);
  for (  PsiMethod method : methods) {
    list.add(new PsiLocation<>(project,method));
  }
  return list;
}
