{
  final VirtualFile file=PsiUtilCore.getVirtualFile(element);
  if (file != null && file.getFileType() instanceof SPIFileType) {
    final String serviceProviderName=file.getName();
    final PsiClass psiClass=ClassUtil.findPsiClass(element.getManager(),serviceProviderName,null,true,element.getContainingFile().getResolveScope());
    if (element instanceof PsiFile) {
      if (psiClass == null) {
        holder.createErrorAnnotation(element,"No service provider \"" + serviceProviderName + "\' found").setFileLevelAnnotation(true);
      }
    }
 else     if (element instanceof SPIProviderElement && ((SPIProviderElement)element).isDestination()) {
      final PsiElement resolve=((SPIProviderElement)element).resolve();
      if (resolve == null) {
        holder.createErrorAnnotation(element,"Cannot resolve symbol " + element.getText());
      }
 else       if (resolve instanceof PsiClass && psiClass != null) {
        if (!((PsiClass)resolve).isInheritor(psiClass,true)) {
          holder.createErrorAnnotation(element,"Registered extension should implement " + serviceProviderName);
        }
      }
    }
  }
}
