{
  Project project=e.getProject();
  if (project != null) {
    DocumentationManager documentationManager=DocumentationManager.getInstance(project);
    DocumentationComponent component=new DocumentationComponent(documentationManager);
    Editor selectedEditor=StudyEditor.getSelectedEditor(project);
    FileDocumentManager fileDocumentManager=FileDocumentManager.getInstance();
    VirtualFile openedFile=fileDocumentManager.getFile(selectedEditor.getDocument());
    if (openedFile != null) {
      StudyTaskManager taskManager=StudyTaskManager.getInstance(e.getProject());
      TaskFile taskFile=taskManager.getTaskFile(openedFile);
      PsiFile file=PsiManager.getInstance(project).findFile(openedFile);
      if (file != null) {
        LogicalPosition pos=selectedEditor.getCaretModel().getLogicalPosition();
        TaskWindow taskWindow=taskFile.getTaskWindow(selectedEditor.getDocument(),pos);
        if (taskWindow != null) {
          String hint=taskWindow.getHint();
          File resourceFile=new File(taskManager.getCourse().getResourcePath());
          File resourceRoot=resourceFile.getParentFile();
          if (resourceRoot != null && resourceRoot.exists()) {
            File hintsDir=new File(resourceRoot,Course.HINTS_DIR);
            if (hintsDir.exists()) {
              String hintText=StudyUtils.getFileText(hintsDir.getAbsolutePath(),hint,true);
              if (hintText != null) {
                int offset=selectedEditor.getDocument().getLineStartOffset(pos.line) + pos.column;
                PsiElement element=file.findElementAt(offset);
                if (element != null) {
                  component.setData(element,hintText,true);
                  final JBPopup popup=JBPopupFactory.getInstance().createComponentPopupBuilder(component,component).setDimensionServiceKey(project,DocumentationManager.JAVADOC_LOCATION_AND_SIZE,false).setResizable(true).setMovable(true).setRequestFocus(true).createPopup();
                  component.setHint(popup);
                  popup.showInFocusCenter();
                }
              }
            }
          }
        }
      }
    }
  }
}
