{
  return new DataExternalizer<Collection<TraitFieldDescriptor>>(){
    @Override public void save(    @NotNull DataOutput out,    Collection<TraitFieldDescriptor> values) throws IOException {
      writeINT(out,values.size());
      for (      TraitFieldDescriptor descriptor : values) {
        writeSINT(out,descriptor.isStatic() ? 1 : 0);
        writeSINT(out,descriptor.isPublic() ? 1 : 0);
        writeUTF(out,descriptor.getTypeString());
        writeUTF(out,descriptor.getName());
      }
    }
    @Override public Collection<TraitFieldDescriptor> read(    @NotNull DataInput in) throws IOException {
      int size=readINT(in);
      final Collection<TraitFieldDescriptor> result=ContainerUtil.newArrayListWithCapacity(size);
      while (size-- > 0) {
        result.add(new TraitFieldDescriptor(readSINT(in) > 0,readSINT(in) > 0,readUTF(in),readUTF(in)));
      }
      return result;
    }
  }
;
}
