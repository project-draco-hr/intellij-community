{
  File reader=FileUtil.findFirstThatExist(PathManager.getBinPath() + "/printenv.py",PathManager.getHomePath() + "/community/bin/mac/printenv.py",PathManager.getHomePath() + "/bin/mac/printenv.py");
  if (reader == null) {
    throw new Exception("bin:" + PathManager.getBinPath());
  }
  File envFile=FileUtil.createTempFile("intellij-shell-env.",".tmp",false);
  try {
    List<String> command=getShellProcessCommand();
    command.add("-c");
    command.add("'" + reader.getAbsolutePath() + "' '"+ envFile.getAbsolutePath()+ "'");
    LOG.info("loading shell env: " + StringUtil.join(command," "));
    ProcessBuilder builder=new ProcessBuilder(command).redirectErrorStream(true);
    builder.environment().put(DISABLE_OMZ_AUTO_UPDATE,"true");
    Process process=builder.start();
    StreamGobbler gobbler=new StreamGobbler(process.getInputStream());
    int rv=waitAndTerminateAfter(process,SHELL_ENV_READING_TIMEOUT);
    gobbler.stop();
    String lines=FileUtil.loadFile(envFile);
    if (rv != 0 || lines.isEmpty()) {
      throw new Exception("rv:" + rv + " text:"+ lines.length()+ " out:"+ StringUtil.trimEnd(gobbler.getText(),'\n'));
    }
    return parseEnv(lines);
  }
  finally {
    FileUtil.delete(envFile);
  }
}
