{
  return "/* Block comment */\n" + "import <class>java.util.Date</class>;\n" + "/**\n"+ " * Doc comment here for <code>SomeClass</code>\n"+ " * @param <javadocTagValue>T</javadocTagValue> type parameter\n"+ " * @see <class>Math</class>#<methodCall>sin</methodCall>(double)\n"+ " */\n"+ "<annotationName>@Annotation</annotationName> (<annotationAttributeName>name</annotationAttributeName>=value)\n"+ "public class <class>SomeClass</class><<typeParameter>T</typeParameter> extends <interface>Runnable</interface>> { // some comment\n"+ "  private <typeParameter>T</typeParameter> <field>field</field> = null;\n"+ "  private double <unusedField>unusedField</unusedField> = 12345.67890;\n"+ "  private <unknownType>UnknownType</unknownType> <field>anotherString</field> = \"Another\\nStrin\\g\";\n"+ "  public static int <static>staticField</static> = 0;\n"+ "  public final int <instanceFinalField>instanceFinalField</instanceFinalField> = 0;\n"+ "\n"+ "  /**\n"+ "   * " + ApplicationBundle.message("rainbow.option.panel.display.name") + ":\n"+ "   * "+ RainbowHighlighter.generatePaletteExample()+ "\n"+ "   * @param <javadocTagValue>param1</javadocTagValue>\n"+ "   * @param <javadocTagValue>reassignedParam</javadocTagValue>\n"+ "   * @param <javadocTagValue>param2</javadocTagValue>\n"+ "   * @param <javadocTagValue>param3</javadocTagValue>\n"+ "   */\n"+ "  public <constructorDeclaration>SomeClass</constructorDeclaration>(<interface>AnInterface</interface> <param>param1</param>, int[] <reassignedParameter>reassignedParam</reassignedParameter>,\n"+ "                  int <param>param2</param>\n"+ "                  int <param>param3</param>) {\n"+ "    int <reassignedLocalVar>reassignedValue</reassignedLocalVar> = this.<warning>staticField</warning> + <param>param2</param> + <param>param3</param>;\n"+ "    long <localVar>localVar1</localVar>, <localVar>localVar2</localVar>, <localVar>localVar3</localVar>, <localVar>localVar4</localVar>;\n"+ "    <error>int <localVar>localVar</localVar> = \"IntelliJ\"</error>; // Error, incompatible types\n"+ "    <class>System</class>.<static>out</static>.<methodCall>println</methodCall>(<field>anotherString</field> + <inherited_method>toString</inherited_method>() + <localVar>localVar</localVar>);\n"+ "    long <localVar>time</localVar> = <class>Date</class>.<static_method><deprecated>parse</deprecated></static_method>(\"1.2.3\"); // Method is deprecated\n"+ "    <reassignedLocalVar>reassignedValue</reassignedLocalVar> ++; \n"+ "    <field>field</field>.<abstract_method>run</abstract_method>(); \n"+ "    new <anonymousClass>SomeClass</anonymousClass>() {\n"+ "      {\n"+ "        int <localVar>a</localVar> = <implicitAnonymousParameter>localVar</implicitAnonymousParameter>;\n"+ "      }\n"+ "    };\n"+ "    <reassignedParameter>reassignedParam</reassignedParameter> = new <constructorCall>ArrayList</constructorCall><<class>String</class>>().toArray(new int[0]);\n"+ "  }\n"+ "}\n"+ "enum <enum>AnEnum</enum> { <static_final>CONST1</static_final>, <static_final>CONST2</static_final> }\n"+ "interface <interface>AnInterface</interface> {\n"+ "  int <static_final>CONSTANT</static_final> = 2;\n"+ "  void <methodDeclaration>method</methodDeclaration>();\n"+ "}\n"+ "abstract class <abstractClass>SomeAbstractClass</abstractClass> {\n"+ "}";
}
