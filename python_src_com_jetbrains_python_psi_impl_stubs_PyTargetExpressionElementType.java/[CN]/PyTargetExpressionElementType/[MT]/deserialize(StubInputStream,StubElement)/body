{
  String name=StringRef.toString(stream.readName());
  String docString=stream.readUTFFast();
  if (docString.isEmpty()) {
    docString=null;
  }
  PyTargetExpressionStub.InitializerType initializerType=PyTargetExpressionStub.InitializerType.fromIndex(stream.readVarInt());
  final StringRef typeCommentRef=stream.readName();
  final String typeComment=typeCommentRef == null ? null : typeCommentRef.getString();
  if (initializerType == PyTargetExpressionStub.InitializerType.Custom) {
    final String typeName=stream.readName().getString();
    for (    CustomTargetExpressionStubType type : getCustomStubTypes()) {
      if (type.getClass().getCanonicalName().equals(typeName)) {
        CustomTargetExpressionStub stub=type.deserializeStub(stream);
        return new PyTargetExpressionStubImpl(name,docString,typeComment,stub,parentStub);
      }
    }
    throw new IOException("Unknown custom stub type " + typeName);
  }
  QualifiedName initializer=QualifiedName.deserialize(stream);
  boolean isQualified=stream.readBoolean();
  return new PyTargetExpressionStubImpl(name,docString,initializerType,initializer,isQualified,typeComment,parentStub);
}
