{
  myDataHolder=dataHolder;
  myTaskExecutor=new SequentialLimitedLifoExecutor<Task>(parentDisposable,10,new ThrowableConsumer<Task,Throwable>(){
    @Override public void consume(    final Task task) throws Throwable {
      final List<String> branches=getContainingBranches(task.root,task.hash);
      ApplicationManager.getApplication().invokeLater(new Runnable(){
        @Override public void run(){
          task.cache.put(task.hash,branches);
          notifyListener();
        }
      }
);
    }
  }
);
  project.getMessageBus().connect(parentDisposable).subscribe(VcsLogDataHolder.REFRESH_COMPLETED,new VcsLogRefreshListener(){
    @Override public void refresh(    @NotNull DataPack dataPack){
      Collection<VcsRef> currentBranches=dataPack.getRefs().getBranches();
      int checksum=currentBranches.hashCode();
      if (myCurrentBranchesChecksum != 0 && myCurrentBranchesChecksum != checksum) {
        clearCache();
      }
      myCurrentBranchesChecksum=checksum;
    }
  }
);
}
