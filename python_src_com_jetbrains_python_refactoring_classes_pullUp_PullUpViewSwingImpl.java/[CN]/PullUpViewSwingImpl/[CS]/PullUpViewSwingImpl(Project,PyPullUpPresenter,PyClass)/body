{
  super(project);
  this.myProject=project;
  setTitle(PyPullUpHandler.REFACTORING_NAME);
  myPresenter=presenter;
  myParentsmodel=new DefaultComboBoxModel();
  ComboBox parentsCombo=new ComboBox(myParentsmodel);
  parentsCombo.setRenderer(new PyClassCellRenderer());
  JLabel mainLabel=new JLabel();
  mainLabel.setText(RefactoringBundle.message("pull.up.members.to",PyClassCellRenderer.getClassText(clazz)));
  mainLabel.setLabelFor(parentsCombo);
  myTopPanel=new JPanel();
  myTopPanel.setLayout(new GridBagLayout());
  GridBagConstraints gbConstraints=new GridBagConstraints();
  gbConstraints.insets=new Insets(4,8,4,8);
  gbConstraints.weighty=1;
  gbConstraints.weightx=1;
  gbConstraints.gridy=0;
  gbConstraints.gridwidth=GridBagConstraints.REMAINDER;
  gbConstraints.fill=GridBagConstraints.BOTH;
  gbConstraints.anchor=GridBagConstraints.WEST;
  myTopPanel.add(mainLabel,gbConstraints);
  myTopPanel.add(mainLabel,gbConstraints);
  gbConstraints.gridy++;
  myTopPanel.add(parentsCombo,gbConstraints);
  myCenterPanel=new JPanel(new BorderLayout());
  PyMemberSelectionPanel membersPanel=new PyMemberSelectionPanel(RefactoringBundle.message("members.to.be.pulled.up"));
  myMembersPanelTable=membersPanel.getTable();
  gbConstraints.gridy++;
  myCenterPanel.add(membersPanel,BorderLayout.CENTER);
  parentsCombo.addItemListener(new ItemListener(){
    public void itemStateChanged(    ItemEvent e){
      if (e.getStateChange() == ItemEvent.SELECTED) {
        myMembersPanelTable.fireExternalDataChange();
      }
    }
  }
);
}
