{
  final PyDocStringOwner docStringOwner=PsiTreeUtil.getParentOfType(element,PyDocStringOwner.class);
  if (docStringOwner != null && element == docStringOwner.getDocStringExpression()) {
    final List<PsiReference> result=new ArrayList<PsiReference>();
    String docString=element.getText();
    int pos=0;
    while (pos < docString.length()) {
      final TextRange tagRange=findNextTag(docString,pos,ALL_PARAM_TAGS);
      if (tagRange == null) {
        break;
      }
      pos=CharMatcher.anyOf(" \t*").negate().indexIn(docString,tagRange.getEndOffset());
      int endPos=new CharMatcher(){
        @Override public boolean matches(        char c){
          return Character.isLetterOrDigit(c) || c == '_';
        }
      }
.negate().indexIn(docString,pos);
      if (endPos < 0) {
        endPos=docString.length();
      }
      result.add(new DocStringParameterReference(element,new TextRange(pos,endPos)));
      pos=endPos;
    }
    return result.toArray(new PsiReference[result.size()]);
  }
  return PsiReference.EMPTY_ARRAY;
}
