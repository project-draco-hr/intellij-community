{
  if (node.getAssignedValue() instanceof PyDictLiteralExpression) {
    if (node.getTargets().length != 1) {
      return;
    }
    final PyExpression target=node.getTargets()[0];
    final String name=target.getName();
    if (name == null) {
      return;
    }
    PyStatement statement=PsiTreeUtil.getNextSiblingOfType(node,PyStatement.class);
    while (statement instanceof PyAssignmentStatement) {
      final PyAssignmentStatement assignmentStatement=(PyAssignmentStatement)statement;
      final List<Pair<PyExpression,PyExpression>> targets=getDictTargets(target,name,assignmentStatement);
      if (targets == null)       return;
      if (!targets.isEmpty()) {
        registerProblem(node,"This dictionary creation could be rewritten as a dictionary literal",new DictCreationQuickFix(node));
        break;
      }
      statement=PsiTreeUtil.getNextSiblingOfType(assignmentStatement,PyStatement.class);
    }
  }
}
