{
  TIntHashSet result=new TIntHashSet();
  Queue<Integer> q=new Queue<>(10);
  q.addLast(classId);
  while (!q.isEmpty()) {
    int curId=q.pullFirst();
    if (result.add(curId)) {
      final TIntHashSet subclasses=myIndex.getBackwardHierarchyMap().get(curId);
      if (subclasses != null) {
        subclasses.forEach(new TIntProcedure(){
          @Override public boolean execute(          int nextId){
            q.addLast(nextId);
            return true;
          }
        }
);
      }
    }
  }
  return result.toArray();
}
