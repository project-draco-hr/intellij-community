{
  LightUsage usage=element.asUsage(myIndex.getByteSeqEum());
  TIntHashSet set=new TIntHashSet();
  for (  int classId : getWholeHierarchy(usage.getOwner())) {
    final LightUsage overriderUsage=usage.override(classId);
    final Collection<Integer> usageFiles=myIndex.getBackwardReferenceMap().get(overriderUsage);
    if (usageFiles != null) {
      for (      int fileId : usageFiles) {
        final VirtualFile file=findFile(fileId);
        if (file != null) {
          set.add(((VirtualFileWithId)file).getId());
        }
      }
    }
  }
  return set;
}
