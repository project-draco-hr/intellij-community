{
  List<String> templates=new ArrayList<String>();
  templates.add("{rev}");
  templates.add("{node}");
  if (currentVersion.isParentRevisionTemplateSupported()) {
    templates.add("{p1rev}:{p1node} {p2rev}:{p2node}");
  }
 else {
    templates.add("{parents}");
  }
  templates.addAll(Arrays.asList("{date|isodatesec}","{author}","{desc}","{branch}"));
  if (!includeFiles) {
    return ArrayUtil.toStringArray(templates);
  }
  List<String> fileTypes=ContainerUtil.newArrayList("{file_adds}","{file_mods}","{file_dels}","{file_copies}");
  if (currentVersion.isBuiltInFunctionSupported()) {
    templates.addAll(ContainerUtil.map(fileTypes,new Function<String,String>(){
      @Override public String fun(      String s){
        return wrapInJoin(s);
      }
    }
));
  }
 else {
    templates.addAll(fileTypes);
  }
  return ArrayUtil.toStringArray(templates);
}
