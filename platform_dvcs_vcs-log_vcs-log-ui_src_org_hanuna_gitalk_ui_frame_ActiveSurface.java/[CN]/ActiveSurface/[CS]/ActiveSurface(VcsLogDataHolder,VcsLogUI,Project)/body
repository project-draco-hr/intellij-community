{
  myLogDataHolder=logDataHolder;
  myGraphTable=new VcsLogGraphTable(vcsLogUI);
  myBranchesPanel=new BranchesPanel(logDataHolder,vcsLogUI);
  final ChangesBrowser changesBrowser=new ChangesBrowser(project,null,Collections.<Change>emptyList(),null,false,false,null,ChangesBrowser.MyUseCase.COMMITTED_CHANGES,null);
  changesBrowser.getDiffAction().registerCustomShortcutSet(CommonShortcuts.getDiff(),myGraphTable);
  setDefaultEmptyText(changesBrowser);
  myGraphTable.getSelectionModel().addListSelectionListener(new ListSelectionListener(){
    @Override public void valueChanged(    ListSelectionEvent e){
      int rows=myGraphTable.getSelectedRowCount();
      if (rows < 1) {
        setDefaultEmptyText(changesBrowser);
        changesBrowser.setChangesToDisplay(Collections.<Change>emptyList());
      }
 else       if (rows > 1) {
        changesBrowser.getViewer().setEmptyText("Multiple commits selection is not supported yet");
        changesBrowser.setChangesToDisplay(Collections.<Change>emptyList());
      }
 else {
        Node node=myGraphTable.getSelectedNodes().get(0);
        try {
          VcsCommit commitData=myLogDataHolder.getDataPack().getCommitDataGetter().getCommitData(node);
          changesBrowser.setChangesToDisplay(new ArrayList<Change>(commitData.getChanges()));
        }
 catch (        VcsException e1) {
          LOG.error(e1);
        }
      }
    }
  }
);
  Splitter splitter=new Splitter(false,0.7f);
  splitter.setFirstComponent(ScrollPaneFactory.createScrollPane(myGraphTable));
  splitter.setSecondComponent(changesBrowser);
  setLayout(new BorderLayout());
  add(myBranchesPanel,BorderLayout.NORTH);
  add(splitter,BorderLayout.CENTER);
}
