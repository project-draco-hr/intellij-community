{
  myLogDataHolder=logDataHolder;
  myGraphTable=new VcsLogGraphTable(vcsLogUI);
  myBranchesPanel=new BranchesPanel(logDataHolder,vcsLogUI);
  myDetailsPanel=new DetailsPanel(logDataHolder,myGraphTable,vcsLogUI.getColorManager());
  final ChangesBrowser changesBrowser=new ChangesBrowser(project,null,Collections.<Change>emptyList(),null,false,false,null,ChangesBrowser.MyUseCase.COMMITTED_CHANGES,null);
  changesBrowser.getDiffAction().registerCustomShortcutSet(CommonShortcuts.getDiff(),myGraphTable);
  setDefaultEmptyText(changesBrowser);
  final CommitSelectionListener selectionChangeListener=new CommitSelectionListener(changesBrowser);
  myGraphTable.getSelectionModel().addListSelectionListener(selectionChangeListener);
  myGraphTable.getSelectionModel().addListSelectionListener(myDetailsPanel);
  myLogDataHolder.getMiniDetailsGetter().addDetailsLoadedListener(new Runnable(){
    @Override public void run(){
      myGraphTable.repaint();
    }
  }
);
  myLogDataHolder.getCommitDetailsGetter().addDetailsLoadedListener(new Runnable(){
    @Override public void run(){
      selectionChangeListener.valueChanged(null);
      myDetailsPanel.valueChanged(null);
    }
  }
);
  myChangesLoadingPane=new JBLoadingPanel(new BorderLayout(),project);
  myChangesLoadingPane.add(changesBrowser);
  myDetailsSplitter=new Splitter(true,0.7f);
  myDetailsSplitter.setFirstComponent(ScrollPaneFactory.createScrollPane(myGraphTable));
  Splitter splitter=new Splitter(false,0.7f);
  splitter.setFirstComponent(myDetailsSplitter);
  splitter.setSecondComponent(myChangesLoadingPane);
  setLayout(new BorderLayout());
  add(myBranchesPanel,BorderLayout.NORTH);
  add(splitter,BorderLayout.CENTER);
}
