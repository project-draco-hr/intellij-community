{
  final GrField[] fields=grType.getCodeFields();
  for (  GrField field : fields) {
    final PsiAnnotation delegate=PsiImplUtil.getAnnotation(field,GroovyCommonClassNames.GROOVY_LANG_DELEGATE);
    if (delegate == null)     continue;
    final boolean shouldImplement=shouldImplementDelegatedInterfaces(delegate);
    if (!shouldImplement)     continue;
    final PsiType type=field.getDeclaredType();
    if (!(type instanceof PsiClassType))     continue;
    final PsiClassType.ClassResolveResult resolveResult=((PsiClassType)type).resolveGenerics();
    final PsiClass psiClass=resolveResult.getElement();
    if (psiClass == null)     continue;
    final PsiSubstitutor substitutor=resolveResult.getSubstitutor();
    if (psiClass.isInterface()) {
      result.add((PsiClassType)type);
    }
 else {
      for (      PsiClassType implementsType : psiClass.getImplementsListTypes()) {
        PsiType substituted=substitutor.substitute(implementsType);
        if (substituted instanceof PsiClassType) {
          result.add((PsiClassType)substituted);
        }
      }
    }
  }
}
