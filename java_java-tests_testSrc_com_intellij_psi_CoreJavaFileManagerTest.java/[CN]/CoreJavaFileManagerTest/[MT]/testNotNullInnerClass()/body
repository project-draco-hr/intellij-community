{
  String text="package foo;\n\n" + "public class Nested {\n" + "public class InnerGeneral {}\n"+ "public class Inner$ {"+ "}\n"+ "\n"+ "public Inner$ inner() {\n"+ "   return  new Inner$();\n"+ "}\n"+ "\n"+ "}";
  VirtualFile root=prepareClasses("Nested",text);
  GlobalSearchScope scope=GlobalSearchScope.allScope(getProject());
  CoreJavaFileManager manager=new CoreJavaFileManager(myPsiManager);
  manager.addToClasspath(root);
  PsiClass clazz=manager.findClass("foo.Nested",scope);
  assertNotNull(clazz);
  PsiClass clazzInnerGeneral=manager.findClass("foo.Nested.InnerGeneral",scope);
  assertNotNull(clazzInnerGeneral);
  PsiClass clazzInner$=manager.findClass("foo.Nested.Inner$",scope);
  assertNotNull(clazzInner$);
  PsiClass clazzInner$Wrong1=manager.findClass("foo.Nested.Inner$X",scope);
  assertNull(clazzInner$Wrong1);
  PsiClass clazzInner$Wrong2=manager.findClass("foo.Nested.Inner$$X",scope);
  assertNull(clazzInner$Wrong2);
  PsiClass clazzInner$Wrong3=manager.findClass("foo.Nested.Inner$$",scope);
  assertNull(clazzInner$Wrong3);
}
