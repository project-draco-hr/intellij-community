{
  String text="package foo;\n\n" + "public class NestedX {\n" + "public class XX {"+ "   public class XXX{"+ "     public class XXXX{ }"+ "     public class XXXX${ }"+ "   }"+ "   public class XXX${"+ "     public class XXXX{ }"+ "     public class XXXX${ }"+ "   }"+ "}\n"+ "public class XX$ {"+ "   public class XXX{"+ "     public class XXXX{ }"+ "     public class XXXX${ }"+ "   }"+ "   public class XXX${"+ "     public class XXXX{ }"+ "     public class XXXX${ }"+ "   }"+ "}\n"+ "\n"+ "}";
  VirtualFile root=prepareClasses("NestedX",text);
  GlobalSearchScope scope=GlobalSearchScope.allScope(getProject());
  CoreJavaFileManager manager=new CoreJavaFileManager(myPsiManager);
  manager.addToClasspath(root);
  Queue<String> queue=new LinkedList<String>();
  queue.add("foo.NestedX");
  while (!queue.isEmpty()) {
    String head=queue.remove();
    PsiClass clazzInner=manager.findClass(head,scope);
    assertNotNull(head,clazzInner);
    String lastSegment=head.substring(head.lastIndexOf('.'));
    String xs=lastSegment.substring(lastSegment.indexOf("X")).replace("$","");
    if (xs.length() < 4) {
      queue.add(head + "." + xs+ "X");
      queue.add(head + "." + xs+ "X$");
    }
  }
}
