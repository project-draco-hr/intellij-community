{
  final RemoteServer<?> server=getServer();
  final ServerType<? extends ServerConfiguration> serverType=server.getType();
  final DeploymentConfigurationManager configurationManager=DeploymentConfigurationManager.getInstance(doGetProject());
  final List<RunnerAndConfigurationSettings> list=new ArrayList<RunnerAndConfigurationSettings>(ContainerUtil.filter(configurationManager.getDeploymentConfigurations(serverType),new Condition<RunnerAndConfigurationSettings>(){
    @Override public boolean value(    RunnerAndConfigurationSettings settings){
      DeployToServerRunConfiguration configuration=(DeployToServerRunConfiguration)settings.getConfiguration();
      return StringUtil.equals(server.getName(),configuration.getServerName());
    }
  }
));
  if (canCreate) {
    list.add(null);
  }
  ListPopup popup=JBPopupFactory.getInstance().createListPopup(new BaseListPopupStep<RunnerAndConfigurationSettings>(popupTitle,list){
    @Override public Icon getIconFor(    RunnerAndConfigurationSettings value){
      return value != null ? serverType.getIcon() : null;
    }
    @NotNull @Override public String getTextFor(    RunnerAndConfigurationSettings value){
      return value != null ? value.getName() : "Create...";
    }
    @Override public PopupStep onChosen(    final RunnerAndConfigurationSettings selectedValue,    boolean finalChoice){
      return doFinalStep(new Runnable(){
        @Override public void run(){
          if (selectedValue != null) {
            ProgramRunnerUtil.executeConfiguration(doGetProject(),selectedValue,executor);
          }
 else {
            configurationManager.createAndRunConfiguration(serverType,RemoteServerNode.this.getValue());
          }
        }
      }
);
    }
  }
);
  if (e.getInputEvent() instanceof MouseEvent) {
    popup.show(new RelativePoint((MouseEvent)e.getInputEvent()));
  }
 else {
    popup.showInBestPositionFor(e.getDataContext());
  }
}
