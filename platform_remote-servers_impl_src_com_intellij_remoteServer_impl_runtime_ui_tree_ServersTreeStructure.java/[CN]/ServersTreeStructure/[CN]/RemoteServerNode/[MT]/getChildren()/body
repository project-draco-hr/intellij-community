{
  final ServerConnection<?> connection=getConnection();
  if (connection == null) {
    return Collections.emptyList();
  }
  Map<DeploymentGroup,GroupNode> group2node=new HashMap<DeploymentGroup,GroupNode>();
  final List<AbstractTreeNode> children=new ArrayList<AbstractTreeNode>();
  for (  Deployment deployment : connection.getDeployments()) {
    final String groupName=deployment.getGroup();
    if (groupName == null) {
      children.add(new DeploymentNodeImpl(connection,this,deployment));
    }
 else {
      Map<String,DeploymentGroup> groups=ContainerUtil.getOrCreate(myServer2DeploymentGroups,getServer(),new Factory<Map<String,DeploymentGroup>>(){
        @Override public Map<String,DeploymentGroup> create(){
          return new HashMap<String,DeploymentGroup>();
        }
      }
);
      final DeploymentGroup group=ContainerUtil.getOrCreate(groups,groupName,new Factory<DeploymentGroup>(){
        @Override public DeploymentGroup create(){
          return new DeploymentGroup(groupName);
        }
      }
);
      ContainerUtil.getOrCreate(group2node,group,new Factory<GroupNode>(){
        @Override public GroupNode create(){
          GroupNode result=new GroupNode(connection,RemoteServerNode.this,group);
          children.add(result);
          return result;
        }
      }
);
    }
  }
  return children;
}
