{
  final JBList list=super.createList(recentProjectActions,size);
  list.setBackground(FlatWelcomeFrame.getProjectsBackground());
  list.addKeyListener(new KeyAdapter(){
    @Override public void keyPressed(    KeyEvent e){
      if (e.getKeyCode() == KeyEvent.VK_RIGHT) {
        Object selected=list.getSelectedValue();
        if (selected instanceof ProjectGroupActionGroup) {
          ProjectGroup group=((ProjectGroupActionGroup)selected).getGroup();
          if (!group.isExpanded()) {
            group.setExpanded(true);
            ListModel model=((NameFilteringListModel)list.getModel()).getOriginalModel();
            int index=list.getSelectedIndex();
            RecentProjectsWelcomeScreenActionBase.rebuildRecentProjectDataModel((DefaultListModel)model);
            list.setSelectedIndex(group.getProjects().isEmpty() ? index : index + 1);
          }
        }
 else {
          FlatWelcomeFrame frame=UIUtil.getParentOfType(FlatWelcomeFrame.class,list);
          if (frame != null) {
            FocusTraversalPolicy policy=frame.getFocusTraversalPolicy();
            if (policy != null) {
              Component next=policy.getComponentAfter(frame,list);
              if (next != null) {
                next.requestFocus();
              }
            }
          }
        }
      }
    }
  }
);
  list.addMouseListener(new PopupHandler(){
    @Override public void invokePopup(    Component comp,    int x,    int y){
      final ActionGroup group=(ActionGroup)ActionManager.getInstance().getAction("WelcomeScreenRecentProjectActionGroup");
      if (group != null) {
        ActionManager.getInstance().createActionPopupMenu(ActionPlaces.WELCOME_SCREEN,group).getComponent().show(comp,x,y);
      }
    }
  }
);
  return list;
}
