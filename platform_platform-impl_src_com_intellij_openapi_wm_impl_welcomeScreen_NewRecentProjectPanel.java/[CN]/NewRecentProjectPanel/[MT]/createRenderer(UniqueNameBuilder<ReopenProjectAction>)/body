{
  return new RecentProjectItemRenderer(myPathShortener){
    private GridBagConstraints nameCell;
    private GridBagConstraints pathCell;
    private GridBagConstraints closeButtonCell;
    private void initConstraints(){
      nameCell=new GridBagConstraints();
      pathCell=new GridBagConstraints();
      closeButtonCell=new GridBagConstraints();
      nameCell.gridx=0;
      nameCell.gridy=0;
      nameCell.weightx=1.0;
      nameCell.weighty=1.0;
      nameCell.anchor=GridBagConstraints.FIRST_LINE_START;
      nameCell.insets=new Insets(6,5,1,5);
      pathCell.gridx=0;
      pathCell.gridy=1;
      pathCell.insets=new Insets(1,5,6,5);
      pathCell.anchor=GridBagConstraints.LAST_LINE_START;
      closeButtonCell.gridx=1;
      closeButtonCell.gridy=0;
      closeButtonCell.anchor=GridBagConstraints.FIRST_LINE_END;
      closeButtonCell.insets=new Insets(7,7,7,7);
      closeButtonCell.gridheight=2;
    }
    @Override protected Color getListBackground(    boolean isSelected,    boolean hasFocus){
      return isSelected ? FlatWelcomeFrame.getListSelectionColor(hasFocus) : FlatWelcomeFrame.getProjectsBackground();
    }
    @Override protected Color getListForeground(    boolean isSelected,    boolean hasFocus){
      return UIUtil.getListForeground(isSelected && hasFocus);
    }
    @Override protected void layoutComponents(){
      setLayout(new GridBagLayout());
      initConstraints();
      add(myName,nameCell);
      add(myPath,pathCell);
    }
    @Override public Component getListCellRendererComponent(    JList list,    Object value,    int index,    boolean isSelected,    boolean cellHasFocus){
      super.getListCellRendererComponent(list,value,index,isSelected,cellHasFocus);
      if (Registry.is("removable.welcome.screen.projects")) {
        if (myHovered) {
          add(myCloseThisItem,closeButtonCell);
          list.revalidate();
          list.repaint();
        }
 else {
          remove(myCloseThisItem);
          list.revalidate();
          list.repaint();
        }
      }
      return this;
    }
  }
;
}
