{
  return new ThrowablePairConsumer<JsonReader,JsonSchemaObject,IOException>(){
    @Override public void consume(    JsonReader in,    JsonSchemaObject object) throws IOException {
      if (in.peek() != JsonToken.BEGIN_OBJECT) {
        in.skipValue();
        return;
      }
      in.beginObject();
      final HashMap<String,JsonSchemaObject> properties=new HashMap<String,JsonSchemaObject>();
      while (in.peek() != JsonToken.END_OBJECT) {
        if (in.peek() == JsonToken.NAME) {
          final String name=in.nextName();
          if (in.peek() == JsonToken.BEGIN_OBJECT) {
            properties.put(name,readInnerObject(in));
          }
 else           in.skipValue();
        }
 else         in.skipValue();
      }
      object.setPatternProperties(properties);
      in.endObject();
    }
  }
;
}
