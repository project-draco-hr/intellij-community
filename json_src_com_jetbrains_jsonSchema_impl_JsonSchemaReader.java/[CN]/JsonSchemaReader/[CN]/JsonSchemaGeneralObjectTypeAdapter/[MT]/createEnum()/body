{
  return new ThrowablePairConsumer<JsonReader,JsonSchemaObject,IOException>(){
    @Override public void consume(    JsonReader in,    JsonSchemaObject object) throws IOException {
      if (in.peek() != JsonToken.BEGIN_ARRAY) {
        in.skipValue();
        return;
      }
      final ArrayList<Object> objects=new ArrayList<Object>();
      in.beginArray();
      while (in.peek() != JsonToken.END_ARRAY) {
        if (in.peek() == JsonToken.STRING)         objects.add("\"" + in.nextString() + "\"");
 else         if (in.peek() == JsonToken.NUMBER)         objects.add(in.nextInt());
 else         if (in.peek() == JsonToken.BOOLEAN)         objects.add(in.nextBoolean());
 else         in.skipValue();
      }
      in.endArray();
      object.setEnum(objects);
    }
  }
;
}
