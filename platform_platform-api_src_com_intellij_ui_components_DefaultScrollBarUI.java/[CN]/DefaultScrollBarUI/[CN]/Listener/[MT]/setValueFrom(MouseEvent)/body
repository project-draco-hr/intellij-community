{
  int x=event.getX();
  int y=event.getY();
  int thumbMin, thumbMax, thumbPos;
  if (VERTICAL == myScrollBar.getOrientation()) {
    thumbMin=myTrackBounds.y;
    thumbMax=myTrackBounds.y + myTrackBounds.height - myThumbBounds.height;
    thumbPos=Math.min(thumbMax,Math.max(thumbMin,(y - myOffset)));
    if (myThumbBounds.y != thumbPos) {
      int minY=Math.min(myThumbBounds.y,thumbPos);
      int maxY=Math.max(myThumbBounds.y,thumbPos) + myThumbBounds.height;
      myThumbBounds.y=thumbPos;
      onThumbMove();
      repaint(myThumbBounds.x,minY,myThumbBounds.width,maxY - minY);
    }
  }
 else {
    thumbMin=myTrackBounds.x;
    thumbMax=myTrackBounds.x + myTrackBounds.width - myThumbBounds.width;
    thumbPos=Math.min(thumbMax,Math.max(thumbMin,(x - myOffset)));
    if (myThumbBounds.x != thumbPos) {
      int minX=Math.min(myThumbBounds.x,thumbPos);
      int maxX=Math.max(myThumbBounds.x,thumbPos) + myThumbBounds.width;
      myThumbBounds.x=thumbPos;
      onThumbMove();
      repaint(minX,myThumbBounds.y,maxX - minX,myThumbBounds.height);
    }
  }
  int valueMin=myScrollBar.getMinimum();
  int valueMax=myScrollBar.getMaximum() - myScrollBar.getVisibleAmount();
  boolean isDefaultOrientation=VERTICAL == myScrollBar.getOrientation() || myScrollBar.getComponentOrientation().isLeftToRight();
  if (thumbPos == thumbMax) {
    myScrollBar.setValue(isDefaultOrientation ? valueMax : valueMin);
  }
 else {
    int valueRange=valueMax - valueMin;
    int thumbRange=thumbMax - thumbMin;
    int thumbValue=isDefaultOrientation ? thumbPos - thumbMin : thumbMax - thumbPos;
    isValueCached=true;
    myCachedValue=valueMin + convert(valueRange,thumbValue,thumbRange);
    myScrollBar.setValue(myCachedValue);
  }
  if (!isDragging)   updateMouse(x,y);
}
