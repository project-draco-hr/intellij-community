{
  int min=myScrollBar.getMinimum();
  int max=myScrollBar.getMaximum();
  int range=max - min;
  if (range <= 0) {
    myThumbBounds.setBounds(0,0,0,0);
  }
 else   if (VERTICAL == myScrollBar.getOrientation()) {
    int extent=myScrollBar.getVisibleAmount();
    int height=Math.max(myTrackBounds.height * extent / range,2 * getThickness());
    if (myTrackBounds.height <= height) {
      myThumbBounds.setBounds(0,0,0,0);
    }
 else {
      int value=getValue();
      int maxY=myTrackBounds.y + myTrackBounds.height - height;
      int y=(value < max - extent) ? (myTrackBounds.height - height) * (value - min) / (range - extent) : maxY;
      setThumbBounds(myTrackBounds.x,adjust(y,myTrackBounds.y,maxY),myTrackBounds.width,height);
    }
  }
 else {
    int extent=myScrollBar.getVisibleAmount();
    int width=Math.max(myTrackBounds.width * extent / range,2 * getThickness());
    if (myTrackBounds.width <= width) {
      myThumbBounds.setBounds(0,0,0,0);
    }
 else {
      int value=getValue();
      int maxX=myTrackBounds.x + myTrackBounds.width - width;
      int x=(value < max - extent) ? (myTrackBounds.width - width) * (value - min) / (range - extent) : maxX;
      if (!myScrollBar.getComponentOrientation().isLeftToRight())       x=myTrackBounds.x - x + maxX;
      setThumbBounds(adjust(x,myTrackBounds.x,maxX),myTrackBounds.y,width,myTrackBounds.height);
    }
  }
}
