{
  if (!CodeInsightUtilBase.preparePsiElementForWrite(myElement))   return;
  PyElementGenerator elementGenerator=PyElementGenerator.getInstance(project);
  PyFunction function=elementGenerator.createFromText(LanguageLevel.forElement(myElement),PyFunction.class,"def " + myElement.getText() + "(a):\n  pass");
  PyStatement statement=PsiTreeUtil.getParentOfType(myElement,PyStatement.class);
  if (statement != null) {
    PsiElement parent=statement.getParent();
    if (parent != null)     function=(PyFunction)parent.addBefore(function,statement);
  }
  function=CodeInsightUtilBase.forcePsiPostprocessAndRestoreElement(function);
  final TemplateBuilder builder=TemplateBuilderFactory.getInstance().createTemplateBuilder(function);
  builder.replaceElement(function.getParameterList().getParameters()[0],"");
  builder.replaceElement(function.getStatementList().getStatements()[0],"pass");
  builder.run();
}
