{
  final PsiElement element=instruction.getElement();
  if (element == null || !((PyFile)element.getContainingFile()).getLanguageLevel().isPy3K()) {
    return processReducedMap(map,instruction,element);
  }
  final DFAMap<ScopeVariable> reducedMap=new DFAMap<ScopeVariable>();
  for (  Map.Entry<String,ScopeVariable> entry : map.entrySet()) {
    final ScopeVariable value=entry.getValue();
    if (value.isParameter()) {
      final PsiElement declaration=value.getDeclarations().iterator().next();
      final PyExceptPart exceptPart=PyExceptPartNavigator.getPyExceptPartByTarget(declaration);
      if (exceptPart != null) {
        if (!PsiTreeUtil.isAncestor(exceptPart,element,false)) {
          continue;
        }
      }
    }
    reducedMap.put(entry.getKey(),value);
  }
  return processReducedMap(reducedMap,instruction,element);
}
