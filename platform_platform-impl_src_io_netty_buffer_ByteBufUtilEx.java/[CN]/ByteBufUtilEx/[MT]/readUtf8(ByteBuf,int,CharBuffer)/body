{
  AbstractByteBuf buffer=getBuf(buf);
  int readerIndex=buf.readerIndex();
  int c, char2, char3;
  int count=0;
  int byteIndex=readerIndex;
  int charIndex=charBuffer.position();
  char[] chars=charBuffer.array();
  while (count < byteCount) {
    c=buffer._getByte(byteIndex++) & 0xff;
    if (c > 127) {
      break;
    }
    count++;
    chars[charIndex++]=(char)c;
  }
  byteIndex=readerIndex + count;
  while (count < byteCount) {
    c=buffer._getByte(byteIndex++) & 0xff;
switch (c >> 4) {
case 0:
case 1:
case 2:
case 3:
case 4:
case 5:
case 6:
case 7:
      count++;
    chars[charIndex++]=(char)c;
  break;
case 12:
case 13:
count+=2;
if (count > byteCount) {
throw new UTFDataFormatException("malformed input: partial character at end");
}
char2=(int)buffer._getByte(byteIndex++);
if ((char2 & 0xC0) != 0x80) {
throw new UTFDataFormatException("malformed input around byte " + count);
}
chars[charIndex++]=(char)(((c & 0x1F) << 6) | (char2 & 0x3F));
break;
case 14:
count+=3;
if (count > byteCount) {
throw new UTFDataFormatException("malformed input: partial character at end");
}
char2=buffer._getByte(byteIndex++);
char3=buffer._getByte(byteIndex++);
if (((char2 & 0xC0) != 0x80) || ((char3 & 0xC0) != 0x80)) {
throw new UTFDataFormatException("malformed input around byte " + (count - 1));
}
chars[charIndex++]=(char)(((c & 0x0F) << 12) | ((char2 & 0x3F) << 6) | ((char3 & 0x3F)));
break;
default :
throw new UTFDataFormatException("malformed input around byte " + count);
}
}
if (buf == buffer) {
buffer.readerIndex=readerIndex + byteCount;
}
 else {
buf.readerIndex(readerIndex + byteCount);
}
charBuffer.position(charIndex);
}
