{
  boolean changes=super.update();
  final CompositeAppearance oldText=myHighlightedText;
  myHighlightedText=new CompositeAppearance();
  NavigatablePsiElement element=(NavigatablePsiElement)myElement;
  if (element == null) {
    final String invalidPrefix=IdeBundle.message("node.hierarchy.invalid");
    if (!myHighlightedText.getText().startsWith(invalidPrefix)) {
      myHighlightedText.getBeginning().addText(invalidPrefix,HierarchyNodeDescriptor.getInvalidPrefixAttributes());
    }
    return true;
  }
  final ItemPresentation presentation=element.getPresentation();
  if (presentation != null) {
    if (element instanceof PyFunction) {
      final PyClass cls=((PyFunction)element).getContainingClass();
      if (cls != null) {
        myHighlightedText.getEnding().addText(cls.getName() + ".");
      }
    }
    myHighlightedText.getEnding().addText(presentation.getPresentableText());
    myHighlightedText.getEnding().addText(" " + presentation.getLocationString(),HierarchyNodeDescriptor.getPackageNameAttributes());
  }
  myName=myHighlightedText.getText();
  if (!Comparing.equal(myHighlightedText,oldText)) {
    changes=true;
  }
  return changes;
}
