{
  final Ref<GitCommandResult> result=Ref.create();
  ProgressManager.getInstance().run(new Task.Modal(myProject,GitBundle.getString("pull.getting.remote.branches"),false){
    @Override public void run(    @NotNull ProgressIndicator indicator){
      indicator.setIndeterminate(true);
      result.set(myGit.lsRemote(GitPullDialog.this.myProject,gitRoot(),remote,"--heads"));
    }
  }
);
  if (!result.isNull() && result.get().success()) {
    try {
      return parseRemoteBranches(remote,result.get().getOutput());
    }
 catch (    Exception e) {
      LOG.error("Couldn't parse ls-remote output: [" + result.get().getOutput() + "]",e);
      Messages.showErrorDialog(this.getRootPane(),"Couldn't parse ls-remote output","Couldn't get the remote branches list from " + remote.getName());
      return null;
    }
  }
 else {
    String message=result.isNull() ? "" : result.get().getErrorOutputAsJoinedString();
    Messages.showErrorDialog(this.getRootPane(),message,"Couldn't get the remote branches list from " + remote.getName());
    return null;
  }
}
