{
  if (!FileModificationService.getInstance().prepareFileForWrite(file))   return;
  final PsiTypeParameter[] typeParameters=myPsiClass.getTypeParameters();
  final PsiSubstitutor psiSubstitutor=inferTypeArguments();
  final PsiJavaCodeReferenceElement reference=myNewExpression.getClassOrAnonymousClassReference();
  LOG.assertTrue(reference != null,myNewExpression);
  final PsiReferenceParameterList parameterList=reference.getParameterList();
  LOG.assertTrue(parameterList != null,myNewExpression);
  PsiElementFactory factory=JavaPsiFacade.getElementFactory(project);
  PsiTypeElement[] elements=parameterList.getTypeParameterElements();
  for (int i=elements.length - 1; i >= 0; i--) {
    PsiType typeArg=assertNotNull(psiSubstitutor.substitute(typeParameters[i]));
    PsiElement replaced=elements[i].replace(factory.createTypeElement(typeArg));
    JavaCodeStyleManager.getInstance(file.getProject()).shortenClassReferences(replaced);
  }
}
