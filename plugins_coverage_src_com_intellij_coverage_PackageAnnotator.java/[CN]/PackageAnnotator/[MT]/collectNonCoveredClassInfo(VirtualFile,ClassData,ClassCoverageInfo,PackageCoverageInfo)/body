{
  final byte[] content=myCoverageManager.doInReadActionIfProjectOpen(new Computable<byte[]>(){
    public byte[] compute(){
      try {
        return classFile.contentsToByteArray();
      }
 catch (      IOException e) {
        return null;
      }
    }
  }
);
  if (content == null)   return false;
  ClassReader reader=new ClassReader(content,0,content.length);
  final JavaCoverageSuite coverageSuite=(JavaCoverageSuite)CoverageDataManager.getInstance(myProject).getCurrentSuite();
  if (coverageSuite == null)   return false;
  SourceLineCounter counter=new SourceLineCounter(new EmptyVisitor(),classData,coverageSuite.getRunner() instanceof IDEACoverageRunner && coverageSuite.isTracingEnabled());
  reader.accept(counter,0);
  classCoverageInfo.totalLineCount+=counter.getNSourceLines();
  classCoverageInfo.totalMethodCount+=counter.getNMethodsWithCode();
  packageCoverageInfo.totalLineCount+=counter.getNSourceLines();
  if (!counter.isInterface()) {
    packageCoverageInfo.totalClassCount++;
  }
  return counter.getNMethodsWithCode() > 0;
}
