{
  PsiElement next=PsiUtil.skipSet(semicolon.getNextSibling(),true,SET,false);
  if (next == null)   return true;
  if (next.getNode().getElementType() == GroovyTokenTypes.mNLS) {
    PsiElement nextSibling=next.getNextSibling();
    if (nextSibling == null || nextSibling.getNode().getElementType() != GroovyElementTypes.CLOSABLE_BLOCK) {
      return true;
    }
  }
  PsiElement previous=PsiUtil.skipWhitespacesAndComments(semicolon.getPrevSibling(),false,false);
  if (previous == null)   return true;
  IElementType previousType=previous.getNode().getElementType();
  if (previousType == GroovyTokenTypes.mNLS || previousType == mSEMI) {
    return true;
  }
  return false;
}
