{
  int length=data.length;
  byte[] out=new byte[(length / 5) * 4 + ((length % 5 != 0) ? length % 5 - 1 : 0)];
  int k=0;
  int rest;
  int i;
  int b1=0, b2=0, b3=0, b4=0, b5=0;
  int b=0;
  for (i=0; i + 5 <= length; i+=5) {
    b1=(int)data[i + 0] & 0xFF;
    b2=(int)data[i + 1] & 0xFF;
    b3=(int)data[i + 2] & 0xFF;
    b4=(int)data[i + 3] & 0xFF;
    b5=(int)data[i + 4] & 0xFF;
    b1=((b1 >= 93) ? b1 - 42 : ((b1 >= 63) ? b1 - 41 : ((b1 >= 40) ? b1 - 38 : b1 - 36)));
    b2=((b2 >= 93) ? b2 - 42 : ((b2 >= 63) ? b2 - 41 : ((b2 >= 40) ? b2 - 38 : b2 - 36)));
    b3=((b3 >= 93) ? b3 - 42 : ((b3 >= 63) ? b3 - 41 : ((b3 >= 40) ? b3 - 38 : b3 - 36)));
    b4=((b4 >= 93) ? b4 - 42 : ((b4 >= 63) ? b4 - 41 : ((b4 >= 40) ? b4 - 38 : b4 - 36)));
    b5=((b5 >= 93) ? b5 - 42 : ((b5 >= 63) ? b5 - 41 : ((b5 >= 40) ? b5 - 38 : b5 - 36)));
    b=b1 * 52200625 + b2 * 614125 + b3 * 7225 + b4 * 85 + b5;
    out[k]=(byte)((b >>> 24) & 0xFF);
    k++;
    out[k]=(byte)((b >>> 16) & 0xFF);
    k++;
    out[k]=(byte)((b >>> 8) & 0xFF);
    k++;
    out[k]=(byte)(b & 0xFF);
    k++;
  }
  if ((rest=length % 5) != 0) {
    int j;
    byte[] block={'~','~','~','~','~'};
    for (j=0; j < rest; j++) {
      block[j]=data[i + j];
    }
    byte[] out_rest=decode(block);
    for (j=0; j < rest - 1; j++) {
      out[k]=out_rest[j];
      k++;
    }
  }
  return out;
}
