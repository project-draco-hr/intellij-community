{
  myOptions=options;
  myPage=page;
  myHighlightsExtractor=new HighlightsExtractor(page.getAdditionalHighlightingTagToDescriptorMap());
  myEditor=(EditorEx)FontEditorPreview.createPreviewEditor(myHighlightsExtractor.extractHighlights(page.getDemoText(),myHighlightData),10,3,-1,myOptions,false);
  FontEditorPreview.installTrafficLights(myEditor);
  myBlinkingAlarm=new Alarm().setActivationComponent(myEditor.getComponent());
  if (navigatable) {
    myEditor.getContentComponent().addMouseMotionListener(new MouseMotionAdapter(){
      @Override public void mouseMoved(      MouseEvent e){
        LogicalPosition pos=myEditor.xyToLogicalPosition(new Point(e.getX(),e.getY()));
        navigate(myEditor,false,pos,page.getHighlighter(),false);
      }
    }
);
    myEditor.getCaretModel().addCaretListener(new CaretAdapter(){
      @Override public void caretPositionChanged(      CaretEvent e){
        if (!myTextIsChanging) {
          navigate(myEditor,true,e.getNewPosition(),page.getHighlighter(),false);
        }
      }
    }
);
  }
}
