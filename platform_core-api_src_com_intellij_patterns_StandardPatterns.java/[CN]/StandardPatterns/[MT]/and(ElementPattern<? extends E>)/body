{
  final List<InitialPatternCondition> initial=ContainerUtil.newSmartList();
  for (  ElementPattern<?> pattern : patterns) {
    initial.add(pattern.getCondition().getInitialCondition());
  }
  ObjectPattern.Capture<E> result=composeInitialConditions(initial);
  for (  ElementPattern pattern : patterns) {
    for (    PatternCondition<?> condition : (List<PatternCondition<?>>)pattern.getCondition().getConditions()) {
      result=result.with((PatternCondition<? super E>)condition);
    }
  }
  return result;
}
