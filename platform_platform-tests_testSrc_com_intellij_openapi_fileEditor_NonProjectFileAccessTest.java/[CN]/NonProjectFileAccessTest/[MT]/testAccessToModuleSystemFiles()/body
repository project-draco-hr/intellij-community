{
  final Module moduleWithoutContentRoot=new WriteCommandAction<Module>(getProject()){
    @Override protected void run(    @NotNull Result<Module> result) throws Throwable {
      String moduleName;
      ModifiableModuleModel moduleModel=ModuleManager.getInstance(getProject()).getModifiableModel();
      try {
        VirtualFile moduleDir=getProject().getBaseDir().createChildDirectory(this,"moduleWithoutContentRoot");
        moduleName=moduleModel.newModule(moduleDir.getPath() + "/moduleWithoutContentRoot.iml",EmptyModuleType.EMPTY_MODULE).getName();
        moduleModel.commit();
      }
 catch (      Throwable t) {
        moduleModel.dispose();
        throw t;
      }
      result.setResult(ModuleManager.getInstance(getProject()).findModuleByName(moduleName));
    }
  }
.execute().getResultObject();
  PlatformTestUtil.saveProject(getProject());
  VirtualFile fileUnderModuleDir=new WriteAction<VirtualFile>(){
    @Override protected void run(    @NotNull Result<VirtualFile> result) throws Throwable {
      result.setResult(moduleWithoutContentRoot.getModuleFile().getParent().createChildData(this,"fileUnderModuleDir.txt"));
    }
  }
.execute().getResultObject();
  assertFalse(ProjectFileIndex.SERVICE.getInstance(getProject()).isInContent(fileUnderModuleDir));
  typeAndCheck(moduleWithoutContentRoot.getModuleFile(),true);
  typeAndCheck(myModule.getModuleFile(),true);
  typeAndCheck(fileUnderModuleDir,false);
}
