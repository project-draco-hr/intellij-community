{
  DataInputOutputUtil.writeINT(dataOutput,classAndMethodsMap.size());
  final int[] classNameIds=classAndMethodsMap.keys();
  Arrays.sort(classNameIds);
  int prevClassNameId=0;
  for (  int classNameId : classNameIds) {
    DataInputOutputUtil.writeINT(dataOutput,classNameId - prevClassNameId);
    TIntArrayList value=classAndMethodsMap.get(classNameId);
    DataInputOutputUtil.writeINT(dataOutput,value.size());
    final int[] methodNameIds=value.toNativeArray();
    Arrays.sort(methodNameIds);
    int prevMethodNameId=0;
    for (    int methodNameId : methodNameIds) {
      DataInputOutputUtil.writeINT(dataOutput,methodNameId - prevMethodNameId);
      prevMethodNameId=methodNameId;
    }
    prevClassNameId=classNameId;
  }
}
