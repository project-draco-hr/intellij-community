{
  final int startOffset=Integer.parseInt(rootElement.getAttributeValue("start"));
  final int endOffset=Integer.parseInt(rootElement.getAttributeValue("end"));
  final TextRange textRange=new TextRange(startOffset,endOffset);
  final TestBlock result=new TestBlock(textRange);
  result.setIsIncomplete(Boolean.valueOf(rootElement.getAttributeValue("incomplete")).booleanValue());
  final CharSequence text=myModel.getText(textRange);
  if (text != null) {
    result.setText(text.toString());
  }
  final Element indentElement=rootElement.getChild("Indent");
  if (indentElement != null) {
    result.setIndent(readIndent(indentElement));
  }
  final Element alignmentElement=rootElement.getChild("Alignment");
  if (alignmentElement != null) {
    result.setAlignment(readAlignment(alignmentElement));
  }
  final Element wrapElement=rootElement.getChild("Wrap");
  if (wrapElement != null) {
    result.setWrap(readWrap(wrapElement));
  }
  final List children=rootElement.getChildren();
  for (  final Object aChildren : children) {
    Element element=(Element)aChildren;
    if (element.getName().equals("Space")) {
      result.addSpace(readSpace(element));
    }
 else     if (element.getName().equals("Block")) {
      result.addBlock(readBlock(element));
    }
  }
  return result;
}
