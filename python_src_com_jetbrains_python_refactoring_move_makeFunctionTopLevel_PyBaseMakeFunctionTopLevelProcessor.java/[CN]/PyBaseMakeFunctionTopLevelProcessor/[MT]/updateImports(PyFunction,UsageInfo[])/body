{
  final Set<PsiFile> usageFiles=new HashSet<PsiFile>();
  for (  UsageInfo usage : usages) {
    usageFiles.add(usage.getFile());
  }
  for (  PsiFile file : usageFiles) {
    if (file != newFunction.getContainingFile()) {
      PyClassRefactoringUtil.insertImport(file,newFunction,null,true);
    }
  }
  if (newFunction.getContainingFile() != mySourceFile) {
    for (    PsiElement read : myExternalReads) {
      if (read instanceof PsiNamedElement && read.isValid()) {
        PyClassRefactoringUtil.insertImport(newFunction,(PsiNamedElement)read,null,true);
      }
    }
    PyClassRefactoringUtil.optimizeImports(mySourceFile);
  }
}
