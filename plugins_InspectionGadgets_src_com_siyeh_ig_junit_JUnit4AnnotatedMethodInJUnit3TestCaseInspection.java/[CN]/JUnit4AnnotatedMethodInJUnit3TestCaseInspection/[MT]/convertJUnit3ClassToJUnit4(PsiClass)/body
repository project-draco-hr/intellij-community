{
  if (containingClass == null) {
    return;
  }
  final PsiReferenceList extendsList=containingClass.getExtendsList();
  if (extendsList == null) {
    return;
  }
  for (  PsiMethod method : containingClass.getMethods()) {
    @NonNls final String name=method.getName();
    if (!method.hasModifierProperty(PsiModifier.STATIC) && PsiType.VOID.equals(method.getReturnType()) && method.getParameterList().getParametersCount() == 0) {
      final PsiModifierList modifierList=method.getModifierList();
      if (name.startsWith("test")) {
        addAnnotationIfNotPresent(modifierList,"org.junit.Test");
      }
 else       if (name.equals("setUp")) {
        transformSetUpOrTearDownMethod(method);
        addAnnotationIfNotPresent(modifierList,"org.junit.Before");
      }
 else       if (name.equals("tearDown")) {
        transformSetUpOrTearDownMethod(method);
        addAnnotationIfNotPresent(modifierList,"org.junit.After");
      }
    }
    method.accept(new MethodCallModifier());
  }
  final PsiJavaCodeReferenceElement[] referenceElements=extendsList.getReferenceElements();
  for (  PsiJavaCodeReferenceElement referenceElement : referenceElements) {
    referenceElement.delete();
  }
}
