{
  MatchingStrategy strategy=null;
  for (PsiElement el=element.getFirstChild(); el != null; el=el.getNextSibling()) {
    if (GlobalCompilingVisitor.getFilter().accepts(el)) {
      if (el instanceof PsiWhiteSpace) {
        myGlobalVisitor.addLexicalNode(el);
      }
    }
 else {
      el.accept(this);
      if (myGlobalVisitor.getCodeBlockLevel() == 1) {
        MatchingStrategy newstrategy=getMatchingStrategy(el);
        if (strategy == null) {
          strategy=newstrategy;
        }
 else         if (strategy.getClass() != newstrategy.getClass()) {
          throw new UnsupportedPatternException(SSRBundle.message("different.strategies.for.top.level.nodes.error.message"));
        }
        final MatchingHandler matchingHandler=myGlobalVisitor.getContext().getPattern().getHandler(el);
        myGlobalVisitor.getContext().getPattern().setHandler(el,new TopLevelMatchingHandler(matchingHandler));
      }
    }
  }
  if (myGlobalVisitor.getCodeBlockLevel() == 1) {
    if (strategy == null) {
      strategy=new MatchingStrategy(){
        public boolean continueMatching(        PsiElement start){
          return true;
        }
      }
;
    }
    myGlobalVisitor.getContext().getPattern().setStrategy(strategy);
  }
  pattern.setHandler(element,new TopLevelMatchingHandler(pattern.getHandler(element)));
}
