{
  final Ref<String> errorMessage=new Ref<>();
  final SvnVcs vcs=SvnVcs.getInstance(project);
  final String targetPath=FileUtil.toSystemIndependentName(target.getAbsolutePath());
  ExclusiveBackgroundVcsAction.run(project,new Runnable(){
    public void run(){
      ProgressManager.getInstance().runProcessWithProgressSynchronously(new Runnable(){
        public void run(){
          final FileIndexFacade facade=PeriodicalTasksCloser.getInstance().safeGetService(project,FileIndexFacade.class);
          ProgressIndicator progressIndicator=ProgressManager.getInstance().getProgressIndicator();
          try {
            progressIndicator.setText(message("progress.text.import",target.getAbsolutePath()));
            final VirtualFile targetVf=SvnUtil.getVirtualFile(targetPath);
            if (targetVf == null) {
              errorMessage.set("Can not find file: " + targetPath);
            }
 else {
              final boolean isInContent=getApplication().runReadAction(new Computable<Boolean>(){
                @Override public Boolean compute(){
                  return facade.isInContent(targetVf);
                }
              }
);
              CommitEventHandler handler=new IdeaCommitHandler(progressIndicator);
              boolean useFileFilter=!project.isDefault() && isInContent;
              ISVNCommitHandler commitHandler=useFileFilter ? new MyFilter(LocalFileSystem.getInstance(),new SvnExcludingIgnoredOperation.Filter(project)) : null;
              long revision=vcs.getFactoryFromSettings().createImportClient().doImport(target,url,depth,message,includeIgnored,handler,commitHandler);
              if (revision > 0) {
                StatusBar.Info.set(message("status.text.comitted.revision",revision),project);
              }
            }
          }
 catch (          VcsException e) {
            errorMessage.set(e.getMessage());
          }
        }
      }
,message("message.title.import"),true,project);
    }
  }
);
  if (!errorMessage.isNull()) {
    showErrorDialog(message("message.text.cannot.import",errorMessage.get()),message("message.title.import"));
  }
}
