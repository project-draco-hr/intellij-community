{
  myProject=project;
  myFile=terminalFile;
  final TabbedSettingsProvider settings=myFile.getSettingsProvider();
  myFile.getTerminal().setNextProvider(new TerminalActionProviderBase(){
    @Override public List<TerminalAction> getActions(){
      return Lists.newArrayList(new TerminalAction("Close Session",settings.getCloseSessionKeyStrokes(),new Predicate<KeyEvent>(){
        @Override public boolean apply(        KeyEvent input){
          handleCloseSession();
          return true;
        }
      }
).withMnemonicKey(KeyEvent.VK_S));
    }
  }
);
  myWaitFor=new TtyConnectorWaitFor(myFile.getTerminal().getTtyConnector(),Executors.newSingleThreadExecutor(ConcurrencyUtil.newNamedThreadFactory("Terminal session")));
  myWaitFor.setTerminationCallback(new Predicate<Integer>(){
    @Override public boolean apply(    Integer integer){
      ApplicationManager.getApplication().invokeLater(new Runnable(){
        @Override public void run(){
          FileEditorManagerEx.getInstanceEx(myProject).closeFile(myFile);
        }
      }
);
      return true;
    }
  }
);
}
