{
  final DataContext context=e.getDataContext();
  boolean hasManagedFiles=false;
  MavenProjectsManager projectsManager=MavenActionUtil.getProjectsManager(context);
  for (  VirtualFile each : MavenActionUtil.getMavenProjectsFiles(context)) {
    if (projectsManager.isManagedFile(each)) {
      hasManagedFiles=true;
      break;
    }
  }
  if (!hasManagedFiles) {
    Notification notification=new Notification(MavenUtil.MAVEN_NOTIFICATION_GROUP,"Failed to remove project","You can not remove selected project because it's " + "imported as module of other project. You can ignore it. Only root project can be removed.",NotificationType.ERROR);
    notification.setImportant(true);
    notification.notify(MavenActionUtil.getProject(context));
    return;
  }
  projectsManager.removeManagedFiles(MavenActionUtil.getMavenProjectsFiles(context));
}
