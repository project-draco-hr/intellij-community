{
  Map<String,List<String>> addedOrChangedClassData=classData;
  Map<String,List<String>> removedClassData=previousClassData;
  if (previousClassData != null && !previousClassData.isEmpty()) {
    removedClassData=new THashMap<String,List<String>>();
    addedOrChangedClassData=new THashMap<String,List<String>>();
    for (    String classQName : classData.keySet()) {
      List<String> currentMethods=classData.get(classQName);
      List<String> previousMethods=previousClassData.get(classQName);
      if (previousMethods == null) {
        addedOrChangedClassData.put(classQName,currentMethods);
        continue;
      }
      THashSet<String> previousMethodsSet=new THashSet<String>(previousMethods);
      THashSet<String> currentMethodsSet=new THashSet<String>(currentMethods);
      currentMethodsSet.removeAll(previousMethods);
      previousMethodsSet.removeAll(currentMethods);
      if (!currentMethodsSet.isEmpty()) {
        addedOrChangedClassData.put(classQName,new ArrayList<String>(currentMethodsSet));
      }
      if (!previousMethodsSet.isEmpty()) {
        removedClassData.put(classQName,new ArrayList<String>(previousMethodsSet));
      }
    }
    for (    String classQName : previousClassData.keySet()) {
      if (classData.containsKey(classQName))       continue;
      List<String> previousMethods=previousClassData.get(classQName);
      removedClassData.put(classQName,previousMethods);
    }
  }
  myAddedOrChangedClassData=addedOrChangedClassData;
  myRemovedClassData=removedClassData;
}
