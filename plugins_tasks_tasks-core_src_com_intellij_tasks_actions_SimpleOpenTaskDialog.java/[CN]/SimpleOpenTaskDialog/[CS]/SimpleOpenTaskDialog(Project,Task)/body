{
  super(project,false);
  myProject=project;
  myTask=task;
  TaskManagerImpl taskManager=(TaskManagerImpl)TaskManager.getManager(myProject);
  setTitle("Open Task");
  myTaskNameLabel.setText(TaskUtil.getTrimmedSummary(task));
  TaskManagerImpl manager=(TaskManagerImpl)TaskManager.getManager(project);
  ControlBinder binder=new ControlBinder(manager.getState());
  binder.bindAnnotations(this);
  binder.reset();
  TaskRepository repository=task.getRepository();
  myMarkAsInProgressBox.setSelected(manager.getState().markAsInProgress);
  if (repository == null || !repository.getRepositoryType().getPossibleTaskStates().contains(TaskState.IN_PROGRESS)) {
    myMarkAsInProgressBox.setVisible(false);
  }
  myClearContext.setSelected(taskManager.getState().clearContext);
  myButtonEnumModel=RadioButtonEnumModel.bindEnum(TaskManager.VcsOperation.class,myVcsGroup);
  AbstractVcs vcs=manager.getActiveVcs();
  if (vcs == null) {
    myVcsPanel.setVisible(false);
    myCreateChangelist.setEnabled(false);
    myCreateChangelist.setSelected(false);
  }
 else {
    myVcsPanel.setBorder(IdeBorderFactory.createTitledBorder(vcs.getDisplayName() + " operations",false));
    if (false) {
      myCreateChangelist.setVisible(false);
      myButtonEnumModel.setSelected(taskManager.getState().vcsOperation);
    }
 else {
      myDistributedVcsPanel.setVisible(false);
      myCreateChangelist.setSelected(taskManager.getState().createChangelist);
      myCreateChangelist.setEnabled(true);
    }
  }
  init();
  getPreferredFocusedComponent();
}
