{
  return new EventListener(){
    @Override public void handleEvent(    Event ev){
      String domEventType=ev.getType();
      if (domEventType.equals(EVENT_TYPE_CLICK)) {
        Element target=(Element)ev.getTarget();
        String hrefAttribute=target.getAttribute("href");
        if (hrefAttribute != null) {
          final Matcher matcher=IN_COURSE_LINK.matcher(hrefAttribute);
          if (matcher.matches()) {
            final String lessonName=matcher.group(1);
            final String taskName=matcher.group(2);
            StudyNavigator.navigateToTask(myProject,lessonName,taskName);
          }
 else {
            myEngine.setJavaScriptEnabled(true);
            myEngine.getLoadWorker().cancel();
            ev.preventDefault();
            final String href=getLink(target);
            if (href == null)             return;
            BrowserUtil.browse(href);
          }
        }
      }
    }
    @Nullable private String getLink(    @NotNull Element element){
      final String href=element.getAttribute("href");
      return href == null ? getLinkFromNodeWithCodeTag(element) : href;
    }
    @Nullable private String getLinkFromNodeWithCodeTag(    @NotNull Element element){
      Node parentNode=element.getParentNode();
      NamedNodeMap attributes=parentNode.getAttributes();
      while (attributes.getLength() > 0 && attributes.getNamedItem("class") != null) {
        parentNode=parentNode.getParentNode();
        attributes=parentNode.getAttributes();
      }
      return attributes.getNamedItem("href").getNodeValue();
    }
  }
;
}
