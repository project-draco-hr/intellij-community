{
  Pair<PsiClass[],PsiFile[]> cached=myCache.get(className);
  if (cached != null) {
    return cached;
  }
  if (DumbService.isDumb(myProject)) {
    return Pair.create(PsiClass.EMPTY_ARRAY,PsiFile.EMPTY_ARRAY);
  }
  PsiClass[] classes=findClassesPreferringMyScope(className);
  if (classes.length == 0) {
    final int dollarIndex=className.indexOf('$');
    if (dollarIndex >= 0) {
      classes=findClassesPreferringMyScope(className.substring(0,dollarIndex));
    }
  }
  PsiFile[] files=new PsiFile[classes.length];
  for (int i=0; i < classes.length; i++) {
    files[i]=(PsiFile)classes[i].getContainingFile().getNavigationElement();
  }
  Pair<PsiClass[],PsiFile[]> result=Pair.create(classes,files);
  myCache.put(className,result);
  return result;
}
