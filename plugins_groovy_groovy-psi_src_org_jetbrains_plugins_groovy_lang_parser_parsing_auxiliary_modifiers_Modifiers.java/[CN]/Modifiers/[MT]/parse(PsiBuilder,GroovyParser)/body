{
  PsiBuilder.Marker modifiersMarker=builder.mark();
  boolean hasModifiers=false;
  do {
    final PsiBuilder.Marker modifierListItem=builder.mark();
    if (hasModifiers)     ParserUtils.getToken(builder,GroovyTokenTypes.mNLS);
    final boolean parsed=Annotation.parse(builder,parser) || parseModifier(builder);
    if (parsed) {
      if (PathExpression.isQualificationDot(builder)) {
        modifierListItem.rollbackTo();
        break;
      }
 else {
        modifierListItem.drop();
        hasModifiers=true;
      }
    }
 else {
      modifierListItem.rollbackTo();
      break;
    }
  }
 while (true);
  modifiersMarker.done(GroovyElementTypes.MODIFIERS);
  ParserUtils.getToken(builder,GroovyTokenTypes.mNLS);
  return hasModifiers;
}
