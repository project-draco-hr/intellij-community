{
  myModel.apply(getModuleSelector().getModule(),configuration);
  configuration.getPersistentData().setChangeList((String)myChangeListLabeledComponent.getComponent().getSelectedItem());
  applyHelpersTo(configuration);
  final JUnitConfiguration.Data data=configuration.getPersistentData();
  if (myWholeProjectScope.isSelected()) {
    data.setScope(TestSearchScope.WHOLE_PROJECT);
  }
 else   if (mySingleModuleScope.isSelected()) {
    data.setScope(TestSearchScope.SINGLE_MODULE);
  }
 else   if (myModuleWDScope.isSelected()) {
    data.setScope(TestSearchScope.MODULE_WITH_DEPENDENCIES);
  }
  configuration.setAlternativeJrePath(myJrePathEditor.getJrePathOrName());
  configuration.setAlternativeJrePathEnabled(myJrePathEditor.isAlternativeJreSelected());
  myCommonJavaParameters.applyTo(configuration);
  configuration.setForkMode((String)myForkCb.getSelectedItem());
  configuration.setRepeatMode((String)myRepeatCb.getSelectedItem());
  try {
    configuration.setRepeatCount(Integer.parseInt(myRepeatCountField.getText()));
  }
 catch (  NumberFormatException e) {
    configuration.setRepeatCount(1);
  }
}
