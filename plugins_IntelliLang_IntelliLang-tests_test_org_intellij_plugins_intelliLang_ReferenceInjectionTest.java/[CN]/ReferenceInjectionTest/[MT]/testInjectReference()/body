{
  myFixture.configureByText("foo.xml","<foo xmlns=\"http://foo.bar\" \n" + "     xxx=\"ba<caret>r\"/>");
  assertNull(myFixture.getReferenceAtCaretPosition());
  assertTrue(new InjectLanguageAction().isAvailable(getProject(),myFixture.getEditor(),myFixture.getFile()));
  assertFalse(new UnInjectLanguageAction().isAvailable(getProject(),myFixture.getEditor(),myFixture.getFile()));
  InjectLanguageAction.invokeImpl(getProject(),myFixture.getEditor(),myFixture.getFile(),new FileReferenceInjector());
  assertTrue(myFixture.getReferenceAtCaretPosition() instanceof FileReference);
  assertFalse(new InjectLanguageAction().isAvailable(getProject(),myFixture.getEditor(),myFixture.getFile()));
  assertTrue(new UnInjectLanguageAction().isAvailable(getProject(),myFixture.getEditor(),myFixture.getFile()));
  myFixture.configureByText("bar.xml","<foo xmlns=\"<error descr=\"URI is not registered (Settings | Project Settings | Schemas and DTDs)\">http://foo.bar</error>\" \n" + "     xxx=\"<error descr=\"Cannot resolve file 'bar'\">b<caret>ar</error>\"/>");
  myFixture.testHighlighting();
  UnInjectLanguageAction.invokeImpl(getProject(),myFixture.getEditor(),myFixture.getFile());
  assertNull(myFixture.getReferenceAtCaretPosition());
}
