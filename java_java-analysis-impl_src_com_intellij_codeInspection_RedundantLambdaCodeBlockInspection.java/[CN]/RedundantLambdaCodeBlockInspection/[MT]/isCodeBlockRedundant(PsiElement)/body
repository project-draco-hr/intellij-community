{
  if (body instanceof PsiCodeBlock) {
    PsiExpression psiExpression=LambdaUtil.extractSingleExpressionFromBody(body);
    if (psiExpression != null && !findCommentsOutsideExpression(body,psiExpression)) {
      if (LambdaUtil.isExpressionStatementExpression(psiExpression)) {
        final PsiCall call=LambdaUtil.treeWalkUp(body);
        if (call != null && call.resolveMethod() != null) {
          final int offsetInTopCall=body.getTextRange().getStartOffset() - call.getTextRange().getStartOffset();
          PsiCall copyCall=LambdaUtil.copyTopLevelCall(call);
          if (copyCall == null)           return null;
          final PsiCodeBlock codeBlock=PsiTreeUtil.getParentOfType(copyCall.findElementAt(offsetInTopCall),PsiCodeBlock.class);
          if (codeBlock != null) {
            final PsiElement parent=codeBlock.getParent();
            if (parent instanceof PsiLambdaExpression) {
              codeBlock.replace(psiExpression);
              if (copyCall.resolveMethod() == null || ((PsiLambdaExpression)parent).getFunctionalInterfaceType() == null) {
                return null;
              }
            }
          }
        }
      }
      return psiExpression;
    }
  }
  return null;
}
