{
  ArrayList<PsiExpression> array=new ArrayList<PsiExpression>();
  PsiElementFactory factory=JavaPsiFacade.getInstance(place.getProject()).getElementFactory();
  try {
    array.add(factory.createExpressionFromText("true",null));
    array.add(factory.createExpressionFromText("false",null));
    PsiElement scope=place;
    boolean innermostClass=true;
    while (scope != null) {
      if (scope instanceof PsiClass) {
        PsiClass aClass=(PsiClass)scope;
        String name=aClass.getName();
        if (innermostClass) {
          array.add(factory.createExpressionFromText("this",place));
        }
 else         if (name != null) {
          array.add(factory.createExpressionFromText(name + ".this",place));
        }
        innermostClass=false;
        if (aClass.hasModifierProperty(PsiModifier.STATIC))         break;
      }
 else       if (scope instanceof PsiMember) {
        if (((PsiMember)scope).hasModifierProperty(PsiModifier.STATIC))         break;
      }
      scope=scope.getParent();
    }
  }
 catch (  IncorrectOperationException e) {
    LOG.error(e);
  }
  return array.toArray(new PsiExpression[array.size()]);
}
