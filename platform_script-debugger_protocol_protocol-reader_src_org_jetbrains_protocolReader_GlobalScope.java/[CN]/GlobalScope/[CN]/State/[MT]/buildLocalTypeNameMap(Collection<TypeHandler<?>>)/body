{
  List<TypeHandler<?>> list=new ArrayList<>(typeHandlers);
  Collections.sort(list,new Comparator<TypeHandler<?>>(){
    @Override public int compare(    @NotNull TypeHandler<?> o1,    @NotNull TypeHandler<?> o2){
      return getName(o1).compareTo(getName(o2));
    }
    private String getName(    TypeHandler<?> handler){
      return handler.getTypeClass().getName();
    }
  }
);
  int uniqueCode=0;
  Map<TypeHandler<?>,String> result=new THashMap<>(list.size());
  for (  TypeHandler<?> handler : list) {
    String conflict=result.put(handler,Util.TYPE_NAME_PREFIX + Integer.toString(uniqueCode++));
    if (conflict != null) {
      throw new RuntimeException();
    }
  }
  return result;
}
