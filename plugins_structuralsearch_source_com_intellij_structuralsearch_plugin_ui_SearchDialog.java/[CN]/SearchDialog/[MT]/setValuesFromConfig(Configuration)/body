{
  searchCriteriaEdit.putUserData(SubstitutionShortInfoHandler.CURRENT_CONFIGURATION_KEY,configuration);
  setTitle(getDefaultTitle() + " - " + configuration.getName());
  final MatchOptions matchOptions=configuration.getMatchOptions();
  UIUtil.setContent(searchCriteriaEdit,matchOptions.getSearchPattern(),0,searchCriteriaEdit.getDocument().getTextLength(),searchContext.getProject());
  model.getConfig().getMatchOptions().setSearchPattern(matchOptions.getSearchPattern());
  recursiveMatching.setSelected(isRecursiveSearchEnabled() && matchOptions.isRecursiveSearch());
  caseSensitiveMatch.setSelected(matchOptions.isCaseSensitiveMatch());
  if (matchOptions.getMaxMatchesCount() != Integer.MAX_VALUE) {
    maxMatches.setText(String.valueOf(matchOptions.getMaxMatchesCount()));
  }
  model.getConfig().getMatchOptions().clearVariableConstraints();
  if (matchOptions.hasVariableConstraints()) {
    for (Iterator<String> i=matchOptions.getVariableConstraintNames(); i.hasNext(); ) {
      model.getConfig().getMatchOptions().addVariableConstraint((MatchVariableConstraint)matchOptions.getVariableConstraint(i.next()).clone());
    }
  }
  searchIncrementally.setSelected(configuration.isSearchOnDemand());
  fileTypes.setSelectedItem(configuration.getMatchOptions().getFileType().getName().toLowerCase());
}
