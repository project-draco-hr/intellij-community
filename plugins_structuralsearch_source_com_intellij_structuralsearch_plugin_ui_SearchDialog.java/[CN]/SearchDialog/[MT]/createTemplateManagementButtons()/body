{
  JPanel panel=new JPanel(null);
  panel.setLayout(new BoxLayout(panel,BoxLayout.X_AXIS));
  panel.add(Box.createHorizontalGlue());
  panel.add(createJButtonForAction(new AbstractAction(){
{
      putValue(NAME,SSRBundle.message("save.template.text.button"));
    }
    public void actionPerformed(    ActionEvent e){
      String name=showSaveTemplateAsDialog();
      if (name != null) {
        final Project project=searchContext.getProject();
        final ConfigurationManager configurationManager=StructuralSearchPlugin.getInstance(project).getConfigurationManager();
        final Collection<Configuration> configurations=configurationManager.getConfigurations();
        if (configurations != null) {
          name=ConfigurationManager.findAppropriateName(configurations,name,project);
          if (name == null)           return;
        }
        model.getConfig().setName(name);
        setValuesToConfig(model.getConfig());
        setDialogTitle(model.getConfig());
        if (model.getShadowConfig() == null || model.getShadowConfig() instanceof PredefinedConfiguration) {
          existingTemplatesComponent.addConfigurationToUserTemplates(model.getConfig());
        }
 else {
          setValuesToConfig(model.getShadowConfig());
          model.getShadowConfig().setName(name);
        }
      }
    }
  }
));
  panel.add(Box.createHorizontalStrut(8));
  panel.add(createJButtonForAction(new AbstractAction(){
{
      putValue(NAME,SSRBundle.message("edit.variables.button"));
    }
    public void actionPerformed(    ActionEvent e){
      EditVarConstraintsDialog.setProject(searchContext.getProject());
      new EditVarConstraintsDialog(searchContext.getProject(),model,getVariablesFromListeners(),isReplaceDialog(),getFileTypeByString((String)fileTypes.getSelectedItem())).show();
      initiateValidation();
      EditVarConstraintsDialog.setProject(null);
    }
  }
));
  panel.add(Box.createHorizontalStrut(8));
  panel.add(createJButtonForAction(new AbstractAction(){
{
      putValue(NAME,SSRBundle.message("history.button"));
    }
    public void actionPerformed(    ActionEvent e){
      SelectTemplateDialog dialog=new SelectTemplateDialog(searchContext.getProject(),true,isReplaceDialog());
      dialog.show();
      if (!dialog.isOK()) {
        return;
      }
      Configuration[] configurations=dialog.getSelectedConfigurations();
      if (configurations.length == 1) {
        setSearchPattern(configurations[0]);
      }
    }
  }
));
  panel.add(Box.createHorizontalStrut(8));
  panel.add(createJButtonForAction(new AbstractAction(){
{
      putValue(NAME,SSRBundle.message("copy.existing.template.button"));
    }
    public void actionPerformed(    ActionEvent e){
      SelectTemplateDialog dialog=new SelectTemplateDialog(searchContext.getProject(),false,isReplaceDialog());
      dialog.show();
      if (!dialog.isOK()) {
        return;
      }
      Configuration[] configurations=dialog.getSelectedConfigurations();
      if (configurations.length == 1) {
        setSearchPattern(configurations[0]);
      }
    }
  }
));
  return panel;
}
