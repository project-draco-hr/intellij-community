{
  JPanel panel=new JPanel(null);
  panel.setLayout(new BoxLayout(panel,BoxLayout.X_AXIS));
  panel.add(Box.createHorizontalGlue());
  panel.add(createJButtonForAction(new AbstractAction(){
{
      putValue(NAME,SSRBundle.message("save.template.text.button"));
    }
    public void actionPerformed(    ActionEvent e){
      String name=Messages.showInputDialog(searchContext.getProject(),SSRBundle.message("template.name.button"),SSRBundle.message("save.template.description.button"),IconLoader.getIcon("/general/questionDialog.png"),model.getShadowConfig() != null ? model.getShadowConfig().getName() : "",null);
      if (name != null) {
        model.getConfig().setName(name);
        setValuesToConfig(model.getConfig());
        setDialogTitle(model.getConfig());
        if (model.getShadowConfig() == null || model.getShadowConfig() instanceof PredefinedConfiguration) {
          existingTemplatesComponent.addConfigurationToUserTemplates(model.getConfig());
        }
 else {
          setValuesToConfig(model.getShadowConfig());
          model.getShadowConfig().setName(name);
        }
      }
    }
  }
));
  panel.add(Box.createHorizontalStrut(8));
  panel.add(createJButtonForAction(new AbstractAction(){
{
      putValue(NAME,SSRBundle.message("edit.variables.button"));
    }
    public void actionPerformed(    ActionEvent e){
      SubstitutionShortInfoHandler handler=searchCriteriaEdit.getUserData(UIUtil.LISTENER_KEY);
      ArrayList<Variable> variables=new ArrayList<Variable>(handler.getVariables());
      CompletionTextField.setCurrentProject(searchContext.getProject());
      new EditVarConstraintsDialog(searchContext.getProject(),model,variables,isReplaceDialog(),getFileTypeByString((String)fileTypes.getSelectedItem())).show();
      CompletionTextField.setCurrentProject(null);
    }
  }
));
  panel.add(Box.createHorizontalStrut(8));
  panel.add(createJButtonForAction(new AbstractAction(){
{
      putValue(NAME,SSRBundle.message("history.button"));
    }
    public void actionPerformed(    ActionEvent e){
      DialogWrapper wrapper=new SelectTemplateDialog(searchContext.getProject(),true,isReplaceDialog());
      wrapper.show();
      if (wrapper.isOK()) {
        int selection=existingTemplatesComponent.getHistoryList().getSelectedIndex();
        if (selection != -1) {
          setValuesFromConfig((Configuration)existingTemplatesComponent.getHistoryList().getSelectedValue());
          model.setShadowConfig(null);
        }
      }
    }
  }
));
  panel.add(Box.createHorizontalStrut(8));
  panel.add(createJButtonForAction(new AbstractAction(){
{
      putValue(NAME,SSRBundle.message("copy.existing.template.button"));
    }
    public void actionPerformed(    ActionEvent e){
      DialogWrapper wrapper=new SelectTemplateDialog(searchContext.getProject(),false,isReplaceDialog());
      wrapper.show();
      if (wrapper.isOK()) {
        TreePath path=existingTemplatesComponent.getPatternTree().getSelectionPath();
        if (path != null) {
          setSearchPatternFromNode((DefaultMutableTreeNode)path.getLastPathComponent());
        }
      }
    }
  }
));
  return panel;
}
