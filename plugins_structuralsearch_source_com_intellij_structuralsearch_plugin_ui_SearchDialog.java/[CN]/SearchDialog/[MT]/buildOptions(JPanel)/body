{
  searchIncrementally=new JCheckBox("Find with prompt",false);
  if (isSearchOnDemandEnabled()) {
    searchOptions.add(UIUtil.createOptionLine(searchIncrementally));
    searchIncrementally.setMnemonic('p');
  }
  recursiveMatching=new JCheckBox("Recursive matching",true);
  if (isRecursiveSearchEnabled()) {
    searchOptions.add(UIUtil.createOptionLine(recursiveMatching));
    recursiveMatching.setMnemonic('R');
  }
  caseSensitiveMatch=new JCheckBox("Case sensitive",true);
  caseSensitiveMatch.setMnemonic('C');
  searchOptions.add(UIUtil.createOptionLine(caseSensitiveMatch));
  searchOptions.add(UIUtil.createOptionLine(new JComponent[]{maxMatchesSwitch=new JCheckBox("Maximum matches",false),maxMatches=new JTextField(Integer.toString(MatchOptions.DEFAULT_MAX_MATCHES_COUNT),3),(JComponent)Box.createHorizontalGlue()}));
  maxMatchesSwitch.setMnemonic('x');
  maxMatches.setMaximumSize(new Dimension(50,25));
  fileTypes=new JComboBox(new String[]{"java","xml","html"});
  searchOptions.add(UIUtil.createOptionLine(new JComponent[]{new JLabel("File type:"),fileTypes,(JComponent)Box.createHorizontalGlue()}));
  fileTypes.setSelectedItem(ourFileType);
  if (isSearchOnDemandEnabled()) {
    searchOptions.add(UIUtil.createOptionLine(searchIncrementally));
    searchIncrementally.setMnemonic('p');
  }
}
