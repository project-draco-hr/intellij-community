{
  SearchScope selectedScope=combo.getSelectedScope();
  if (selectedScope == null)   return;
  setValuesToConfig(model.getConfig());
  try {
    Matcher.validate(searchContext.getProject(),model.getConfig().getMatchOptions());
  }
 catch (  UnsupportedPatternException ex) {
    Messages.showMessageDialog(searchContext.getProject(),"This pattern is malformed or unsupported","Information",Messages.getInformationIcon());
    return;
  }
catch (  MalformedPatternException ex) {
    Messages.showMessageDialog(searchContext.getProject(),"This pattern is malformed or unsupported","Information",Messages.getInformationIcon());
    return;
  }
  super.doOKAction();
  if (!isReplaceDialog()) {
    FindSettings.getInstance().setDefaultScopeName(combo.getSelectedScopeName());
  }
  ourOpenInNewTab=openInNewTab.isSelected();
  try {
    if (model.getShadowConfig() != null) {
      if (model.getShadowConfig() instanceof PredefinedConfiguration) {
        model.getConfig().setName(model.getShadowConfig().getName());
      }
    }
    existingTemplatesComponent.addConfigurationToHistory(model.getConfig());
    runAction(model.getConfig(),searchContext);
  }
 catch (  MalformedPatternException ex) {
    Messages.showMessageDialog(searchContext.getProject(),"Incorrect pattern","Information",Messages.getInformationIcon());
  }
}
