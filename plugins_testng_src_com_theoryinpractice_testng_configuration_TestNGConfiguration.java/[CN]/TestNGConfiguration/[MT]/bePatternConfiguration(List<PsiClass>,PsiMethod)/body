{
  data.TEST_OBJECT=TestType.PATTERN.getType();
  final String suffix;
  if (method != null) {
    data.METHOD_NAME=method.getName();
    suffix="," + data.METHOD_NAME;
  }
 else {
    suffix="";
  }
  LinkedHashSet<String> patterns=new LinkedHashSet<>();
  for (  PsiClass pattern : classes) {
    patterns.add(JavaExecutionUtil.getRuntimeQualifiedName(pattern) + suffix);
  }
  data.setPatterns(patterns);
  final Module module=RunConfigurationProducer.getInstance(AbstractTestNGPatternConfigurationProducer.class).findModule(this,getConfigurationModule().getModule(),patterns);
  if (module == null) {
    data.setScope(TestSearchScope.WHOLE_PROJECT);
    setModule(null);
  }
 else {
    setModule(module);
  }
  setGeneratedName();
}
