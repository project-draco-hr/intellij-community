{
  FairDiffIterable iterable=new AdjustmentPunctuationMatcher(text1,text2,words1,words2,startShift1,startShift2,changes,indicator).build();
switch (policy) {
case DEFAULT:
    return new DefaultCorrector(iterable,text1,text2,indicator).build();
case TRIM_WHITESPACES:
  DiffIterable defaultIterable=new DefaultCorrector(iterable,text1,text2,indicator).build();
return new TrimSpacesCorrector(defaultIterable,text1,text2,indicator).build();
case IGNORE_WHITESPACES:
return new IgnoreSpacesCorrector(iterable,text1,text2,indicator).build();
default :
throw new IllegalArgumentException(policy.name());
}
}
