{
  TextRange selectedRange=EditorUtil.getSelectionInAnyMode(editor);
  Document document=editor.getDocument();
  if (selectedRange.getLength() == 0) {
    int line=document.getLineNumber(selectedRange.getStartOffset());
    selectedRange=TextRange.create(document.getLineStartOffset(line),document.getLineEndOffset(line));
  }
  VirtualFile profileChild=file.getParent().findChild(".profile." + file.getExtension());
  String profile=null;
  try {
    profile=profileChild == null ? "" : VfsUtilCore.loadText(profileChild);
  }
 catch (  IOException ignored) {
  }
  String command=document.getText(selectedRange);
  RunContentDescriptor descriptor=getConsoleView(project,file,engine);
  ConsoleViewImpl consoleView=(ConsoleViewImpl)descriptor.getExecutionConsole();
  try {
    consoleView.print("> " + command,ConsoleViewContentType.USER_INPUT);
    consoleView.print("\n",ConsoleViewContentType.USER_INPUT);
    Object o=engine.eval(profile == null ? command : profile + "\n" + command);
    consoleView.print("=> " + o,ConsoleViewContentType.NORMAL_OUTPUT);
    consoleView.print("\n",ConsoleViewContentType.NORMAL_OUTPUT);
  }
 catch (  Exception e) {
    Throwable ex=ExceptionUtil.getRootCause(e);
    consoleView.print(ex.getClass().getSimpleName() + ": " + ex.getMessage(),ConsoleViewContentType.ERROR_OUTPUT);
    consoleView.print("\n",ConsoleViewContentType.ERROR_OUTPUT);
  }
  selectContent(descriptor);
}
