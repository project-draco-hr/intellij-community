{
  PsiFile psiFile=ObjectUtils.assertNotNull(PsiManager.getInstance(project).findFile(file));
  WeakReference<RunContentDescriptor> ref=psiFile.getCopyableUserData(DESCRIPTOR_KEY);
  RunContentDescriptor existing=ref == null ? null : ref.get();
  if (existing != null && existing.getExecutionConsole() != null) {
    return ensureIdeBound(project,existing,engine);
  }
  ConsoleView consoleView=TextConsoleBuilderFactory.getInstance().createBuilder(project).getConsole();
  DefaultActionGroup toolbarActions=new DefaultActionGroup();
  JComponent panel=new JPanel(new BorderLayout());
  panel.add(consoleView.getComponent(),BorderLayout.CENTER);
  ActionToolbar toolbar=ActionManager.getInstance().createActionToolbar(ActionPlaces.UNKNOWN,toolbarActions,false);
  toolbar.setTargetComponent(consoleView.getComponent());
  panel.add(toolbar.getComponent(),BorderLayout.WEST);
  final RunContentDescriptor descriptor=new RunContentDescriptor(consoleView,null,panel,file.getName()){
    @Override public boolean isContentReuseProhibited(){
      return true;
    }
  }
;
  Executor executor=DefaultRunExecutor.getRunExecutorInstance();
  toolbarActions.addAll(consoleView.createConsoleActions());
  toolbarActions.add(new CloseAction(executor,descriptor,project));
  psiFile.putCopyableUserData(DESCRIPTOR_KEY,new WeakReference<RunContentDescriptor>(descriptor));
  ExecutionManager.getInstance(project).getContentManager().showRunContent(executor,descriptor);
  return ensureIdeBound(project,descriptor,engine);
}
