{
  PsiFile psiFile=ObjectUtils.assertNotNull(PsiManager.getInstance(project).findFile(file));
  WeakReference<RunContentDescriptor> ref=psiFile.getCopyableUserData(DESCRIPTOR_KEY);
  RunContentDescriptor existing=ref == null ? null : ref.get();
  if (existing != null && existing.getExecutionConsole() != null)   return existing;
  ConsoleView consoleView=TextConsoleBuilderFactory.getInstance().createBuilder(project).getConsole();
  DefaultActionGroup toolbarActions=new DefaultActionGroup();
  JComponent consoleComponent=new JPanel(new BorderLayout());
  consoleComponent.add(consoleView.getComponent(),BorderLayout.CENTER);
  consoleComponent.add(ActionManager.getInstance().createActionToolbar(ActionPlaces.UNKNOWN,toolbarActions,false).getComponent(),BorderLayout.WEST);
  final RunContentDescriptor descriptor=new RunContentDescriptor(consoleView,null,consoleComponent,file.getName()){
    @Override public boolean isContentReuseProhibited(){
      return true;
    }
  }
;
  Executor executor=DefaultRunExecutor.getRunExecutorInstance();
  toolbarActions.add(new CloseAction(executor,descriptor,project));
  for (  AnAction action : consoleView.createConsoleActions()) {
    toolbarActions.add(action);
  }
  psiFile.putCopyableUserData(DESCRIPTOR_KEY,new WeakReference<RunContentDescriptor>(descriptor));
  ExecutionManager.getInstance(project).getContentManager().showRunContent(executor,descriptor);
  return descriptor;
}
