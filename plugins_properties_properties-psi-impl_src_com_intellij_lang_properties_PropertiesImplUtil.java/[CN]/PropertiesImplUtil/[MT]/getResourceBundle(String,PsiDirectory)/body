{
  PropertiesFile defaultPropertiesFile=null;
  final ResourceBundleManager bundleBaseNameManager=ResourceBundleManager.getInstance(baseDirectory.getProject());
  final PsiFile[] psiFiles=ApplicationManager.getApplication().runReadAction(new Computable<PsiFile[]>(){
    @Override public PsiFile[] compute(){
      return baseDirectory.getFiles();
    }
  }
);
  final List<PropertiesFile> bundleFiles=new ArrayList<PropertiesFile>(1);
  for (  final PsiFile psiFile : psiFiles) {
    final PropertiesFile propertiesFile=getPropertiesFile(psiFile);
    if (propertiesFile == null) {
      continue;
    }
    if (baseName.equals(bundleBaseNameManager.getBaseName(psiFile))) {
      if (defaultPropertiesFile == null) {
        defaultPropertiesFile=propertiesFile;
      }
 else {
        final int nameDiff=defaultPropertiesFile.getName().compareTo(propertiesFile.getName());
        if (nameDiff > 0) {
          defaultPropertiesFile=propertiesFile;
        }
 else         if (nameDiff == 0) {
          return null;
        }
      }
      bundleFiles.add(propertiesFile);
    }
  }
  if (defaultPropertiesFile == null) {
    return null;
  }
  return new ResourceBundleWithCachedFiles(new ResourceBundleImpl(defaultPropertiesFile),bundleFiles);
}
