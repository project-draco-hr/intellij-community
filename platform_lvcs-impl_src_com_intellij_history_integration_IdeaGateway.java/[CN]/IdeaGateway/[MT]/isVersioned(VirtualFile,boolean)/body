{
  if (!f.isInLocalFileSystem())   return false;
  if (!f.isDirectory() && StringUtil.endsWith(f.getNameSequence(),".class"))   return false;
  LocalHistoryImpl.getInstanceImpl().dispatchPendingEvents();
  VersionedFilterData versionedFilterData;
  VfsEventDispatchContext vfsEventDispatchContext=ourCurrentEventDispatchContext.get();
  if (vfsEventDispatchContext != null) {
    versionedFilterData=vfsEventDispatchContext.myFilterData;
    if (versionedFilterData == null)     versionedFilterData=vfsEventDispatchContext.myFilterData=new VersionedFilterData();
  }
 else {
    versionedFilterData=new VersionedFilterData();
  }
  boolean isInContent=false;
  int numberOfOpenProjects=versionedFilterData.myOpenedProjects.size();
  for (int i=0; i < numberOfOpenProjects; ++i) {
    if (Comparing.equal(versionedFilterData.myWorkspaceFiles.get(i),f))     return false;
    ProjectFileIndex index=versionedFilterData.myProjectFileIndices.get(i);
    if (index.isExcluded(f))     return false;
    isInContent|=index.isInContent(f);
  }
  if (shouldBeInContent && !isInContent)   return false;
  return numberOfOpenProjects != 0 || !FileTypeManager.getInstance().isFileIgnored(f);
}
