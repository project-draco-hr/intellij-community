{
  JDialog controlDialog=new JDialog();
  controlDialog.setTitle("Messages testing control panel");
  controlDialog.setModalExclusionType(Dialog.ModalExclusionType.APPLICATION_EXCLUDE);
  controlDialog.setModal(false);
  controlDialog.setFocusableWindowState(false);
  controlDialog.setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
  Container cp=controlDialog.getContentPane();
  cp.setLayout(new FlowLayout());
  JButton showDialogWrapperButton=new JButton("Show a dialog wrapper");
  showDialogWrapperButton.setFocusable(false);
  FocusManagerImpl fmi=FocusManagerImpl.getInstance();
  final Project p=fmi.getLastFocusedFrame().getProject();
  showDialogWrapperButton.addActionListener(new ActionListener(){
    @Override public void actionPerformed(    ActionEvent event){
      DialogWrapper dw=new SimpleDialogWrapper(p);
      dw.setTitle(dw.getWindow().getName());
      dw.show();
    }
  }
);
  JButton showMessageButton=new JButton("Show a message");
  showDialogWrapperButton.setFocusable(false);
  showMessageButton.addActionListener(new ActionListener(){
    @Override public void actionPerformed(    ActionEvent event){
      showTestMessage(p);
    }
  }
);
  JButton showProgressIndicatorButton=new JButton("Show progress indicator");
  showProgressIndicatorButton.addActionListener(new ActionListener(){
    @Override public void actionPerformed(    ActionEvent e){
      final Task task=new Task.Modal(null,"Test task",true){
        public void run(        @NotNull final ProgressIndicator indicator){
          ApplicationManager.getApplication().invokeAndWait(new Runnable(){
            @Override public void run(){
              FocusManagerImpl fmi=FocusManagerImpl.getInstance();
              final Project p=fmi.getLastFocusedFrame().getProject();
              showTestMessage(p);
            }
          }
,ModalityState.any());
        }
        @Override public void onCancel(){
        }
      }
;
      ProgressManager.getInstance().run(task);
    }
  }
);
  cp.add(showDialogWrapperButton);
  cp.add(showMessageButton);
  cp.add(showProgressIndicatorButton);
  controlDialog.pack();
  controlDialog.setVisible(true);
}
