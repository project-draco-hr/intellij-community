{
  if (expr == null || myVisited.contains(expr)) {
    return null;
  }
  myVisited.add(expr);
  if (expr instanceof PyParenthesizedExpression) {
    return evaluate(((PyParenthesizedExpression)expr).getContainedExpression());
  }
  if (expr instanceof PySequenceExpression) {
    PyExpression[] elements=((PySequenceExpression)expr).getElements();
    if (expr instanceof PyDictLiteralExpression) {
      Map<Object,Object> result=new HashMap<Object,Object>();
      for (      PyKeyValueExpression keyValueExpression : ((PyDictLiteralExpression)expr).getElements()) {
        Object dictKey=evaluate(keyValueExpression.getKey());
        if (dictKey != null) {
          result.put(dictKey,evaluate(keyValueExpression.getValue()));
        }
      }
      return result;
    }
 else {
      List<Object> result=new ArrayList<Object>();
      for (      PyExpression element : elements) {
        result.add(evaluate(element));
      }
      return result;
    }
  }
  if (expr instanceof PyCallExpression) {
    return evaluateCall((PyCallExpression)expr);
  }
 else   if (expr instanceof PyReferenceExpression) {
    return evaluateReferenceExpression((PyReferenceExpression)expr);
  }
 else   if (expr instanceof PyStringLiteralExpression) {
    return ((PyStringLiteralExpression)expr).getStringValue();
  }
 else   if (expr instanceof PyBinaryExpression) {
    PyBinaryExpression binaryExpr=(PyBinaryExpression)expr;
    PyElementType op=binaryExpr.getOperator();
    if (op == PyTokenTypes.PLUS) {
      Object lhs=evaluate(binaryExpr.getLeftExpression());
      Object rhs=evaluate(binaryExpr.getRightExpression());
      if (lhs != null && rhs != null) {
        return concatenate(lhs,rhs);
      }
    }
  }
  return null;
}
