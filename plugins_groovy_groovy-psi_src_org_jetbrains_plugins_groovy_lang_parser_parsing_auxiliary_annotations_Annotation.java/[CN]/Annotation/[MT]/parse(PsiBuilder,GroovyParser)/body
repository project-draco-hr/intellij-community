{
  if (builder.getTokenType() != GroovyTokenTypes.mAT) {
    return false;
  }
  PsiBuilder.Marker annMarker=builder.mark();
  builder.advanceLexer();
  if (builder.getTokenType() == GroovyTokenTypes.kINTERFACE) {
    annMarker.rollbackTo();
    return false;
  }
  if (ReferenceElement.parse(builder,false,true,true,false,false) == ReferenceElement.ReferenceElementResult.FAIL) {
    builder.error("Annotation name expected");
    annMarker.drop();
    return false;
  }
  if (ParserUtils.lookAhead(builder,GroovyTokenTypes.mNLS,GroovyTokenTypes.mLPAREN)) {
    ParserUtils.getToken(builder,GroovyTokenTypes.mNLS);
  }
  AnnotationArguments.parse(builder,parser);
  annMarker.done(GroovyElementTypes.ANNOTATION);
  return true;
}
