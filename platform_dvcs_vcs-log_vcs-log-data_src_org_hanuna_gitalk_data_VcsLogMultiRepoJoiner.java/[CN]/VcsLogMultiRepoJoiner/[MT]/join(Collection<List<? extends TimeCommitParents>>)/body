{
  int size=0;
  for (  List<? extends TimeCommitParents> repo : logsFromRepos) {
    size+=repo.size();
  }
  List<TimeCommitParents> result=new ArrayList<TimeCommitParents>(size);
  Map<TimeCommitParents,Iterator<? extends TimeCommitParents>> nextCommits=ContainerUtil.newHashMap();
  for (  List<? extends TimeCommitParents> log : logsFromRepos) {
    Iterator<? extends TimeCommitParents> iterator=log.iterator();
    if (iterator.hasNext()) {
      nextCommits.put(iterator.next(),iterator);
    }
  }
  while (!nextCommits.isEmpty()) {
    TimeCommitParents lastCommit=findLatestCommit(nextCommits.keySet());
    Iterator<? extends TimeCommitParents> iterator=nextCommits.get(lastCommit);
    result.add(lastCommit);
    nextCommits.remove(lastCommit);
    if (iterator.hasNext()) {
      nextCommits.put(iterator.next(),iterator);
    }
  }
  return result;
}
