{
  final List<VirtualFile> classRoots=getClassRoots(scope);
  if (classRoots.isEmpty()) {
    return null;
  }
  final String relPath=qualifiedName.replace('.','/');
  for (  final VirtualFile classRoot : classRoots) {
    if (scope.contains(classRoot)) {
      VirtualFile virtualFile=findFileByRelativePath(classRoot,relPath,myFileExtensions);
      if (virtualFile != null) {
        if (!virtualFile.isValid()) {
          LOG.error("Invalid child of valid parent: " + virtualFile.getPath() + "; "+ classRoot.isValid()+ " path="+ classRoot.getPath());
          return null;
        }
        final PsiFile file=myManager.findFile(virtualFile);
        if (file instanceof PsiClassOwner) {
          final PsiClass[] classes=((PsiClassOwner)file).getClasses();
          if (classes.length == 1) {
            return classes[0];
          }
        }
      }
    }
  }
  return null;
}
