{
  if (method.isConstructor()) {
    return null;
  }
  PsiClass aClass=method.getContainingClass();
  if (aClass == null)   return null;
  final HierarchicalMethodSignature methodSignature=PsiSuperMethodImplUtil.getHierarchicalMethodSignature(method);
  final List<HierarchicalMethodSignature> superSignatures=methodSignature.getSuperSignatures();
  if (superSignatures.isEmpty()) {
    return null;
  }
  boolean isStatic=method.hasModifierProperty(PsiModifier.STATIC);
  for (  HierarchicalMethodSignature signature : superSignatures) {
    final PsiMethod superMethod=signature.getMethod();
    final PsiClass superClass=superMethod.getContainingClass();
    if (superClass == null)     continue;
    final HighlightInfo highlightInfo=checkStaticMethodOverride(aClass,method,isStatic,superClass,superMethod,containingFile);
    if (highlightInfo != null) {
      return highlightInfo;
    }
  }
  return null;
}
