{
  String description=MessageFormat.format("{0}; {1}",createClashMethodMessage(method,superMethod,true),detailMessage);
  HighlightInfo errorResult=HighlightInfo.newHighlightInfo(HighlightInfoType.ERROR).range(textRange).descriptionAndTooltip(description).create();
  QuickFixAction.registerQuickFixAction(errorResult,QUICK_FIX_FACTORY.createMethodReturnFix(method,substitutedSuperReturnType,false));
  QuickFixAction.registerQuickFixAction(errorResult,QUICK_FIX_FACTORY.createSuperMethodReturnFix(superMethod,returnType));
  final PsiClass returnClass=PsiUtil.resolveClassInClassTypeOnly(returnType);
  if (returnClass != null && substitutedSuperReturnType instanceof PsiClassType) {
    QuickFixAction.registerQuickFixAction(errorResult,QUICK_FIX_FACTORY.createChangeParameterClassFix(returnClass,(PsiClassType)substitutedSuperReturnType));
  }
  return errorResult;
}
