{
  if (!RefactoringChangeUtil.isSuperOrThisMethodCall(methodCall))   return null;
  PsiElement codeBlock=methodCall.getParent().getParent();
  if (codeBlock instanceof PsiCodeBlock && codeBlock.getParent() instanceof PsiMethod && ((PsiMethod)codeBlock.getParent()).isConstructor()) {
    PsiElement prevSibling=methodCall.getParent().getPrevSibling();
    while (true) {
      if (prevSibling == null)       return null;
      if (prevSibling instanceof PsiStatement)       break;
      prevSibling=prevSibling.getPrevSibling();
    }
  }
  PsiReferenceExpression expression=methodCall.getMethodExpression();
  String message=JavaErrorMessages.message("constructor.call.must.be.first.statement",expression.getText() + "()");
  return HighlightInfo.newHighlightInfo(HighlightInfoType.ERROR).range(methodCall).descriptionAndTooltip(message).create();
}
