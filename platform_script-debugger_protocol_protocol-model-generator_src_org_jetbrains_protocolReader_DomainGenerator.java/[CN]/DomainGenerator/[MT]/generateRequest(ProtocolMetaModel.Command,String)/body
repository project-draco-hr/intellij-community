{
  TextOutConsumer baseTypeBuilder=new TextOutConsumer(){
    @Override public void append(    TextOutput out){
      out.space().append("extends ").append(generator.naming.requestClassName).append('<').append(returnType).append('>');
    }
  }
;
  TextOutConsumer memberBuilder=new TextOutConsumer(){
    @Override public void append(    TextOutput out){
      out.append("@NotNull").newLine().append("@Override").newLine().append("public String getMethodName()").openBlock();
      out.append("return \"");
      if (!domain.domain().isEmpty()) {
        out.append(domain.domain()).append('.');
      }
      out.append(command.name()).append("\";").closeBlock();
    }
  }
;
  generateTopLevelOutputClass(generator.naming.params,command.name(),command.description(),baseTypeBuilder,memberBuilder,command.parameters());
}
