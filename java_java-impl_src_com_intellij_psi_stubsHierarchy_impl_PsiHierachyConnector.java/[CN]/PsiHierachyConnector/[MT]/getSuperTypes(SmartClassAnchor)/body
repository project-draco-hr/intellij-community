{
  PsiClass psiClass=((SmartClassAnchor.DirectSmartClassAnchor)anchor).myPsiClass;
  PsiClass[] psiInterfaces=psiClass.getInterfaces();
  ArrayList<Symbol.ClassSymbol> superList=new ArrayList<Symbol.ClassSymbol>();
  for (  PsiClass psiInterface : psiInterfaces) {
    for (    Symbol.ClassSymbol cs : asSymbol(psiInterface)) {
      if (cs.myQualifiedName != myNameEnvironment.java_lang_Object) {
        superList.add(cs);
      }
    }
  }
  PsiClass psiSuperClass=psiClass.getSuperClass();
  for (  Symbol.ClassSymbol cs : asSymbol(psiSuperClass)) {
    if (cs.myQualifiedName != myNameEnvironment.java_lang_Object) {
      superList.add(cs);
    }
  }
  if (superList.isEmpty()) {
    return Symbol.ClassSymbol.EMPTY_ARRAY;
  }
  return superList.isEmpty() ? Symbol.ClassSymbol.EMPTY_ARRAY : superList.toArray(new Symbol.ClassSymbol[superList.size()]);
}
