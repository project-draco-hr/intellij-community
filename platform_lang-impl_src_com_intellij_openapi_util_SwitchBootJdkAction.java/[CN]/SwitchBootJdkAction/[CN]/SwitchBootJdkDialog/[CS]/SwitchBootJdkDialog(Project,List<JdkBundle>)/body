{
  super(project,false);
  final JdkBundleList pathsList=findJdkPaths();
  myComboBox=new ComboBox();
  DefaultComboBoxModel model=new DefaultComboBoxModel();
  for (  JdkBundle jdkBundlePath : pathsList.toArrayList()) {
    model.addElement(jdkBundlePath);
  }
  model.addListDataListener(new ListDataListener(){
    @Override public void intervalAdded(    ListDataEvent e){
    }
    @Override public void intervalRemoved(    ListDataEvent e){
    }
    @Override public void contentsChanged(    ListDataEvent e){
      setOKActionEnabled(!((JdkBundle)myComboBox.getSelectedItem()).isBoot());
    }
  }
);
  myComboBox.setModel(model);
  myComboBox.setRenderer(new ListCellRendererWrapper(){
    @Override public void customize(    JList list,    Object value,    int index,    boolean selected,    boolean hasFocus){
      if (value != null) {
        JdkBundle jdkBundleDescriptor=((JdkBundle)value);
        if (jdkBundleDescriptor.isBoot()) {
          setForeground(JBColor.DARK_GRAY);
        }
        setText(jdkBundleDescriptor.getVisualRepresentation());
      }
 else {
        if (LOG.isDebugEnabled()) {
          LOG.debug("Null value has been passed to a cell renderer. Available JDKs count: " + pathsList.toArrayList().size());
          StringBuilder jdkNames=new StringBuilder();
          for (          JdkBundle jdkBundlePath : pathsList.toArrayList()) {
            if (!jdkBundlesList.isEmpty()) {
              continue;
            }
            jdkNames.append(jdkBundlePath.getVisualRepresentation()).append("; ");
          }
          if (LOG.isDebugEnabled()) {
            LOG.debug("Available JDKs names: " + jdkNames.toString());
          }
        }
      }
    }
  }
);
  setTitle("Switch IDE Boot JDK");
  setOKActionEnabled(false);
  init();
}
