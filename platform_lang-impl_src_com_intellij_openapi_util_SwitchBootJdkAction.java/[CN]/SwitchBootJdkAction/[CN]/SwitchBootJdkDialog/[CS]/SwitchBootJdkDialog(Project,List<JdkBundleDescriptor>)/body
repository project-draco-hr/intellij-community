{
  super(project,false);
  final ArrayList<JdkBundleDescriptor> pathsList=JdkUtil.findJdkPaths();
  if (!jdkBundlesList.isEmpty()) {
    pathsList.add(0,jdkBundlesList.get(0));
  }
  myComboBox=new ComboBox();
  DefaultComboBoxModel model=new DefaultComboBoxModel();
  for (  JdkBundleDescriptor jdkBundlePath : pathsList) {
    if (!(jdkBundlesList.isEmpty() || jdkBundlePath == null) && FileUtil.filesEqual(jdkBundlePath.getBundleAsFile(),jdkBundlesList.get(0).getBundleAsFile())) {
      continue;
    }
    model.addElement(jdkBundlePath);
  }
  myComboBox.setModel(model);
  myComboBox.setRenderer(new ListCellRendererWrapper(){
    @Override public void customize(    JList list,    Object value,    int index,    boolean selected,    boolean hasFocus){
      if (value != null) {
        JdkBundleDescriptor jdkBundleDescriptor=((JdkBundleDescriptor)value);
        setText(jdkBundleDescriptor.getVisualRepresentation());
      }
 else {
        LOG.error("Null value has been passed to a cell renderer. Available JDKs count: " + pathsList.size());
        StringBuilder jdkNames=new StringBuilder();
        for (        JdkBundleDescriptor jdkBundlePath : pathsList) {
          if (!jdkBundlesList.isEmpty()) {
            continue;
          }
          jdkNames.append(jdkBundlePath.getVisualRepresentation()).append("; ");
        }
        LOG.error("Available JDKs names: " + jdkNames.toString());
      }
    }
  }
);
  setTitle("Switch IDE Boot JDK");
  init();
}
