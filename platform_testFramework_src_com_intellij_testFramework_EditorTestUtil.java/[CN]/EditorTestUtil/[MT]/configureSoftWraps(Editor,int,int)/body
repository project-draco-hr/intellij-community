{
  editor.getSettings().setUseSoftWraps(true);
  SoftWrapModelImpl model=(SoftWrapModelImpl)editor.getSoftWrapModel();
  model.setSoftWrapPainter(new SoftWrapPainter(){
    @Override public int paint(    @NotNull Graphics g,    @NotNull SoftWrapDrawingType drawingType,    int x,    int y,    int lineHeight){
      return charWidthInPixels;
    }
    @Override public int getDrawingHorizontalOffset(    @NotNull Graphics g,    @NotNull SoftWrapDrawingType drawingType,    int x,    int y,    int lineHeight){
      return charWidthInPixels;
    }
    @Override public int getMinDrawingWidth(    @NotNull SoftWrapDrawingType drawingType){
      return charWidthInPixels;
    }
    @Override public boolean canUse(){
      return true;
    }
  }
);
  model.reinitSettings();
  SoftWrapApplianceManager applianceManager=model.getApplianceManager();
  applianceManager.setWidthProvider(new SoftWrapApplianceManager.VisibleAreaWidthProvider(){
    @Override public int getVisibleAreaWidth(){
      return visibleWidth;
    }
  }
);
  applianceManager.setRepresentationHelper(new DefaultEditorTextRepresentationHelper(editor){
    @Override public int charWidth(    char c,    int fontType){
      return charWidthInPixels;
    }
  }
);
  applianceManager.registerSoftWrapIfNecessary();
  return !model.getRegisteredSoftWraps().isEmpty();
}
