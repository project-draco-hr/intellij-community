{
synchronized (ourQueue) {
    for (Iterator<Map.Entry<Process,Collection<Consumer<Integer>>>> iterator=ourQueue.entrySet().iterator(); iterator.hasNext(); ) {
      Map.Entry<Process,Collection<Consumer<Integer>>> entry=iterator.next();
      try {
        int value=entry.getKey().exitValue();
        for (        Consumer<Integer> callback : entry.getValue()) {
          try {
            callback.consume(value);
          }
 catch (          Throwable t) {
            LOG.error(t);
          }
        }
        iterator.remove();
      }
 catch (      IllegalThreadStateException ignore) {
      }
    }
  }
}
