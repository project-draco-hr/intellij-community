{
  if (myStructureViewComponent.isDisposed()) {
    return;
  }
  JTree tree=myStructureViewComponent.getTree();
  if (tree == null) {
    return;
  }
  Object root=tree.getModel().getRoot();
  if (AbstractTreeUi.isLoadingChildrenFor(root)) {
    boolean isEditorVisible=false;
    for (    FileEditor editor : FileEditorManager.getInstance(myProject).getSelectedEditors()) {
      if (editor == this) {
        isEditorVisible=true;
        break;
      }
    }
    if (!isEditorVisible) {
      myPropertyToSelectWhenVisible=propertyName;
      return;
    }
    mySelectionChangeAlarm.cancelAllRequests();
    mySelectionChangeAlarm.addRequest(new Runnable(){
      @Override public void run(){
        mySelectionChangeAlarm.cancelAllRequests();
        setStructureViewSelection(propertyName);
      }
    }
,500);
    return;
  }
  Stack<TreeElement> toCheck=ContainerUtilRt.newStack();
  toCheck.push(myStructureViewComponent.getTreeModel().getRoot());
  while (!toCheck.isEmpty()) {
    TreeElement element=toCheck.pop();
    PsiElement value=element instanceof ResourceBundlePropertyStructureViewElement ? ((ResourceBundlePropertyStructureViewElement)element).getProperty().getPsiElement() : null;
    if (value != null) {
      final IProperty property=PropertiesImplUtil.getProperty(value);
      if (propertyName.equals(property.getUnescapedKey())) {
        final PropertiesAnchorizer.PropertyAnchor anchor=myPropertiesAnchorizer.get(property);
        myStructureViewComponent.select(anchor,true);
        selectionChanged();
        return;
      }
    }
 else {
      for (      TreeElement treeElement : element.getChildren()) {
        toCheck.push(treeElement);
      }
    }
  }
}
