{
  String propertyName=getSelectedPropertyName();
  ((CardLayout)myValuesPanel.getLayout()).show(myValuesPanel,propertyName == null ? NO_PROPERTY_SELECTED : VALUES);
  if (propertyName == null)   return;
  for (  final PropertiesFile propertiesFile : myResourceBundle.getPropertiesFiles(myProject)) {
    final EditorEx editor=(EditorEx)myEditors.get(propertiesFile);
    if (editor == null)     continue;
    final IProperty property=propertiesFile.findPropertyByKey(propertyName);
    final Document document=editor.getDocument();
    CommandProcessor.getInstance().executeCommand(null,new Runnable(){
      @Override public void run(){
        ApplicationManager.getApplication().runWriteAction(new Runnable(){
          @Override public void run(){
            final UndoManagerImpl undoManager=(UndoManagerImpl)UndoManager.getInstance(myProject);
            if (!undoManager.isActive() || !(undoManager.isRedoInProgress() || undoManager.isUndoInProgress())) {
              updateDocumentFromPropertyValue(getPropertyEditorValue(property),document,propertiesFile);
            }
          }
        }
);
      }
    }
,"",this);
    JPanel titledPanel=myTitledPanels.get(propertiesFile);
    ((TitledBorder)titledPanel.getBorder()).setTitleColor(property == null ? JBColor.RED : UIUtil.getLabelTextForeground());
    titledPanel.repaint();
  }
}
