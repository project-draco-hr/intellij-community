{
  if (predicate != null) {
    if (!predicate.match(null,match,start,end,context))     return false;
  }
  if (maxOccurs == 0) {
    totalMatchedOccurs++;
    return false;
  }
  MatchResultImpl result=context.hasResult() ? context.getResult().findSon(name) : null;
  if (result == null && context.getPreviousResult() != null) {
    result=context.getPreviousResult().findSon(name);
  }
  if (result != null) {
    if (minOccurs == 1 && maxOccurs == 1) {
      return validateOneMatch(match,start,end,result,context);
    }
 else     if (maxOccurs > 1 && totalMatchedOccurs != -1) {
      if (result.isMultipleMatch()) {
        final int size=result.getAllSons().size();
        if (matchedOccurs >= size) {
          return false;
        }
        if (size != 0) {
          result=(MatchResultImpl)result.getAllSons().get(matchedOccurs);
        }
      }
      return validateOneMatch(match,start,end,result,context);
    }
  }
  return true;
}
