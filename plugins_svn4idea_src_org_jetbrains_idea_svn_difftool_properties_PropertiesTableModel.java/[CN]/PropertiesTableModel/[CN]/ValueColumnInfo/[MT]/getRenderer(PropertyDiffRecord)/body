{
  TextDiffType type=getDiffType(record);
  final Color bgColor=type != null ? type.getIgnoredColor(null) : null;
  myRenderer.setCustomizer(new MultiLineTableRenderer.Customizer(){
    @Override public void customize(    JTable table,    JLabel label,    boolean isSelected,    Object value){
      List<ColoredChunk> chunks=getChunks(record);
      if (chunks == null) {
        label.setText("");
        label.setBackground(JBColor.border());
      }
 else {
        StringBuilder text=new StringBuilder();
        text.append("<html><body style=\"white-space:nowrap\">");
        for (        ColoredChunk chunk : chunks) {
          text.append("<span");
          if (chunk.getType() != null) {
            text.append(" style=\"");
            text.append("background-color:#").append(Integer.toString(chunk.getType().getColor(null).getRGB() & 0xFFFFFF,16));
            text.append("\"");
          }
          text.append('>');
          text.append(StringUtil.escapeXml(chunk.getText()).replaceAll("\n","<br>"));
          text.append("</span>");
        }
        text.append("</body></html>");
        label.setText(text.toString());
        if (bgColor != null) {
          label.setForeground(table.getForeground());
          label.setBackground(bgColor);
        }
      }
    }
  }
);
  return myRenderer;
}
