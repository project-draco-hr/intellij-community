{
  if (PydevConsoleRunner.isInPydevConsole(node)) {
    return;
  }
  final PyStringLiteralExpression docStringExpression=node.getDocStringExpression();
  if (docStringExpression == null) {
    PsiElement marker=null;
    if (node instanceof PyClass) {
      final ASTNode n=((PyClass)node).getNameNode();
      if (n != null)       marker=n.getPsi();
    }
 else     if (node instanceof PyFunction) {
      final ASTNode n=((PyFunction)node).getNameNode();
      if (n != null)       marker=n.getPsi();
    }
 else     if (node instanceof PyFile) {
      TextRange tr=new TextRange(0,0);
      ProblemsHolder holder=getHolder();
      if (holder != null)       holder.registerProblem(node,tr,PyBundle.message("INSP.no.docstring"));
      return;
    }
    if (marker == null)     marker=node;
    if (node instanceof PyFunction || (node instanceof PyClass && ((PyClass)node).findInitOrNew(false) != null))     registerProblem(marker,PyBundle.message("INSP.no.docstring"),new DocstringQuickFix(null,null));
 else     registerProblem(marker,PyBundle.message("INSP.no.docstring"));
  }
 else {
    boolean registered=checkParameters(node,docStringExpression);
    if (!registered && StringUtil.isEmptyOrSpaces(docStringExpression.getStringValue())) {
      registerProblem(docStringExpression,PyBundle.message("INSP.empty.docstring"));
    }
  }
}
