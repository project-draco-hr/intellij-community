{
  myCheckUnique=schema.isUniqueItems();
  if (schema.getItemsSchema() != null) {
    for (    JsonValue arrayValue : list) {
      checkByScheme(arrayValue,schema.getItemsSchema(),new HashSet<>());
      checkUnique(arrayValue);
    }
  }
 else   if (schema.getItemsSchemaList() != null) {
    final Iterator<JsonSchemaObject> iterator=schema.getItemsSchemaList().iterator();
    for (    JsonValue arrayValue : list) {
      if (iterator.hasNext()) {
        checkByScheme(arrayValue,iterator.next(),new HashSet<>());
      }
 else {
        if (!Boolean.TRUE.equals(schema.getAdditionalItemsAllowed())) {
          error("Additional items are not allowed",arrayValue);
          return;
        }
      }
      checkUnique(arrayValue);
    }
  }
 else {
    for (    JsonValue arrayValue : list) {
      checkUnique(arrayValue);
    }
  }
  if (myFirstNonUnique != null) {
    error("Item is not unique",myFirstNonUnique);
    return;
  }
  if (schema.getMinItems() != null && list.size() < schema.getMinItems()) {
    error("Array is shorter than " + schema.getMinItems(),array);
    return;
  }
  if (schema.getMaxItems() != null && list.size() > schema.getMaxItems()) {
    error("Array is longer than " + schema.getMaxItems(),array);
  }
}
