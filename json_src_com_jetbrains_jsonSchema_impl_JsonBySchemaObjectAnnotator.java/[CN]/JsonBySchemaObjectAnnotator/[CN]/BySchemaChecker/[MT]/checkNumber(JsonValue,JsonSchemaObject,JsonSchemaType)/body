{
  Number value;
  if (JsonSchemaType._integer.equals(schemaType)) {
    try {
      value=Integer.valueOf(propValue.getText());
    }
 catch (    NumberFormatException e) {
      error("Integer value expected",propValue);
      return;
    }
  }
 else {
    try {
      value=Double.valueOf(propValue.getText());
    }
 catch (    NumberFormatException e) {
      error("Double value expected",propValue);
      return;
    }
  }
  if (schema.getMultipleOf() != null) {
    final double leftOver=value.doubleValue() % schema.getMultipleOf().doubleValue();
    if (leftOver > 0.000001) {
      error("Is not multiple of " + propValue.getText(),propValue);
      return;
    }
  }
  if (schema.getMinimum() != null) {
    checkMinimum(schema,value,propValue,schemaType);
  }
  if (schema.getMaximum() != null) {
    checkMaximum(schema,value,propValue,schemaType);
  }
}
