{
  final List<JsonSchemaObject> anyOf=schema.getAnyOf();
  final Map<PsiElement,String> errors=new HashMap<>();
  for (  JsonSchemaObject object : anyOf) {
    final BySchemaChecker checker=new BySchemaChecker();
    final HashSet<String> local=new HashSet<>();
    checker.checkByScheme(value,object,local);
    if (checker.isCorrect()) {
      validatedProperties.addAll(local);
      return;
    }
    if (errors.isEmpty() && notTypeError(value,checker)) {
      errors.clear();
      errors.putAll(checker.getErrors());
    }
  }
  if (!errors.isEmpty()) {
    for (    Map.Entry<PsiElement,String> entry : errors.entrySet()) {
      error(entry.getValue(),entry.getKey());
    }
  }
}
