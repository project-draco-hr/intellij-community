{
  Project project=PlatformDataKeys.PROJECT.getData(e.getDataContext());
  if (project == null) {
    return;
  }
  ProjectSystemId externalSystemId=ExternalSystemDataKeys.EXTERNAL_SYSTEM_ID.getData(e.getDataContext());
  if (externalSystemId == null) {
    return;
  }
  ExternalTaskPojo taskPojo=getSelectedTask(e.getDataContext(),externalSystemId);
  if (taskPojo == null) {
    return;
  }
  ExternalSystemManager<?,?,?,?,?> manager=ExternalSystemApiUtil.getManager(externalSystemId);
  if (manager == null) {
    return;
  }
  final ExternalSystemExecuteTaskTask task=new ExternalSystemExecuteTaskTask(externalSystemId,project,ContainerUtilRt.newArrayList(taskPojo),getVmOptions());
  final boolean interestedInTaskOutput=prepareForOutput();
  ApplicationManager.getApplication().executeOnPooledThread(new Runnable(){
    @Override public void run(){
      if (interestedInTaskOutput) {
        task.execute(new ExternalSystemTaskNotificationListenerAdapter(){
          @Override public void onTaskOutput(          @NotNull ExternalSystemTaskId id,          @NotNull String text,          boolean stdOut){
            onOutput(text,stdOut ? ConsoleViewContentType.NORMAL_OUTPUT : ConsoleViewContentType.ERROR_OUTPUT);
          }
        }
);
      }
 else {
        task.execute();
      }
    }
  }
);
}
