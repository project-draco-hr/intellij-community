{
  final List<Future<T>> futures=new SmartList<Future<T>>();
  for (  Callable<T> task : tasks) {
    futures.add(submit(task));
  }
  boolean done=false;
  try {
    for (    Future<T> future : futures) {
      if (!future.isDone()) {
        try {
          future.get();
        }
 catch (        ExecutionException ignored) {
        }
      }
    }
    done=true;
    return futures;
  }
  finally {
    if (!done) {
      for (      Future<T> future : futures) {
        future.cancel(true);
      }
    }
  }
}
