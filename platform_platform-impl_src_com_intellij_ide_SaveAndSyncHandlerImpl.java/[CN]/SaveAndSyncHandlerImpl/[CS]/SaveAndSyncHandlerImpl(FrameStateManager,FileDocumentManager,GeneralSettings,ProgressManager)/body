{
  myProgressManager=progressManager;
  myIdleListener=new Runnable(){
    @Override public void run(){
      if (generalSettings.isAutoSaveIfInactive() && canSyncOrSave()) {
        ((FileDocumentManagerImpl)fileDocumentManager).saveAllDocuments(false);
      }
    }
  }
;
  IdeEventQueue.getInstance().addIdleListener(myIdleListener,generalSettings.getInactiveTimeout() * 1000);
  myGeneralSettingsListener=new PropertyChangeListener(){
    @Override public void propertyChange(    @NotNull PropertyChangeEvent e){
      if (GeneralSettings.PROP_INACTIVE_TIMEOUT.equals(e.getPropertyName())) {
        IdeEventQueue eventQueue=IdeEventQueue.getInstance();
        eventQueue.removeIdleListener(myIdleListener);
        Integer timeout=(Integer)e.getNewValue();
        eventQueue.addIdleListener(myIdleListener,timeout.intValue() * 1000);
      }
    }
  }
;
  generalSettings.addPropertyChangeListener(myGeneralSettingsListener);
  frameStateManager.addListener(new FrameStateListener(){
    @Override public void onFrameDeactivated(){
      if (canSyncOrSave()) {
        saveProjectsAndDocuments();
      }
    }
    @Override public void onFrameActivated(){
      if (ApplicationManager.getApplication().isDisposed() || !generalSettings.isSyncOnFrameActivation()) {
        return;
      }
      LOG.debug("enter: refreshFiles()");
      myRefreshDelayAlarm.cancelAndRequest();
      LOG.debug("exit: refreshFiles()");
    }
  }
);
}
