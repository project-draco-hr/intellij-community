{
  final int projectId=getProjectId(projRef.get());
  final TIntHashSet rootsToMark=new TIntHashSet();
synchronized (myProjectOutputRoots) {
    final TIntObjectHashMap<Couple<Integer>> oldLayout=myProjectOutputRoots.get(projectId);
    for (final TIntObjectIterator<Couple<Integer>> it=oldLayout.iterator(); it.hasNext(); ) {
      it.advance();
      final Couple<Integer> currentRoots=currentLayout.get(it.key());
      final Couple<Integer> oldRoots=it.value();
      if (shouldMark(oldRoots.first,currentRoots != null ? currentRoots.first : -1)) {
        rootsToMark.add(oldRoots.first);
      }
      if (shouldMark(oldRoots.second,currentRoots != null ? currentRoots.second : -1)) {
        rootsToMark.add(oldRoots.second);
      }
    }
  }
  for (TIntIterator it=rootsToMark.iterator(); it.hasNext(); ) {
    final int id=it.next();
    final VirtualFile outputRoot=findFileById(id);
    if (outputRoot != null) {
      processOldOutputRoot(projectId,outputRoot);
    }
  }
}
