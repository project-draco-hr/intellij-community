{
  final JPanel controlPanel=new JPanel();
  controlPanel.setBackground(IpnbEditorUtil.getBackground());
  final JPanel savePanel=new JPanel(new GridBagLayout());
  savePanel.setBackground(IpnbEditorUtil.getBackground());
  addSaveButton(savePanel);
  controlPanel.add(savePanel);
  final JPanel addPanel=new JPanel(new GridBagLayout());
  addPanel.setBackground(IpnbEditorUtil.getBackground());
  addAddButton(addPanel);
  controlPanel.add(addPanel);
  final JPanel editorPanel=new JPanel(new GridBagLayout());
  editorPanel.setBackground(IpnbEditorUtil.getBackground());
  addCutButton(editorPanel);
  addCopyButton(editorPanel);
  addPasteButton(editorPanel);
  controlPanel.add(editorPanel);
  final JPanel runPanel=new JPanel(new GridBagLayout());
  runPanel.setBackground(IpnbEditorUtil.getBackground());
  addRunButton(runPanel);
  controlPanel.add(runPanel);
  addInterruptKernelButton(runPanel);
  addReloadKernelButton(runPanel);
  myCellTypeCombo=new ComboBox(ourCellTypes);
  myCellTypeCombo.addActionListener(new ActionListener(){
    @Override public void actionPerformed(    ActionEvent e){
      final Object selectedItem=myCellTypeCombo.getSelectedItem();
      final IpnbEditablePanel selectedCell=myIpnbFilePanel.getSelectedCell();
      if (selectedCell != null && selectedItem instanceof String) {
        updateCellType((String)selectedItem,selectedCell);
      }
    }
  }
);
  final IpnbPanel selectedCell=myIpnbFilePanel.getSelectedCell();
  if (selectedCell != null) {
    updateCellTypeCombo(selectedCell);
  }
  controlPanel.add(myCellTypeCombo);
  final MatteBorder border=BorderFactory.createMatteBorder(0,0,1,0,JBColor.GRAY);
  controlPanel.setBorder(border);
  return controlPanel;
}
