{
  myDocument=FileDocumentManager.getInstance().getDocument(vFile);
  project.getMessageBus().connect(this).subscribe(FileEditorManagerListener.Before.FILE_EDITOR_MANAGER,new FileEditorManagerListener.Before.Adapter(){
    @Override public void beforeFileClosed(    @NotNull FileEditorManager source,    @NotNull VirtualFile file){
      if (!new File(file.getPath()).exists())       return;
      if (myDocument == null)       return;
      FileDocumentManager.getInstance().saveDocument(myDocument);
      IpnbParser.saveIpnbFile(myIpnbFilePanel);
      file.refresh(false,false);
    }
  }
);
  myFile=vFile;
  myName=vFile.getName();
  myEditorPanel=new JPanel(new BorderLayout());
  myEditorPanel.setBackground(IpnbEditorUtil.getBackground());
  myIpnbFilePanel=createIpnbEditorPanel(project,vFile);
  Disposer.register(this,myIpnbFilePanel);
  final JPanel controlPanel=createControlPanel();
  myEditorPanel.add(controlPanel,BorderLayout.NORTH);
  myScrollPane=ScrollPaneFactory.createScrollPane(myIpnbFilePanel);
  myScrollPane.setHorizontalScrollBarPolicy(ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
  myEditorPanel.add(myScrollPane,BorderLayout.CENTER);
  registerHeadingActions();
}
