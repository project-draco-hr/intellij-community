{
  if (!file.exists()) {
    return Promise.reject(NOT_FOUND);
  }
  final AsyncPromise<Void> promise=new AsyncPromise<Void>();
  ApplicationManager.getApplication().invokeLater(new Runnable(){
    @Override public void run(){
      try {
        VirtualFile virtualFile;
        AccessToken token=WriteAction.start();
        try {
          virtualFile=LocalFileSystem.getInstance().refreshAndFindFileByIoFile(file);
        }
  finally {
          token.finish();
        }
        if (virtualFile == null) {
          promise.setError(NOT_FOUND);
        }
 else {
          navigate(ProjectUtil.guessProjectForContentFile(virtualFile),virtualFile,request);
          promise.setResult(null);
        }
      }
 catch (      Throwable e) {
        promise.setError(e);
      }
    }
  }
);
  return promise;
}
