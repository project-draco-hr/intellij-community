{
  path=FileUtil.expandUserHome(path);
  final File file=new File(FileUtil.toSystemDependentName(path));
  if (file.isAbsolute()) {
    return openAbsolutePath(file,line,column,focused);
  }
  RefreshQueue queue=RefreshQueue.getInstance();
  queue.cancelSession(refreshSessionId);
  OpenFileTask request=new OpenFileTask(FileUtil.toCanonicalPath(FileUtil.toSystemIndependentName(path),'/'),line,column);
  requests.offer(request);
  RefreshSession session=queue.createSession(true,true,new Runnable(){
    @Override public void run(){
      OpenFileTask request;
      while ((request=requests.poll()) != null) {
        try {
          if (openRelativePath(request.path,request.line,request.column,focused)) {
            request.promise.setResult(null);
          }
 else {
            request.promise.setError(NOT_FOUND);
          }
        }
 catch (        Throwable e) {
          request.promise.setError(e);
        }
      }
    }
  }
,ModalityState.NON_MODAL);
  session.addAllFiles(ManagingFS.getInstance().getLocalRoots());
  refreshSessionId=session.getId();
  session.launch();
  return request.promise;
}
