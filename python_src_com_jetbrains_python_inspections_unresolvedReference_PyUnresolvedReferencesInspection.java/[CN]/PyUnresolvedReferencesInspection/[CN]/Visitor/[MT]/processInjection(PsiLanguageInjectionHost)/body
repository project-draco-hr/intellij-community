{
  if (node == null)   return;
  final List<Pair<PsiElement,TextRange>> files=InjectedLanguageManager.getInstance(node.getProject()).getInjectedPsiFiles(node);
  if (files != null) {
    for (    Pair<PsiElement,TextRange> pair : files) {
      new PyRecursiveElementVisitor(){
        @Override public void visitPyElement(        PyElement element){
          super.visitPyElement(element);
          if (element instanceof PyReferenceOwner) {
            final PyResolveContext resolveContext=PyResolveContext.noImplicits().withTypeEvalContext(myTypeEvalContext);
            final PsiPolyVariantReference reference=((PyReferenceOwner)element).getReference(resolveContext);
            final ResolveResult[] resolveResults=reference.multiResolve(false);
            for (            ResolveResult resolveResult : resolveResults) {
              if (resolveResult instanceof ImportedResolveResult) {
                final PyImportedNameDefiner definer=((ImportedResolveResult)resolveResult).getDefiner();
                if (definer != null) {
                  myUsedImports.add(definer);
                }
              }
            }
          }
        }
      }
.visitElement(pair.getFirst());
    }
  }
}
