{
  super(project,false);
  variables=_variables;
  model=_model;
  setTitle("Edit Variables");
  partOfSearchResults.setEnabled(!replaceContext);
  if (fileType == StdFileTypes.JAVA) {
    formalArgTypeWithinHierarchy.setEnabled(true);
    invertFormalArgType.setEnabled(true);
    formalArgType.setEnabled(true);
    exprTypeWithinHierarchy.setEnabled(true);
    notExprType.setEnabled(true);
    regexprForExprType.setEnabled(true);
    read.setEnabled(true);
    notRead.setEnabled(true);
    write.setEnabled(true);
    notWrite.setEnabled(true);
    applyWithinTypeHierarchy.setEnabled(true);
  }
 else {
    formalArgTypeWithinHierarchy.setEnabled(false);
    invertFormalArgType.setEnabled(false);
    formalArgType.setEnabled(false);
    exprTypeWithinHierarchy.setEnabled(false);
    notExprType.setEnabled(false);
    regexprForExprType.setEnabled(false);
    read.setEnabled(false);
    notRead.setEnabled(false);
    write.setEnabled(false);
    notWrite.setEnabled(false);
    applyWithinTypeHierarchy.setEnabled(false);
  }
  parameterList.setModel(new AbstractListModel(){
    public Object getElementAt(    int index){
      return variables.get(index);
    }
    public int getSize(){
      return variables.size();
    }
  }
);
  parameterList.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
  parameterList.getSelectionModel().addListSelectionListener(new ListSelectionListener(){
    boolean rollingBackSelection;
    public void valueChanged(    ListSelectionEvent e){
      if (e.getValueIsAdjusting())       return;
      if (rollingBackSelection) {
        rollingBackSelection=false;
        return;
      }
      Variable var=variables.get(parameterList.getSelectedIndex());
      if (validateParameters()) {
        if (current != null)         copyValuesFromUI(current);
        copyValuesToUI(var);
        current=var;
      }
 else {
        rollingBackSelection=true;
        parameterList.setSelectedIndex(e.getFirstIndex() == parameterList.getSelectedIndex() ? e.getLastIndex() : e.getFirstIndex());
      }
    }
  }
);
  parameterList.setCellRenderer(new DefaultListCellRenderer(){
    public Component getListCellRendererComponent(    JList list,    Object value,    int index,    boolean isSelected,    boolean cellHasFocus){
      return super.getListCellRendererComponent(list,((Variable)value).getName(),index,isSelected,cellHasFocus);
    }
  }
);
  minoccursUnlimited.addChangeListener(new MyChangeListener(minoccurs));
  maxoccursUnlimited.addChangeListener(new MyChangeListener(maxoccurs));
  init();
  if (variables.size() > 0)   parameterList.setSelectedIndex(0);
}
