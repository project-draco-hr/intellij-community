{
  Collection<MethodSignature> toImplement=OverrideImplementExploreUtil.getMethodSignaturesToImplement(aClass);
  if (toImplement.size() > 1)   return null;
  MethodSignature abstractSignature=toImplement.isEmpty() ? null : toImplement.iterator().next();
  for (  PsiMethod method : aClass.getMethods()) {
    if (method.hasModifierProperty(PsiModifier.ABSTRACT)) {
      if (abstractSignature != null)       return null;
      abstractSignature=method.getSignature(PsiSubstitutor.EMPTY);
    }
  }
  return abstractSignature;
}
