{
  if (builder.getTokenType() != mDOLLAR)   return false;
  final PsiBuilder.Marker injection=builder.mark();
  ParserUtils.getToken(builder,mDOLLAR);
  if (mIDENT.equals(builder.getTokenType())) {
    PathExpression.parse(builder,parser);
  }
 else   if (mLCURLY.equals(builder.getTokenType())) {
    OpenOrClosableBlock.parseClosableBlock(builder,parser);
  }
 else {
    ParserUtils.wrapError(builder,GroovyBundle.message("identifier.or.block.expected"));
  }
  injection.done(GSTRING_INJECTION);
  return true;
}
