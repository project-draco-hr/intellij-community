{
  ClassTestDescriptor classTestDescriptor=new ClassTestDescriptor(UniqueId.forEngine("engine"),TestClass.class);
  TestDescriptor testDescriptor=new TestFactoryTestDescriptor(UniqueId.forEngine("engine1"),TestClass.class,TestClass.class.getDeclaredMethod("brokenStream"));
  TestIdentifier identifier=TestIdentifier.from(testDescriptor);
  final TestPlan testPlan=TestPlan.from(Collections.singleton(classTestDescriptor));
  myExecutionListener.sendTree(testPlan,"");
  myExecutionListener.executionStarted(identifier);
  myExecutionListener.executionFinished(identifier,TestExecutionResult.failed(new IllegalStateException()));
  Assertions.assertEquals("##teamcity[enteredTheMatrix]\n" + "##teamcity[treeEnded]\n" + "##teamcity[testSuiteStarted id='[engine:engine1]' name='brokenStream()']\n"+ "\n"+ "##teamcity[testStarted id='[engine:engine1]' name='brokenStream()']\n"+ "\n"+ "##teamcity[testFailed name='brokenStream()' details='TRACE' id='|[engine:engine1|]' error='true' message='']\n"+ "\n"+ "##teamcity[testFinished id='[engine:engine1]' name='brokenStream()']\n"+ "##teamcity[testSuiteFinished  id='[engine:engine1]' name='brokenStream()']\n",StringUtil.convertLineSeparators(myBuf.toString()));
}
