{
  final PsiElementVisitor visitor=new JavaRecursiveElementWalkingVisitor(){
    @Override public void visitMethodCallExpression(    @NotNull PsiMethodCallExpression expression){
      super.visitMethodCallExpression(expression);
      if (ignoreIterationMethods) {
        final PsiMethod method=expression.resolveMethod();
        if (MethodCallUtils.isCallToMethod(expression,CommonClassNames.JAVA_UTIL_ITERATOR,PsiType.BOOLEAN,"hasNext") || MethodCallUtils.isCallToMethod(expression,"java.util.ListIterator",PsiType.BOOLEAN,"hasPrevious") || MethodCallUtils.isCallToMethod(expression,"java.sql.ResultSet",PsiType.BOOLEAN,"next")|| MethodCallUtils.isCallToMethod(expression,"java.util.Enumeration",PsiType.BOOLEAN,"hasMoreElements")) {
          return;
        }
      }
      registerMethodCallError(expression);
    }
  }
;
  condition.accept(visitor);
}
