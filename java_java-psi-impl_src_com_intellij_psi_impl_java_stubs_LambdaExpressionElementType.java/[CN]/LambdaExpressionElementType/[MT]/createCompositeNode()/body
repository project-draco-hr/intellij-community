{
  return new CompositeElement(this){
    @Override public void replaceChildInternal(    @NotNull ASTNode child,    @NotNull TreeElement newElement){
      if (ElementType.EXPRESSION_BIT_SET.contains(child.getElementType()) && ElementType.EXPRESSION_BIT_SET.contains(newElement.getElementType())) {
        boolean needParenth=ReplaceExpressionUtil.isNeedParenthesis(child,newElement);
        if (needParenth) {
          newElement=JavaSourceUtil.addParenthToReplacedChild(JavaElementType.PARENTH_EXPRESSION,newElement,getManager());
        }
      }
      super.replaceChildInternal(child,newElement);
    }
    @Override public int getChildRole(    ASTNode child){
      final IElementType elType=child.getElementType();
      if (elType == JavaTokenType.ARROW) {
        return ChildRole.ARROW;
      }
 else       if (elType == JavaElementType.PARAMETER_LIST) {
        return ChildRole.PARAMETER_LIST;
      }
 else       if (elType == JavaElementType.CODE_BLOCK) {
        return ChildRole.LBRACE;
      }
 else {
        return ChildRole.EXPRESSION;
      }
    }
  }
;
}
