{
  if (progress != null)   progress.checkCanceled();
  PsiFile file=scope.getContainingFile();
  FileViewProvider viewProvider=file.getViewProvider();
  final CharSequence buffer=viewProvider.getContents();
  TextRange range=scope.getTextRange();
  if (range == null) {
    LOG.error("Element " + scope + " of class "+ scope.getClass()+ " has null range");
    return ArrayUtil.EMPTY_INT_ARRAY;
  }
  int startOffset=range.getStartOffset();
  int endOffset=range.getEndOffset();
  if (endOffset > buffer.length()) {
    diagnoseInvalidRange(scope,file,viewProvider,buffer,range);
    return ArrayUtil.EMPTY_INT_ARRAY;
  }
  int[] offsets=getTextOccurrences(buffer,startOffset,endOffset,searcher,progress);
  for (int i=0; i < offsets.length; i++) {
    offsets[i]-=startOffset;
  }
  return offsets;
}
