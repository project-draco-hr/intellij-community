{
  PyDocStringOwner owner=PsiTreeUtil.getParentOfType(getElement(),PyDocStringOwner.class);
  if (owner instanceof PyFunction) {
    return resolveParameter((PyFunction)owner);
  }
  if (owner instanceof PyClass) {
    final PyFunction init=((PyClass)owner).findMethodByName(PyNames.INIT,false);
    if (init != null) {
      PsiElement element=resolveParameter(init);
      if (element == null && (myType.equals(TagBasedDocString.ReferenceType.CLASS_VARIABLE) || myType.equals(TagBasedDocString.ReferenceType.PARAMETER_TYPE)))       element=resolveClassVariable((PyClass)owner);
      if (element == null && (myType.equals(TagBasedDocString.ReferenceType.INSTANCE_VARIABLE) || myType.equals(TagBasedDocString.ReferenceType.PARAMETER_TYPE)))       element=resolveInstanceVariable((PyClass)owner);
      return element;
    }
 else {
      if (myType.equals(TagBasedDocString.ReferenceType.CLASS_VARIABLE) || myType.equals(TagBasedDocString.ReferenceType.PARAMETER_TYPE))       return resolveClassVariable((PyClass)owner);
      if (myType.equals(TagBasedDocString.ReferenceType.INSTANCE_VARIABLE) || myType.equals(TagBasedDocString.ReferenceType.PARAMETER_TYPE))       return resolveInstanceVariable((PyClass)owner);
    }
  }
  return null;
}
