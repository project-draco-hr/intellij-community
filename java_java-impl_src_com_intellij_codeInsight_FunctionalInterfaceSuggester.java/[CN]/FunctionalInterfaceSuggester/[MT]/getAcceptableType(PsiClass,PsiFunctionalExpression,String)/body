{
  final PsiElementFactory elementFactory=JavaPsiFacade.getElementFactory(interface2Consider.getProject());
  final PsiDeclarationStatement exprDeclaration=(PsiDeclarationStatement)elementFactory.createStatementFromText(interface2Consider.getQualifiedName() + " " + uniqueExprName+ " = "+ expression.getText()+ ";",expression);
  final PsiLocalVariable var=(PsiLocalVariable)exprDeclaration.getDeclaredElements()[0];
  final PsiExpression exprAsInitializer=var.getInitializer();
  if (exprAsInitializer instanceof PsiFunctionalExpression) {
    if (!((PsiFunctionalExpression)exprAsInitializer).isAcceptable(var.getType())) {
      return null;
    }
    final PsiType type=((PsiFunctionalExpression)exprAsInitializer).getFunctionalInterfaceType();
    if (type instanceof PsiLambdaExpressionType || type instanceof PsiLambdaParameterType || type instanceof PsiMethodReferenceType) {
      return null;
    }
    return type;
  }
  return null;
}
