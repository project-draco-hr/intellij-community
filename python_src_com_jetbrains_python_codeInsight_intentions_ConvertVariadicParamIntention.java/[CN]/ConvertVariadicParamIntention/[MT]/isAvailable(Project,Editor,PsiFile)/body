{
  if (!(file instanceof PyFile)) {
    return false;
  }
  final PsiElement element=file.findElementAt(editor.getCaretModel().getOffset());
  final PyFunction function=PsiTreeUtil.getParentOfType(element,PyFunction.class);
  if (function != null) {
    for (    PyCallExpression call : fillCallExpressions(function)) {
      final PyExpression firstArgument=ArrayUtil.getFirstElement(call.getArguments());
      final String firstArgumentValue=PythonStringUtil.getStringValue(firstArgument);
      if (firstArgumentValue == null || !PyNames.isIdentifierString(firstArgumentValue)) {
        return false;
      }
    }
    for (    PySubscriptionExpression subscription : fillSubscriptions(function)) {
      final PyExpression indexExpression=subscription.getIndexExpression();
      final String indexValue=PythonStringUtil.getStringValue(indexExpression);
      if (indexValue == null || !PyNames.isIdentifierString(indexValue)) {
        return false;
      }
    }
    return getKeywordContainer(function) != null;
  }
  return false;
}
