{
  PyStatementList statementList=myFunction.getStatementList();
  myElements=new ArrayList<PySubscriptionExpression>();
  myCallElements=new ArrayList<PyCallExpression>();
  Stack<PsiElement> stack=new Stack<PsiElement>();
  for (  PyStatement st : statementList.getStatements()) {
    stack.push(st);
    while (!stack.isEmpty()) {
      PsiElement e=stack.pop();
      if (e instanceof PySubscriptionExpression) {
        if (((PySubscriptionExpression)e).getOperand().getText().equals(myKeywordContainerName)) {
          myElements.add((PySubscriptionExpression)e);
        }
      }
 else {
        if (!(e instanceof PyCallExpression)) {
          if (e.getText().equals(myKeywordContainerName))           canRemove=false;
          for (          PsiElement psiElement : e.getChildren()) {
            stack.push(psiElement);
          }
        }
 else {
          PyExpression callee=((PyCallExpression)e).getCallee();
          if (callee instanceof PyQualifiedExpression) {
            PyExpression qualifier=((PyQualifiedExpression)callee).getQualifier();
            if (qualifier != null && qualifier.getText().equals(myKeywordContainerName) && ("get".equals(((PyQualifiedExpression)callee).getReferencedName()) || "__getitem__".equals(((PyQualifiedExpression)callee).getReferencedName()))) {
              myCallElements.add((PyCallExpression)e);
            }
 else {
              if (e.getText().equals(myKeywordContainerName))               canRemove=false;
              for (              PsiElement psiElement : e.getChildren()) {
                stack.push(psiElement);
              }
            }
          }
        }
      }
    }
  }
}
