{
  PyElementGenerator elementGenerator=PyElementGenerator.getInstance(project);
  List<PySubscriptionExpression> subscriptions=fillSubscriptions(function);
  int size=subscriptions.size();
  for (int i=0; i != size; ++i) {
    PySubscriptionExpression subscriptionExpression=subscriptions.get(i);
    PyExpression indexExpression=subscriptionExpression.getIndexExpression();
    if (indexExpression instanceof PyStringLiteralExpression) {
      PyExpression p=elementGenerator.createExpressionFromText(((PyStringLiteralExpression)indexExpression).getStringValue());
      ASTNode comma=elementGenerator.createComma();
      PyClass containingClass=function.getContainingClass();
      if (containingClass == null) {
        function.getParameterList().addBefore(p,function.getParameterList().getParameters()[0]);
        function.getParameterList().addBefore((PsiElement)comma,function.getParameterList().getParameters()[0]);
      }
 else {
        function.getParameterList().addBefore(p,function.getParameterList().getParameters()[1]);
        function.getParameterList().addBefore((PsiElement)comma,function.getParameterList().getParameters()[1]);
      }
      subscriptionExpression.replace(p);
    }
  }
}
