{
  PyElementGenerator elementGenerator=PyElementGenerator.getInstance(project);
  int size=myElements.size();
  for (int i=0; i != size; ++i) {
    PySubscriptionExpression subscriptionExpression=myElements.get(i);
    PyExpression indexExpression=subscriptionExpression.getIndexExpression();
    if (indexExpression instanceof PyStringLiteralExpression) {
      PyExpression p=elementGenerator.createExpressionFromText(((PyStringLiteralExpression)indexExpression).getStringValue());
      ASTNode comma=elementGenerator.createComma();
      PyClass containingClass=myFunction.getContainingClass();
      if (containingClass == null) {
        myFunction.getParameterList().addBefore(p,myFunction.getParameterList().getParameters()[0]);
        myFunction.getParameterList().addBefore((PsiElement)comma,myFunction.getParameterList().getParameters()[0]);
      }
 else {
        myFunction.getParameterList().addBefore(p,myFunction.getParameterList().getParameters()[1]);
        myFunction.getParameterList().addBefore((PsiElement)comma,myFunction.getParameterList().getParameters()[1]);
      }
      subscriptionExpression.replace(p);
    }
  }
}
