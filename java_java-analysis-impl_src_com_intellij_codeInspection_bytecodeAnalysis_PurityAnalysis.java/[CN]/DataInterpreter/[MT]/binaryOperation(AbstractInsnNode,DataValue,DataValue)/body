{
switch (insn.getOpcode()) {
case Opcodes.LALOAD:
case Opcodes.DALOAD:
case Opcodes.LADD:
case Opcodes.DADD:
case Opcodes.LSUB:
case Opcodes.DSUB:
case Opcodes.LMUL:
case Opcodes.DMUL:
case Opcodes.LDIV:
case Opcodes.DDIV:
case Opcodes.LREM:
case Opcodes.LSHL:
case Opcodes.LSHR:
case Opcodes.LUSHR:
case Opcodes.LAND:
case Opcodes.LOR:
case Opcodes.LXOR:
    return DataValue.UnknownDataValue2;
case Opcodes.PUTFIELD:
  final EffectQuantum effectQuantum;
if (value1 == DataValue.ThisDataValue || value1 == DataValue.OwnedDataValue) {
  effectQuantum=EffectQuantum.ThisChangeQuantum;
}
 else if (value1 == DataValue.LocalDataValue) {
  effectQuantum=null;
}
 else if (value1 instanceof DataValue.ParameterDataValue) {
  effectQuantum=new EffectQuantum.ParamChangeQuantum(((DataValue.ParameterDataValue)value1).n);
}
 else {
  effectQuantum=EffectQuantum.TopEffectQuantum;
}
int insnIndex=methodNode.instructions.indexOf(insn);
effects[insnIndex]=effectQuantum;
return DataValue.UnknownDataValue1;
default :
return DataValue.UnknownDataValue1;
}
}
