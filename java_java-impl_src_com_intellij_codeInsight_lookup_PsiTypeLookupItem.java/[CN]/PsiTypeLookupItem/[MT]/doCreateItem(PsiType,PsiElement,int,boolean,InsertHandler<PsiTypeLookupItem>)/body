{
  if (type instanceof PsiClassType) {
    PsiClassType.ClassResolveResult classResolveResult=((PsiClassType)type).resolveGenerics();
    final PsiClass psiClass=classResolveResult.getElement();
    if (psiClass != null) {
      String name=psiClass.getName();
      if (name != null) {
        PsiClass resolved=JavaPsiFacade.getInstance(psiClass.getProject()).getResolveHelper().resolveReferencedClass(name,context);
        String[] allStrings;
        if (!psiClass.getManager().areElementsEquivalent(resolved,psiClass) && !PsiUtil.isInnerClass(psiClass)) {
          allStrings=ArrayUtil.toStringArray(JavaCompletionUtil.getAllLookupStrings(psiClass));
        }
 else {
          allStrings=new String[]{name};
        }
        String lookupString=allStrings[allStrings.length - 1];
        PsiTypeLookupItem item=new PsiTypeLookupItem(psiClass,lookupString,diamond,bracketsCount,importFixer,classResolveResult.getSubstitutor());
        item.addLookupStrings(allStrings);
        return item;
      }
    }
  }
  return new PsiTypeLookupItem(type,type.getPresentableText(),false,bracketsCount,importFixer,PsiSubstitutor.EMPTY);
}
