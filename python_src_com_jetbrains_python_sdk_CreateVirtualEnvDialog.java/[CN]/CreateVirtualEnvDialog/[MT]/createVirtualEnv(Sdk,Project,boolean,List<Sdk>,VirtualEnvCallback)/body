{
  final CreateVirtualEnvDialog dialog=new CreateVirtualEnvDialog(sdk,project,isNewProject,allSdks);
  dialog.show();
  if (dialog.isOK()) {
    final ProgressManager progman=ProgressManager.getInstance();
    final Sdk basicSdk=dialog.getSdk();
    final Task.Modal createTask=new Task.Modal(project,"Creating virtual environment for " + basicSdk.getName(),false){
      String myPath;
      public void run(      @NotNull final ProgressIndicator indicator){
        final PyPackageManagerImpl packageManager=(PyPackageManagerImpl)PyPackageManager.getInstance(basicSdk);
        try {
          indicator.setText("Creating virtual environment for " + basicSdk.getName());
          myPath=packageManager.createVirtualEnv(dialog.getDestination(),dialog.useGlobalSitePackages());
        }
 catch (        final PyExternalProcessException e) {
          ApplicationManager.getApplication().invokeLater(new Runnable(){
            @Override public void run(){
              packageManager.showInstallationError(myProject,"Failed to Create Virtual Environment",e.toString());
            }
          }
,ModalityState.any());
        }
      }
      @Override public void onSuccess(){
        if (myPath != null) {
          final Application application=ApplicationManager.getApplication();
          application.invokeLater(new Runnable(){
            @Override public void run(){
              setupVirtualEnvSdk(allSdks,myPath,dialog.associateWithProject(),dialog.setAsProjectInterpreter(),callback);
            }
          }
,ModalityState.any());
        }
      }
    }
;
    progman.run(createTask);
  }
}
