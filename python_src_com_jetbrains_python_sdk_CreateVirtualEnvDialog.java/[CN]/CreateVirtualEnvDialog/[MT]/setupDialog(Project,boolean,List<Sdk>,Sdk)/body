{
  myProject=project;
  init();
  setTitle("Create Virtual Environment");
  if (suggestedBaseSdk == null && allSdks.size() > 0) {
    List<Sdk> sortedSdks=new ArrayList<Sdk>(allSdks);
    Collections.sort(sortedSdks,new PreferredSdkComparator());
    suggestedBaseSdk=sortedSdks.get(0);
  }
  updateSdkList(allSdks,suggestedBaseSdk);
  myMakeAvailableToAllProjectsCheckbox.setBorder(BorderFactory.createEmptyBorder(8,0,0,0));
  if (project == null || project.isDefault()) {
    myMakeAvailableToAllProjectsCheckbox.setSelected(true);
    myMakeAvailableToAllProjectsCheckbox.setVisible(false);
  }
 else   if (isNewProject) {
    mySetAsProjectInterpreterCheckbox.setText("Set as project interpreter for the project being created");
  }
  setOKActionEnabled(false);
  myInitialPath="";
  final VirtualFile file=VirtualEnvSdkFlavor.getDefaultLocation();
  if (file != null)   myInitialPath=file.getPath();
 else {
    final String savedPath=PyPackageService.getInstance().getVirtualEnvBasePath();
    if (!StringUtil.isEmptyOrSpaces(savedPath))     myInitialPath=savedPath;
 else     if (myProject != null) {
      final VirtualFile baseDir=myProject.getBaseDir();
      if (baseDir != null)       myInitialPath=baseDir.getPath();
    }
  }
  addUpdater(myName);
  new LocationNameFieldsBinding(project,myDestination,myName,myInitialPath,"Select Location for Virtual Environment");
  registerValidators(new FacetValidatorsManager(){
    public void registerValidator(    FacetEditorValidator validator,    JComponent... componentsToWatch){
    }
    public void validate(){
      checkValid();
    }
  }
);
  myMainPanel.setPreferredSize(new Dimension(300,50));
  checkValid();
}
