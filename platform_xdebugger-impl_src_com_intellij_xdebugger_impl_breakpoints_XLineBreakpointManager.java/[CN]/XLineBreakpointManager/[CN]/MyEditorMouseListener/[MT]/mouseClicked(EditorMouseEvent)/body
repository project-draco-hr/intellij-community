{
  final Editor editor=e.getEditor();
  final MouseEvent mouseEvent=e.getMouseEvent();
  if (mouseEvent.isPopupTrigger() || mouseEvent.isMetaDown() || mouseEvent.isControlDown()|| mouseEvent.getButton() != MouseEvent.BUTTON1 || MarkupEditorFilterFactory.createIsDiffFilter().avaliableIn(editor) || e.getArea() != EditorMouseEventArea.LINE_MARKERS_AREA || ConsoleViewUtil.isConsoleViewEditor(editor) || !isFromMyProject(editor)) {
    return;
  }
  PsiDocumentManager.getInstance(myProject).commitAndRunReadAction(new Runnable(){
    @Override public void run(){
      final int line=EditorUtil.yPositionToLogicalLine(editor,mouseEvent);
      final Document document=editor.getDocument();
      final VirtualFile file=FileDocumentManager.getInstance().getFile(document);
      if (line >= 0 && line < document.getLineCount() && file != null) {
        ApplicationManager.getApplication().invokeLater(new Runnable(){
          @Override public void run(){
            if (!myProject.isDisposed() && myProject.isInitialized() && file.isValid()) {
              XDebuggerUtil.getInstance().toggleLineBreakpoint(myProject,file,line,mouseEvent.isAltDown());
            }
          }
        }
);
      }
    }
  }
);
}
