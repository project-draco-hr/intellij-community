{
  setSearchPattern(element.getAttribute(TEXT_ATTRIBUTE_NAME).getValue());
  Attribute attr=element.getAttribute(RECURSIVE_ATTRIBUTE_NAME);
  if (attr != null) {
    try {
      recursiveSearch=attr.getBooleanValue();
    }
 catch (    DataConversionException ignored) {
    }
  }
  attr=element.getAttribute(CASESENSITIVE_ATTRIBUTE_NAME);
  if (attr != null) {
    try {
      caseSensitiveMatch=attr.getBooleanValue();
    }
 catch (    DataConversionException ignored) {
    }
  }
  attr=element.getAttribute(FILE_TYPE_ATTR_NAME);
  if (attr != null) {
    String value=attr.getValue();
    myFileType=getFileTypeByName(value);
  }
  attr=element.getAttribute(DIALECT_ATTR_NAME);
  if (attr != null) {
    myDialect=Language.findLanguageByID(attr.getValue());
  }
  List<Element> elements=element.getChildren(CONSTRAINT_TAG_NAME);
  if (elements != null && !elements.isEmpty()) {
    for (    final Element element1 : elements) {
      final MatchVariableConstraint constraint=new MatchVariableConstraint();
      constraint.readExternal(element1);
      addVariableConstraint(constraint);
    }
  }
}
