{
  if (!(fileEditor instanceof TextEditor))   return null;
  final Editor editor=((TextEditor)fileEditor).getEditor();
  final Project project=editor.getProject();
  if (project == null || !Boolean.TRUE.equals(editor.getUserData(EditorImpl.FORCED_SOFT_WRAPS)) || GotItStateKeeper.getInstance().isNotificationDisabled(GOT_IT_KEY))   return null;
  final EditorNotificationPanel panel=new EditorNotificationPanel();
  panel.setText(EditorBundle.message("forced.soft.wrap.message"));
  panel.createActionLabel(EditorBundle.message("forced.soft.wrap.hide.message"),new Runnable(){
    @Override public void run(){
      editor.putUserData(EditorImpl.FORCED_SOFT_WRAPS,null);
      EditorNotifications.getInstance(project).updateNotifications(file);
    }
  }
);
  panel.createActionLabel(EditorBundle.message("forced.soft.wrap.dont.show.again.message"),new Runnable(){
    @Override public void run(){
      GotItStateKeeper.getInstance().disableNotification(GOT_IT_KEY);
      EditorNotifications.getInstance(project).updateAllNotifications();
    }
  }
);
  return panel;
}
