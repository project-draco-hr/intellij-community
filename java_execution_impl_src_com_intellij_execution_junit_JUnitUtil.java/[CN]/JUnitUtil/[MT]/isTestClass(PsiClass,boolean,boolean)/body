{
  if (psiClass.getQualifiedName() == null)   return false;
  final PsiClass topLevelClass=PsiTreeUtil.getTopmostParentOfType(psiClass,PsiClass.class);
  if (topLevelClass != null) {
    final PsiAnnotation annotation=AnnotationUtil.findAnnotationInHierarchy(topLevelClass,Collections.singleton(RUN_WITH));
    if (annotation != null) {
      final PsiAnnotationMemberValue attributeValue=annotation.findAttributeValue("value");
      if (attributeValue instanceof PsiClassObjectAccessExpression) {
        final String runnerName=((PsiClassObjectAccessExpression)attributeValue).getOperand().getType().getCanonicalText();
        if (!(PARAMETERIZED_CLASS_NAME.equals(runnerName) || SUITE_CLASS_NAME.equals(runnerName))) {
          return true;
        }
      }
    }
  }
  if (!PsiClassUtil.isRunnableClass(psiClass,true,checkAbstract))   return false;
  if (checkForTestCaseInheritance && isTestCaseInheritor(psiClass))   return true;
  final PsiModifierList modifierList=psiClass.getModifierList();
  if (modifierList == null)   return false;
  if (AnnotationUtil.isAnnotated(psiClass,RUN_WITH,true))   return true;
  for (  final PsiMethod method : psiClass.getAllMethods()) {
    ProgressManager.checkCanceled();
    if (isSuiteMethod(method))     return true;
    if (isTestAnnotated(method))     return true;
  }
  return false;
}
