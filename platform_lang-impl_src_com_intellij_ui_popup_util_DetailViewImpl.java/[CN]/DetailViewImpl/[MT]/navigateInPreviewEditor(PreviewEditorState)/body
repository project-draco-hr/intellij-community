{
  final VirtualFile file=editorState.getFile();
  final LogicalPosition positionToNavigate=editorState.getNavigate();
  final TextAttributes lineAttributes=editorState.getAttributes();
  Document document=FileDocumentManager.getInstance().getDocument(file);
  Project project=myProject;
  clearEditor();
  myEditorState=editorState;
  remove(myLabel);
  if (document != null) {
    if (getEditor() == null || getEditor().getDocument() != document) {
      setEditor(EditorFactory.getInstance().createViewer(document,project));
      final EditorColorsScheme scheme=EditorColorsManager.getInstance().getGlobalScheme();
      EditorHighlighter highlighter=EditorHighlighterFactory.getInstance().createEditorHighlighter(file,scheme,project);
      ((EditorEx)getEditor()).setFile(file);
      ((EditorEx)getEditor()).setHighlighter(highlighter);
      EditorSettings settings=getEditor().getSettings();
      settings.setAnimatedScrolling(false);
      settings.setRefrainFromScrolling(false);
      settings.setLineNumbersShown(true);
      settings.setFoldingOutlineShown(false);
      if (settings instanceof SettingsImpl) {
        ((SettingsImpl)settings).setSoftWrapAppliancePlace(SoftWrapAppliancePlaces.PREVIEW);
      }
      ((EditorEx)getEditor()).getFoldingModel().setFoldingEnabled(false);
      add(getEditor().getComponent(),BorderLayout.CENTER);
    }
    if (positionToNavigate != null) {
      getEditor().getCaretModel().moveToLogicalPosition(positionToNavigate);
      validate();
      getEditor().getScrollingModel().scrollToCaret(ScrollType.CENTER);
    }
 else {
      revalidate();
      repaint();
    }
    getEditor().setBorder(IdeBorderFactory.createBorder(SideBorder.TOP));
    clearHighlighting();
    if (lineAttributes != null && positionToNavigate != null && positionToNavigate.line < getEditor().getDocument().getLineCount()) {
      myHighlighter=getEditor().getMarkupModel().addLineHighlighter(positionToNavigate.line,HighlighterLayer.SELECTION - 1,lineAttributes);
    }
  }
 else {
    myLabel.setText("Navigate to selected " + (file.isDirectory() ? "directory " : "file ") + "in Project View");
    add(myLabel,BorderLayout.CENTER);
    validate();
  }
}
