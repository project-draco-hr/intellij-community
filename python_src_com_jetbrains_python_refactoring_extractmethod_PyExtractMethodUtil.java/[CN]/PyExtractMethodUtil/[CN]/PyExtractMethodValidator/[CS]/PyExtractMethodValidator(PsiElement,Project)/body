{
  myElement=element;
  myProject=project;
  ScopeOwner owner=ScopeUtil.getScopeOwner(myElement);
  if (owner instanceof PyFunction) {
    owner=ScopeUtil.getScopeOwner(owner);
  }
  final ScopeOwner parent=owner;
  if (parent instanceof PyFile) {
    final List<PyFunction> functions=((PyFile)parent).getTopLevelFunctions();
    myFunction=new Function<String,Boolean>(){
      public Boolean fun(      @NotNull final String s){
        for (        PyFunction function : functions) {
          if (s.equals(function.getName())) {
            return false;
          }
        }
        return true;
      }
    }
;
  }
 else   if (parent instanceof PyClass) {
    myFunction=new Function<String,Boolean>(){
      public Boolean fun(      @NotNull final String s){
        return ((PyClass)parent).findMethodByName(s,true) == null;
      }
    }
;
  }
 else   if (parent instanceof PyFunction) {
    final Scope scope=ControlFlowCache.getScope(parent);
    myFunction=new Function<String,Boolean>(){
      @Override public Boolean fun(      String s){
        return !scope.containsDeclaration(s);
      }
    }
;
  }
 else {
    myFunction=null;
  }
}
