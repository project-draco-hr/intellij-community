{
  final Map<String,String> map=createMap(variableData);
  for (  PyParameter parameter : generatedMethod.getParameterList().getParameters()) {
    final String name=parameter.getName();
    final String newName=map.get(name);
    if (name != null && newName != null && !name.equals(newName)) {
      RefactoringFactory.getInstance(project).createRename(parameter,newName).run();
    }
  }
  final StringBuilder builder=new StringBuilder();
  builder.append("def foo(");
  final String params=createMethodParamsString(variableData,false);
  if (isMethod) {
    builder.append("self");
    if (params.length() != 0) {
      builder.append(", ");
      builder.append(params);
    }
  }
 else {
    builder.append(params);
  }
  builder.append(")\n  pass");
  final PyParameterList pyParameterList=PythonLanguage.getInstance().getElementGenerator().createFromText(project,PyFunction.class,builder.toString()).getParameterList();
  generatedMethod.getParameterList().replace(pyParameterList);
}
