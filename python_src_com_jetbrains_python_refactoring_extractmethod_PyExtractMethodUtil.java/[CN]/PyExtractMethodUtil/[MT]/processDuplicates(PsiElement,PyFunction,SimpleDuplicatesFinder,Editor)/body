{
  final ScopeOwner owner=ScopeUtil.getScopeOwner(callElement);
  if (owner instanceof PsiFile)   return;
  List<PsiElement> scope=new ArrayList<PsiElement>();
  if (owner instanceof PyFunction) {
    scope.add(owner);
    final PyClass containingClass=((PyFunction)owner).getContainingClass();
    if (containingClass != null) {
      for (      PyFunction function : containingClass.getMethods()) {
        if (!function.equals(owner) && !function.equals(generatedMethod))         scope.add(function);
      }
    }
  }
  ExtractMethodHelper.processDuplicates(callElement,generatedMethod,scope,finder,editor,new Consumer<Pair<SimpleMatch,PsiElement>>(){
    @Override public void consume(    Pair<SimpleMatch,PsiElement> pair){
      replaceElements(pair.first,pair.second.copy());
    }
  }
);
}
