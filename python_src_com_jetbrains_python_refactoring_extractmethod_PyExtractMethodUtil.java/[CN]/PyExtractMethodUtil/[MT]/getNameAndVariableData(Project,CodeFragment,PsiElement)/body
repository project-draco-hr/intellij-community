{
  final ExtractMethodValidator validator=new ExtractMethodValidator(){
    public String check(    final String name){
      return null;
    }
    public boolean isValidName(    final String name){
      return LanguageNamesValidation.INSTANCE.forLanguage(PythonLanguage.getInstance()).isIdentifier(name,project);
    }
  }
;
  final ExtractMethodDecorator decorator=new ExtractMethodDecorator(){
    public String createMethodPreview(    final String methodName,    final VariableData[] variableDatas){
      final StringBuilder builder=new StringBuilder();
      builder.append("def ").append(methodName);
      builder.append("(");
      boolean first=true;
      for (      VariableData variableData : variableDatas) {
        if (variableData.passAsParameter) {
          if (first) {
            first=false;
          }
 else {
            builder.append(", ");
          }
          builder.append(variableData.name);
        }
      }
      builder.append(")");
      return builder.toString();
    }
  }
;
  final ExtractMethodDialog dialog=new ExtractMethodDialog(project,"method_name",fragment,validator,decorator);
  dialog.show();
  if (!dialog.isOK()) {
    return Pair.create(null,null);
  }
  return Pair.create(dialog.getMethodName(),dialog.getVariableData());
}
