{
  final PsiExpressionList argumentList=((PsiMethodCallExpression)place).getArgumentList();
  final MethodCandidateInfo candidateInfo=new MethodCandidateInfo(method,PsiSubstitutor.EMPTY,false,false,argumentList,null,argumentList.getExpressionTypes(),null);
  PsiSubstitutor substitutorForMethod=candidateInfo.getSubstitutor();
  if (PsiUtil.isApplicable(method,substitutorForMethod,argumentList)) {
    final PsiType returnType=substitutorForMethod.substitute(method.getReturnType());
    final PsiType expectedType=getExpectedType();
    return expectedType == null || returnType == null || TypeConversionUtil.isAssignable(expectedType,returnType);
  }
  return false;
}
