{
  ensureOpen();
  final Ref<Boolean> isSuccess=new Ref<Boolean>();
  UIUtil.invokeAndWaitIfNeeded(new Runnable(){
    public void run(){
      try {
        if (myRebaseEditorShown) {
          GitRebaseUnstructuredEditor editor=new GitRebaseUnstructuredEditor(myProject,myRoot,path);
          if (editor.showAndGet()) {
            editor.save();
            isSuccess.set(true);
            return;
          }
 else {
            isSuccess.set(false);
          }
        }
 else {
          GitInteractiveRebaseFile rebaseFile=new GitInteractiveRebaseFile(myProject,myRoot,path);
          List<GitRebaseEntry> entries=rebaseFile.load();
          setRebaseEditorShown();
          GitRebaseEditor editor=new GitRebaseEditor(myProject,myRoot,entries);
          if (editor.showAndGet()) {
            rebaseFile.save(editor.getEntries());
            isSuccess.set(true);
            return;
          }
 else {
            rebaseFile.cancel();
            isSuccess.set(true);
          }
        }
      }
 catch (      Exception e) {
        LOG.error("Failed to edit the git rebase file: " + path,e);
      }
      isSuccess.set(false);
    }
  }
);
  return (isSuccess.isNull() || !isSuccess.get().booleanValue()) ? GitRebaseEditorMain.ERROR_EXIT_CODE : 0;
}
