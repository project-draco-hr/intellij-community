{
  for (  Element libElement : root.getChildren("lib")) {
    final String libName=libElement.getAttributeValue("name");
    Library libraryByName=model.getModuleLibraryTable().getLibraryByName(libName);
    if (libraryByName != null) {
      appendLibraryScope(model,libElement,libraryByName);
      final Library.ModifiableModel modifiableModel=libraryByName.getModifiableModel();
      replaceCollapsedByEclipseSourceRoots(libElement,modifiableModel);
      for (      Element r : libElement.getChildren(JAVADOCROOT_ATTR)) {
        modifiableModel.addRoot(r.getAttributeValue("url"),JavadocOrderRootType.getInstance());
      }
      replaceModuleRelatedRoots(model.getProject(),modifiableModel,libElement,OrderRootType.SOURCES,RELATIVE_MODULE_SRC);
      replaceModuleRelatedRoots(model.getProject(),modifiableModel,libElement,OrderRootType.CLASSES,RELATIVE_MODULE_CLS);
      replaceModuleRelatedRoots(model.getProject(),modifiableModel,libElement,JavadocOrderRootType.getInstance(),RELATIVE_MODULE_JAVADOC);
      modifiableModel.commit();
    }
 else {
      final Library library=EclipseClasspathReader.findLibraryByName(model.getProject(),libName);
      if (library != null) {
        appendLibraryScope(model,libElement,library);
      }
    }
  }
}
