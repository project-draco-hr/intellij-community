{
  myReloadableComboBoxPanel=new ReloadableComboBoxPanel<GithubTagInfo>(){
    @SuppressWarnings("unchecked") @Override protected void doUpdateValues(    @NotNull Set<GithubTagInfo> tags){
      if (!shouldUpdate(tags)) {
        return;
      }
      List<GithubTagInfo> sortedTags=createSortedTagList(tags);
      GithubTagInfo selectedItem=getSelectedValue();
      if (selectedItem == null && sortedTags.size() > 0) {
        selectedItem=sortedTags.get(0);
      }
      myComboBox.removeAllItems();
      myComboBox.addItem(myMasterTag);
      for (      GithubTagInfo tag : sortedTags) {
        myComboBox.addItem(tag);
      }
      if (selectedItem != null) {
        for (int i=0; i < myComboBox.getItemCount(); i++) {
          GithubTagInfo item=GithubTagInfo.tryCast(myComboBox.getItemAt(i));
          if (item != null && item.getName().equals(selectedItem.getName())) {
            myComboBox.setSelectedIndex(i);
            break;
          }
        }
      }
      myComboBox.updateUI();
      fireStateChanged();
    }
    private boolean shouldUpdate(    Set<GithubTagInfo> newTags){
      if (myComboBox.getItemCount() == 0) {
        return true;
      }
      int count=myComboBox.getItemCount();
      Set<GithubTagInfo> oldTags=Sets.newHashSet();
      for (int i=1; i < count; i++) {
        GithubTagInfo item=ObjectUtils.tryCast(myComboBox.getItemAt(i),GithubTagInfo.class);
        if (item != null) {
          oldTags.add(item);
        }
      }
      return !oldTags.equals(newTags);
    }
    @SuppressWarnings("unchecked") @NotNull @Override protected JComboBox createValuesComboBox(){
      JComboBox box=super.createValuesComboBox();
      box.setRenderer(new ListCellRendererWrapper<GithubTagInfo>(){
        @Override public void customize(        JList list,        GithubTagInfo tag,        int index,        boolean selected,        boolean hasFocus){
          final String text;
          if (tag == null) {
            text=isBackgroundJobRunning() ? "Loading..." : "Unavailable";
          }
 else {
            text=tag.getName();
          }
          setText(text);
        }
      }
);
      return box;
    }
  }
;
  myVersionPanel=myReloadableComboBoxPanel.getMainPanel();
}
