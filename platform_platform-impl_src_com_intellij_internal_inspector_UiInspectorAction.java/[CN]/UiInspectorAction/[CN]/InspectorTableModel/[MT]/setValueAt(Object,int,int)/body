{
  PropertyBean bean=myProperties.get(row);
  PropertyBean next;
  String name=bean.propertyName.trim();
  try {
    try {
      Method getter;
      try {
        getter=myComponent.getClass().getMethod("get" + StringUtil.capitalize(name));
      }
 catch (      Exception e) {
        getter=myComponent.getClass().getMethod("is" + StringUtil.capitalize(name));
      }
      Method setter=myComponent.getClass().getMethod("set" + StringUtil.capitalize(name),getter.getReturnType());
      setter.setAccessible(true);
      setter.invoke(myComponent,fromObject(value,getter.getReturnType()));
      next=new PropertyBean(name,getter.invoke(myComponent));
    }
 catch (    Exception e) {
      Field field=ReflectionUtil.findField(myComponent.getClass(),null,name);
      field.set(myComponent,fromObject(value,field.getType()));
      next=new PropertyBean(name,field.get(myComponent));
    }
    myProperties.set(row,next);
  }
 catch (  Exception ignored) {
  }
}
