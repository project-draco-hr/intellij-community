{
  GrCodeReferenceElement ref=myAnnotation.getClassReference();
  PsiElement resolved=ref.resolve();
  if (resolved instanceof PsiClass) {
    final PsiAnnotation annotationCollector=GrAnnotationCollector.findAnnotationCollector((PsiClass)resolved);
    if (annotationCollector != null) {
      final ArrayList<GrAnnotation> annotations=ContainerUtil.newArrayList();
      GrAnnotationCollector.collectAnnotations(annotations,myAnnotation,annotationCollector);
      Set<String> usedNames=ContainerUtil.newHashSet();
      for (      GrAnnotation annotation : annotations) {
        final PsiElement resolvedAliased=annotation.getClassReference().resolve();
        if (resolvedAliased instanceof PsiClass && ((PsiClass)resolvedAliased).isAnnotationType()) {
          for (          PsiMethod method : ((PsiClass)resolvedAliased).getMethods()) {
            if (usedNames.add(method.getName())) {
              for (              LookupElement element : GroovyCompletionUtil.createLookupElements(new GroovyResolveResultImpl(method,true),false,matcher,null)) {
                consumer.consume(element);
              }
            }
          }
        }
      }
    }
 else     if (((PsiClass)resolved).isAnnotationType()) {
      for (      PsiMethod method : ((PsiClass)resolved).getMethods()) {
        for (        LookupElement element : GroovyCompletionUtil.createLookupElements(new GroovyResolveResultImpl(method,true),false,matcher,null)) {
          consumer.consume(element);
        }
      }
    }
  }
}
