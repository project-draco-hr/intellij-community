{
  Symbol.ClassSymbol c=(Symbol.ClassSymbol)sym;
  if (c.myOwner instanceof Symbol.ClassSymbol) {
    ((Symbol.ClassSymbol)c.myOwner).connect(this);
  }
  Set<Symbol.ClassSymbol> supertypes=new HashSet<>();
  for (  QualifiedName name : c.mySuperNames) {
    try {
      resolveName(c,name,supertypes);
    }
 catch (    IncompleteHierarchyException ignore) {
      c.markHierarchyIncomplete();
      return;
    }
  }
  if (isJavaLangObject(c) || c.isHierarchyIncomplete()) {
    c.mySuperClasses=Symbol.ClassSymbol.EMPTY_ARRAY;
  }
 else {
    for (Iterator<Symbol.ClassSymbol> iter=supertypes.iterator(); iter.hasNext(); ) {
      Symbol.ClassSymbol s=iter.next();
      if (isJavaLangObject(s)) {
        iter.remove();
      }
    }
    c.mySuperClasses=supertypes.isEmpty() ? Symbol.ClassSymbol.EMPTY_ARRAY : supertypes.toArray(new Symbol.ClassSymbol[supertypes.size()]);
  }
  c.mySuperNames=null;
  c.myUnitInfo=null;
}
