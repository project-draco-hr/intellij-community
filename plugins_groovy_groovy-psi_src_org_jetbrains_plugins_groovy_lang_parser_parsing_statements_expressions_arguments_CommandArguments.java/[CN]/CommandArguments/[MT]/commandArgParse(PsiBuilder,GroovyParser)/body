{
  PsiBuilder.Marker commandMarker=builder.mark();
  Pair<Boolean,Boolean> check=ArgumentList.argumentLabelStartCheck(builder,parser);
  if (check.first) {
    ParserUtils.getToken(builder,GroovyTokenTypes.mCOLON,GroovyBundle.message("colon.expected"));
    ParserUtils.getToken(builder,GroovyTokenTypes.mNLS);
    if (!ExpressionStatement.argParse(builder,parser)) {
      builder.error(GroovyBundle.message("expression.expected"));
    }
    commandMarker.done(GroovyElementTypes.NAMED_ARGUMENT);
    return true;
  }
  commandMarker.drop();
  return check.second || ExpressionStatement.argParse(builder,parser);
}
