{
  if (visited.contains(callable)) {
    return;
  }
  visited.add(callable);
  final TypeEvalContext context=TypeEvalContext.codeCompletion(callable.getProject(),callable.getContainingFile());
  final List<PyParameter> parameters=PyUtil.getParameters(callable,context);
  for (  final PyParameter parameter : parameters) {
    parameter.getName();
  }
  if (callable instanceof PyFunction) {
    addKeywordArgumentVariantsForFunction(callExpr,ret,visited,(PyFunction)callable,parameters,context);
  }
 else {
    final Collection<String> parameterNames=new ArrayList<>();
    for (    final PyParameter parameter : parameters) {
      final String name=parameter.getName();
      if (name != null) {
        parameterNames.add(name);
      }
    }
    addKeywordArgumentVariantsForCallable(callExpr,ret,parameterNames);
  }
}
