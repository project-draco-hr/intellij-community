{
  PyCallExpression callExpr=PsiTreeUtil.getParentOfType(element,PyCallExpression.class);
  if (callExpr != null) {
    PyExpression callee=callExpr.getCallee();
    if (callee instanceof PyReferenceExpression && element.getParent() == callExpr.getArgumentList()) {
      final QualifiedResolveResult result=((PyReferenceExpression)callee).followAssignmentsChain(PyResolveContext.defaultContext());
      PsiElement def=result.getElement();
      if (def instanceof PyFunction) {
        addKeywordArgumentVariants((PyFunction)def,callExpr,ret);
      }
 else       if (def instanceof PyClass) {
        PyFunction init=((PyClass)def).findMethodByName(PyNames.INIT,true);
        if (init != null) {
          addKeywordArgumentVariants(init,callExpr,ret);
        }
      }
    }
  }
}
