{
  super(ContainerUtil.getFirstItem(ContainerUtil.mapNotNull(scopes,new Function<GlobalSearchScope,Project>(){
    @Override public Project fun(    GlobalSearchScope scope){
      return scope.getProject();
    }
  }
),null));
  if (scopes.length <= 1)   throw new IllegalArgumentException("Too few scopes: " + Arrays.asList(scopes));
  myScopes=scopes;
  final int[] nested={0};
  ContainerUtil.process(scopes,new Processor<GlobalSearchScope>(){
    @Override public boolean process(    GlobalSearchScope scope){
      nested[0]=Math.max(nested[0],scope instanceof UnionScope ? ((UnionScope)scope).myNestingLevel : 0);
      return true;
    }
  }
);
  myNestingLevel=1 + nested[0];
  if (myNestingLevel > 1000) {
    throw new IllegalStateException("Too many scopes combined: " + myNestingLevel + StringUtil.last(toString(),500,true));
  }
}
