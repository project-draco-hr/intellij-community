{
  VirtualFile lessonDir=removedTask.getParent();
  if (lessonDir == null || !lessonDir.getName().contains(EduNames.LESSON)) {
    return;
  }
  final Lesson lesson=course.getLesson(lessonDir.getName());
  if (lesson == null) {
    return;
  }
  Task task=lesson.getTask(removedTask.getName());
  if (task == null) {
    return;
  }
  CCUtils.updateHigherElements(lessonDir.getChildren(),new Function<VirtualFile,StudyOrderable>(){
    @Override public StudyOrderable fun(    VirtualFile file){
      return lesson.getTask(file.getName());
    }
  }
,task,EduNames.TASK);
  ModifiableRootModel model=EduUtils.getModel(lessonDir,project);
  if (model == null) {
    return;
  }
  EduUtils.commitAndSaveModel(model);
  lesson.getTaskList().remove(task);
}
