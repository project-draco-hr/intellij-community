{
  List<CommonProblemDescriptor> descriptorChildren=null;
  for (int i=0; i < node.getChildCount(); i++) {
    final TreeNode child=node.getChildAt(i);
    if (child instanceof ProblemDescriptionNode) {
      if (isNodeValidAndIncluded((ProblemDescriptionNode)child)) {
        if (sortedByPosition) {
          if (descriptorChildren == null) {
            descriptorChildren=new ArrayList<>();
          }
          descriptorChildren.add(((ProblemDescriptionNode)child).getDescriptor());
        }
 else {
          descriptors.add(((ProblemDescriptionNode)child).getDescriptor());
        }
      }
    }
 else {
      processChildDescriptorsDeep((InspectionTreeNode)child,descriptors,sortedByPosition,readOnlyFilesSink);
    }
  }
  if (descriptorChildren != null) {
    if (descriptorChildren.size() > 1) {
      Collections.sort(descriptorChildren,DESCRIPTOR_COMPARATOR);
    }
    if (readOnlyFilesSink != null) {
      checkDescriptorsFileIsWritable(descriptorChildren,readOnlyFilesSink);
    }
    descriptors.addAll(descriptorChildren);
  }
}
