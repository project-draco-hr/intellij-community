{
  JPanel findOptionsPanel=new JPanel();
  findOptionsPanel.setBorder(IdeBorderFactory.createTitledBorder(FindBundle.message("find.options.group"),true));
  findOptionsPanel.setLayout(new BoxLayout(findOptionsPanel,BoxLayout.Y_AXIS));
  myCbCaseSensitive=createCheckbox(FindBundle.message("find.options.case.sensitive"));
  findOptionsPanel.add(myCbCaseSensitive);
  myCbPreserveCase=createCheckbox(FindBundle.message("find.options.replace.preserve.case"));
  findOptionsPanel.add(myCbPreserveCase);
  myCbPreserveCase.setVisible(myModel.isReplaceState());
  myCbWholeWordsOnly=createCheckbox(FindBundle.message("find.options.whole.words.only"));
  findOptionsPanel.add(myCbWholeWordsOnly);
  myCbRegularExpressions=createCheckbox(FindBundle.message("find.options.regular.expressions"));
  final JPanel regExPanel=new JPanel();
  regExPanel.setAlignmentX(Component.LEFT_ALIGNMENT);
  regExPanel.setLayout(new BoxLayout(regExPanel,BoxLayout.X_AXIS));
  regExPanel.add(myCbRegularExpressions);
  regExPanel.add(RegExHelpPopup.createRegExLink("[Help]",regExPanel,LOG));
  findOptionsPanel.add(regExPanel);
  mySearchContext=new ComboBox(new Object[]{FindBundle.message("find.context.anywhere.scope.label",200),FindBundle.message("find.context.in.comments.scope.label"),FindBundle.message("find.context.in.literals.scope.label"),FindBundle.message("find.context.except.comments.scope.label"),FindBundle.message("find.context.except.literals.scope.label"),FindBundle.message("find.context.except.comments.and.literals.scope.label")});
  final JPanel searchContextPanel=new JPanel(new GridBagLayout());
  searchContextPanel.setAlignmentX(Component.LEFT_ALIGNMENT);
  GridBagConstraints gbConstraints=new GridBagConstraints();
  gbConstraints.fill=GridBagConstraints.HORIZONTAL;
  gbConstraints.anchor=GridBagConstraints.WEST;
  gbConstraints.gridx=0;
  gbConstraints.gridy=0;
  gbConstraints.gridwidth=1;
  gbConstraints.weightx=1;
  JLabel searchContextLabel=new JLabel(FindBundle.message("find.context.combo.label"));
  searchContextLabel.setLabelFor(mySearchContext);
  searchContextPanel.add(searchContextLabel,gbConstraints);
  ++gbConstraints.gridx;
  searchContextPanel.add(mySearchContext,gbConstraints);
  if (FindManagerImpl.ourHasSearchInCommentsAndLiterals) {
    findOptionsPanel.add(searchContextPanel);
  }
  ActionListener actionListener=new ActionListener(){
    @Override public void actionPerformed(    ActionEvent e){
      updateControls();
    }
  }
;
  myCbRegularExpressions.addActionListener(actionListener);
  myCbRegularExpressions.addItemListener(new ItemListener(){
    @Override public void itemStateChanged(    final ItemEvent e){
      setupRegExpSetting();
    }
  }
);
  myCbCaseSensitive.addActionListener(actionListener);
  myCbPreserveCase.addActionListener(actionListener);
  return findOptionsPanel;
}
