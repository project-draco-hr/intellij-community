{
  comboBox.setEditable(true);
  comboBox.setMaximumRowCount(8);
  comboBox.addActionListener(new ActionListener(){
    @Override public void actionPerformed(    ActionEvent e){
      validateFindButton();
    }
  }
);
  Component editorComponent=comboBox.getEditor().getEditorComponent();
  if (editorComponent instanceof EditorTextField) {
    final EditorTextField etf=(EditorTextField)editorComponent;
    DocumentAdapter listener=new DocumentAdapter(){
      @Override public void documentChanged(      final DocumentEvent e){
        handleComboBoxValueChanged(comboBox);
      }
    }
;
    etf.addDocumentListener(listener);
    myComboBoxListeners.put(etf,listener);
  }
 else {
    editorComponent.addKeyListener(new KeyAdapter(){
      @Override public void keyReleased(      KeyEvent e){
        handleComboBoxValueChanged(comboBox);
      }
    }
);
  }
  if (!myModel.isReplaceState()) {
    makeResultsPreviewActionOverride(comboBox,KeyStroke.getKeyStroke(KeyEvent.VK_UP,0),"choosePrevious",new Runnable(){
      @Override public void run(){
        int row=myResultsPreviewTable.getSelectedRow();
        if (row > 0)         myResultsPreviewTable.setRowSelectionInterval(row - 1,row - 1);
        TableUtil.scrollSelectionToVisible(myResultsPreviewTable);
      }
    }
);
    makeResultsPreviewActionOverride(comboBox,KeyStroke.getKeyStroke(KeyEvent.VK_DOWN,0),"chooseNext",new Runnable(){
      @Override public void run(){
        int row=myResultsPreviewTable.getSelectedRow();
        if (row >= 0 && row + 1 < myResultsPreviewTable.getRowCount()) {
          myResultsPreviewTable.setRowSelectionInterval(row + 1,row + 1);
          TableUtil.scrollSelectionToVisible(myResultsPreviewTable);
        }
      }
    }
);
    new AnAction(){
      @Override public void actionPerformed(      AnActionEvent e){
        if (myResultsPreviewTable != null && myContent.getSelectedIndex() == RESULTS_PREVIEW_TAB_INDEX) {
          navigateToSelectedUsage(myResultsPreviewTable);
        }
      }
    }
.registerCustomShortcutSet(CommonShortcuts.getEditSource(),comboBox);
  }
}
