{
  for (int i=0; i < threadCount / 8 + 1; i++) {
    final Ref<Throwable> exc=Ref.create(null);
    int N=8;
    final CountDownLatch reads=new CountDownLatch(N);
    List<Thread> threads=ContainerUtil.map(Collections.nCopies(N,""),new Function<String,Thread>(){
      @Override public Thread fun(      String s){
        return new Thread("dom concurrency"){
          @Override public void run(){
            try {
              runnable.run();
            }
 catch (            Throwable e) {
              exc.set(e);
            }
 finally {
              reads.countDown();
            }
          }
        }
;
      }
    }
);
    ContainerUtil.process(threads,new Processor<Thread>(){
      @Override public boolean process(      Thread thread){
        thread.start();
        return true;
      }
    }
);
    reads.await();
    if (!exc.isNull()) {
      throw exc.get();
    }
    for (    Thread thread : threads) {
      thread.join();
    }
  }
}
