{
  PsiBuilder.Marker marker=builder.mark();
  if (!ParserUtils.getToken(builder,GroovyTokenTypes.mLBRACK,GroovyBundle.message("lbrack.expected"))) {
    marker.drop();
    return GroovyElementTypes.WRONGWAY;
  }
  if (ParserUtils.getToken(builder,GroovyTokenTypes.mRBRACK)) {
    marker.done(GroovyElementTypes.LIST_OR_MAP);
    return GroovyElementTypes.LIST_OR_MAP;
  }
 else   if (ParserUtils.getToken(builder,GroovyTokenTypes.mCOLON)) {
    ParserUtils.getToken(builder,GroovyTokenTypes.mRBRACK,GroovyBundle.message("rbrack.expected"));
  }
 else {
    ArgumentList.parseArgumentList(builder,GroovyTokenTypes.mRBRACK,parser);
    ParserUtils.getToken(builder,GroovyTokenTypes.mNLS);
    ParserUtils.getToken(builder,GroovyTokenTypes.mRBRACK,GroovyBundle.message("rbrack.expected"));
  }
  marker.done(GroovyElementTypes.LIST_OR_MAP);
  return GroovyElementTypes.LIST_OR_MAP;
}
