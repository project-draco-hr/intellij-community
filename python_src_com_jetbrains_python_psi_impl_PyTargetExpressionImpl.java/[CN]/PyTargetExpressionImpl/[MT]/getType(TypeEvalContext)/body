{
  if (!TypeEvalStack.mayEvaluate(this)) {
    return null;
  }
  try {
    if (getParent() instanceof PyAssignmentStatement) {
      final PyAssignmentStatement assignmentStatement=(PyAssignmentStatement)getParent();
      final PyExpression assignedValue=assignmentStatement.getAssignedValue();
      if (assignedValue != null) {
        if (assignedValue instanceof PyReferenceExpression) {
          final PyReferenceExpression refex=(PyReferenceExpression)assignedValue;
          PyType maybe_type=PyUtil.getSpecialAttributeType(refex);
          if (maybe_type != null)           return maybe_type;
          final PsiElement resolveResult=refex.getReference().resolve();
          if (resolveResult == this) {
            return null;
          }
          return PyReferenceExpressionImpl.getTypeFromTarget(resolveResult,context,null);
        }
        return assignedValue.getType(context);
      }
    }
    if (getParent() instanceof PyTupleExpression) {
      return getTypeFromTupleAssignment(context);
    }
    return null;
  }
  finally {
    TypeEvalStack.evaluated(this);
  }
}
