{
  PyType result=null;
  if (iterableType instanceof PyCollectionType) {
    result=((PyCollectionType)iterableType).getElementType(context);
    if (iterableType instanceof PyClassType) {
      final PyClass cls=((PyClassType)iterableType).getPyClass();
      if (result instanceof PyTupleType && PyABCUtil.isSubclass(cls,PyNames.MAPPING)) {
        final PyTupleType mappingType=(PyTupleType)result;
        if (mappingType.getElementCount() == 2) {
          result=mappingType.getElementType(0);
        }
      }
    }
  }
 else   if (iterableType instanceof PyUnionType) {
    final Collection<PyType> members=((PyUnionType)iterableType).getMembers();
    final List<PyType> iterationTypes=new ArrayList<PyType>();
    for (    PyType member : members) {
      iterationTypes.add(getIterationType(member,source,context));
    }
    return PyUnionType.union(iterationTypes);
  }
 else   if (iterableType instanceof PyClassType) {
    final PyClass pyClass=((PyClassType)iterableType).getPyClass();
    if (PyABCUtil.isSubclass(pyClass,PyNames.ITERATOR)) {
      final PyFunction iterateMethod=pyClass.findMethodByName(PyNames.ITER,true);
      PyType iterateMethodType=null;
      if (iterateMethod != null) {
        iterateMethodType=getContextSensitiveType(iterateMethod,context,source);
      }
      if (iterateMethodType instanceof PyCollectionType) {
        final PyCollectionType collectionType=(PyCollectionType)iterateMethodType;
        result=collectionType.getElementType(context);
      }
      if (result == null) {
        PyFunction next=pyClass.findMethodByName(PyNames.NEXT,true);
        if (next == null) {
          next=pyClass.findMethodByName(PyNames.DUNDER_NEXT,true);
        }
        if (next != null) {
          result=getContextSensitiveType(next,context,source);
        }
      }
      if (result == null) {
        final PyFunction getItem=pyClass.findMethodByName(PyNames.GETITEM,true);
        if (getItem != null) {
          result=getContextSensitiveType(getItem,context,source);
        }
      }
    }
  }
  return result;
}
