{
  super.setupEditorDefault(editor);
  if (editor == getConsoleEditor()) {
    editor.getSettings().setAdditionalLinesCount(1);
  }
 else   if (gutterContentProvider != null) {
    JScrollPane scrollPane=editor.getScrollPane();
    JPanel panel=new GutteredEditorPanel(editor);
    final ConsoleIconGutterComponent lineStartGutter=new ConsoleIconGutterComponent(editor,gutterContentProvider);
    panel.add(lineStartGutter,BorderLayout.LINE_START);
    panel.add(scrollPane.getViewport().getView(),BorderLayout.CENTER);
    final ConsoleGutterComponent lineEndGutter=new ConsoleGutterComponent(editor,gutterContentProvider);
    panel.add(lineEndGutter,BorderLayout.LINE_END);
    scrollPane.setViewportView(panel);
    getProject().getMessageBus().connect(this).subscribe(DocumentBulkUpdateListener.TOPIC,new DocumentBulkUpdateListener.Adapter(){
      @Override public void updateFinished(      @NotNull Document document){
        if (document.getTextLength() == 0) {
          gutterContentProvider.documentCleared(getHistoryViewer());
        }
        lineStartGutter.updateSize();
        lineEndGutter.updateSize();
      }
    }
);
    editor.getDocument().addDocumentListener(new DocumentAdapter(){
      @Override public void documentChanged(      DocumentEvent event){
        EditorEx editor=getHistoryViewer();
        DocumentEx document=editor.getDocument();
        if (document.isInBulkUpdate()) {
          return;
        }
        if (document.getTextLength() > 0) {
          int startDocLine=document.getLineNumber(event.getOffset());
          int endDocLine=document.getLineNumber(event.getOffset() + event.getNewLength());
          if (event.getOldLength() > event.getNewLength() || startDocLine != endDocLine || StringUtil.indexOf(event.getOldFragment(),'\n') != -1) {
            lineStartGutter.updateSize();
            lineEndGutter.updateSize();
          }
        }
 else         if (event.getOldLength() > 0) {
          gutterContentProvider.documentCleared(editor);
        }
      }
    }
);
  }
}
