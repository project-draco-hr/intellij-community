{
  super.setupEditorDefault(editor);
  if (editor == getConsoleEditor()) {
    editor.getSettings().setAdditionalLinesCount(1);
  }
 else   if (gutterContentProvider != null) {
    final ConsoleIconGutterComponent lineStartGutter=new ConsoleIconGutterComponent(editor,gutterContentProvider);
    final ConsoleGutterComponent lineEndGutter=new ConsoleGutterComponent(editor,gutterContentProvider);
    JLayeredPane layeredPane=new JBLayeredPane(){
      @Override public Dimension getPreferredSize(){
        Dimension editorSize=getEditorComponent().getPreferredSize();
        return new Dimension(lineStartGutter.getPreferredSize().width + editorSize.width,editorSize.height);
      }
      @Override public Dimension getMinimumSize(){
        Dimension editorSize=getEditorComponent().getMinimumSize();
        return new Dimension(lineStartGutter.getPreferredSize().width + editorSize.width,editorSize.height);
      }
      @Override public void doLayout(){
        EditorComponentImpl editor=getEditorComponent();
        int w=getWidth();
        int h=getHeight();
        Dimension lineStartGutterDimension=lineStartGutter.getPreferredSize();
        lineStartGutter.setBounds(0,0,lineStartGutterDimension.width,h);
        editor.setBounds(lineStartGutterDimension.width,0,w - lineStartGutterDimension.width,h);
        Dimension lineEndGutterDimension=lineEndGutter.getPreferredSize();
        lineEndGutter.setBounds(w - lineEndGutterDimension.width - editor.getEditor().getScrollPane().getVerticalScrollBar().getWidth(),0,lineEndGutterDimension.width,h);
      }
      @NotNull private EditorComponentImpl getEditorComponent(){
        for (int i=getComponentCount() - 1; i >= 0; i--) {
          Component component=getComponent(i);
          if (component instanceof EditorComponentImpl) {
            return (EditorComponentImpl)component;
          }
        }
        throw new IllegalStateException();
      }
    }
;
    layeredPane.add(lineStartGutter,JLayeredPane.DEFAULT_LAYER);
    JScrollPane scrollPane=editor.getScrollPane();
    layeredPane.add(scrollPane.getViewport().getView(),JLayeredPane.DEFAULT_LAYER);
    layeredPane.add(lineEndGutter,JLayeredPane.PALETTE_LAYER);
    scrollPane.setViewportView(layeredPane);
    GutterUpdateScheduler gutterUpdateScheduler=new GutterUpdateScheduler(lineStartGutter,lineEndGutter);
    getProject().getMessageBus().connect(this).subscribe(DocumentBulkUpdateListener.TOPIC,gutterUpdateScheduler);
    editor.getDocument().addDocumentListener(gutterUpdateScheduler);
  }
}
