{
  final List<ContentFolder> excluded=new ArrayList<ContentFolder>();
  final SourceFolder[] sourceFolders=getContentEntry().getSourceFolders();
  MultiMap<JpsModuleSourceRootType<?>,SourceFolder> folderByType=new MultiMap<JpsModuleSourceRootType<?>,SourceFolder>();
  for (  SourceFolder folder : sourceFolders) {
    if (folder.isSynthetic()) {
      continue;
    }
    final VirtualFile folderFile=folder.getFile();
    if (folderFile != null && (isExcluded(folderFile) || isUnderExcludedDirectory(folderFile))) {
      continue;
    }
    folderByType.putValue(folder.getRootType(),folder);
  }
  final ExcludeFolder[] excludeFolders=getContentEntry().getExcludeFolders();
  for (  final ExcludeFolder excludeFolder : excludeFolders) {
    if (!excludeFolder.isSynthetic()) {
      excluded.add(excludeFolder);
    }
  }
  Insets insets=new Insets(0,0,10,0);
  GridBagConstraints constraints=new GridBagConstraints(0,GridBagConstraints.RELATIVE,1,1,1.0,0.0,GridBagConstraints.NORTH,GridBagConstraints.HORIZONTAL,insets,0,0);
  for (  ModuleSourceRootEditHandler<?> editor : myModuleSourceRootEditHandlers) {
    Collection<SourceFolder> folders=folderByType.get(editor.getRootType());
    if (folders.isEmpty())     continue;
    ContentFolder[] foldersArray=folders.toArray(new ContentFolder[folders.size()]);
    final JComponent sourcesComponent=createFolderGroupComponent(editor.getRootsGroupTitle(),foldersArray,editor.getRootsGroupColor(),editor);
    add(sourcesComponent,constraints);
  }
  if (!excluded.isEmpty()) {
    final JComponent excludedComponent=createFolderGroupComponent(ProjectBundle.message("module.paths.excluded.group"),excluded.toArray(new ContentFolder[excluded.size()]),EXCLUDED_COLOR,null);
    this.add(excludedComponent,constraints);
  }
}
