{
  rebuild();
  for (  FoldingListener listener : myListeners) {
    listener.onFoldProcessingEnd();
  }
  myEditor.updateCaretCursor();
  myEditor.recalculateSizeAndRepaint();
  if (myEditor.getGutterComponentEx().isFoldingOutlineShown()) {
    myEditor.getGutterComponentEx().repaint();
  }
  LogicalPosition caretPosition=myEditor.getCaretModel().getLogicalPosition();
  if (caretPosition.visualPositionAware) {
    caretPosition=new LogicalPosition(caretPosition.line,caretPosition.column);
  }
  int caretOffset=myEditor.logicalPositionToOffset(caretPosition);
  int selectionStart=myEditor.getSelectionModel().getSelectionStart();
  int selectionEnd=myEditor.getSelectionModel().getSelectionEnd();
  int column=-1;
  int line=-1;
  int offsetToUse=-1;
  FoldRegion collapsed=myFoldTree.fetchOutermost(caretOffset);
  if (myCaretPositionSaved) {
    int savedOffset=myEditor.logicalPositionToOffset(new LogicalPosition(mySavedCaretY,mySavedCaretX));
    FoldRegion collapsedAtSaved=myFoldTree.fetchOutermost(savedOffset);
    if (collapsedAtSaved == null) {
      column=mySavedCaretX;
      line=mySavedCaretY;
    }
 else {
      offsetToUse=collapsedAtSaved.getStartOffset();
    }
  }
  if (collapsed != null && column == -1) {
    line=collapsed.getDocument().getLineNumber(collapsed.getStartOffset());
    column=myEditor.offsetToLogicalPosition(collapsed.getStartOffset()).column;
  }
  boolean oldCaretPositionSaved=myCaretPositionSaved;
  if (moveCaretFromCollapsedRegion && myEditor.getCaretModel().isUpToDate()) {
    if (offsetToUse >= 0) {
      myEditor.getCaretModel().moveToOffset(offsetToUse);
    }
 else     if (column != -1) {
      myEditor.getCaretModel().moveToLogicalPosition(new LogicalPosition(line,column));
    }
 else {
      myEditor.getCaretModel().moveToLogicalPosition(caretPosition);
    }
  }
  myCaretPositionSaved=oldCaretPositionSaved;
  if (isOffsetInsideCollapsedRegion(selectionStart) || isOffsetInsideCollapsedRegion(selectionEnd)) {
    myEditor.getSelectionModel().removeSelection();
  }
 else   if (selectionStart < myEditor.getDocument().getTextLength()) {
    myEditor.getSelectionModel().setSelection(selectionStart,selectionEnd);
  }
  if (mySavedCaretShift > 0) {
    final ScrollingModel scrollingModel=myEditor.getScrollingModel();
    scrollingModel.disableAnimation();
    scrollingModel.scrollVertically(myEditor.visibleLineToY(myEditor.getCaretModel().getVisualPosition().line) - mySavedCaretShift);
    scrollingModel.enableAnimation();
  }
}
