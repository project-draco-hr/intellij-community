{
  super(createScopeNodeName(scope));
  this.scope=scope;
  this.callFrame=callFrame;
  if (callFrame == null) {
    this.context=new VariableContextBase(){
      @NotNull @Override public EvaluateContext getEvaluateContext(){
        return context.getEvaluateContext();
      }
      @NotNull @Override public DebugProcessEx getDebugProcess(){
        return context.getDebugProcess();
      }
      @Override public boolean watchableAsEvaluationExpression(){
        return scope.getType() == Scope.Type.GLOBAL;
      }
    }
;
  }
 else {
    this.context=context;
  }
}
