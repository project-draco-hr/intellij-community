{
  final Ref<ActionLink> actionLinkRef=new Ref<>();
  final JComponent panel=createActionLink("Events",AllIcons.Ide.Notification.NoEvents,actionLinkRef,new AnAction(){
    @Override public void actionPerformed(    @NotNull AnActionEvent e){
      ((WelcomeBalloonLayoutImpl)myBalloonLayout).showPopup();
    }
  }
);
  panel.setVisible(false);
  myEventListener=new ParameterizedRunnable<List<NotificationType>>(){
    @Override public void run(    List<NotificationType> types){
      NotificationType type=null;
      for (      NotificationType t : types) {
        if (NotificationType.ERROR == t) {
          type=NotificationType.ERROR;
          break;
        }
        if (NotificationType.WARNING == t) {
          type=NotificationType.WARNING;
        }
 else         if (type == null && NotificationType.INFORMATION == t) {
          type=NotificationType.INFORMATION;
        }
      }
      actionLinkRef.get().setIcon(IdeNotificationArea.createIconWithNotificationCount(actionLinkRef.get(),type,types.size()));
      panel.setVisible(true);
    }
  }
;
  myEventLocation=new Computable<Point>(){
    @Override public Point compute(){
      Point location=SwingUtilities.convertPoint(panel,0,0,getRootPane().getLayeredPane());
      return new Point(location.x,location.y + 5);
    }
  }
;
  return panel;
}
