{
  comp.setBorder(new EmptyBorder(6,2,6,2));
  comp.setFocusable(true);
  comp.setFocusTraversalKeysEnabled(true);
  comp.addKeyListener(new KeyAdapter(){
    @Override public void keyPressed(    KeyEvent e){
      final JList list=UIUtil.findComponentOfType(FlatWelcomeFrame.this.getComponent(),JList.class);
      if (e.getKeyCode() == KeyEvent.VK_ENTER) {
        action.actionPerformed(new AnActionEvent(e,DataManager.getInstance().getDataContext(),ActionPlaces.WELCOME_SCREEN,action.getTemplatePresentation().clone(),ActionManager.getInstance(),0));
      }
 else       if (e.getKeyCode() == prevKeyCode) {
        focusPrev(comp);
      }
 else       if (e.getKeyCode() == nextKeyCode) {
        focusNext(comp);
      }
 else       if (e.getKeyCode() == KeyEvent.VK_LEFT) {
        if (focusListOnLeft) {
          if (list != null) {
            list.requestFocus();
          }
        }
 else {
          focusPrev(comp);
        }
      }
 else       if (e.getKeyCode() == KeyEvent.VK_RIGHT && Arrays.asList("Configure","Get Help").contains(comp.getText())) {
        focusNext(comp);
      }
    }
  }
);
  comp.addFocusListener(new FocusListener(){
    @Override public void focusGained(    FocusEvent e){
      comp.setBorder(new CompoundBorder(new DottedBorder(new Insets(1,1,1,1),Gray._128),new EmptyBorder(5,1,5,1)));
    }
    @Override public void focusLost(    FocusEvent e){
      comp.setBorder(new EmptyBorder(6,2,6,2));
    }
  }
);
}
