{
  final PsiAnnotation annotation=AnnotationUtil.findAnnotation(aClass,TestDataPath.class.getName());
  if (annotation != null) {
    final Location parameterizedLocation=PsiMemberParameterizedLocation.getParameterizedLocation(aClass,"[" + fileName + "]",Parameterized.class.getName());
    if (parameterizedLocation != null) {
      return parameterizedLocation;
    }
    if (StringUtil.isJavaIdentifier(nameWithoutExtension)) {
      final PsiElementFactory elementFactory=JavaPsiFacade.getElementFactory(project);
      PsiMethod method=aClass.findMethodBySignature(elementFactory.createMethod("test" + nameWithoutExtension,PsiType.VOID),true);
      if (method != null) {
        return MethodLocation.elementInClass(method,aClass);
      }
      method=aClass.findMethodBySignature(elementFactory.createMethod("test" + StringUtil.capitalize(nameWithoutExtension),PsiType.VOID),true);
      if (method != null) {
        return MethodLocation.elementInClass(method,aClass);
      }
    }
    return new PsiLocation<PsiElement>(project,aClass);
  }
  return null;
}
