{
  return generator.createTypedefTypeBinding(getType(),new StandaloneTypeBinding.Target(){
    @Override public BoxableType resolve(    final ResolveContext context){
      return new ListType(generator.generator.resolveType(items,new ResolveAndGenerateScope(){
        @Override public String getDomainName(){
          return generator.domain.domain();
        }
        @Override public TypeData.Direction getTypeDirection(){
          return TypeData.Direction.OUTPUT;
        }
        @Override public <T extends ItemDescriptor>TypeDescriptor resolveType(        T typedObject){
          throw new UnsupportedOperationException();
        }
        @Override public BoxableType generateNestedObject(        String description,        List<ProtocolMetaModel.ObjectProperty> properties){
          return context.generateNestedObject("Item",description,properties);
        }
      }
).getType());
    }
  }
,generator.generator.getNaming().outputTypedef,TypeData.Direction.OUTPUT);
}
