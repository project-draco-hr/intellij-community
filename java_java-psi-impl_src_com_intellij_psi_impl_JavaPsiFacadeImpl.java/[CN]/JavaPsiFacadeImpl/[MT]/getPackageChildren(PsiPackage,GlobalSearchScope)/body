{
  Map<String,PsiNamedElement> result=new HashMap<String,PsiNamedElement>();
  Predicate<PsiNamedElement> filter=null;
  for (  PsiElementFinder finder : filteredFinders()) {
    Predicate<PsiNamedElement> finderFilter=finder.getPackageChildrenFilter(psiPackage,scope);
    if (finderFilter != null) {
      if (filter == null) {
        filter=finderFilter;
      }
 else       if (filter instanceof AndPredicate) {
        ((AndPredicate)filter).myComponents.add(finderFilter);
      }
 else {
        filter=new AndPredicate(filter,finderFilter);
      }
    }
  }
  for (  PsiElementFinder finder : filteredFinders()) {
    PsiNamedElement[] children=finder.getChildren(psiPackage,scope);
    for (    PsiNamedElement child : children) {
      if (!result.containsKey(child.getName()) && (filter == null || filter.apply(child))) {
        result.put(child.getName(),child);
      }
    }
  }
  return result.values().toArray(new PsiElement[result.size()]);
}
