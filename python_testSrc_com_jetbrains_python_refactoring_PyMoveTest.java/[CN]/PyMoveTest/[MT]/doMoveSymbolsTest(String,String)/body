{
  String root="/refactoring/move/" + getTestName(true);
  String rootBefore=root + "/before/src";
  String rootAfter=root + "/after/src";
  VirtualFile dir1=myFixture.copyDirectoryToProject(rootBefore,"");
  PsiDocumentManager.getInstance(myFixture.getProject()).commitAllDocuments();
  final PsiNamedElement[] symbols=ContainerUtil.map2Array(symbolNames,PsiNamedElement.class,new Function<String,PsiNamedElement>(){
    @Override public PsiNamedElement fun(    String name){
      final PsiNamedElement found=findFirstNamedElement(name);
      assertNotNull(found);
      return found;
    }
  }
);
  VirtualFile toVirtualFile=dir1.findFileByRelativePath(toFileName);
  String path=toVirtualFile != null ? toVirtualFile.getPath() : (dir1.getPath() + "/" + toFileName);
  new PyMoveModuleMembersProcessor(myFixture.getProject(),symbols,path,false).run();
  VirtualFile dir2=getVirtualFileByName(PythonTestUtil.getTestDataPath() + rootAfter);
  try {
    PlatformTestUtil.assertDirectoriesEqual(dir2,dir1);
  }
 catch (  IOException e) {
    throw new RuntimeException(e);
  }
}
