{
  final Task.Backgroundable backgroundable=new Task.Backgroundable(project,"Generating skeletons for binary module",false){
    @Override public void run(    @NotNull ProgressIndicator indicator){
      indicator.setIndeterminate(true);
      List<String> assemblyRefs=collectAssemblyReferences(descriptor.getPsiElement().getContainingFile());
      try {
        final PySkeletonRefresher refresher=new PySkeletonRefresher(project,null,mySdk,null,null);
        if (needBinaryList(myQualifiedName)) {
          if (!generateSkeletonsForList(refresher,indicator))           return;
        }
 else {
          refresher.generateSkeleton(myQualifiedName,"",assemblyRefs,Consumer.EMPTY_CONSUMER);
        }
        final VirtualFile skeletonDir;
        skeletonDir=LocalFileSystem.getInstance().findFileByPath(refresher.getSkeletonsPath());
        if (skeletonDir != null) {
          skeletonDir.refresh(true,true);
        }
      }
 catch (      InvalidSdkException e) {
        LOG.error(e);
      }
    }
  }
;
  ProgressManager.getInstance().runProcessWithProgressAsynchronously(backgroundable,new BackgroundableProcessIndicator(backgroundable));
}
