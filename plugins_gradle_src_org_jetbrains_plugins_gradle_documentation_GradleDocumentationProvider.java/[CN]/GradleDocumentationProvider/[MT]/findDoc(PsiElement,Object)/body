{
  String result=null;
  if (element instanceof GrLiteral) {
    GrLiteral grLiteral=(GrLiteral)element;
    PsiElement stmt=PsiTreeUtil.findFirstParent(grLiteral,new Condition<PsiElement>(){
      @Override public boolean value(      PsiElement psiElement){
        return psiElement instanceof GrCall;
      }
    }
);
    if (stmt instanceof GrCall) {
      GrCall grCall=(GrCall)stmt;
      PsiMethod psiMethod=grCall.resolveMethod();
      if (psiMethod != null && psiMethod.getContainingClass() != null) {
        String qualifiedName=psiMethod.getContainingClass().getQualifiedName();
        if (grLiteral.getParent() instanceof GrNamedArgument) {
          GrNamedArgument namedArgument=(GrNamedArgument)grLiteral.getParent();
          String key=StringUtil.join(new String[]{"gradle.documentation",qualifiedName,psiMethod.getName(),namedArgument.getLabelName(),String.valueOf(argValue)},".");
          result=GradleDocumentationBundle.messageOrDefault(key,"");
        }
      }
    }
  }
  return result;
}
