{
  checkBuilt();
  NotNullLazyValue<List<SmartPsiElementPointer>> pointers=createPointersThunk(myLazy,project,evaluateAndForget(myTargets),myConverter);
  final boolean empty=isEmpty();
  if (myTooltipText == null && !myLazy) {
    final SortedSet<String> names=new TreeSet<String>();
    for (    T t : myTargets.getValue()) {
      final String text=myNamer.fun(t);
      if (text != null) {
        names.add(MessageFormat.format(PATTERN,text));
      }
    }
    @NonNls StringBuilder sb=new StringBuilder("<html><body>");
    if (myTooltipTitle != null) {
      sb.append(myTooltipTitle).append("<br>");
    }
    for (    String name : names) {
      sb.append(name).append("<br>");
    }
    sb.append("</body></html>");
    myTooltipText=sb.toString();
  }
  Computable<PsiElementListCellRenderer> renderer=myCellRenderer == null ? new Computable<PsiElementListCellRenderer>(){
    @Override public PsiElementListCellRenderer compute(){
      return new DefaultPsiElementCellRenderer();
    }
  }
 : myCellRenderer;
  return new MyNavigationGutterIconRenderer(this,myAlignment,myIcon,myTooltipText,pointers,renderer,empty);
}
