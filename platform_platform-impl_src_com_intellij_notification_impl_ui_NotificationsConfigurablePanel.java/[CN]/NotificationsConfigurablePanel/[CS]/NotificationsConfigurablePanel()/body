{
  setLayout(new BorderLayout());
  myTable=new NotificationsTable();
  boolean newSettings=ApplicationManager.getApplication().isInternal() && Registry.is("ide.new.settings.view");
  JScrollPane scrollPane=new JBScrollPane(myTable);
  scrollPane.setBorder(newSettings ? BorderFactory.createEmptyBorder() : new LineBorder(UIUtil.getBorderColor()));
  add(scrollPane,BorderLayout.CENTER);
  myDisplayBalloons=new JCheckBox("Display balloon notifications");
  myDisplayBalloons.setMnemonic('b');
  if (newSettings) {
    myDisplayBalloons.setBorder(BorderFactory.createEmptyBorder(5,5,5,5));
  }
  add(myDisplayBalloons,BorderLayout.NORTH);
  myDisplayBalloons.addActionListener(new ActionListener(){
    @Override public void actionPerformed(    ActionEvent e){
      myTable.repaint();
    }
  }
);
  myTable.getInputMap(WHEN_FOCUSED).put(KeyStroke.getKeyStroke(KeyEvent.VK_DELETE,0),REMOVE_KEY);
  myTable.getActionMap().put(REMOVE_KEY,new AbstractAction(){
    public void actionPerformed(    final ActionEvent e){
      removeSelected();
    }
  }
);
}
