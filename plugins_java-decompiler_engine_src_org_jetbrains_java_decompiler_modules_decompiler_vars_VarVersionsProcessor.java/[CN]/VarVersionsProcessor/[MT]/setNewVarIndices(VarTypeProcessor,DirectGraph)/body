{
  final Map<VarVersionPaar,VarType> mapExprentMaxTypes=typeProcessor.getMapExprentMaxTypes();
  Map<VarVersionPaar,VarType> mapExprentMinTypes=typeProcessor.getMapExprentMinTypes();
  Map<VarVersionPaar,Integer> mapFinalVars=typeProcessor.getMapFinalVars();
  CounterContainer counters=DecompilerContext.getCounterContainer();
  final Map<VarVersionPaar,Integer> mapVarPaar=new HashMap<VarVersionPaar,Integer>();
  Map<Integer,Integer> mapOriginalVarIndices=new HashMap<Integer,Integer>();
  Set<VarVersionPaar> set=new HashSet<VarVersionPaar>(mapExprentMinTypes.keySet());
  for (  VarVersionPaar pair : set) {
    if (pair.version >= 0) {
      int newIndex=pair.version == 1 ? pair.var : counters.getCounterAndIncrement(CounterContainer.VAR_COUNTER);
      VarVersionPaar newVar=new VarVersionPaar(newIndex,0);
      mapExprentMinTypes.put(newVar,mapExprentMinTypes.get(pair));
      mapExprentMaxTypes.put(newVar,mapExprentMaxTypes.get(pair));
      if (mapFinalVars.containsKey(pair)) {
        mapFinalVars.put(newVar,mapFinalVars.remove(pair));
      }
      mapVarPaar.put(pair,newIndex);
      mapOriginalVarIndices.put(newIndex,pair.var);
    }
  }
  graph.iterateExprents(new DirectGraph.ExprentIterator(){
    @Override public int processExprent(    Exprent exprent){
      List<Exprent> lst=exprent.getAllExprents(true);
      lst.add(exprent);
      for (      Exprent expr : lst) {
        if (expr.type == Exprent.EXPRENT_VAR) {
          VarExprent newVar=(VarExprent)expr;
          Integer newVarIndex=mapVarPaar.get(new VarVersionPaar(newVar));
          if (newVarIndex != null) {
            newVar.setIndex(newVarIndex);
            newVar.setVersion(0);
          }
        }
 else         if (expr.type == Exprent.EXPRENT_CONST) {
          VarType maxType=mapExprentMaxTypes.get(new VarVersionPaar(expr.id,-1));
          if (maxType != null && maxType.equals(VarType.VARTYPE_CHAR)) {
            ((ConstExprent)expr).setConstType(maxType);
          }
        }
      }
      return 0;
    }
  }
);
  this.mapOriginalVarIndices=mapOriginalVarIndices;
}
