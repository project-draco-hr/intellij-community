{
  Map<String,String> newNameToSearchPatternNameMap=myContext.getNewName2PatternNameMap();
  Map<String,PsiNamedElement> originalNamedElements=Collector.collectNamedElements(original);
  Map<String,PsiNamedElement> replacedNamedElements=Collector.collectNamedElements(replacement);
  if (originalNamedElements.size() == 0 && replacedNamedElements.size() == 0) {
    Replacer.handleComments(original,replacement,myContext);
    return;
  }
  Map<String,PsiNamedElement> searchedNamedElements=Collector.collectNamedElements(getCodeBlock());
  for (  String name : originalNamedElements.keySet()) {
    PsiNamedElement originalNamedElement=originalNamedElements.get(name);
    PsiNamedElement replacementNamedElement=replacedNamedElements.get(name);
    String key=newNameToSearchPatternNameMap.get(name);
    if (key == null)     key=name;
    PsiNamedElement searchedNamedElement=searchedNamedElements.get(key);
    if (replacementNamedElement == null && originalNamedElements.size() == 1 && replacedNamedElements.size() == 1) {
      replacementNamedElement=replacedNamedElements.entrySet().iterator().next().getValue();
    }
    PsiElement comment=null;
    if (originalNamedElement instanceof PsiDocCommentOwner) {
      comment=((PsiDocCommentOwner)originalNamedElement).getDocComment();
      if (comment == null) {
        PsiElement prevElement=originalNamedElement.getPrevSibling();
        if (prevElement instanceof PsiWhiteSpace) {
          prevElement=prevElement.getPrevSibling();
        }
        if (prevElement instanceof PsiComment) {
          comment=prevElement;
        }
      }
    }
    if (replacementNamedElement != null && searchedNamedElement != null) {
      Replacer.handleComments(originalNamedElement,replacementNamedElement,myContext);
    }
    if (comment != null && replacementNamedElement instanceof PsiDocCommentOwner && !(replacementNamedElement.getFirstChild() instanceof PsiDocComment)) {
      final PsiElement nextSibling=comment.getNextSibling();
      PsiElement prevSibling=comment.getPrevSibling();
      replacementNamedElement.addRangeBefore(prevSibling instanceof PsiWhiteSpace ? prevSibling : comment,nextSibling instanceof PsiWhiteSpace ? nextSibling : comment,replacementNamedElement.getFirstChild());
    }
    if (originalNamedElement instanceof PsiModifierListOwner && searchedNamedElement instanceof PsiModifierListOwner && replacementNamedElement instanceof PsiModifierListOwner) {
      copyModifiersAndAnnotations((PsiModifierListOwner)originalNamedElement,(PsiModifierListOwner)searchedNamedElement,(PsiModifierListOwner)replacementNamedElement);
    }
    if (originalNamedElement instanceof PsiMethod && searchedNamedElement instanceof PsiMethod && replacementNamedElement instanceof PsiMethod) {
      copyMethodBodyIfNotReplaced((PsiMethod)originalNamedElement,(PsiMethod)searchedNamedElement,(PsiMethod)replacementNamedElement);
    }
    if (originalNamedElement instanceof PsiClass && searchedNamedElement instanceof PsiClass && replacementNamedElement instanceof PsiClass) {
      final PsiClass originalClass=(PsiClass)originalNamedElement;
      final PsiClass queryClass=(PsiClass)searchedNamedElement;
      final PsiClass replacementClass=(PsiClass)replacementNamedElement;
      copyExtendsListIfNotReplaced(originalClass,queryClass,replacementClass);
      copyImplementsListIfNotReplaced(originalClass,queryClass,replacementClass);
      copyTypeParameterListIfNotReplaced(originalClass,queryClass,replacementClass);
    }
  }
}
