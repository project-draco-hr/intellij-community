{
  InvocationExprent invfor=new InvocationExprent();
  invfor.setName("forName");
  invfor.setClassname("java/lang/Class");
  invfor.setStringDescriptor("(Ljava/lang/String;)Ljava/lang/Class;");
  invfor.setDescriptor(MethodDescriptor.parseDescriptor("(Ljava/lang/String;)Ljava/lang/Class;"));
  invfor.setStatic(true);
  invfor.setLstParameters(Arrays.asList(new Exprent[]{new VarExprent(0,VarType.VARTYPE_STRING,null)}));
  bodyexprent=new ExitExprent(ExitExprent.EXIT_RETURN,invfor,VarType.VARTYPE_CLASS,null);
  InvocationExprent constr=new InvocationExprent();
  constr.setName(CodeConstants.INIT_NAME);
  constr.setClassname("java/lang/NoClassDefFoundError");
  constr.setStringDescriptor("()V");
  constr.setFunctype(InvocationExprent.TYP_INIT);
  constr.setDescriptor(MethodDescriptor.parseDescriptor("()V"));
  NewExprent newexpr=new NewExprent(new VarType(CodeConstants.TYPE_OBJECT,0,"java/lang/NoClassDefFoundError"),new ArrayList<Exprent>(),null);
  newexpr.setConstructor(constr);
  InvocationExprent invcause=new InvocationExprent();
  invcause.setName("initCause");
  invcause.setClassname("java/lang/NoClassDefFoundError");
  invcause.setStringDescriptor("(Ljava/lang/Throwable;)Ljava/lang/Throwable;");
  invcause.setDescriptor(MethodDescriptor.parseDescriptor("(Ljava/lang/Throwable;)Ljava/lang/Throwable;"));
  invcause.setInstance(newexpr);
  invcause.setLstParameters(Arrays.asList(new Exprent[]{new VarExprent(2,new VarType(CodeConstants.TYPE_OBJECT,0,"java/lang/ClassNotFoundException"),null)}));
  handlerexprent=new ExitExprent(ExitExprent.EXIT_THROW,invcause,null,null);
}
