{
  final PsiElement element=descriptor.getPsiElement();
  final PsiElement parent;
  if (element instanceof PsiReferenceExpression) {
    parent=element.getParent();
  }
 else {
    parent=element;
  }
  if (!(parent instanceof PsiAssignmentExpression))   return;
  final PsiExpression rExpression=((PsiAssignmentExpression)parent).getRExpression();
  final PsiElement gParent=parent.getParent();
  if ((gParent instanceof PsiExpression || gParent instanceof PsiExpressionList) && rExpression != null) {
    if (!FileModificationService.getInstance().prepareFileForWrite(gParent.getContainingFile()))     return;
    if (gParent instanceof PsiParenthesizedExpression) {
      gParent.replace(rExpression);
    }
 else {
      parent.replace(rExpression);
    }
    return;
  }
  PsiElement resolve=null;
  if (element instanceof PsiReferenceExpression) {
    resolve=((PsiReferenceExpression)element).resolve();
  }
 else {
    final PsiExpression lExpr=PsiUtil.deparenthesizeExpression(((PsiAssignmentExpression)parent).getLExpression());
    if (lExpr instanceof PsiReferenceExpression) {
      resolve=((PsiReferenceExpression)lExpr).resolve();
    }
  }
  if (!(resolve instanceof PsiVariable))   return;
  sideEffectAwareRemove(project,rExpression,parent,(PsiVariable)resolve);
}
