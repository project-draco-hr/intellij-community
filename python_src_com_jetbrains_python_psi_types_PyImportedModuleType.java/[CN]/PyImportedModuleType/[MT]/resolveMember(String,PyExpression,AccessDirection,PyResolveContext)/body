{
  final PsiElement resolved=myImportedModule.resolve();
  if (resolved instanceof PyFile) {
    final PyFile file=(PyFile)resolved;
    return new PyModuleType(file,myImportedModule).resolveMember(name,location,direction,resolveContext);
  }
 else   if (resolved instanceof PsiDirectory) {
    List<PsiElement> elements=Collections.singletonList(ResolveImportUtil.resolveChild(resolved,name,null,true,true));
    if (location != null && ResolveImportUtil.getPointInImport(location) == PointInImport.NONE) {
      final Set<PsiElement> imported=Sets.newHashSet(PyModuleType.collectImportedSubmodules((PsiDirectory)resolved,location));
      elements=ContainerUtil.filter(elements,new Condition<PsiElement>(){
        @Override public boolean value(        PsiElement element){
          return imported.contains(element);
        }
      }
);
    }
    return ResolveImportUtil.rateResults(elements);
  }
  return null;
}
