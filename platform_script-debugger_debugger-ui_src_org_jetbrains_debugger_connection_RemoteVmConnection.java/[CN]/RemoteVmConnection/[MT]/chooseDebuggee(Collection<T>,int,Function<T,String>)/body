{
  if (targets.size() == 1) {
    return Promise.resolve(ContainerUtil.getFirstItem(targets));
  }
  final AsyncPromise<T> result=new AsyncPromise<T>();
  ApplicationManager.getApplication().invokeLater(new Runnable(){
    @Override public void run(){
      final JBList list=new JBList(targets);
      list.setCellRenderer(new ColoredListCellRenderer(){
        @Override protected void customizeCellRenderer(        JList list,        Object value,        int index,        boolean selected,        boolean hasFocus){
          append(itemToString.fun((T)value));
        }
      }
);
      list.setSelectedIndex(selectedIndex);
      JBPopupFactory.getInstance().createListPopupBuilder(list).setTitle("Choose Page to debug").setItemChoosenCallback(new Runnable(){
        @Override public void run(){
          @SuppressWarnings("unchecked") T value=(T)list.getSelectedValue();
          if (value == null) {
            result.setError(null);
          }
 else {
            result.setResult(value);
          }
        }
      }
).createPopup().showInFocusCenter();
    }
  }
);
  return result;
}
