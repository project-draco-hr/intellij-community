{
  ensureEventDispatchThread();
  myErrorText=new ErrorText();
  myErrorText.setVisible(false);
  final ComponentAdapter resizeListener=new ComponentAdapter(){
    private int myHeight;
    @Override public void componentResized(    ComponentEvent event){
      int height=!myErrorText.isVisible() ? 0 : event.getComponent().getHeight();
      if (height != myHeight) {
        myHeight=height;
        myResizeInProgress=true;
        myErrorText.setMinimumSize(new Dimension(0,height));
        JRootPane root=myPeer.getRootPane();
        if (root != null) {
          root.validate();
        }
        if (myActualSize != null) {
          myPeer.setSize(myActualSize.width,myActualSize.height + height);
        }
        myErrorText.revalidate();
        myResizeInProgress=false;
      }
    }
  }
;
  myErrorText.myLabel.addComponentListener(resizeListener);
  Disposer.register(myDisposable,new Disposable(){
    @Override public void dispose(){
      myErrorText.myLabel.removeComponentListener(resizeListener);
    }
  }
);
  final JPanel root=new JPanel(createRootLayout());
  myPeer.setContentPane(root);
  final CustomShortcutSet sc=new CustomShortcutSet(SHOW_OPTION_KEYSTROKE);
  final AnAction toggleShowOptions=new NoTransactionAction(){
    @Override public void actionPerformed(    @NotNull AnActionEvent e){
      expandNextOptionButton();
    }
  }
;
  toggleShowOptions.registerCustomShortcutSet(sc,root,myDisposable);
  JComponent titlePane=createTitlePane();
  if (titlePane != null) {
    JPanel northSection=new JPanel(new BorderLayout());
    root.add(northSection,BorderLayout.NORTH);
    northSection.add(titlePane,BorderLayout.CENTER);
  }
  JComponent centerSection=new JPanel(new BorderLayout());
  root.add(centerSection,BorderLayout.CENTER);
  root.setBorder(createContentPaneBorder());
  final JComponent n=createNorthPanel();
  if (n != null) {
    centerSection.add(n,BorderLayout.NORTH);
  }
  final JComponent c=createCenterPanel();
  if (c != null) {
    centerSection.add(c,BorderLayout.CENTER);
  }
  final JPanel southSection=new JPanel(new BorderLayout());
  root.add(southSection,BorderLayout.SOUTH);
  southSection.add(myErrorText,BorderLayout.CENTER);
  final JComponent south=createSouthPanel();
  if (south != null) {
    southSection.add(south,BorderLayout.SOUTH);
  }
  MnemonicHelper.init(root);
  if (!postponeValidation()) {
    startTrackingValidation();
  }
  if (SystemInfo.isWindows) {
    installEnterHook(root,myDisposable);
  }
  myErrorTextAlarm.setActivationComponent(root);
}
