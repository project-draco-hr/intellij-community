{
  PsiBuilder.Marker ebMarker=builder.mark();
  if (!ParserUtils.getToken(builder,GroovyTokenTypes.mLCURLY)) {
    ebMarker.rollbackTo();
    return GroovyElementTypes.WRONGWAY;
  }
  ParserUtils.getToken(builder,GroovyTokenTypes.mNLS);
  if (EnumConstant.parseConstantList(builder,parser)) {
    if (!ParserUtils.lookAhead(builder,GroovyTokenTypes.mRCURLY)) {
      ParserUtils.getToken(builder,TokenSet.create(GroovyTokenTypes.mNLS,GroovyTokenTypes.mSEMI),GroovyBundle.message("separator.or.rcurly.expected"));
    }
  }
  parseMembers(builder,enumName,parser,false);
  ParserUtils.getToken(builder,GroovyTokenTypes.mRCURLY,GroovyBundle.message("rcurly.expected"));
  ebMarker.done(GroovyElementTypes.ENUM_BODY);
  return GroovyElementTypes.ENUM_BODY;
}
