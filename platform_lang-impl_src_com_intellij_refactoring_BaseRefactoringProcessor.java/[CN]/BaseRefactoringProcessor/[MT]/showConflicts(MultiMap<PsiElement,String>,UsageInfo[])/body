{
  if (!conflicts.isEmpty() && ApplicationManager.getApplication().isUnitTestMode()) {
    throw new ConflictsInTestsException(conflicts.values());
  }
  if (myPrepareSuccessfulSwingThreadCallback != null && !conflicts.isEmpty()) {
    final String refactoringId=getRefactoringId();
    if (refactoringId != null) {
      RefactoringEventData conflictUsages=new RefactoringEventData();
      conflictUsages.putUserData(RefactoringEventData.CONFLICTS_KEY,conflicts.values());
      myProject.getMessageBus().syncPublisher(RefactoringEventListener.REFACTORING_EVENT_TOPIC).conflictsDetected(refactoringId,conflictUsages);
    }
    final ConflictsDialog conflictsDialog=prepareConflictsDialog(conflicts,usages);
    conflictsDialog.show();
    if (!conflictsDialog.isOK()) {
      if (conflictsDialog.isShowConflicts())       prepareSuccessful();
      return false;
    }
  }
  prepareSuccessful();
  return true;
}
