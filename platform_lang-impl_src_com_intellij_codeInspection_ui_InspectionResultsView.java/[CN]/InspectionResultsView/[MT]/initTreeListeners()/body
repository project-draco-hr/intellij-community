{
  myTree.getSelectionModel().addTreeSelectionListener(new TreeSelectionListener(){
    @Override public void valueChanged(    TreeSelectionEvent e){
      if (myTree.isUnderQueueUpdate())       return;
      syncRightPanel();
      if (isAutoScrollMode()) {
        OpenSourceUtil.openSourcesFrom(DataManager.getInstance().getDataContext(InspectionResultsView.this),false);
      }
    }
  }
);
  EditSourceOnDoubleClickHandler.install(myTree);
  myTree.addKeyListener(new KeyAdapter(){
    @Override public void keyPressed(    KeyEvent e){
      if (e.getKeyCode() == KeyEvent.VK_ENTER) {
        OpenSourceUtil.openSourcesFrom(DataManager.getInstance().getDataContext(InspectionResultsView.this),false);
      }
    }
  }
);
  PopupHandler.installPopupHandler(myTree,IdeActions.INSPECTION_TOOL_WINDOW_TREE_POPUP,ActionPlaces.CODE_INSPECTION);
  SmartExpander.installOn(myTree);
}
