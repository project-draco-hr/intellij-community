{
  if (myTree.getSelectionModel().getSelectionCount() != 1) {
  }
 else {
    TreePath pathSelected=myTree.getSelectionModel().getLeadSelectionPath();
    if (pathSelected != null) {
      final InspectionTreeNode node=(InspectionTreeNode)pathSelected.getLastPathComponent();
      if (node instanceof RefElementNode) {
        final RefElementNode refElementNode=(RefElementNode)node;
        final CommonProblemDescriptor problem=refElementNode.getProblem();
        final RefEntity refSelected=refElementNode.getElement();
        if (node.isLeaf()) {
          LOG.assertTrue(problem != null);
          showInBrowser(refSelected,BatchProblemDescriptor.single(problem));
        }
 else {
          showInBrowser(refSelected,node.accumulateProblemInfo(new BatchProblemDescriptor(false)));
        }
      }
 else       if (node instanceof ProblemDescriptionNode) {
        final ProblemDescriptionNode problemNode=(ProblemDescriptionNode)node;
        showInBrowser(problemNode.getElement(),BatchProblemDescriptor.single(problemNode.getDescriptor()));
      }
 else       if (node instanceof InspectionNode) {
        showInBrowser(null,node.accumulateProblemInfo(new BatchProblemDescriptor(false)));
      }
 else {
        mySplitter.setSecondComponent(new JPanel());
      }
    }
  }
}
