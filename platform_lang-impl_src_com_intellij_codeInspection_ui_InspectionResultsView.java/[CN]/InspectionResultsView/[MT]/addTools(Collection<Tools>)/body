{
synchronized (myTreeStructureUpdateLock) {
    InspectionProfileImpl profile=(InspectionProfileImpl)myInspectionProfile;
    boolean isGroupedBySeverity=myGlobalInspectionContext.getUIOptions().GROUP_BY_SEVERITY;
    boolean singleInspectionRun=isSingleInspectionRun();
    for (    Tools currentTools : tools) {
      InspectionToolWrapper defaultToolWrapper=currentTools.getDefaultState().getTool();
      if (myGlobalInspectionContext.getUIOptions().FILTER_RESOLVED_ITEMS && myExcludedInspectionTreeNodesManager.containsInspectionNode(defaultToolWrapper)) {
        continue;
      }
      final HighlightDisplayKey key=HighlightDisplayKey.find(defaultToolWrapper.getShortName());
      for (      ScopeToolState state : myProvider.getTools(currentTools)) {
        InspectionToolWrapper toolWrapper=state.getTool();
        if (myProvider.checkReportedProblems(myGlobalInspectionContext,toolWrapper)) {
          addTool(toolWrapper,profile.getErrorLevel(key,state.getScope(myProject),myProject),isGroupedBySeverity,singleInspectionRun);
        }
      }
    }
  }
}
