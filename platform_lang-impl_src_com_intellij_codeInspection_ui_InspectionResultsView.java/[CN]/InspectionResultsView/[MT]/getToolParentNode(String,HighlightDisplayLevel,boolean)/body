{
  if (groupName.isEmpty()) {
    return getRelativeRootNode(groupedBySeverity,errorLevel);
  }
  ConcurrentMap<String,InspectionGroupNode> map=myGroups.get(errorLevel);
  if (map == null) {
    map=ConcurrencyUtil.cacheOrGet(myGroups,errorLevel,ContainerUtil.newConcurrentMap());
  }
  InspectionTreeNode group;
  if (groupedBySeverity) {
    group=map.get(groupName);
  }
 else {
    group=null;
    for (    Map<String,InspectionGroupNode> groupMap : myGroups.values()) {
      if ((group=groupMap.get(groupName)) != null)       break;
    }
  }
  if (group == null) {
    group=ConcurrencyUtil.cacheOrGet(map,groupName,new InspectionGroupNode(groupName,myProject));
    addChildAndUpdate(getRelativeRootNode(groupedBySeverity,errorLevel),group);
  }
  return group;
}
