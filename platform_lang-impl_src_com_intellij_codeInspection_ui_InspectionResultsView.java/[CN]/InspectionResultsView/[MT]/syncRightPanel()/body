{
  final Editor oldEditor=myPreviewEditor;
  final Collection<InspectionTreeNode> selectedElements=myTreeBuilder.getSelectedItems();
  if (selectedElements.size() == 1) {
    final InspectionTreeNode node=ContainerUtil.getFirstItem(selectedElements);
    if (node instanceof RefElementNode) {
      final RefElementNode refElementNode=(RefElementNode)node;
      final RefEntity refSelected=refElementNode.getRefElement();
      showInRightPanel(refSelected);
    }
 else     if (node instanceof ProblemDescriptionNode) {
      final ProblemDescriptionNode problemNode=(ProblemDescriptionNode)node;
      showInRightPanel(problemNode.getRefElement());
    }
 else     if (node instanceof InspectionNode || node instanceof InspectionPackageNode || node instanceof InspectionModuleNode) {
      showInRightPanel(null);
    }
 else     if (node instanceof InspectionRootNode || node instanceof InspectionGroupNode || node instanceof InspectionSeverityGroupNode) {
      mySplitter.setSecondComponent(new InspectionViewNavigationPanel(node,myTreeBuilder));
    }
 else {
      LOG.error("Unexpected node: " + node.getClass());
    }
  }
 else {
    if (myTreeBuilder.getSelectedToolWrapper() == null) {
      final JLabel multipleSelectionLabel=new JBLabel(InspectionViewNavigationPanel.getTitleText(false,false));
      multipleSelectionLabel.setVerticalAlignment(SwingConstants.TOP);
      multipleSelectionLabel.setBorder(IdeBorderFactory.createEmptyBorder(5,7,0,0));
      mySplitter.setSecondComponent(multipleSelectionLabel);
    }
 else {
      showInRightPanel(myTreeBuilder.getCommonSelectedElement());
    }
  }
  if (oldEditor != null) {
    if (Boolean.TRUE.equals(oldEditor.getUserData(PREVIEW_EDITOR_IS_REUSED_KEY))) {
      oldEditor.putUserData(PREVIEW_EDITOR_IS_REUSED_KEY,null);
    }
 else {
      releaseEditor(oldEditor);
    }
  }
}
