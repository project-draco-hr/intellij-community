{
  final List<String> disabledPlugins=PluginManagerCore.getDisabledPlugins();
  if (disabledPlugins.contains(pluginId))   return;
  final PluginDownloader downloader=new PluginDownloader(pluginId,finalPluginUrl,pluginVersion,null,pluginName);
  final IdeaPluginDescriptor loadedPlugin=PluginManager.getPlugin(PluginId.getId(pluginId));
  if (loadedPlugin == null || pluginVersion == null || PluginDownloader.compareVersionsSkipBroken(loadedPlugin,pluginVersion) > 0) {
    if (isReadyToUpdate(pluginId,pluginVersion)) {
      if (downloader.prepareToInstall(progressIndicator,buildNumber)) {
        downloaded.put(PluginId.getId(pluginId),downloader);
        ourUpdatedPlugins.put(pluginId,downloader);
      }
    }
 else {
      final PluginDownloader oldDownloader=ourUpdatedPlugins.get(pluginId);
      if (oldDownloader != null) {
        downloaded.put(PluginId.getId(pluginId),oldDownloader);
      }
    }
  }
  if (loadedPlugin != null && !downloaded.containsKey(loadedPlugin.getPluginId())) {
    collectIncompatible(incompatiblePlugins,buildNumber,loadedPlugin);
  }
}
