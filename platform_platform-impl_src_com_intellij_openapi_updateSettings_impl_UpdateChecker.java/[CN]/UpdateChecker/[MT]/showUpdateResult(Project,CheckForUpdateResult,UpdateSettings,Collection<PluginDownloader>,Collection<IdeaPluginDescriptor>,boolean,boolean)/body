{
  final UpdateChannel channelToPropose=checkForUpdateResult.getChannelToPropose();
  final UpdateChannel updatedChannel=checkForUpdateResult.getUpdatedChannel();
  if (newChannelReady(channelToPropose)) {
    Runnable runnable=new Runnable(){
      @Override public void run(){
        new NewChannelDialog(channelToPropose).show();
      }
    }
;
    if (alwaysShowResults) {
      runnable.run();
    }
 else {
      String message=IdeBundle.message("updates.new.version.available",ApplicationNamesInfo.getInstance().getFullProductName());
      showNotification(project,message,false,runnable);
    }
  }
 else   if (updatedChannel != null) {
    Runnable runnable=new Runnable(){
      @Override public void run(){
        new UpdateInfoDialog(updatedChannel,enableLink,updateSettings.SECURE_CONNECTION,updatedPlugins,incompatiblePlugins).show();
      }
    }
;
    if (alwaysShowResults) {
      runnable.run();
    }
 else {
      String message=IdeBundle.message("updates.ready.message",ApplicationNamesInfo.getInstance().getFullProductName());
      showNotification(project,message,false,runnable);
    }
  }
 else   if (updatedPlugins != null && !updatedPlugins.isEmpty()) {
    Runnable runnable=new Runnable(){
      @Override public void run(){
        new PluginUpdateInfoDialog(updatedPlugins,enableLink).show();
      }
    }
;
    if (alwaysShowResults) {
      runnable.run();
    }
 else {
      String plugins=StringUtil.join(updatedPlugins,new Function<PluginDownloader,String>(){
        @Override public String fun(        PluginDownloader downloader){
          return downloader.getPluginName();
        }
      }
,", ");
      String message=IdeBundle.message("updates.plugins.ready.message",updatedPlugins.size(),plugins);
      showNotification(project,message,false,runnable);
    }
  }
 else   if (alwaysShowResults) {
    new NoUpdatesDialog(enableLink).show();
  }
}
