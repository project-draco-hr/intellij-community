{
  return new Task(){
    @NotNull String myRepoName=getRepoName();
    @Override public boolean isIssue(){
      return true;
    }
    @Override public String getIssueUrl(){
      return issue.getHtmlUrl();
    }
    @NotNull @Override public String getId(){
      return myRepoName + "-" + issue.getNumber();
    }
    @NotNull @Override public String getSummary(){
      return issue.getTitle();
    }
    public String getDescription(){
      return issue.getBody();
    }
    @NotNull @Override public Comment[] getComments(){
      try {
        return fetchComments(issue.getNumber());
      }
 catch (      Exception e) {
        LOG.warn("Error fetching comments for " + issue.getNumber(),e);
        return Comment.EMPTY_ARRAY;
      }
    }
    @NotNull @Override public Icon getIcon(){
      return TasksIcons.Github;
    }
    @NotNull @Override public TaskType getType(){
      return TaskType.BUG;
    }
    @Override public Date getUpdated(){
      return issue.getUpdatedAt();
    }
    @Override public Date getCreated(){
      return issue.getCreatedAt();
    }
    @Override public boolean isClosed(){
      return !"open".equals(issue.getState());
    }
    @Override public TaskRepository getRepository(){
      return GithubRepository.this;
    }
    @Override public String getPresentableName(){
      return getId() + ": " + getSummary();
    }
  }
;
}
