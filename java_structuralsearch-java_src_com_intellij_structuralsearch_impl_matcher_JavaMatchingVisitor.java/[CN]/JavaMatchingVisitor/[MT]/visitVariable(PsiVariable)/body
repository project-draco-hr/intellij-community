{
  myMatchingVisitor.getMatchContext().pushResult();
  final PsiIdentifier nameIdentifier=var.getNameIdentifier();
  final boolean isTypedVar=myMatchingVisitor.getMatchContext().getPattern().isTypedVar(nameIdentifier);
  final PsiVariable var2=(PsiVariable)myMatchingVisitor.getElement();
  try {
    myMatchingVisitor.setResult((myMatchingVisitor.matchText(var.getNameIdentifier(),var2.getNameIdentifier()) || isTypedVar) && myMatchingVisitor.match(var.getModifierList(),var2.getModifierList()));
    if (myMatchingVisitor.getResult()) {
      final PsiTypeElement typeElement1=var.getTypeElement();
      if (typeElement1 != null) {
        PsiTypeElement typeElement2=var2.getTypeElement();
        if (typeElement2 == null) {
          typeElement2=JavaPsiFacade.getElementFactory(var2.getProject()).createTypeElement(var2.getType());
        }
        myMatchingVisitor.setResult(myMatchingVisitor.match(typeElement1,typeElement2));
      }
    }
    if (myMatchingVisitor.getResult()) {
      final PsiExpression initializer=var.getInitializer();
      final PsiExpression var2Initializer=var2.getInitializer();
      myMatchingVisitor.setResult(myMatchingVisitor.match(initializer,var2Initializer));
    }
    if (myMatchingVisitor.getResult() && var instanceof PsiParameter && var.getParent() instanceof PsiCatchSection) {
      myMatchingVisitor.setResult(myMatchingVisitor.match(((PsiCatchSection)var.getParent()).getCatchBlock(),((PsiCatchSection)var2.getParent()).getCatchBlock()));
    }
  }
  finally {
    saveOrDropResult(nameIdentifier,isTypedVar,var2.getNameIdentifier());
  }
}
