{
  final PsiNameValuePair elementNameValuePair=(PsiNameValuePair)myMatchingVisitor.getElement();
  final PsiAnnotationMemberValue annotationInitializer=pair.getValue();
  if (annotationInitializer != null) {
    final boolean isTypedInitializer=myMatchingVisitor.getMatchContext().getPattern().isTypedVar(annotationInitializer) && annotationInitializer instanceof PsiReferenceExpression;
    myMatchingVisitor.setResult(myMatchingVisitor.match(annotationInitializer,elementNameValuePair.getValue()) || (isTypedInitializer && elementNameValuePair.getValue() == null && allowsAbsenceOfMatch(annotationInitializer)));
  }
  if (myMatchingVisitor.getResult()) {
    final PsiIdentifier nameIdentifier=pair.getNameIdentifier();
    final PsiIdentifier otherIdentifier=elementNameValuePair.getNameIdentifier();
    if (nameIdentifier == null) {
      myMatchingVisitor.setResult(otherIdentifier == null || otherIdentifier.getText().equals(PsiAnnotation.DEFAULT_REFERENCED_METHOD_NAME));
    }
 else {
      final MatchingHandler handler=myMatchingVisitor.getMatchContext().getPattern().getHandler(nameIdentifier);
      if (handler instanceof SubstitutionHandler) {
        myMatchingVisitor.setResult(((SubstitutionHandler)handler).handle(otherIdentifier,myMatchingVisitor.getMatchContext()));
      }
 else {
        myMatchingVisitor.setResult(myMatchingVisitor.match(nameIdentifier,otherIdentifier));
      }
    }
  }
}
