{
  if (usage instanceof PyQualifiedExpression) {
    PyQualifiedExpression expr=(PyQualifiedExpression)usage;
    if (oldElement instanceof PyClass && PyNames.INIT.equals(expr.getName())) {
      return false;
    }
    if (expr.isQualified()) {
      final PyElementGenerator generator=PyElementGenerator.getInstance(expr.getProject());
      final PyExpression generated=generator.createExpressionFromText(LanguageLevel.forElement(expr),expr.getName());
      final PsiElement newExpr=expr.replace(generated);
      PyClassRefactoringUtil.insertImport(newExpr,newElement,null,true);
    }
  }
  if (usage instanceof PyStringLiteralExpression) {
    for (    PsiReference ref : usage.getReferences()) {
      if (ref instanceof PyDunderAllReference) {
        usage.delete();
      }
 else {
        if (ref.isReferenceTo(oldElement)) {
          ref.bindToElement(newElement);
        }
      }
    }
  }
 else {
    final PyImportStatementBase importStmt=getImportStatementByElement(usage);
    if (importStmt != null) {
      PyClassRefactoringUtil.updateImportOfElement(importStmt,newElement);
    }
    final PsiFile usageFile=usage.getContainingFile();
    if (usageFile == oldElement.getContainingFile() && !PsiTreeUtil.isAncestor(oldElement,usage,false)) {
      PyClassRefactoringUtil.insertImport(oldElement,newElement);
    }
    if (resolvesToLocalStarImport(usage)) {
      PyClassRefactoringUtil.insertImport(usage,newElement);
      return usageFile != null;
    }
  }
  return false;
}
