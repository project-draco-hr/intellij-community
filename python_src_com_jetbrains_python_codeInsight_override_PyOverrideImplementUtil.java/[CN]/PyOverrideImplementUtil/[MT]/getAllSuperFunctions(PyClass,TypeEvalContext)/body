{
  final Map<String,PyFunction> superFunctions=new HashMap<String,PyFunction>();
  for (  PyFunction function : pyClass.getMethods(true)) {
    if (!superFunctions.containsKey(function.getName())) {
      superFunctions.put(function.getName(),function);
    }
  }
  final Set<PyFunction> functions=new HashSet<PyFunction>(superFunctions.values());
  final PyClassLikeType type=PyUtil.as(context.getType(pyClass),PyClassLikeType.class);
  if (type != null) {
    functions.addAll(PyTypeUtil.getMembersOfType(type,PyFunction.class,context));
  }
  return functions;
}
