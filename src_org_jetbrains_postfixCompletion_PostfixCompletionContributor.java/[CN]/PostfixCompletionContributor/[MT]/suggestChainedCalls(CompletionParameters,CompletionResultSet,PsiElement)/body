{
  PsiElement parent=position.getParent();
  if (!(parent instanceof PsiJavaCodeReferenceElement)) {
    return;
  }
  PsiElement qualifier=((PsiJavaCodeReferenceElement)parent).getQualifier();
  if (!(qualifier instanceof PsiJavaCodeReferenceElement) || ((PsiJavaCodeReferenceElement)qualifier).isQualified()) {
    return;
  }
  PsiElement target=((PsiJavaCodeReferenceElement)qualifier).resolve();
  if (target != null && !(target instanceof PsiPackage)) {
    return;
  }
  PsiFile file=position.getContainingFile();
  if (file instanceof PsiJavaCodeReferenceCodeFragment) {
    return;
  }
  String fullPrefix=parent.getText().substring(0,parameters.getOffset() - parent.getTextRange().getStartOffset());
  CompletionResultSet qualifiedCollector=result.withPrefixMatcher(fullPrefix);
  ElementFilter filter=JavaCompletionContributor.getReferenceFilter(position);
  for (  LookupElement base : suggestQualifierItems(parameters,(PsiJavaCodeReferenceElement)qualifier,filter)) {
    PsiType type=JavaCompletionUtil.getLookupElementType(base);
    if (type != null && !PsiType.VOID.equals(type)) {
      PsiReferenceExpression ref=ReferenceExpressionCompletionContributor.createMockReference(position,type,base);
      if (ref != null) {
        List<LookupElement> elements=PostfixItemsCompletionProvider.addCompletions2(parameters,new PostfixExecutionContext(false,"postfix"),type);
        for (        LookupElement postfixElement : elements) {
          JavaChainLookupElement chainedPostfix=new JavaChainLookupElement(base,postfixElement){
            @Override public PsiType getType(){
              return null;
            }
          }
;
          qualifiedCollector.addElement(chainedPostfix);
        }
      }
    }
  }
}
