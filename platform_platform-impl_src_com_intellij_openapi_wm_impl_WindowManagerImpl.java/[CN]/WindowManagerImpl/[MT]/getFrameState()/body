{
  final Project[] projects=ProjectManager.getInstance().getOpenProjects();
  if (projects.length == 0) {
    return null;
  }
  Project project=projects[0];
  final IdeFrameImpl frame=getFrame(project);
  if (frame == null) {
    return null;
  }
  final Element frameElement=new Element(FRAME_ELEMENT);
  int extendedState=frame.getExtendedState();
  if (SystemInfo.isMacOSLion) {
    @SuppressWarnings("deprecation") ComponentPeer peer=frame.getPeer();
    if (peer instanceof FramePeer) {
      extendedState=((FramePeer)peer).getState();
    }
  }
  boolean isMaximized=extendedState == Frame.MAXIMIZED_BOTH || isFullScreenSupportedInCurrentOS() && frame.isInFullScreen();
  boolean usePreviousBounds=isMaximized && myFrameBounds != null && frame.getBounds().contains(new Point((int)myFrameBounds.getCenterX(),(int)myFrameBounds.getCenterY()));
  Rectangle rectangle=usePreviousBounds ? myFrameBounds : frame.getBounds();
  frameElement.setAttribute(X_ATTR,Integer.toString(rectangle.x));
  frameElement.setAttribute(Y_ATTR,Integer.toString(rectangle.y));
  frameElement.setAttribute(WIDTH_ATTR,Integer.toString(rectangle.width));
  frameElement.setAttribute(HEIGHT_ATTR,Integer.toString(rectangle.height));
  if (!(frame.isInFullScreen() && SystemInfo.isAppleJvm)) {
    frameElement.setAttribute(EXTENDED_STATE_ATTR,Integer.toString(extendedState));
  }
  return frameElement;
}
