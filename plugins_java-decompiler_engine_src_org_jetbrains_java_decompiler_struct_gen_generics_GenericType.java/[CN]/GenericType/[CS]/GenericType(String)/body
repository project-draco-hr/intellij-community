{
  int type=0;
  int arrayDim=0;
  String value=null;
  int index=0;
  loop:   while (index < signature.length()) {
switch (signature.charAt(index)) {
case '[':
      arrayDim++;
    break;
case 'T':
  type=CodeConstants.TYPE_GENVAR;
value=signature.substring(index + 1,signature.length() - 1);
break loop;
case 'L':
type=CodeConstants.TYPE_OBJECT;
signature=signature.substring(index + 1,signature.length() - 1);
while (true) {
String cl=getNextClassSignature(signature);
String name=cl;
String args=null;
int argStart=cl.indexOf("<");
if (argStart >= 0) {
name=cl.substring(0,argStart);
args=cl.substring(argStart + 1,cl.length() - 1);
}
if (cl.length() < signature.length()) {
signature=signature.substring(cl.length() + 1);
GenericType type11=new GenericType(CodeConstants.TYPE_OBJECT,0,name);
parseArgumentsList(args,type11);
enclosingClasses.add(type11);
}
 else {
value=name;
parseArgumentsList(args,this);
break;
}
}
break loop;
default :
value=signature.substring(index,index + 1);
type=VarType.getType(value.charAt(0));
}
index++;
}
this.type=type;
this.arrayDim=arrayDim;
this.value=value;
}
