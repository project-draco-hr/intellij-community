{
  VisibleGraph<Integer> newGraph;
  Set<Integer> heads;
  if (visiblePack.getVisibleGraph() instanceof VisibleGraphImpl) {
    final PermanentGraphInfo<Integer> info=((VisibleGraphImpl<Integer>)visiblePack.getVisibleGraph()).buildSimpleGraphInfo();
    newGraph=new VisibleGraphImpl<Integer>(new CollapsedController(new BaseController(info),info,null),info);
    heads=ContainerUtil.map2Set(info.getPermanentGraphLayout().getHeadNodeIndex(),new Function<Integer,Integer>(){
      @Override public Integer fun(      Integer integer){
        return info.getPermanentCommitsInfo().getCommitId(integer);
      }
    }
);
  }
 else {
    newGraph=EmptyVisibleGraph.getInstance();
    heads=Collections.emptySet();
  }
  DataPackBase oldPack=visiblePack.getDataPack();
  RefsModel newRefsModel=createRefsModel(oldPack.getRefsModel(),heads,visiblePack);
  DataPackBase newPack=new DataPackBase(oldPack.getLogProviders(),newRefsModel,false);
  return new VisiblePack(newPack,newGraph,true,visiblePack.getFilters());
}
