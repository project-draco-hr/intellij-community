{
  AnAction action=ActionManager.getInstance().getAction(actionId);
  assertNotNull(actionId,action);
  assertTrue(actionId + " is not enabled",action.getTemplatePresentation().isEnabled());
  Keymap keymap=KeymapManager.getInstance().getActiveKeymap();
  Shortcut[] shortcuts=keymap.getShortcuts(actionId);
  assertNotNull(shortcuts);
  assertThat(shortcuts).isNotEmpty();
  Shortcut shortcut=shortcuts[0];
  if (shortcut instanceof KeyboardShortcut) {
    KeyboardShortcut cs=(KeyboardShortcut)shortcut;
    KeyStroke firstKeyStroke=cs.getFirstKeyStroke();
    Component component=getFocusedEditor();
    if (component != null) {
      ComponentDriver driver=new ComponentDriver(robot);
      System.out.println("Invoking editor action " + actionId + " via shortcut "+ KeyEvent.getKeyModifiersText(firstKeyStroke.getModifiers())+ KeyEvent.getKeyText(firstKeyStroke.getKeyCode()));
      driver.pressAndReleaseKey(component,firstKeyStroke.getKeyCode(),new int[]{firstKeyStroke.getModifiers()});
      KeyStroke secondKeyStroke=cs.getSecondKeyStroke();
      if (secondKeyStroke != null) {
        System.out.println(" and " + KeyEvent.getKeyModifiersText(secondKeyStroke.getModifiers()) + KeyEvent.getKeyText(secondKeyStroke.getKeyCode()));
        driver.pressAndReleaseKey(component,secondKeyStroke.getKeyCode(),new int[]{secondKeyStroke.getModifiers()});
      }
    }
 else {
      fail("Editor not focused for action");
    }
  }
 else {
    fail("Unsupported shortcut type " + shortcut.getClass().getName());
  }
}
