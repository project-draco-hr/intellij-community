{
  return execute(new GuiQuery<String>(){
    @Override @Nullable protected String executeInEDT() throws Throwable {
      FileEditorManager manager=FileEditorManager.getInstance(myFrame.getProject());
      Editor editor=manager.getSelectedTextEditor();
      if (editor != null) {
        CaretModel caretModel=editor.getCaretModel();
        Caret primaryCaret=caretModel.getPrimaryCaret();
        int offset=primaryCaret.getOffset();
        int start=primaryCaret.getSelectionStart();
        int end=primaryCaret.getSelectionEnd();
        if (start == end) {
          start=-1;
          end=-1;
        }
        Document document=editor.getDocument();
        int lineNumber=document.getLineNumber(offset);
        int lineStart=document.getLineStartOffset(lineNumber);
        int lineEnd=document.getLineEndOffset(lineNumber);
        int lineCount=document.getLineCount();
        for (int i=1; i <= additionalLines; i++) {
          if (lineNumber - i >= 0) {
            lineStart=document.getLineStartOffset(lineNumber - i);
          }
          if (lineNumber + i < lineCount) {
            lineEnd=document.getLineEndOffset(lineNumber + i);
          }
        }
        String line=document.getText(new TextRange(lineStart,lineEnd));
        offset-=lineStart;
        start-=lineStart;
        end-=lineStart;
        StringBuilder sb=new StringBuilder(line.length() + 10);
        for (int i=0, n=line.length(); i < n; i++) {
          if (selectBegin != null && start == i) {
            sb.append(selectBegin);
          }
          if (caret != null && offset == i) {
            sb.append(caret);
          }
          sb.append(line.charAt(i));
          if (selectEnd != null && end == i + 1) {
            sb.append(selectEnd);
          }
        }
        String result=sb.toString();
        if (trim) {
          result=result.trim();
        }
        return result;
      }
      return null;
    }
  }
);
}
