{
  ApplicationManager.getApplication().executeOnPooledThread(new Runnable(){
    @Override public void run(){
      try {
        final InputStream stream;
        if ((stream=connect(port)) == null) {
          return;
        }
        final InputStreamReader reader=new InputStreamReader(stream,CharsetToolkit.UTF8_CHARSET);
        final HighlightingProcessHandler process=new HighlightingProcessHandler(reader){
          private boolean mySelectionChanged;
          @Override public void notifyTextAvailable(          String text,          Key outputType){
            super.notifyTextAvailable(text,outputType);
            if (mySelectionChanged) {
              return;
            }
            mySelectionChanged=true;
            myConsole.selectOutputTab();
          }
        }
;
        myConsole.getConsole().attachToProcess(process);
        process.start();
      }
 catch (      UnsupportedEncodingException e) {
        throw new Error(e);
      }
catch (      IOException e) {
        myStartedProcess.notifyTextAvailable("Could not connect to runner: " + e.toString() + "\n",ProcessOutputTypes.SYSTEM);
      }
    }
  }
);
}
