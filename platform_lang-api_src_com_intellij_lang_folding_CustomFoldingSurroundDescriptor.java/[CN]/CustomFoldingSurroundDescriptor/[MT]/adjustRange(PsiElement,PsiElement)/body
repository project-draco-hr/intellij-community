{
  PsiElement newStart=lowerStartElementIfNeeded(start,end);
  PsiElement newEnd=lowerEndElementIfNeeded(start,end);
  if (newStart == null || newEnd == null) {
    return PsiElement.EMPTY_ARRAY;
  }
  final PsiElement commonParent=findCommonAncestorForWholeRange(newStart,newEnd);
  if (commonParent != null) {
    return new PsiElement[]{commonParent};
  }
  if (newStart.getParent().getFirstChild() == newStart && newStart.getFirstChild() == null) {
    newStart=newStart.getParent();
  }
  if (newEnd.getParent().getLastChild() == newEnd && newEnd.getFirstChild() == null) {
    newEnd=newEnd.getParent();
  }
  if (newStart.getParent() == newEnd.getParent()) {
    return new PsiElement[]{newStart,newEnd};
  }
  return PsiElement.EMPTY_ARRAY;
}
