{
  PyFunctionImpl initMethod=(PyFunctionImpl)findMethodByName(PyNames.INIT);
  if (initMethod == null)   return PyTargetExpression.EMPTY_ARRAY;
  final PyParameter[] params=initMethod.getParameterList().getParameters();
  if (params.length == 0)   return PyTargetExpression.EMPTY_ARRAY;
  final PyFunctionStub methodStub=initMethod.getStub();
  if (methodStub != null) {
    return methodStub.getChildrenByType(PyElementTypes.TARGET_EXPRESSION,new PyTargetExpression[0]);
  }
  final List<PyTargetExpression> result=new ArrayList<PyTargetExpression>();
  initMethod.getStatementList().accept(new PyRecursiveElementVisitor(){
    public void visitPyAssignmentStatement(    final PyAssignmentStatement node){
      super.visitPyAssignmentStatement(node);
      final PyExpression[] targets=node.getTargets();
      for (      PyExpression target : targets) {
        if (target instanceof PyTargetExpression) {
          PyExpression qualifier=((PyTargetExpression)target).getQualifier();
          if (qualifier != null && qualifier.getText().equals(params[0].getName())) {
            result.add((PyTargetExpression)target);
          }
        }
      }
    }
  }
);
  return result.toArray(new PyTargetExpression[result.size()]);
}
