{
  final PyClassStub stub=getStub();
  if (stub == null) {
    return null;
  }
  final PsiElement parent=stub.getParentStub().getPsi();
  if (!(parent instanceof PyFile)) {
    return null;
  }
  List<PyClass> result=new ArrayList<PyClass>();
  for (  PyQualifiedName qualifiedName : stub.getSuperClasses()) {
    if (qualifiedName == null) {
      return null;
    }
    NameDefiner currentParent=(NameDefiner)parent;
    for (    String component : qualifiedName.getComponents()) {
      PsiElement element=currentParent.getElementNamed(component);
      element=PyUtil.turnDirIntoInit(element);
      if (element instanceof PyImportElement) {
        element=ResolveImportUtil.resolveImportElement((PyImportElement)element);
      }
      if (!(element instanceof NameDefiner)) {
        return null;
      }
      currentParent=(NameDefiner)element;
    }
    if (!(currentParent instanceof PyClass)) {
      return null;
    }
    result.add((PyClass)currentParent);
  }
  return result;
}
