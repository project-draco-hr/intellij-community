{
  Map<String,PyTargetExpression> declarationsInMethod=new HashMap<String,PyTargetExpression>();
  PyFunction instanceMethod=PsiTreeUtil.getParentOfType(location,PyFunction.class);
  final PyClass containingClass=instanceMethod != null ? instanceMethod.getContainingClass() : null;
  if (instanceMethod != null && containingClass != null && CompletionUtil.getOriginalElement(containingClass) == this) {
    collectInstanceAttributes(instanceMethod,declarationsInMethod);
    for (    PyTargetExpression targetExpression : declarationsInMethod.values()) {
      if (!processor.execute(targetExpression,ResolveState.initial())) {
        return false;
      }
    }
  }
  for (  PyTargetExpression expr : getInstanceAttributes()) {
    if (declarationsInMethod.containsKey(expr.getName())) {
      continue;
    }
    if (!processor.execute(expr,ResolveState.initial()))     return false;
  }
  return true;
}
