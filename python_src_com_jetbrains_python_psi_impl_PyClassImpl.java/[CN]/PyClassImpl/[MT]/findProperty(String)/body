{
  LanguageLevel level=LanguageLevel.getDefault();
  final PsiFile containing_file=getContainingFile();
  if (containing_file != null) {
    final VirtualFile vfile=containing_file.getVirtualFile();
    if (vfile != null)     level=LanguageLevel.forFile(vfile);
  }
  boolean use_advanced_syntax=level.isAtLeast(LanguageLevel.PYTHON26);
  Processor<String> name_filer=new Processor<String>(){
    @Override public boolean process(    String s){
      return name.equals(s);
    }
  }
;
  Property prop=findPropertyLocally(name_filer,null,use_advanced_syntax);
  if (prop != null)   return prop;
  for (  PyClass cls : iterateAncestors()) {
    prop=((PyClassImpl)cls).findPropertyLocally(name_filer,null,use_advanced_syntax);
    if (prop != null)     return prop;
  }
  return null;
}
