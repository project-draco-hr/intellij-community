{
  final PyFunction[] thisClassFunctions=getClassChildren(PythonDialectsTokenSetProvider.INSTANCE.getFunctionDeclarationTokens(),PyFunction.ARRAY_FACTORY);
  if (!inherited) {
    return thisClassFunctions;
  }
  final Map<String,PyFunction> result=new HashMap<String,PyFunction>();
  for (  final PyClass superClass : getAncestorClasses()) {
    for (    final PyFunction function : superClass.getMethods(false)) {
      final String functionName=function.getName();
      if (functionName != null) {
        result.put(functionName,function);
      }
    }
  }
  for (  final PyFunction function : thisClassFunctions) {
    final String functionName=function.getName();
    if (functionName != null) {
      result.put(functionName,function);
    }
  }
  final Collection<PyFunction> functionsToReturn=result.values();
  return functionsToReturn.toArray(new PyFunction[functionsToReturn.size()]);
}
