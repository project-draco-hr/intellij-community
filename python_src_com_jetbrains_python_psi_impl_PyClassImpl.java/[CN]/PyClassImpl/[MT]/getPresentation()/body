{
  return new PyElementPresentation(this){
    @Nullable @Override public String getPresentableText(){
      if (!isValid()) {
        return null;
      }
      final StringBuilder result=new StringBuilder(notNullize(getName(),PyNames.UNNAMED_ELEMENT));
      final PyExpression[] superClassExpressions=getSuperClassExpressions();
      if (superClassExpressions.length > 0) {
        result.append("(");
        result.append(join(Arrays.asList(superClassExpressions),new Function<PyExpression,String>(){
          public String fun(          PyExpression expr){
            String name=expr.getText();
            return notNullize(name,PyNames.UNNAMED_ELEMENT);
          }
        }
,", "));
        result.append(")");
      }
      return result.toString();
    }
  }
;
}
