{
  final LanguageLevel level=LanguageLevel.forElement(this);
  if (level.isAtLeast(LanguageLevel.PYTHON30)) {
    final PyExpression[] superClassExpressions=getSuperClassExpressions();
    for (    PyExpression superClassExpression : superClassExpressions) {
      if (superClassExpression instanceof PyKeywordArgument) {
        final PyKeywordArgument argument=(PyKeywordArgument)superClassExpression;
        if (PyNames.METACLASS.equals(argument.getKeyword())) {
          final PyClassLikeType type=getClassLikeType(argument,context);
          if (type != null) {
            return type;
          }
        }
      }
    }
  }
 else {
    final PyTargetExpression metaClassAttribute=findClassAttribute(PyNames.DUNDER_METACLASS,false);
    if (metaClassAttribute != null) {
      final PyClassLikeType type=getClassLikeType(metaClassAttribute,context);
      if (type != null) {
        return type;
      }
    }
    final PsiFile containingFile=getContainingFile();
    if (containingFile instanceof PyFile) {
      final PsiElement element=((PyFile)containingFile).getElementNamed(PyNames.DUNDER_METACLASS);
      if (element instanceof PyTypedElement) {
        final PyClassLikeType type=getClassLikeType((PyTypedElement)element,context);
        if (type != null) {
          return type;
        }
      }
    }
  }
  return null;
}
