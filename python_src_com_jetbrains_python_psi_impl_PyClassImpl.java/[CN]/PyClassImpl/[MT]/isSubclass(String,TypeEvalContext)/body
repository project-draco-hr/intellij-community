{
  if (context == null) {
    context=TypeEvalContext.codeInsightFallback(getProject());
  }
  if (superClassQName.equals(getQualifiedName())) {
    return true;
  }
  for (  PyClassLikeType type : getAncestorTypes(context)) {
    if (type != null && superClassQName.equals(type.getClassQName())) {
      return true;
    }
  }
  return false;
}
