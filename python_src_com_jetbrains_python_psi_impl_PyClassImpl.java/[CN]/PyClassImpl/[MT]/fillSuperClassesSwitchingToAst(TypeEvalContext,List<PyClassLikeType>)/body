{
  for (  PyExpression expression : getSuperClassExpressions()) {
    context.getType(expression);
    expression=unfoldClass(expression);
    if (expression instanceof PyKeywordArgument) {
      continue;
    }
    final PyType type=context.getType(expression);
    PyClassLikeType classLikeType=null;
    if (type instanceof PyClassLikeType) {
      classLikeType=(PyClassLikeType)type;
    }
 else {
      final PsiReference ref=expression.getReference();
      if (ref != null) {
        final PsiElement resolved=ref.resolve();
        if (resolved instanceof PyClass) {
          final PyType resolvedType=context.getType((PyClass)resolved);
          if (resolvedType instanceof PyClassLikeType) {
            classLikeType=(PyClassLikeType)resolvedType;
          }
        }
      }
    }
    result.add(classLikeType);
  }
}
