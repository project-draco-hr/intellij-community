{
  final PyParameter[] params=method.getParameterList().getParameters();
  if (params.length == 0) {
    return;
  }
  final String selfName=params[0].getName();
  final PyFunctionStub methodStub=method.getStub();
  if (methodStub != null) {
    final PyTargetExpression[] targets=methodStub.getChildrenByType(PyElementTypes.TARGET_EXPRESSION,PyTargetExpression.EMPTY_ARRAY);
    for (    PyTargetExpression target : targets) {
      if (!result.containsKey(target.getName())) {
        result.put(target.getName(),target);
      }
    }
  }
 else {
    method.getStatementList().accept(new PyRecursiveElementVisitor(){
      public void visitPyAssignmentStatement(      final PyAssignmentStatement node){
        super.visitPyAssignmentStatement(node);
        final PyExpression[] targets=node.getTargets();
        for (        PyExpression target : targets) {
          if (target instanceof PyTargetExpression) {
            final PyTargetExpression targetExpr=(PyTargetExpression)target;
            PyExpression qualifier=targetExpr.getQualifier();
            if (qualifier != null && qualifier.getText().equals(selfName) && !result.containsKey(targetExpr.getName())) {
              result.put(targetExpr.getName(),targetExpr);
            }
          }
        }
      }
    }
);
  }
}
