{
  if (PyNames.FAKE_OLD_BASE.equals(getName())) {
    return Collections.emptyList();
  }
  List<PyClass> superClasses=resolveSuperClassesFromStub();
  if (superClasses == null) {
    superClasses=new ArrayList<PyClass>();
    PsiElement[] superClassElements=getSuperClassElements();
    for (    PsiElement element : superClassElements) {
      if (element instanceof PyClass) {
        superClasses.add((PyClass)element);
      }
    }
  }
  if (superClasses.size() == 0 && !PyBuiltinCache.getInstance(this).hasInBuiltins(this)) {
    String implicitSuperclassName=LanguageLevel.forElement(this).isPy3K() ? PyNames.OBJECT : PyNames.FAKE_OLD_BASE;
    PyClass implicitSuperclass=PyBuiltinCache.getInstance(this).getClass(implicitSuperclassName);
    if (implicitSuperclass != null) {
      superClasses.add(implicitSuperclass);
    }
  }
  return superClasses;
}
