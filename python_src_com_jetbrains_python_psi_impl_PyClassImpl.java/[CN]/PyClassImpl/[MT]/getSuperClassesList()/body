{
  PsiElement[] superClassElements=getSuperClassElements();
  if (superClassElements != null) {
    List<PyClass> result=new ArrayList<PyClass>();
    PsiElement paren=PsiTreeUtil.getChildOfType(this,PyParenthesizedExpression.class).getFirstChild();
    if (paren != null && "(".equals(paren.getText())) {
      for (      PsiElement element : superClassElements) {
        if (element instanceof PyClass) {
          result.add((PyClass)element);
        }
      }
    }
 else {
      PyClass oldstyler=PyBuiltinCache.getInstance(getProject()).getClass("___Classobj");
      if (oldstyler != null)       result.add(oldstyler);
    }
    return result;
  }
  return new ArrayList<PyClass>(0);
}
