{
  PsiElement[] superClassElements=getSuperClassElements();
  if (superClassElements != null) {
    List<PyClass> result=new ArrayList<PyClass>();
    PsiElement paren=PsiTreeUtil.getChildOfType(this,PyArgumentList.class).getFirstChild();
    if (paren != null && "(".equals(paren.getText())) {
      for (      PsiElement element : superClassElements) {
        if (element instanceof PyClass) {
          result.add((PyClass)element);
        }
      }
    }
 else     if (!PyBuiltinCache.BUILTIN_FILE.equals(getContainingFile().getName())) {
      PyClass oldstyler=PyBuiltinCache.getInstance(this).getClass(PyNames.FAKE_OLD_BASE);
      if (oldstyler != null)       result.add(oldstyler);
    }
    return result;
  }
  return new ArrayList<PyClass>(0);
}
