{
  final PsiFile containingFile=getContainingFile();
  if (containingFile instanceof PyFile && ((PyFile)containingFile).getLanguageLevel().isPy3K()) {
    return true;
  }
  final PyClass objClass=PyBuiltinCache.getInstance(this).getClass(PyNames.OBJECT);
  if (this == objClass)   return true;
  if (hasNewStyleMetaClass(this))   return true;
  TypeEvalContext contextToUse=(context != null ? context : TypeEvalContext.codeInsightFallback(getProject()));
  for (  PyClassLikeType type : getOldStyleAncestorTypes(contextToUse)) {
    if (type == null) {
      return true;
    }
    if (type instanceof PyClassType) {
      final PyClass pyClass=((PyClassType)type).getPyClass();
      if (pyClass == objClass || hasNewStyleMetaClass(pyClass)) {
        return true;
      }
    }
  }
  return false;
}
