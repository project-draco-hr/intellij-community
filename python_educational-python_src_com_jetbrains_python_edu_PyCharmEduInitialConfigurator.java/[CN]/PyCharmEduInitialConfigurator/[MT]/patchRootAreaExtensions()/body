{
  ExtensionsArea rootArea=Extensions.getArea(null);
  for (  ToolWindowEP ep : Extensions.getExtensions(ToolWindowEP.EP_NAME)) {
    if (ToolWindowId.FAVORITES_VIEW.equals(ep.id) || ToolWindowId.TODO_VIEW.equals(ep.id) || EventLog.LOG_TOOL_WINDOW_ID.equals(ep.id)|| ToolWindowId.STRUCTURE_VIEW.equals(ep.id)) {
      rootArea.getExtensionPoint(ToolWindowEP.EP_NAME).unregisterExtension(ep);
    }
  }
  for (  DirectoryProjectConfigurator ep : Extensions.getExtensions(DirectoryProjectConfigurator.EP_NAME)) {
    if (ep instanceof PlatformProjectViewOpener) {
      rootArea.getExtensionPoint(DirectoryProjectConfigurator.EP_NAME).unregisterExtension(ep);
    }
  }
  for (  TipAndTrickBean tip : Extensions.getExtensions(TipAndTrickBean.EP_NAME)) {
    if (UNRELATED_TIPS.contains(tip.fileName)) {
      rootArea.getExtensionPoint(TipAndTrickBean.EP_NAME).unregisterExtension(tip);
    }
  }
  for (  IntentionActionBean ep : Extensions.getExtensions(IntentionManager.EP_INTENTION_ACTIONS)) {
    if ("org.intellij.lang.regexp.intention.CheckRegExpIntentionAction".equals(ep.className)) {
      rootArea.getExtensionPoint(IntentionManager.EP_INTENTION_ACTIONS).unregisterExtension(ep);
    }
  }
  final ExtensionPoint<ProjectAttachProcessor> point=Extensions.getRootArea().getExtensionPoint(ProjectAttachProcessor.EP_NAME);
  for (  ProjectAttachProcessor attachProcessor : Extensions.getExtensions(ProjectAttachProcessor.EP_NAME)) {
    point.unregisterExtension(attachProcessor);
  }
}
