{
  int lastIndent=_indentStack.peek();
  int indent=getNextLineIndent();
  if (super.getTokenType() == PyTokenTypes.END_OF_LINE_COMMENT) {
    indent=lastIndent;
  }
  int whiteSpaceEnd=(super.getTokenType() == null) ? super.getBufferEnd() : super.getTokenStart();
  if (indent > lastIndent) {
    _indentStack.push(indent);
    _tokenQueue.add(new PendingToken(PyTokenTypes.LINE_BREAK,whiteSpaceStart,whiteSpaceEnd));
    _tokenQueue.add(new PendingToken(PyTokenTypes.INDENT,whiteSpaceEnd,whiteSpaceEnd));
  }
 else   if (indent < lastIndent) {
    while (indent < lastIndent) {
      _indentStack.pop();
      lastIndent=_indentStack.peek();
      if (indent > lastIndent) {
        _tokenQueue.add(new PendingToken(PyTokenTypes.INCONSISTENT_DEDENT,whiteSpaceStart,whiteSpaceStart));
      }
      _tokenQueue.add(new PendingToken(PyTokenTypes.DEDENT,whiteSpaceStart,whiteSpaceStart));
    }
    _tokenQueue.add(new PendingToken(PyTokenTypes.LINE_BREAK,whiteSpaceStart,whiteSpaceEnd));
  }
 else {
    _tokenQueue.add(new PendingToken(PyTokenTypes.LINE_BREAK,whiteSpaceStart,whiteSpaceEnd));
  }
}
