{
  IElementType tokenType=getTokenType();
  if (tokenType == PyTokenTypes.FROM_KEYWORD || myTokenHistory.size() > 0) {
    putTokenInHistory();
  }
 else   if (tokenType == PyTokenTypes.LINE_BREAK) {
    myTokenHistory.clear();
  }
  if (_tokenQueue.size() > 0) {
    _tokenQueue.remove(0);
  }
 else {
    advanceBase();
    int tokenStart=super.getTokenStart();
    if (super.getTokenType() == PyTokenTypes.LINE_BREAK) {
      processLineBreak(tokenStart);
    }
 else     if (super.getTokenType() == PyTokenTypes.BACKSLASH) {
      processBackslash(tokenStart);
    }
 else     if (super.getTokenType() == PyTokenTypes.SPACE) {
      processSpace();
    }
    if (myFutureWithStatement && super.getTokenType() == PyTokenTypes.IDENTIFIER) {
      if (CharArrayUtil.regionMatches(getBufferSequence(),super.getTokenStart(),WITH_KEYWORD)) {
        pushToken(PyTokenTypes.WITH_KEYWORD,super.getTokenStart(),super.getTokenEnd());
        advanceBase();
      }
 else       if (CharArrayUtil.regionMatches(getBufferSequence(),super.getTokenStart(),AS_KEYWORD)) {
        pushToken(PyTokenTypes.AS_KEYWORD,super.getTokenStart(),super.getTokenEnd());
        advanceBase();
      }
    }
  }
  adjustBraceLevel();
  checkImportFromFuture();
  if (DUMP_TOKENS) {
    if (getTokenType() != null) {
      System.out.print(getTokenStart() + "-" + getTokenEnd()+ ":"+ getTokenType());
      if (getTokenType() == PyTokenTypes.LINE_BREAK) {
        System.out.println("{" + _braceLevel + "}");
      }
 else {
        System.out.print(" ");
      }
    }
  }
}
