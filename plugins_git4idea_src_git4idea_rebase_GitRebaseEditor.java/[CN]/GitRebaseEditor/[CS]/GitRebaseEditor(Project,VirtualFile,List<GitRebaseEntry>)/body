{
  super(project,true);
  myProject=project;
  myRoot=gitRoot;
  setTitle(GitBundle.getString("rebase.editor.title"));
  setOKButtonText(GitBundle.getString("rebase.editor.button"));
  myTableModel=new MyTableModel(entries);
  myCommitsTable=new JBTable(myTableModel);
  myCommitsTable.setSelectionMode(ListSelectionModel.SINGLE_INTERVAL_SELECTION);
  myCommitsTable.setIntercellSpacing(JBUI.emptySize());
  final JComboBox editorComboBox=new ComboBox();
  for (  Object option : GitRebaseEntry.Action.values()) {
    editorComboBox.addItem(option);
  }
  TableColumn actionColumn=myCommitsTable.getColumnModel().getColumn(MyTableModel.ACTION_COLUMN);
  actionColumn.setCellEditor(new DefaultCellEditor(editorComboBox));
  actionColumn.setCellRenderer(ComboBoxTableCellRenderer.INSTANCE);
  myCommitsTable.setDefaultRenderer(String.class,new ColoredTableCellRenderer(){
    @Override protected void customizeCellRenderer(    JTable table,    Object value,    boolean selected,    boolean hasFocus,    int row,    int column){
      if (value != null) {
        append(value.toString());
        SpeedSearchUtil.applySpeedSearchHighlighting(myCommitsTable,this,true,selected);
      }
    }
  }
);
  myTableModel.addTableModelListener(new TableModelListener(){
    public void tableChanged(    final TableModelEvent e){
      validateFields();
    }
  }
);
  installSpeedSearch();
  myCopyProvider=new MyCopyProvider();
  adjustColumnWidth(0);
  adjustColumnWidth(1);
  init();
}
