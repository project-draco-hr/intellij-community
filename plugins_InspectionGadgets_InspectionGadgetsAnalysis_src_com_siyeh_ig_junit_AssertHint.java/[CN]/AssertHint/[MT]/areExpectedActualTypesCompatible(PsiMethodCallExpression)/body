{
  final AssertHint assertHint=createAssertEqualsHint(expression);
  if (assertHint == null)   return null;
  final PsiExpression[] arguments=expression.getArgumentList().getExpressions();
  final int argIndex=assertHint.getArgIndex();
  final PsiType type1=arguments[argIndex].getType();
  if (type1 == null) {
    return null;
  }
  final PsiType type2=arguments[argIndex + 1].getType();
  if (type2 == null) {
    return null;
  }
  final PsiParameter[] parameters=assertHint.getMethod().getParameterList().getParameters();
  final PsiType parameterType1=parameters[argIndex].getType();
  final PsiType parameterType2=parameters[argIndex + 1].getType();
  final PsiClassType objectType=TypeUtils.getObjectType(expression);
  if (!objectType.equals(parameterType1) || !objectType.equals(parameterType2)) {
    return null;
  }
  if (TypeUtils.areConvertible(type1,type2)) {
    return null;
  }
  final String comparedTypeText=type1.getPresentableText();
  final String comparisonTypeText=type2.getPresentableText();
  return InspectionGadgetsBundle.message("assertequals.between.inconvertible.types.problem.descriptor",StringUtil.escapeXml(comparedTypeText),StringUtil.escapeXml(comparisonTypeText));
}
