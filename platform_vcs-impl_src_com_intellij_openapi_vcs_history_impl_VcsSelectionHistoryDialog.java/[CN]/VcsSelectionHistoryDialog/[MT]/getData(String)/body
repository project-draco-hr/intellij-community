{
  if (CommonDataKeys.PROJECT.is(dataId)) {
    return myProject;
  }
 else   if (VcsDataKeys.VCS_VIRTUAL_FILE.is(dataId)) {
    return myFile;
  }
 else   if (VcsDataKeys.VCS_FILE_REVISION.is(dataId)) {
    VcsFileRevision selectedObject=myList.getSelectedObject();
    return selectedObject instanceof CurrentRevision ? null : selectedObject;
  }
 else   if (VcsDataKeys.VCS_REVISION_NUMBERS.is(dataId)) {
    List<VcsFileRevision> objects=myList.getSelectedObjects();
    List<VcsRevisionNumber> revisionNumbers=ContainerUtil.mapNotNull(objects,new Function<VcsFileRevision,VcsRevisionNumber>(){
      @Override public VcsRevisionNumber fun(      VcsFileRevision revision){
        return revision instanceof CurrentRevision ? null : revision.getRevisionNumber();
      }
    }
);
    return ArrayUtil.toObjectArray(revisionNumbers,VcsRevisionNumber.class);
  }
 else   if (VcsDataKeys.VCS.is(dataId)) {
    return myActiveVcs.getKeyInstanceMethod();
  }
 else   if (PlatformDataKeys.HELP_ID.is(dataId)) {
    return myHelpId;
  }
  return null;
}
