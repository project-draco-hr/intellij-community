{
  myProjectPathLabel=new JBLabel(ExternalSystemBundle.message("run.configuration.settings.label.project",myExternalSystemId.getReadableName()));
  ExternalSystemManager<?,?,?,?,?> manager=ExternalSystemApiUtil.getManager(myExternalSystemId);
  FileChooserDescriptor projectPathChooserDescriptor=null;
  if (manager instanceof ExternalSystemUiAware) {
    projectPathChooserDescriptor=((ExternalSystemUiAware)manager).getExternalProjectConfigDescriptor();
  }
  if (projectPathChooserDescriptor == null) {
    projectPathChooserDescriptor=FileChooserDescriptorFactory.createSingleLocalFileDescriptor();
  }
  String title=ExternalSystemBundle.message("settings.label.select.project",myExternalSystemId.getReadableName());
  myProjectPathField=new ExternalProjectPathField(myProject,myExternalSystemId,projectPathChooserDescriptor,title){
    @Override public Dimension getPreferredSize(){
      return myVmOptionsEditor == null ? super.getPreferredSize() : myVmOptionsEditor.getTextField().getPreferredSize();
    }
  }
;
  canvas.add(myProjectPathLabel,ExternalSystemUiUtil.getLabelConstraints(0));
  canvas.add(myProjectPathField,ExternalSystemUiUtil.getFillLineConstraints(0));
  myTasksLabel=new JBLabel(ExternalSystemBundle.message("run.configuration.settings.label.tasks"));
  myTasksTextField=new JBTextField(ExternalSystemConstants.TEXT_FIELD_WIDTH_IN_COLUMNS);
  canvas.add(myTasksLabel,ExternalSystemUiUtil.getLabelConstraints(0));
  canvas.add(myTasksTextField,ExternalSystemUiUtil.getFillLineConstraints(0));
  myVmOptionsLabel=new JBLabel(ExternalSystemBundle.message("run.configuration.settings.label.vmoptions"));
  myVmOptionsEditor=new RawCommandLineEditor();
  myVmOptionsEditor.setDialogCaption(ExternalSystemBundle.message("run.configuration.settings.caption.vmoptions"));
  canvas.add(myVmOptionsLabel,ExternalSystemUiUtil.getLabelConstraints(0));
  canvas.add(myVmOptionsEditor,ExternalSystemUiUtil.getFillLineConstraints(0));
  canvas.setPaintCallback(new Consumer<Graphics>(){
    @Nullable private Dimension myDimension;
    @Nullable private Dimension myBounds;
    private boolean myBorderReset;
    @Override public void consume(    Graphics graphics){
      if (!myBorderReset) {
        Editor editor=myProjectPathField.getChildComponent().getEditor();
        if (editor != null) {
          myBorderReset=true;
          editor.setBorder(null);
        }
      }
      Dimension size=myVmOptionsEditor.getTextField().getPreferredSize();
      Rectangle bounds=myVmOptionsEditor.getTextField().getBounds();
      if (!size.equals(myDimension)) {
        myDimension=size;
      }
      if (myBounds == null || myBounds.width != bounds.width || myBounds.height == bounds.height) {
        myBounds=bounds.getSize();
      }
      applyDimension(myProjectPathField.getChildComponent(),false);
      applyDimension(myTasksTextField,true);
    }
    private void applyDimension(    @NotNull JComponent component,    boolean processBounds){
      Rectangle bounds=component.getBounds();
      if (bounds != null && myBounds != null && (bounds.width != myBounds.width || bounds.height != myBounds.height)) {
        component.setPreferredSize(myDimension);
        if (processBounds) {
          component.setBounds(bounds.x,bounds.y,myBounds.width,myBounds.height);
        }
      }
    }
  }
);
}
