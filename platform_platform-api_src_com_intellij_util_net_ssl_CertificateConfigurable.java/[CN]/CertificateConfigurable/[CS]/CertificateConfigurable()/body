{
  mySelfSignedList=new JBList();
  mySelfSignedList.getEmptyText().setText("No certificates");
  mySelfSignedList.setCellRenderer(new ListCellRendererWrapper<X509Certificate>(){
    @Override public void customize(    JList list,    X509Certificate value,    int index,    boolean selected,    boolean hasFocus){
      setText(new CertificateWrapper(value).getSubjectField(COMMON_NAME));
    }
  }
);
  final MutableTrustManager manager=CertificatesManager.getInstance().getCustomTrustManager();
  installModel(manager);
  ToolbarDecorator decorator=ToolbarDecorator.createDecorator(mySelfSignedList).disableUpDownActions();
  decorator.setAddAction(new AnActionButtonRunnable(){
    @Override public void run(    AnActionButton button){
      FileChooser.chooseFile(CERTIFICATE_DESCRIPTOR,null,null,new Consumer<VirtualFile>(){
        @Override public void consume(        VirtualFile file){
          String path=file.getPath();
          if (manager.addCertificate(path)) {
            installModel(manager);
          }
 else {
            Messages.showErrorDialog(myRootPanel,"Cannot Add Certificate","Cannot add X509 certificate " + path);
          }
        }
      }
);
    }
  }
).setRemoveAction(new AnActionButtonRunnable(){
    @Override public void run(    AnActionButton button){
      for (      int i : mySelfSignedList.getSelectedIndices()) {
        X509Certificate certificate=(X509Certificate)mySelfSignedList.getModel().getElementAt(i);
        manager.removeCertificate(certificate);
      }
      installModel(manager);
    }
  }
).addExtraAction(new AnActionButton("View details",AllIcons.General.Information){
    @Override public boolean isEnabled(){
      return getSelectedCertificate() != null;
    }
    @Override public void actionPerformed(    AnActionEvent e){
      DialogBuilder dialog=new DialogBuilder(myRootPanel);
      dialog.setTitle("Certificate Details");
      dialog.setCenterPanel(new CertificateInfo(getSelectedCertificate()).getPanel());
      dialog.setActionDescriptors(new DialogBuilder.ActionDescriptor[]{new DialogBuilder.OkActionDescriptor()});
      dialog.show();
    }
  }
);
  myAccptedCertificatesPanel.add(decorator.createPanel(),BorderLayout.CENTER);
  final Set<String> brokenCertificates=CertificatesManager.getInstance().getState().brokenCertificates;
  myBrokenList=new JBList(new CollectionListModel<String>(brokenCertificates));
  decorator=ToolbarDecorator.createDecorator(myBrokenList).disableUpDownActions().disableAddAction();
  decorator.setRemoveAction(new AnActionButtonRunnable(){
    @Override public void run(    AnActionButton button){
      myBrokenList.remove(myBrokenList.getSelectedIndex());
    }
  }
);
}
