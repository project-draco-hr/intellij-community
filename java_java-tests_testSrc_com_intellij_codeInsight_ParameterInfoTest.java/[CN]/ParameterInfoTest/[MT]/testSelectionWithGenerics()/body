{
  configureByFile(BASE_PATH + getTestName(false) + ".java");
  final MethodParameterInfoHandler handler=new MethodParameterInfoHandler();
  final CreateParameterInfoContext context=new MockCreateParameterInfoContext(myEditor,myFile);
  final PsiExpressionList list=handler.findElementForParameterInfo(context);
  assertNotNull(list);
  final Object[] itemsToShow=context.getItemsToShow();
  assertNotNull(itemsToShow);
  assertEquals(2,itemsToShow.length);
  assertTrue(itemsToShow[0] instanceof MethodCandidateInfo);
  final ParameterInfoUIContextEx parameterContext=ParameterInfoComponent.createContext(itemsToShow,myEditor,handler,-1);
  final Boolean[] enabled=new Boolean[itemsToShow.length];
  final MockUpdateParameterInfoContext updateParameterInfoContext=new MockUpdateParameterInfoContext(myEditor,myFile){
    @Override public Object[] getObjectsToView(){
      return itemsToShow;
    }
    @Override public void setUIComponentEnabled(    int index,    boolean b){
      enabled[index]=b;
    }
  }
;
  updateParameterInfoContext.setParameterOwner(list);
  handler.updateParameterInfo(list,updateParameterInfoContext);
  assertTrue(ArrayUtilRt.find(enabled,Boolean.TRUE) > -1);
}
