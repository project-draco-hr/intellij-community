{
  List<InnerArg> innerArgs=new ArrayList<InnerArg>();
  boolean hasNamedArgs=namedArgs.length > 0;
  GrClosureParameter[] params=signature.getParameters();
  if (hasNamedArgs) {
    if (params.length == 0)     return null;
    PsiType type=params[0].getType();
    if (InheritanceUtil.isInheritor(type,CommonClassNames.JAVA_UTIL_MAP) || type == null || type.equalsToText(CommonClassNames.JAVA_LANG_OBJECT)) {
      innerArgs.add(new InnerArg(GrMapType.create(context.getResolveScope()),namedArgs));
    }
 else {
      return null;
    }
  }
  for (  GrExpression expression : expressionArgs) {
    PsiType type=expression.getType();
    if (partial && expression instanceof GrNewExpression && com.intellij.psi.util.PsiUtil.resolveClassInType(type) == null) {
      type=null;
    }
    if (eraseArgs) {
      type=TypeConversionUtil.erasure(type);
    }
    innerArgs.add(new InnerArg(type,expression));
  }
  for (  GrClosableBlock closureArgument : closureArguments) {
    innerArgs.add(new InnerArg(TypeConversionUtil.erasure(closureArgument.getType()),closureArgument));
  }
  return mapParametersToArguments(signature,innerArgs,hasNamedArgs,partial,context);
}
