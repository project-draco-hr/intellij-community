{
  final List<Trinity<GrClosureSignature,ArgInfo<PsiType>[],ApplicabilityResult>> results=new ArrayList<>();
  signature.accept(new GrRecursiveSignatureVisitor(){
    @Override public void visitClosureSignature(    GrClosureSignature signature){
      ArgInfo<PsiType>[] map=mapArgTypesToParameters(signature,args,context,false);
      if (map != null) {
        results.add(new Trinity<>(signature,map,isSignatureApplicableInner(map,signature)));
        return;
      }
      if (args.length == 1 && PsiUtil.isInMethodCallContext(context)) {
        final GrClosureParameter[] parameters=signature.getParameters();
        if (parameters.length == 1 && parameters[0].getType() instanceof PsiArrayType) {
          return;
        }
        PsiType arg=args[0];
        if (arg instanceof GrTupleType) {
          PsiType[] _args=((GrTupleType)arg).getComponentTypes();
          map=mapArgTypesToParameters(signature,_args,context,false);
          if (map != null) {
            results.add(new Trinity<>(signature,map,isSignatureApplicableInner(map,signature)));
          }
        }
      }
    }
  }
);
  return results;
}
