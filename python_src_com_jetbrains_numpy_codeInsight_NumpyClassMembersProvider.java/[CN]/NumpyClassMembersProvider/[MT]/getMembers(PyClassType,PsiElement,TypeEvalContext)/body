{
  if (location != null && clazz.getPyClass().isSubclass(PyNames.FAKE_FUNCTION,typeEvalContext)) {
    final PsiElement element=location.getOriginalElement();
    final PsiReference reference=element.getReference();
    if (reference != null) {
      final PsiElement resolved=reference.resolve();
      if (resolved instanceof PyFunction) {
        final List<PyCustomMember> result=new ArrayList<PyCustomMember>();
        if (NumpyUfuncs.isUFunc(((PyFunction)resolved).getName()) && NumpyDocStringTypeProvider.isInsideNumPy(resolved)) {
          for (          String method : NumpyUfuncs.UFUNC_METHODS) {
            result.add(new PyCustomMember(method,resolved));
          }
          return result;
        }
      }
    }
  }
  return Collections.emptyList();
}
