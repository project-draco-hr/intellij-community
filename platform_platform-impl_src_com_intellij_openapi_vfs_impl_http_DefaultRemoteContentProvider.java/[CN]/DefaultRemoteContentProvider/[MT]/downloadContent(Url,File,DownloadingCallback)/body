{
  LOG.debug("Downloading started: " + url);
  InputStream input=null;
  OutputStream output=null;
  try {
    String presentableUrl=StringUtil.trimMiddle(url.trimParameters().toDecodedForm(),40);
    callback.setProgressText(VfsBundle.message("download.progress.connecting",presentableUrl),true);
    HttpURLConnection connection=(HttpURLConnection)new URL(url.toExternalForm()).openConnection();
    connection.setConnectTimeout(CONNECT_TIMEOUT);
    connection.setReadTimeout(READ_TIMEOUT);
    input=UrlConnectionUtil.getConnectionInputStreamWithException(connection,new EmptyProgressIndicator());
    final int responseCode=connection.getResponseCode();
    if (responseCode != HttpURLConnection.HTTP_OK) {
      throw new IOException(IdeBundle.message("error.connection.failed.with.http.code.N",responseCode));
    }
    final int size=connection.getContentLength();
    output=new BufferedOutputStream(new FileOutputStream(file));
    callback.setProgressText(VfsBundle.message("download.progress.downloading",presentableUrl),size == -1);
    if (size != -1) {
      callback.setProgressFraction(0);
    }
    FileType fileType=RemoteFileUtil.getFileType(connection.getContentType());
    int len;
    final byte[] buf=new byte[1024];
    int count=0;
    while ((len=input.read(buf)) > 0) {
      if (callback.isCancelled()) {
        return;
      }
      count+=len;
      if (size > 0) {
        callback.setProgressFraction((double)count / size);
      }
      output.write(buf,0,len);
    }
    output.close();
    output=null;
    LOG.debug("Downloading finished, " + size + " bytes downloaded");
    callback.finished(fileType);
  }
 catch (  IOException e) {
    LOG.info(e);
    callback.errorOccurred(VfsBundle.message("cannot.load.remote.file",url,e.getMessage()),false);
  }
 finally {
    if (input != null) {
      try {
        input.close();
      }
 catch (      IOException e) {
        LOG.info(e);
      }
    }
    if (output != null) {
      try {
        output.close();
      }
 catch (      IOException e) {
        LOG.info(e);
      }
    }
  }
}
