{
  final PsiFile file=myElement.getContainingFile();
  final ArrayList<Object> variants=Lists.<Object>newArrayList("str","int","basestring","bool","buffer","bytearray","complex","dict","tuple","enumerate","file","float","frozenset","list","long","set","object");
  if (file instanceof PyFile) {
    variants.addAll(((PyFile)file).getTopLevelClasses());
    final List<PyFromImportStatement> fromImports=((PyFile)file).getFromImports();
    for (    PyFromImportStatement fromImportStatement : fromImports) {
      final PyImportElement[] elements=fromImportStatement.getImportElements();
      for (      PyImportElement element : elements) {
        final PyReferenceExpression referenceExpression=element.getImportReferenceExpression();
        if (referenceExpression == null)         continue;
        final PyType type=TypeEvalContext.slow().getType(referenceExpression);
        if (type instanceof PyClassType) {
          variants.add(((PyClassType)type).getPyClass());
        }
      }
    }
  }
  return variants.toArray();
}
