{
  JsonSchemaWalker.findSchemasForCompletion(myPosition,new JsonSchemaWalker.CompletionSchemesConsumer(){
    @Override public void consume(    boolean isName,    @NotNull JsonSchemaObject schema){
      if (isName) {
        PsiElement possibleParent=myPosition.getParent().getParent();
        final JsonProperty parent=possibleParent instanceof JsonProperty ? (JsonProperty)possibleParent : null;
        final boolean hasValue=hasValuePart(parent);
        final Collection<String> properties=getExistingProperties(parent);
        JsonSchemaPropertyProcessor.process(new JsonSchemaPropertyProcessor.PropertyProcessor(){
          @Override public boolean process(          String name,          JsonSchemaObject schema){
            if (properties.contains(name)) {
              return true;
            }
            addPropertyVariant(name,schema,hasValue);
            return true;
          }
        }
,schema);
      }
 else {
        suggestValues(schema);
      }
    }
  }
,myRootSchema);
  for (  LookupElement variant : myVariants) {
    myResultConsumer.consume(variant);
  }
}
