{
  PsiBuilder.Marker marker=builder.mark();
  ParserUtils.getToken(builder,GroovyTokenTypes.kEXTENDS);
  ParserUtils.getToken(builder,GroovyTokenTypes.mNLS);
  if (ReferenceElement.parseReferenceElement(builder) == ReferenceElement.ReferenceElementResult.FAIL) {
    builder.error(GroovyBundle.message("identifier.expected"));
  }
 else {
    while (ParserUtils.getToken(builder,GroovyTokenTypes.mBAND)) {
      ParserUtils.getToken(builder,GroovyTokenTypes.mNLS);
      if (ReferenceElement.parseReferenceElement(builder) == ReferenceElement.ReferenceElementResult.FAIL) {
        builder.error(GroovyBundle.message("type.expected"));
      }
    }
  }
  marker.done(GroovyElementTypes.TYPE_PARAMETER_EXTENDS_BOUND_LIST);
  return GroovyElementTypes.TYPE_PARAMETER_EXTENDS_BOUND_LIST;
}
