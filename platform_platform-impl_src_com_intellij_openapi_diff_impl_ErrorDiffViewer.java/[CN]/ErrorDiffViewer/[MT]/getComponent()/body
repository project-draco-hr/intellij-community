{
  final JPanel result=new AbstractDataProviderPanel(new BorderLayout(),false){
    @Override public void calcData(    DataKey key,    DataSink sink){
      final Object data=myRequest.getGenericData().get(key.getName());
      if (data != null) {
        sink.put(key,data);
      }
    }
  }
;
  final ActionManager actionManager=ActionManager.getInstance();
  final DiffToolbarComponent toolbarComponent=new DiffToolbarComponent(result);
  final DiffRequest.ToolbarAddons addons=new DiffRequest.ToolbarAddons(){
    @Override public void customize(    DiffToolbar toolbar){
      toolbar.addAction(actionManager.getAction("DiffPanel.Toolbar"));
      toolbar.addAction(actionManager.getAction("ContextHelp"));
      toolbar.addSeparator();
    }
  }
;
  toolbarComponent.resetToolbar(addons);
  final DiffToolbarImpl toolbar=toolbarComponent.getToolbar();
  myRequest.customizeToolbar(toolbar);
  result.add(toolbarComponent,BorderLayout.NORTH);
  DiffContent content1=myRequest.getContents()[0];
  DiffContent content2=myRequest.getContents()[1];
  String message;
  if (DiffUtil.oneIsUnknown(content1,content2)) {
    message=DiffBundle.message("diff.can.not.show.unknown");
  }
 else {
    message=DiffBundle.message("diff.can.not.show");
  }
  final JPanel messagePanel=createMessagePanel(message);
  result.add(messagePanel,BorderLayout.CENTER);
  return result;
}
