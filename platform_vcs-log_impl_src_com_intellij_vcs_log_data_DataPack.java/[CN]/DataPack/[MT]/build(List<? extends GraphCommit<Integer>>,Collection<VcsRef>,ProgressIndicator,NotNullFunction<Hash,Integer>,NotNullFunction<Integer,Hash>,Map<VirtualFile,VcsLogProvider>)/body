{
  indicator.setText("Building graph...");
  final RefsModel refsModel=new RefsModel(allRefs,indexGetter);
  GraphColorManagerImpl colorManager=new GraphColorManagerImpl(refsModel,hashGetter,getRefManagerMap(providers));
  if (!commits.isEmpty()) {
    Set<Integer> branches=getBranchCommitHashIndexes(allRefs,indexGetter);
    PermanentGraphImpl<Integer> permanentGraph=PermanentGraphImpl.newInstance(commits,colorManager,branches);
    ColorGenerator colorGenerator=new ColorGenerator(){
      @Override public Color getColor(      int colorId){
        return com.intellij.vcs.log.graph.ColorGenerator.getColor(colorId);
      }
    }
;
    return new DataPack(refsModel,new DelegateGraphFacade(permanentGraph,colorGenerator),providers);
  }
 else {
    return new DataPack(refsModel,new EmptyGraphFacade(),providers);
  }
}
