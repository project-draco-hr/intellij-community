{
  if (commits.isEmpty()) {
    return EmptyPermanentGraph.getInstance();
  }
  NotNullFunction<Integer,Hash> hashGetter=new NotNullFunction<Integer,Hash>(){
    @NotNull @Override public Hash fun(    Integer commitIndex){
      return hashMap.getHash(commitIndex);
    }
  }
;
  GraphColorManagerImpl colorManager=new GraphColorManagerImpl(refsModel,hashGetter,getRefManagerMap(providers));
  Set<Integer> branches=getBranchCommitHashIndexes(refsModel.getAllRefs(),hashMap);
  StopWatch sw=StopWatch.start("building graph");
  PermanentGraphImpl<Integer> permanentGraph=PermanentGraphImpl.newInstance(commits,colorManager,branches);
  sw.report();
  return permanentGraph;
}
