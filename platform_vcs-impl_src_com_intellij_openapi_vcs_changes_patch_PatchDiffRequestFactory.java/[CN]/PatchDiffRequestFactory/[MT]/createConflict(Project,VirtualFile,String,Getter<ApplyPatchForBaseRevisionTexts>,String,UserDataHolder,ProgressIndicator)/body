{
  if (file == null)   throw new DiffRequestProducerException("Can't show diff for '" + name + "'");
  if (file.getFileType().isBinary())   throw new DiffRequestProducerException("Can't show diff for binary file '" + name + "'");
  final Ref<ApplyPatchForBaseRevisionTexts> textsRef=new Ref<ApplyPatchForBaseRevisionTexts>();
  ApplicationManager.getApplication().invokeAndWait(new Runnable(){
    @Override public void run(){
      textsRef.set(textsGetter.get());
    }
  }
,indicator.getModalityState());
  ApplyPatchForBaseRevisionTexts texts=textsRef.get();
  if (texts.getBase() == null) {
    return ApplyPatchAction.createBadDiffRequest(project,file,texts);
  }
 else {
    String path=FileUtil.toSystemDependentName(file.getPresentableUrl());
    FileType type=file.getFileType();
    String windowTitle=VcsBundle.message("patch.apply.conflict.title",path);
    DiffContentFactory contentFactory=DiffContentFactory.getInstance();
    DocumentContent localContent=contentFactory.createDocument(project,file);
    if (localContent == null)     localContent=contentFactory.create(texts.getLocal().toString(),type);
    DocumentContent baseContent=contentFactory.create(texts.getBase().toString(),type);
    DocumentContent patchedContent=contentFactory.create(texts.getPatched(),type);
    return new SimpleDiffRequest(windowTitle,localContent,baseContent,patchedContent,"Current Version","Base Version",afterTitle);
  }
}
