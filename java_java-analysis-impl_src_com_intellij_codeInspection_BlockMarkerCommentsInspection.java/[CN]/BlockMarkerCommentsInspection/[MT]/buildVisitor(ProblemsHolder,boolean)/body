{
  return new PsiElementVisitor(){
    @Override public void visitComment(    final PsiComment element){
      final IElementType tokenType=element.getTokenType();
      if (!(tokenType.equals(JavaTokenType.END_OF_LINE_COMMENT))) {
        return;
      }
      final Commenter commenter=LanguageCommenters.INSTANCE.forLanguage(element.getLanguage());
      String rawCommentText=element.getText();
      final String prefix=commenter.getLineCommentPrefix();
      if (prefix != null && rawCommentText.startsWith(prefix)) {
        rawCommentText=rawCommentText.substring(prefix.length());
      }
      final String commentText=rawCommentText.trim().toLowerCase();
      if (!commentText.startsWith(END_WORD) || StringUtil.split(commentText," ").size() > 3) {
        return;
      }
      if (MARKER_PATTERN.accepts(element)) {
        holder.registerProblem(element,"Redundant block marker",new LocalQuickFix(){
          @NotNull @Override public String getFamilyName(){
            return "Remove block marker comments";
          }
          @Override public void applyFix(          @NotNull final Project project,          @NotNull final ProblemDescriptor descriptor){
            descriptor.getPsiElement().delete();
          }
        }
);
      }
    }
  }
;
}
