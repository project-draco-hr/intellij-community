{
  try {
    runDone(new TreeRunnable("AbstractTreeUi._expand"){
      @Override public void perform(){
        if (element.length == 0) {
          runDone(onDone);
          return;
        }
        if (myUpdaterState != null) {
          myUpdaterState.clearExpansion();
        }
        final ActionCallback done=new ActionCallback(element.length);
        done.doWhenDone(new TreeRunnable("AbstractTreeUi._expand: on done expandNext"){
          @Override public void perform(){
            runDone(onDone);
          }
        }
).doWhenRejected(new TreeRunnable("AbstractTreeUi._expand: on rejected expandNext"){
          @Override public void perform(){
            runDone(onDone);
          }
        }
);
        expandNext(element,0,parentsOnly,checkIfInStructure,canSmartExpand,done,0);
      }
    }
);
  }
 catch (  ProcessCanceledException e) {
    try {
      runDone(onDone);
    }
 catch (    ProcessCanceledException ignored) {
    }
  }
}
