{
  final DefaultMutableTreeNode toSelect=getNodeForElement(element,false);
  if (toSelect == null) {
    runDone(onDone);
    return;
  }
  if (getRootNode() == toSelect && !myTree.isRootVisible()) {
    runDone(onDone);
    return;
  }
  int preselectedRow=getRowIfUnderSelection(element);
  final int row=preselectedRow == -1 ? myTree.getRowForPath(new TreePath(toSelect.getPath())) : preselectedRow;
  if (myUpdaterState != null) {
    myUpdaterState.addSelection(element);
  }
  if (Registry.is("ide.tree.autoscrollToVCenter") && canBeCentered) {
    setHoldSize(false);
    runDone(new TreeRunnable("AbstractTreeUi.selectVisible"){
      @Override public void perform(){
        TreeUtil.showRowCentered(myTree,row,false,scroll).doWhenDone(new TreeRunnable("AbstractTreeUi.selectVisible: on done show row centered"){
          @Override public void perform(){
            runDone(onDone);
          }
        }
);
      }
    }
);
  }
 else {
    setHoldSize(false);
    TreeUtil.showAndSelect(myTree,row - 2,row + 2,row,-1,addToSelection,scroll).doWhenDone(new TreeRunnable("AbstractTreeUi.selectVisible: on done show and select"){
      @Override public void perform(){
        runDone(onDone);
      }
    }
);
  }
}
