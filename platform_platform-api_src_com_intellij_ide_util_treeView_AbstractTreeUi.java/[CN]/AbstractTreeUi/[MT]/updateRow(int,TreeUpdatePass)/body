{
  invokeLaterIfNeeded(false,new TreeRunnable("AbstractTreeUi.updateRow"){
    @Override public void perform(){
      if (row >= getTree().getRowCount())       return;
      TreePath path=getTree().getPathForRow(row);
      if (path != null) {
        final NodeDescriptor descriptor=getDescriptorFrom(path.getLastPathComponent());
        if (descriptor != null) {
          DefaultMutableTreeNode node=(DefaultMutableTreeNode)path.getLastPathComponent();
          maybeYeild(new AsyncRunnable(){
            @NotNull @Override public Promise<?> run(){
              return update(descriptor,false).done(new TreeConsumer<Boolean>("AbstractTreeUi.updateRow: inner"){
                @Override public void perform(){
                  updateRow(row + 1,pass);
                }
              }
);
            }
          }
,pass,node);
        }
      }
    }
  }
);
}
