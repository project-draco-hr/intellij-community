{
  invokeLaterIfNeeded(false,new TreeRunnable("AbstractTreeUi.updateRow"){
    @Override public void perform(){
      if (row >= getTree().getRowCount())       return;
      TreePath path=getTree().getPathForRow(row);
      if (path != null) {
        final NodeDescriptor descriptor=getDescriptorFrom(path.getLastPathComponent());
        if (descriptor != null) {
          DefaultMutableTreeNode node=(DefaultMutableTreeNode)path.getLastPathComponent();
          maybeYeild(new ActiveRunnable(){
            @NotNull @Override public ActionCallback run(){
              final ActionCallback result=new ActionCallback();
              update(descriptor,false).done(new TreeConsumer<Boolean>("AbstractTreeUi.updateRow: inner"){
                @Override public void perform(){
                  try {
                    updateRow(row + 1,pass);
                  }
  finally {
                    result.setDone();
                  }
                }
              }
).rejected(new Consumer<Throwable>(){
                @Override public void consume(                Throwable error){
                  result.reject(error.getMessage());
                }
              }
);
              return result;
            }
          }
,pass,node);
        }
      }
    }
  }
);
}
