{
  Object element=getElementFor(root);
  if (element != null && getTreeStructure().isAlwaysLeaf(element)) {
    removeFromUnbuilt(root);
    removeLoading(root,true);
    execute(new TreeRunnable("AbstractTreeUi.addSubtreeToUpdate: one"){
      @Override public void perform(){
        getUpdater().runAfterUpdate(runAfterUpdate);
        getUpdater().addSubtreeToUpdate(new TreeUpdatePass(root).setUpdateChildren(false));
      }
    }
);
    return false;
  }
 else {
    execute(new TreeRunnable("AbstractTreeUi.addSubtreeToUpdate: two"){
      @Override public void perform(){
        getUpdater().runAfterUpdate(runAfterUpdate);
        getUpdater().addSubtreeToUpdate(new TreeUpdatePass(root).setUpdateStructure(updateStructure).setUpdateStamp(-1));
      }
    }
);
    return true;
  }
}
