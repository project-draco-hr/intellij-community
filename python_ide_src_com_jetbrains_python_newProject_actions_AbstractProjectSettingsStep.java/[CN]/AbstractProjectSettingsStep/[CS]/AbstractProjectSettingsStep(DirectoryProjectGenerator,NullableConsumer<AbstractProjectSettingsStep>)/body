{
  super();
  myProjectGenerator=projectGenerator;
  myCallback=callback;
  myProjectDirectory=FileUtil.findSequentNonexistentFile(new File(ProjectUtil.getBaseDir()),"untitled","");
  if (myProjectGenerator instanceof WebProjectTemplate) {
    ((WebProjectTemplate)myProjectGenerator).getPeer().addSettingsStateListener(new WebProjectGenerator.SettingsStateListener(){
      @Override public void stateChanged(      boolean validSettings){
        checkValid();
        if (validSettings) {
          setErrorText(null);
        }
      }
    }
);
  }
  myCreateAction=new AnAction("Create    ","Create Project",getIcon()){
    @Override public void actionPerformed(    AnActionEvent e){
      boolean isOk;
      try {
        isOk=checkValid();
        if (myProjectGenerator instanceof WebProjectTemplate) {
          final ValidationInfo validationInfo=((WebProjectTemplate)myProjectGenerator).getPeer().validate();
          isOk=validationInfo == null;
          if (!isOk) {
            setErrorText(validationInfo.message);
          }
        }
      }
 catch (      RuntimeException e1) {
        isOk=false;
        setErrorText(e1.getMessage());
      }
      if (isOk && myCallback != null)       myCallback.consume(AbstractProjectSettingsStep.this);
    }
  }
;
}
