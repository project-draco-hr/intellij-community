{
  return new SettingsEditor<RunConfiguration>(){
    private String myFileUrl=null;
    private String myTargetName=null;
    private final JTextField myTextField=new JTextField();
    private ActionListener myActionListener=new ActionListener(){
      @Override public void actionPerformed(      ActionEvent e){
        AntBuildTarget buildTarget=getTarget();
        final TargetChooserDialog dlg=new TargetChooserDialog(getProject(),buildTarget);
        dlg.show();
        if (dlg.isOK()) {
          myFileUrl=null;
          myTargetName=null;
          buildTarget=dlg.getSelectedTarget();
          if (buildTarget != null) {
            final VirtualFile vFile=buildTarget.getModel().getBuildFile().getVirtualFile();
            if (vFile != null) {
              myFileUrl=vFile.getUrl();
              myTargetName=buildTarget.getName();
            }
          }
          updateTextField();
        }
      }
    }
;
    private void updateTextField(){
      myTextField.setText("");
      if (myFileUrl != null && myTargetName != null) {
        myTextField.setText(myTargetName);
      }
      fireEditorStateChanged();
    }
    @Override protected void resetEditorFrom(    RunConfiguration s){
      AntRunConfiguration configuration=(AntRunConfiguration)s;
      myFileUrl=configuration.mySettings.myFileUrl;
      myTargetName=configuration.mySettings.myTargetName;
      updateTextField();
    }
    @Override protected void applyEditorTo(    RunConfiguration s) throws ConfigurationException {
      AntRunConfiguration configuration=(AntRunConfiguration)s;
      configuration.mySettings.myFileUrl=myFileUrl;
      configuration.mySettings.myTargetName=myTargetName;
    }
    @NotNull @Override protected JComponent createEditor(){
      myTextField.setEditable(false);
      return new TextFieldWithBrowseButton(myTextField,myActionListener);
    }
  }
;
}
