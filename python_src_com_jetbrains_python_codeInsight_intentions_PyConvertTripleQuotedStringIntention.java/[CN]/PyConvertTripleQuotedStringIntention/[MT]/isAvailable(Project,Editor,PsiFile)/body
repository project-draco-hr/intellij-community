{
  if (!(file instanceof PyFile)) {
    return false;
  }
  final int caretOffset=editor.getCaretModel().getOffset();
  final PyStringLiteralExpression string=PsiTreeUtil.getParentOfType(file.findElementAt(caretOffset),PyStringLiteralExpression.class);
  if (string != null) {
    final PyDocStringOwner docStringOwner=PsiTreeUtil.getParentOfType(string,PyDocStringOwner.class);
    if (docStringOwner != null) {
      if (docStringOwner.getDocStringExpression() == string)       return false;
    }
    boolean insideTripleQuotedString=false;
    for (    StringNodeInfo info : extractStringNodesInfo(string)) {
      if (StringUtil.containsIgnoreCase(info.prefix,"r") && info.isTripleQuoted) {
        return false;
      }
      if (info.isTripleQuoted && info.node.getTextRange().contains(caretOffset)) {
        insideTripleQuotedString=true;
      }
    }
    return insideTripleQuotedString;
  }
  return false;
}
