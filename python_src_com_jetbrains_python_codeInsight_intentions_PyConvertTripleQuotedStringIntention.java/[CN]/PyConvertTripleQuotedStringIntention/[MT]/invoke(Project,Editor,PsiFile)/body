{
  PyStringLiteralExpression string=PsiTreeUtil.getParentOfType(file.findElementAt(editor.getCaretModel().getOffset()),PyStringLiteralExpression.class);
  PyElementGenerator elementGenerator=PyElementGenerator.getInstance(project);
  if (string != null) {
    String stringText=string.getText();
    final int prefixLength=PyStringLiteralExpressionImpl.getPrefixLength(stringText);
    String prefix=stringText.substring(0,prefixLength);
    Character firstQuote=stringText.substring(prefixLength).charAt(0);
    stringText=string.getStringValue();
    List<String> subStrings=StringUtil.split(stringText,"\n",false,true);
    StringBuilder result=new StringBuilder();
    if (subStrings.size() != 1)     result.append("(");
    boolean lastString=false;
    for (    String s : subStrings) {
      result.append(prefix);
      result.append(firstQuote);
      String validSubstring=convertToValidSubString(s,firstQuote);
      if (s.endsWith("'''") || s.endsWith("\"\"\"")) {
        lastString=true;
      }
      result.append(validSubstring);
      result.append(firstQuote);
      if (!lastString)       result.append(" ").append("\n");
    }
    if (subStrings.size() != 1)     result.append(")");
    PyExpressionStatement e=elementGenerator.createFromText(LanguageLevel.forElement(string),PyExpressionStatement.class,result.toString());
    string.replace(e.getExpression());
  }
}
