{
  String text=myFragments.get(fragmentIndex);
  AttributedString string=new AttributedString(text);
  int start=0;
  int end=text.length();
  AttributedCharacterIterator it=string.getIterator(new AttributedCharacterIterator.Attribute[0],start,end);
  Font currentFont=basefont;
  int currentIndex=start;
  for (char c=it.first(); c != CharacterIterator.DONE; c=it.next()) {
    Font font=basefont;
    if (!font.canDisplay(c)) {
      for (      SuitableFontProvider provider : SuitableFontProvider.EP_NAME.getExtensions()) {
        font=provider.getFontAbleToDisplay(c,basefont.getSize(),basefont.getStyle(),basefont.getFamily());
        if (font != null)         break;
      }
    }
    int i=it.getIndex();
    if (!Comparing.equal(currentFont,font)) {
      if (i > currentIndex) {
        string.addAttribute(TextAttribute.FONT,currentFont,currentIndex,i);
      }
      currentFont=font;
      currentIndex=i;
    }
  }
  if (currentIndex < end) {
    string.addAttribute(TextAttribute.FONT,currentFont,currentIndex,end);
  }
  TextLayout layout=new TextLayout(string.getIterator(),fontRenderContext);
  if (fragmentIndex >= myLayouts.size()) {
    myLayouts.addAll(Collections.nCopies(fragmentIndex - myLayouts.size() + 1,null));
  }
  myLayouts.set(fragmentIndex,layout);
  myLayoutFont=getBaseFont();
  return layout;
}
