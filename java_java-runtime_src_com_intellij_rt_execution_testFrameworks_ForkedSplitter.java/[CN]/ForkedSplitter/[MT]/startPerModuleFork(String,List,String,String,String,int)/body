{
  if (myForkMode.equals("none")) {
    final List childArgs=createPerModuleArgs(packageName,workingDir,classNames,myRootDescription);
    return startChildFork(childArgs,new File(workingDir),classpath);
  }
 else {
    final List children=new ArrayList(getChildren(myRootDescription));
    for (Iterator iterator=children.iterator(); iterator.hasNext(); ) {
      if (!classNames.contains(getTestClassName(iterator.next()))) {
        iterator.remove();
      }
    }
    final boolean forkTillMethod=myForkMode.equalsIgnoreCase("method");
    return splitChildren(children,result,forkTillMethod,new File(workingDir),classpath);
  }
}
