{
  mySdkSettingsWereModified=false;
  Sdk selectedSdk=getSelectedSdk();
  if (selectedSdk instanceof PyDetectedSdk) {
    final String sdkName=selectedSdk.getName();
    VirtualFile sdkHome=ApplicationManager.getApplication().runWriteAction(new Computable<VirtualFile>(){
      @Override public VirtualFile compute(){
        return LocalFileSystem.getInstance().refreshAndFindFileByPath(sdkName);
      }
    }
);
    selectedSdk=SdkConfigurationUtil.createAndAddSDK(sdkHome.getPath(),PythonSdkType.getInstance());
    if (selectedSdk != null) {
      myProjectSdksModel.addSdk(selectedSdk);
    }
  }
 else   if (myInitialSdkSet.contains(selectedSdk) && selectedSdk != null) {
    PythonSdkUpdater.updateOrShowError(selectedSdk,null,myProject,null);
  }
  if (selectedSdk != null) {
    updateSdkList(false);
    myProjectSdksModel.apply();
    setSelectedSdk(selectedSdk);
    PySdkService.getInstance().solidifySdk(selectedSdk);
  }
  final Sdk prevSdk=getSdk();
  setSdk(selectedSdk);
  rehighlightVersionSpecific(selectedSdk,prevSdk);
}
