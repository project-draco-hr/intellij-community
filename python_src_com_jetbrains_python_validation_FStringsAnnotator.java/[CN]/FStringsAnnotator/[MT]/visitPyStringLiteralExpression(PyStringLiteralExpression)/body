{
  for (  ASTNode node : pyString.getStringNodes()) {
    final StringNodeInfo nodeInfo=new StringNodeInfo(node);
    final String nodeText=node.getText();
    if (nodeInfo.isFormatted()) {
      final int nodeOffset=node.getTextRange().getStartOffset();
      final int nodeContentEnd=nodeInfo.getContentRange().getEndOffset();
      final List<FragmentOffsets> fragments=FStringParser.parse(nodeText);
      boolean hasUnclosedBrace=false;
      for (      FragmentOffsets fragment : fragments) {
        final int fragContentEnd=fragment.getContentEndOffset();
        if (fragment.getLeftBraceOffset() + 1 >= fragContentEnd) {
          report(fragment.getContentRange().shiftRight(nodeOffset),"Empty expressions are not allowed inside f-strings");
        }
        if (fragment.getRightBraceOffset() == -1) {
          hasUnclosedBrace=true;
        }
        if (fragContentEnd < nodeContentEnd && nodeText.charAt(fragContentEnd) == '!' && fragContentEnd + 1 < nodeContentEnd) {
          final char conversionChar=nodeText.charAt(fragContentEnd + 1);
          final int offset=fragContentEnd + nodeOffset + 1;
          if (fragContentEnd + 1 == fragment.getRightBraceOffset() || conversionChar == ':') {
            reportEmpty(offset,"Conversion character is expected: should be one of 's', 'r', 'a'");
          }
 else           if ("sra".indexOf(conversionChar) < 0) {
            reportCharacter(offset,"Illegal conversion character '" + conversionChar + "': should be one of 's', 'r', 'a'");
          }
        }
      }
      if (hasUnclosedBrace) {
        reportEmpty(nodeContentEnd + nodeOffset,"'}' is expected");
      }
    }
  }
}
