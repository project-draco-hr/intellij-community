{
  final List<Pair<String,String>> pairs=new ArrayList<Pair<String,String>>();
  PlatformTestUtil.registerExtension(VcsCheckoutProcessor.EXTENSION_POINT_NAME,new VcsCheckoutProcessor(){
    @NotNull @Override public String getId(){
      return "schema";
    }
    @Override public boolean checkout(    @NotNull Map<String,String> parameters,    @NotNull VirtualFile parentDirectory,    @NotNull String directoryName){
      pairs.add(Pair.create(parameters.get("url"),directoryName));
      return true;
    }
  }
,myTestRootDisposable);
  ProjectSetProcessor.Context context=new ProjectSetProcessor.Context();
  context.directoryName="newDir";
  context.directory=getSourceRoot();
  readDescriptor(new File(getTestDataPath() + "vcs.json"),context);
  Collections.sort(pairs,new Comparator<Pair<String,String>>(){
    @Override public int compare(    @NotNull Pair<String,String> o1,    @NotNull Pair<String,String> o2){
      return o2.first.compareTo(o1.first);
    }
  }
);
  assertEquals(Pair.create("schema://foo.bar/path","test"),pairs.get(1));
  assertEquals(Pair.create("schema://foo.bar1/path1","test/custom"),pairs.get(0));
}
