{
  for (  PsiMethod method : methods) {
    ProgressManager.checkCanceled();
    PsiClass aClass=method.getContainingClass();
    if (aClass == null || aClass.hasModifierProperty(PsiModifier.FINAL) || aClass.isInterface())     continue;
    boolean canHaveSiblingSuper=!method.hasModifierProperty(PsiModifier.ABSTRACT) && !method.hasModifierProperty(PsiModifier.STATIC) && method.hasModifierProperty(PsiModifier.PUBLIC)&& !method.hasModifierProperty(PsiModifier.FINAL)&& !method.hasModifierProperty(PsiModifier.NATIVE);
    if (!canHaveSiblingSuper)     continue;
    PsiMethod siblingInheritedViaSubClass=FindSuperElementsHelper.getSiblingInheritedViaSubClass(method);
    if (siblingInheritedViaSubClass == null) {
      continue;
    }
    PsiElement range=getMethodRange(method);
    ArrowUpLineMarkerInfo upInfo=new ArrowUpLineMarkerInfo(range,AllIcons.Gutter.ImplementingMethod,MarkerType.SIBLING_OVERRIDING_METHOD,Pass.UPDATE_OVERRIDDEN_MARKERS);
    LineMarkerInfo info=NavigateAction.setNavigateAction(upInfo,"Go to super method",IdeActions.ACTION_GOTO_SUPER);
    result.add(info);
  }
}
