{
  if (settings != null) {
    myHelper.ensureInstalledWrapper(id,projectPath,settings,listener);
  }
  final GradleProjectResolverExtension projectResolverChain=createProjectResolverChain(settings);
  DefaultProjectResolverContext resolverContext=new DefaultProjectResolverContext(id,projectPath,settings,listener,isPreviewMode);
  final DataNode<ProjectData> resultProjectDataNode=myHelper.execute(projectPath,settings,new ProjectConnectionDataNodeFunction(resolverContext,projectResolverChain,false));
  final String buildSrcProjectPath=projectPath + "/buildSrc";
  DefaultProjectResolverContext buildSrcResolverCtx=new DefaultProjectResolverContext(id,buildSrcProjectPath,settings,listener,isPreviewMode);
  resolverContext.copyUserDataTo(buildSrcResolverCtx);
  handleBuildSrcProject(resultProjectDataNode,new ProjectConnectionDataNodeFunction(buildSrcResolverCtx,projectResolverChain,true));
  return resultProjectDataNode;
}
