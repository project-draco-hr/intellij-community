{
  final ExternalProject externalRootProject=isPreview ? models.getExtraProject(null,ExternalProjectPreview.class) : models.getExtraProject(null,ExternalProject.class);
  if (externalRootProject == null)   return Collections.emptyMap();
  final DefaultExternalProject wrappedExternalRootProject=new DefaultExternalProject(externalRootProject);
  models.addExtraProject(wrappedExternalRootProject,ExternalProject.class);
  final Map<String,ExternalProject> externalProjectsMap=createExternalProjectsMap(wrappedExternalRootProject);
  DomainObjectSet<? extends IdeaModule> gradleModules=models.getIdeaProject().getModules();
  if (gradleModules != null && !gradleModules.isEmpty()) {
    for (    IdeaModule ideaModule : gradleModules) {
      final ExternalProject externalProject=externalProjectsMap.get(getModuleId(ideaModule));
      if (externalProject != null) {
        models.addExtraProject(externalProject,ExternalProject.class,ideaModule);
      }
    }
  }
  return externalProjectsMap;
}
