{
  PsiType qualifierType=qualifier.getType();
  ResolveState state=ResolveState.initial().put(ResolverProcessor.RESOLVE_CONTEXT,qualifier);
  if (qualifierType == null || qualifierType == PsiType.VOID) {
    if (qualifier instanceof GrReferenceExpression) {
      PsiElement resolved=((GrReferenceExpression)qualifier).resolve();
      if (resolved != null && !resolved.processDeclarations(processor,state,null,place))       return false;
      if (!(resolved instanceof PsiPackage)) {
        PsiType objectQualifier=TypesUtil.getJavaLangObject(place);
        if (!processQualifierType(processor,objectQualifier,state,place))         return false;
      }
    }
  }
 else   if (qualifierType instanceof PsiIntersectionType) {
    for (    PsiType conjunct : ((PsiIntersectionType)qualifierType).getConjuncts()) {
      if (!processQualifierType(processor,conjunct,state,place))       return false;
    }
  }
 else {
    if (!processQualifierType(processor,qualifierType,state,place))     return false;
    if (qualifier instanceof GrReferenceExpression && !PsiUtil.isSuperReference(qualifier) && !PsiUtil.isInstanceThisRef(qualifier)) {
      PsiElement resolved=((GrReferenceExpression)qualifier).resolve();
      if (resolved instanceof PsiClass) {
        if (!processJavaLangClass(qualifierType,processor,state,place))         return false;
      }
    }
  }
  return true;
}
