{
  Dimension cpd, mbd, tpd;
  int cpWidth=Integer.MAX_VALUE;
  int cpHeight=Integer.MAX_VALUE;
  int mbWidth=Integer.MAX_VALUE;
  int mbHeight=Integer.MAX_VALUE;
  int tpWidth=Integer.MAX_VALUE;
  int tpHeight=Integer.MAX_VALUE;
  Insets i=target.getInsets();
  JRootPane root=(JRootPane)target;
  if (root.getContentPane() != null) {
    cpd=root.getContentPane().getMaximumSize();
    if (cpd != null) {
      cpWidth=cpd.width;
      cpHeight=cpd.height;
    }
  }
  if (root.getJMenuBar() != null) {
    mbd=root.getJMenuBar().getMaximumSize();
    if (mbd != null) {
      mbWidth=mbd.width;
      mbHeight=mbd.height;
    }
  }
  if ((root.getWindowDecorationStyle() != JRootPane.NONE) && (root.getUI() instanceof DarculaRootPaneUI)) {
    JComponent titlePane=((DarculaRootPaneUI)root.getUI()).getTitlePane();
    if (titlePane != null) {
      tpd=titlePane.getMaximumSize();
      if (tpd != null) {
        tpWidth=tpd.width;
        tpHeight=tpd.height;
      }
    }
  }
  int maxHeight=max(cpHeight,mbHeight,tpHeight);
  if (maxHeight != Integer.MAX_VALUE) {
    maxHeight=cpHeight + mbHeight + tpHeight+ i.top+ i.bottom;
  }
  int maxWidth=max(cpWidth,mbWidth,tpWidth);
  if (maxWidth != Integer.MAX_VALUE) {
    maxWidth+=i.left + i.right;
  }
  return new Dimension(maxWidth,maxHeight);
}
