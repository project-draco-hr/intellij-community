{
  return ApplicationManager.getApplication().runReadAction(new Computable<List<T>>(){
    @Override public List<T> compute(){
      final Set<VirtualFile> files=new HashSet<>();
      try {
        final GlobalSearchScope scope=GlobalSearchScope.projectScope(project);
        files.addAll(FileBasedIndex.getInstance().getContainingFiles(NAME,className,scope));
        final String packageName=StringUtil.getPackageName(className);
        if (!StringUtil.isEmpty(packageName)) {
          files.addAll(FileBasedIndex.getInstance().getContainingFiles(NAME,packageName + ".*",scope));
        }
      }
 catch (      IndexNotReadyException e) {
        return Collections.emptyList();
      }
      if (files.isEmpty())       return Collections.emptyList();
      List<T> result=new ArrayList<T>();
      for (      VirtualFile file : files) {
        if (!file.isValid())         continue;
        final T fFile=f.fun(file);
        if (fFile != null) {
          result.add(fFile);
        }
      }
      return result;
    }
  }
);
}
