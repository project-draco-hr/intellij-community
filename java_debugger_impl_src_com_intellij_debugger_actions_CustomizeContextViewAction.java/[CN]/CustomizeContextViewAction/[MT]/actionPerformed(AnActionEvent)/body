{
  final Project project=CommonDataKeys.PROJECT.getData(e.getDataContext());
  Disposable disposable=Disposer.newDisposable();
  final CompositeConfigurable configurable=new TabbedConfigurable(disposable){
    @Override protected List<Configurable> createConfigurables(){
      ArrayList<Configurable> array=new ArrayList<Configurable>();
      array.add(new DebuggerDataViewsConfigurable(project));
      array.add(new UserRenderersConfigurable(project));
      return array;
    }
    @Override public void apply() throws ConfigurationException {
      super.apply();
      NodeRendererSettings.getInstance().fireRenderersChanged();
    }
    @Override public String getDisplayName(){
      return DebuggerBundle.message("title.customize.data.views");
    }
    @Override public String getHelpTopic(){
      return "reference.debug.customize.data.view";
    }
    @Override protected void createConfigurableTabs(){
      for (      Configurable configurable : getConfigurables()) {
        JComponent component=configurable.createComponent();
        component.setBorder(new EmptyBorder(8,8,8,8));
        myTabbedPane.addTab(configurable.getDisplayName(),component);
      }
    }
  }
;
  SingleConfigurableEditor editor=new SingleConfigurableEditor(project,configurable);
  Disposer.register(editor.getDisposable(),disposable);
  editor.show();
}
