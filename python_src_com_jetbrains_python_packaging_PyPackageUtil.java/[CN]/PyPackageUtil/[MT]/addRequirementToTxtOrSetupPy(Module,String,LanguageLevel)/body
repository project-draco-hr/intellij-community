{
  final VirtualFile requirementsTxt=findRequirementsTxt(module);
  if (requirementsTxt != null && requirementsTxt.isWritable()) {
    final Document document=FileDocumentManager.getInstance().getDocument(requirementsTxt);
    if (document != null) {
      document.insertString(0,requirementName + "\n");
    }
    return;
  }
  final PyFile setupPy=findSetupPy(module);
  if (setupPy == null) {
    return;
  }
  final PyCallExpression setupCall=findSetupCall(setupPy);
  final PyListLiteralExpression installRequires=findSetupPyInstallRequires(module,setupCall);
  final PyElementGenerator generator=PyElementGenerator.getInstance(module.getProject());
  if (installRequires != null && installRequires.isWritable()) {
    final String text=String.format("'%s'",requirementName);
    final PyExpression generated=generator.createExpressionFromText(languageLevel,text);
    installRequires.add(generated);
    return;
  }
  if (setupCall != null) {
    final PyArgumentList argumentList=setupCall.getArgumentList();
    final PyKeywordArgument requiresArg=generateRequiresKwarg(setupPy,requirementName,languageLevel,generator);
    if (argumentList != null && requiresArg != null) {
      argumentList.addArgument(requiresArg);
    }
  }
}
