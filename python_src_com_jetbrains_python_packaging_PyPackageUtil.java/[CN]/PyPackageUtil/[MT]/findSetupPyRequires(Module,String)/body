{
  final PyFile setupPy=findSetupPy(module);
  if (setupPy != null) {
    final PyCallExpression setupCall=findSetupCall(setupPy);
    final PyExpression argumentValue=findSetupCallArgumentValue(setupCall,kwargName);
    if (argumentValue instanceof PyListLiteralExpression) {
      return (PyListLiteralExpression)argumentValue;
    }
    if (argumentValue instanceof PyReferenceExpression) {
      final TypeEvalContext context=TypeEvalContext.deepCodeInsight(module.getProject());
      final PyResolveContext resolveContext=PyResolveContext.noImplicits().withTypeEvalContext(context);
      final QualifiedResolveResult result=((PyReferenceExpression)argumentValue).followAssignmentsChain(resolveContext);
      final PsiElement element=result.getElement();
      if (element instanceof PyListLiteralExpression) {
        return (PyListLiteralExpression)element;
      }
    }
  }
  return null;
}
