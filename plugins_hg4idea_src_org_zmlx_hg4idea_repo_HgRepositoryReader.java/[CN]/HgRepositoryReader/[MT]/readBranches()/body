{
  Map<String,LinkedHashSet<Hash>> branchesWithHashes=new HashMap<>();
  if (isBranchInfoAvailable()) {
    Pattern activeBranchPattern=myStatusInBranchFile ? HASH_STATUS_NAME : HASH_NAME;
    String[] branchesWithHeads=DvcsUtil.tryLoadFileOrReturn(myBranchHeadsFile,"").split("\n");
    for (int i=1; i < branchesWithHeads.length; ++i) {
      Matcher matcher=activeBranchPattern.matcher(branchesWithHeads[i]);
      if (matcher.matches()) {
        String name=matcher.group(2);
        if (branchesWithHashes.containsKey(name)) {
          branchesWithHashes.get(name).add(myVcsObjectsFactory.createHash(matcher.group(1)));
        }
 else {
          LinkedHashSet<Hash> hashes=new LinkedHashSet<>();
          hashes.add(myVcsObjectsFactory.createHash(matcher.group(1)));
          branchesWithHashes.put(name,hashes);
        }
      }
    }
  }
  return branchesWithHashes;
}
