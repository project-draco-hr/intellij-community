{
  final DebugEnvironment modelEnvironment=environment.getEnvironment();
  final DebuggerSession debuggerSession=DebuggerManagerEx.getInstanceEx(myProject).attachVirtualMachine(modelEnvironment);
  if (debuggerSession == null) {
    return null;
  }
  final DebugProcessImpl debugProcess=debuggerSession.getProcess();
  if (debugProcess.isDetached() || debugProcess.isDetaching()) {
    debuggerSession.dispose();
    return null;
  }
  if (modelEnvironment.isRemote()) {
    debugProcess.putUserData(BatchEvaluator.REMOTE_SESSION_KEY,Boolean.TRUE);
  }
  XDebugSession debugSession=XDebuggerManager.getInstance(myProject).startSessionAndShowTab(modelEnvironment.getSessionName(),environment.getReuseContent(),new XDebugProcessStarter(){
    @Override @NotNull public XDebugProcess start(    @NotNull XDebugSession session){
      return JavaDebugProcess.create(session,debuggerSession);
    }
  }
);
  return debugSession.getRunContentDescriptor();
}
