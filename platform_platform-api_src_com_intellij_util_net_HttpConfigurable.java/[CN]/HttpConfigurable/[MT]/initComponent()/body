{
  final HttpConfigurable currentState=getState();
  if (currentState != null) {
    final Element serialized=XmlSerializer.serializeIfNotDefault(currentState,new SkipDefaultsSerializationFilter());
    if (serialized == null) {
      final SharedProxyConfig.ProxyParameters cfg=SharedProxyConfig.load();
      if (cfg != null) {
        SharedProxyConfig.clear();
        if (cfg.host != null) {
          USE_HTTP_PROXY=true;
          PROXY_HOST=cfg.host;
          PROXY_PORT=cfg.port;
          if (cfg.login != null) {
            setPlainProxyPassword(new String(cfg.password));
            storeSecure("proxy.login",cfg.login);
            PROXY_AUTHENTICATION=true;
            KEEP_PROXY_PASSWORD=true;
          }
        }
      }
    }
  }
  mySelector=new IdeaWideProxySelector(this);
  String name=getClass().getName();
  CommonProxy.getInstance().setCustom(name,mySelector);
  CommonProxy.getInstance().setCustomAuth(name,new IdeaWideAuthenticator(this));
}
