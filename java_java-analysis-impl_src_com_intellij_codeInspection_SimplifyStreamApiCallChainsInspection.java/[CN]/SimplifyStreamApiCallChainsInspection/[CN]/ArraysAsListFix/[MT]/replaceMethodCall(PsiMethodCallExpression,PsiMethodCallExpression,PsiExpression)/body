{
  methodCall.getArgumentList().replace(qualifierCall.getArgumentList());
  final Project project=methodCall.getProject();
  PsiType[] parameters=qualifierCall.getMethodExpression().getTypeParameters();
  String replacement;
  if (parameters.length == 1) {
    replacement=myClassName + ".<" + parameters[0].getCanonicalText()+ ">"+ myMethodName;
  }
 else {
    replacement=myClassName + "." + myMethodName;
  }
  final PsiExpression newMethodExpression=JavaPsiFacade.getElementFactory(project).createExpressionFromText(replacement,methodCall);
  JavaCodeStyleManager.getInstance(project).shortenClassReferences(methodCall.getMethodExpression().replace(newMethodExpression));
}
