{
  if (!(statement instanceof PsiDeclarationStatement))   return null;
  PsiDeclarationStatement declaration=(PsiDeclarationStatement)statement;
  if (declaration.getDeclaredElements().length != 1)   return null;
  PsiElement element=declaration.getDeclaredElements()[0];
  if (!(element instanceof PsiLocalVariable))   return null;
  PsiLocalVariable variable=(PsiLocalVariable)element;
  PsiExpression initializer=variable.getInitializer();
  if (!(initializer instanceof PsiMethodCallExpression))   return null;
  PsiMethodCallExpression call=(PsiMethodCallExpression)initializer;
  if (call.getArgumentList().getExpressions().length != 0)   return null;
  PsiReferenceExpression methodExpression=call.getMethodExpression();
  if (!"iterator".equals(methodExpression.getReferenceName()))   return null;
  PsiMethod method=call.resolveMethod();
  if (method == null || !InheritanceUtil.isInheritor(method.getContainingClass(),CommonClassNames.JAVA_UTIL_COLLECTION))   return null;
  PsiType type=variable.getType();
  if (!(type instanceof PsiClassType) || !((PsiClassType)type).rawType().equalsToText(CommonClassNames.JAVA_UTIL_ITERATOR))   return null;
  return new IteratorDeclaration(variable,methodExpression.getQualifierExpression());
}
