{
  if (!expectedName.equals(methodCallExpression.getMethodExpression().getReferenceName())) {
    return false;
  }
  final PsiMethod method=methodCallExpression.resolveMethod();
  if (method == null)   return false;
  PsiMethod[] superMethods=method.findDeepestSuperMethods();
  if (superMethods.length == 0) {
    superMethods=new PsiMethod[]{method};
  }
  for (  PsiMethod psiMethod : superMethods) {
    final PsiClass aClass=psiMethod.getContainingClass();
    if (aClass != null && CommonClassNames.JAVA_UTIL_MAP.equals(aClass.getQualifiedName())) {
      return true;
    }
  }
  return false;
}
