{
  if (!PsiUtil.isLanguageLevel8OrHigher(holder.getFile())) {
    return PsiElementVisitor.EMPTY_VISITOR;
  }
  return new JavaElementVisitor(){
    @Override public void visitMethodCallExpression(    PsiMethodCallExpression expression){
      super.visitMethodCallExpression(expression);
      PsiElement nameElement=expression.getMethodExpression().getReferenceNameElement();
      if (nameElement != null && expression.getArgumentList().getExpressions().length == 2 && "sort".equals(nameElement.getText())) {
        PsiMethod method=expression.resolveMethod();
        if (method != null) {
          PsiClass containingClass=method.getContainingClass();
          if (containingClass != null && CommonClassNames.JAVA_UTIL_COLLECTIONS.equals(containingClass.getQualifiedName())) {
            holder.registerProblem(nameElement,QuickFixBundle.message("java.8.collections.api.inspection.sort.description"),new ReplaceWithListSortFix());
          }
        }
      }
    }
    @Override public void visitConditionalExpression(    PsiConditionalExpression expression){
      final ConditionInfo conditionInfo=extractConditionInfo(expression.getCondition());
      if (conditionInfo == null)       return;
      final PsiExpression thenExpression=expression.getThenExpression();
      final PsiExpression elseExpression=expression.getElseExpression();
      if (thenExpression == null || elseExpression == null)       return;
      analyzeCorrespondenceOfPutAndGet(conditionInfo.isInverted() ? thenExpression : elseExpression,conditionInfo.isInverted() ? elseExpression : thenExpression,conditionInfo.getQualifier(),conditionInfo.getContainsKey(),holder,expression);
    }
    @Override public void visitIfStatement(    PsiIfStatement statement){
      final PsiExpression condition=statement.getCondition();
      final ConditionInfo conditionInfo=extractConditionInfo(condition);
      if (conditionInfo == null)       return;
      PsiStatement maybeGetBranch=conditionInfo.isInverted() ? statement.getElseBranch() : statement.getThenBranch();
      if (maybeGetBranch instanceof PsiBlockStatement) {
        final PsiStatement[] getBranchStatements=((PsiBlockStatement)maybeGetBranch).getCodeBlock().getStatements();
        if (getBranchStatements.length > 1) {
          return;
        }
        maybeGetBranch=getBranchStatements.length == 0 ? null : getBranchStatements[0];
      }
      final PsiStatement branch=conditionInfo.isInverted() ? statement.getThenBranch() : statement.getElseBranch();
      final PsiStatement maybePutStatement;
      if (branch instanceof PsiBlockStatement) {
        final PsiStatement[] statements=((PsiBlockStatement)branch).getCodeBlock().getStatements();
        if (statements.length == 0)         return;
        if (statements.length != 1) {
          return;
        }
        maybePutStatement=statements[statements.length - 1];
      }
 else {
        maybePutStatement=branch;
      }
      if (maybePutStatement != null) {
        analyzeCorrespondenceOfPutAndGet(maybePutStatement,maybeGetBranch,conditionInfo.getQualifier(),conditionInfo.getContainsKey(),holder,statement);
      }
    }
  }
;
}
