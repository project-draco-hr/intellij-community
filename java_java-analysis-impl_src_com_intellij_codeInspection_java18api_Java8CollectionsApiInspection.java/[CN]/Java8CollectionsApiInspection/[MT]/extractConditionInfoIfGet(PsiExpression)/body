{
  if (condition instanceof PsiBinaryExpression && (((PsiBinaryExpression)condition).getOperationSign().getTokenType().equals(JavaTokenType.EQEQ) || ((PsiBinaryExpression)condition).getOperationSign().getTokenType().equals(JavaTokenType.NE))) {
    final List<PsiExpression> operands=ContainerUtil.list(((PsiBinaryExpression)condition).getLOperand(),((PsiBinaryExpression)condition).getROperand());
    PsiExpression getQualifier=null;
    PsiExpression keyExpression=null;
    boolean isNullFound=false;
    for (    PsiExpression operand : operands) {
      if (operand == null)       return null;
      if (operand instanceof PsiMethodCallExpression) {
        final PsiMethodCallExpression maybeGetCall=(PsiMethodCallExpression)operand;
        if (!isJavaUtilMapMethodWithName(maybeGetCall,"get")) {
          return null;
        }
        final PsiExpression[] arguments=maybeGetCall.getArgumentList().getExpressions();
        if (arguments.length != 1)         return null;
        getQualifier=maybeGetCall.getMethodExpression().getQualifierExpression();
        keyExpression=arguments[0];
      }
 else       if (operand instanceof PsiLiteralExpression && PsiKeyword.NULL.equals(operand.getText())) {
        isNullFound=true;
      }
    }
    if (getQualifier == null && keyExpression == null && isNullFound) {
      return null;
    }
    return new ConditionInfo(getQualifier,keyExpression,((PsiBinaryExpression)condition).getOperationSign().getTokenType().equals(JavaTokenType.EQEQ));
  }
  return null;
}
