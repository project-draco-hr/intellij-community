{
  final PsiElement maybePutMethodCall;
  final PsiElement maybeGetMethodCall;
  if (adjustedThenBranch == null) {
    maybeGetMethodCall=null;
    if (adjustedElseBranch instanceof PsiExpressionStatement) {
      final PsiExpression expression=((PsiExpressionStatement)adjustedElseBranch).getExpression();
      if (expression instanceof PsiMethodCallExpression && isJavaUtilMapMethodWithName((PsiMethodCallExpression)expression,"put")) {
        maybePutMethodCall=expression;
      }
 else {
        maybePutMethodCall=null;
      }
    }
 else {
      maybePutMethodCall=null;
    }
  }
 else {
    if (adjustedElseBranch instanceof PsiStatement && adjustedThenBranch instanceof PsiStatement) {
      final EquivalenceChecker.Decision decision=EquivalenceChecker.statementsAreEquivalentDecision((PsiStatement)adjustedElseBranch,(PsiStatement)adjustedThenBranch);
      maybePutMethodCall=decision.getLeftDiff();
      maybeGetMethodCall=decision.getRightDiff();
    }
 else {
      maybePutMethodCall=adjustedElseBranch;
      maybeGetMethodCall=adjustedThenBranch;
    }
  }
  if (maybePutMethodCall instanceof PsiMethodCallExpression && (maybeGetMethodCall == null || maybeGetMethodCall instanceof PsiMethodCallExpression)) {
    final PsiMethodCallExpression putMethodCall=(PsiMethodCallExpression)maybePutMethodCall;
    final PsiMethodCallExpression getMethodCall=(PsiMethodCallExpression)maybeGetMethodCall;
    final PsiExpression putQualifier=putMethodCall.getMethodExpression().getQualifierExpression();
    final PsiExpression getQualifier=getMethodCall == null ? null : getMethodCall.getMethodExpression().getQualifierExpression();
    if ((getMethodCall == null || EquivalenceChecker.expressionsAreEquivalent(putQualifier,getQualifier)) && EquivalenceChecker.expressionsAreEquivalent(putQualifier,containsQualifier) && isJavaUtilMapMethodWithName(putMethodCall,"put")&& (getMethodCall == null || isJavaUtilMapMethodWithName(getMethodCall,"get"))) {
      PsiExpression getArgument;
      if (getMethodCall != null) {
        final PsiExpression[] arguments=getMethodCall.getArgumentList().getExpressions();
        if (arguments.length != 1) {
          return;
        }
        getArgument=arguments[0];
      }
 else {
        getArgument=null;
      }
      final PsiExpression[] putArguments=putMethodCall.getArgumentList().getExpressions();
      if (putArguments.length != 2) {
        return;
      }
      PsiExpression putKeyArgument=putArguments[0];
      if (EquivalenceChecker.expressionsAreEquivalent(containsKey,putKeyArgument) && (getArgument == null || EquivalenceChecker.expressionsAreEquivalent(getArgument,putKeyArgument))) {
        holder.registerProblem(context,QuickFixBundle.message("java.8.collections.api.inspection.description"),new ReplaceWithMapPutIfAbsentFix(putMethodCall));
      }
    }
  }
}
