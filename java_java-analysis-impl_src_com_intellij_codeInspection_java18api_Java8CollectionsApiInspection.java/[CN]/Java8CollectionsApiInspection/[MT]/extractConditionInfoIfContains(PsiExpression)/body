{
  boolean inverted=false;
  final PsiMethodCallExpression conditionMethodCall;
  if (condition instanceof PsiPrefixExpression) {
    final PsiPrefixExpression prefixExpression=(PsiPrefixExpression)condition;
    if (JavaTokenType.EXCL.equals(prefixExpression.getOperationSign().getTokenType()) && prefixExpression.getOperand() instanceof PsiMethodCallExpression) {
      conditionMethodCall=(PsiMethodCallExpression)prefixExpression.getOperand();
      inverted=true;
    }
 else {
      return null;
    }
  }
 else   if (condition instanceof PsiMethodCallExpression) {
    conditionMethodCall=(PsiMethodCallExpression)condition;
  }
 else {
    return null;
  }
  if (!isJavaUtilMapMethodWithName(conditionMethodCall,"containsKey")) {
    return null;
  }
  final PsiExpression containsQualifier=conditionMethodCall.getMethodExpression().getQualifierExpression();
  if (containsQualifier == null) {
    return null;
  }
  final PsiExpression[] expressions=conditionMethodCall.getArgumentList().getExpressions();
  if (expressions.length != 1) {
    return null;
  }
  PsiExpression containsKey=expressions[0];
  return new ConditionInfo(containsQualifier,containsKey,inverted);
}
