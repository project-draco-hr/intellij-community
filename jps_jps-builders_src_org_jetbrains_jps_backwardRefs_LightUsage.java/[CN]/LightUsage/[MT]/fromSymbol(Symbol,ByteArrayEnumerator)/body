{
  final ElementKind kind=symbol.getKind();
  if (symbol instanceof Symbol.ClassSymbol) {
    return new LightClassUsage(id(symbol,byteArrayEnumerator));
  }
 else   if (symbol instanceof Symbol.VarSymbol) {
    return new LightFieldUsage(id(symbol.owner,byteArrayEnumerator),id(symbol,byteArrayEnumerator));
  }
 else   if (symbol instanceof Symbol.MethodSymbol) {
    int paramCount=((Symbol.MethodSymbol)symbol).type.getParameterTypes().size();
    return new LightMethodUsage(id(symbol.owner,byteArrayEnumerator),id(symbol,byteArrayEnumerator),paramCount);
  }
 else {
    throw new AssertionError("unexpected symbol: " + symbol + " class: "+ symbol.getClass()+ " kind: "+ kind);
  }
}
