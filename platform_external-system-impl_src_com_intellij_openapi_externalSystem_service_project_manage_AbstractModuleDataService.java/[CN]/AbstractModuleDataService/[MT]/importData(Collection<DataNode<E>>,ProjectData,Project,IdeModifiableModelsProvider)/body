{
  if (toImport.isEmpty()) {
    return;
  }
  final Collection<DataNode<E>> toCreate=filterExistingModules(toImport,modelsProvider,project);
  if (!toCreate.isEmpty()) {
    createModules(toCreate,modelsProvider,project);
  }
  final boolean isOneToOneMapping=projectData != null && ExternalSystemApiUtil.isOneToOneMapping(project,projectData);
  for (  DataNode<E> node : toImport) {
    Module module=node.getUserData(MODULE_KEY);
    if (module != null) {
      setModuleOptions(module,node);
      final ModifiableModuleModel modifiableModel=modelsProvider.getModifiableModuleModel();
      final String[] groupPath;
      if (isOneToOneMapping || node.getData().getIdeModuleGroup() == null || projectData == null) {
        groupPath=node.getData().getIdeModuleGroup();
      }
 else {
        groupPath=ArrayUtil.prepend(projectData.getInternalName() + " modules",node.getData().getIdeModuleGroup());
      }
      modifiableModel.setModuleGroupPath(module,groupPath);
      ModifiableRootModel modifiableRootModel=modelsProvider.getModifiableRootModel(module);
      syncPaths(module,modifiableRootModel,node.getData());
      setLanguageLevel(modifiableRootModel,node.getData());
    }
  }
}
