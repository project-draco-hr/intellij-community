{
  if (!PsiUtil.isLanguageLevel5OrHigher(method)) {
    return;
  }
  super.visitMethod(method);
  if (onlyReportPublicMethods && !method.hasModifierProperty(PsiModifier.PUBLIC)) {
    return;
  }
  final PsiParameterList parameterList=method.getParameterList();
  if (parameterList.getParametersCount() == 0) {
    return;
  }
  final PsiParameter[] parameters=parameterList.getParameters();
  final PsiParameter lastParameter=parameters[parameters.length - 1];
  if (NullableNotNullManager.isNullable(lastParameter)) {
    return;
  }
  final PsiType type=lastParameter.getType();
  if (!(type instanceof PsiArrayType) || type instanceof PsiEllipsisType) {
    return;
  }
  final PsiArrayType arrayType=(PsiArrayType)type;
  final PsiType componentType=arrayType.getComponentType();
  if (componentType instanceof PsiArrayType) {
    return;
  }
  if (ignoreByteAndShortArrayParameters) {
    if (PsiType.BYTE.equals(componentType) || PsiType.SHORT.equals(componentType)) {
      return;
    }
  }
  if (LibraryUtil.isOverrideOfLibraryMethod(method)) {
    return;
  }
  if (ignoreOverridingMethods && MethodUtils.hasSuper(method)) {
    return;
  }
  if (ignoreMultipleArrayParameters) {
    for (int i=0, length=parameters.length - 1; i < length; i++) {
      final PsiParameter parameter=parameters[i];
      if (parameter.getType() instanceof PsiArrayType) {
        return;
      }
    }
  }
  registerMethodError(method);
}
