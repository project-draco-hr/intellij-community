{
  return PlatformPatterns.psiElement(JsonStringLiteral.class).and(new FilterPattern(new ElementFilter(){
    @Override public boolean isAcceptable(    Object element,    @Nullable PsiElement context){
      if (element instanceof JsonStringLiteral) {
        final PsiElement parent=((JsonStringLiteral)element).getParent();
        return parent instanceof JsonProperty && ((JsonProperty)parent).getNameElement() == element;
      }
      return false;
    }
    @Override public boolean isClassAcceptable(    Class hintClass){
      return true;
    }
  }
));
}
