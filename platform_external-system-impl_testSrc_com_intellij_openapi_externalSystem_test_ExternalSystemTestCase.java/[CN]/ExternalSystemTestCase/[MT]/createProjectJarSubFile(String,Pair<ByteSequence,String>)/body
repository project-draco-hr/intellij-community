{
  assertTrue("Use 'jar' extension for JAR files: '" + relativePath + "'",FileUtilRt.extensionEquals(relativePath,"jar"));
  File f=new File(getProjectPath(),relativePath);
  FileUtil.ensureExists(f.getParentFile());
  FileUtil.ensureCanCreateFile(f);
  final boolean created=f.createNewFile();
  if (!created) {
    throw new AssertionError("Unable to create the project sub file: " + f.getAbsolutePath());
  }
  Manifest manifest=new Manifest();
  manifest.getMainAttributes().put(Attributes.Name.MANIFEST_VERSION,"1.0");
  JarOutputStream target=new JarOutputStream(new FileOutputStream(f),manifest);
  for (  Pair<ByteSequence,String> contentEntry : contentEntries) {
    addJarEntry(contentEntry.first.getBytes(),contentEntry.second,target);
  }
  target.close();
  final VirtualFile virtualFile=LocalFileSystem.getInstance().refreshAndFindFileByIoFile(f);
  assertNotNull(virtualFile);
  final VirtualFile jarFile=JarFileSystem.getInstance().getJarRootForLocalFile(virtualFile);
  assertNotNull(jarFile);
  return jarFile;
}
