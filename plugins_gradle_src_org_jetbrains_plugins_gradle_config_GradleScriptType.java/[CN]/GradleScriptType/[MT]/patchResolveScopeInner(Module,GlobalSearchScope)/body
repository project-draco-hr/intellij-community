{
  if (module == null)   return GlobalSearchScope.EMPTY_SCOPE;
  final String externalSystemId=module.getOptionValue(ExternalSystemConstants.EXTERNAL_SYSTEM_ID_KEY);
  if (!GradleConstants.SYSTEM_ID.toString().equals(externalSystemId))   return baseScope;
  GlobalSearchScope result=GlobalSearchScope.EMPTY_SCOPE;
  final Project project=module.getProject();
  for (  OrderEntry entry : ModuleRootManager.getInstance(module).getOrderEntries()) {
    if (entry instanceof JdkOrderEntry) {
      GlobalSearchScope scopeForSdk=LibraryScopeCache.getInstance(project).getScopeForSdk((JdkOrderEntry)entry);
      result=result.uniteWith(scopeForSdk);
    }
  }
  String modulePath=module.getOptionValue(ExternalSystemConstants.LINKED_PROJECT_PATH_KEY);
  if (modulePath == null)   return result;
  final Collection<VirtualFile> files=GradleBuildClasspathManager.getInstance(project).getModuleClasspathEntries(modulePath);
  result=new ExternalModuleBuildGlobalSearchScope(project,result.uniteWith(new NonClasspathDirectoriesScope(files)),modulePath);
  return result;
}
