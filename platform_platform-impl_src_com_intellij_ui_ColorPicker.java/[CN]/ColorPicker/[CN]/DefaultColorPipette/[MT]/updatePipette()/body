{
  if (myPickerFrame != null && myPickerFrame.isShowing()) {
    Point mouseLoc=updateLocation();
    final Color c=myRobot.getPixelColor(mouseLoc.x,mouseLoc.y);
    if (!c.equals(myPreviousColor) || !mouseLoc.equals(myPreviousLocation)) {
      myPreviousColor=c;
      myPreviousLocation.setLocation(mouseLoc);
      myCaptureRect.setLocation(mouseLoc.x - 2,mouseLoc.y - 2);
      myCaptureRect.setBounds(mouseLoc.x - 2,mouseLoc.y - 2,5,5);
      BufferedImage capture=myRobot.createScreenCapture(myCaptureRect);
      myGraphics.setComposite(AlphaComposite.Src);
      myGraphics.setColor(myTransparentColor);
      myGraphics.fillRect(0,0,myImage.getWidth(),myImage.getHeight());
      myGraphics.drawImage(capture,myZoomRect.x,myZoomRect.y,myZoomRect.width,myZoomRect.height,this);
      myGraphics.setComposite(AlphaComposite.getInstance(AlphaComposite.DST_OUT));
      myGraphics.drawImage(myMaskImage,myZoomRect.x,myZoomRect.y,myZoomRect.width,myZoomRect.height,this);
      myGraphics.setComposite(AlphaComposite.SrcOver);
      UIUtil.drawImage(myGraphics,myPipetteImage,SIZE - AllIcons.Ide.Pipette.getIconWidth(),0,this);
      myPickerFrame.setCursor(myParent.getToolkit().createCustomCursor(myImage,myHotSpot,"ColorPicker"));
      if (myColorListener != null && !myColorListenersNotifier.isDisposed()) {
        myColorListenersNotifier.cancelAllRequests();
        myColorListenersNotifier.addRequest(new Runnable(){
          @Override public void run(){
            myColorListener.colorChanged(c,DefaultColorPipette.this);
          }
        }
,300);
      }
    }
  }
}
