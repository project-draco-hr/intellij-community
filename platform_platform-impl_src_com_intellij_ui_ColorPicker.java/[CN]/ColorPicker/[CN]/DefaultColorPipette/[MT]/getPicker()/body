{
  if (myPickerFrame == null) {
    Window owner=SwingUtilities.getWindowAncestor(myParent);
    if (owner instanceof Dialog) {
      myPickerFrame=new JDialog((Dialog)owner);
    }
 else     if (owner instanceof Frame) {
      myPickerFrame=new JDialog((Frame)owner);
    }
 else {
      myPickerFrame=new JDialog(new JFrame());
    }
    myPickerFrame.addMouseListener(new MouseAdapter(){
      @Override public void mousePressed(      MouseEvent e){
        e.consume();
        close();
      }
      @Override public void mouseClicked(      MouseEvent e){
        e.consume();
      }
      @Override public void mouseExited(      MouseEvent e){
        updatePipette();
      }
    }
);
    myPickerFrame.addMouseMotionListener(new MouseAdapter(){
      @Override public void mouseMoved(      MouseEvent e){
        updatePipette();
      }
    }
);
    myPickerFrame.addFocusListener(new FocusAdapter(){
      @Override public void focusLost(      FocusEvent e){
        cancelPipette();
      }
    }
);
    myPickerFrame.setSize(SIZE - 4,SIZE - 4);
    myPickerFrame.setUndecorated(true);
    myPickerFrame.setAlwaysOnTop(!SystemInfo.isJavaVersionAtLeast("1.8.0"));
    JRootPane rootPane=((JDialog)myPickerFrame).getRootPane();
    rootPane.putClientProperty("Window.shadow",Boolean.FALSE);
    myMaskImage=UIUtil.createImage(SIZE,SIZE,BufferedImage.TYPE_INT_ARGB);
    Graphics2D maskG=myMaskImage.createGraphics();
    maskG.setColor(Color.BLUE);
    maskG.fillRect(0,0,SIZE,SIZE);
    maskG.setColor(Color.RED);
    maskG.setComposite(AlphaComposite.SrcOut);
    maskG.fillRect(0,0,SIZE,SIZE);
    maskG.dispose();
    myPipetteImage=UIUtil.createImage(AllIcons.Ide.Pipette.getIconWidth(),AllIcons.Ide.Pipette.getIconHeight(),BufferedImage.TYPE_INT_ARGB);
    Graphics2D graphics=myPipetteImage.createGraphics();
    AllIcons.Ide.Pipette.paintIcon(null,graphics,0,0);
    graphics.dispose();
    myImage=myParent.getGraphicsConfiguration().createCompatibleImage(SIZE,SIZE,Transparency.TRANSLUCENT);
    myGraphics=(Graphics2D)myImage.getGraphics();
    myGraphics.setRenderingHint(RenderingHints.KEY_INTERPOLATION,RenderingHints.VALUE_INTERPOLATION_NEAREST_NEIGHBOR);
    myPickerFrame.addKeyListener(new KeyAdapter(){
      public void keyPressed(      KeyEvent e){
switch (e.getKeyCode()) {
case KeyEvent.VK_ESCAPE:
          cancelPipette();
        break;
case KeyEvent.VK_ENTER:
      close();
    break;
}
}
}
);
}
return myPickerFrame;
}
