{
  Maybe<PyCallable> accessor;
  Property p=myClass.findProperty("v3",true);
  assertNotNull(p);
  assertNull(p.getDoc());
  PyTargetExpression site=p.getDefinitionSite();
  assertEquals("v3",site.getText());
  accessor=p.getGetter();
  assertFalse(accessor.isDefined());
  final PyType codeInsightType=p.getType(TypeEvalContext.codeInsightFallback(myClass.getProject()));
  assertNull(codeInsightType);
  accessor=p.getSetter();
  assertTrue(accessor.isDefined());
  assertNull(accessor.value());
  accessor=p.getDeleter();
  assertTrue(accessor.isDefined());
  assertNotNull(accessor.value());
  assertEquals("deleter",accessor.value().getName());
}
