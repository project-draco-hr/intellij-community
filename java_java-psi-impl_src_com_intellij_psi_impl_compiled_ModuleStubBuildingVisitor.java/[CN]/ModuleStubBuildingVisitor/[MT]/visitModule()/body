{
  myResult=new PsiJavaModuleStubImpl(myParent,myModuleName);
  return new ModuleVisitor(Opcodes.API_VERSION){
    @Override public void visitRequire(    String module,    int access){
      if (!isSet(access,Opcodes.ACC_SYNTHETIC) && !isSet(access,Opcodes.ACC_MANDATED)) {
        boolean isPublic=isSet(access,ACC_TRANSITIVE) | isSet(access,Opcodes.ACC_PUBLIC);
        new PsiRequiresStatementStubImpl(myResult,module,isPublic,isSet(access,ACC_STATIC_PHASE));
      }
    }
    @Override public void visitExport(    String packageName,    String... modules){
      new PsiExportsStatementStubImpl(myResult,packageName.replace('/','.'),modules == null ? null : Arrays.asList(modules));
    }
  }
;
}
