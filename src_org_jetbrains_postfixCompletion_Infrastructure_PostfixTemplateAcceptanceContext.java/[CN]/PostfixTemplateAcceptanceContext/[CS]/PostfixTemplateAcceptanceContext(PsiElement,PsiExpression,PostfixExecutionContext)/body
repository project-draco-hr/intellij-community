{
  postfixReference=reference;
  this.executionContext=executionContext;
  List<PrefixExpressionContext> contexts=new ArrayList<PrefixExpressionContext>();
  int referenceEndRange=reference.getTextRange().getEndOffset();
  for (PsiElement node=expression; node != null; node=node.getParent()) {
    if (node instanceof PsiStatement)     break;
    if (node instanceof PsiExpression && node != reference) {
      PsiExpression expr=(PsiExpression)node;
      if (expr.isPhysical()) {
        int endOffset=expr.getTextRange().getEndOffset();
        if (endOffset > referenceEndRange)         break;
      }
 else {
        if (expr instanceof PsiReferenceExpression && ((PsiReferenceExpression)expr).getQualifier() == reference)         break;
        if (expr instanceof PsiMethodCallExpression && ((PsiMethodCallExpression)expr).getMethodExpression() == reference)         break;
        if (expr instanceof PsiBinaryExpression && ((PsiBinaryExpression)expr).getLOperand() == reference)         break;
        if (expr instanceof PsiPostfixExpression && ((PsiPostfixExpression)expr).getOperand() == reference)         break;
      }
      PrefixExpressionContext context=new PrefixExpressionContext(this,expr);
      contexts.add(context);
      if (context.canBeStatement)       break;
    }
  }
  expressions=Collections.unmodifiableList(contexts);
  innerExpression=contexts.get(0);
  outerExpression=contexts.get(contexts.size() - 1);
}
