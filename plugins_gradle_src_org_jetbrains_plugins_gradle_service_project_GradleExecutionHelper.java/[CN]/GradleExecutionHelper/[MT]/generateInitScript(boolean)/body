{
  InputStream stream=GradleProjectResolver.class.getResourceAsStream("/org/jetbrains/plugins/gradle/model/internal/init.gradle");
  try {
    if (stream == null) {
      LOG.warn("Can't get init script template");
      return null;
    }
    String jarPath=PathUtil.getCanonicalPath(PathUtil.getJarPathForClass(GradleProjectResolver.class));
    String s=FileUtil.loadTextAndClose(stream).replace("${JAR_PATH}",jarPath);
    if (isBuildSrcProject) {
      String buildSrcDefaultInitScript=getBuildSrcDefaultInitScript();
      if (buildSrcDefaultInitScript == null)       return null;
      s+=buildSrcDefaultInitScript;
    }
    final File tempFile=FileUtil.createTempFile("ijinit",'.' + GradleConstants.EXTENSION,true);
    FileUtil.writeToFile(tempFile,s);
    return tempFile;
  }
 catch (  Exception e) {
    LOG.warn("Can't generate IJ gradle init script",e);
    return null;
  }
 finally {
    StreamUtil.closeStream(stream);
  }
}
