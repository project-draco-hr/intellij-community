{
  if (settings == null) {
    return;
  }
  List<String> jvmArgs=ContainerUtilRt.newArrayList();
  String vmOptions=settings.getDaemonVmOptions();
  if (!StringUtil.isEmpty(vmOptions)) {
    CommandLineTokenizer tokenizer=new CommandLineTokenizer(vmOptions);
    while (tokenizer.hasMoreTokens()) {
      String vmOption=tokenizer.nextToken();
      if (!StringUtil.isEmpty(vmOption)) {
        jvmArgs.add(vmOption);
      }
    }
  }
  jvmArgs.addAll(extraJvmArgs);
  if (!jvmArgs.isEmpty()) {
    List<String> args=connection.getModel(BuildEnvironment.class).getJava().getJvmArguments();
    List<String> merged=mergeJvmArgs(args,jvmArgs);
    operation.setJvmArguments(ArrayUtilRt.toStringArray(merged));
  }
  listener.onStart(id);
  final String javaHome=settings.getJavaHome();
  if (javaHome != null && new File(javaHome).isDirectory()) {
    operation.setJavaHome(new File(javaHome));
  }
  operation.addProgressListener(new ProgressListener(){
    @Override public void statusChanged(    ProgressEvent event){
      listener.onStatusChange(new ExternalSystemTaskNotificationEvent(id,event.getDescription()));
    }
  }
);
  operation.setStandardOutput(standardOutput);
  operation.setStandardError(standardError);
}
