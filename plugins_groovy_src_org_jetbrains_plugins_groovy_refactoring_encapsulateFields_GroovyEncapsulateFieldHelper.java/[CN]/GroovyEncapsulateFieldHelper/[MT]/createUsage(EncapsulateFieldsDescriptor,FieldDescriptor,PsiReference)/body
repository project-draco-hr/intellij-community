{
  if (!(reference instanceof GrReferenceExpression))   return null;
  boolean findSet=descriptor.isToEncapsulateSet();
  boolean findGet=descriptor.isToEncapsulateGet();
  GrReferenceExpression ref=(GrReferenceExpression)reference;
  if (findGet && JavaEncapsulateFieldHelper.isUsedInExistingAccessor(descriptor.getTargetClass(),fieldDescriptor.getGetterPrototype(),ref)) {
    return null;
  }
  if (findSet && JavaEncapsulateFieldHelper.isUsedInExistingAccessor(descriptor.getTargetClass(),fieldDescriptor.getSetterPrototype(),ref)) {
    return null;
  }
  if (!findGet) {
    if (!PsiUtil.isAccessedForWriting(ref))     return null;
  }
  if (!findSet || fieldDescriptor.getField().hasModifierProperty(PsiModifier.FINAL)) {
    if (!PsiUtil.isAccessedForReading(ref))     return null;
  }
  if (!descriptor.isToUseAccessorsWhenAccessible()) {
    PsiModifierList newModifierList=JavaEncapsulateFieldHelper.createNewModifierList(descriptor);
    PsiClass accessObjectClass=getAccessObject(ref);
    final PsiResolveHelper helper=JavaPsiFacade.getInstance(((GrReferenceExpression)reference).getProject()).getResolveHelper();
    if (helper.isAccessible(fieldDescriptor.getField(),newModifierList,ref,accessObjectClass,null)) {
      return null;
    }
  }
  return new EncapsulateFieldUsageInfo(ref,fieldDescriptor);
}
