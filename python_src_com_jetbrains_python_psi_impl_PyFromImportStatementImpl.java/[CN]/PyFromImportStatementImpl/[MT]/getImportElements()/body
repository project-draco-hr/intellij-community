{
  final PyFromImportStatementStub stub=getStub();
  if (stub != null) {
    return stub.getChildrenByType(PyElementTypes.IMPORT_ELEMENT,new ArrayFactory<PyImportElement>(){
      @NotNull public PyImportElement[] create(      int count){
        return new PyImportElement[count];
      }
    }
);
  }
  List<PyImportElement> result=new ArrayList<PyImportElement>();
  final ASTNode importKeyword=getNode().findChildByType(PyTokenTypes.IMPORT_KEYWORD);
  if (importKeyword != null) {
    for (ASTNode node=importKeyword.getTreeNext(); node != null; node=node.getTreeNext()) {
      if (node.getElementType() == PyElementTypes.IMPORT_ELEMENT) {
        result.add((PyImportElement)node.getPsi());
      }
    }
  }
  return result.toArray(new PyImportElement[result.size()]);
}
