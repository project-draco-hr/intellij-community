{
  final SvnRepositoryLocation svnLocation=(SvnRepositoryLocation)location;
  final ArrayList<SvnChangeList> result=new ArrayList<SvnChangeList>();
  final ProgressIndicator progress=ProgressManager.getInstance().getProgressIndicator();
  if (progress != null) {
    progress.setText(SvnBundle.message("progress.text.changes.collecting.changes"));
    progress.setText2(SvnBundle.message("progress.text2.changes.establishing.connection",location));
  }
  final String repositoryRoot=getRepositoryRoot(svnLocation);
  getCommittedChangesImpl(settings,svnLocation.getURL(),new String[]{""},maxCount,new Consumer<SVNLogEntry>(){
    public void consume(    final SVNLogEntry svnLogEntry){
      result.add(new SvnChangeList(myVcs,svnLocation,svnLogEntry,repositoryRoot));
    }
  }
,false,true);
  settings.filterChanges(result);
  return result;
}
