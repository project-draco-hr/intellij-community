{
  final String repositoryRoot=info.getRepositoryRootURL().toString();
  try {
    final SvnCopyPathTracker pathTracker=new SvnCopyPathTracker(info);
    logger.doLog(svnurl,null,SVNRevision.UNDEFINED,SVNRevision.HEAD,revisionBefore,false,true,false,0,null,new ISVNLogEntryHandler(){
      public void handleLogEntry(      SVNLogEntry logEntry){
        if (myProject.isDisposed())         throw new ProcessCanceledException();
        if (logEntry.getDate() == null) {
          return;
        }
        pathTracker.accept(logEntry);
        if (logEntry.getRevision() == revisionBefore.getNumber()) {
          result[0]=new SvnChangeList(myVcs,svnRepositoryLocation,logEntry,repositoryRoot);
        }
      }
    }
);
    return pathTracker.getFilePath(myVcs);
  }
 catch (  SVNException e) {
    LOG.info(e);
    throw new VcsException(e);
  }
}
