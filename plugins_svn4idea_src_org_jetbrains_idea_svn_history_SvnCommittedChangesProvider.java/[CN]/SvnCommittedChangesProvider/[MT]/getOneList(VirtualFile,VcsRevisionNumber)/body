{
  final RootUrlInfo rootUrlInfo=myVcs.getSvnFileUrlMapping().getWcRootForFilePath(new File(file.getPath()));
  if (rootUrlInfo == null)   return null;
  final VirtualFile root=rootUrlInfo.getVirtualFile();
  final SvnRepositoryLocation svnRootLocation=(SvnRepositoryLocation)getLocationFor(new FilePathImpl(root));
  if (svnRootLocation == null)   return null;
  final String url=svnRootLocation.getURL();
  final long revision;
  try {
    revision=Long.parseLong(number.asString());
  }
 catch (  NumberFormatException e) {
    throw new VcsException(e);
  }
  final SvnChangeList[] result=new SvnChangeList[1];
  final SVNLogClient logger;
  final SVNRevision revisionBefore;
  final SVNURL repositoryUrl;
  final SVNURL svnurl;
  final SVNInfo targetInfo;
  try {
    logger=myVcs.createLogClient();
    revisionBefore=SVNRevision.create(revision);
    svnurl=SVNURL.parseURIEncoded(url);
    final SVNInfo info=myVcs.getInfo(svnurl,SVNRevision.HEAD);
    targetInfo=myVcs.getInfo(new File(file.getPath()));
    if (info == null) {
      throw new VcsException("Can not get repository URL");
    }
    repositoryUrl=info.getRepositoryRootURL();
  }
 catch (  SVNException e) {
    LOG.info(e);
    throw new VcsException(e);
  }
  FilePath filePath=VcsUtil.getFilePath(file);
  if (!tryExactHit(svnRootLocation,result,logger,revisionBefore,repositoryUrl,svnurl) && !tryByRoot(result,logger,revisionBefore,repositoryUrl)) {
    filePath=getOneListStepByStep(svnRootLocation,result,logger,revisionBefore,svnurl,targetInfo,filePath);
  }
 else {
    Change change=ContainerUtil.getFirstItem(result[0].getChanges());
    if (change != null) {
      final ContentRevision afterRevision=change.getAfterRevision();
      filePath=afterRevision != null ? afterRevision.getFile() : filePath;
    }
 else {
      String relativePath=SVNPathUtil.getRelativePath(targetInfo.getRepositoryRootURL().toString(),targetInfo.getURL().toString());
      relativePath=relativePath.startsWith("/") ? relativePath : "/" + relativePath;
      final Change targetChange=result[0].getByPath(relativePath);
      filePath=targetChange == null ? getOneListStepByStep(svnRootLocation,result,logger,revisionBefore,svnurl,targetInfo,filePath) : filePath;
    }
  }
  return Pair.create(result[0],filePath);
}
