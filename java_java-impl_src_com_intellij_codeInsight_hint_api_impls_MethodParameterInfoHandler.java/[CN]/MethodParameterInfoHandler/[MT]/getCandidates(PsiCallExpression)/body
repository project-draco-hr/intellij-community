{
  final MethodCandidatesProcessor processor=new MethodResolverProcessor(call,call.getContainingFile(),new PsiConflictResolver[0]){
    @Override protected boolean acceptVarargs(){
      return false;
    }
  }
;
  try {
    PsiScopesUtil.setupAndRunProcessor(processor,call,true);
  }
 catch (  MethodProcessorSetupFailedException e) {
    return CandidateInfo.EMPTY_ARRAY;
  }
  final List<CandidateInfo> results=processor.getResults();
  return results.toArray(new CandidateInfo[results.size()]);
}
