{
  if (pathMacroSubstitutor != null) {
    pathMacroSubstitutor.expandPaths(rootElement);
  }
  for (Iterator<Element> iterator=rootElement.getChildren(COMPONENT).iterator(); iterator.hasNext(); ) {
    Element element=iterator.next();
    String name=element.getAttributeValue(NAME);
    if (StringUtil.isEmpty(name)) {
      LOG.warn("No name attribute for component in " + this);
      continue;
    }
    if (element.getAttributes().size() > 1 || !element.getChildren().isEmpty()) {
      iterator.remove();
      if (intern) {
        IdeaPluginDescriptorImpl.internJDOMElement(element);
      }
      Object serverElement=myComponentStates.get(name);
      if (serverElement != null) {
        element=mergeElements(name,element,(Element)serverElement);
      }
      myComponentStates.put(name,element);
      if (pathMacroSubstitutor instanceof TrackingPathMacroSubstitutor) {
        ((TrackingPathMacroSubstitutor)pathMacroSubstitutor).addUnknownMacros(name,PathMacrosCollector.getMacroNames(element));
      }
    }
    element.removeAttribute(NAME);
  }
}
