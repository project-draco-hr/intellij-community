{
  AnAction hideBranchesAction=new DumbAwareAction("Collapse linear branches","Collapse linear branches",GitLogIcons.SPIDER){
    @Override public void actionPerformed(    AnActionEvent e){
      myUI.hideAll();
    }
  }
;
  AnAction showBranchesAction=new DumbAwareAction("Expand all branches","Expand all branches",GitLogIcons.WEB){
    @Override public void actionPerformed(    AnActionEvent e){
      myUI.showAll();
    }
  }
;
  RefreshAction refreshAction=new RefreshAction("Refresh","Refresh",AllIcons.Actions.Refresh){
    @Override public void actionPerformed(    AnActionEvent e){
      myLogController.refresh();
    }
    @Override public void update(    AnActionEvent e){
      e.getPresentation().setEnabled(true);
    }
  }
;
  AnAction showFullPatchAction=new ToggleAction("Show full patch","Expand all branches even if they occupy a lot of space",AllIcons.Actions.Expandall){
    @Override public boolean isSelected(    AnActionEvent e){
      return !myUI.areLongEdgesHidden();
    }
    @Override public void setSelected(    AnActionEvent e,    boolean state){
      myUI.setLongEdgeVisibility(state);
    }
  }
;
  refreshAction.registerShortcutOn(myMainPanel);
  DefaultActionGroup toolbarGroup=new DefaultActionGroup(hideBranchesAction,showBranchesAction,showFullPatchAction,refreshAction);
  return ActionManager.getInstance().createActionToolbar(ActionPlaces.UNKNOWN,toolbarGroup,true).getComponent();
}
