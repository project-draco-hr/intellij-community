{
  int peekStack=stack[stackSize - 1];
  if (peekStack == JsonScope.EMPTY_ARRAY) {
    stack[stackSize - 1]=JsonScope.NONEMPTY_ARRAY;
  }
 else   if (peekStack == JsonScope.NONEMPTY_ARRAY) {
    int c=nextNonWhitespace(true);
switch (c) {
case ']':
      return peeked=PEEKED_END_ARRAY;
case ';':
    checkLenient();
case ',':
  break;
default :
throw createParseError("Unterminated array");
}
}
 else if (peekStack == JsonScope.EMPTY_OBJECT || peekStack == JsonScope.NONEMPTY_OBJECT) {
stack[stackSize - 1]=JsonScope.DANGLING_NAME;
if (peekStack == JsonScope.NONEMPTY_OBJECT) {
int c=nextNonWhitespace(true);
switch (c) {
case '}':
return peeked=PEEKED_END_OBJECT;
case ';':
checkLenient();
case ',':
break;
default :
throw createParseError("Unterminated object");
}
}
int c=nextNonWhitespace(true);
switch (c) {
case '"':
return peeked=PEEKED_DOUBLE_QUOTED_NAME;
case '\'':
checkLenient();
return peeked=PEEKED_SINGLE_QUOTED_NAME;
case '}':
if (peekStack != JsonScope.NONEMPTY_OBJECT) {
return peeked=PEEKED_END_OBJECT;
}
 else {
throw createParseError("Expected name");
}
default :
checkLenient();
position--;
if (isLiteral((char)c)) {
return peeked=PEEKED_UNQUOTED_NAME;
}
 else {
throw createParseError("Expected name");
}
}
}
 else if (peekStack == JsonScope.DANGLING_NAME) {
stack[stackSize - 1]=JsonScope.NONEMPTY_OBJECT;
int c=nextNonWhitespace(true);
switch (c) {
case ':':
break;
case '=':
checkLenient();
if (position < limit && in.charAt(position) == '>') {
position++;
}
break;
default :
throw createParseError("Expected ':'");
}
}
 else if (peekStack == JsonScope.EMPTY_DOCUMENT) {
if (lenient) {
consumeNonExecutePrefix();
}
stack[stackSize - 1]=JsonScope.NONEMPTY_DOCUMENT;
}
 else if (peekStack == JsonScope.NONEMPTY_DOCUMENT) {
int c=nextNonWhitespace(false);
if (c == -1) {
return peeked=PEEKED_EOF;
}
 else {
checkLenient();
position--;
}
}
 else if (peekStack == JsonScope.CLOSED) {
throw new IllegalStateException("JsonReader is closed");
}
int c=nextNonWhitespace(true);
switch (c) {
case ']':
if (peekStack == JsonScope.EMPTY_ARRAY) {
return peeked=PEEKED_END_ARRAY;
}
case ';':
case ',':
if (peekStack == JsonScope.EMPTY_ARRAY || peekStack == JsonScope.NONEMPTY_ARRAY) {
checkLenient();
position--;
return peeked=PEEKED_NULL;
}
 else {
throw createParseError("Unexpected value");
}
case '\'':
checkLenient();
return peeked=PEEKED_SINGLE_QUOTED;
case '"':
if (stackSize == 1) {
checkLenient();
}
return peeked=PEEKED_DOUBLE_QUOTED;
case '[':
return peeked=PEEKED_BEGIN_ARRAY;
case '{':
return peeked=PEEKED_BEGIN_OBJECT;
default :
position--;
}
if (stackSize == 1) {
checkLenient();
}
int result=peekKeyword();
if (result != PEEKED_NONE) {
return result;
}
result=peekNumber();
if (result != PEEKED_NONE) {
return result;
}
if (!isLiteral(in.charAt(position))) {
throw createParseError("Expected value");
}
checkLenient();
return peeked=PEEKED_UNQUOTED;
}
