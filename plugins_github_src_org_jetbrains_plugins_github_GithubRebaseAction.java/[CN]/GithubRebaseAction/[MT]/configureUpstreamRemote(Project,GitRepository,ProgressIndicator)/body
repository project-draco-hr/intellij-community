{
  RepositoryInfo repositoryInfo=loadRepositoryInfo(project,gitRepository,indicator);
  if (repositoryInfo == null) {
    return null;
  }
  if (!repositoryInfo.isFork()) {
    GithubNotifications.showWarning(project,CANNOT_PERFORM_GITHUB_REBASE,"Github repository '" + repositoryInfo.getName() + "' is not a forked one");
    return null;
  }
  final String parentRepoUrl=GithubApiUtil.getGitHost() + '/' + repositoryInfo.getParentName()+ ".git";
  LOG.info("Adding GitHub parent as a remote host");
  indicator.setText("Adding GitHub parent as a remote host");
  return addParentAsUpstreamRemote(project,parentRepoUrl,gitRepository);
}
