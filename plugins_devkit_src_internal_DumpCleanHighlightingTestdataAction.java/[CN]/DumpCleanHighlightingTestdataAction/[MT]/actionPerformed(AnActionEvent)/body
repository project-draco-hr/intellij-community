{
  final DataContext dataContext=event.getDataContext();
  final Project project=CommonDataKeys.PROJECT.getData(dataContext);
  final PsiFile psiFile=CommonDataKeys.PSI_FILE.getData(dataContext);
  if (psiFile != null) {
    final VirtualFile virtualFile=psiFile.getVirtualFile();
    if (virtualFile != null) {
      final Document document=FileDocumentManager.getInstance().getDocument(virtualFile);
      if (document != null) {
        final ExpectedHighlightingData data=new ExpectedHighlightingData(document,true,true);
        data.init();
      }
      return;
    }
  }
  final FileChooserDescriptor descriptor=FileChooserDescriptorFactory.createSingleFolderDescriptor();
  descriptor.setTitle("Choose Directory");
  descriptor.setDescription("Directory containing highlighting test data");
  final VirtualFile dirToProcess=FileChooser.chooseFile(descriptor,project,null);
  if (dirToProcess != null) {
    LOG.assertTrue(project != null);
    final FileChooserDescriptor targetDescriptor=FileChooserDescriptorFactory.createSingleFolderDescriptor();
    targetDescriptor.setTitle("Choose Directory");
    targetDescriptor.setDescription("Directory where highlighting-markup-free copies would be placed");
    final VirtualFile destinationFolder=FileChooser.chooseFile(targetDescriptor,project,null);
    if (dirToProcess.equals(destinationFolder)) {
      Messages.showErrorDialog(project,"Source and destination roots should differ","Reject to Proceed");
      return;
    }
    if (destinationFolder != null) {
      final File destination=VfsUtilCore.virtualToIoFile(destinationFolder);
      final VirtualFile[] files=dirToProcess.getChildren();
      for (      VirtualFile virtualFile : files) {
        final Document document=FileDocumentManager.getInstance().getDocument(virtualFile);
        if (document != null) {
          final ExpectedHighlightingData data=new ExpectedHighlightingData(document,true,true);
          data.init();
          final File file=new File(destination,virtualFile.getName());
          try {
            FileUtil.writeToFile(file,document.getText());
          }
 catch (          IOException e) {
            LOG.error(e);
          }
        }
      }
    }
  }
}
