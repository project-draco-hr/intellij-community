{
  if (classes != null && classes.length > 0) {
    final Set<String> groupDependencies=new LinkedHashSet<String>();
    TestNGUtil.collectAnnotationValues(groupDependencies,"dependsOnGroups",methods,classes);
    final Set<PsiMember> membersToCheckNow=new LinkedHashSet<PsiMember>();
    if (!groupDependencies.isEmpty()) {
      ApplicationManager.getApplication().runReadAction(new Runnable(){
        public void run(){
          final Project project=classes[0].getProject();
          final PsiClass testAnnotation=JavaPsiFacade.getInstance(project).findClass(TestNGUtil.TEST_ANNOTATION_FQN,GlobalSearchScope.allScope(project));
          LOG.assertTrue(testAnnotation != null);
          for (          PsiMember psiMember : AnnotatedMembersSearch.search(testAnnotation,searchScope)) {
            final PsiClass containingClass=psiMember.getContainingClass();
            if (containingClass == null)             continue;
            if (ArrayUtil.find(classes,containingClass) < 0)             continue;
            final PsiAnnotation annotation=AnnotationUtil.findAnnotation(psiMember,TestNGUtil.TEST_ANNOTATION_FQN);
            if (TestNGUtil.isAnnotatedWithParameter(annotation,"groups",groupDependencies)) {
              if (appendMember(psiMember,alreadyMarkedToBeChecked,results)) {
                membersToCheckNow.add(psiMember);
              }
            }
          }
        }
      }
);
    }
    collectDependsOnMethods(results,alreadyMarkedToBeChecked,membersToCheckNow,methods,classes);
    if (methods == null) {
      for (      PsiClass c : classes) {
        results.put(c,new LinkedHashMap<PsiMethod,List<String>>());
      }
    }
 else {
      for (      PsiMember psiMember : membersToCheckNow) {
        PsiClass psiClass;
        PsiMethod[] meths=null;
        if (psiMember instanceof PsiMethod) {
          psiClass=psiMember.getContainingClass();
          meths=new PsiMethod[]{(PsiMethod)psiMember};
        }
 else {
          psiClass=(PsiClass)psiMember;
        }
        calculateDependencies(meths,results,alreadyMarkedToBeChecked,searchScope,psiClass);
      }
    }
  }
}
