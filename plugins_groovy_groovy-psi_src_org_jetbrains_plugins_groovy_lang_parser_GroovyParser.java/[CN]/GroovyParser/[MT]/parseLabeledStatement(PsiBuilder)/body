{
  PsiBuilder.Marker marker=builder.mark();
  if (!ParserUtils.getToken(builder,GroovyTokenTypes.mIDENT) || !ParserUtils.getToken(builder,GroovyTokenTypes.mCOLON)) {
    marker.rollbackTo();
    return false;
  }
  final PsiBuilder.Marker nlsMarker=builder.mark();
  ParserUtils.getToken(builder,GroovyTokenTypes.mNLS);
  if (parseStatement(builder,true)) {
    nlsMarker.drop();
  }
 else {
    nlsMarker.rollbackTo();
    builder.error(GroovyBundle.message("statement.expected"));
  }
  marker.done(GroovyElementTypes.LABELED_STATEMENT);
  return true;
}
