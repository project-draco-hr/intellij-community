{
  PsiClass aClass=method.getContainingClass();
  if (aClass == null)   return false;
  if (!canHaveSuperMethod(method,true,false))   return false;
  Map<MethodSignature,HierarchicalMethodSignature> cachedMap=SIGNATURES_BY_NAME_KEY.getValue(aClass).get(method.getName());
  HierarchicalMethodSignature signature=cachedMap.get(method.getSignature(PsiSubstitutor.EMPTY));
  if (signature != null) {
    List<HierarchicalMethodSignature> superSignatures=signature.getSuperSignatures();
    for (    HierarchicalMethodSignature superSignature : superSignatures) {
      if (!superMethodProcessor.process(superSignature.getMethod()))       return false;
    }
  }
  return true;
}
