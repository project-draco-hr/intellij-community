{
  PsiReference reference=problemElement.getReference();
  PyFunction pyFunction=PsiTreeUtil.getParentOfType(problemElement,PyFunction.class);
  if (pyFunction != null && (problemElement instanceof PyParameter || reference != null && reference.resolve() instanceof PyParameter)) {
    final String docstring=pyFunction.getDocStringValue();
    if (docstring != null) {
      String name=problemElement.getName();
      if (problemElement instanceof PyQualifiedExpression) {
        final PyExpression qualifier=((PyQualifiedExpression)problemElement).getQualifier();
        if (qualifier != null) {
          name=qualifier.getText();
        }
      }
      StructuredDocString structuredDocString=StructuredDocString.parse(docstring);
      return structuredDocString != null && structuredDocString.getParamType(name) != null;
    }
    return false;
  }
  return false;
}
