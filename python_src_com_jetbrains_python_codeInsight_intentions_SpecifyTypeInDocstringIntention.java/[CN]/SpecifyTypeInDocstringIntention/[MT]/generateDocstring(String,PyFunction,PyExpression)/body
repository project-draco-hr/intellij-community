{
  if (!DocStringUtil.ensureNotPlainDocstringFormat(pyFunction)) {
    return;
  }
  final boolean isReturn="rtype".equals(kind);
  final PyDocstringGenerator docstringGenerator=PyDocstringGenerator.forDocStringOwner(pyFunction);
  final PySignature signature=PySignatureCacheManager.getInstance(pyFunction.getProject()).findSignature(pyFunction);
  final String name=isReturn ? "" : StringUtil.notNullize(problemElement.getName());
  final String type;
  if (signature != null) {
    type=StringUtil.notNullize(signature.getArgTypeQualifiedName(name),"object");
  }
 else {
    type="object";
  }
  if (!isReturn) {
    docstringGenerator.withParamTypedByName(name,type);
  }
 else {
    docstringGenerator.withReturnValue(type);
  }
  docstringGenerator.addFirstEmptyLine().buildAndInsert();
  docstringGenerator.startTemplate();
}
