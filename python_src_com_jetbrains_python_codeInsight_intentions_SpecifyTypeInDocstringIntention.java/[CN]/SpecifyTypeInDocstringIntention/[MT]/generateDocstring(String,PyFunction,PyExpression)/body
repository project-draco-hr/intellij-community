{
  if (!DocStringUtil.ensureNotPlainDocstringFormat(pyFunction)) {
    return;
  }
  final boolean isReturn="rtype".equals(kind);
  final PyDocstringGenerator docstringGenerator=new PyDocstringGenerator(pyFunction);
  docstringGenerator.addFirstEmptyLine();
  final PySignature signature=PySignatureCacheManager.getInstance(pyFunction.getProject()).findSignature(pyFunction);
  String name=isReturn ? "" : StringUtil.notNullize(problemElement.getName());
  final String typeFromSignature=signature != null ? StringUtil.notNullize(signature.getArgTypeQualifiedName(name)) : "";
  if (!isReturn) {
    docstringGenerator.withParamTypedByName(name,typeFromSignature);
  }
 else {
    docstringGenerator.withReturnValue(typeFromSignature);
  }
  docstringGenerator.buildAndInsert();
  docstringGenerator.startTemplate();
}
