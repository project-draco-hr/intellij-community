{
  if (type == null || type instanceof PyReturnTypeReference || type instanceof PyDynamicallyEvaluatedType) {
    PyFunction pyFunction=PsiTreeUtil.getParentOfType(problemElement,PyFunction.class);
    PsiReference reference=problemElement.getReference();
    if (problemElement instanceof PyQualifiedExpression) {
      final PyExpression qualifier=((PyQualifiedExpression)problemElement).getQualifier();
      if (qualifier != null && !qualifier.getText().equals(PyNames.CANONICAL_SELF))       reference=qualifier.getReference();
    }
    if (pyFunction != null && (problemElement instanceof PyParameter || reference != null && reference.resolve() instanceof PyParameter)) {
      final String docstring=pyFunction.getDocStringValue();
      if (docstring != null) {
        String name=problemElement.getName();
        if (problemElement instanceof PyQualifiedExpression) {
          final PyExpression qualifier=((PyQualifiedExpression)problemElement).getQualifier();
          if (qualifier != null)           name=qualifier.getText();
        }
        if (docstring.contains("type " + name + ":"))         return false;
      }
      return true;
    }
  }
  return false;
}
