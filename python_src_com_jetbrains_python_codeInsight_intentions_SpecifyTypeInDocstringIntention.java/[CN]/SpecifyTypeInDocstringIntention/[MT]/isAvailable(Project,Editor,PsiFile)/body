{
  PyExpression problemElement=PsiTreeUtil.getParentOfType(file.findElementAt(editor.getCaretModel().getOffset() - 1),PyNamedParameter.class);
  if (problemElement == null)   problemElement=PsiTreeUtil.getTopmostParentOfType(file.findElementAt(editor.getCaretModel().getOffset() - 1),PyQualifiedExpression.class);
  if (problemElement == null)   return false;
  if (problemElement instanceof PyQualifiedExpression) {
    final PyExpression qualifier=((PyQualifiedExpression)problemElement).getQualifier();
    if (qualifier != null && !qualifier.getText().equals(PyNames.CANONICAL_SELF)) {
      problemElement=qualifier;
    }
  }
  if (problemElement.getParent() instanceof PyCallExpression || PsiTreeUtil.getParentOfType(problemElement,PyLambdaExpression.class) != null) {
    return false;
  }
  final PyType type=problemElement.getType(TypeEvalContext.fast());
  if (type == null || type instanceof PyReturnTypeReference) {
    PyFunction pyFunction=PsiTreeUtil.getParentOfType(problemElement,PyFunction.class);
    PsiReference reference=problemElement.getReference();
    if (problemElement instanceof PyQualifiedExpression) {
      final PyExpression qualifier=((PyQualifiedExpression)problemElement).getQualifier();
      if (qualifier != null && !qualifier.getText().equals(PyNames.CANONICAL_SELF))       reference=qualifier.getReference();
    }
    if (pyFunction != null && (problemElement instanceof PyParameter || reference != null && reference.resolve() instanceof PyParameter))     return true;
  }
  return false;
}
