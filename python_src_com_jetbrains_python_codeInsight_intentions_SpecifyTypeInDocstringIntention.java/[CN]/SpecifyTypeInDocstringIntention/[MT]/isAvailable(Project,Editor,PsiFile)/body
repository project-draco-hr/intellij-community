{
  myText=PyBundle.message("INTN.specify.type");
  PsiElement elementAt=PyUtil.findNonWhitespaceAtOffset(file,editor.getCaretModel().getOffset());
  if (elementAt == null)   return false;
  PyExpression problemElement=PsiTreeUtil.getParentOfType(elementAt,PyNamedParameter.class,PyReferenceExpression.class);
  if (checkAvailableForReturn(elementAt))   return true;
  if (problemElement == null)   return false;
  if (problemElement instanceof PyQualifiedExpression) {
    final PyExpression qualifier=((PyQualifiedExpression)problemElement).getQualifier();
    if (qualifier != null && !qualifier.getText().equals(PyNames.CANONICAL_SELF)) {
      problemElement=qualifier;
    }
  }
  if (PsiTreeUtil.getParentOfType(problemElement,PyLambdaExpression.class) != null) {
    return false;
  }
  final PyType type=problemElement.getType(TypeEvalContext.slow());
  return checkType(problemElement,type);
}
