{
  saveSettings();
  super.doOKAction();
  final GrParametersOwner toReplaceIn=myInfo.getToReplaceIn();
  final GrExpression expr=findExpr(myInfo);
  final GrVariable var=findVar(myInfo);
  final StringPartInfo stringPart=findStringPart();
  if (myTypeComboBox.isClosureSelected() || expr == null && var == null && stringPart == null) {
    GrIntroduceParameterSettings settings=new ExtractClosureHelperImpl(myInfo,getEnteredName(),myDeclareFinalCheckBox.isSelected(),getParametersToRemove(),myDelegateViaOverloadingMethodCheckBox.isSelected(),getReplaceFieldsWithGetter(),myForceReturnCheckBox.isSelected(),false,myTypeComboBox.getSelectedType() == null);
    if (toReplaceIn instanceof GrMethod) {
      invokeRefactoring(new ExtractClosureFromMethodProcessor(settings));
    }
 else {
      invokeRefactoring(new ExtractClosureFromClosureProcessor(settings));
    }
  }
 else {
    GrIntroduceParameterSettings settings=new GrIntroduceExpressionSettingsImpl(myInfo,getEnteredName(),myDeclareFinalCheckBox.isSelected(),getParametersToRemove(),myDelegateViaOverloadingMethodCheckBox.isSelected(),getReplaceFieldsWithGetter(),expr,var,myTypeComboBox.getSelectedType(),var != null,true,myForceReturnCheckBox.isSelected());
    if (toReplaceIn instanceof GrMethod) {
      invokeRefactoring(new GrIntroduceParameterProcessor(settings));
    }
 else {
      invokeRefactoring(new GrIntroduceClosureParameterProcessor(settings));
    }
  }
}
