{
  SchemeProcessor<CodeStyleSchemeImpl> processor=new BaseSchemeProcessor<CodeStyleSchemeImpl>(){
    @NotNull @Override public CodeStyleSchemeImpl readScheme(    @NotNull Element element){
      return CodeStyleSchemeImpl.readScheme(element);
    }
    @Override public Element writeScheme(    @NotNull final CodeStyleSchemeImpl scheme) throws WriteExternalException {
      return scheme.saveToDocument();
    }
    @NotNull @Override public State getState(    @NotNull CodeStyleSchemeImpl scheme){
      return scheme.isDefault() ? State.NON_PERSISTENT : State.POSSIBLY_CHANGED;
    }
    @Override public void initScheme(    @NotNull final CodeStyleSchemeImpl scheme){
      scheme.init(CodeStyleSchemesImpl.this);
    }
  }
;
  mySchemesManager=schemesManagerFactory.createSchemesManager(CODE_STYLES_DIR_PATH,processor,RoamingType.PER_USER);
  init();
  addScheme(new CodeStyleSchemeImpl(DEFAULT_SCHEME_NAME,true,null));
  setCurrentScheme(getDefaultScheme());
}
