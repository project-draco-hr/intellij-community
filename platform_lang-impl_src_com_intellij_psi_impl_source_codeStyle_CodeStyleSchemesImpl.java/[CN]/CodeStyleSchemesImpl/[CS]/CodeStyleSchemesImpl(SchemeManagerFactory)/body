{
  mySchemeManager=schemeManagerFactory.create(CODE_STYLES_DIR_PATH,new LazySchemeProcessor<CodeStyleScheme,CodeStyleSchemeImpl>(){
    @NotNull @Override public CodeStyleSchemeImpl createScheme(    @NotNull SchemeDataHolder<CodeStyleSchemeImpl> dataHolder,    @NotNull String name,    @NotNull Function<String,String> attributeProvider,    boolean duringLoad){
      return new CodeStyleSchemeImpl(attributeProvider.apply("name"),attributeProvider.apply("parent"),dataHolder);
    }
    @NotNull @Override public SchemeState getState(    @NotNull CodeStyleScheme scheme){
      if (scheme.isDefault() || !(scheme instanceof CodeStyleSchemeImpl)) {
        return SchemeState.NON_PERSISTENT;
      }
 else {
        return ((CodeStyleSchemeImpl)scheme).isInitialized() ? SchemeState.POSSIBLY_CHANGED : SchemeState.UNCHANGED;
      }
    }
  }
);
  mySchemeManager.loadSchemes();
  addScheme(new CodeStyleSchemeImpl(DEFAULT_SCHEME_NAME,true,null));
  setCurrentScheme(getDefaultScheme());
}
