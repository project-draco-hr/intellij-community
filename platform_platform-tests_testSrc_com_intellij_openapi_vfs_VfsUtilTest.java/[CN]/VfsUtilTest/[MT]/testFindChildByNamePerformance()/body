{
  File tempDir=createTempDirectory();
  final VirtualFile vDir=LocalFileSystem.getInstance().refreshAndFindFileByIoFile(tempDir);
  assertNotNull(vDir);
  assertTrue(vDir.isDirectory());
  new WriteCommandAction.Simple(getProject()){
    @Override protected void run() throws Throwable {
      for (int i=0; i < 10000; i++) {
        final String name=i + ".txt";
        vDir.createChildData(vDir,name);
      }
    }
  }
.execute();
  final VirtualFile theChild=vDir.findChild("5111.txt");
  System.out.println("Start searching...");
  PlatformTestUtil.startPerformanceTest("find child is slow",450,new ThrowableRunnable(){
    @Override public void run() throws Throwable {
      for (int i=0; i < 1000000; i++) {
        VirtualFile child=vDir.findChild("5111.txt");
        assertSame(theChild,child);
      }
    }
  }
).assertTiming();
  new WriteCommandAction.Simple(getProject()){
    @Override protected void run() throws Throwable {
      for (      VirtualFile file : vDir.getChildren()) {
        file.delete(this);
      }
    }
  }
.execute().throwException();
}
