{
  File tempDir=new WriteAction<File>(){
    @Override protected void run(    Result<File> result) throws Throwable {
      File res=createTempDirectory();
      new File(res,"libFiles").createNewFile();
      new File(res,"CssInvalidElement").createNewFile();
      new File(res,"extFiles").createNewFile();
      result.setResult(res);
    }
  }
.execute().getResultObject();
  final VirtualFile vDir=LocalFileSystem.getInstance().refreshAndFindFileByIoFile(tempDir);
  assertNotNull(vDir);
  assertTrue(vDir.isDirectory());
  assertNotNull(vDir.findChild("libFiles"));
  assertNotNull(vDir.findChild("CssInvalidElement"));
  assertNotNull(vDir.findChild("extFiles"));
  assertNotNull(vDir.findChild("/extFiles/"));
  assertNotNull(vDir.findChild("extFiles/"));
  assertNotNull(vDir.findChild("/extFiles"));
  assertNotNull(vDir.findChild("//extFiles"));
  assertNotNull(vDir.findChild("extFiles///"));
  assertNull(vDir.findChild("/xxx/extFiles/"));
  assertNull(vDir.findChild("xxx/extFiles/"));
  assertNull(vDir.findChild("/xxx/extFiles"));
  assertNull(vDir.findChild("xxx/extFiles"));
  assertNull(vDir.findChild("xxx//extFiles"));
}
