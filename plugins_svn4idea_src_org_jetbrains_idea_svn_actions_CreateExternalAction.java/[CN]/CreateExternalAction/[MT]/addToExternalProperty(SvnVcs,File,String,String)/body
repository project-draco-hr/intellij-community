{
  ClientFactory factory=vcs.getFactory(ioFile);
  PropertyValue propertyValue=factory.createPropertyClient().getProperty(SvnTarget.fromFile(ioFile),SvnPropertyKeys.SVN_EXTERNALS,false,SVNRevision.UNDEFINED);
  String newValue;
  if (propertyValue != null && !StringUtil.isEmptyOrSpaces(propertyValue.toString())) {
    final SVNExternal[] externals=SVNExternal.parseExternals("Create External",propertyValue.toString());
    for (    SVNExternal external : externals) {
      if (Comparing.equal(external.getPath(),target)) {
        AbstractVcsHelper.getInstance(vcs.getProject()).showError(new VcsException("Selected destination conflicts with existing: " + external.toString()),"Create External");
        return true;
      }
    }
    final String string=createExternalDefinitionString(url,target);
    newValue=propertyValue.toString().trim() + "\n" + string;
  }
 else {
    newValue=createExternalDefinitionString(url,target);
  }
  factory.createPropertyClient().setProperty(ioFile,SvnPropertyKeys.SVN_EXTERNALS,PropertyValue.create(newValue),Depth.EMPTY,false);
  return false;
}
