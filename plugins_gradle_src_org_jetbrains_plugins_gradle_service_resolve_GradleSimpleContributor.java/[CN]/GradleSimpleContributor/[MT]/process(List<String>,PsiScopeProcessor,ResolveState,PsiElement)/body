{
  if (methodCallInfo.isEmpty() || methodCallInfo.size() < 2 || !blockName.equals(methodCallInfo.get(1))) {
    return;
  }
  GroovyPsiManager psiManager=GroovyPsiManager.getInstance(place.getProject());
  GradleResolverUtil.processDeclarations(psiManager,processor,state,place,fqName);
  for (  final String mixin : myMixIns) {
    PsiClass contributorClass=psiManager.findClassWithCache(mixin,place.getResolveScope());
    if (contributorClass == null)     continue;
    GradleResolverUtil.processMethod(methodCallInfo.get(0),contributorClass,processor,state,place);
  }
}
