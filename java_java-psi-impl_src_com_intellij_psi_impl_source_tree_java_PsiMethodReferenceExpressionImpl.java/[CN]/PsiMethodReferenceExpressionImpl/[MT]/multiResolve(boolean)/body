{
  FileElement fileElement=SharedImplUtil.findFileElement(this);
  if (fileElement == null) {
    LOG.error("fileElement == null!");
    return JavaResolveResult.EMPTY_ARRAY;
  }
  final PsiManagerEx manager=fileElement.getManager();
  if (manager == null) {
    LOG.error("getManager() == null!");
    return JavaResolveResult.EMPTY_ARRAY;
  }
  PsiFile file=SharedImplUtil.getContainingFile(fileElement);
  boolean valid=file != null && file.isValid();
  if (!valid) {
    LOG.error("invalid!");
    return JavaResolveResult.EMPTY_ARRAY;
  }
  final Map<PsiMethodReferenceExpression,PsiType> map=PsiMethodReferenceUtil.ourRefs.get();
  if (map != null && map.containsKey(this)) {
    return RESOLVER.resolve(this,file,incompleteCode);
  }
  ResolveResult[] results=ResolveCache.getInstance(getProject()).resolveWithCaching(this,RESOLVER,true,incompleteCode,file);
  return results.length == 0 ? JavaResolveResult.EMPTY_ARRAY : (JavaResolveResult[])results;
}
