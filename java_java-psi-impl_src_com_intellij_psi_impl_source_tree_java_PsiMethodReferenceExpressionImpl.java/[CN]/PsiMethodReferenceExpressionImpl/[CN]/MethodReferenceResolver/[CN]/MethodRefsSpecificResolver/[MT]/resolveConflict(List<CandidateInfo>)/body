{
  checkSameSignatures(conflicts);
  if (conflicts.size() == 1)   return conflicts.get(0);
  checkAccessStaticLevels(conflicts,true);
  if (conflicts.size() == 1)   return conflicts.get(0);
  boolean varargs=false;
  boolean fixedArity=false;
  for (  CandidateInfo conflict : conflicts) {
    final PsiElement psiElement=conflict.getElement();
    if (psiElement instanceof PsiMethod) {
      final boolean isVarargs=((PsiMethod)psiElement).isVarArgs();
      if (isVarargs) {
        varargs=true;
      }
 else {
        fixedArity=true;
      }
      if (varargs && fixedArity)       break;
    }
  }
  if (varargs && fixedArity) {
    for (Iterator<CandidateInfo> iterator=conflicts.iterator(); iterator.hasNext(); ) {
      CandidateInfo conflict=iterator.next();
      final PsiElement element=conflict.getElement();
      if (element instanceof PsiMethod && ((PsiMethod)element).isVarArgs())       iterator.remove();
    }
  }
  checkSpecifics(conflicts,varargs ? MethodCandidateInfo.ApplicabilityLevel.VARARGS : MethodCandidateInfo.ApplicabilityLevel.FIXED_ARITY,myLanguageLevel);
  return conflicts.size() == 1 ? conflicts.get(0) : null;
}
