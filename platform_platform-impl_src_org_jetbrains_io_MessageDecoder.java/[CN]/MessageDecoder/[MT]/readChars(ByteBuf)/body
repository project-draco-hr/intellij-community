{
  if (!input.isReadable()) {
    return null;
  }
  int required=contentLength - consumedContentByteCount;
  if (input.readableBytes() < required) {
    if (chunkedContent == null) {
      chunkedContent=CharBuffer.allocate((int)((float)contentLength * charsetDecoder.maxCharsPerByte()));
    }
    int count=input.readableBytes();
    ChannelBufferToString.readIntoCharBuffer(charsetDecoder,input,count,chunkedContent);
    consumedContentByteCount+=count;
    return null;
  }
 else {
    CharBuffer charBuffer=chunkedContent;
    if (charBuffer != null) {
      chunkedContent=null;
      consumedContentByteCount=0;
    }
    return new ChannelBufferToString.MyCharArrayCharSequence(ChannelBufferToString.readIntoCharBuffer(charsetDecoder,input,required,charBuffer));
  }
}
