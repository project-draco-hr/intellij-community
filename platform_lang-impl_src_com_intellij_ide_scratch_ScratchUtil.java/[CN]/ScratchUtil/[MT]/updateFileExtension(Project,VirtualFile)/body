{
  ApplicationManager.getApplication().assertWriteAccessAllowed();
  if (CommandProcessor.getInstance().getCurrentCommand() == null) {
    throw new AssertionError("command required");
  }
  if (file == null)   return;
  Language language=LanguageUtil.getLanguageForPsi(project,file);
  String extension=file.getExtension();
  FileType expected=extension == null ? null : FileTypeManager.getInstance().getFileTypeByExtension(extension);
  FileType actual=language == null ? null : language.getAssociatedFileType();
  if (expected == actual || actual == null)   return;
  String ext=actual.getDefaultExtension();
  if (StringUtil.isEmpty(ext))   return;
  String newName=PathUtil.makeFileName(file.getNameWithoutExtension(),ext);
  VirtualFile parent=file.getParent();
  newName=parent != null && parent.findChild(newName) != null ? PathUtil.makeFileName(file.getName(),ext) : newName;
  file.rename(ScratchUtil.class,newName);
}
