{
  final String homePath=mySdk.getHomePath();
  if (homePath == null) {
    throw new PyExternalProcessException(ERROR_INVALID_SDK,helperPath,args,"Cannot find interpreter for SDK");
  }
  if (workingDir == null) {
    workingDir=new File(homePath).getParent();
  }
  final List<String> cmdline=new ArrayList<String>();
  cmdline.add(homePath);
  cmdline.add(helperPath);
  cmdline.addAll(args);
  LOG.info("Running packaging tool: " + StringUtil.join(cmdline," "));
  final boolean canCreate=FileUtil.ensureCanCreateFile(new File(homePath));
  if (!canCreate && !SystemInfo.isWindows && askForSudo) {
    try {
      final ProcessOutput result=ExecUtil.sudoAndGetOutput(cmdline,"Please enter your password to make changes in system packages: ",workingDir);
      String message=result.getStderr();
      if (result.getExitCode() != 0) {
        final String stdout=result.getStdout();
        if (StringUtil.isEmptyOrSpaces(message)) {
          message=stdout;
        }
        if (StringUtil.isEmptyOrSpaces(message)) {
          message="Failed to perform action. Permission denied.";
        }
        throw new PyExternalProcessException(result.getExitCode(),helperPath,args,message);
      }
      if (SystemInfo.isMac && !StringUtil.isEmptyOrSpaces(message)) {
        throw new PyExternalProcessException(result.getExitCode(),helperPath,args,message);
      }
      return result;
    }
 catch (    ExecutionException e) {
      throw new PyExternalProcessException(ERROR_EXECUTION,helperPath,args,e.getMessage());
    }
catch (    IOException e) {
      throw new PyExternalProcessException(ERROR_ACCESS_DENIED,helperPath,args,e.getMessage());
    }
  }
 else {
    return PySdkUtil.getProcessOutput(workingDir,ArrayUtil.toStringArray(cmdline),TIMEOUT);
  }
}
