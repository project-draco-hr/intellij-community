{
  final List<String> args=new ArrayList<String>();
  args.add(INSTALL);
  final File buildDir;
  try {
    buildDir=FileUtil.createTempDirectory("pycharm-packaging",null);
  }
 catch (  IOException e) {
    throw new ExecutionException("Cannot create temporary build directory");
  }
  if (!extraArgs.contains(BUILD_DIR_OPTION)) {
    args.addAll(Arrays.asList(BUILD_DIR_OPTION,buildDir.getAbsolutePath()));
  }
  boolean useUserSite=extraArgs.contains(USE_USER_SITE);
  final String proxyString=getProxyString();
  if (proxyString != null) {
    args.add("--proxy");
    args.add(proxyString);
  }
  args.addAll(extraArgs);
  for (  PyRequirement req : requirements) {
    args.addAll(req.getInstallOptions());
  }
  try {
    getHelperResult(PACKAGING_TOOL,args,!useUserSite,true,null);
  }
 catch (  PyExecutionException e) {
    final List<String> simplifiedArgs=new ArrayList<String>();
    simplifiedArgs.add("install");
    if (proxyString != null) {
      simplifiedArgs.add("--proxy");
      simplifiedArgs.add(proxyString);
    }
    simplifiedArgs.addAll(extraArgs);
    for (    PyRequirement req : requirements) {
      simplifiedArgs.addAll(req.getInstallOptions());
    }
    throw new PyExecutionException(e.getMessage(),"pip",simplifiedArgs,e.getStdout(),e.getStderr(),e.getExitCode(),e.getFixes());
  }
 finally {
    LOG.debug("Packages cache is about to be refreshed because these requirements were installed: " + requirements);
    refreshPackagesSynchronously();
    FileUtil.delete(buildDir);
  }
}
