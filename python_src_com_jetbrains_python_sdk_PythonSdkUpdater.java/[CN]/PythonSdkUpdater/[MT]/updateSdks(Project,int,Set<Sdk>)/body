{
  ApplicationManager.getApplication().executeOnPooledThread(new Runnable(){
    public void run(){
      if (delay > 0) {
        try {
          Thread.sleep(delay);
        }
 catch (        InterruptedException ignore) {
        }
      }
      ApplicationManager.getApplication().invokeLater(new Runnable(){
        @Override public void run(){
          ProgressManager.getInstance().run(new Task.Backgroundable(project,PyBundle.message("sdk.gen.updating.skels"),false){
            @Override public void run(            @NotNull ProgressIndicator indicator){
              for (              final Sdk sdk : sdksToUpdate) {
                try {
                  LOG.info("Performing background update of skeletons for SDK " + sdk.getHomePath());
                  updateSdk(project,null,PySdkUpdater.fromSdkPath(sdk.getHomePath()));
                }
 catch (                PySdkUpdater.PySdkNotFoundException e) {
                  LOG.info("Sdk " + sdk.getName() + " was removed during update process.");
                }
catch (                InvalidSdkException e) {
                  if (PythonSdkType.isVagrant(sdk) || PythonSdkType.isDocker(sdk)) {
                    PythonSdkType.notifyRemoteSdkSkeletonsFail(e,new Runnable(){
                      @Override public void run(){
                        updateSdks(project,delay,Sets.newHashSet(sdk));
                      }
                    }
);
                  }
 else                   if (!PythonSdkType.isInvalid(sdk)) {
                    LOG.error(e);
                  }
                }
              }
            }
          }
);
        }
      }
);
    }
  }
);
}
