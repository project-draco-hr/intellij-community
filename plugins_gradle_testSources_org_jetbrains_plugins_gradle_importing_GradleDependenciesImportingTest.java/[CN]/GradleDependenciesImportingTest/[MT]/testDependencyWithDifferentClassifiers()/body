{
  final VirtualFile depJar=createProjectJarSubFile("lib/dep/dep/1.0/dep-1.0.jar");
  final VirtualFile depTestsJar=createProjectJarSubFile("lib/dep/dep/1.0/dep-1.0-tests.jar");
  final VirtualFile depNonJar=createProjectSubFile("lib/dep/dep/1.0/dep-1.0.someExt");
  importProject("allprojects {\n" + "  apply plugin: 'java'\n" + "  sourceCompatibility = 1.5\n"+ "  version = '1.0'\n"+ "\n"+ "  repositories {\n"+ "    maven{ url file('lib') }\n"+ "  }\n"+ "}\n"+ "\n"+ "dependencies {\n"+ "  compile 'dep:dep:1.0'\n"+ "  testCompile 'dep:dep:1.0:tests'\n"+ "  runtime 'dep:dep:1.0@someExt'\n"+ "}");
  assertModules("project","project_main","project_test");
  assertModuleModuleDepScope("project_test","project_main",DependencyScope.COMPILE);
  final String depName="Gradle: dep:dep:1.0";
  assertModuleLibDep("project_main",depName,depJar.getUrl());
  assertModuleLibDepScope("project_main",depName,DependencyScope.COMPILE);
  assertModuleLibDep("project_test",depName,depJar.getUrl());
  assertModuleLibDepScope("project_test",depName,DependencyScope.COMPILE);
  final boolean isArtifactResolutionQuerySupported=GradleVersion.version(gradleVersion).compareTo(GradleVersion.version("2.0")) >= 0;
  final String depTestsName=isArtifactResolutionQuerySupported ? "Gradle: dep:dep:tests:1.0" : PathUtil.toPresentableUrl(depTestsJar.getUrl());
  assertModuleLibDep("project_test",depTestsName,depTestsJar.getUrl());
  assertModuleLibDepScope("project_test",depTestsName,DependencyScope.COMPILE);
  final String depNonJarName=isArtifactResolutionQuerySupported ? "Gradle: dep:dep:someExt:1.0" : PathUtil.toPresentableUrl(depNonJar.getUrl());
  assertModuleLibDep("project_main",depNonJarName,depNonJar.getUrl());
  assertModuleLibDepScope("project_main",depNonJarName,DependencyScope.RUNTIME);
  assertModuleLibDep("project_test",depNonJarName,depNonJar.getUrl());
  assertModuleLibDepScope("project_test",depNonJarName,DependencyScope.RUNTIME);
  importProjectUsingSingeModulePerGradleProject();
  assertModules("project");
  assertModuleLibDep("project",depName,depJar.getUrl());
  assertModuleLibDepScope("project",depName,DependencyScope.COMPILE);
  assertModuleLibDep("project","Gradle: dep:dep:1.0:tests",depTestsJar.getUrl());
  assertModuleLibDepScope("project","Gradle: dep:dep:1.0:tests",DependencyScope.TEST);
  assertModuleLibDep("project","Gradle: dep:dep:1.0:someExt",depNonJar.getUrl());
  assertModuleLibDepScope("project","Gradle: dep:dep:1.0:someExt",DependencyScope.RUNTIME);
}
