{
  myProject=data.getProject();
  myWorkingDirectoryTextField.addBrowseFolderListener("Select Working Directory","",data.getProject(),FileChooserDescriptorFactory.createSingleFolderDescriptor());
  myPythonSdks=new ArrayList<>(PythonSdkType.getAllSdks());
  myPythonSdks.add(0,null);
  myInterpreterComboBox.setModel(new CollectionComboBoxModel(myPythonSdks,null));
  final Module[] modules=ModuleManager.getInstance(data.getProject()).getModules();
  if (modules.length == 1) {
    setModule(modules[0]);
    myProjectLabel.setVisible(false);
    myModuleCombo.setVisible(false);
  }
 else {
    final List<Module> validModules=data.getValidModules();
    Module selection=validModules.size() > 0 ? validModules.get(0) : null;
    myModuleCombo.setModules(validModules);
    myModuleCombo.setSelectedModule(selection);
    myModuleCombo.addActionListener(new ActionListener(){
      @Override public void actionPerformed(      ActionEvent e){
        updateDefaultInterpreter(myModuleCombo.getSelectedModule());
      }
    }
);
    updateDefaultInterpreter(myModuleCombo.getSelectedModule());
  }
  setAnchor(myEnvsComponent.getLabel());
  myPathMappingsComponent.setAnchor(myEnvsComponent.getLabel());
  if (data.showConfigureInterpretersLink()) {
    myConfigureInterpretersPanel.add(new PyConfigureInterpretersLinkPanel(myMainPanel));
  }
  addInterpreterComboBoxActionListener(new ActionListener(){
    @Override public void actionPerformed(    ActionEvent event){
      updateRemoteInterpreterMode();
    }
  }
);
  updateRemoteInterpreterMode();
  myDecorator=new HideableDecorator(myHideablePanel,"Environment",false){
    @Override protected void on(){
      super.on();
      storeState();
    }
    @Override protected void off(){
      super.off();
      storeState();
    }
    private void storeState(){
      PropertiesComponent.getInstance().setValue(EXPAND_PROPERTY_KEY,String.valueOf(isExpanded()),"true");
    }
  }
;
  myDecorator.setOn(PropertiesComponent.getInstance().getBoolean(EXPAND_PROPERTY_KEY,true));
  myDecorator.setContentComponent(myMainPanel);
}
