{
  HashMap<PsiElement,String> errors=ContainerUtil.newHashMap();
  for (  PsiElement element : myViolations) {
    if (!myNonViolations.contains(element)) {
      errors.put(element,"Contract clause '" + myContract + "' is violated");
    }
  }
  if (myContract.returnValue != MethodContract.ValueConstraint.THROW_EXCEPTION) {
    for (    PsiElement element : myFailures) {
      errors.put(element,"Contract clause '" + myContract + "' is violated: exception might be thrown instead of returning "+ myContract.returnValue);
    }
  }
 else   if (myFailures.isEmpty() && errors.isEmpty() && myCalls.isEmpty()) {
    PsiIdentifier nameIdentifier=myMethod.getNameIdentifier();
    errors.put(nameIdentifier != null ? nameIdentifier : myMethod,"Contract clause '" + myContract + "' is violated: no exception is thrown");
  }
  return errors;
}
