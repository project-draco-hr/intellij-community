{
  final PsiClass firstClass=classes.get(0);
  final Project project=firstClass.getProject();
  final JList list=new JBList(classes);
  PsiElementListCellRenderer renderer=new PsiClassListCellRenderer();
  list.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
  list.setCellRenderer(renderer);
  final PopupChooserBuilder builder=new PopupChooserBuilder(list);
  renderer.installSpeedSearch(builder);
  final PsiClass preselection=AnonymousTargetClassPreselectionUtil.getPreselection(classes,firstClass);
  if (preselection != null) {
    list.setSelectedValue(preselection,true);
  }
  Runnable runnable=new Runnable(){
    @Override public void run(){
      int index=list.getSelectedIndex();
      if (index < 0)       return;
      final PsiClass aClass=(PsiClass)list.getSelectedValue();
      AnonymousTargetClassPreselectionUtil.rememberSelection(aClass,firstClass);
      CommandProcessor.getInstance().executeCommand(project,new Runnable(){
        @Override public void run(){
          doInvoke(project,aClass);
        }
      }
,getText(),null);
    }
  }
;
  builder.setTitle(QuickFixBundle.message("target.class.chooser.title")).setItemChoosenCallback(runnable).createPopup().showInBestPositionFor(editor);
}
