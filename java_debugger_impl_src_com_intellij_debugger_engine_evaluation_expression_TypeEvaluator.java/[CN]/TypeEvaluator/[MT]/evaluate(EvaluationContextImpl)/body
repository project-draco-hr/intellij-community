{
  ClassLoaderReference classLoader=context.getClassLoader();
  ReferenceType lastRes=SoftReference.dereference(myLastResult);
  if (lastRes != null && classLoader == SoftReference.dereference(myLastClassLoader)) {
    if (classLoader != null || lastRes.virtualMachine().equals(context.getDebugProcess().getVirtualMachineProxy().getVirtualMachine())) {
      return lastRes;
    }
  }
  DebugProcessImpl debugProcess=context.getDebugProcess();
  String typeName=myTypeName.getName(debugProcess);
  ReferenceType type=debugProcess.findClass(context,typeName,classLoader);
  if (type == null) {
    throw EvaluateExceptionUtil.createEvaluateException(DebuggerBundle.message("error.class.not.loaded",typeName));
  }
  myLastClassLoader=new WeakReference<>(classLoader);
  myLastResult=new WeakReference<>(type);
  return type;
}
