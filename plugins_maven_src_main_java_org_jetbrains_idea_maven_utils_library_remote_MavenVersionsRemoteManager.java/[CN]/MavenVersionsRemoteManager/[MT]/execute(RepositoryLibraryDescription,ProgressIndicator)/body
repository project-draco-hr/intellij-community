{
  MavenEmbeddersManager manager=MavenProjectsManager.getInstance(myProject).getEmbeddersManager();
  MavenEmbedderWrapper embedder=manager.getEmbedder(MavenEmbeddersManager.FOR_GET_VERSIONS);
  embedder.customizeForGetVersions();
  try {
    List<MavenRemoteRepository> remoteRepositories=convertRepositories(repositoryLibraryDescription.getRemoteRepositories());
    List<String> versions=embedder.retrieveVersions(repositoryLibraryDescription.getGroupId(),repositoryLibraryDescription.getArtifactId(),remoteRepositories);
    Collections.sort(versions,new Comparator<String>(){
      @Override public int compare(      String o1,      String o2){
        MavenVersionComparable v1=new MavenVersionComparable(o1);
        MavenVersionComparable v2=new MavenVersionComparable(o2);
        return v2.compareTo(v1);
      }
    }
);
    return versions;
  }
 catch (  MavenProcessCanceledException e) {
    return Collections.emptyList();
  }
 finally {
    manager.release(embedder);
  }
}
