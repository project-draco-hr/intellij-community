{
  final PsiExpression qualifier=reference.getQualifierExpression();
  final PsiElement nameElement=reference.getReferenceNameElement();
  Handler _handler=nameElement != null ? matchContext.getPattern().getHandlerSimple(nameElement) : null;
  if (!(_handler instanceof SubstitutionHandler))   _handler=matchContext.getPattern().getHandlerSimple(reference);
  if (_handler instanceof SubstitutionHandler && !(matchContext.getPattern().getHandlerSimple(qualifier) instanceof SubstitutionHandler) && !(qualifier instanceof PsiThisExpression)) {
    if (element instanceof PsiReferenceExpression) {
      final PsiReferenceExpression psiReferenceExpression=((PsiReferenceExpression)element);
      if (psiReferenceExpression.getQualifierExpression() == null) {
        element=psiReferenceExpression.getReferenceNameElement();
      }
    }
    final SubstitutionHandler handler=(SubstitutionHandler)_handler;
    if (handler.isSubtype() || handler.isStrictSubtype()) {
      result=checkMatchWithingHierarchy(element,handler,reference);
    }
 else {
      result=handler.handle(element,matchContext);
    }
    return;
  }
  if (!(element instanceof PsiReferenceExpression)) {
    result=false;
    return;
  }
  final PsiReferenceExpression reference2=(PsiReferenceExpression)element;
  final PsiExpression reference2Qualifier=reference2.getQualifierExpression();
  if (qualifier == null && reference2Qualifier == null) {
    result=reference.getReferenceNameElement().textMatches(reference2.getReferenceNameElement());
    return;
  }
  if (!(element.getParent() instanceof PsiMethodCallExpression) && qualifier != null && (reference2Qualifier != null || (qualifier instanceof PsiThisExpression && MatchUtils.getReferencedElement(element) instanceof PsiField))) {
    final PsiElement referenceElement=reference.getReferenceNameElement();
    final PsiElement referenceElement2=reference2.getReferenceNameElement();
    if (matchContext.getPattern().isTypedVar(referenceElement)) {
      result=handleTypedElement(referenceElement,referenceElement2);
    }
 else {
      result=(referenceElement2 != null && referenceElement != null && referenceElement.textMatches(referenceElement2)) || referenceElement == referenceElement2;
    }
    if (result && reference2Qualifier != null) {
      result=match(qualifier,reference2Qualifier);
    }
    return;
  }
  result=false;
}
