{
  final PsiIdentifier methodNameNode=method.getNameIdentifier();
  final boolean isTypedVar=matchContext.getPattern().isTypedVar(methodNameNode);
  final PsiMethod method2=(PsiMethod)element;
  matchContext.pushResult();
  try {
    if (method.getTypeParameters().length > 0) {
      result=match(method.getTypeParameterList(),((PsiMethod)element).getTypeParameterList());
      if (!result)       return;
    }
    if (!checkHierarchy(method2,method)) {
      result=false;
      return;
    }
    result=(method.getName().equals(method2.getName()) || isTypedVar) && match(method.getModifierList(),method2.getModifierList()) && matchSons(method.getParameterList(),method2.getParameterList())&& match(method.getReturnTypeElement(),method2.getReturnTypeElement())&& matchInAnyOrder(method.getThrowsList(),method2.getThrowsList())&& matchSonsOptionally(method.getBody(),method2.getBody());
  }
  finally {
    final PsiIdentifier methodNameNode2=method2.getNameIdentifier();
    saveOrDropResult(methodNameNode,isTypedVar,methodNameNode2);
  }
}
