{
  final PsiNewExpression new2=(PsiNewExpression)element;
  if (new1.getClassReference() != null && new2.getClassReference() != null) {
    result=match(new1.getClassReference(),new2.getClassReference()) && matchSons(new1.getArrayInitializer(),new2.getArrayInitializer());
    if (result) {
      final PsiExpression[] arrayDims=new1.getArrayDimensions();
      final PsiExpression[] arrayDims2=new2.getArrayDimensions();
      if (arrayDims != null && arrayDims2 != null && arrayDims.length == arrayDims2.length && arrayDims.length != 0) {
        for (int i=0; i < arrayDims.length; ++i) {
          result=match(arrayDims[i],arrayDims2[i]);
          if (!result)           return;
        }
      }
 else {
        result=(arrayDims == arrayDims2) && matchSons(new1.getArgumentList(),new2.getArgumentList());
      }
    }
  }
 else   if (new1.getClassReference() == new2.getClassReference()) {
    ((LexicalNodesFilter)LexicalNodesFilter.getInstance()).setCareKeyWords(true);
    result=matchSons(new1,new2);
    ((LexicalNodesFilter)LexicalNodesFilter.getInstance()).setCareKeyWords(false);
  }
 else   if (new1.getAnonymousClass() == null && new1.getClassReference() != null && new2.getAnonymousClass() != null) {
    result=match(new1.getClassReference(),new2.getAnonymousClass().getBaseClassReference()) && matchSons(new1.getArgumentList(),new2.getArgumentList());
  }
 else {
    result=false;
  }
}
