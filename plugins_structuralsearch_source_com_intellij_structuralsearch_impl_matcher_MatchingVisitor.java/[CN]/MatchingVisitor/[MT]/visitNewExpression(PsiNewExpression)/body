{
  if (element instanceof PsiArrayInitializerExpression && element.getParent() instanceof PsiVariable && new1.getArrayDimensions().length == 0 && new1.getArrayInitializer() != null) {
    result=match(new1.getClassReference(),((PsiVariable)element.getParent()).getTypeElement());
    matchSons(new1.getArrayInitializer(),element);
    return;
  }
  final PsiNewExpression new2=(PsiNewExpression)element;
  if (new1.getClassReference() != null) {
    if (new2.getClassReference() != null) {
      result=match(new1.getClassReference(),new2.getClassReference()) && matchSons(new1.getArrayInitializer(),new2.getArrayInitializer());
      if (result) {
        matchArrayDims(new1,new2);
      }
      return;
    }
 else {
      final PsiKeyword newKeyword=PsiTreeUtil.getChildOfType(new2,PsiKeyword.class);
      final PsiElement element=PsiTreeUtil.getNextSiblingOfType(newKeyword,PsiWhiteSpace.class);
      if (element != null && element.getNextSibling() instanceof PsiKeyword) {
        ((LexicalNodesFilter)LexicalNodesFilter.getInstance()).setCareKeyWords(true);
        result=match(new1.getClassReference(),element.getNextSibling()) && matchSons(new1.getArrayInitializer(),new2.getArrayInitializer());
        ((LexicalNodesFilter)LexicalNodesFilter.getInstance()).setCareKeyWords(false);
        if (result) {
          matchArrayDims(new1,new2);
        }
        return;
      }
    }
  }
  if (new1.getClassReference() == new2.getClassReference()) {
    ((LexicalNodesFilter)LexicalNodesFilter.getInstance()).setCareKeyWords(true);
    result=matchSons(new1,new2);
    ((LexicalNodesFilter)LexicalNodesFilter.getInstance()).setCareKeyWords(false);
  }
 else   if (new1.getAnonymousClass() == null && new1.getClassReference() != null && new2.getAnonymousClass() != null) {
    result=match(new1.getClassReference(),new2.getAnonymousClass().getBaseClassReference()) && matchSons(new1.getArgumentList(),new2.getArgumentList());
  }
 else {
    result=false;
  }
}
