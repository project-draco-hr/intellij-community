{
  if (reference.getQualifier() == null) {
    final PsiElement nameElement=reference.getReferenceNameElement();
    if (nameElement != null && matchContext.getPattern().isTypedVar(nameElement)) {
      if (element instanceof PsiReferenceExpression) {
        final PsiReferenceExpression psiReferenceExpression=((PsiReferenceExpression)element);
        if (psiReferenceExpression.getQualifierExpression() == null) {
          element=psiReferenceExpression.getReferenceNameElement();
        }
      }
      final SubstitutionHandler handler=(SubstitutionHandler)matchContext.getPattern().getHandler(nameElement);
      if (handler.isSubtype() || handler.isStrictSubtype()) {
        result=checkMatchWithingHierarchy(element,handler,reference);
      }
 else {
        result=handler.handle(element,matchContext);
      }
      return;
    }
  }
  if (!(element instanceof PsiReferenceExpression)) {
    result=false;
    return;
  }
  final PsiReferenceExpression reference2=(PsiReferenceExpression)element;
  if (reference.getQualifier() == null && reference2.getQualifier() == null) {
    result=reference.getReferenceNameElement().textMatches(reference2.getReferenceNameElement());
    return;
  }
  if (!(element.getParent() instanceof PsiMethodCallExpression) && reference.getQualifierExpression() != null && (reference2.getQualifierExpression() != null || (reference.getQualifierExpression() instanceof PsiThisExpression && reference2.getQualifierExpression() == null && MatchUtils.getReferencedElement(element) instanceof PsiField))) {
    final PsiElement referenceElement=reference.getReferenceNameElement();
    final PsiElement referenceElement2=reference2.getReferenceNameElement();
    if (matchContext.getPattern().isTypedVar(referenceElement)) {
      result=handleTypedElement(referenceElement,referenceElement2);
    }
 else {
      result=(referenceElement2 != null && referenceElement != null && referenceElement.textMatches(referenceElement2)) || referenceElement == referenceElement2;
    }
    if (result && reference.getQualifierExpression() != null && reference2.getQualifierExpression() != null) {
      result=match(reference.getQualifierExpression(),reference2.getQualifierExpression());
    }
    return;
  }
  result=false;
}
