{
  boolean isTypedVar=matchContext.getPattern().isTypedVar(var.getNameIdentifier());
  boolean isTypedInitializer=var.getInitializer() != null && matchContext.getPattern().isTypedVar(var.getInitializer()) && var.getInitializer() instanceof PsiReferenceExpression;
  final PsiVariable var2=(PsiVariable)element;
  result=(var.getName().equals(var2.getName()) || isTypedVar) && ((var.getParent() instanceof PsiClass && ((PsiClass)var.getParent()).isInterface()) || match(var.getModifierList(),var2.getModifierList())) && match(var.getTypeElement(),var2.getTypeElement())&& (match(var.getInitializer(),var2.getInitializer()) || isTypedInitializer)&& validateArrayDimensions(var.getType(),var2.getType());
  if (result && isTypedInitializer) {
    result=(var2.getInitializer() != null || allowsAbsenceOfMatch(var.getInitializer()));
  }
  if (result && isTypedVar) {
    result=handleTypedElement(var.getNameIdentifier(),var2.getNameIdentifier());
  }
}
