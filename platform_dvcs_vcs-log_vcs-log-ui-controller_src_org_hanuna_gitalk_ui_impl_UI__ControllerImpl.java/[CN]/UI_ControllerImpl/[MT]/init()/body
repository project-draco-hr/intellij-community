{
  final Consumer<ProgressIndicator> doInit=new Consumer<ProgressIndicator>(){
    @Override public void consume(    final ProgressIndicator indicator){
      dataLoader=new DataLoaderImpl(myProject,commitDataCache,myLogProvider);
      try {
        dataLoader.readNextPart(indicator,rebaseDelegate.getFakeCommitsInfo(),myRoot);
        dataInit();
      }
 catch (      VcsException e) {
        notifyError(e);
      }
      ((GraphTableModel)getGraphTableModel()).addReworded(rebaseDelegate.reworded);
      ((GraphTableModel)getGraphTableModel()).addFixedUp(rebaseDelegate.fixedUp);
      UIUtil.invokeAndWaitIfNeeded(new Runnable(){
        @Override public void run(){
          mySwingUi.updateUI();
          for (          Hash hash : rebaseDelegate.selected) {
            mySwingUi.addToSelection(hash);
          }
        }
      }
);
    }
  }
;
  myDataLoaderQueue.run(new Task.Backgroundable(myProject,"Loading...",false){
    public void run(    @NotNull final ProgressIndicator indicator){
      doInit.consume(indicator);
    }
  }
);
}
