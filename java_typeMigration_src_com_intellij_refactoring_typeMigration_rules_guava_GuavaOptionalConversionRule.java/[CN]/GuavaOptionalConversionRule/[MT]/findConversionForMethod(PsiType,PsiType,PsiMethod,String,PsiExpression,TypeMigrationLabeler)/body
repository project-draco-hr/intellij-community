{
  if ("or".equals(methodName)) {
    PsiMethodCallExpression methodCallExpression=null;
    if (context instanceof PsiMethodCallExpression) {
      final PsiParameter[] parameters=method.getParameterList().getParameters();
      if (parameters.length != 1) {
        return null;
      }
      final PsiClass aClass=PsiTypesUtil.getPsiClass(parameters[0].getType());
      if (aClass != null) {
        final String qName=aClass.getQualifiedName();
        if (GUAVA_OPTIONAL.equals(qName)) {
          return new TypeConversionDescriptor("$expr$","java.util.Optional.ofNullable($expr$.get())");
        }
 else         if ("com.google.common.bas.Supplier".equals(qName)) {
          return new TypeConversionDescriptor("$expr$","java.util.Optional.ofNullable($expr$)");
        }
 else {
          return new TypeConversionDescriptor("$expr$","java.util.Optional.ofNullable($expr$)");
        }
      }
      return null;
    }
 else     if (context.getParent() instanceof PsiMethodCallExpression) {
      methodCallExpression=(PsiMethodCallExpression)context.getParent();
    }
    if (methodCallExpression == null) {
      return null;
    }
    final PsiParameter[] parameters=method.getParameterList().getParameters();
    if (parameters.length != 1) {
      return null;
    }
    final PsiClass aClass=PsiTypesUtil.getPsiClass(parameters[0].getType());
    if (aClass != null) {
      final String qName=aClass.getQualifiedName();
      if (GUAVA_OPTIONAL.equals(qName)) {
        return new TypeConversionDescriptor("$val$.or($other$)","java.util.Optional.ofNullable($val$.orElseGet($other$::get))",to);
      }
 else       if ("com.google.common.bas.Supplier".equals(qName)) {
        return new TypeConversionDescriptor("$val$.or($other$)","$val$.orElseGet($other$::get)");
      }
 else {
        return new TypeConversionDescriptor("$val$.or($other$)","$val$.orElse($other$)");
      }
    }
    return null;
  }
  return null;
}
