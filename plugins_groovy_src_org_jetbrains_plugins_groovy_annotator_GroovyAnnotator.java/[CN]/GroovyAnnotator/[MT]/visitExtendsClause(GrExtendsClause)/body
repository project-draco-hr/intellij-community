{
  GrTypeDefinition typeDefinition=(GrTypeDefinition)extendsClause.getParent();
  if (typeDefinition.isAnnotationType()) {
    myHolder.createErrorAnnotation(extendsClause,GroovyBundle.message("annotation.types.may.not.have.extends.clause"));
  }
 else   if (typeDefinition.isTrait()) {
    checkReferenceList(myHolder,extendsClause,IS_TRAIT,GroovyBundle.message("only.traits.expected.here"),null);
  }
 else   if (typeDefinition.isInterface()) {
    checkReferenceList(myHolder,extendsClause,IS_INTERFACE,GroovyBundle.message("no.class.expected.here"),null);
  }
 else   if (typeDefinition.isEnum()) {
    myHolder.createErrorAnnotation(extendsClause,GroovyBundle.message("enums.may.not.have.extends.clause"));
  }
 else {
    checkReferenceList(myHolder,extendsClause,IS_NOT_INTERFACE,GroovyBundle.message("no.interface.expected.here"),new ChangeExtendsImplementsQuickFix(typeDefinition));
    checkForWildCards(myHolder,extendsClause);
  }
}
