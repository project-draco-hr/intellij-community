{
  final PsiElement element=p.getElementToSearch();
  if (!(element instanceof PsiClass)) {
    return;
  }
  final SearchScope scope=p.getEffectiveSearchScope();
  if (!(scope instanceof GlobalSearchScope))   return;
  final PsiClass aClass=(PsiClass)element;
  final String jvmClassName=ApplicationManager.getApplication().runReadAction(new Computable<String>(){
    @Override public String compute(){
      return ClassUtil.getJVMClassName(aClass);
    }
  }
);
  if (jvmClassName == null)   return;
  final PsiFile[] files=ApplicationManager.getApplication().runReadAction(new Computable<PsiFile[]>(){
    @Override public PsiFile[] compute(){
      return FilenameIndex.getFilesByName(aClass.getProject(),jvmClassName,(GlobalSearchScope)scope);
    }
  }
);
  for (  PsiFile file : files) {
    if (file.getLanguage() == SPILanguage.INSTANCE) {
      final PsiReference reference=file.getReference();
      if (reference != null) {
        consumer.process(reference);
      }
    }
  }
}
