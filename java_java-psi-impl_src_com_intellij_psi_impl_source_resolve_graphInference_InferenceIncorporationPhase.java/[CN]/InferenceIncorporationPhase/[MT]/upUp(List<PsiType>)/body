{
  return findParameterizationOfTheSameGenericClass(upperBounds,new Processor<Couple<PsiType>>(){
    @Override public boolean process(    Couple<PsiType> pair){
      final PsiType sType=pair.first;
      final PsiType tType=pair.second;
      if (!mySession.isProperType(sType) && !mySession.isProperType(tType)) {
        if (!(sType instanceof PsiWildcardType) && !(tType instanceof PsiWildcardType) && sType != null && tType != null) {
          addConstraint(new TypeEqualityConstraint(sType,tType));
        }
      }
      return true;
    }
  }
);
}
