{
  try {
    Change propertiesChange=getSvnChangeLayer(change);
    if (propertiesChange == null)     throw new DiffRequestPresentableException(SvnBundle.getString("diff.cant.get.properties.changes"));
    ContentRevision bRevRaw=propertiesChange.getBeforeRevision();
    ContentRevision aRevRaw=propertiesChange.getAfterRevision();
    if (bRevRaw != null && !(bRevRaw instanceof PropertyRevision)) {
      LOG.warn("Before change is not PropertyRevision");
      throw new DiffRequestPresentableException(SvnBundle.getString("diff.cant.get.properties.changes"));
    }
    if (aRevRaw != null && !(aRevRaw instanceof PropertyRevision)) {
      LOG.warn("After change is not PropertyRevision");
      throw new DiffRequestPresentableException(SvnBundle.getString("diff.cant.get.properties.changes"));
    }
    PropertyRevision bRev=(PropertyRevision)bRevRaw;
    PropertyRevision aRev=(PropertyRevision)aRevRaw;
    indicator.checkCanceled();
    List<PropertyData> bContent=bRev != null ? bRev.getProperties() : null;
    indicator.checkCanceled();
    List<PropertyData> aContent=aRev != null ? aRev.getProperties() : null;
    if (aRev == null && bRev == null)     throw new DiffRequestPresentableException(SvnBundle.getString("diff.cant.get.properties.changes"));
    ContentRevision bRevMain=change.getBeforeRevision();
    ContentRevision aRevMain=change.getAfterRevision();
    String title1=bRevMain != null ? StringUtil.nullize(bRevMain.getRevisionNumber().asString()) : null;
    String title2=aRevMain != null ? StringUtil.nullize(aRevMain.getRevisionNumber().asString()) : null;
    return new SvnPropertiesDiffRequest(bContent,aContent,title1,title2);
  }
 catch (  VcsException e) {
    throw new DiffRequestPresentableException(e);
  }
}
