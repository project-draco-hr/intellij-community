{
  if (jdkName == null)   return null;
  if (USE_INTERNAL_JAVA.equals(jdkName)) {
    return JavaAwareProjectJdkTableImpl.getInstanceEx().getInternalJdk();
  }
  if (USE_PROJECT_JDK.equals(jdkName)) {
    if (project != null) {
      Sdk res=ProjectRootManager.getInstance(project).getProjectSdk();
      if (res != null) {
        return res;
      }
      Module[] modules=ModuleManager.getInstance(project).getModules();
      for (      Module module : modules) {
        Sdk sdk=ModuleRootManager.getInstance(module).getSdk();
        if (sdk != null && sdk.getSdkType() instanceof JavaSdkType) {
          return sdk;
        }
      }
    }
    if (project == null) {
      Sdk recent=ProjectJdkTable.getInstance().findMostRecentSdkOfType(JavaSdk.getInstance());
      if (recent != null)       return recent;
      return JavaAwareProjectJdkTableImpl.getInstanceEx().getInternalJdk();
    }
    throw new ExternalSystemException(String.format("Project JDK is not specified. <a href='%s'>Configure</a>",OpenProjectJdkSettingsCallback.ID),OpenProjectJdkSettingsCallback.ID);
  }
  if (USE_JAVA_HOME.equals(jdkName)) {
    final String javaHome=System.getenv("JAVA_HOME");
    if (StringUtil.isEmptyOrSpaces(javaHome)) {
      throw new ExternalSystemException(ExternalSystemBundle.message("external.system.java.home.undefined"));
    }
    final Sdk jdk=JavaSdk.getInstance().createJdk("",javaHome);
    if (jdk == null) {
      throw new ExternalSystemException(ExternalSystemBundle.message("external.system.java.home.invalid",javaHome));
    }
    return jdk;
  }
  for (  Sdk projectJdk : ProjectJdkTable.getInstance().getAllJdks()) {
    if (projectJdk.getName().equals(jdkName)) {
      return projectJdk;
    }
  }
  throw new ExternalSystemException(ExternalSystemBundle.message("external.system.java.home.invalid",jdkName));
}
