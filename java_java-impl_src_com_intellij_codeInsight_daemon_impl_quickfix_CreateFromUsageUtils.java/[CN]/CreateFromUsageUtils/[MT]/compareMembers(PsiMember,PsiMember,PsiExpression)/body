{
  ProgressManager.checkCanceled();
  int result=JavaStatisticsManager.createInfo(null,m2).getUseCount() - JavaStatisticsManager.createInfo(null,m1).getUseCount();
  if (result != 0)   return result;
  final PsiClass aClass=m1.getContainingClass();
  final PsiClass bClass=m2.getContainingClass();
  if (aClass != null && bClass != null) {
    result=JavaStatisticsManager.createInfo(null,bClass).getUseCount() - JavaStatisticsManager.createInfo(null,aClass).getUseCount();
    if (result != 0)     return result;
  }
  WeighingComparable<PsiElement,ProximityLocation> proximity1=PsiProximityComparator.getProximity(m1,context);
  WeighingComparable<PsiElement,ProximityLocation> proximity2=PsiProximityComparator.getProximity(m2,context);
  if (proximity1 != null && proximity2 != null) {
    result=proximity2.compareTo(proximity1);
    if (result != 0)     return result;
  }
  String name1=PsiUtil.getMemberQualifiedName(m1);
  String name2=PsiUtil.getMemberQualifiedName(m2);
  return name1 == null || name2 == null ? 0 : name1.compareTo(name2);
}
