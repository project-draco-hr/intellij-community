{
  if (!myLegalNoticeAccepted) {
    ApplicationManager.getApplication().invokeLater(new Runnable(){
      @Override public void run(){
        JComponent component=WindowManager.getInstance().findVisibleFrame().getRootPane();
        if (component != null) {
          Rectangle rect=component.getVisibleRect();
          String message="<div align='left'>" + IdeaDecompilerBundle.message("legal.notice.text") + "</div>";
          GotItMessage.createMessage(IdeaDecompilerBundle.message("legal.notice.title"),message).setDisposable(editor).setCallback(new Runnable(){
            @Override public void run(){
              PropertiesComponent.getInstance().setValue(LEGAL_NOTICE_KEY,Boolean.TRUE.toString());
              myLegalNoticeAccepted=true;
            }
          }
).setHyperlinkListener(new HyperlinkAdapter(){
            @Override protected void hyperlinkActivated(            HyperlinkEvent e){
              final PluginManagerConfigurable configurable=new PluginManagerConfigurable(PluginManagerUISettings.getInstance());
              ShowSettingsUtil.getInstance().editConfigurable(editor.getComponent(),configurable,new Runnable(){
                @Override public void run(){
                  IdeaPluginDescriptor plugin=PluginManager.getPlugin(PluginId.getId("org.jetbrains.java.decompiler"));
                  if (plugin != null)                   configurable.select(plugin);
                }
              }
);
            }
          }
).show(new RelativePoint(component,new Point(rect.x + 30,rect.y + rect.height - 10)),Balloon.Position.above);
        }
      }
    }
,ModalityState.NON_MODAL);
  }
}
