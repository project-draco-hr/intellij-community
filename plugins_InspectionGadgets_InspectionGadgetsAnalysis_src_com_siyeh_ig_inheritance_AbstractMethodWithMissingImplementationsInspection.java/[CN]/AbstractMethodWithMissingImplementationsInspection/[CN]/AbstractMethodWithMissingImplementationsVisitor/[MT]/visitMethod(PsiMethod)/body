{
  super.visitMethod(method);
  if (method.getNameIdentifier() == null) {
    return;
  }
  final PsiClass containingClass=method.getContainingClass();
  if (containingClass == null) {
    return;
  }
  if (!containingClass.isInterface() || !method.hasModifierProperty(PsiModifier.ABSTRACT)) {
    return;
  }
  final InheritorFinder inheritorFinder=new InheritorFinder(containingClass);
  for (  final PsiClass inheritor : inheritorFinder.getInheritors()) {
    if (inheritor.isEnum()) {
      final List<PsiEnumConstant> enumConstants=PsiTreeUtil.getChildrenOfTypeAsList(inheritor,PsiEnumConstant.class);
      for (      PsiEnumConstant enumConstant : enumConstants) {
        final PsiEnumConstantInitializer initializingClass=enumConstant.getInitializingClass();
        if (initializingClass == null || !hasMatchingImplementation(initializingClass,method)) {
          registerMethodError(method);
          return;
        }
      }
    }
 else     if (!hasMatchingImplementation(inheritor,method)) {
      registerMethodError(method);
      return;
    }
  }
}
