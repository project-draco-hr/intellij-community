{
  StopWatch sw=StopWatch.start("refresh");
  PermanentGraph<Integer> permanentGraph=myCurrentDataPack.isFull() ? myCurrentDataPack.getPermanentGraph() : null;
  Map<VirtualFile,Set<VcsRef>> currentRefs=myCurrentDataPack.getRefsModel().getAllRefsByRoot();
  try {
    if (permanentGraph != null) {
      int commitCount=myRecentCommitCount;
      for (int attempt=0; attempt <= 1; attempt++) {
        loadLogAndRefs(roots,currentRefs,commitCount);
        List<? extends GraphCommit<Integer>> compoundLog=multiRepoJoin(myLoadedInfo.getCommits());
        Map<VirtualFile,Set<VcsRef>> allNewRefs=getAllNewRefs(myLoadedInfo,currentRefs);
        List<GraphCommit<Integer>> joinedFullLog=join(compoundLog,permanentGraph.getAllCommits(),currentRefs,allNewRefs);
        if (joinedFullLog == null) {
          commitCount*=5;
        }
 else {
          return DataPack.build(joinedFullLog,allNewRefs,myProviders,myHashMap,true);
        }
      }
      LOG.error("Couldn't join " + commitCount + " recent commits to the log ("+ permanentGraph.getAllCommits().size()+ " commits)",new Attachment("recent_commits",myLoadedInfo.toLogString(myHashMap.asIndexGetter())));
    }
    return loadFullLog();
  }
 catch (  Exception e) {
    myExceptionHandler.consume(e);
    return EmptyDataPack.getInstance();
  }
 finally {
    sw.report();
  }
}
