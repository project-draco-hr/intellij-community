{
  try {
    Map<VirtualFile,Collection<VcsRef>> refs=loadRefsFromVcs(myProviders);
    Set<VirtualFile> roots=myProviders.keySet();
    Map<VirtualFile,VcsLogProvider.Requirements> requirements=prepareSimpleRequirements(roots,myRecentCommitCount);
    Map<VirtualFile,List<? extends TimedVcsCommit>> commits=loadRecentCommitsFromVcs(myProviders,requirements,myUserRegistry,myTopCommitsDetailsCache);
    List<? extends TimedVcsCommit> compoundLog=compound(commits.values());
    List<GraphCommit<Integer>> compactedLog=compactCommits(compoundLog,myHashMap);
    DataPack dataPack=DataPack.build(compactedLog,new RefsModel(refs,myHashMap.asIndexGetter()),myHashMap.asIndexGetter(),myHashMap.asHashGetter(),myProviders,false);
    mySingleTaskController.request(RefreshRequest.RELOAD_ALL);
    return dataPack;
  }
 catch (  VcsException e) {
    myExceptionHandler.consume(e);
    return EmptyDataPack.getInstance();
  }
}
