{
  final PsiStatement[] statements=body.getStatements();
  if (statements.length != 1) {
    return false;
  }
  final PsiStatement statement=statements[0];
  final PsiExpression expression;
  if (PsiType.VOID.equals(method.getReturnType())) {
    if (statement instanceof PsiExpressionStatement) {
      final PsiExpressionStatement expressionStatement=(PsiExpressionStatement)statement;
      expression=expressionStatement.getExpression();
    }
 else {
      return false;
    }
  }
 else {
    if (statement instanceof PsiReturnStatement) {
      final PsiReturnStatement returnStatement=(PsiReturnStatement)statement;
      expression=ParenthesesUtils.stripParentheses(returnStatement.getReturnValue());
    }
 else {
      return false;
    }
  }
  if (!(expression instanceof PsiMethodCallExpression)) {
    return false;
  }
  final PsiMethodCallExpression methodCallExpression=(PsiMethodCallExpression)expression;
  if (!MethodCallUtils.isSuperMethodCall(methodCallExpression,method)) {
    return false;
  }
  if (superMethod.hasModifierProperty(PsiModifier.PROTECTED)) {
    final PsiJavaFile superFile=(PsiJavaFile)superMethod.getContainingFile();
    final PsiJavaFile file=(PsiJavaFile)method.getContainingFile();
    return superFile.getPackageName().equals(file.getPackageName());
  }
  return true;
}
