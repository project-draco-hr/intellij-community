{
  final Map<String,String> arcs=new HashMap<>();
  arcs.put("a","b");
  arcs.put("b","c");
  arcs.put("c","bd");
  arcs.put("d","e");
  arcs.put("e","d");
  final Graph<Chunk<String>> graph=getAlgorithmsInstance().computeSCCGraph(initGraph(arcs));
  final List<Chunk<String>> expectedNodes=new ArrayList<>();
  Chunk<String> A=new Chunk<>("a");
  expectedNodes.add(A);
  Chunk<String> BC=new Chunk<>(ContainerUtil.newHashSet("b","c"));
  expectedNodes.add(BC);
  Chunk<String> DE=new Chunk<>(ContainerUtil.newHashSet("d","e"));
  expectedNodes.add(DE);
  checkVertices(expectedNodes,graph.getNodes());
  final Map<Chunk<String>,Set<Chunk<String>>> expectedArcs=new HashMap<>();
  expectedArcs.put(A,ContainerUtil.newHashSet());
  expectedArcs.put(BC,ContainerUtil.newHashSet(A));
  expectedArcs.put(DE,ContainerUtil.newHashSet(BC));
  checkArcs(expectedArcs,graph);
}
