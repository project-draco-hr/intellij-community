{
  return new JavaElementVisitor(){
    @Override public void visitVariable(    PsiVariable variable){
      super.visitVariable(variable);
      visitVariableImpl(variable);
    }
    @Override public void visitJavaToken(    PsiJavaToken token){
      super.visitJavaToken(token);
      if (token.getTokenType() == JavaTokenType.EQ) {
        final PsiElement parent=token.getParent();
        if (parent instanceof PsiVariable) {
          visitVariableImpl((PsiVariable)parent);
        }
      }
    }
    private void visitVariableImpl(    @NotNull PsiVariable variable){
      if (variable.getTypeElement() != null) {
        final PsiType type=getSuggestedType(variable);
        if (type != null) {
          final String typeText=type.getCanonicalText();
          final String message=InspectionsBundle.message("inspection.raw.variable.type.make.generic.text",variable.getName(),typeText);
          holder.registerProblem(variable,message,new MyLocalQuickFix(message));
        }
      }
    }
  }
;
}
