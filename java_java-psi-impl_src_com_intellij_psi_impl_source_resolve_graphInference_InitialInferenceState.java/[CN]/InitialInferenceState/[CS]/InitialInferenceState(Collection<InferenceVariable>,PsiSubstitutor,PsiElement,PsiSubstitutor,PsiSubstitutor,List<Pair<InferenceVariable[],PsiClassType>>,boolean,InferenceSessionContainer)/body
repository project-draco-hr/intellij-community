{
  myErased=erased;
  myInferenceVariables=new HashSet<InferenceVariable>();
  PsiSubstitutor substitutor=PsiSubstitutor.EMPTY;
  PsiSubstitutor subst=PsiSubstitutor.EMPTY;
  for (  InferenceVariable variable : inferenceVariables) {
    final PsiType substitute=topInferenceSubstitutor.substitute(variable);
    final PsiClass aClass=PsiUtil.resolveClassInClassTypeOnly(substitute);
    if (aClass instanceof InferenceVariable) {
      myInferenceVariables.add((InferenceVariable)aClass);
      if (inferenceSubstitutor.getSubstitutionMap().containsValue(PsiSubstitutor.EMPTY.substitute(variable))) {
        substitutor=substitutor.put(variable.getParameter(),substitute);
        subst=subst.put(variable,substitute);
      }
    }
  }
  myInferenceSubstitutor=substitutor;
  myContext=context;
  mySiteSubstitutor=siteSubstitutor;
  myCaptures=new ArrayList<Pair<InferenceVariable[],PsiClassType>>();
  for (  Pair<InferenceVariable[],PsiClassType> capture : captures) {
    InferenceVariable[] newParameters=new InferenceVariable[capture.first.length];
    InferenceVariable[] parameters=capture.first;
    for (int i=0; i < parameters.length; i++) {
      final PsiType substitute=topInferenceSubstitutor.substitute(parameters[i]);
      newParameters[i]=(InferenceVariable)PsiUtil.resolveClassInClassTypeOnly(substitute);
    }
    myCaptures.add(Pair.create(newParameters,(PsiClassType)subst.substitute(capture.second)));
  }
  myInferenceSessionContainer=inferenceSessionContainer;
}
