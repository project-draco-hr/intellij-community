{
  super(pathMacroSubstitutor);
  myDir=dir;
  mySplitter=splitter;
  VirtualFileTracker virtualFileTracker=ServiceManager.getService(VirtualFileTracker.class);
  if (virtualFileTracker != null && listener != null) {
    virtualFileTracker.addTracker(VfsUtilCore.pathToUrl(PathUtil.toSystemIndependentName(myDir.getPath())),new VirtualFileAdapter(){
      @Override public void contentsChanged(      @NotNull VirtualFileEvent event){
        notifyIfNeed(event);
      }
      @Override public void fileDeleted(      @NotNull VirtualFileEvent event){
        if (event.getFile().equals(myVirtualFile)) {
          myVirtualFile=null;
        }
        notifyIfNeed(event);
      }
      @Override public void fileCreated(      @NotNull VirtualFileEvent event){
        notifyIfNeed(event);
      }
      private void notifyIfNeed(      @NotNull VirtualFileEvent event){
        if (event.getFile().isDirectory() || DirectoryStorageData.isStorageFile(event.getFile())) {
          listener.storageFileChanged(event,DirectoryBasedStorage.this);
        }
      }
    }
,false,parentDisposable);
  }
}
