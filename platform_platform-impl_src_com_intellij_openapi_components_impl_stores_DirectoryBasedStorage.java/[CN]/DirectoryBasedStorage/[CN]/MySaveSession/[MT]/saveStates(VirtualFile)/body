{
  final Element storeElement=new Element(StorageData.COMPONENT);
  for (  final String componentName : copiedStorageData.getComponentNames()) {
    copiedStorageData.processComponent(componentName,new TObjectObjectProcedure<String,Object>(){
      @Override public boolean execute(      String fileName,      Object state){
        if (!dirtyFileNames.contains(fileName)) {
          return true;
        }
        Element element=null;
        try {
          element=copiedStorageData.stateToElement(fileName,state);
          if (storage.myPathMacroSubstitutor != null) {
            storage.myPathMacroSubstitutor.collapsePaths(element);
          }
          storeElement.setAttribute(StorageData.NAME,componentName);
          storeElement.addContent(element);
          VirtualFile file=StorageUtil.getFile(fileName,dir,MySaveSession.this);
          StorageUtil.writeFile(null,MySaveSession.this,file,storeElement,LineSeparator.fromString(file.exists() ? StorageUtil.loadFile(file).second : SystemProperties.getLineSeparator()),false);
        }
 catch (        IOException e) {
          LOG.error(e);
        }
 finally {
          if (element != null) {
            element.detach();
          }
        }
        return true;
      }
    }
);
  }
}
