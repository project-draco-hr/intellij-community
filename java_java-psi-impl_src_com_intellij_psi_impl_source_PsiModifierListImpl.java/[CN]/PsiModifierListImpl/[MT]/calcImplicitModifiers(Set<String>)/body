{
  Set<String> implicitModifiers=ContainerUtil.newHashSet();
  PsiElement parent=getParent();
  if (parent instanceof PsiClass) {
    PsiElement grandParent=parent.getContext();
    if (grandParent instanceof PsiClass && ((PsiClass)grandParent).isInterface()) {
      Collections.addAll(implicitModifiers,PUBLIC,STATIC);
    }
    if (((PsiClass)parent).isInterface()) {
      implicitModifiers.add(ABSTRACT);
      if (grandParent instanceof PsiClass) {
        implicitModifiers.add(STATIC);
      }
    }
    if (((PsiClass)parent).isEnum()) {
      if (!(grandParent instanceof PsiFile)) {
        implicitModifiers.add(STATIC);
      }
      List<PsiField> fields=parent instanceof PsiExtensibleClass ? ((PsiExtensibleClass)parent).getOwnFields() : Arrays.asList(((PsiClass)parent).getFields());
      boolean hasSubClass=ContainerUtil.find(fields,new Condition<PsiField>(){
        @Override public boolean value(        PsiField field){
          return field instanceof PsiEnumConstant && ((PsiEnumConstant)field).getInitializingClass() != null;
        }
      }
) != null;
      if (!hasSubClass) {
        implicitModifiers.add(FINAL);
      }
      List<PsiMethod> methods=parent instanceof PsiExtensibleClass ? ((PsiExtensibleClass)parent).getOwnMethods() : Arrays.asList(((PsiClass)parent).getMethods());
      for (      PsiMethod method : methods) {
        if (method.hasModifierProperty(ABSTRACT)) {
          implicitModifiers.add(ABSTRACT);
          break;
        }
      }
    }
  }
 else   if (parent instanceof PsiMethod) {
    PsiClass aClass=((PsiMethod)parent).getContainingClass();
    if (aClass != null && aClass.isInterface()) {
      implicitModifiers.add(PUBLIC);
      if (!explicitModifiers.contains(DEFAULT) && !explicitModifiers.contains(STATIC) && !explicitModifiers.contains(PRIVATE)) {
        implicitModifiers.add(ABSTRACT);
      }
    }
 else     if (aClass != null && aClass.isEnum() && ((PsiMethod)parent).isConstructor()) {
      implicitModifiers.add(PRIVATE);
    }
  }
 else   if (parent instanceof PsiField) {
    if (parent instanceof PsiEnumConstant) {
      Collections.addAll(implicitModifiers,PUBLIC,STATIC,FINAL);
    }
 else {
      PsiClass aClass=((PsiField)parent).getContainingClass();
      if (aClass != null && aClass.isInterface()) {
        Collections.addAll(implicitModifiers,PUBLIC,STATIC,FINAL);
      }
    }
  }
 else   if (parent instanceof PsiParameter && parent.getParent() instanceof PsiCatchSection && ((PsiParameter)parent).getType() instanceof PsiDisjunctionType) {
    Collections.addAll(implicitModifiers,FINAL);
  }
 else   if (parent instanceof PsiResourceVariable) {
    Collections.addAll(implicitModifiers,FINAL);
  }
  return implicitModifiers;
}
