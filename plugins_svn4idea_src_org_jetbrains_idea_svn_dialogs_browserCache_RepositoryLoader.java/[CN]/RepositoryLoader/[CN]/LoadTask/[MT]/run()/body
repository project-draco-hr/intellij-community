{
  final Collection<DirectoryEntry> entries=new TreeSet<DirectoryEntry>();
  final RepositoryTreeNode node=myData.first;
  final SvnVcs vcs=node.getVcs();
  SvnAuthenticationProvider.forceInteractive();
  DirectoryEntryConsumer handler=new DirectoryEntryConsumer(){
    @Override public void consume(    final DirectoryEntry entry) throws SVNException {
      entries.add(entry);
    }
  }
;
  try {
    SvnTarget target=SvnTarget.fromURL(node.getURL());
    vcs.getFactoryFromSettings().createBrowseClient().list(target,SVNRevision.HEAD,SVNDepth.IMMEDIATES,handler);
  }
 catch (  final VcsException e) {
    SwingUtilities.invokeLater(new Runnable(){
      public void run(){
        setError(myData,e.getMessage());
        startNext();
      }
    }
);
    return;
  }
 finally {
    SvnAuthenticationProvider.clearInteractive();
  }
  SwingUtilities.invokeLater(new Runnable(){
    public void run(){
      setResults(myData,new ArrayList<DirectoryEntry>(entries));
      startNext();
    }
  }
);
}
