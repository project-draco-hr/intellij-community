{
  configureStrategy();
  myView.setSubText(myStrategy.getSubText());
  final Pair<SpecialErrorPlace,List<WordWithPosition>> errorInfo=myStrategy.getErrorInfo();
  myView.showErrors(errorInfo.getSecond(),errorInfo.first);
  myView.setBalloons(myStrategy.getBalloonsToShow());
  final SuggestionInfo suggestionInfo=myStrategy.getSuggestionInfo();
  final List<String> suggestions=new ArrayList<String>(suggestionInfo.getSuggestions());
  final String lastPart=getLastPart();
  if ((lastPart != null) && myStrategy.isUnknownTextExists()) {
    final Iterator<String> iterator=suggestions.iterator();
    while (iterator.hasNext()) {
      final String textToCheck=iterator.next();
      if (!textToCheck.startsWith(lastPart)) {
        iterator.remove();
      }
    }
  }
  if (!suggestionInfo.myShowOnlyWhenRequested && !suggestions.isEmpty()) {
    final SuggestionsBuilder suggestionsBuilder=getBuilderWithHistory();
    suggestionsBuilder.add(suggestions);
    myView.displaySuggestions(suggestionsBuilder,suggestionInfo.myAbsolute,null);
  }
 else {
    myView.removeSuggestions();
  }
}
