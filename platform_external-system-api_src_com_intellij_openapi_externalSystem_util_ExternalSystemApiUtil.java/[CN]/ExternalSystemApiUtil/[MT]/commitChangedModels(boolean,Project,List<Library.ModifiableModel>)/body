{
  final List<Library.ModifiableModel> changedModels=ContainerUtil.findAll(models,new Condition<Library.ModifiableModel>(){
    @Override public boolean value(    Library.ModifiableModel model){
      return model.isChanged();
    }
  }
);
  if (!changedModels.isEmpty()) {
    executeProjectChangeAction(synchronous,new DisposeAwareProjectChange(project){
      @Override public void execute(){
        for (        Library.ModifiableModel modifiableModel : changedModels) {
          modifiableModel.commit();
        }
      }
    }
);
  }
}
