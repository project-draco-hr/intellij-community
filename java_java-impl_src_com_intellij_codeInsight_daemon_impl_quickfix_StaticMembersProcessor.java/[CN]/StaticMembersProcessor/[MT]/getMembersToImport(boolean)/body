{
  final List<T> list=new ArrayList<>();
  final List<T> applicableList=new ArrayList<>();
  for (  Map.Entry<PsiClass,Collection<T>> methodEntry : mySuggestions.entrySet()) {
    registerMember(methodEntry.getKey(),methodEntry.getValue(),list,applicableList);
  }
  List<T> result=!applicableOnly && applicableList.isEmpty() ? list : applicableList;
  for (int i=result.size() - 1; i >= 0; i--) {
    ProgressManager.checkCanceled();
    T method=result.get(i);
    if (StaticImportMethodFix.isExcluded(method)) {
      result.remove(i);
    }
  }
  Collections.sort(result,CodeInsightUtil.createSortIdenticalNamedMembersComparator(myPlace));
  return result;
}
