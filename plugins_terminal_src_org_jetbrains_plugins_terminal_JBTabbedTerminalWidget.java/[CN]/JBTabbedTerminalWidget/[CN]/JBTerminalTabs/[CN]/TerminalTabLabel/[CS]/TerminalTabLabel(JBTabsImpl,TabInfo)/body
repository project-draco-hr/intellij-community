{
  super(tabs,info);
  setOpaque(false);
  setFocusable(false);
  SimpleColoredComponent label=myLabel;
  label.setBorder(BorderFactory.createEmptyBorder(0,0,0,5));
  label.addMouseListener(new MouseAdapter(){
    @Override public void mouseReleased(    MouseEvent event){
      handleMouse(event);
    }
    @Override public void mousePressed(    MouseEvent event){
      handleMouse(event);
    }
    private void handleMouse(    MouseEvent e){
      if (e.isPopupTrigger()) {
        JPopupMenu menu=createPopup();
        menu.show(e.getComponent(),e.getX(),e.getY());
      }
 else       if (e.getButton() != MouseEvent.BUTTON2) {
        myTabs.select(getInfo(),true);
        if (e.getClickCount() == 2 && !e.isConsumed()) {
          e.consume();
          renameTab();
        }
      }
    }
    @Override public void mouseClicked(    MouseEvent e){
      if (e.getButton() == MouseEvent.BUTTON2) {
        if (myTabs.getSelectedInfo() == info) {
          closeCurrentSession();
        }
 else {
          myTabs.select(info,true);
        }
      }
    }
  }
);
}
