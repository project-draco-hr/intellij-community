{
  boolean hasReturns;
  if (callable instanceof PyFunction) {
    final PsiElement[] returnStatements=PsiTreeUtil.collectElements(callable,new PsiElementFilter(){
      @Override public boolean isAccepted(      PsiElement element){
        return (element instanceof PyReturnStatement && ((PyReturnStatement)element).getExpression() != null) || (element instanceof PyYieldExpression);
      }
    }
);
    hasReturns=returnStatements.length > 0;
  }
 else {
    PyReferenceExpression callSite=being_checked instanceof PyReferenceExpression ? (PyReferenceExpression)being_checked : null;
    hasReturns=!(callable.getCallType(myTypeEvalContext,callSite) instanceof PyNoneType);
  }
  if (allowed ^ hasReturns) {
    if (allowed && callable instanceof PyFunction) {
      PyStatementList statementList=((PyFunction)callable).getStatementList();
      if (statementList != null) {
        for (        PyStatement stmt : statementList.getStatements()) {
          if (stmt instanceof PyRaiseStatement) {
            return;
          }
        }
      }
    }
    registerProblem(being_checked,message);
  }
}
