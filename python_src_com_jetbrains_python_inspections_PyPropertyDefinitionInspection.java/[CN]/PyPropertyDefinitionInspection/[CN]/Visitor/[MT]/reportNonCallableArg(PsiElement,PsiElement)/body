{
  if (resolved instanceof PySubscriptionExpression || resolved instanceof PyNoneLiteralExpression) {
    return;
  }
  if (PyNames.NONE.equals(element.getText())) {
    return;
  }
  if (resolved instanceof PyTypedElement) {
    final PyType type=((PyTypedElement)resolved).getType(myTypeEvalContext);
    final Boolean isCallable=PyTypeChecker.isCallable(type);
    if (isCallable != null && !isCallable) {
      registerProblem(element,PyBundle.message("INSP.strange.arg.want.callable"));
    }
  }
}
