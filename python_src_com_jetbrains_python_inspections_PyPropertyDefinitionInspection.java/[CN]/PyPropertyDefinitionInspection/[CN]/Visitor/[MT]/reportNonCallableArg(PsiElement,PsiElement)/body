{
  if (!PyUtil.instanceOf(resolved,PySubscriptionExpression.class,PyNoneLiteralExpression.class)) {
    boolean is_not_callable=true;
    if (resolved instanceof PyExpression) {
      PyType expr_type=((PyExpression)resolved).getType(myTypeEvalContext);
      if (expr_type instanceof PyClassType) {
        final PyClassType cls_type=(PyClassType)expr_type;
        PyClass cls=cls_type.getPyClass();
        if (cls != null && !cls_type.isDefinition())         is_not_callable=cls.findMethodByName("__call__",true) == null;
      }
    }
    if (is_not_callable)     registerProblem(being_checked,PyBundle.message("INSP.strange.arg.want.callable"));
  }
}
