{
  TextBuffer buffer=new TextBuffer();
  tracer.addMapping(bytecode);
  if (classDef) {
    ClassNode child=DecompilerContext.getClassProcessor().getMapRootClasses().get(varType.value);
    new ClassWriter().classToJava(child,buffer,indent,tracer);
  }
 else {
    String name=null;
    if (processor != null) {
      name=processor.getVarName(new VarVersionPaar(index,version));
    }
    if (definition) {
      if (processor != null && processor.getVarFinal(new VarVersionPaar(index,version)) == VarTypeProcessor.VAR_EXPLICIT_FINAL) {
        buffer.append("final ");
      }
      buffer.append(ExprProcessor.getCastTypeName(getVarType())).append(" ");
    }
    buffer.append(name == null ? ("var" + index + (version == 0 ? "" : "_" + version)) : name);
  }
  return buffer;
}
