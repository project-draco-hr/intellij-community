{
  if (element instanceof PsiLocalVariable) {
    return GuavaLambda.findJavaAnalogueFor(evaluator.getType(element)) != null;
  }
 else   if (element instanceof PsiReturnStatement) {
    final PsiElement methodOrLambda=PsiTreeUtil.getParentOfType(element,PsiMethod.class,PsiLambdaExpression.class);
    PsiType methodReturnType=null;
    if (methodOrLambda instanceof PsiMethod) {
      methodReturnType=evaluator.getType(methodOrLambda);
    }
    return GuavaLambda.findJavaAnalogueFor(methodReturnType) != null;
  }
 else   if (element instanceof PsiExpressionList) {
    final PsiElement parent=element.getParent();
    if (parent instanceof PsiMethodCallExpression) {
      return evaluator.getType(parent) != null;
    }
  }
  return false;
}
