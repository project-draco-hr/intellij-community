{
  PsiBuilder.Marker statement=builder.mark();
  boolean hasError=false;
  mapAndAdvance(builder,JavaTokenType.EXPORTS_KEYWORD);
  if (parseClassOrPackageRef(builder) != null) {
    if (PsiKeyword.TO.equals(builder.getTokenText())) {
      mapAndAdvance(builder,JavaTokenType.TO_KEYWORD);
      while (true) {
        PsiBuilder.Marker ref=parseNameRef(builder);
        if (!expect(builder,JavaTokenType.COMMA)) {
          if (ref == null)           hasError=true;
          break;
        }
      }
    }
  }
 else {
    error(builder,JavaErrorMessages.message("expected.package.reference"));
    hasError=true;
  }
  if (!hasError) {
    semicolon(builder);
  }
 else {
    expect(builder,JavaTokenType.SEMICOLON);
  }
  statement.done(JavaElementType.EXPORTS_STATEMENT);
  return statement;
}
