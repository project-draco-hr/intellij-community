{
  final List<PyFromImportStatement> existingImports=((PyFile)file).getFromImports();
  for (  PyFromImportStatement existingImport : existingImports) {
    if (existingImport.isStarImport()) {
      continue;
    }
    final QualifiedName qName=existingImport.getImportSourceQName();
    if (qName != null && qName.toString().equals(from) && existingImport.getRelativeLevel() == 0) {
      for (      PyImportElement el : existingImport.getImportElements()) {
        final QualifiedName importedQName=el.getImportedQName();
        if (importedQName != null && StringUtil.equals(name,importedQName.toString()) && StringUtil.equals(asName,el.getAsName())) {
          return false;
        }
      }
      final PyElementGenerator generator=PyElementGenerator.getInstance(file.getProject());
      final PyImportElement importElement=generator.createImportElement(LanguageLevel.forElement(file),name);
      existingImport.add(importElement);
      return false;
    }
  }
  addFromImportStatement(file,from,name,asName,priority,anchor);
  return true;
}
