{
  final PyElementGenerator generator=PyElementGenerator.getInstance(file.getProject());
  final LanguageLevel languageLevel=LanguageLevel.forElement(file);
  final PyFromImportStatement nodeToInsert=generator.createFromImportStatement(languageLevel,from,name,asName);
  try {
    final PyImportStatementBase importStatement=PsiTreeUtil.getParentOfType(anchor,PyImportStatementBase.class,false);
    final PsiElement insertParent;
    if (importStatement != null && importStatement.getContainingFile() == file) {
      insertParent=importStatement.getParent();
    }
 else {
      insertParent=file;
    }
    if (InjectedLanguageManager.getInstance(file.getProject()).isInjectedFragment(file)) {
      final PsiElement element=insertParent.addBefore(nodeToInsert,getInsertPosition(insertParent,nodeToInsert,priority));
      PsiElement whitespace=element.getNextSibling();
      if (!(whitespace instanceof PsiWhiteSpace)) {
        whitespace=PsiParserFacade.SERVICE.getInstance(file.getProject()).createWhiteSpaceFromText("  >>> ");
      }
      insertParent.addBefore(whitespace,element);
    }
 else {
      if (anchor instanceof PyImportStatementBase) {
        insertParent.addAfter(nodeToInsert,anchor);
      }
 else {
        insertParent.addBefore(nodeToInsert,getInsertPosition(insertParent,nodeToInsert,priority));
      }
    }
  }
 catch (  IncorrectOperationException e) {
    LOG.error(e);
  }
}
