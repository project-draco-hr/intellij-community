{
  final boolean useQualified=!PyCodeInsightSettings.getInstance().PREFER_FROM_IMPORT;
  final PsiFileSystemItem toImport=target instanceof PsiFileSystemItem ? ((PsiFileSystemItem)target).getParent() : target.getContainingFile();
  final ImportPriority priority=getImportPriority(file,toImport);
  final QualifiedName qName=QualifiedNameFinder.findCanonicalImportPath(target,element);
  if (qName == null)   return;
  String path=qName.toString();
  if (target instanceof PsiFileSystemItem && qName.getComponentCount() == 1) {
    addImportStatement(file,path,null,priority,element);
  }
 else {
    final QualifiedName toImportQName=QualifiedNameFinder.findCanonicalImportPath(toImport,element);
    if (useQualified) {
      addImportStatement(file,path,null,priority,element);
      final PyElementGenerator elementGenerator=PyElementGenerator.getInstance(file.getProject());
      final String targetName=PyUtil.getElementNameWithoutExtension(target);
      element.replace(elementGenerator.createExpressionFromText(LanguageLevel.forElement(target),toImportQName + "." + targetName));
    }
 else {
      addImportFrom(file,null,toImportQName.toString(),target.getName(),null,priority,element);
    }
  }
}
