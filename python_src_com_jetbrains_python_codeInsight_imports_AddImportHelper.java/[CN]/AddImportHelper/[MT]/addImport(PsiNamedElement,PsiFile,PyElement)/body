{
  final boolean useQualified=!PyCodeInsightSettings.getInstance().PREFER_FROM_IMPORT;
  final PsiFileSystemItem toImport=target instanceof PsiFileSystemItem ? ((PsiFileSystemItem)target).getParent() : target.getContainingFile();
  final ImportPriority priority=getImportPriority(file,toImport);
  final PyQualifiedName qName=QualifiedNameFinder.findCanonicalImportPath(target,element);
  if (qName == null)   return;
  String path=qName.toString();
  if (target instanceof PsiFileSystemItem) {
    addImportStatement(file,path,null,priority);
  }
 else   if (useQualified) {
    addImportStatement(file,path,null,priority);
    final PyElementGenerator elementGenerator=PyElementGenerator.getInstance(file.getProject());
    element.replace(elementGenerator.createExpressionFromText(LanguageLevel.forElement(target),qName + "." + target.getName()));
  }
 else {
    addImportFrom(file,null,path,target.getName(),null,priority);
  }
}
