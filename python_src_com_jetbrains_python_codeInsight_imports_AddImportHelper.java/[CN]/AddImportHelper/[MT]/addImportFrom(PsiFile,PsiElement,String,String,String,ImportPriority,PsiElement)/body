{
  final List<PyFromImportStatement> existingImports=((PyFile)file).getFromImports();
  for (  PyFromImportStatement existingImport : existingImports) {
    if (target != null && existingImport.getTextRange().getStartOffset() > target.getTextRange().getStartOffset()) {
      continue;
    }
    if (existingImport.isStarImport()) {
      continue;
    }
    final QualifiedName qName=existingImport.getImportSourceQName();
    if (qName != null && qName.toString().equals(path)) {
      for (      PyImportElement el : existingImport.getImportElements()) {
        if (name.equals(el.getVisibleName())) {
          return false;
        }
      }
      final PyElementGenerator generator=PyElementGenerator.getInstance(file.getProject());
      final PyImportElement importElement=generator.createImportElement(LanguageLevel.forElement(file),name);
      existingImport.add(importElement);
      return true;
    }
  }
  addImportFromStatement(file,path,name,asName,priority,anchor);
  return true;
}
