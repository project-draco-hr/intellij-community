{
  final Map<FinishElementInstruction,BitSet> result=ContainerUtil.newHashMap();
  runDfa(false,new PairFunction<Instruction,BitSet,BitSet>(){
    @Override public BitSet fun(    Instruction instruction,    BitSet liveVars){
      if (instruction instanceof FinishElementInstruction) {
        BitSet set=result.get(instruction);
        if (set != null) {
          set.or(liveVars);
          return set;
        }
 else {
          result.put((FinishElementInstruction)instruction,liveVars);
        }
      }
      if (instruction instanceof PushInstruction) {
        DfaValue value=((PushInstruction)instruction).getValue();
        if (value instanceof DfaVariableValue) {
          if (((PushInstruction)instruction).isReferenceWrite()) {
            liveVars=(BitSet)liveVars.clone();
            liveVars.clear(value.getID());
            for (            DfaVariableValue var : myFactory.getVarFactory().getAllQualifiedBy((DfaVariableValue)value)) {
              liveVars.clear(var.getID());
            }
          }
 else           if (!liveVars.get(value.getID())) {
            liveVars=(BitSet)liveVars.clone();
            liveVars.set(value.getID());
          }
        }
      }
 else       if (instruction instanceof FlushVariableInstruction) {
        DfaVariableValue variable=((FlushVariableInstruction)instruction).getVariable();
        if (variable != null) {
          liveVars=(BitSet)liveVars.clone();
          liveVars.clear(variable.getID());
          for (          DfaVariableValue var : myFactory.getVarFactory().getAllQualifiedBy(variable)) {
            liveVars.clear(var.getID());
          }
        }
      }
      return liveVars;
    }
  }
);
  return result;
}
