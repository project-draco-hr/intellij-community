{
  final Map<FinishElementInstruction,BitSet> liveVars=findLiveVars();
  if (liveVars == null)   return;
  final MultiMap<FinishElementInstruction,DfaVariableValue> toFlush=MultiMap.createSet();
  boolean ok=runDfa(true,new PairFunction<Instruction,BitSet,BitSet>(){
    @Override @NotNull public BitSet fun(    Instruction instruction,    @NotNull BitSet prevLiveVars){
      if (instruction instanceof FinishElementInstruction) {
        BitSet currentlyLive=liveVars.get(instruction);
        if (currentlyLive == null) {
          return new BitSet();
        }
        int index=0;
        while (true) {
          int setBit=prevLiveVars.nextSetBit(index);
          if (setBit < 0)           break;
          if (!currentlyLive.get(setBit)) {
            toFlush.putValue((FinishElementInstruction)instruction,(DfaVariableValue)myFactory.getValue(setBit));
          }
          index=setBit + 1;
        }
        return currentlyLive;
      }
      return prevLiveVars;
    }
  }
);
  if (ok) {
    for (    FinishElementInstruction instruction : toFlush.keySet()) {
      instruction.getVarsToFlush().addAll(toFlush.get(instruction));
    }
  }
}
