{
  List<ModulePath> prevPaths=myModulePaths;
  readExternal(state);
  if (prevPaths != null) {
    ModifiableModuleModel model=getModifiableModel();
    Module[] existingModules=model.getModules();
    ModuleGroupInterner groupInterner=new ModuleGroupInterner();
    for (    Module existingModule : existingModules) {
      ModulePath correspondingPath=findCorrespondingPath(existingModule);
      if (correspondingPath == null) {
        model.disposeModule(existingModule);
      }
 else {
        myModulePaths.remove(correspondingPath);
        String groupStr=correspondingPath.getModuleGroup();
        String[] group=groupStr == null ? null : groupStr.split(MODULE_GROUP_SEPARATOR);
        if (!Arrays.equals(group,model.getModuleGroupPath(existingModule))) {
          groupInterner.setModuleGroupPath(model,existingModule,group);
        }
      }
    }
    loadModules((ModuleModelImpl)model);
    AccessToken token=WriteAction.start();
    try {
      model.commit();
    }
  finally {
      token.finish();
    }
  }
}
