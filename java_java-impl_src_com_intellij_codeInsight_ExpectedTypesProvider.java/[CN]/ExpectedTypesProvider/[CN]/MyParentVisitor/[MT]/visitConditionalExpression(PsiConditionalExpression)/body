{
  if (myExpr.equals(expr.getCondition())) {
    if (myForCompletion) {
      myExpr=expr;
      myExpr.getParent().accept(this);
      return;
    }
    myResult.add(createInfoImpl(PsiType.BOOLEAN,ExpectedTypeInfo.TYPE_STRICTLY,PsiType.BOOLEAN,TailType.NONE));
  }
 else   if (myExpr.equals(expr.getThenExpression())) {
    ExpectedTypeInfo[] types=getExpectedTypes(expr,myForCompletion);
    for (int i=0; i < types.length; i++) {
      final ExpectedTypeInfo info=types[i];
      types[i]=createInfoImpl(info.getType(),info.getKind(),info.getDefaultType(),TailType.COND_EXPR_COLON,info.getCalledMethod(),new NullableComputable<String>(){
        @Nullable @Override public String compute(){
          return ((ExpectedTypeInfoImpl)info).getExpectedName();
        }
      }
);
    }
    Collections.addAll(myResult,types);
  }
 else {
    if (!myExpr.equals(expr.getElseExpression())) {
      LOG.error(Arrays.asList(expr.getChildren()) + "; " + myExpr);
    }
    Collections.addAll(myResult,getExpectedTypes(expr,myForCompletion));
  }
}
