{
  if (myForCompletion) {
    final MyParentVisitor visitor=new MyParentVisitor(expression,myForCompletion,myClassProvider,myVoidable,myUsedAfter);
    expression.getParent().accept(visitor);
    myResult.addAll(visitor.myResult);
    return;
  }
  String referenceName=expression.getReferenceName();
  if (referenceName != null) {
    final PsiElement parent=expression.getParent();
    if (parent instanceof PsiMethodCallExpression) {
      Collections.addAll(myResult,findClassesWithDeclaredMethod((PsiMethodCallExpression)parent,false));
    }
 else     if (parent instanceof PsiReferenceExpression || parent instanceof PsiVariable || parent instanceof PsiExpression) {
      if (LENGTH_SYNTHETIC_ARRAY_FIELD.equals(referenceName)) {
        myResult.addAll(anyArrayType());
      }
 else {
        Collections.addAll(myResult,findClassesWithDeclaredField(expression));
      }
    }
  }
}
