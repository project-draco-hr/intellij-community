{
  toolWindow.setIcon(InteractiveLearningIcons.CourseProgress);
  JPanel contentPanel=new JPanel();
  StudyTaskManager taskManager=StudyTaskManager.getInstance(project);
  if (taskManager.getCourse() != null) {
    contentPanel.setLayout(new BoxLayout(contentPanel,BoxLayout.PAGE_AXIS));
    contentPanel.add(Box.createRigidArea(new Dimension(10,0)));
    Course course=taskManager.getCourse();
    if (course == null) {
      return;
    }
    int taskNum=0;
    int taskSolved=0;
    List<Lesson> lessons=course.getLessons();
    for (    Lesson lesson : lessons) {
      if (lesson.getName().equals(EduNames.PYCHARM_ADDITIONAL))       continue;
      taskNum+=lesson.getTaskList().size();
      taskSolved+=getSolvedTasks(lesson,taskManager);
    }
    String completedTasks=String.format("%d of %d tasks completed",taskSolved,taskNum);
    double percent=(taskSolved * 100.0) / taskNum;
    contentPanel.add(Box.createRigidArea(new Dimension(0,10)));
    StudyProgressBar studyProgressBar=new StudyProgressBar(percent / 100,40,10);
    contentPanel.add(studyProgressBar);
    contentPanel.add(Box.createRigidArea(new Dimension(0,10)));
    addStatistics(completedTasks,contentPanel);
    contentPanel.setPreferredSize(new Dimension(100,50));
    ContentFactory contentFactory=ContentFactory.SERVICE.getInstance();
    Content content=contentFactory.createContent(contentPanel,"",false);
    contentPanel.setMinimumSize(new Dimension(300,100));
    toolWindow.getContentManager().addContent(content);
  }
}
