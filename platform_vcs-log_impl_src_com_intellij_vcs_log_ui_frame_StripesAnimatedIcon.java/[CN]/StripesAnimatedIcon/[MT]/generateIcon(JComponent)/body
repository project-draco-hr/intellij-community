{
  List<Icon> result=ContainerUtil.newArrayList();
  if (UIUtil.isUnderAquaBasedLookAndFeel() && !UIUtil.isUnderDarcula()) {
    for (int i=0; i < 2 * GradientIcon.GRADIENT_WIDTH; i+=JBUI.scale(TRANSLATE)) {
      result.add(new GradientIcon(component,i));
    }
  }
 else {
    for (int i=0; i < STRIPES.getIconWidth(); i+=JBUI.scale(TRANSLATE)) {
      result.add(new StripesAnimatedIcon(component,i,STRIPES));
    }
  }
  AsyncProcessIcon icon=new AsyncProcessIcon("ProgressWithStripes",result.toArray(new Icon[result.size()]),result.get(0)){
    @Override public Dimension getPreferredSize(){
      return new Dimension(component.getWidth(),result.get(0).getIconHeight());
    }
  }
;
  component.addComponentListener(new ComponentAdapter(){
    @Override public void componentResized(    ComponentEvent e){
      super.componentResized(e);
      icon.revalidate();
    }
  }
);
  return icon;
}
