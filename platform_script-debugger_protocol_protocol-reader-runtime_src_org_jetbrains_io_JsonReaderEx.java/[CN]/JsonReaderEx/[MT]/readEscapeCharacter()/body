{
  if (position == limit) {
    throw createParseError("Unterminated escape sequence");
  }
  char escaped=in.charAt(position++);
switch (escaped) {
case 'u':
    if (position + 4 > limit) {
      throw createParseError("Unterminated escape sequence");
    }
  char result=0;
for (int i=position, end=i + 4; i < end; i++) {
  char c=in.charAt(i);
  result<<=4;
  if (c >= '0' && c <= '9') {
    result+=(c - '0');
  }
 else   if (c >= 'a' && c <= 'f') {
    result+=(c - 'a' + 10);
  }
 else   if (c >= 'A' && c <= 'F') {
    result+=(c - 'A' + 10);
  }
 else {
    throw new NumberFormatException("\\u" + in.subSequence(position,position + 4));
  }
}
position+=4;
return result;
case 't':
return '\t';
case 'b':
return '\b';
case 'n':
return '\n';
case 'r':
return '\r';
case 'f':
return '\f';
case '\n':
case '\'':
case '"':
case '\\':
default :
return escaped;
}
}
