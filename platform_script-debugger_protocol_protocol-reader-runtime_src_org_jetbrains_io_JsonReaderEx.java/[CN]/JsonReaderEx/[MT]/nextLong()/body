{
  int p=peeked;
  if (p == PEEKED_NONE) {
    p=doPeek();
  }
  if (p == PEEKED_LONG) {
    peeked=PEEKED_NONE;
    return peekedLong;
  }
  if (p == PEEKED_NUMBER) {
    int end=position + peekedNumberLength;
    peekedString=in.subSequence(position,end).toString();
    position=end;
  }
 else   if (p == PEEKED_SINGLE_QUOTED || p == PEEKED_DOUBLE_QUOTED) {
    peekedString=nextQuotedValue(p == PEEKED_SINGLE_QUOTED ? '\'' : '"');
    try {
      long result=Long.parseLong(peekedString);
      peeked=PEEKED_NONE;
      return result;
    }
 catch (    NumberFormatException ignored) {
    }
  }
 else {
    throw createParseError("Expected a long but was " + peek());
  }
  peeked=PEEKED_BUFFERED;
  double asDouble=Double.parseDouble(peekedString);
  long result=(long)asDouble;
  if (result != asDouble) {
    throw new NumberFormatException("Expected a long but was " + peekedString + " at line "+ getLineNumber()+ " column "+ getColumnNumber());
  }
  peekedString=null;
  peeked=PEEKED_NONE;
  return result;
}
