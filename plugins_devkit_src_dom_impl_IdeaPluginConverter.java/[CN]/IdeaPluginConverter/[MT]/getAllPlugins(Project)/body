{
  if (DumbService.isDumb(project))   return Collections.emptyList();
  return CachedValuesManager.getManager(project).getCachedValue(project,new CachedValueProvider<Collection<IdeaPlugin>>(){
    @Nullable @Override public Result<Collection<IdeaPlugin>> compute(){
      GlobalSearchScope scope=GlobalSearchScopesCore.projectProductionScope(project).union(ProjectScope.getLibrariesScope(project));
      List<DomFileElement<IdeaPlugin>> files=DomService.getInstance().getFileElements(IdeaPlugin.class,project,scope);
      final Collection<IdeaPlugin> pluginList=ContainerUtil.map(files,new Function<DomFileElement<IdeaPlugin>,IdeaPlugin>(){
        public IdeaPlugin fun(        DomFileElement<IdeaPlugin> ideaPluginDomFileElement){
          return ideaPluginDomFileElement.getRootElement();
        }
      }
);
      return Result.create(pluginList,PsiModificationTracker.OUT_OF_CODE_BLOCK_MODIFICATION_COUNT);
    }
  }
);
}
