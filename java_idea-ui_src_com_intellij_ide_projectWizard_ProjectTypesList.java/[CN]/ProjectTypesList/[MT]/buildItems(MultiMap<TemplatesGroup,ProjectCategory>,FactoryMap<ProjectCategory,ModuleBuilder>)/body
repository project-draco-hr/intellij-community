{
  List<TemplateItem> items=new ArrayList<TemplateItem>();
  List<TemplatesGroup> groups=new ArrayList<TemplatesGroup>(map.keySet());
  final Map<ModuleType,Integer> moduleTypeMap=new HashMap<ModuleType,Integer>();
  for (  ProjectCategory category : map.values()) {
    ModuleType type=builders.get(category).getModuleType();
    Integer integer=moduleTypeMap.get(type);
    moduleTypeMap.put(type,integer == null ? 0 : integer + 1);
  }
  Collections.sort(groups,new Comparator<TemplatesGroup>(){
    @Override public int compare(    TemplatesGroup o1,    TemplatesGroup o2){
      int weight=Comparing.compare(o1.getName().equals(ProjectTemplatesFactory.OTHER_GROUP),o2.getName().equals(ProjectTemplatesFactory.OTHER_GROUP));
      if (weight != 0)       return weight;
      int byModuleType=getModuleTypePopularity(o2,map,builders,moduleTypeMap) - getModuleTypePopularity(o1,map,builders,moduleTypeMap);
      if (byModuleType != 0)       return byModuleType;
      int i=map.get(o2).size() - map.get(o1).size();
      return i == 0 ? o1.compareTo(o2) : i;
    }
  }
);
  for (  TemplatesGroup group : groups) {
    for (    ProjectCategory template : map.get(group)) {
      TemplateItem templateItem=new TemplateItem(template,group.getName());
      items.add(templateItem);
    }
  }
  return items;
}
