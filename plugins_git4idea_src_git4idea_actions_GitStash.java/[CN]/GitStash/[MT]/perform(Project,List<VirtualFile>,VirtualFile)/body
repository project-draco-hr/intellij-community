{
  final ChangeListManager changeListManager=ChangeListManager.getInstance(project);
  if (changeListManager.isFreezedWithNotification("Can not stash changes now"))   return;
  GitStashDialog d=new GitStashDialog(project,gitRoots,defaultRoot);
  if (!d.showAndGet()) {
    return;
  }
  VirtualFile root=d.getGitRoot();
  final GitLineHandler h=d.handler();
  AccessToken token=DvcsUtil.workingTreeChangeStarted(project);
  try {
    GitHandlerUtil.doSynchronously(h,GitBundle.getString("stashing.title"),h.printableCommandLine());
  }
  finally {
    DvcsUtil.workingTreeChangeFinished(project,token);
  }
  VfsUtil.markDirtyAndRefresh(false,true,false,root);
  if (!h.errors().isEmpty()) {
    showErrors(project,getActionName(),h.errors());
  }
}
