{
  if (psiClass.isInterface() || psiClass.isEnum() || !psiClass.hasModifierProperty(PsiModifier.PUBLIC)|| psiClass.hasModifierProperty(PsiModifier.STATIC)|| psiClass.hasModifierProperty(PsiModifier.ABSTRACT)|| psiClass.getContainingClass() != null) {
    return ProblemDescriptor.EMPTY_ARRAY;
  }
  if (!InheritanceUtil.isInheritor(psiClass,true,StubBasedPsiElementBase.class.getName())) {
    return ProblemDescriptor.EMPTY_ARRAY;
  }
  PsiMethod myParentTemplate=createGetParentTemplateMethod(psiClass);
  final PsiMethod overriddenGetParentMethod=psiClass.findMethodBySignature(myParentTemplate,true);
  if (overriddenGetParentMethod != null && overriddenGetParentMethod.getContainingClass() != null && !StubBasedPsiElementBase.class.getName().equals(overriddenGetParentMethod.getContainingClass().getQualifiedName())) {
    return ProblemDescriptor.EMPTY_ARRAY;
  }
  final ProblemDescriptor descriptor=manager.createProblemDescriptor(ObjectUtils.assertNotNull(psiClass.getNameIdentifier()),"Default getParent() implementation is slow",new InsertGetParentByStubOverrideQuickFix(psiClass),ProblemHighlightType.GENERIC_ERROR_OR_WARNING,isOnTheFly);
  return new ProblemDescriptor[]{descriptor};
}
