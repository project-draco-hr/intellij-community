{
  super.visitMethodCallExpression(expression);
  final AssertHint assertHint=AssertHint.createAssertEqualsHint(expression);
  if (assertHint == null) {
    return;
  }
  final PsiExpressionList argumentList=expression.getArgumentList();
  final PsiExpression[] arguments=argumentList.getExpressions();
  if (arguments.length != 3 && arguments.length != 2) {
    return;
  }
  final int argIndex=assertHint.getArgIndex();
  final PsiExpression argument1=arguments[argIndex];
  if (!couldBeAssertSameArgument(argument1)) {
    return;
  }
  final PsiExpression argument2=arguments[argIndex + 1];
  if (!couldBeAssertSameArgument(argument2)) {
    return;
  }
  registerMethodCallError(expression);
}
