{
  Direction direction=key.direction;
  Method method=key.method;
  Type ownerType=Type.getObjectType(method.internalClassName);
  Type[] argTypes=Type.getArgumentTypes(method.methodDesc);
  Type returnType=Type.getReturnType(method.methodDesc);
  int arity=argTypes.length;
  int[] compoundKey=new int[9 + arity * 2];
  compoundKey[0]=direction.directionId();
  compoundKey[1]=direction.paramId();
  compoundKey[2]=direction.valueId();
  writeType(compoundKey,3,ownerType);
  writeType(compoundKey,5,returnType);
  compoundKey[7]=myNamesEnumerator.enumerate(method.methodName);
  compoundKey[8]=argTypes.length;
  for (int i=0; i < argTypes.length; i++) {
    writeType(compoundKey,9 + 2 * i,argTypes[i]);
  }
  return compoundKey;
}
