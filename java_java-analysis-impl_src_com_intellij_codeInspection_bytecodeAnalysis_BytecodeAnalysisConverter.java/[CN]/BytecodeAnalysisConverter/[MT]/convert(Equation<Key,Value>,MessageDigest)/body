{
  ProgressManager.checkCanceled();
  Result<Key,Value> rhs=equation.rhs;
  HResult hResult;
  if (rhs instanceof Final) {
    hResult=new HFinal(((Final<Key,Value>)rhs).value);
  }
 else {
    Pending<Key,Value> pending=(Pending<Key,Value>)rhs;
    Set<Product<Key,Value>> sumOrigin=pending.sum;
    HComponent[] components=new HComponent[sumOrigin.size()];
    int componentI=0;
    for (    Product<Key,Value> prod : sumOrigin) {
      HKey[] intProd=new HKey[prod.ids.size()];
      int idI=0;
      for (      Key key : prod.ids) {
        intProd[idI]=asmKey(key,md);
        idI++;
      }
      HComponent intIdComponent=new HComponent(prod.value,intProd);
      components[componentI]=intIdComponent;
      componentI++;
    }
    hResult=new HPending(components);
  }
  return new DirectionResultPair(mkDirectionKey(equation.id.direction),hResult);
}
