{
  List<String> clauses=new ArrayList<String>();
  HashSet<HKey> notNulls=methodAnnotations.notNulls;
  HashMap<HKey,String> contracts=methodAnnotations.contracts;
  for (  Map.Entry<HKey,Value> entry : solution.entrySet()) {
    HKey key=entry.getKey().mkStable();
    Value value=entry.getValue();
    if (value == Value.Top || value == Value.Bot) {
      continue;
    }
    Direction direction=extractDirection(key.dirKey);
    if (value == Value.NotNull && direction == Out && methodKey.equals(key)) {
      notNulls.add(key);
    }
 else     if (direction instanceof InOut) {
      HKey baseKey=key.mkBase();
      if (methodKey.equals(baseKey)) {
        clauses.add(contractElement(arity,(InOut)direction,value));
      }
    }
  }
  if (!notNulls.contains(methodKey) && !clauses.isEmpty()) {
    Collections.sort(clauses);
    StringBuilder sb=new StringBuilder("\"");
    StringUtil.join(clauses,";",sb);
    sb.append('"');
    contracts.put(methodKey,sb.toString().intern());
  }
}
