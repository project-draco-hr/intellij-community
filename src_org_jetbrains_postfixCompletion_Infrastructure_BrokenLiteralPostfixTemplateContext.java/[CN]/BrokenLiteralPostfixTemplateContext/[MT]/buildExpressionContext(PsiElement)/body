{
  if (expression == myBrokenLiteral) {
    return new PrefixExpressionContext(this,expression){
      @Nullable @Override protected PsiType calculateExpressionType(      @NotNull PsiElement expression){
        return PsiType.INT;
      }
    }
;
  }
  if (expression instanceof PsiExpression) {
    PsiElement[] children=expression.getChildren();
    int literalIndex=Arrays.asList(children).indexOf(myBrokenLiteral);
    if (literalIndex >= 0) {
      PsiExpression expressionCopy=(PsiExpression)expression.copy();
      PsiLiteralExpression brokenCopy=(PsiLiteralExpression)expressionCopy.getChildren()[literalIndex];
      PsiElementFactory factory=JavaPsiFacade.getElementFactory(postfixReference.getProject());
      PsiLiteralExpression normalLiteral=(PsiLiteralExpression)factory.createExpressionFromText("1",postfixReference);
      brokenCopy.replace(normalLiteral);
      final PsiType fixedType=expressionCopy.getType();
      if (fixedType != null) {
        return new PrefixExpressionContext(this,expression){
          @Nullable @Override protected PsiType calculateExpressionType(          @NotNull PsiElement expression){
            return fixedType;
          }
        }
;
      }
    }
  }
  return super.buildExpressionContext(expression);
}
