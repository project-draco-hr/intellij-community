{
  final RangeHighlighterEx highlighter;
  int line=getLine();
  if (line >= 0) {
    highlighter=markup.addPersistentLineHighlighter(line,HighlighterLayer.ERROR + 1,null);
    if (highlighter != null) {
      highlighter.setGutterIconRenderer(new MyGutterIconRenderer(this));
      TextAttributes textAttributes=EditorColorsManager.getInstance().getGlobalScheme().getAttributes(CodeInsightColors.BOOKMARKS_ATTRIBUTES);
      Color stripeColor=textAttributes.getErrorStripeColor();
      highlighter.setErrorStripeMarkColor(stripeColor != null ? stripeColor : Color.black);
      highlighter.setErrorStripeTooltip(getBookmarkTooltip());
      TextAttributes attributes=highlighter.getTextAttributes();
      if (attributes == null) {
        attributes=new TextAttributes();
      }
      attributes.setBackgroundColor(textAttributes.getBackgroundColor());
      attributes.setForegroundColor(textAttributes.getForegroundColor());
      highlighter.setTextAttributes(attributes);
    }
  }
 else {
    highlighter=null;
  }
  if (myHighlighterRefs == null)   myHighlighterRefs=new WeakHashMap<>();
  if (highlighter != null) {
    myHighlighterRefs.put(markup.getDocument(),new WeakReference<RangeHighlighterEx>(highlighter));
  }
  return highlighter;
}
