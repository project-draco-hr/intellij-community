{
  final Document document=getDocument();
  if (document == null)   return null;
  MarkupModelEx markup=(MarkupModelEx)DocumentMarkupModel.forDocument(document,myProject,true);
  final Document markupDocument=markup.getDocument();
  final int startOffset=0;
  final int endOffset=markupDocument.getTextLength();
  final Ref<RangeHighlighterEx> found=new Ref<RangeHighlighterEx>();
  markup.processRangeHighlightersOverlappingWith(startOffset,endOffset,new Processor<RangeHighlighterEx>(){
    @Override public boolean process(    RangeHighlighterEx highlighter){
      GutterMark renderer=highlighter.getGutterIconRenderer();
      if (renderer instanceof MyGutterIconRenderer && ((MyGutterIconRenderer)renderer).myBookmark == Bookmark.this) {
        found.set(highlighter);
        return false;
      }
      return true;
    }
  }
);
  return found.get();
}
