{
  if (cls != null && item_name != null) {
    PyFunction init=cls.findMethodByName(PyNames.INIT,false);
    Language language=cls.getLanguage();
    if (language instanceof PythonLanguage) {
      if (init != null) {
        return appendToInit(init,callback);
      }
 else {
        for (        PyClass ancestor : cls.iterateAncestors()) {
          init=ancestor.findMethodByName(PyNames.INIT,false);
          if (init != null)           break;
        }
        PyFunction new_init=createInitMethod(project,cls,init);
        appendToInit(new_init,callback);
        PsiElement add_anchor=null;
        PyFunction[] meths=cls.getMethods();
        if (meths.length > 0)         add_anchor=meths[0].getPrevSibling();
        PyStatementList cls_content=cls.getStatementList();
        new_init=(PyFunction)cls_content.addAfter(new_init,add_anchor);
        PyUtil.showBalloon(project,PyBundle.message("QFIX.added.constructor.$0.for.field.$1",cls.getName(),item_name),MessageType.INFO);
        return new_init.getStatementList().getStatements()[0];
      }
    }
  }
  return null;
}
