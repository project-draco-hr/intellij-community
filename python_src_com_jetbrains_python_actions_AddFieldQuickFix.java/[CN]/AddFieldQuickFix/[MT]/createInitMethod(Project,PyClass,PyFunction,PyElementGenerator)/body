{
  PyUtil.ensureWritable(cls);
  String paramList=ancestorInit != null ? ancestorInit.getParameterList().getText() : "(self)";
  PyFunction new_init=generator.createFromText(project,PyFunction.class,"def " + PyNames.INIT + paramList+ ":\n",new int[]{0});
  if (cls.isNewStyleClass() && ancestorInit != null) {
    StringBuffer sb=new StringBuffer("super(");
    sb.append(cls.getName());
    PyParameter[] params=ancestorInit.getParameterList().getParameters();
    String self_name=params[0].getName();
    sb.append(", ").append(self_name).append(").").append(PyNames.INIT).append("(");
    boolean seen=false;
    for (int i=1; i < params.length; i+=1) {
      if (seen)       sb.append(", ");
 else       seen=true;
      sb.append(params[i].getText());
    }
    sb.append(")");
    PyStatement new_stmt=generator.createFromText(project,PyStatement.class,sb.toString());
    new_init.getStatementList().add(new_stmt);
  }
  return new_init;
}
