{
  int i=1;
  PyType rtype;
  do {
    final String overloadedQName=String.format("%s.%d",qname,i);
    rtype=getReturnTypeByQName(overloadedQName,anchor);
    if (rtype != null) {
      boolean matched=true;
      boolean notNullParameterMatch=false;
      for (      Map.Entry<PyExpression,PyNamedParameter> entry : arguments.entrySet()) {
        final PyNamedParameter p=entry.getValue();
        final String name=p.getName();
        if (p.isPositionalContainer() || p.isKeywordContainer() || name == null) {
          continue;
        }
        PyType argType=entry.getKey().getType(context);
        final PyExpression modeExpr=entry.getKey();
        argType=getOpenFunctionType(argType,qname,name,modeExpr,anchor);
        final PyType paramType=getParameterTypeByQName(overloadedQName,name,anchor);
        if (PyTypeChecker.match(paramType,argType,context)) {
          if (argType != null && paramType != null) {
            notNullParameterMatch=true;
          }
        }
 else {
          matched=false;
        }
      }
      if (matched && notNullParameterMatch) {
        return rtype;
      }
    }
    i++;
  }
 while (rtype != null);
  return null;
}
