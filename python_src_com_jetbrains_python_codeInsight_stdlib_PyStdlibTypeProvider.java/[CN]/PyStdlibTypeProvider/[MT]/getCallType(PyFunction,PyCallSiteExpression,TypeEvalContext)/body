{
  final String qname=getQualifiedName(function,callSite);
  if (qname != null) {
    if (OPEN_FUNCTIONS.contains(qname) && callSite != null) {
      final PyTypeChecker.AnalyzeCallResults results=PyTypeChecker.analyzeCallSite(callSite,context);
      if (results != null) {
        final PyType type=getOpenFunctionType(qname,results.getArguments(),callSite);
        if (type != null) {
          return type;
        }
      }
    }
 else     if ("__builtin__.tuple.__add__".equals(qname) && callSite instanceof PyBinaryExpression) {
      return getTupleConcatenationResultType((PyBinaryExpression)callSite,context);
    }
 else     if ("__builtin__.tuple.__mul__".equals(qname) && callSite instanceof PyBinaryExpression) {
      return getTupleMultiplicationResultType((PyBinaryExpression)callSite,context);
    }
  }
  return null;
}
