{
  if (addition.getRightExpression() != null) {
    final PyTupleType leftTupleType=as(context.getType(addition.getLeftExpression()),PyTupleType.class);
    final PyTupleType rightTupleType=as(context.getType(addition.getRightExpression()),PyTupleType.class);
    if (leftTupleType != null && rightTupleType != null) {
      if (leftTupleType.isHomogeneous() || rightTupleType.isHomogeneous()) {
        return null;
      }
      final List<PyType> newElementTypes=ContainerUtil.concat(leftTupleType.getElementTypes(context),rightTupleType.getElementTypes(context));
      return Ref.create(PyTupleType.create(addition,newElementTypes));
    }
  }
  return null;
}
