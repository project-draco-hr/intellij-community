{
  if (referenceTarget instanceof PyTargetExpression) {
    final PyTargetExpression target=(PyTargetExpression)referenceTarget;
    final ScopeOwner owner=ScopeUtil.getScopeOwner(target);
    if (owner instanceof PyClass) {
      final PyClass cls=(PyClass)owner;
      final List<PyClassLikeType> types=cls.getAncestorTypes(context);
      for (      PyClassLikeType type : types) {
        if ("enum.Enum".equals(type.getClassQName())) {
          final PyType classType=context.getType(cls);
          if (classType instanceof PyClassType) {
            return ((PyClassType)classType).toInstance();
          }
        }
      }
    }
  }
  return null;
}
