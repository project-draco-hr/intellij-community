{
  int i=1;
  PyType rtype;
  do {
    final String overloadedQName=String.format("%s.%d",qname,i);
    rtype=getReturnTypeByQName(overloadedQName,anchor);
    if (rtype != null) {
      final PyArgumentList args=expr.getArgumentList();
      if (args != null) {
        final CallArgumentsMapping res=args.analyzeCall(PyResolveContext.noImplicits().withTypeEvalContext(context));
        final Map<PyExpression,PyNamedParameter> mapped=res.getPlainMappedParams();
        boolean matched=true;
        for (        Map.Entry<PyExpression,PyNamedParameter> entry : mapped.entrySet()) {
          final PyNamedParameter p=entry.getValue();
          final String name=p.getName();
          if (p.isPositionalContainer() || p.isKeywordContainer() || name == null) {
            continue;
          }
          final PyType argType=entry.getKey().getType(context);
          final PyType paramType=getParameterTypeByQName(overloadedQName,name,anchor);
          if (!PyTypeChecker.match(paramType,argType,context)) {
            matched=false;
          }
        }
        if (matched) {
          return rtype;
        }
      }
    }
    i++;
  }
 while (rtype != null);
  return null;
}
