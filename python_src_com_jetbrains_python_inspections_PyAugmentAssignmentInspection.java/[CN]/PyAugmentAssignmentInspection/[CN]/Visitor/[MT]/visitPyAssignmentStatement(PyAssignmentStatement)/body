{
  if (node.getAssignedValue() instanceof PyBinaryExpression) {
    PyExpression target=node.getLeftHandSideExpression();
    PyBinaryExpression expression=(PyBinaryExpression)node.getAssignedValue();
    PyExpression leftExpression=expression.getLeftExpression();
    PyExpression rightExpression=expression.getRightExpression();
    if (rightExpression.getText().equals(target.getText())) {
      PyExpression tmp=rightExpression;
      rightExpression=leftExpression;
      leftExpression=tmp;
    }
    if (PyTokenTypes.ADDITIVE_OPERATIONS.contains(expression.getOperator()) || PyTokenTypes.MULTIPLICATIVE_OPERATIONS.contains(expression.getOperator())) {
      if (leftExpression != null && (leftExpression instanceof PyReferenceExpression || leftExpression instanceof PySubscriptionExpression)) {
        if (leftExpression.getText().equals(target.getText())) {
          if (rightExpression instanceof PyNumericLiteralExpression) {
            PyElementType op=expression.getOperator();
            if (op == PyTokenTypes.PLUS || op == PyTokenTypes.MINUS || op == PyTokenTypes.MULT || op == PyTokenTypes.DIV) {
              AugmentedAssignmentQuickFix quickFix=new AugmentedAssignmentQuickFix();
              registerProblem(node,"Assignment can be replaced with augmented assignment",quickFix);
            }
          }
 else {
            PyType type=rightExpression.getType(myTypeEvalContext);
            if (type != null) {
              if (type.getName().equals("int") || type.getName().equals("str"))               registerProblem(node,"Assignment can be replaced with augmented assignment",new AugmentedAssignmentQuickFix());
            }
          }
        }
      }
    }
  }
}
