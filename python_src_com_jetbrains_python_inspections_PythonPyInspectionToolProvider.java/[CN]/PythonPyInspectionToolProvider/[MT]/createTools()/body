{
  myRegistrar.registerInspectionToolProvider(new Function<String,InspectionTool>(){
    @Nullable public InspectionTool fun(    String shortName){
      final LocalInspectionTool tool=myShortNames.contains(shortName) ? createLocalInspectionTool(shortName) : null;
      return tool != null ? new LocalInspectionToolWrapper(tool) : null;
    }
  }
);
  myManager.execScriptFromResource("inspections/inspections.py");
  final PyList pyList=(PyList)myManager.eval("getAllInspections()");
  int len=pyList.__len__();
  final InspectionProfileEntry[] profileEntries=new InspectionProfileEntry[len];
  for (int i=0; i < len; i++) {
    final String inspectionToolName=pyList.__getitem__(i).toString();
    profileEntries[i]=createLocalInspectionTool(inspectionToolName);
    myShortNames.add(inspectionToolName);
  }
  return profileEntries;
}
