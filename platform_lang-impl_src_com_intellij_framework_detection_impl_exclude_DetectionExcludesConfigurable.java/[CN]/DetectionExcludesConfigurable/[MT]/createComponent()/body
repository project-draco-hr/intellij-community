{
  myEnabledDetectionCheckBox=new JCheckBox("Enable framework detection");
  final JBList excludesList=new JBList(myModel);
  excludesList.setCellRenderer(new ColoredListCellRenderer(){
    @Override protected void customizeCellRenderer(    JList list,    Object value,    int index,    boolean selected,    boolean hasFocus){
      if (value instanceof ExcludeListItem) {
        ((ExcludeListItem)value).renderItem(this);
      }
    }
  }
);
  final ToolbarDecorator decorator=ToolbarDecorator.createDecorator(excludesList).disableUpAction().disableDownAction().setAddAction(new AnActionButtonRunnable(){
    @Override public void run(    AnActionButton button){
      doAddAction(button);
    }
  }
);
  myMainPanel=new JPanel(new BorderLayout(0,5));
  myMainPanel.add(myEnabledDetectionCheckBox,BorderLayout.NORTH);
  final LabeledComponent<JPanel> excludesComponent=LabeledComponent.create(decorator.createPanel(),"Exclude from detection:");
  myMainPanel.add(excludesComponent);
  myEnabledDetectionCheckBox.addActionListener(new ActionListener(){
    @Override public void actionPerformed(    ActionEvent e){
      GuiUtils.enableChildren(myEnabledDetectionCheckBox.isSelected(),excludesComponent);
    }
  }
);
  myEnabledDetectionCheckBox.setSelected(true);
  return myMainPanel;
}
