{
  final List<SvnBranchItem> result=new LinkedList<SvnBranchItem>();
  final SvnConfiguration configuration=SvnConfiguration.getInstance(project);
  final SvnVcs vcs=SvnVcs.getInstance(project);
  final ISVNAuthenticationManager passiveManager=passive ? configuration.getPassiveAuthenticationManager(project) : configuration.getInteractiveManager(vcs);
  final SVNURL branchesUrl=SVNURL.parseURIEncoded(url);
  final SVNLogClient logClient=vcs.createLogClient(passiveManager);
  logClient.doList(branchesUrl,SVNRevision.UNDEFINED,SVNRevision.HEAD,false,SVNDepth.IMMEDIATES,SVNDirEntry.DIRENT_ALL,new ISVNDirEntryHandler(){
    public void handleDirEntry(    final SVNDirEntry dirEntry) throws SVNException {
      final SVNURL currentUrl=dirEntry.getURL();
      if (!branchesUrl.equals(currentUrl)) {
        final String url=currentUrl.toString();
        if (dirEntry.getDate() != null) {
          result.add(new SvnBranchItem(url,dirEntry.getDate(),dirEntry.getRevision()));
        }
      }
    }
  }
);
  Collections.sort(result);
  return result;
}
