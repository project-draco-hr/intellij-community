{
  final File lengthFile=getLengthFile();
  DataOutputStream stream=null;
  try {
    stream=FileUtilRt.doIOOperation(new FileUtilRt.RepeatableIOOperation<DataOutputStream,IOException>(){
      @Nullable @Override public DataOutputStream execute(      boolean lastAttempt) throws IOException {
        try {
          return new DataOutputStream(new FileOutputStream(lengthFile));
        }
 catch (        FileNotFoundException ex) {
          if (!lengthFile.getParentFile().exists()) {
            throw new IOException("Parent file doesn't exist:" + lengthFile);
          }
          if (!lastAttempt)           return null;
          throw ex;
        }
      }
    }
);
    if (stream != null)     stream.writeLong(len);
  }
 catch (  IOException e) {
    LOG.error(e);
  }
 finally {
    if (stream != null) {
      try {
        stream.close();
      }
 catch (      IOException e) {
        LOG.error(e);
      }
    }
  }
}
