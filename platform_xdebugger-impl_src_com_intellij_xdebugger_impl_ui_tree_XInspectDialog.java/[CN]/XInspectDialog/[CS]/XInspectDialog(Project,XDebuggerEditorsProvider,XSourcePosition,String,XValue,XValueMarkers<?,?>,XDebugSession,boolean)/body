{
  super(project,false);
  myRebuildOnSessionEvents=rebuildOnSessionEvents;
  setTitle(XDebuggerBundle.message("inspect.value.dialog.title",name));
  setModal(false);
  XInstanceEvaluator instanceEvaluator=value.getInstanceEvaluator();
  if (instanceEvaluator != null && myRebuildOnSessionEvents) {
    Pair<XInstanceEvaluator,String> initialItem=Pair.create(instanceEvaluator,name);
    XDebuggerInstanceTreeCreator creator=new XDebuggerInstanceTreeCreator(project,editorsProvider,sourcePosition,markers,session);
    myDebuggerTreePanel=new DebuggerTreeWithHistoryPanel<Pair<XInstanceEvaluator,String>>(initialItem,creator,project,myDisposable);
  }
 else {
    Pair<XValue,String> initialItem=Pair.create(value,name);
    XDebuggerTreeCreator creator=new XDebuggerTreeCreator(project,editorsProvider,sourcePosition,markers);
    myDebuggerTreePanel=new DebuggerTreeWithHistoryPanel<Pair<XValue,String>>(initialItem,creator,project,myDisposable);
  }
  session.addSessionListener(new XDebugSessionAdapter(){
    @Override public void sessionPaused(){
      if (myRebuildOnSessionEvents) {
        myDebuggerTreePanel.rebuild();
      }
    }
    @Override public void sessionStopped(){
      DebuggerUIUtil.invokeLater(new Runnable(){
        @Override public void run(){
          close(OK_EXIT_CODE);
        }
      }
);
    }
  }
,myDisposable);
  init();
}
