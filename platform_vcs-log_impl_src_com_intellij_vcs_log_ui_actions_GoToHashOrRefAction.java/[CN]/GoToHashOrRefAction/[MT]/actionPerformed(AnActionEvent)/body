{
  Project project=e.getRequiredData(CommonDataKeys.PROJECT);
  final VcsLog log=e.getRequiredData(VcsLogDataKeys.VCS_LOG);
  final VcsLogUiImpl logUi=(VcsLogUiImpl)e.getRequiredData(VcsLogDataKeys.VCS_LOG_UI);
  Set<VirtualFile> visibleRoots=VcsLogUtil.getVisibleRoots(logUi);
  Collection<VcsRef> visibleBranches=VcsLogUtil.getVisibleBranches(log,visibleRoots);
  GoToHashOrRefPopup popup=new GoToHashOrRefPopup(project,visibleBranches,visibleRoots,new Function<String,Future>(){
    @Override public Future fun(    String text){
      return log.jumpToReference(text);
    }
  }
,new Function<VcsRef,Future>(){
    @Override public Future fun(    VcsRef vcsRef){
      return logUi.jumpToCommit(vcsRef.getCommitHash(),vcsRef.getRoot());
    }
  }
,logUi.getColorManager(),new VcsRefComparator(logUi.getDataPack().getLogProviders()));
  popup.show(logUi.getTable());
}
