{
  if (sequence.getStats().size() <= 1) {
    return;
  }
  mergeFlatStatements(sequence);
  for (; ; ) {
    boolean found=false;
    for (    Statement st : sequence.getStats()) {
      if (st.getExprents() != null && st.getExprents().isEmpty()) {
        if (st.getAllSuccessorEdges().isEmpty()) {
          List<StatEdge> lstBreaks=st.getPredecessorEdges(StatEdge.TYPE_BREAK);
          if (lstBreaks.isEmpty()) {
            for (            StatEdge edge : st.getAllPredecessorEdges()) {
              edge.getSource().removeSuccessor(edge);
            }
            found=true;
          }
        }
 else {
          StatEdge sucedge=st.getAllSuccessorEdges().get(0);
          if (sucedge.getType() != StatEdge.TYPE_FINALLYEXIT) {
            st.removeSuccessor(sucedge);
            for (            StatEdge edge : st.getAllPredecessorEdges()) {
              if (sucedge.getType() != StatEdge.TYPE_REGULAR) {
                edge.getSource().changeEdgeType(Statement.DIRECTION_FORWARD,edge,sucedge.getType());
              }
              st.removePredecessor(edge);
              edge.getSource().changeEdgeNode(Statement.DIRECTION_FORWARD,edge,sucedge.getDestination());
              sucedge.getDestination().addPredecessor(edge);
              if (sucedge.closure != null) {
                sucedge.closure.addLabeledEdge(edge);
              }
            }
            found=true;
          }
        }
        if (found) {
          sequence.getStats().removeWithKey(st.id);
          break;
        }
      }
    }
    if (!found) {
      break;
    }
  }
  sequence.setFirst(sequence.getStats().get(0));
}
