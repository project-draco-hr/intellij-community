{
  Set<Sdk> updatedSdks=new HashSet<Sdk>();
  final Module[] modules=ModuleManager.getInstance(project).getModules();
  boolean needReparseOpenFiles=false;
  for (  Module module : modules) {
    if (isPythonModule(module)) {
      Sdk newSdk=PythonSdkType.findPythonSdk(module);
      if (myModuleSdks.containsKey(module)) {
        Sdk oldSdk=myModuleSdks.get(module);
        if ((newSdk != null || oldSdk != null) && newSdk != oldSdk) {
          needReparseOpenFiles=true;
        }
      }
      myModuleSdks.put(module,newSdk);
      if (newSdk != null && !updatedSdks.contains(newSdk)) {
        updatedSdks.add(newSdk);
        updateSdkLanguageLevel(project,newSdk);
      }
    }
  }
  if (needReparseOpenFiles) {
    FileContentUtil.reparseFiles(project,Collections.<VirtualFile>emptyList(),true);
  }
}
