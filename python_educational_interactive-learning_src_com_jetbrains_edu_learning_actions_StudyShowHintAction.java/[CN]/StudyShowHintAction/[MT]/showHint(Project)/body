{
  Course course=StudyTaskManager.getInstance(project).getCourse();
  if (course == null) {
    return;
  }
  StudyState studyState=new StudyState(StudyEditor.getSelectedStudyEditor(project));
  if (!studyState.isValid()) {
    return;
  }
  PsiFile file=PsiManager.getInstance(project).findFile(studyState.getVirtualFile());
  final Editor editor=studyState.getEditor();
  LogicalPosition pos=editor.getCaretModel().getLogicalPosition();
  TaskWindow taskWindow=studyState.getTaskFile().getTaskWindow(editor.getDocument(),pos);
  if (file == null) {
    return;
  }
  String hintText=OUTSIDE_TASK_WINDOW_MESSAGE;
  if (taskWindow != null) {
    hintText=taskWindow.getHint();
  }
  int offset=editor.getDocument().getLineStartOffset(pos.line) + pos.column;
  PsiElement element=file.findElementAt(offset);
  DocumentationManager documentationManager=DocumentationManager.getInstance(project);
  DocumentationComponent component=new DocumentationComponent(documentationManager);
  component.setData(element != null ? element : file,element != null ? hintText : OUTSIDE_TASK_WINDOW_MESSAGE,true,null);
  showHintPopUp(project,editor,component);
}
