{
  if (!myInspectionComponentsLoaded) {
    myInspectionComponentsLoaded=true;
    Set<InspectionToolProvider> providers=new THashSet<InspectionToolProvider>();
    providers.addAll((((ComponentManagerEx)ApplicationManager.getApplication()).getComponentInstancesOfType(InspectionToolProvider.class)));
    ContainerUtil.addAll(providers,Extensions.getExtensions(InspectionToolProvider.EXTENSION_POINT_NAME));
    List<Factory<InspectionToolWrapper>> factories=new ArrayList<Factory<InspectionToolWrapper>>();
    registerTools(providers,factories);
    final boolean isInternal=ApplicationManager.getApplication().isInternal();
    for (    final LocalInspectionEP ep : Extensions.getExtensions(LocalInspectionEP.LOCAL_INSPECTION)) {
      if (!isInternal && ep.isInternal)       continue;
      factories.add(new Factory<InspectionToolWrapper>(){
        @Override public InspectionToolWrapper create(){
          return new LocalInspectionToolWrapper(ep);
        }
      }
);
    }
    for (    final InspectionEP ep : Extensions.getExtensions(InspectionEP.GLOBAL_INSPECTION)) {
      if (!isInternal && ep.isInternal)       continue;
      factories.add(new Factory<InspectionToolWrapper>(){
        @Override public InspectionToolWrapper create(){
          return new GlobalInspectionToolWrapper(ep);
        }
      }
);
    }
    for (    InspectionToolsFactory factory : Extensions.getExtensions(InspectionToolsFactory.EXTENSION_POINT_NAME)) {
      for (      final InspectionProfileEntry profileEntry : factory.createTools()) {
        factories.add(new Factory<InspectionToolWrapper>(){
          @Override public InspectionToolWrapper create(){
            return wrapTool(profileEntry);
          }
        }
);
      }
    }
    myInspectionToolFactories.addAll(factories);
  }
}
