{
  myFactory=new ConfigurationFactory(this){
    @NotNull @Override public RunConfiguration createTemplateConfiguration(    @NotNull Project project){
      PluginRunConfiguration runConfiguration=new PluginRunConfiguration(project,this,"");
      if (runConfiguration.VM_PARAMETERS == null) {
        runConfiguration.VM_PARAMETERS=getVmParameters();
      }
 else {
        runConfiguration.VM_PARAMETERS+=getVmParameters();
      }
      return runConfiguration;
    }
    @Override public boolean isApplicable(    @NotNull Project project){
      return ModuleUtil.hasModulesOfType(project,PluginModuleType.getInstance());
    }
    @Override public boolean isConfigurationSingletonByDefault(){
      return true;
    }
    @Override public RunConfiguration createConfiguration(    String name,    RunConfiguration template){
      PluginRunConfiguration pluginRunConfiguration=(PluginRunConfiguration)template;
      if (pluginRunConfiguration.getModule() == null) {
        Collection<Module> modules=ModuleUtil.getModulesOfType(pluginRunConfiguration.getProject(),PluginModuleType.getInstance());
        pluginRunConfiguration.setModule(ContainerUtil.getFirstItem(modules));
      }
      return super.createConfiguration(name,pluginRunConfiguration);
    }
  }
;
}
