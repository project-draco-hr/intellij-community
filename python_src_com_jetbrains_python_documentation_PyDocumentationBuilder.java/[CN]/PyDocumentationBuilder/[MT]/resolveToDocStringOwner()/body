{
  if (myElement instanceof PyTargetExpression) {
    final String targetName=myElement.getText();
    myReassignmentChain.addWith(TagSmall,$(PyBundle.message("QDOC.assigned.to.$0",targetName)).addItem(BR));
    final PyExpression assignedValue=((PyTargetExpression)myElement).findAssignedValue();
    if (assignedValue instanceof PyReferenceExpression) {
      final PsiElement resolved=resolveWithoutImplicits((PyReferenceExpression)assignedValue);
      if (resolved != null) {
        return resolved;
      }
    }
    return assignedValue;
  }
  if (myElement instanceof PyReferenceExpression) {
    myReassignmentChain.addWith(TagSmall,$(PyBundle.message("QDOC.assigned.to.$0",myElement.getText())).addItem(BR));
    return resolveWithoutImplicits((PyReferenceExpression)myElement);
  }
  if (myElement instanceof PyCallExpression) {
    final PyCallExpression call=(PyCallExpression)myElement;
    final Pair<String,PyFunction> wrapInfo=PyCallExpressionHelper.interpretAsModifierWrappingCall(call,myOriginalElement);
    if (wrapInfo != null) {
      final String wrapperName=wrapInfo.getFirst();
      final PyFunction wrappedFunction=wrapInfo.getSecond();
      myReassignmentChain.addWith(TagSmall,$(PyBundle.message("QDOC.wrapped.in.$0",wrapperName)).addItem(BR));
      return wrappedFunction;
    }
  }
  return myElement;
}
