{
  PyClass pyClass=null;
  final PyStringLiteralExpression docStringExpression=((PyDocStringOwner)elementDefinition).getDocStringExpression();
  if (elementDefinition instanceof PyClass) {
    pyClass=(PyClass)elementDefinition;
    myBody.add(PythonDocumentationProvider.describeDecorators(pyClass,TagItalic,BR,LCombUp));
    myBody.add(PythonDocumentationProvider.describeClass(pyClass,TagBold,true,false));
  }
 else   if (elementDefinition instanceof PyFunction) {
    PyFunction pyFunction=(PyFunction)elementDefinition;
    if (!isProperty) {
      pyClass=pyFunction.getContainingClass();
      if (pyClass != null) {
        myBody.addWith(TagSmall,PythonDocumentationProvider.describeClass(pyClass,TagCode,true,true)).addItem(BR).addItem(BR);
      }
    }
    myBody.add(PythonDocumentationProvider.describeDecorators(pyFunction,TagItalic,BR,LCombUp)).add(PythonDocumentationProvider.describeFunction(pyFunction,TagBold,LCombUp));
    if (docStringExpression == null) {
      addInheritedDocString(pyFunction,pyClass);
    }
  }
 else   if (elementDefinition instanceof PyFile) {
    addModulePath((PyFile)elementDefinition);
  }
  if (docStringExpression != null) {
    myBody.addItem(BR);
    addFormattedDocString(myElement,docStringExpression.getStringValue(),myBody,myEpilog);
  }
}
