{
  PyFunction function=PsiTreeUtil.getParentOfType(parameter,PyFunction.class);
  if (function != null) {
    final String docString=PyPsiUtils.strValue(function.getDocStringExpression());
    Pair<String,String> typeAndDescr=getTypeAndDescr(docString,parameter);
    String type=typeAndDescr.first;
    String desc=typeAndDescr.second;
    if (type != null) {
      final PyType pyType=PyTypeParser.getTypeByName(parameter,type);
      if (pyType instanceof PyClassType) {
        myBody.addItem(": ").addWith(new LinkWrapper(PythonDocumentationProvider.LINK_TYPE_PARAM),$(pyType.getName()));
      }
 else {
        myBody.addItem(": ").addItem(type);
      }
    }
    if (desc != null) {
      myEpilog.addItem(BR).addItem(desc);
    }
    return type != null;
  }
  return false;
}
