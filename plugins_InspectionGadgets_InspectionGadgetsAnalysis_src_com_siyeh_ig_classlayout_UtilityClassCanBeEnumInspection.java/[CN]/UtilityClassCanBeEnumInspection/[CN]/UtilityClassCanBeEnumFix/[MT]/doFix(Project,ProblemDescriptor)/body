{
  final PsiElement element=descriptor.getPsiElement();
  final PsiElement parent=element.getParent();
  if (!(parent instanceof PsiClass)) {
    return;
  }
  final PsiClass aClass=(PsiClass)parent;
  for (  PsiMethod constructor : aClass.getConstructors()) {
    constructor.delete();
  }
  final List<PsiKeyword> keywords=PsiTreeUtil.getChildrenOfTypeAsList(aClass,PsiKeyword.class);
  if (keywords.isEmpty()) {
    return;
  }
  final PsiElementFactory factory=JavaPsiFacade.getElementFactory(project);
  final PsiStatement statement=factory.createStatementFromText(";",element);
  final PsiElement token=statement.getChildren()[0];
  aClass.addAfter(token,aClass.getLBrace());
  final PsiKeyword newKeyword=factory.createKeyword(PsiKeyword.ENUM);
  keywords.get(0).replace(newKeyword);
}
