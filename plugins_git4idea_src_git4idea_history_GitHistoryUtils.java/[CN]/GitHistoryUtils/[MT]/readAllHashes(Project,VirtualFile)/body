{
  GitSimpleHandler h=new GitSimpleHandler(project,root,GitCommand.LOG);
  GitLogParser parser=new GitLogParser(project,GitLogParser.NameStatus.NONE,HASH,PARENTS,AUTHOR_TIME);
  h.setStdoutSuppressed(true);
  h.addParameters(parser.getPretty(),"--encoding=UTF-8");
  h.addParameters("HEAD","--branches","--remotes","--tags");
  h.addParameters("--full-history","--sparse");
  h.addParameters("--date-order");
  h.endOptions();
  String output=h.run();
  List<GitLogRecord> records=parser.parse(output);
  return ContainerUtil.map(records,new Function<GitLogRecord,TimeCommitParents>(){
    @Override public TimeCommitParents fun(    GitLogRecord record){
      List<Hash> parents=new SmartList<Hash>();
      for (      String parent : record.getParentsHashes()) {
        parents.add(HashImpl.build(parent));
      }
      return new TimeCommitParents(HashImpl.build(record.getHash()),parents,record.getAuthorTimeStamp());
    }
  }
);
}
