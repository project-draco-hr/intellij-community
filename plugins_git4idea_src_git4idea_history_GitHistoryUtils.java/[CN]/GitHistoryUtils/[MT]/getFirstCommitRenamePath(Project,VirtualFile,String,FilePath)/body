{
  final GitSimpleHandler h=new GitSimpleHandler(project,root,GitCommand.SHOW);
  final GitLogParser parser=new GitLogParser(project,GitLogParser.NameStatus.STATUS,HASH,COMMIT_TIME,PARENTS);
  h.setStdoutSuppressed(true);
  h.addParameters("-M","--name-status",parser.getPretty(),"--encoding=UTF-8",commit);
  GitVcs vcs=GitVcs.getInstance(project);
  if (vcs != null && !GitVersionSpecialty.FOLLOW_IS_BUGGY_IN_THE_LOG.existsIn(vcs.getVersion())) {
    h.addParameters("--follow");
    h.endOptions();
    h.addRelativePaths(filePath);
  }
 else {
    h.endOptions();
  }
  final String output=h.run();
  final List<GitLogRecord> records=parser.parse(output);
  if (records.isEmpty())   return null;
  final List<Change> changes=records.get(0).parseChanges(project,root);
  for (  Change change : changes) {
    if ((change.isMoved() || change.isRenamed()) && filePath.equals(change.getAfterRevision().getFile())) {
      return change.getBeforeRevision().getFile();
    }
  }
  return null;
}
