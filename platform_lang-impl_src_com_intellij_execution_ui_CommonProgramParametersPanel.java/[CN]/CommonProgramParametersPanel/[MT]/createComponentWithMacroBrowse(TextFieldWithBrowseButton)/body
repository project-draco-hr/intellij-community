{
  final FixedSizeButton button=new FixedSizeButton(textAccessor);
  button.setIcon(AllIcons.RunConfigurations.Variables);
  button.addActionListener(new ActionListener(){
    @Override public void actionPerformed(    ActionEvent e){
      List<String> macros=new SmartList<String>(PathMacros.getInstance().getUserMacroNames());
      if (myModuleContext != null || myHasModuleMacro) {
        macros.add(PathMacroUtil.MODULE_DIR_MACRO_NAME);
      }
      final JList list=new JBList(ArrayUtil.toStringArray(macros));
      JBPopupFactory.getInstance().createListPopupBuilder(list).setItemChoosenCallback(new Runnable(){
        @Override public void run(){
          final Object value=list.getSelectedValue();
          if (value instanceof String) {
            textAccessor.setText('$' + ((String)value) + '$');
          }
        }
      }
).setMovable(false).setResizable(false).createPopup().showUnderneathOf(button);
    }
  }
);
  JPanel panel=new JPanel(new BorderLayout());
  panel.add(textAccessor,BorderLayout.CENTER);
  panel.add(button,BorderLayout.EAST);
  return panel;
}
