{
  GrExpression qualifier=place.getQualifier();
  if (qualifier == null) {
    if (!ResolveUtil.treeWalkUp(place,processor,true))     return;
    if (place.getContext() instanceof GrMethodCall) {
      if (!ClosureMissingMethodContributor.processMethodsFromClosures(place,processor))       return;
    }
    final GrExpression runtimeQualifier=PsiImplUtil.getRuntimeQualifier(place);
    if (runtimeQualifier != null) {
      processQualifier(runtimeQualifier);
    }
  }
 else {
    if (place.getDotTokenType() == GroovyTokenTypes.mSPREAD_DOT) {
      final PsiType qtype=qualifier.getType();
      final PsiType componentType=ClosureParameterEnhancer.findTypeForIteration(qtype,place);
      if (componentType != null) {
        final ResolveState state=ResolveState.initial().put(ClassHint.RESOLVE_CONTEXT,qualifier).put(SpreadState.SPREAD_STATE,SpreadState.create(qtype,null));
        processQualifierType(componentType,state);
      }
    }
 else {
      if (ResolveUtil.isClassReference(place))       return;
      if (!processJavaLangClass(qualifier))       return;
      processQualifier(qualifier);
    }
  }
}
