{
  PsiType qualifierType=originalQualifierType instanceof PsiDisjunctionType ? ((PsiDisjunctionType)originalQualifierType).getLeastUpperBound() : originalQualifierType;
  if (qualifierType instanceof PsiIntersectionType) {
    for (    PsiType conjunct : ((PsiIntersectionType)qualifierType).getConjuncts()) {
      if (!processQualifierType(conjunct,state))       return false;
    }
    return true;
  }
  if (qualifierType instanceof GrTraitType) {
    return processTraitType((GrTraitType)qualifierType,state);
  }
  if (qualifierType instanceof PsiClassType) {
    PsiClassType.ClassResolveResult qualifierResult=((PsiClassType)qualifierType).resolveGenerics();
    PsiClass qualifierClass=qualifierResult.getElement();
    if (qualifierClass != null) {
      if (!ResolveUtil.processClassDeclarations(qualifierClass,processor,state.put(PsiSubstitutor.KEY,qualifierResult.getSubstitutor()),null,place)) {
        return false;
      }
    }
  }
 else   if (qualifierType instanceof PsiArrayType) {
    final GroovyPsiManager gmanager=GroovyPsiManager.getInstance(place.getProject());
    final GrTypeDefinition arrayClass=gmanager.getArrayClass(((PsiArrayType)qualifierType).getComponentType());
    if (arrayClass != null && !ResolveUtil.processClassDeclarations(arrayClass,processor,state,null,place))     return false;
  }
  if (!(place.getParent() instanceof GrMethodCall) && InheritanceUtil.isInheritor(qualifierType,CommonClassNames.JAVA_UTIL_COLLECTION)) {
    final PsiType componentType=ClosureParameterEnhancer.findTypeForIteration(qualifierType,place);
    if (componentType != null) {
      final SpreadState spreadState=state.get(SpreadState.SPREAD_STATE);
      processQualifierType(componentType,state.put(SpreadState.SPREAD_STATE,SpreadState.create(qualifierType,spreadState)));
    }
  }
  if (!ResolveUtil.processCategoryMembers(place,processor,state))   return false;
  if (!ResolveUtil.processNonCodeMembers(qualifierType,processor,place,state))   return false;
  return true;
}
