{
  PsiClass javaLangClass=PsiUtil.getJavaLangClass(place,place.getResolveScope());
  if (javaLangClass == null)   return true;
  PsiTypeParameter[] typeParameters=javaLangClass.getTypeParameters();
  PsiSubstitutor substitutor=state.get(PsiSubstitutor.KEY);
  if (substitutor == null)   substitutor=PsiSubstitutor.EMPTY;
  if (typeParameters.length == 1) {
    substitutor=substitutor.put(typeParameters[0],qualifierType);
    state=state.put(PsiSubstitutor.KEY,substitutor);
  }
  if (!ResolveUtil.processClassDeclarations(javaLangClass,processor,state,null,place))   return false;
  PsiType javaLangClassType=JavaPsiFacade.getElementFactory(place.getProject()).createType(javaLangClass,substitutor);
  if (!ResolveUtil.processNonCodeMembers(javaLangClassType,processor,place,state))   return false;
  return true;
}
