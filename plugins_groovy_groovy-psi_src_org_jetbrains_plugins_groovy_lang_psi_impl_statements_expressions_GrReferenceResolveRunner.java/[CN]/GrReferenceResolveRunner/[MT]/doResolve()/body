{
  GrExpression qualifier=place.getQualifier();
  if (qualifier == null) {
    if (!ResolveUtil.treeWalkUp(place,processor,true))     return false;
    if (!processor.hasCandidates()) {
      GrExpression runtimeQualifier=PsiImplUtil.getRuntimeQualifier(place);
      if (runtimeQualifier != null) {
        if (!processQualifier(runtimeQualifier))         return false;
      }
    }
  }
 else {
    if (place.getDotTokenType() == GroovyTokenTypes.mSPREAD_DOT) {
      final PsiType qtype=qualifier.getType();
      final PsiType componentType=ClosureParameterEnhancer.findTypeForIteration(qtype,place);
      if (componentType != null) {
        final ResolveState state=ResolveState.initial().put(ClassHint.RESOLVE_CONTEXT,qualifier).put(SpreadState.SPREAD_STATE,SpreadState.create(qtype,null));
        if (!processQualifierType(componentType,state))         return false;
      }
    }
 else {
      if (ResolveUtil.isClassReference(place))       return true;
      if (!processQualifier(qualifier))       return false;
      if (!processJavaLangClass(qualifier))       return false;
    }
  }
  return true;
}
