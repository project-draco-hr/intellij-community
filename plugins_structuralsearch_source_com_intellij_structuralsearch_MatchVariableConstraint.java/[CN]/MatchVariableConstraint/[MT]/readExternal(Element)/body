{
  Attribute attribute=element.getAttribute(NAME);
  if (attribute != null) {
    name=attribute.getValue();
  }
  attribute=element.getAttribute(REGEXP);
  if (attribute != null) {
    regExp=attribute.getValue();
  }
  attribute=element.getAttribute(NAME_OF_EXPRTYPE);
  if (attribute != null) {
    nameOfExprType=attribute.getValue();
  }
  attribute=element.getAttribute(NAME_OF_FORMALTYPE);
  if (attribute != null) {
    nameOfFormalArgType=attribute.getValue();
  }
  attribute=element.getAttribute(NAME_OF_REFEENCE_VAR);
  if (attribute != null) {
    nameOfReferenceVar=attribute.getValue();
  }
  attribute=element.getAttribute(SCRIPT);
  if (attribute != null) {
    scriptCodeConstraint=attribute.getValue();
  }
  attribute=element.getAttribute(WITHIN_HIERARCHY);
  if (attribute != null) {
    try {
      withinHierarchy=attribute.getBooleanValue();
    }
 catch (    DataConversionException ex) {
    }
  }
  attribute=element.getAttribute(EXPRTYPE_WITHIN_HIERARCHY);
  if (attribute != null) {
    try {
      exprTypeWithinHierarchy=attribute.getBooleanValue();
    }
 catch (    DataConversionException ex) {
    }
  }
  attribute=element.getAttribute(FORMALTYPE_WITHIN_HIERARCHY);
  if (attribute != null) {
    try {
      formalArgTypeWithinHierarchy=attribute.getBooleanValue();
    }
 catch (    DataConversionException ex) {
    }
  }
  attribute=element.getAttribute(NEGATE_NAME_CONDITION);
  if (attribute != null) {
    try {
      invertRegExp=attribute.getBooleanValue();
    }
 catch (    DataConversionException ex) {
    }
  }
  attribute=element.getAttribute(NEGATE_EXPRTYPE_CONDITION);
  if (attribute != null) {
    try {
      invertExprType=attribute.getBooleanValue();
    }
 catch (    DataConversionException ex) {
    }
  }
  attribute=element.getAttribute(NEGATE_FORMALTYPE_CONDITION);
  if (attribute != null) {
    try {
      invertFormalType=attribute.getBooleanValue();
    }
 catch (    DataConversionException ex) {
    }
  }
  attribute=element.getAttribute(NEGATE_READ_CONDITION);
  if (attribute != null) {
    try {
      invertReadAccess=attribute.getBooleanValue();
    }
 catch (    DataConversionException ex) {
    }
  }
  attribute=element.getAttribute(NEGATE_WRITE_CONDITION);
  if (attribute != null) {
    try {
      invertWriteAccess=attribute.getBooleanValue();
    }
 catch (    DataConversionException ex) {
    }
  }
  attribute=element.getAttribute(READ);
  if (attribute != null) {
    try {
      readAccess=attribute.getBooleanValue();
    }
 catch (    DataConversionException ex) {
    }
  }
  attribute=element.getAttribute(WRITE);
  if (attribute != null) {
    try {
      writeAccess=attribute.getBooleanValue();
    }
 catch (    DataConversionException ex) {
    }
  }
  attribute=element.getAttribute(TARGET);
  if (attribute != null) {
    try {
      partOfSearchResults=attribute.getBooleanValue();
    }
 catch (    DataConversionException ex) {
    }
  }
  attribute=element.getAttribute(MIN_OCCURS);
  if (attribute != null) {
    try {
      minCount=attribute.getIntValue();
    }
 catch (    DataConversionException ex) {
    }
  }
  attribute=element.getAttribute(MAX_OCCURS);
  if (attribute != null) {
    try {
      maxCount=attribute.getIntValue();
    }
 catch (    DataConversionException ex) {
    }
  }
  attribute=element.getAttribute(WHOLE_WORDS_ONLY);
  if (attribute != null) {
    try {
      wholeWordsOnly=attribute.getBooleanValue();
    }
 catch (    DataConversionException ex) {
    }
  }
  attribute=element.getAttribute(NEGATE_WITHIN_CONDITION);
  if (attribute != null) {
    try {
      invertWithinConstraint=attribute.getBooleanValue();
    }
 catch (    DataConversionException ex) {
    }
  }
  attribute=element.getAttribute(NEGATE_CONTAINS_CONDITION);
  if (attribute != null) {
    try {
      invertContainsConstraint=attribute.getBooleanValue();
    }
 catch (    DataConversionException ex) {
    }
  }
  attribute=element.getAttribute(CONTAINS_CONDITION);
  if (attribute != null)   containsConstraint=attribute.getValue();
  attribute=element.getAttribute(WITHIN_CONDITION);
  if (attribute != null)   withinConstraint=attribute.getValue();
}
