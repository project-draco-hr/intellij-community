{
  int result;
  result=name.hashCode();
  result=29 * result + regExp.hashCode();
  result=29 * result + (invertRegExp ? 1 : 0);
  result=29 * result + (withinHierarchy ? 1 : 0);
  result=29 * result + (strictlyWithinHierarchy ? 1 : 0);
  result=29 * result + (wholeWordsOnly ? 1 : 0);
  result=29 * result + minCount;
  result=29 * result + maxCount;
  result=29 * result + (readAccess ? 1 : 0);
  result=29 * result + (invertReadAccess ? 1 : 0);
  result=29 * result + (writeAccess ? 1 : 0);
  result=29 * result + (invertWriteAccess ? 1 : 0);
  result=29 * result + (greedy ? 1 : 0);
  result=29 * result + (reference ? 1 : 0);
  result=29 * result + (invertReference ? 1 : 0);
  result=29 * result + nameOfReferenceVar.hashCode();
  result=29 * result + (partOfSearchResults ? 1 : 0);
  result=29 * result + nameOfExprType.hashCode();
  result=29 * result + (invertExprType ? 1 : 0);
  result=29 * result + (exprTypeWithinHierarchy ? 1 : 0);
  result=29 * result + nameOfFormalArgType.hashCode();
  result=29 * result + (invertFormalType ? 1 : 0);
  result=29 * result + (formalArgTypeWithinHierarchy ? 1 : 0);
  result=29 * result + scriptCodeConstraint.hashCode();
  result=29 * result + withinConstraint.hashCode();
  result=29 * result + containsConstraint.hashCode();
  if (invertContainsConstraint)   result=29 * result + 1;
  if (invertWithinConstraint)   result=29 * result + 1;
  return result;
}
