{
  if ("author".equals(tagName)) {
    result.add(tagName + " " + SystemProperties.getUserName());
    return;
  }
  if ("param".equals(tagName)) {
    PsiMethod psiMethod=PsiTreeUtil.getParentOfType(comment,PsiMethod.class);
    if (psiMethod != null) {
      PsiDocTag[] tags=comment.getTags();
      for (      PsiParameter param : psiMethod.getParameterList().getParameters()) {
        if (!JavadocHighlightUtil.hasTagForParameter(tags,param)) {
          result.add(tagName + " " + param.getName());
        }
      }
    }
    return;
  }
  if ("see".equals(tagName)) {
    PsiMember member=PsiTreeUtil.getParentOfType(comment,PsiMember.class);
    if (member instanceof PsiClass) {
      InheritanceUtil.processSupers((PsiClass)member,false,new Processor<PsiClass>(){
        @Override public boolean process(        PsiClass psiClass){
          String name=psiClass.getQualifiedName();
          if (StringUtil.isNotEmpty(name) && !CommonClassNames.JAVA_LANG_OBJECT.equals(name)) {
            result.add("see " + name);
          }
          return true;
        }
      }
);
    }
  }
}
