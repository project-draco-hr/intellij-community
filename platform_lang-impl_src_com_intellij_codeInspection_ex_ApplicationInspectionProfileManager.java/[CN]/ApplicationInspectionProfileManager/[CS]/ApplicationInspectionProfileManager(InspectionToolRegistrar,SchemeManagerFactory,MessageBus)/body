{
  super(messageBus);
  myRegistrar=registrar;
  registerProvidedSeverities();
  mySchemeManager=schemeManagerFactory.create(INSPECTION_DIR,new InspectionProfileProcessor(){
    @NotNull @Override public String getName(    @NotNull Function<String,String> attributeProvider){
      return ObjectUtils.chooseNotNull(attributeProvider.apply(InspectionProfileLoadUtil.PROFILE_NAME_TAG),"unnamed");
    }
    @NotNull public InspectionProfileImpl createScheme(    @NotNull SchemeDataHolder dataHolder,    @NotNull String name,    @NotNull Function<String,String> attributeProvider,    boolean duringLoad){
      return new InspectionProfileImpl(name,myRegistrar,ApplicationInspectionProfileManager.this,getDefaultProfile(),dataHolder);
    }
    @Override public void onSchemeAdded(    @NotNull InspectionProfileImpl scheme){
      fireProfileChanged(scheme);
      onProfilesChanged();
    }
    @Override public void onSchemeDeleted(    @NotNull InspectionProfileImpl scheme){
      onProfilesChanged();
    }
    @Override public void onCurrentSchemeChanged(    @Nullable Scheme oldScheme){
      Profile current=mySchemeManager.getCurrentScheme();
      if (current != null) {
        fireProfileChanged((Profile)oldScheme,current);
      }
      onProfilesChanged();
    }
  }
);
}
