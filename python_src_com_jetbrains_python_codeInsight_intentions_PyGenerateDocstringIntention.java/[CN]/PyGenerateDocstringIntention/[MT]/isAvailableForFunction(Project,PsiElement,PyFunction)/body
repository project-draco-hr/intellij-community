{
  PySignature signature=PySignatureCacheManager.getInstance(project).findSignature(function);
  if (signature != null) {
    if (function.getDocStringValue() != null) {
      PyDocstringGenerator docstringGenerator=new PyDocstringGenerator(function);
      addFunctionArguments(function,signature,docstringGenerator);
      if (docstringGenerator.haveParametersToAdd()) {
        myText=PyBundle.message("INTN.add.types.to.docstring");
        return true;
      }
    }
 else {
      myText=PyBundle.message("INTN.generate.docstring.with.types");
      return true;
    }
  }
  PyStatementList list=PsiTreeUtil.getParentOfType(elementAt,PyStatementList.class,false,PyFunction.class);
  if (list == null) {
    if (function.getDocStringExpression() != null) {
      return false;
    }
    final PyStatementList statementList=function.getStatementList();
    if (statementList != null && statementList.getStatements().length != 0) {
      return true;
    }
  }
  return false;
}
