{
  extend(CompletionType.BASIC,psiElement().afterLeafSkipping(psiElement().whitespace(),psiElement().withElementType(PyTokenTypes.DEF_KEYWORD)),new CompletionProvider<CompletionParameters>(){
    @Override protected void addCompletions(    @NotNull CompletionParameters parameters,    ProcessingContext context,    @NotNull CompletionResultSet result){
      PsiElement position=parameters.getOriginalPosition();
      PyClass containingClass=PsiTreeUtil.getParentOfType(position,PyClass.class);
      if (containingClass == null && position instanceof PsiWhiteSpace) {
        position=PsiTreeUtil.prevLeaf(position);
        containingClass=PsiTreeUtil.getParentOfType(position,PyClass.class);
      }
      if (containingClass == null) {
        return;
      }
      List<String> seenNames=new ArrayList<String>();
      for (      PyFunction function : containingClass.getMethods()) {
        seenNames.add(function.getName());
      }
      for (      PyClass ancestor : containingClass.iterateAncestors()) {
        for (        PyFunction superMethod : ancestor.getMethods()) {
          if (!seenNames.contains(superMethod.getName())) {
            result.addElement(LookupElementBuilder.create(superMethod.getName() + superMethod.getParameterList().getText() + ":"));
            seenNames.add(superMethod.getName());
          }
        }
      }
    }
  }
);
}
