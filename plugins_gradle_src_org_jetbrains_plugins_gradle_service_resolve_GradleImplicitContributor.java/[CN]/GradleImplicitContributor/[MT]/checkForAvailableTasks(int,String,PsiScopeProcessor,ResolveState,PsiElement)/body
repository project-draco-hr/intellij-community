{
  final GroovyPsiManager psiManager=GroovyPsiManager.getInstance(place.getProject());
  PsiClass gradleApiProjectClass=psiManager.findClassWithCache(GRADLE_API_PROJECT,place.getResolveScope());
  if (canBeMethodOf(taskName,gradleApiProjectClass))   return;
  if (canBeMethodOf(GroovyPropertyUtils.getGetterNameNonBoolean(taskName),gradleApiProjectClass))   return;
  final String className=BUILT_IN_TASKS.get(taskName);
  if (className != null) {
    if (level <= 1) {
      GradleResolverUtil.addImplicitVariable(processor,state,place,className);
    }
    processTask(taskName,className,psiManager,processor,state,place);
    return;
  }
  Module module=ModuleUtilCore.findModuleForPsiElement(place);
  if (module != null) {
    String path=module.getOptionValue(ExternalSystemConstants.ROOT_PROJECT_PATH_KEY);
    GradleLocalSettings localSettings=GradleLocalSettings.getInstance(place.getProject());
    Collection<ExternalTaskPojo> taskPojos=localSettings.getAvailableTasks().get(path);
    for (    ExternalTaskPojo taskPojo : taskPojos) {
      if (taskName.equals(taskPojo.getName())) {
        processTask(taskName,GRADLE_API_TASK,psiManager,processor,state,place);
        return;
      }
    }
  }
}
