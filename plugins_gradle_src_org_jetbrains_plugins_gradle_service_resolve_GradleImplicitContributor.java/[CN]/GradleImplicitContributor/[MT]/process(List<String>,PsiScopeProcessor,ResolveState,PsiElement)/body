{
  if (methodCallInfo.isEmpty()) {
    checkForAvailableTasks(0,place.getText(),processor,state,place);
    return;
  }
  final String methodCall=getLastItem(methodCallInfo);
  if (methodCall == null)   return;
  if (!methodCall.equals("task")) {
    if (methodCallInfo.size() == 1) {
      checkForAvailableTasks(1,place.getText(),processor,state,place);
    }
    if (methodCallInfo.size() == 2) {
      processAvailableTasks(methodCall,processor,state,place);
    }
  }
  if (methodCallInfo.size() >= 3 && Arrays.equals(ar("dirs","flatDir","repositories"),methodCallInfo.subList(0,3).toArray())) {
    final GroovyPsiManager psiManager=GroovyPsiManager.getInstance(place.getProject());
    GradleResolverUtil.processDeclarations(psiManager,processor,state,place,GRADLE_API_ARTIFACTS_REPOSITORIES_FLAT_DIRECTORY_ARTIFACT_REPOSITORY);
  }
  if (methodCallInfo.size() == 3) {
    final GroovyPsiManager psiManager=GroovyPsiManager.getInstance(place.getProject());
    if ("manifest".equals(methodCallInfo.get(1)) && "jar".equals(methodCallInfo.get(2))) {
      GradleResolverUtil.processDeclarations(psiManager,processor,state,place,GRADLE_API_JAVA_ARCHIVES_MANIFEST);
    }
  }
  if (place instanceof GrExpression && GradleResolverUtil.getTypeOf((GrExpression)place) == null) {
    GrClosableBlock closableBlock=GradleResolverUtil.findParent(place,GrClosableBlock.class);
    if (closableBlock != null && closableBlock.getParent() instanceof GrMethodCallExpression) {
      PsiType psiType=GradleResolverUtil.getTypeOf(((GrExpression)closableBlock.getParent()));
      if (psiType != null) {
        final GroovyPsiManager psiManager=GroovyPsiManager.getInstance(place.getProject());
        GradleResolverUtil.processDeclarations(psiManager,processor,state,place,psiType.getCanonicalText());
      }
    }
  }
}
