{
  String parameters=getConfiguration().getProgramParameters();
  javaParameters.setMainClass(JUnitConfiguration.JUNIT_START_CLASS);
  final Module module=getConfiguration().getConfigurationModule().getModule();
  if (javaParameters.getJdk() == null) {
    javaParameters.setJdk(module != null ? ModuleRootManager.getInstance(module).getSdk() : ProjectRootManager.getInstance(getConfiguration().getProject()).getProjectSdk());
  }
  javaParameters.getClassPath().add(PathUtil.getJarPathForClass(JUnitStarter.class));
  javaParameters.getProgramParametersList().add(JUnitStarter.IDE_VERSION + JUnitStarter.VERSION);
  if (!StringUtil.isEmptyOrSpaces(parameters)) {
    javaParameters.getProgramParametersList().add("@name" + parameters);
  }
  final StringBuilder buf=new StringBuilder();
  collectListeners(javaParameters,buf,IDEAJUnitListener.EP_NAME,"\n");
  if (buf.length() > 0) {
    try {
      myListenersFile=FileUtil.createTempFile("junit_listeners_","");
      myListenersFile.deleteOnExit();
      javaParameters.getProgramParametersList().add("@@" + myListenersFile.getPath());
      FileUtil.writeToFile(myListenersFile,buf.toString().getBytes(CharsetToolkit.UTF8_CHARSET));
    }
 catch (    IOException e) {
      LOG.error(e);
    }
  }
}
