{
  if (!listOwner.isValid())   return false;
  final PsiModifierList modifierList=listOwner.getModifierList();
  if (modifierList == null)   return false;
  PsiAnnotation annotation=modifierList.findAnnotation(annotationFQN);
  if (annotation != null)   return true;
  if (!skipExternal) {
    final Project project=listOwner.getProject();
    if (ExternalAnnotationsManager.getInstance(project).findExternalAnnotation(listOwner,annotationFQN) != null || InferredAnnotationsManager.getInstance(project).findInferredAnnotation(listOwner,annotationFQN) != null) {
      return true;
    }
  }
  if (checkHierarchy) {
    if (listOwner instanceof PsiMethod) {
      PsiMethod method=(PsiMethod)listOwner;
      if (processed == null)       processed=new THashSet<PsiMember>();
      if (!processed.add(method))       return false;
      final PsiMethod[] superMethods=method.findSuperMethods();
      for (      PsiMethod superMethod : superMethods) {
        if (isAnnotated(superMethod,annotationFQN,checkHierarchy,skipExternal,processed))         return true;
      }
    }
 else     if (listOwner instanceof PsiClass) {
      final PsiClass clazz=(PsiClass)listOwner;
      if (processed == null)       processed=new THashSet<PsiMember>();
      if (!processed.add(clazz))       return false;
      final PsiClass[] superClasses=clazz.getSupers();
      for (      PsiClass superClass : superClasses) {
        if (isAnnotated(superClass,annotationFQN,checkHierarchy,skipExternal,processed))         return true;
      }
    }
  }
  return false;
}
