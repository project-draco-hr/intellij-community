{
  final Ref<PsiElement> elementRef=Ref.create();
  PsiElement currentElement=file.findElementAt(currentPosition.getOffset());
  if (currentElement == null) {
    return elementRef;
  }
  PyResolveUtil.scopeCrawlUp(new PsiScopeProcessor(){
    @Override public boolean execute(    @NotNull PsiElement element,    @NotNull ResolveState state){
      if ((element instanceof PyImportElement)) {
        PyImportElement importElement=(PyImportElement)element;
        if (name.equals(importElement.getVisibleName())) {
          if (elementRef.isNull()) {
            elementRef.set(element);
          }
          return false;
        }
        return true;
      }
 else {
        if (elementRef.isNull()) {
          elementRef.set(element);
        }
        return false;
      }
    }
    @Nullable @Override public <T>T getHint(    @NotNull Key<T> hintKey){
      return null;
    }
    @Override public void handleEvent(    @NotNull Event event,    @Nullable Object associated){
    }
  }
,currentElement,name,null);
  return elementRef;
}
