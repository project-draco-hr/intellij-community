{
  ApplicationManager.getApplication().assertIsDispatchThread();
  myBalloons.add(balloon);
  if (layoutData instanceof BalloonLayoutData) {
    BalloonLayoutData balloonLayoutData=(BalloonLayoutData)layoutData;
    balloonLayoutData.closeAll=myCloseAll;
    balloonLayoutData.doLayout=myLayoutRunnable;
    myLayoutData.put(balloon,balloonLayoutData);
  }
  Disposer.register(balloon,new Disposable(){
    public void dispose(){
      remove(balloon,false);
      queueRelayout();
    }
  }
);
  if (myLafListener == null && layoutData != null) {
    myLafListener=new LafManagerListener(){
      @Override public void lookAndFeelChanged(      LafManager source){
        for (        BalloonLayoutData layoutData : myLayoutData.values()) {
          if (layoutData.lafHandler != null) {
            layoutData.lafHandler.run();
          }
        }
      }
    }
;
    LafManager.getInstance().addLafManagerListener(myLafListener);
  }
  calculateSize();
  relayout();
  balloon.show(myLayeredPane);
}
