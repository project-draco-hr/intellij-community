{
  if (!Registry.is("editor.breadcrumbs.highlight.on.hover")) {
    return;
  }
  HighlightManager hm=HighlightManager.getInstance(myProject);
  if (myHighlighed != null) {
    for (    RangeHighlighter highlighter : myHighlighed) {
      hm.removeSegmentHighlighter(myEditor,highlighter);
    }
    myHighlighed=null;
  }
  if (item != null) {
    final TextRange range=item.getPsiElement().getTextRange();
    final TextAttributes attributes=new TextAttributes();
    final CrumbPresentation p=item.getPresentation();
    final Color color=p != null ? p.getBackgroundColor(false,false,false) : BreadcrumbsComponent.ButtonSettings.getBackgroundColor(false,false,false,false);
    final Color background=EditorColorsManager.getInstance().getGlobalScheme().getColor(EditorColors.CARET_ROW_COLOR);
    attributes.setBackgroundColor(XmlTagTreeHighlightingUtil.makeTransparent(color,background != null ? background : Gray._200,0.3));
    myHighlighed=new ArrayList<>(1);
    int flags=HighlightManager.HIDE_BY_ESCAPE | HighlightManager.HIDE_BY_TEXT_CHANGE | HighlightManager.HIDE_BY_ANY_KEY;
    hm.addOccurrenceHighlight(myEditor,range.getStartOffset(),range.getEndOffset(),attributes,flags,myHighlighed,null);
  }
}
