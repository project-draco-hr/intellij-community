{
  if (LOG.isDebugEnabled()) {
    LOG.debug(DebugUtil.psiToString(parameters.getOriginalFile(),true));
  }
  super.fillCompletionVariants(parameters,result);
  PsiFile file=parameters.getOriginalFile();
  final YouTrackIntellisense intellisense=file.getUserData(YouTrackIntellisense.INTELLISENSE_KEY);
  if (intellisense == null) {
    return;
  }
  final Application application=ApplicationManager.getApplication();
  Future<List<CompletionItem>> future=application.executeOnPooledThread(new Callable<List<CompletionItem>>(){
    @Override public List<CompletionItem> call() throws Exception {
      return intellisense.fetchCompletion(parameters.getOriginalFile().getText(),parameters.getOffset());
    }
  }
);
  try {
    final List<CompletionItem> suggestions=future.get(TIMEOUT,TimeUnit.MILLISECONDS);
    result.addAllElements(ContainerUtil.map(suggestions,new Function<CompletionItem,LookupElement>(){
      @Override public LookupElement fun(      CompletionItem item){
        LookupElementBuilder builder=LookupElementBuilder.create(item.getOption()).withTypeText(item.getDescription(),true);
        return builder;
      }
    }
));
  }
 catch (  Exception ignored) {
    if (ignored instanceof TimeoutException) {
      LOG.debug("YouTrack request took more than %d ms to complete");
    }
    result.stopHere();
  }
}
