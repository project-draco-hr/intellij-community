{
  final FilePresentation filePresentation=myRecentPathFileChange.get();
  if ((filePresentation == null) || (filePresentation.getVf() == null)) {
    ApplicationManager.getApplication().invokeLater(myReset);
    return;
  }
  final VirtualFile file=filePresentation.getVf();
  final PatchReader patchReader=loadPatches(filePresentation);
  if (patchReader == null)   return;
  List<FilePatch> filePatches=ContainerUtil.<FilePatch>newArrayList(patchReader.getPatches());
  if (!ContainerUtil.isEmpty(myBinaryShelvedPatches)) {
    filePatches.addAll(myBinaryShelvedPatches);
  }
  final List<AbstractFilePatchInProgress> matchedPatches=new MatchPatchPaths(myProject).execute(filePatches);
  ApplicationManager.getApplication().invokeLater(new Runnable(){
    public void run(){
      myChangeListChooser.setDefaultName(file.getNameWithoutExtension().replace('_',' ').trim());
      myPatches.clear();
      myPatches.addAll(matchedPatches);
      myReader=patchReader;
      updateTree(true);
      paintBusy(false);
    }
  }
);
}
