{
  this.cfg=cfg;
  this.title=title;
  bundledInjections.addAll(cfg.getDefaultInjections());
  originalInjections=new ArrayList<BaseInjection>(ContainerUtil.concat(InjectorUtils.getActiveInjectionSupportIds(),new Function<String,Collection<? extends BaseInjection>>(){
    public Collection<? extends BaseInjection> fun(    final String s){
      List<BaseInjection> injections=CfgInfo.this.cfg instanceof Configuration.Prj ? ((Configuration.Prj)CfgInfo.this.cfg).getOwnInjections(s) : CfgInfo.this.cfg.getInjections(s);
      return ContainerUtil.findAll(injections,new Condition<BaseInjection>(){
        public boolean value(        final BaseInjection injection){
          String id=injection.getInjectedLanguageId();
          return InjectedLanguage.findLanguageById(id) != null || ReferenceInjector.findById(id) != null;
        }
      }
);
    }
  }
));
  sortInjections(originalInjections);
  reset();
}
