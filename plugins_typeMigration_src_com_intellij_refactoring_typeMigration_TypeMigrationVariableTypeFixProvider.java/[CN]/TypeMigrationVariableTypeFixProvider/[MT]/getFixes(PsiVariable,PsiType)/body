{
  return new IntentionAction[]{new VariableTypeFix(variable,toReturn){
    @NotNull @Override public String getName(){
      return "Migrate \'" + getVariable().getName() + "\' type to \'"+ getReturnType().getCanonicalText()+ "\'";
    }
    @Override public void applyFix(    Project project,    PsiFile file,    @Nullable Editor editor){
      if (!CodeInsightUtilBase.prepareFileForWrite(getVariable().getContainingFile()))       return;
      try {
        getVariable().normalizeDeclaration();
        final TypeMigrationRules rules=new TypeMigrationRules(TypeMigrationLabeler.getElementType(getVariable()));
        rules.setMigrationRootType(getReturnType());
        rules.setBoundScope(GlobalSearchScope.projectScope(project));
        TypeMigrationProcessor.runHighlightingTypeMigration(project,editor,rules,getVariable());
        JavaCodeStyleManager.getInstance(project).shortenClassReferences(getVariable());
        UndoUtil.markPsiFileForUndo(file);
      }
 catch (      IncorrectOperationException e) {
        LOG1.error(e);
      }
    }
  }
};
}
