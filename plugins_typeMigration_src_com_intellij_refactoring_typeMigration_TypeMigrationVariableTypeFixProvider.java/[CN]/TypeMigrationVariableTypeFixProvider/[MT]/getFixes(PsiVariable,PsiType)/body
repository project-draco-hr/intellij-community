{
  return new IntentionAction[]{new VariableTypeFix(variable,toReturn){
    @NotNull public String getText(){
      return "Migrate \'" + getVariable().getName() + "\' type to \'"+ getReturnType().getCanonicalText()+ "\'";
    }
    @Override public void invoke(    @NotNull final Project project,    final Editor editor,    final PsiFile file){
      if (!CodeInsightUtilBase.prepareFileForWrite(getVariable().getContainingFile()))       return;
      try {
        getVariable().normalizeDeclaration();
        final TypeMigrationRules rules=new TypeMigrationRules(TypeMigrationLabeler.getElementType(getVariable()));
        rules.setMigrationRootType(getReturnType());
        rules.setBoundScope(GlobalSearchScope.projectScope(project));
        final TypeMigrationProcessor processor=new TypeMigrationProcessor(project,getVariable(),rules);
        processor.setPreviewUsages(true);
        processor.run();
        JavaCodeStyleManager.getInstance(project).shortenClassReferences(getVariable());
        UndoUtil.markPsiFileForUndo(file);
      }
 catch (      IncorrectOperationException e) {
        LOG1.error(e);
      }
    }
  }
};
}
