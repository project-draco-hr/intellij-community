{
  super(new BorderLayout());
  add(myPanel,BorderLayout.CENTER);
  myList.setCellRenderer(new GroupedItemsListRenderer(new ListItemDescriptor<ProjectTemplate>(){
    @Nullable @Override public String getTextFor(    ProjectTemplate value){
      return value.getName();
    }
    @Nullable @Override public String getTooltipFor(    ProjectTemplate value){
      return null;
    }
    @Nullable @Override public Icon getIconFor(    ProjectTemplate value){
      return value.getIcon();
    }
    @Override public boolean hasSeparatorAboveOf(    ProjectTemplate value){
      return value == myFirstArchivedTemplate || value == myFirstProjectType;
    }
    @Nullable @Override public String getCaptionAboveOf(    ProjectTemplate value){
      return value == myFirstArchivedTemplate ? "Ready-To-Use Templates" : "Configurable " + (myNewProject ? "Project" : "Module") + " Types";
    }
  }
));
  myList.getSelectionModel().addListSelectionListener(new ListSelectionListener(){
    @Override public void valueChanged(    ListSelectionEvent e){
      myDescriptionPane.setText("");
      ProjectTemplate template=getSelectedTemplate();
      if (template != null) {
        String description=template.getDescription();
        if (StringUtil.isNotEmpty(description)) {
          description="<html><body><font " + (SystemInfo.isMac ? "" : "face=\"Verdana\" size=\"-1\"") + '>'+ description+ "</font></body></html>";
          myDescriptionPane.setText(description);
        }
      }
    }
  }
);
  Messages.installHyperlinkSupport(myDescriptionPane);
}
