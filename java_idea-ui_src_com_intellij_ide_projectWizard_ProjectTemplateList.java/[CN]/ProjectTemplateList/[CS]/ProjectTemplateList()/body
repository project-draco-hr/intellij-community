{
  super(new BorderLayout());
  add(myPanel,BorderLayout.CENTER);
  GroupedItemsListRenderer renderer=new GroupedItemsListRenderer(new ListItemDescriptorAdapter<ProjectTemplate>(){
    @Nullable @Override public String getTextFor(    ProjectTemplate value){
      return value.getName();
    }
    @Nullable @Override public Icon getIconFor(    ProjectTemplate value){
      return value.getIcon();
    }
  }
){
    @Override protected void customizeComponent(    JList list,    Object value,    boolean isSelected){
      super.customizeComponent(list,value,isSelected);
      Icon icon=myTextLabel.getIcon();
      if (icon != null && myTextLabel.getDisabledIcon() == icon) {
        myTextLabel.setDisabledIcon(IconLoader.getDisabledIcon(icon));
      }
      myTextLabel.setEnabled(myList.isEnabled());
      myTextLabel.setBorder(IdeBorderFactory.createEmptyBorder(3,3,3,3));
    }
  }
;
  myList.setCellRenderer(renderer);
  myList.getSelectionModel().addListSelectionListener(new ListSelectionListener(){
    @Override public void valueChanged(    ListSelectionEvent e){
      updateSelection();
    }
  }
);
  Messages.installHyperlinkSupport(myDescriptionPane);
}
