{
  final String methodName=JUnit4ReflectionUtil.getMethodName(description);
  final String classFQN=JUnit4ReflectionUtil.getClassName(description);
  final int paramStart=methodName.indexOf('[');
  if (myParamName != null) {
    myPrintStream.println("##teamcity[testSuiteFinished name=\'" + escapeName(myParamName) + "\']");
    myParamName=null;
  }
  String className=getShortName(classFQN);
  if (!myEmptyTests.isEmpty() && isWarning(methodName,classFQN)) {
    className=(String)myEmptyTests.remove(0);
  }
  if (!className.equals(myCurrentClassName)) {
    if (myCurrentClassName != null) {
      myPrintStream.println("##teamcity[testSuiteFinished name=\'" + escapeName(myCurrentClassName) + "\']");
    }
    myCurrentClassName=className;
    myPrintStream.println("##teamcity[testSuiteStarted name =\'" + escapeName(myCurrentClassName) + "\']");
  }
  if (paramStart > -1) {
    final String paramName=methodName.substring(paramStart,methodName.length());
    if (!paramName.equals(myParamName)) {
      myParamName=paramName;
      myPrintStream.println("##teamcity[testSuiteStarted name =\'" + escapeName(myParamName) + "\']");
    }
  }
  myPrintStream.println("##teamcity[testStarted name=\'" + escapeName(methodName) + "\' "+ getTestMethodLocation(methodName,classFQN)+ "]");
}
