{
  if (tests.isEmpty()) {
    final String methodName=JUnit4ReflectionUtil.getMethodName((Description)description);
    System.out.println("##teamcity[suiteTreeNode name=\'" + methodName + "\' locationHint=\'java:test://"+ JUnit4ReflectionUtil.getClassName((Description)description)+ "."+ methodName+ "\']");
  }
  boolean pass=false;
  for (Iterator iterator=tests.iterator(); iterator.hasNext(); ) {
    final Object next=iterator.next();
    final List childTests=runner.getChildTests(next);
    if (childTests.isEmpty() && !pass) {
      pass=true;
      System.out.println("##teamcity[suiteTreeStarted name=\'" + JUnit4ReflectionUtil.getClassName((Description)description) + "\' locationHint=\'java:suite://"+ JUnit4ReflectionUtil.getClassName((Description)description)+ "\']");
    }
    sendTree(runner,next,childTests);
  }
  if (pass) {
    System.out.println("##teamcity[suiteTreeEnded name=\'" + JUnit4ReflectionUtil.getClassName((Description)description) + "\']");
  }
}
