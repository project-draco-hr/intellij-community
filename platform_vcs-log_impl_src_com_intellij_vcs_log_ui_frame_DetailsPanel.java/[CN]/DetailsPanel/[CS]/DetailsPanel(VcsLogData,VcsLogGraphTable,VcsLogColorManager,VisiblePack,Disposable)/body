{
  myLogData=logData;
  myGraphTable=graphTable;
  myColorManager=colorManager;
  myDataPack=initialDataPack;
  myReferencesPanel=new ReferencesPanel(myColorManager);
  myCommitDetailsPanel=new DataPanel(logData.getProject(),logData.isMultiRoot(),logData);
  myScrollPane=new JBScrollPane(ScrollPaneConstants.VERTICAL_SCROLLBAR_AS_NEEDED,ScrollPaneConstants.HORIZONTAL_SCROLLBAR_AS_NEEDED);
  myScrollPane.getVerticalScrollBar().setUnitIncrement(8);
  myMainContentPanel=new JPanel(new MigLayout("flowy, ins 0, hidemode 3, gapy 0")){
    @Override public Dimension getPreferredSize(){
      Dimension size=super.getPreferredSize();
      if (myCommitDetailsPanel.isExpanded()) {
        return size;
      }
      size.width=myScrollPane.getViewport().getWidth() - 5;
      return size;
    }
    @Override public Color getBackground(){
      return myCommitDetailsPanel.getBackground();
    }
    @Override protected void paintChildren(    Graphics g){
      if (StringUtil.isNotEmpty(myEmptyText.getText())) {
        myEmptyText.paint(this,g);
      }
 else {
        super.paintChildren(g);
      }
    }
  }
;
  myEmptyText=new StatusText(myMainContentPanel){
    @Override protected boolean isStatusVisible(){
      return StringUtil.isNotEmpty(getText());
    }
  }
;
  myMainContentPanel.setOpaque(false);
  myScrollPane.setViewportView(myMainContentPanel);
  myScrollPane.setBorder(IdeBorderFactory.createEmptyBorder());
  myScrollPane.setViewportBorder(IdeBorderFactory.createEmptyBorder());
  myMainContentPanel.add(myReferencesPanel,"");
  myMainContentPanel.add(myCommitDetailsPanel,"");
  myLoadingPanel=new JBLoadingPanel(new BorderLayout(),parent,ProgressWindow.DEFAULT_PROGRESS_DIALOG_POSTPONE_TIME_MILLIS){
    @Override public Color getBackground(){
      return getDetailsBackground();
    }
  }
;
  myLoadingPanel.add(myScrollPane);
  setLayout(new BorderLayout());
  add(myLoadingPanel,BorderLayout.CENTER);
  showMessage("No commits selected");
}
