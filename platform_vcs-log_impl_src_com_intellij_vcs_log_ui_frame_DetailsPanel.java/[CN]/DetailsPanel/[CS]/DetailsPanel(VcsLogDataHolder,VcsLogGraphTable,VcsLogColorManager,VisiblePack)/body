{
  myLogDataHolder=logDataHolder;
  myGraphTable=graphTable;
  myDataPack=initialDataPack;
  myRefsPanel=new RefsPanel(colorManager);
  final JScrollPane scrollPane=new JBScrollPane(){
    @Override public Border getBorder(){
      return getVerticalScrollBar().isVisible() ? super.getBorder() : null;
    }
  }
;
  myMessageDataPanel=new DataPanel(logDataHolder.getProject()){
    @Override public Dimension getPreferredSize(){
      Dimension size=super.getPreferredSize();
      size.width=scrollPane.getViewport().getWidth() - 5;
      return size;
    }
  }
;
  scrollPane.setOpaque(false);
  scrollPane.getViewport().setOpaque(false);
  scrollPane.setViewportView(myMessageDataPanel);
  myContainingBranchesPanel=new ContainingBranchesPanel();
  myMessageLabel=new JLabel();
  myMessageLabel.setForeground(UIUtil.getInactiveTextColor());
  myMessageLabel.setHorizontalAlignment(SwingConstants.CENTER);
  myMessageLabel.setVerticalAlignment(SwingConstants.CENTER);
  myLoadingPanel=new JBLoadingPanel(new BorderLayout(),logDataHolder,ProgressWindow.DEFAULT_PROGRESS_DIALOG_POSTPONE_TIME_MILLIS);
  myLoadingPanel.add(myRefsPanel,BorderLayout.NORTH);
  myLoadingPanel.add(scrollPane,BorderLayout.CENTER);
  myLoadingPanel.add(myContainingBranchesPanel,BorderLayout.SOUTH);
  myLoadingPanel.setOpaque(false);
  setLayout(new CardLayout());
  add(myLoadingPanel,STANDARD_LAYER);
  add(myMessageLabel,MESSAGE_LAYER);
  setBorder(BorderFactory.createEmptyBorder(0,5,0,5));
  showMessage("No commits selected");
}
