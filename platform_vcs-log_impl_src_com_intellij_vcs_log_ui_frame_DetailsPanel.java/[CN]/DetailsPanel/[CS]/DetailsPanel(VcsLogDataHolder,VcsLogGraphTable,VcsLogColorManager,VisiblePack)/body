{
  myLogDataHolder=logDataHolder;
  myGraphTable=graphTable;
  myDataPack=initialDataPack;
  myRefsPanel=new RefsPanel(colorManager);
  myHashAuthorPanel=new DataPanel(logDataHolder.getProject(),false);
  final JScrollPane scrollPane=new JBScrollPane(){
    @Override public Border getBorder(){
      return getVerticalScrollBar().isVisible() ? super.getBorder() : null;
    }
  }
;
  myMessageDataPanel=new DataPanel(logDataHolder.getProject(),true){
    @Override public Dimension getPreferredSize(){
      Dimension size=super.getPreferredSize();
      size.width=scrollPane.getViewport().getWidth() - 5;
      return size;
    }
  }
;
  scrollPane.setViewportView(myMessageDataPanel);
  myContainingBranchesPanel=new ContainingBranchesPanel();
  myMessagePanel=new MessagePanel();
  myLoadingPanel=new JBLoadingPanel(new BorderLayout(),logDataHolder,ProgressWindow.DEFAULT_PROGRESS_DIALOG_POSTPONE_TIME_MILLIS);
  JPanel header=new NonOpaquePanel(new BorderLayout());
  header.add(myRefsPanel,BorderLayout.NORTH);
  header.add(myHashAuthorPanel,BorderLayout.SOUTH);
  myLoadingPanel.add(header,BorderLayout.NORTH);
  myLoadingPanel.add(scrollPane,BorderLayout.CENTER);
  myLoadingPanel.add(myContainingBranchesPanel,BorderLayout.SOUTH);
  myLoadingPanel.setOpaque(false);
  setLayout(new CardLayout());
  add(myLoadingPanel,STANDARD_LAYER);
  add(myMessagePanel,MESSAGE_LAYER);
  setBorder(BorderFactory.createEmptyBorder(0,5,0,5));
  showMessage("No commits selected");
}
