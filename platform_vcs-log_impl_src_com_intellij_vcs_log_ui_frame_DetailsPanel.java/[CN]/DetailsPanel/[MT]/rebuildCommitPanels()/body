{
  myEmptyText.setText("");
  int selectionLength=myGraphTable.getSelectedRows().length;
  int count=0;
  for (int i=0, prevCount=myMainContentPanel.getComponentCount(); i < Math.min(selectionLength,MAX_ROWS); i++) {
    Component c=count < prevCount ? myMainContentPanel.getComponent(count) : null;
    if (c instanceof SeparatorComponent) {
      count++;
      c=count < prevCount ? myMainContentPanel.getComponent(count) : null;
    }
    CommitPanel commitPanel;
    if (c instanceof CommitPanel) {
      count++;
    }
 else {
      while (count < myMainContentPanel.getComponentCount()) {
        myMainContentPanel.remove(count);
      }
      commitPanel=new CommitPanel();
      if (i > 0) {
        myMainContentPanel.add(new SeparatorComponent(1,OnePixelDivider.BACKGROUND,null));
        count++;
      }
      myMainContentPanel.add(commitPanel);
      count++;
    }
  }
  while (count < myMainContentPanel.getComponentCount()) {
    myMainContentPanel.remove(count);
  }
  if (selectionLength > MAX_ROWS) {
    myMainContentPanel.add(new SeparatorComponent(0,OnePixelDivider.BACKGROUND,null));
    JBLabel label=new JBLabel("  (showing " + MAX_ROWS + " of "+ selectionLength+ " selected commits)");
    label.setFont(getDataPanelFont());
    myMainContentPanel.add(label);
  }
  for (int i=myMainContentPanel.getComponentCount() - 1; i >= 0; i--) {
    ((JComponent)myMainContentPanel.getComponent(i)).setAlignmentX(LEFT_ALIGNMENT);
  }
}
