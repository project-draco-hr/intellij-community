{
  settings.PREFER_LONGER_NAMES=myCbPreferLongerNames.isSelected();
  settings.FIELD_NAME_PREFIX=setPrefixSuffix(myFieldPrefixField.getText(),true);
  settings.STATIC_FIELD_NAME_PREFIX=setPrefixSuffix(myStaticFieldPrefixField.getText(),true);
  settings.PARAMETER_NAME_PREFIX=setPrefixSuffix(myParameterPrefixField.getText(),true);
  settings.LOCAL_VARIABLE_NAME_PREFIX=setPrefixSuffix(myLocalVariablePrefixField.getText(),true);
  settings.FIELD_NAME_SUFFIX=setPrefixSuffix(myFieldSuffixField.getText(),false);
  settings.STATIC_FIELD_NAME_SUFFIX=setPrefixSuffix(myStaticFieldSuffixField.getText(),false);
  settings.PARAMETER_NAME_SUFFIX=setPrefixSuffix(myParameterSuffixField.getText(),false);
  settings.LOCAL_VARIABLE_NAME_SUFFIX=setPrefixSuffix(myLocalVariableSuffixField.getText(),false);
  settings.LINE_COMMENT_AT_FIRST_COLUMN=myCbLineCommentAtFirstColumn.isSelected();
  settings.BLOCK_COMMENT_AT_FIRST_COLUMN=myCbBlockCommentAtFirstColumn.isSelected();
  settings.GENERATE_FINAL_LOCALS=myCbGenerateFinalLocals.isSelected();
  settings.GENERATE_FINAL_PARAMETERS=myCbGenerateFinalParameters.isSelected();
  settings.USE_EXTERNAL_ANNOTATIONS=myCbUseExternalAnnotations.isSelected();
  settings.INSERT_OVERRIDE_ANNOTATION=myInsertOverrideAnnotationCheckBox.isSelected();
  settings.REPEAT_SYNCHRONIZED=myRepeatSynchronizedCheckBox.isSelected();
  myMembersOrderList.apply(settings);
  for (  Project project : ProjectManager.getInstance().getOpenProjects()) {
    DaemonCodeAnalyzer.getInstance(project).settingsChanged();
  }
}
