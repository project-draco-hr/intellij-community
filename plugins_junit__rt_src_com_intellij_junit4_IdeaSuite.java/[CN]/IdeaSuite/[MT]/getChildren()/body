{
  final List children=new ArrayList(super.getChildren());
  boolean containsSuiteInside=false;
  for (Iterator iterator=children.iterator(); iterator.hasNext(); ) {
    Object child=iterator.next();
    if (isSuite(child)) {
      containsSuiteInside=true;
      break;
    }
  }
  if (!containsSuiteInside)   return children;
  final Set allNames=new HashSet();
  for (Iterator iterator=children.iterator(); iterator.hasNext(); ) {
    final Object child=iterator.next();
    allNames.add(describeChild((Runner)child).getDisplayName());
  }
  for (Iterator iterator=children.iterator(); iterator.hasNext(); ) {
    final Object child=iterator.next();
    if (isSuite(child)) {
      skipSuiteComponents(allNames,child);
    }
  }
  for (Iterator iterator=children.iterator(); iterator.hasNext(); ) {
    Object child=iterator.next();
    if (!isSuite(child) && !allNames.contains(describeChild((Runner)child).getDisplayName())) {
      iterator.remove();
    }
  }
  return children;
}
