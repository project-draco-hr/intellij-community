{
  final List<PyClassLikeType> results=Lists.newArrayList();
  final PyClassLikeType ownMeta=getMetaClassType(context,false);
  if (ownMeta != null) {
    results.add(ownMeta);
  }
  for (  PyClassLikeType ancestor : myClass.getAncestorTypes(context)) {
    if (ancestor != null) {
      final PyClassLikeType ancestorMeta=ancestor.getMetaClassType(context,false);
      if (ancestorMeta != null) {
        results.add(ancestorMeta);
      }
    }
  }
  return results;
}
