{
  if (!inherited) {
    return PyUtil.as(myClass.getMetaClassType(context),PyClassLikeType.class);
  }
  final List<PyClassLikeType> metaClassTypes=getAllExplicitMetaClassTypes(context);
  final PyClassLikeType mostDerivedMeta=getMostDerivedClassType(metaClassTypes,context);
  return mostDerivedMeta != null ? mostDerivedMeta : PyBuiltinCache.getInstance(myClass).getObjectType("type");
}
