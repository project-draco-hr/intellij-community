{
  if (classTypes.isEmpty()) {
    return null;
  }
  return Collections.max(classTypes,new Comparator<PyClassLikeType>(){
    @Override public int compare(    @Nullable PyClassLikeType t1,    @Nullable PyClassLikeType t2){
      if (t1 == t2 || t1 != null && t1.equals(t2)) {
        return 0;
      }
      if (t1 != null && Sets.newHashSet(t1.getAncestorTypes(context)).contains(t2)) {
        return 1;
      }
 else       if (t2 != null && Sets.newHashSet(t2.getAncestorTypes(context)).contains(t1)) {
        return -1;
      }
 else {
        return 0;
      }
    }
  }
);
}
