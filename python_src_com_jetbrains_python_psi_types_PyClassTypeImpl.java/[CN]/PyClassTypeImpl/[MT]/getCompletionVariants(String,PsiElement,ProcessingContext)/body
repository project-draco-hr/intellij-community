{
  Set<PyClassType> visited=context.get(CTX_VISITED);
  if (visited == null) {
    visited=new HashSet<PyClassType>();
    context.put(CTX_VISITED,visited);
  }
  if (visited.contains(this)) {
    return ArrayUtil.EMPTY_OBJECT_ARRAY;
  }
  visited.add(this);
  Set<String> namesAlready=context.get(CTX_NAMES);
  if (namesAlready == null) {
    namesAlready=new HashSet<String>();
  }
  List<Object> ret=new ArrayList<Object>();
  boolean suppressParentheses=context.get(CTX_SUPPRESS_PARENTHESES) != null;
  addOwnClassMembers(location,namesAlready,suppressParentheses,ret);
  final TypeEvalContext typeEvalContext=TypeEvalContext.userInitiated(location != null ? CompletionUtil.getOriginalOrSelf(location).getContainingFile() : null);
  addInheritedMembers(prefix,location,namesAlready,context,ret,typeEvalContext);
  for (  PyClassMembersProvider provider : Extensions.getExtensions(PyClassMembersProvider.EP_NAME)) {
    for (    PyCustomMember member : provider.getMembers(this,location)) {
      final String name=member.getName();
      if (!namesAlready.contains(name)) {
        LookupElementBuilder lookupElementBuilder=LookupElementBuilder.create(name).withIcon(member.getIcon()).withTypeText(getName());
        if (member.isFunction()) {
          lookupElementBuilder=lookupElementBuilder.withInsertHandler(ParenthesesInsertHandler.NO_PARAMETERS);
          lookupElementBuilder.withTailText("()");
        }
        ret.add(lookupElementBuilder);
      }
    }
  }
  if (!myClass.isNewStyleClass()) {
    final PyBuiltinCache cache=PyBuiltinCache.getInstance(myClass);
    final PyClassType classobjType=cache.getOldstyleClassobjType();
    if (classobjType != null) {
      ret.addAll(Arrays.asList(classobjType.getCompletionVariants(prefix,location,context)));
    }
  }
  if (isDefinition() && myClass.isNewStyleClass()) {
    final PyClassLikeType typeType=getMetaClassType(typeEvalContext,true);
    if (typeType != null) {
      Collections.addAll(ret,typeType.getCompletionVariants(prefix,location,context));
    }
  }
  return ret.toArray();
}
