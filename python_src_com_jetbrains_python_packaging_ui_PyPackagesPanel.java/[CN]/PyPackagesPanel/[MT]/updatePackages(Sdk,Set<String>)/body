{
  myPackagesTable.setPaintBusy(true);
  final Application application=ApplicationManager.getApplication();
  application.executeOnPooledThread(new Runnable(){
    @Override public void run(){
      List<PyPackage> packages=Lists.newArrayList();
      if (selectedSdk != null) {
        try {
          packages=PyPackageManager.getInstance(selectedSdk).getPackages();
        }
 catch (        PyExternalProcessException e) {
        }
 finally {
          final List<PyPackage> finalPackages=packages;
          application.invokeLater(new Runnable(){
            @Override public void run(){
              final Map<String,String> cache=PyPIPackageUtil.getPyPIPackages();
              if (selectedSdk == mySelectedSdk) {
                myPackagesTableModel.getDataVector().clear();
                for (                PyPackage pyPackage : finalPackages) {
                  if (installed != null) {
                    installed.add(pyPackage.getName());
                  }
                  final String version=cache.get(pyPackage.getName());
                  myPackagesTableModel.addRow(new Object[]{pyPackage,pyPackage.getVersion(),version == null ? "" : version});
                }
                myPackagesTable.setPaintBusy(false);
              }
            }
          }
,ModalityState.any());
        }
      }
    }
  }
);
}
