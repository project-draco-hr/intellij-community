{
  @NonNls String text="public class Test {\n" + "}";
  myVFile=ApplicationManager.getApplication().runWriteAction(new Computable<VirtualFile>(){
    @Override public VirtualFile compute(){
      try {
        VirtualFile file=getSourceRoot().createChildData(null,getTestName(false) + ".txt");
        VfsUtil.saveText(file,text);
        return file;
      }
 catch (      IOException e) {
        throw new RuntimeException(e);
      }
    }
  }
);
  PsiDocumentManager.getInstance(getProject()).commitAllDocuments();
  Bookmark bookmark=getManager().addTextBookmark(myVFile,1,"xxx");
  assertNotNull(bookmark);
  LeakHunter.checkLeak(getManager(),Document.class);
  Document document=FileDocumentManager.getInstance().getDocument(myVFile);
  assertNotNull(document);
  PsiDocumentManager.getInstance(getProject()).getPsiFile(document);
  new WriteCommandAction.Simple(getProject()){
    @Override protected void run() throws Throwable {
      document.insertString(0,"line 0\n");
    }
  }
.execute().throwException();
  assertEquals(2,bookmark.getLine());
  myEditor=createEditor(myVFile);
  checkBookmarkNavigation(bookmark);
}
