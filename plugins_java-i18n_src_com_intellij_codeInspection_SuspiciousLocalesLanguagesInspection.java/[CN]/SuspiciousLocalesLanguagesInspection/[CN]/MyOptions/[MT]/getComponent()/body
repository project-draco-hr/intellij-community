{
  final JPanel panel=new JPanel(new BorderLayout());
  panel.add(new JLabel(PropertiesBundle.message("dissociate.resource.bundle.quick.fix.options.label")),BorderLayout.NORTH);
  panel.add(ToolbarDecorator.createDecorator(myAdditionalLocalesList).setAddAction(new AnActionButtonRunnable(){
    @Override public void run(    AnActionButton button){
      Messages.showInputDialog(panel,PropertiesBundle.message("dissociate.resource.bundle.quick.fix.options.input.text"),PropertiesBundle.message("dissociate.resource.bundle.quick.fix.options.input.title"),null,"",new InputValidator(){
        @Override public boolean checkInput(        String inputString){
          return 1 < inputString.length() && inputString.length() < 9 && !myAdditionalLanguages.contains(inputString);
        }
        @Override public boolean canClose(        String inputString){
          if (inputString != null) {
            myAdditionalLanguages.add(inputString);
            ((MyListModel)myAdditionalLocalesList.getModel()).fireContentsChanged();
          }
          return true;
        }
      }
);
    }
  }
).setRemoveAction(new AnActionButtonRunnable(){
    @Override public void run(    AnActionButton button){
      final int index=myAdditionalLocalesList.getSelectedIndex();
      if (index > -1 && index < myAdditionalLanguages.size()) {
        myAdditionalLanguages.remove(index);
        ((MyListModel)myAdditionalLocalesList.getModel()).fireContentsChanged();
      }
    }
  }
).setPreferredSize(new Dimension(-1,100)).disableUpDownActions().createPanel(),BorderLayout.CENTER);
  return panel;
}
