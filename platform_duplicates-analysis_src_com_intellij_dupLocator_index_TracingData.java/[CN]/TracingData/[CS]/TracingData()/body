{
  PersistentHashMap<Integer,Integer> lkeys=null;
  try {
    lkeys=createOrOpenMap();
    flushingFuture=pool.scheduleWithFixedDelay(new Runnable(){
      @Override public void run(){
        if (keys.isDirty() && !keys.isClosed()) {
          keys.force();
        }
      }
    }
,5,5,TimeUnit.SECONDS);
    ShutDownTracker.getInstance().registerShutdownTask(new Runnable(){
      @Override public void run(){
        flushingFuture.cancel(false);
      }
    }
);
  }
 catch (  IOException ex) {
    ex.printStackTrace();
  }
  keys=lkeys;
}
