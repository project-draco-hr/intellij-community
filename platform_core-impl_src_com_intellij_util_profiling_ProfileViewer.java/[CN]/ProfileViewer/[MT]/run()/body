{
  List<String> list=new ArrayList<String>();
  File dir=new File("/users/maxmedvedev/work/resolve_info");
  for (  File file : dir.listFiles()) {
    if (file.getName().endsWith(".txt")) {
      BufferedReader reader=new BufferedReader(new FileReader(file));
      try {
        while (true) {
          String line=reader.readLine();
          if (line == null)           break;
          list.add(line);
        }
      }
  finally {
        reader.close();
      }
    }
  }
  Occurrence root=new Occurrence();
  ArrayDeque<Occurrence> stack=new ArrayDeque<Occurrence>();
  stack.push(root);
  int curSpaces=0;
  for (  String line : list) {
    int spaces=leadingSpaces(line);
    if (curSpaces <= spaces) {
      while (curSpaces < spaces) {
        Occurrence occurrence=new Occurrence();
        stack.peek().addSubOccurrence(occurrence);
        stack.push(occurrence);
        curSpaces+=2;
      }
      Occurrence occurrence=new Occurrence();
      occurrence.setData(line.trim());
      stack.peek().addSubOccurrence(occurrence);
    }
 else {
      stack.pop().setData(line);
      curSpaces-=2;
    }
  }
  List<Ref> refs=new ArrayList<Ref>(map.values());
  ContainerUtil.sort(refs,new Comparator<Ref>(){
    @Override public int compare(    Ref ref1,    Ref ref2){
      return ref2.totalTime - ref1.totalTime;
    }
  }
);
  int var=1;
}
