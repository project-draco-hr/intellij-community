{
  final Boolean alreadyMentioned=myPossibleClasses.get(containingClass);
  if (alreadyMentioned == Boolean.TRUE)   return;
  if (alreadyMentioned == null) {
    if (!members.isEmpty()) {
      list.add(members.iterator().next());
    }
    myPossibleClasses.put(containingClass,false);
  }
  for (  T member : members) {
    if (!PsiUtil.isAccessible(myPlace.getProject(),member,myPlace,containingClass)) {
      continue;
    }
    if (isApplicable(member,myPlace)) {
      applicableList.add(member);
      myPossibleClasses.put(containingClass,true);
      break;
    }
  }
}
