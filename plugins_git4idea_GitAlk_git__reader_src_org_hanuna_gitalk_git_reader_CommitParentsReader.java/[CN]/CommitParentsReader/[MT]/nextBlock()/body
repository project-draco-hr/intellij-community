{
  final List<TimestampCommitParents> commitParentsList=new ArrayList<TimestampCommitParents>();
  final MyTimer gitThink=new MyTimer("gitThink");
  final MyTimer readTimer=new MyTimer("read commit parents");
  ProcessOutputReader outputReader=new ProcessOutputReader(progressUpdater,new Executor<String>(){
    private boolean wasReadFirstLine=false;
    @Override public void execute(    String key){
      if (!wasReadFirstLine) {
        wasReadFirstLine=true;
        gitThink.print();
        readTimer.clear();
      }
      TimestampCommitParents commitParents=CommitParser.parseTimestampParentHashes(key);
      commitParentsList.add(commitParents);
    }
  }
);
  if (lastTimeStamp == 0) {
    outputReader.startRead(GitProcessFactory.firstPart(COMMIT_BLOCK_SIZE));
  }
 else {
    outputReader.startRead(GitProcessFactory.logPart(lastTimeStamp,COMMIT_BLOCK_SIZE));
  }
  return commitParentsList;
}
