{
  if (StringUtil.isEmpty(result)) {
    return;
  }
  final SvnInfoHandler[] infoHandler=new SvnInfoHandler[1];
  infoHandler[0]=new SvnInfoHandler(base,new Consumer<SVNInfo>(){
    @Override public void consume(    SVNInfo info){
      try {
        handler.handleInfo(info);
      }
 catch (      SVNException e) {
        throw new SvnExceptionWrapper(e);
      }
    }
  }
);
  try {
    SAXParser parser=SAXParserFactory.newInstance().newSAXParser();
    parser.parse(new ByteArrayInputStream(result.getBytes(CharsetToolkit.UTF8_CHARSET)),infoHandler[0]);
  }
 catch (  SvnExceptionWrapper e) {
    throw (SVNException)e.getCause();
  }
catch (  IOException e) {
    throw new SVNException(SVNErrorMessage.create(SVNErrorCode.IO_ERROR),e);
  }
catch (  ParserConfigurationException e) {
    throw new SVNException(SVNErrorMessage.create(SVNErrorCode.IO_ERROR),e);
  }
catch (  SAXException e) {
    throw new SVNException(SVNErrorMessage.create(SVNErrorCode.IO_ERROR),e);
  }
}
