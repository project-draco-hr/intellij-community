{
  if (model instanceof InstalledPluginsTableModel) {
    InstalledPluginsTableModel installedModel=(InstalledPluginsTableModel)model;
    Set<PluginId> required=installedModel.getRequiredPlugins(descriptor.getPluginId());
    if (required != null && required.size() > 0) {
      StringBuilder sb=new StringBuilder();
      if (!installedModel.isLoaded(descriptor.getPluginId())) {
        sb.append(IdeBundle.message("plugin.manager.incompatible.not.loaded.tooltip")).append('\n');
      }
      if (required.contains(PluginId.getId("com.intellij.modules.ultimate"))) {
        sb.append(IdeBundle.message("plugin.manager.incompatible.ultimate.tooltip"));
      }
 else {
        String deps=StringUtil.join(required,new Function<PluginId,String>(){
          @Override public String fun(          PluginId id){
            IdeaPluginDescriptor plugin=PluginManager.getPlugin(id);
            return plugin != null ? plugin.getName() : id.getIdString();
          }
        }
,", ");
        sb.append(IdeBundle.message("plugin.manager.incompatible.deps.tooltip",required,deps));
      }
      return sb.toString();
    }
  }
  return IdeBundle.message("plugin.manager.incompatible.tooltip",ApplicationNamesInfo.getInstance().getFullProductName());
}
