{
  if (myPluginDescriptor != null) {
    Color fg=UIUtil.getTableForeground(isSelected);
    Color bg=UIUtil.getTableBackground(isSelected);
    Color grayedFg=isSelected ? fg : new JBColor(Gray._130,Gray._120);
    myPanel.setBackground(bg);
    myName.setForeground(fg);
    myCategory.setForeground(grayedFg);
    myStatus.setForeground(grayedFg);
    myLastUpdated.setForeground(grayedFg);
    myDownloads.setForeground(grayedFg);
    myName.clear();
    myName.setOpaque(false);
    String pluginName=myPluginDescriptor.getName() + "  ";
    Object query=table.getClientProperty(SpeedSearchSupply.SEARCH_QUERY_KEY);
    if (query instanceof String) {
      Matcher matcher=NameUtil.buildMatcher("*" + query,NameUtil.MatchingCaseSensitivity.NONE);
      SimpleTextAttributes attr=new SimpleTextAttributes(UIUtil.getListBackground(isSelected),UIUtil.getListForeground(isSelected),JBColor.RED,SimpleTextAttributes.STYLE_PLAIN);
      SpeedSearchUtil.appendColoredFragmentForMatcher(pluginName,myName,attr,matcher,UIUtil.getTableBackground(isSelected),true);
    }
 else {
      myName.append(pluginName);
    }
    String category=myPluginDescriptor.getCategory();
    if (category != null) {
      myCategory.setText(category.toUpperCase(Locale.getDefault()));
    }
 else     if (!myPluginsView) {
      myCategory.setText(AvailablePluginsManagerMain.N_A);
    }
    myStatus.setIcon(AllIcons.Nodes.Plugin);
    if (myPluginDescriptor.isBundled()) {
      myCategory.setText(StringUtil.join(Arrays.asList(myCategory.getText(),"[Bundled]")," "));
      myStatus.setIcon(AllIcons.Nodes.PluginJB);
    }
    String vendor=myPluginDescriptor.getVendor();
    if (vendor != null && StringUtil.containsIgnoreCase(vendor,"jetbrains")) {
      myStatus.setIcon(AllIcons.Nodes.PluginJB);
    }
    String downloads=myPluginDescriptor.getDownloads();
    if (downloads != null && myPluginDescriptor instanceof PluginNode) {
      if (downloads.length() > 3) {
        downloads=new DecimalFormat("#,###").format(Integer.parseInt(downloads));
      }
      myDownloads.setText(downloads);
      myRating.setRate(((PluginNode)myPluginDescriptor).getRating());
      myLastUpdated.setText(DateFormatUtil.formatBetweenDates(((PluginNode)myPluginDescriptor).getDate(),System.currentTimeMillis()));
    }
    PluginId pluginId=myPluginDescriptor.getPluginId();
    IdeaPluginDescriptor installed=PluginManager.getPlugin(pluginId);
    if (installed != null && ((IdeaPluginDescriptorImpl)installed).isDeleted()) {
      myStatus.setIcon(AllIcons.Nodes.PluginRestart);
      if (!isSelected)       myName.setForeground(FileStatus.DELETED.getColor());
      myPanel.setToolTipText(IdeBundle.message("plugin.manager.uninstalled.tooltip"));
    }
 else     if (ourState.wasInstalled(pluginId)) {
      myStatus.setIcon(AllIcons.Nodes.PluginRestart);
      if (!isSelected)       myName.setForeground(FileStatus.ADDED.getColor());
      myPanel.setToolTipText(IdeBundle.message("plugin.manager.installed.tooltip"));
    }
 else     if (ourState.wasUpdated(pluginId)) {
      myStatus.setIcon(AllIcons.Nodes.PluginRestart);
      if (!isSelected)       myName.setForeground(FileStatus.ADDED.getColor());
      myPanel.setToolTipText(IdeBundle.message("plugin.manager.updated.tooltip"));
    }
 else     if (ourState.hasNewerVersion(pluginId)) {
      myStatus.setIcon(AllIcons.Nodes.Pluginobsolete);
      if (!isSelected)       myName.setForeground(FileStatus.MODIFIED.getColor());
      if (!myPluginsView && installed != null) {
        myPanel.setToolTipText(IdeBundle.message("plugin.manager.new.version.tooltip",installed.getVersion()));
      }
 else {
        myPanel.setToolTipText(IdeBundle.message("plugin.manager.update.available.tooltip"));
      }
    }
 else     if (isIncompatible(myPluginDescriptor,table.getModel())) {
      if (!isSelected)       myName.setForeground(JBColor.RED);
      myPanel.setToolTipText(whyIncompatible(myPluginDescriptor,table.getModel()));
    }
 else     if (!myPluginDescriptor.isEnabled() && myPluginsView) {
      myStatus.setIcon(IconLoader.getDisabledIcon(myStatus.getIcon()));
    }
  }
  return myPanel;
}
