{
  String valueString=value.getValueString();
switch (value.getType()) {
case OBJECT:
case NODE:
    computeObjectPresentation(value,node);
  break;
case FUNCTION:
{
  node.setPresentation(getIcon(),new ObjectValuePresentation(trimFunctionDescription(value)),true);
}
break;
case ARRAY:
{
if (valueString.endsWith("]") && ARRAY_DESCRIPTION_PATTERN.matcher(valueString).find()) {
node.setPresentation(getIcon(),null,valueString,true);
}
 else {
ObsolescentAsyncResults.consume(context.getEvaluateContext().evaluate("a.length",Collections.<String,EvaluateContextAdditionalParameter>singletonMap("a",value)),node,new PairConsumer<Value,XValueNode>(){
  @Override public void consume(  Value lengthValue,  XValueNode node){
    node.setPresentation(getIcon(),null,"Array[" + lengthValue.getValueString() + ']',true);
  }
}
);
}
}
break;
case BOOLEAN:
case NULL:
case UNDEFINED:
node.setPresentation(getIcon(),new XKeywordValuePresentation(valueString),false);
break;
case NUMBER:
node.setPresentation(getIcon(),createNumberPresentation(valueString),false);
break;
case STRING:
{
node.setPresentation(getIcon(),new XStringValuePresentation(valueString),false);
if (value.isTruncated() || valueString.length() > XValueNode.MAX_VALUE_LENGTH) {
node.setFullValueEvaluator(new MyFullValueEvaluator(value.getActualLength()));
}
}
break;
default :
node.setPresentation(getIcon(),null,valueString,true);
}
}
