{
  List<Language> languages=LanguageUtil.getFileLanguages();
  final List<String> ids=ContainerUtil.newArrayList(getLastUsedLanguagesIds(project));
  if (context != null) {
    ids.add(context.getID());
  }
  if (ids.isEmpty()) {
    ids.add(StdLanguages.TEXT.getID());
  }
  ContainerUtil.sort(languages,new Comparator<Language>(){
    @Override public int compare(    @NotNull Language o1,    @NotNull Language o2){
      int ind1=ids.indexOf(o1.getID());
      int ind2=ids.indexOf(o2.getID());
      if (ind1 == -1)       ind1=666;
      if (ind2 == -1)       ind2=666;
      return ind1 - ind2;
    }
  }
);
  BaseListPopupStep<Language> step=new BaseListPopupStep<Language>("Choose Language",languages){
    @NotNull @Override public String getTextFor(    @NotNull Language value){
      return value.getDisplayName();
    }
    @Override public boolean isSpeedSearchEnabled(){
      return true;
    }
    @Override public PopupStep onChosen(    Language selectedValue,    boolean finalChoice){
      onChoosen.consume(selectedValue);
      return null;
    }
    @Override public Icon getIconFor(    @NotNull Language language){
      LanguageFileType associatedLanguage=language.getAssociatedFileType();
      return associatedLanguage != null ? associatedLanguage.getIcon() : null;
    }
  }
;
  step.setDefaultOptionIndex(0);
  return tweakSizeToPreferred(JBPopupFactory.getInstance().createListPopup(step));
}
