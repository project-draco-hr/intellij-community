{
  try {
    GitSimpleHandler h=new GitSimpleHandler(myProject,root,GitCommand.LS_FILES);
    h.addParameters("--exclude-standard","--unmerged","-z");
    h.endOptions();
    h.addRelativeFiles(Collections.singleton(file));
    String output=h.run();
    StringScanner s=new StringScanner(output);
    String lastBlob=null;
    String currentBlob=null;
    String originalBlob=null;
    while (s.hasMoreData()) {
      s.spaceToken();
      String blob=s.spaceToken();
      int source=Integer.parseInt(s.tabToken());
      s.boundedToken('\u0000');
      if (source == theirsRevision(root)) {
        lastBlob=blob;
      }
 else       if (source == yoursRevision(root)) {
        currentBlob=blob;
      }
 else       if (source == ORIGINAL_REVISION_NUM) {
        originalBlob=blob;
      }
 else {
        throw new IllegalStateException("Unknown revision " + source + " for the file: "+ file);
      }
    }
    return Trinity.create(currentBlob,originalBlob,lastBlob);
  }
 catch (  VcsException e) {
    LOG.warn(e);
    return Trinity.create(null,null,null);
  }
}
