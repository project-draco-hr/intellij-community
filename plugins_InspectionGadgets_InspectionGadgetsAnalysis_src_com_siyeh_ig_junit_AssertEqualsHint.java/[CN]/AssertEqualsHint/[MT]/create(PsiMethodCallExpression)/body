{
  final PsiReferenceExpression methodExpression=expression.getMethodExpression();
  @NonNls final String methodName=methodExpression.getReferenceName();
  if (!"assertEquals".equals(methodName)) {
    return null;
  }
  final PsiMethod method=expression.resolveMethod();
  if (method == null) {
    return null;
  }
  final PsiClass containingClass=method.getContainingClass();
  final boolean messageOnLastPosition=InheritanceUtil.isInheritor(containingClass,JUnitCommonClassNames.ORG_JUNIT_JUPITER_API_ASSERTIONS) || InheritanceUtil.isInheritor(containingClass,"org.testng.Assert");
  if (!InheritanceUtil.isInheritor(containingClass,JUnitCommonClassNames.JUNIT_FRAMEWORK_ASSERT) && !InheritanceUtil.isInheritor(containingClass,JUnitCommonClassNames.ORG_JUNIT_ASSERT) && !InheritanceUtil.isInheritor(containingClass,"org.testng.AssertJUnit")&& !messageOnLastPosition) {
    return null;
  }
  final PsiParameterList parameterList=method.getParameterList();
  final PsiParameter[] parameters=parameterList.getParameters();
  if (parameters.length < 2) {
    return null;
  }
  final PsiType firstParameterType=parameters[0].getType();
  final PsiExpressionList argumentList=expression.getArgumentList();
  final PsiExpression[] arguments=argumentList.getExpressions();
  final int argumentIndex;
  if (!messageOnLastPosition && firstParameterType.equalsToText(CommonClassNames.JAVA_LANG_STRING)) {
    if (arguments.length < 3) {
      return null;
    }
    argumentIndex=1;
  }
 else {
    if (arguments.length < 2) {
      return null;
    }
    argumentIndex=0;
  }
  return new AssertEqualsHint(argumentIndex,method,messageOnLastPosition ? JUnitCommonClassNames.ORG_JUNIT_JUPITER_API_ASSERTIONS : JUnitCommonClassNames.ORG_JUNIT_ASSERT);
}
