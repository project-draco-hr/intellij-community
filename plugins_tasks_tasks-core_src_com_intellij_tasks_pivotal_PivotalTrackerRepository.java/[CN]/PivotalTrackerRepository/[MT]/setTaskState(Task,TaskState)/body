{
  final String realId=getRealId(task.getId());
  if (realId == null)   return;
  final String stateName;
switch (state) {
case IN_PROGRESS:
    stateName="started";
  break;
case RESOLVED:
stateName="finished";
break;
default :
return;
}
String url=API_URL + "/projects/" + myProjectId+ "/stories/"+ realId;
url+="?" + encodeUrl("story[current_state]") + "="+ encodeUrl(stateName);
LOG.info("Updating issue state by id: " + url);
final HttpMethod method=doREST(url,HTTPMethod.PUT);
final InputStream stream=method.getResponseBodyAsStream();
final Element element=new SAXBuilder(false).build(stream).getRootElement();
if (!element.getName().equals("story")) {
if (element.getName().equals("errors")) {
throw new Exception(extractErrorMessage(element));
}
 else {
LOG.warn("Error setting state for: " + url + ", HTTP status code: "+ method.getStatusCode());
throw new Exception(String.format("Cannot set state '%s' for issue.",stateName));
}
}
}
