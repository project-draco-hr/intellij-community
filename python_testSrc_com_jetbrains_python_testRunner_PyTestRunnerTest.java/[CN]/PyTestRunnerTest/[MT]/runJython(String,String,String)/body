{
  final SimpleJavaSdkType sdkType=new SimpleJavaSdkType();
  final Sdk ideaJdk=sdkType.createJdk("tmp",SystemProperties.getJavaHome());
  SimpleJavaParameters parameters=new SimpleJavaParameters();
  parameters.setJdk(ideaJdk);
  parameters.setMainClass("org.python.util.jython");
  File jythonJar=new File(PathManager.getHomePath(),"plugins/python/lib/jython.jar");
  parameters.getClassPath().add(jythonJar.getPath());
  parameters.getProgramParametersList().addAll(args);
  parameters.setWorkingDirectory(workDir);
  parameters.getVMParametersList().add("-Dpython.path=" + pythonPath);
  final StringBuilder stdout=new StringBuilder();
  final StringBuilder stderr=new StringBuilder();
  final GeneralCommandLine commandLine=JdkUtil.setupJVMCommandLine(sdkType.getVMExecutablePath(ideaJdk),parameters,false);
  final OSProcessHandler processHandler=new OSProcessHandler(commandLine.createProcess(),commandLine.getCommandLineString()){
    @Override public void notifyTextAvailable(    String text,    Key outputType){
      if (outputType == ProcessOutputTypes.STDOUT) {
        stdout.append(text);
      }
 else       if (outputType == ProcessOutputTypes.STDERR) {
        stderr.append(text);
      }
    }
  }
;
  processHandler.startNotify();
  processHandler.waitFor();
  return new Output(StringUtil.convertLineSeparators(stdout.toString(),"\n"),StringUtil.convertLineSeparators(stderr.toString(),"\n"));
}
