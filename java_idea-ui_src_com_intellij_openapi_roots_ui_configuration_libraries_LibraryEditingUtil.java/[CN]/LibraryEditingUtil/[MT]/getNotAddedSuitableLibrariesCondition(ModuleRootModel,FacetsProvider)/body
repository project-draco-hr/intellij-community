{
  final OrderEntry[] orderEntries=rootModel.getOrderEntries();
  final Set<Library> result=new HashSet<>(orderEntries.length);
  for (  OrderEntry orderEntry : orderEntries) {
    if (orderEntry instanceof LibraryOrderEntry && orderEntry.isValid()) {
      final LibraryImpl library=(LibraryImpl)((LibraryOrderEntry)orderEntry).getLibrary();
      if (library != null) {
        final Library source=library.getSource();
        result.add(source != null ? source : library);
      }
    }
  }
  return new Predicate<Library>(){
    @Override public boolean apply(    Library library){
      if (result.contains(library))       return false;
      if (library instanceof LibraryImpl) {
        final Library source=((LibraryImpl)library).getSource();
        if (source != null && result.contains(source))         return false;
      }
      PersistentLibraryKind<?> kind=((LibraryEx)library).getKind();
      if (kind != null) {
        LibraryType type=LibraryType.findByKind(kind);
        if (type != null && !type.isSuitableModule(rootModel.getModule(),facetsProvider)) {
          return false;
        }
      }
      return true;
    }
  }
;
}
