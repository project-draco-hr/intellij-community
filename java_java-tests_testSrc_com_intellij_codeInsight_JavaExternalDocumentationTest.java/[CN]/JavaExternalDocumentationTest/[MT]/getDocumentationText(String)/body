{
  int caretPosition=sourceEditorText.indexOf(EditorTestUtil.CARET_TAG);
  if (caretPosition >= 0) {
    sourceEditorText=sourceEditorText.substring(0,caretPosition) + sourceEditorText.substring(caretPosition + EditorTestUtil.CARET_TAG.length());
  }
  PsiFile psiFile=PsiFileFactory.getInstance(myProject).createFileFromText(JavaLanguage.INSTANCE,sourceEditorText);
  Document document=PsiDocumentManager.getInstance(myProject).getDocument(psiFile);
  assertNotNull(document);
  Editor editor=EditorFactory.getInstance().createEditor(document,myProject);
  try {
    if (caretPosition >= 0) {
      editor.getCaretModel().moveToOffset(caretPosition);
    }
    DocumentationManager documentationManager=DocumentationManager.getInstance(myProject);
    MockDocumentationComponent documentationComponent=new MockDocumentationComponent(documentationManager);
    try {
      documentationManager.setDocumentationComponent(documentationComponent);
      documentationManager.showJavaDocInfo(editor,psiFile,false);
      waitTillDone(documentationManager.getLastAction());
      return documentationComponent.getText();
    }
  finally {
      Disposer.dispose(documentationComponent);
    }
  }
  finally {
    EditorFactory.getInstance().releaseEditor(editor);
  }
}
