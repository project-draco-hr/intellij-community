{
  if (PsiUtil.getLanguageLevel(aClass).isAtLeast(LanguageLevel.JDK_1_8)) {
    final PsiClassType baseClassType=aClass.getBaseClassType();
    final PsiClassType.ClassResolveResult resolveResult=baseClassType.resolveGenerics();
    final PsiClass baseClass=resolveResult.getElement();
    if (baseClass == null || !reportNotAnnotatedInterfaces && !AnnotationUtil.isAnnotated(baseClass,CommonClassNames.JAVA_LANG_FUNCTIONAL_INTERFACE,false,false)) {
      return false;
    }
    final PsiMethod interfaceMethod=LambdaUtil.getFunctionalInterfaceMethod(resolveResult);
    if (interfaceMethod != null && (acceptParameterizedFunctionTypes || !interfaceMethod.hasTypeParameters())) {
      final PsiMethod[] methods=aClass.getMethods();
      if (methods.length == 1 && aClass.getFields().length == 0 && aClass.getInnerClasses().length == 0 && aClass.getInitializers().length == 0) {
        final PsiMethod method=methods[0];
        return method.getBody() != null && method.getDocComment() == null && !hasForbiddenRefsInsideBody(method,aClass) && !hasRuntimeAnnotations(method,ignoredRuntimeAnnotations) && !method.hasModifierProperty(PsiModifier.SYNCHRONIZED);
      }
    }
  }
  return false;
}
