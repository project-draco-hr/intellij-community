{
  if (PsiUtil.getLanguageLevel(aClass).isAtLeast(LanguageLevel.JDK_1_8)) {
    final PsiMethod interfaceMethod=LambdaUtil.getFunctionalInterfaceMethod(aClass.getBaseClassType());
    if (interfaceMethod != null && (acceptParameterizedFunctionTypes || !interfaceMethod.hasTypeParameters())) {
      final PsiMethod[] methods=aClass.getMethods();
      if (methods.length == 1 && aClass.getFields().length == 0 && aClass.getInnerClasses().length == 0 && aClass.getInitializers().length == 0) {
        final PsiMethod method=methods[0];
        return method.getBody() != null && !hasForbiddenRefsInsideBody(method,aClass) && !hasRuntimeAnnotations(method) && !method.hasModifierProperty(PsiModifier.SYNCHRONIZED);
      }
    }
  }
  return false;
}
