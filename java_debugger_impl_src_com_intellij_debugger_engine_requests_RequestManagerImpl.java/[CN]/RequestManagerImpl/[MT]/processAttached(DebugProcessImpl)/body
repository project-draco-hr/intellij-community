{
  myEventRequestManager=myDebugProcess.getVirtualMachineProxy().eventRequestManager();
  process.getManagerThread().schedule(new DebuggerCommandImpl(){
    protected void action() throws Exception {
      Project project=myDebugProcess.getProject();
      final BreakpointManager breakpointManager=DebuggerManagerEx.getInstanceEx(project).getBreakpointManager();
      for (      final Breakpoint breakpoint : breakpointManager.getBreakpoints()) {
        breakpoint.createRequest(myDebugProcess);
      }
      AccessToken token=ReadAction.start();
      try {
        JavaBreakpointAdapter adapter=new JavaBreakpointAdapter(project);
        for (        XLineBreakpoint<XBreakpointProperties> breakpoint : XDebuggerManager.getInstance(project).getBreakpointManager().getBreakpoints(JavaBreakpointType.class)) {
          adapter.getOrCreate(breakpoint).createRequest(myDebugProcess);
        }
      }
  finally {
        token.finish();
      }
    }
  }
);
}
