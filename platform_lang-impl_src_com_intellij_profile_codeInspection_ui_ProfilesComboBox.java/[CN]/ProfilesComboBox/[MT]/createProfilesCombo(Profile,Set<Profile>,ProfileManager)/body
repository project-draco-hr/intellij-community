{
  reloadProfiles(profileManager,availableProfiles,selectedProfile);
  setRenderer(new DefaultListCellRenderer(){
    @Override public Component getListCellRendererComponent(    JList list,    Object value,    int index,    boolean isSelected,    boolean cellHasFocus){
      final Component rendererComponent=super.getListCellRendererComponent(list,value,index,isSelected,cellHasFocus);
      if (value instanceof Profile) {
        final Profile profile=(Profile)value;
        setText(profile.getName());
        setIcon(profile.isProjectLevel() ? AllIcons.General.ProjectSettings : AllIcons.General.Settings);
      }
 else       if (value instanceof String) {
        setText((String)value);
      }
      return rendererComponent;
    }
  }
);
  addItemListener(new ItemListener(){
    private Object myDeselectedItem=null;
    @Override public void itemStateChanged(    @NotNull ItemEvent e){
      if (myFrozenProfilesCombo) {
        return;
      }
 else       if (ItemEvent.SELECTED == e.getStateChange()) {
        final Object item=e.getItem();
        if (profileManager instanceof ProjectProfileManager && item instanceof Profile && !((Profile)item).isProjectLevel()) {
          if (Messages.showOkCancelDialog(InspectionsBundle.message("inspection.new.profile.ide.to.project.warning.message"),InspectionsBundle.message("inspection.new.profile.ide.to.project.warning.title"),Messages.getErrorIcon()) == Messages.OK) {
            final String newName=Messages.showInputDialog(InspectionsBundle.message("inspection.new.profile.text"),InspectionsBundle.message("inspection.new.profile.dialog.title"),Messages.getInformationIcon());
            final Object selectedItem=getSelectedItem();
            if (!StringUtil.isEmpty(newName) && selectedItem instanceof Profile) {
              if (ArrayUtil.find(profileManager.getAvailableProfileNames(),newName) == -1 && ArrayUtil.find(InspectionProfileManager.getInstance().getAvailableProfileNames(),newName) == -1) {
                saveNewProjectProfile(newName,(Profile)selectedItem,profileManager);
                return;
              }
 else {
                Messages.showErrorDialog(InspectionsBundle.message("inspection.unable.to.create.profile.message",newName),InspectionsBundle.message("inspection.unable.to.create.profile.dialog.title"));
              }
            }
          }
          setSelectedItem(myDeselectedItem);
        }
      }
 else {
        myDeselectedItem=e.getItem();
      }
    }
  }
);
}
