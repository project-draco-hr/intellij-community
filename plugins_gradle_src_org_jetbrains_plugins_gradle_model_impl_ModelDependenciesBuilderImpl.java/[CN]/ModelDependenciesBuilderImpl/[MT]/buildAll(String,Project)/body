{
  List<GradleDependency> dependencies=new ArrayList<GradleDependency>();
  for (  Configuration configuration : project.getConfigurations()) {
    for (    Dependency dependency : configuration.getDependencies()) {
      if (dependency instanceof ClientModule) {
        ClientModule clientModule=(ClientModule)dependency;
        for (        ModuleDependency moduleDependency : clientModule.getDependencies()) {
          dependencies.add(new GradleDependencyImpl(configuration.getName(),moduleDependency.getName(),moduleDependency.getGroup(),moduleDependency.getVersion()));
          ResolvedDependency resolvedDependency=findResolvedDependency(moduleDependency,configuration.getResolvedConfiguration().getFirstLevelModuleDependencies());
          if (resolvedDependency != null) {
            addTransitiveDependencies(dependencies,configuration.getName(),resolvedDependency.getChildren());
          }
        }
      }
      dependencies.add(new GradleDependencyImpl(configuration.getName(),dependency.getName(),dependency.getGroup(),dependency.getVersion()));
    }
  }
  return new ProjectDependenciesModelImpl(project.getPath(),dependencies);
}
