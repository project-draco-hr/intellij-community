{
  return new BaseInspectionVisitor(){
    @Override public void visitReferenceExpression(    GrReferenceExpression referenceExpression){
      super.visitReferenceExpression(referenceExpression);
      if (!PsiUtil.isLValue(referenceExpression))       return;
      final PsiElement resolved=referenceExpression.resolve();
      if (!GroovyRefactoringUtil.isLocalVariable(resolved))       return;
      if (isOtherTypeOrDifferent(referenceExpression,(GrVariable)resolved)) {
        final String message=message("local.var.0.is.reassigned",((GrNamedElement)resolved).getName());
        registerError(referenceExpression,message,LocalQuickFix.EMPTY_ARRAY,ProblemHighlightType.GENERIC_ERROR_OR_WARNING);
      }
    }
  }
;
}
