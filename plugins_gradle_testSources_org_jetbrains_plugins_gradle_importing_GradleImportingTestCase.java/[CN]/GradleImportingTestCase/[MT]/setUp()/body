{
  super.setUp();
  assumeThat(gradleVersion,versionMatcherRule.getMatcher());
  final String jdkHome=getJdkHome();
  if (jdkHome != null) {
    myGradleJdkName="Gradle JDK";
    assertNull("JDK " + myGradleJdkName + " already exists",ProjectJdkTable.getInstance().findJdk(myGradleJdkName));
    new WriteAction(){
      @Override protected void run(      @NotNull Result result) throws Throwable {
        VirtualFile jdkHomeDir=LocalFileSystem.getInstance().refreshAndFindFileByIoFile(new File(jdkHome));
        Sdk jdk=SdkConfigurationUtil.setupSdk(new Sdk[0],jdkHomeDir,JavaSdk.getInstance(),true,null,myGradleJdkName);
        assertNotNull("Cannot create JDK for " + jdkHome,jdk);
        SdkConfigurationUtil.addSdk(jdk);
      }
    }
.execute();
  }
  myProjectSettings=new GradleProjectSettings();
  GradleSettings.getInstance(myProject).setGradleVmOptions("-Xmx64m -XX:MaxPermSize=64m");
  System.setProperty(ExternalSystemExecutionSettings.REMOTE_PROCESS_IDLE_TTL_IN_MS_KEY,String.valueOf(GRADLE_DAEMON_TTL_MS));
  configureWrapper();
}
