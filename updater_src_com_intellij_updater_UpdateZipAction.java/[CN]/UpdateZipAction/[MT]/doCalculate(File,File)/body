{
  final Map<String,Long> oldCheckSums=new HashMap<>();
  final Map<String,Long> newCheckSums=new HashMap<>();
  processZipFile(olderFile,new Processor(){
    public void process(    ZipEntry entry,    InputStream in) throws IOException {
      oldCheckSums.put(entry.getName(),Digester.digestStream(in));
    }
  }
);
  processZipFile(newerFile,new Processor(){
    public void process(    ZipEntry entry,    InputStream in) throws IOException {
      newCheckSums.put(entry.getName(),Digester.digestStream(in));
    }
  }
);
  DiffCalculator.Result diff=DiffCalculator.calculate(oldCheckSums,newCheckSums,new LinkedList<>(),false);
  myFilesToCreate=diff.filesToCreate.keySet();
  myFilesToUpdate=diff.filesToUpdate.keySet();
  myFilesToDelete=diff.filesToDelete.keySet();
  return !(myFilesToCreate.isEmpty() && myFilesToUpdate.isEmpty() && myFilesToDelete.isEmpty());
}
