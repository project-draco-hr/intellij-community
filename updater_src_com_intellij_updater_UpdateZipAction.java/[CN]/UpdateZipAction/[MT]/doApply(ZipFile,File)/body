{
  File temp=Utils.createTempFile();
  FileOutputStream fileOut=new FileOutputStream(temp);
  try {
    final ZipOutputWrapper out=new ZipOutputWrapper(fileOut);
    out.setCompressionLevel(0);
    processZipFile(toFile,new Processor(){
      public void process(      ZipEntry entry,      InputStream in) throws IOException {
        String path=entry.getName();
        if (myFilesToDelete.contains(path))         return;
        if (myFilesToUpdate.contains(path)) {
          OutputStream entryOut=out.zipStream(path);
          try {
            applyDiff(Utils.findEntryInputStream(patchFile,myPath + "/" + path),in,entryOut);
          }
  finally {
            entryOut.close();
          }
        }
 else {
          out.zipEntry(entry,in);
        }
      }
    }
);
    for (    String each : myFilesToCreate) {
      InputStream in=Utils.getEntryInputStream(patchFile,myPath + "/" + each);
      try {
        out.zipEntry(each,in);
      }
  finally {
        in.close();
      }
    }
    out.finish();
  }
  finally {
    fileOut.close();
  }
  replaceUpdated(temp,toFile);
}
