{
  return ApplicationManager.getApplication().runReadAction(new Computable<MultiMap<Integer,String>>(){
    @Override public MultiMap<Integer,String> compute(){
      SourcePosition position=ContextUtil.getSourcePosition(context);
      if (position != null) {
        PsiElement element=position.getElementAt();
        PsiParameterListOwner method=DebuggerUtilsEx.getContainingMethod(element);
        if (method != null) {
          PsiParameterList params=method.getParameterList();
          MultiMap<Integer,String> res=new MultiMap<Integer,String>();
          int psiFirstLocalsSlot=getFirstLocalsSlot(method);
          int slot=Math.max(0,firstLocalsSlot - psiFirstLocalsSlot);
          for (int i=0; i < params.getParametersCount(); i++) {
            PsiParameter parameter=params.getParameters()[i];
            res.putValue(slot,parameter.getName());
            slot+=getTypeSlotSize(parameter.getType());
          }
          PsiElement body=method.getBody();
          if (body != null) {
            try {
              body.accept(new LocalVariableNameFinder(firstLocalsSlot,res,element));
            }
 catch (            Exception e) {
              LOG.info(e);
            }
          }
          return res;
        }
      }
      return MultiMap.empty();
    }
  }
);
}
