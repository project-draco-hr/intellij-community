{
  Map<DecompiledLocalVariable,Value> map=new LinkedHashMap<DecompiledLocalVariable,Value>();
  com.sun.jdi.Method method=frameProxy.location().method();
  final int firstLocalVariableSlot=getFirstLocalsSlot(method);
  List<Value> argValues=frameProxy.getArgumentValues();
  MultiMap<Integer,String> namesMap=calcNames(new SimpleStackFrameContext(frameProxy,process),firstLocalVariableSlot);
  int slot=0;
  for (  Value value : argValues) {
    map.put(new DecompiledLocalVariable(slot,true,null,namesMap.get(slot)),value);
    slot+=getTypeSlotSize(value.type().name());
  }
  if (!ourInitializationOk) {
    return map;
  }
  List<DecompiledLocalVariable> vars=collectVariablesFromBytecode(frameProxy,namesMap);
  StackFrame frame=frameProxy.getStackFrame();
  int size=vars.size();
  while (size > 0) {
    try {
      return fetchSlotValues(map,vars.subList(0,size),frame);
    }
 catch (    Exception e) {
      LOG.info(e);
    }
    size--;
  }
  return map;
}
