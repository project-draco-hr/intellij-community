{
  Map<DecompiledLocalVariable,Value> map=new LinkedHashMap<>();
  Location location=frameProxy.location();
  com.sun.jdi.Method method=location.method();
  final int firstLocalVariableSlot=getFirstLocalsSlot(method);
  MultiMap<Integer,String> namesMap=calcNames(new SimpleStackFrameContext(frameProxy,process),firstLocalVariableSlot);
  int slot=getFirstArgsSlot(method);
  List<String> typeNames=method.argumentTypeNames();
  List<Value> argValues=frameProxy.getArgumentValues();
  for (int i=0; i < argValues.size(); i++) {
    map.put(new DecompiledLocalVariable(slot,true,null,namesMap.get(slot)),argValues.get(i));
    slot+=getTypeSlotSize(typeNames.get(i));
  }
  if (!ourInitializationOk) {
    return map;
  }
  List<DecompiledLocalVariable> vars=collectVariablesFromBytecode(frameProxy.getVirtualMachine(),location,namesMap);
  StackFrame frame=frameProxy.getStackFrame();
  int size=vars.size();
  while (size > 0) {
    try {
      return fetchSlotValues(map,vars.subList(0,size),frame);
    }
 catch (    Exception e) {
      LOG.info(e);
    }
    size--;
  }
  return map;
}
