{
  try {
    DocumentCommitThread.getInstance().clearQueue();
    if (SwingUtilities.isEventDispatchThread()) {
      UIUtil.dispatchAllInvocationEvents();
    }
  }
 catch (  Exception e) {
    result.add(e);
  }
  try {
    if (myProject != null) {
      ApplicationManager.getApplication().runWriteAction(new Runnable(){
        @Override public void run(){
          ProjectManagerEx projectManager=ProjectManagerEx.getInstanceEx();
          if (projectManager instanceof ProjectManagerImpl) {
            Collection<Project> projectsStillOpen=projectManager.closeTestProject(myProject);
            if (!projectsStillOpen.isEmpty()) {
              Project project=projectsStillOpen.iterator().next();
              String message="Test project is not disposed: " + project + ";\n created in: "+ getCreationPlace(project);
              try {
                projectManager.closeAndDispose(project);
              }
 catch (              Exception e) {
              }
              throw new AssertionError(message);
            }
          }
          Disposer.dispose(myProject);
        }
      }
);
    }
  }
 catch (  Exception e) {
    result.add(e);
  }
 finally {
    myProject=null;
  }
}
