{
  Color separatorColor=marker.getLineSeparatorColor();
  LineSeparatorRenderer lineSeparatorRenderer=marker.getLineSeparatorRenderer();
  if (separatorColor == null && lineSeparatorRenderer == null) {
    return;
  }
  int line=myDocument.getLineNumber(marker.getLineSeparatorPlacement() == SeparatorPlacement.TOP ? marker.getStartOffset() : marker.getEndOffset());
  int y=myView.visualLineToY(line + (marker.getLineSeparatorPlacement() == SeparatorPlacement.TOP ? 0 : 1)) - 1;
  int endShift=clip.x + clip.width;
  EditorSettings settings=myEditor.getSettings();
  if (settings.isRightMarginShown() && myEditor.getColorsScheme().getColor(EditorColors.RIGHT_MARGIN_COLOR) != null) {
    endShift=Math.min(endShift,settings.getRightMargin(myEditor.getProject()) * myView.getPlainSpaceWidth());
  }
  g.setColor(separatorColor);
  if (lineSeparatorRenderer != null) {
    lineSeparatorRenderer.drawLine(g,0,endShift,y);
  }
 else {
    UIUtil.drawLine(g,0,y,endShift,y);
  }
}
