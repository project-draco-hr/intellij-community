{
  int lineCount=myDocument.getLineCount();
  for (int line=startLine; line <= endLine; line++) {
    int y=myView.visualLineToY(line);
    float x=0;
    if (line == 0 && myView.getPrefixLayout() != null) {
      x+=myView.getPrefixTextWidthInPixels();
      paintBackground(g,myView.getPrefixAttributes(),0,y,x);
    }
    if (line >= lineCount)     break;
    paintLineFragments(g,clip,line,x,y,new LineFragmentPainter(){
      @Override public void paint(      Graphics2D g,      LineLayout.Fragment fragment,      int fragmentStartOffset,      int start,      int end,      TextAttributes attributes,      float xStart,      float xEnd,      int y,      boolean isRtl){
        paintBackground(g,attributes,xStart,y,xEnd - xStart);
      }
      @Override public void paintAfterLineEnd(      Graphics2D g,      Rectangle clip,      IterationState2 it,      float x,      int y){
        x=paintAfterLineEndBackgroundSegments(g,it,x,y);
        if (it.getEndOffset() < myDocument.getTextLength()) {
          paintBackground(g,it.getPastLineEndBackgroundAttributes(),x,y,clip.x + clip.width - x);
        }
 else {
          if (it.hasPastFileEndBackgroundSegments()) {
            x=paintAfterLineEndBackgroundSegments(g,it,x,y);
          }
          paintBackground(g,it.getPastFileEndBackground(),x,y,clip.x + clip.width - x);
        }
      }
    }
);
  }
}
