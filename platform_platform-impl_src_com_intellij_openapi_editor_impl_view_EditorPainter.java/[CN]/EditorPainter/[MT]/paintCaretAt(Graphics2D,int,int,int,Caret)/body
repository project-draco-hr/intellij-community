{
  Graphics2D g=IdeBackgroundUtil.getOriginalGraphics(g_);
  int lineHeight=myView.getLineHeight();
  EditorSettings settings=myEditor.getSettings();
  Color caretColor=myEditor.getColorsScheme().getColor(EditorColors.CARET_COLOR);
  if (caretColor == null)   caretColor=new JBColor(CARET_DARK,CARET_LIGHT);
  g.setColor(caretColor);
  if (myEditor.isInsertMode() != settings.isBlockCursor()) {
    if (UIUtil.isRetina()) {
      g.fillRect(x,y,settings.getLineCursorWidth(),lineHeight);
    }
 else {
      for (int i=0; i < settings.getLineCursorWidth(); i++) {
        UIUtil.drawLine(g,x + i,y,x + i,y + lineHeight - 1);
      }
    }
  }
 else {
    g.fillRect(Math.min(x,x + width),y,Math.abs(width),lineHeight - 1);
    int targetVisualColumn=caret.getVisualPosition().column;
    for (    VisualLineFragmentsIterator.Fragment fragment : VisualLineFragmentsIterator.create(myView,caret.getVisualLineStart())) {
      int startVisualColumn=fragment.getStartVisualColumn();
      int endVisualColumn=fragment.getEndVisualColumn();
      if (startVisualColumn <= targetVisualColumn && endVisualColumn > targetVisualColumn) {
        g.setColor(ColorUtil.isDark(caretColor) ? CARET_LIGHT : CARET_DARK);
        fragment.draw(g,x,y + myView.getAscent(),targetVisualColumn - startVisualColumn,targetVisualColumn - startVisualColumn + 1);
        break;
      }
    }
  }
}
