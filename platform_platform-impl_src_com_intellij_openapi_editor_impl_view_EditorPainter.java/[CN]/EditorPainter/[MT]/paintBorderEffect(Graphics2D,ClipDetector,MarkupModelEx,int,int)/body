{
  markupModel.processRangeHighlightersOverlappingWith(clipStartOffset,clipEndOffset,new Processor<RangeHighlighterEx>(){
    @Override public boolean process(    RangeHighlighterEx rangeHighlighter){
      if (rangeHighlighter.getEditorFilter().avaliableIn(myEditor)) {
        TextAttributes attributes=rangeHighlighter.getTextAttributes();
        if (isBorder(attributes)) {
          paintBorderEffect(g,clipDetector,rangeHighlighter.getAffectedAreaStartOffset(),rangeHighlighter.getAffectedAreaEndOffset(),attributes);
        }
      }
      return true;
    }
  }
);
}
