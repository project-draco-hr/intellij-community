{
  final PsiMethod containingMethod=PsiTreeUtil.getParentOfType(element,PsiMethod.class,false);
  if (containingMethod != null && !containingMethod.isConstructor() && containingMethod.findDeepestSuperMethods().length == 0 && !containingMethod.equals(member)) {
    final PsiClass containingClass=containingMethod.getContainingClass();
    if (containingClass != null) {
      final PsiClass gContainingClass=containingClass.getContainingClass();
      if (gContainingClass == null || gContainingClass.hasModifierProperty(PsiModifier.STATIC)) {
        final InternalUsageInfo[] refsInMember=MakeStaticUtil.findClassRefsInMember(containingMethod,true);
        for (        InternalUsageInfo info : refsInMember) {
          final PsiElement referencedElement=info.getReferencedElement();
          if (!member.equals(referencedElement) && !containingMethod.equals(referencedElement)) {
            return null;
          }
        }
        return containingMethod;
      }
    }
  }
  return null;
}
