{
  if (myCourse == null) {
    return;
  }
  File resourceDirectory=new File(myCourse.getCourseDirectory());
  if (!resourceDirectory.exists()) {
    return;
  }
  final File[] files=resourceDirectory.listFiles();
  if (files == null)   return;
  for (  File file : files) {
    if (file.getName().equals(StudyNames.TEST_HELPER)) {
      copyFile(file,new File(myProject.getBasePath(),StudyNames.TEST_HELPER));
    }
    if (file.getName().startsWith(StudyNames.LESSON)) {
      final File[] tasks=file.listFiles();
      if (tasks == null)       continue;
      for (      File task : tasks) {
        final File taskDescr=new File(task,StudyNames.TASK_HTML);
        final File taskTests=new File(task,StudyNames.TASK_TESTS);
        copyFile(taskDescr,new File(new File(new File(myProject.getBasePath(),file.getName()),task.getName()),StudyNames.TASK_HTML));
        copyFile(taskTests,new File(new File(new File(myProject.getBasePath(),file.getName()),task.getName()),StudyNames.TASK_TESTS));
      }
    }
  }
  final Notification notification=new Notification("Update.course","Course update","Current course is synchronized",NotificationType.INFORMATION);
  notification.notify(myProject);
}
