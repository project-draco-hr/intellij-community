{
  final IElementType tokenType=expression.getOperationTokenType();
  if (JavaTokenType.ANDAND.equals(tokenType)) {
    final PsiVariable variable=ExpressionUtils.getVariableFromNullComparison(expression.getLOperand(),false);
    if (variable == null) {
      return;
    }
    final PsiVariable otherVariable=getArgumentFromEqualsCallOn(expression.getROperand(),variable);
    if (otherVariable == null) {
      return;
    }
    checkEqualityBefore(expression,true,variable,otherVariable);
  }
 else   if (JavaTokenType.OROR.equals(tokenType)) {
    final PsiVariable variable=ExpressionUtils.getVariableFromNullComparison(expression.getLOperand(),true);
    if (variable == null) {
      return;
    }
    final PsiExpression rhs=ParenthesesUtils.stripParentheses(expression.getROperand());
    if (!(rhs instanceof PsiPrefixExpression)) {
      return;
    }
    final PsiPrefixExpression prefixExpression=(PsiPrefixExpression)rhs;
    if (!JavaTokenType.EXCL.equals(prefixExpression.getOperationTokenType())) {
      return;
    }
    final PsiVariable otherVariable=getArgumentFromEqualsCallOn(prefixExpression.getOperand(),variable);
    if (otherVariable == null) {
      return;
    }
    checkEqualityBefore(expression,false,variable,otherVariable);
  }
}
