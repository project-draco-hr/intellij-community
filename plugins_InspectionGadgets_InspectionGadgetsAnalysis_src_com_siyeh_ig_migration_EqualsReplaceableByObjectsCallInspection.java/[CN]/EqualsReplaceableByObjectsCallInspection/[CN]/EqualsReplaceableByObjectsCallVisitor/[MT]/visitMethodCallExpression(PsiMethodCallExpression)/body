{
  final PsiElement maybeBinary=PsiTreeUtil.skipParentsOfType(expression,PsiParenthesizedExpression.class,PsiPrefixExpression.class);
  if (maybeBinary instanceof PsiBinaryExpression) {
    if (processNotNullCheck((PsiBinaryExpression)maybeBinary)) {
      return;
    }
  }
  if (!checkNotNull) {
    final PsiVariable variable=ExpressionUtils.getVariable(expression.getMethodExpression().getQualifierExpression());
    if (variable == null) {
      return;
    }
    final PsiVariable otherVariable=getArgumentFromEqualsCallOn(expression,variable);
    if (otherVariable == null) {
      return;
    }
    registerError(expression,variable.getName(),otherVariable.getName(),true);
  }
}
