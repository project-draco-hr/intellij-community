{
  final PsiElement parent=PsiTreeUtil.skipParentsOfType(expression,PsiParenthesizedExpression.class);
  if (parent instanceof PsiBinaryExpression) {
    final PsiBinaryExpression binaryExpression=(PsiBinaryExpression)parent;
    if (PsiTreeUtil.isAncestor(binaryExpression.getROperand(),expression,false)) {
      final PsiExpression lhs=binaryExpression.getLOperand();
      if (isEquality(lhs,equals,variable1,variable2)) {
        registerError(binaryExpression,variable1.getName(),variable2.getName(),Boolean.valueOf(equals));
        return;
      }
    }
  }
  registerError(expression,variable1.getName(),variable2.getName(),Boolean.valueOf(equals));
}
