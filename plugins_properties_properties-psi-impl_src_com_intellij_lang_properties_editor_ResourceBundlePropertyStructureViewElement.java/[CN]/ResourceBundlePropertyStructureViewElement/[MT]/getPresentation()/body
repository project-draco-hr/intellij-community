{
  return new ResourceBundleEditorRenderer.TextAttributesPresentation(){
    @Override public String getPresentableText(){
      return myPresentableName == null ? getProperty().getName() : myPresentableName.isEmpty() ? PROPERTY_GROUP_KEY_TEXT : myPresentableName;
    }
    @Override public String getLocationString(){
      return null;
    }
    @Override public Icon getIcon(    boolean open){
      return PlatformIcons.PROPERTY_ICON;
    }
    @Override public TextAttributes getTextAttributes(    EditorColorsScheme colorsScheme){
      myInspectionPassInfo=ResourceBundleEditorInspectionPass.inspect(getProperty().getKey(),getProperty().getPropertiesFile().getResourceBundle());
      final TextAttributesKey baseAttrKey=(myPresentableName != null && myPresentableName.isEmpty()) ? GROUP_KEY : PropertiesHighlighter.PROPERTY_KEY;
      final TextAttributes baseAttrs=colorsScheme.getAttributes(baseAttrKey);
      TextAttributes highlightingAttributes=myInspectionPassInfo.getTextAttributes(colorsScheme);
      if (highlightingAttributes != null) {
        return TextAttributes.merge(baseAttrs,highlightingAttributes);
      }
      return baseAttrs;
    }
  }
;
}
