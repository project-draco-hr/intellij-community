{
  final PyClass containingClass=function.getContainingClass();
  if (ignoreOverriddenFunctions && isOverriddenMethod(function))   return;
  final String name=function.getName();
  if (name == null)   return;
  if (containingClass != null && (PyUtil.isSpecialName(name) || isIgnoredOrHasIgnoredAncestor(containingClass))) {
    return;
  }
  if (!LOWERCASE_REGEX.matcher(name).matches()) {
    final ASTNode nameNode=function.getNameNode();
    if (nameNode != null) {
      final List<LocalQuickFix> quickFixes=Lists.newArrayList();
      if (getHolder() != null && getHolder().isOnTheFly())       quickFixes.add(new PyRenameElementQuickFix());
      if (containingClass != null) {
        quickFixes.add(new IgnoreBaseClassQuickFix(containingClass,myTypeEvalContext));
      }
      final String errorCode="N802";
      if (!ignoredErrors.contains(errorCode)) {
        quickFixes.add(new IgnoreErrorFix(errorCode));
        registerProblem(nameNode.getPsi(),errorCodesDescription.get(errorCode),quickFixes.toArray(new LocalQuickFix[quickFixes.size()]));
      }
    }
  }
}
