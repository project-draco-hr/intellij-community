{
  GradleSettings settings=GradleSettings.getInstance(project);
  Collection<GradleProjectSettings> correctedSettings=ContainerUtilRt.newArrayList();
  Map<String,String> adjustedPaths=ContainerUtilRt.newHashMap();
  for (  GradleProjectSettings projectSettings : settings.getLinkedProjectsSettings()) {
    String oldPath=projectSettings.getExternalProjectPath();
    if (!new File(oldPath).isDirectory()) {
      try {
        String newPath=new File(oldPath).getParentFile().getCanonicalPath();
        projectSettings.setExternalProjectPath(newPath);
        adjustedPaths.put(oldPath,newPath);
      }
 catch (      IOException e) {
        LOG.warn(String.format("Unexpected exception occurred on attempt to re-point linked gradle project path from build.gradle to its parent dir. Path: %s",oldPath),e);
      }
    }
    correctedSettings.add(projectSettings);
  }
  if (adjustedPaths.isEmpty()) {
    return;
  }
  settings.setLinkedProjectsSettings(correctedSettings);
  GradleLocalSettings localSettings=GradleLocalSettings.getInstance(project);
  for (  ExternalTaskExecutionInfo taskInfo : localSettings.getRecentTasks()) {
    ExternalSystemTaskExecutionSettings s=taskInfo.getSettings();
    String newPath=adjustedPaths.get(s.getExternalProjectPath());
    if (newPath != null) {
      s.setExternalProjectPath(newPath);
    }
  }
  Map<ExternalProjectPojo,Collection<ExternalProjectPojo>> adjustedAvailableProjects=ContainerUtilRt.newHashMap();
  for (  Map.Entry<ExternalProjectPojo,Collection<ExternalProjectPojo>> entry : localSettings.getAvailableProjects().entrySet()) {
    String newPath=adjustedPaths.get(entry.getKey().getPath());
    if (newPath == null) {
      adjustedAvailableProjects.put(entry.getKey(),entry.getValue());
    }
 else {
      adjustedAvailableProjects.put(new ExternalProjectPojo(entry.getKey().getName(),newPath),entry.getValue());
    }
  }
  localSettings.setAvailableProjects(adjustedAvailableProjects);
  Map<String,Collection<ExternalTaskPojo>> adjustedAvailableTasks=ContainerUtilRt.newHashMap();
  for (  Map.Entry<String,Collection<ExternalTaskPojo>> entry : localSettings.getAvailableTasks().entrySet()) {
    String newPath=adjustedPaths.get(entry.getKey());
    if (newPath == null) {
      adjustedAvailableTasks.put(entry.getKey(),entry.getValue());
    }
 else {
      for (      ExternalTaskPojo task : entry.getValue()) {
        String newTaskPath=adjustedPaths.get(task.getLinkedExternalProjectPath());
        if (newTaskPath != null) {
          task.setLinkedExternalProjectPath(newTaskPath);
        }
      }
      adjustedAvailableTasks.put(newPath,entry.getValue());
    }
  }
  localSettings.setAvailableTasks(adjustedAvailableTasks);
}
