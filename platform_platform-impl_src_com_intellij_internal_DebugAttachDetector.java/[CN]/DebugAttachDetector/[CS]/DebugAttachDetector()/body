{
  ApplicationEx app=ApplicationManagerEx.getApplicationEx();
  if (!app.isInternal() || app.isUnitTestMode() || app.isHeadlessEnvironment()|| "true".equals(System.getProperty("idea.debug.mode")))   return;
  for (  String argument : ManagementFactory.getRuntimeMXBean().getInputArguments()) {
    if (argument.startsWith("-agentlib:jdwp") && argument.contains("transport=dt_socket")) {
      String[] params=argument.split(",");
      for (      String param : params) {
        if (param.startsWith("address")) {
          try {
            String[] address=param.split("=")[1].split(":");
            if (address.length == 1) {
              myPort=Integer.parseInt(address[0]);
            }
 else {
              myHost=address[0];
              myPort=Integer.parseInt(address[1]);
            }
          }
 catch (          Exception e) {
            LOG.error(e);
            return;
          }
          break;
        }
      }
      break;
    }
  }
  if (myPort < 0)   return;
  myAlarm=new SingleAlarm(new Runnable(){
    @Override public void run(){
      boolean attached=!NetUtils.canConnectToRemoteSocket(myHost,myPort);
      if (!myReady) {
        myAttached=attached;
        myReady=true;
      }
 else       if (attached != myAttached) {
        myAttached=attached;
        Notifications.Bus.notify(new Notification(Notifications.SYSTEM_MESSAGES_GROUP_ID,"Remote debugger",myAttached ? "attached" : "detached",NotificationType.WARNING));
      }
      SwingUtilities.invokeLater(new Runnable(){
        @Override public void run(){
          if (!myAlarm.isDisposed()) {
            myAlarm.request();
          }
        }
      }
);
    }
  }
,5000,Alarm.ThreadToUse.POOLED_THREAD,app);
  myAlarm.request();
}
