{
  myComponentTree=new ComponentTree();
  JScrollPane treeScrollPane=ScrollPaneFactory.createScrollPane(myComponentTree);
  treeScrollPane.setBorder(IdeBorderFactory.createBorder(SideBorder.BOTTOM));
  treeScrollPane.setPreferredSize(new Dimension(250,-1));
  myComponentTree.initQuickFixManager(treeScrollPane.getViewport());
  myPropertyTablePanel=new PropertyTablePanel(project);
  myToolWindowPanel=new Splitter(true,0.42f){
    @Override public void doLayout(){
      super.doLayout();
      JComponent firstComponent=getFirstComponent();
      JComponent secondComponent=getSecondComponent();
      if (firstComponent == null || secondComponent == null) {
        return;
      }
      int firstHeight=firstComponent.getHeight();
      int dividerHeight=getDivider().getHeight();
      int height=getSize().height;
      if (firstHeight + dividerHeight + secondComponent.getHeight() != height) {
        Rectangle bounds=secondComponent.getBounds();
        bounds.height=height - firstHeight - dividerHeight;
        secondComponent.setBounds(bounds);
      }
    }
  }
;
  myToolWindowPanel.setDividerWidth(3);
  myToolWindowPanel.setShowDividerControls(false);
  myToolWindowPanel.setShowDividerIcon(false);
  myToolWindowPanel.setFirstComponent(treeScrollPane);
  myToolWindowPanel.setSecondComponent(myPropertyTablePanel);
  if (updateOrientation) {
    myToolWindowPanel.addComponentListener(new ComponentAdapter(){
      @Override public void componentResized(      ComponentEvent e){
        Dimension size=myToolWindowPanel.getSize();
        boolean newVertical=size.width < size.height;
        if (myToolWindowPanel.getOrientation() != newVertical) {
          myToolWindowPanel.setOrientation(newVertical);
        }
      }
    }
);
  }
}
