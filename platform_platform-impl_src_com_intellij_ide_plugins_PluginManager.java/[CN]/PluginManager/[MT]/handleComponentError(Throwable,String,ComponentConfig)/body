{
  if (t instanceof StartupAbortedException) {
    throw (StartupAbortedException)t;
  }
  PluginId pluginId=null;
  if (config != null) {
    pluginId=config.getPluginId();
  }
  if (pluginId == null || CORE_PLUGIN_ID.equals(pluginId.getIdString())) {
    pluginId=getPluginByClassName(componentClassName);
  }
  if (pluginId == null || CORE_PLUGIN_ID.equals(pluginId.getIdString())) {
    if (t instanceof PicoPluginExtensionInitializationException) {
      pluginId=((PicoPluginExtensionInitializationException)t).getPluginId();
    }
  }
  if (pluginId != null && !CORE_PLUGIN_ID.equals(pluginId.getIdString())) {
    getLogger().warn(t);
    disablePlugin(pluginId.getIdString());
    String message="Plugin '" + pluginId.getIdString() + "' failed to initialize and will be disabled\n"+ "(reason: "+ t.getMessage()+ ")\n\n"+ "Please restart "+ ApplicationNamesInfo.getInstance().getFullProductName()+ ".";
    Main.showMessage("Plugin Error",message,false);
    throw new StartupAbortedException(t).exitCode(Main.PLUGIN_ERROR).logError(false);
  }
 else {
    throw new StartupAbortedException("Fatal error initializing '" + componentClassName + "'",t);
  }
}
