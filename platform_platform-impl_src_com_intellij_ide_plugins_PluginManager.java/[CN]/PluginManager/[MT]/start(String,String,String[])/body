{
  startupStart=System.nanoTime();
  try {
    ThreadGroup threadGroup=new ThreadGroup("Idea Thread Group"){
      @Override public void uncaughtException(      Thread t,      Throwable e){
        if (!(e instanceof ProcessCanceledException)) {
          PluginManagerCore.getLogger().error(e);
        }
      }
    }
;
    Runnable runnable=new Runnable(){
      @Override public void run(){
        try {
          ClassUtilCore.clearJarURLCache();
          Class<?> aClass=Class.forName(mainClass);
          Method method=aClass.getDeclaredMethod(methodName,ArrayUtil.EMPTY_STRING_ARRAY.getClass());
          method.setAccessible(true);
          method.invoke(null,new Object[]{args});
        }
 catch (        Throwable t) {
          if (t instanceof InvocationTargetException) {
            t=t.getCause();
          }
          String message="Error while accessing " + mainClass + "."+ methodName+ " with arguments: "+ Arrays.asList(args)+ "\n"+ ExceptionUtil.getThrowableText(t);
          StartupUtil.showError("Error starting IntelliJ Platform",message);
          System.exit(1);
        }
      }
    }
;
    new Thread(threadGroup,runnable,"Idea Main Thread").start();
  }
 catch (  Exception e) {
    PluginManagerCore.getLogger().error(e);
  }
}
