{
  final DataContext dataContext=getEditorDataContext();
  final ActionManagerEx managerEx=ActionManagerEx.getInstanceEx();
  final AnAction action=managerEx.getAction(actionId);
  final AnActionEvent event=new AnActionEvent(null,dataContext,ActionPlaces.UNKNOWN,new Presentation(),managerEx,0);
  return WriteCommandAction.runWriteCommandAction(getProject(),new Computable<Boolean>(){
    @Override public Boolean compute(){
      action.beforeActionPerformedUpdate(event);
      if (!event.getPresentation().isEnabled()) {
        return false;
      }
      managerEx.fireBeforeActionPerformed(action,dataContext,event);
      action.actionPerformed(event);
      managerEx.fireAfterActionPerformed(action,dataContext,event);
      return true;
    }
  }
);
}
