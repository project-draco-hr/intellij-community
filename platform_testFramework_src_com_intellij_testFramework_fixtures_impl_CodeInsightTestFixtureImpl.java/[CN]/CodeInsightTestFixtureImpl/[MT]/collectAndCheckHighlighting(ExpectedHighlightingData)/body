{
  final Project project=getProject();
  PsiDocumentManager.getInstance(project).commitAllDocuments();
  PsiFileImpl file=(PsiFileImpl)getHostFile();
  FileElement hardRefToFileElement=file.calcTreeElement();
  if (!DumbService.isDumb(project)) {
    CacheManager.SERVICE.getInstance(project).getFilesWithWord("XXX",UsageSearchContext.IN_COMMENTS,GlobalSearchScope.allScope(project),true);
  }
  final long start=System.currentTimeMillis();
  final VirtualFileFilter fileTreeAccessFilter=myVirtualFileFilter;
  Disposable disposable=Disposer.newDisposable();
  if (fileTreeAccessFilter != null) {
    PsiManagerEx.getInstanceEx(project).setAssertOnFileLoadingFilter(fileTreeAccessFilter,disposable);
  }
  List<HighlightInfo> infos;
  try {
    infos=doHighlighting();
    removeDuplicatedRangesForInjected(infos);
  }
  finally {
    Disposer.dispose(disposable);
  }
  final long elapsed=System.currentTimeMillis() - start;
  data.checkResult(infos,file.getText());
  hardRefToFileElement.hashCode();
  return elapsed;
}
