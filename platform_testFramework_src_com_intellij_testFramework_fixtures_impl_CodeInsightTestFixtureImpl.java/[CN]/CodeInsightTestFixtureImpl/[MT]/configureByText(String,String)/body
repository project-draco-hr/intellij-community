{
  assertInitialized();
  return new WriteCommandAction<PsiFile>(getProject()){
    @Override protected void run(    @NotNull Result<PsiFile> result) throws Throwable {
      final VirtualFile vFile;
      if (myTempDirFixture instanceof LightTempDirTestFixtureImpl) {
        final VirtualFile root=LightPlatformTestCase.getSourceRoot();
        root.refresh(false,false);
        vFile=root.findOrCreateChildData(this,fileName);
        Assert.assertNotNull(fileName + " not found in " + root.getPath(),vFile);
      }
 else       if (myTempDirFixture instanceof TempDirTestFixtureImpl) {
        final File tempFile=((TempDirTestFixtureImpl)myTempDirFixture).createTempFile(fileName);
        vFile=LocalFileSystem.getInstance().refreshAndFindFileByIoFile(tempFile);
        Assert.assertNotNull(tempFile + " not found",vFile);
      }
 else {
        vFile=LocalFileSystem.getInstance().refreshAndFindFileByIoFile(new File(getTempDirPath(),fileName));
        Assert.assertNotNull(fileName + " not found in " + getTempDirPath(),vFile);
      }
      prepareVirtualFile(vFile);
      final Document document=FileDocumentManager.getInstance().getCachedDocument(vFile);
      if (document != null) {
        PsiDocumentManager.getInstance(getProject()).doPostponedOperationsAndUnblockDocument(document);
        FileDocumentManager.getInstance().saveDocument(document);
      }
      VfsUtil.saveText(vFile,text);
      configureInner(vFile,SelectionAndCaretMarkupLoader.fromFile(vFile));
      result.setResult(getFile());
    }
  }
.execute().getResultObject();
}
