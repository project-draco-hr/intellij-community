{
  if (methodCallInfo.isEmpty() || methodCallInfo.size() < 2 || !"artifacts".equals(methodCallInfo.get(1))) {
    return;
  }
  final String text=place.getText();
  if (!methodCallInfo.contains(text) && place instanceof GrReferenceExpressionImpl) {
    GradleResolverUtil.addImplicitVariable(processor,state,(GrReferenceExpressionImpl)place,Object.class.getName());
    return;
  }
  GroovyPsiManager psiManager=GroovyPsiManager.getInstance(place.getProject());
  GradleResolverUtil.processDeclarations(psiManager,processor,state,place,GradleCommonClassNames.GRADLE_API_ARTIFACT_HANDLER);
  PsiClass contributorClass=psiManager.findClassWithCache(GradleCommonClassNames.GRADLE_API_ARTIFACT_HANDLER,place.getResolveScope());
  if (contributorClass != null) {
    processAtrifactAddition(methodCallInfo.get(0),contributorClass,processor,state,place);
  }
}
