{
  if (methodCallInfo.isEmpty() || methodCallInfo.size() < 2 || !"artifacts".equals(methodCallInfo.get(1))) {
    return;
  }
  final String text=place.getText();
  if (!methodCallInfo.contains(text) && place instanceof GrReferenceExpressionImpl) {
    GradleResolverUtil.addImplicitVariable(processor,state,(GrReferenceExpressionImpl)place,Object.class);
    return;
  }
  GroovyPsiManager psiManager=GroovyPsiManager.getInstance(place.getProject());
  PsiClass contributorClass=psiManager.findClassWithCache(ArtifactHandler.class.getName(),place.getResolveScope());
  if (contributorClass != null) {
    contributorClass.processDeclarations(processor,state,null,place);
    processAtrifactAddition(methodCallInfo.get(0),contributorClass,processor,state,place);
  }
}
