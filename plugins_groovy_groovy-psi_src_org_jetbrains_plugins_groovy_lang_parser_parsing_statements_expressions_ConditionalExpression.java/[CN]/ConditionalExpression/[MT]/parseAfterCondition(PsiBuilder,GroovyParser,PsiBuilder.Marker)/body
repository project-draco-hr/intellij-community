{
  if (ParserUtils.getToken(builder,GroovyTokenTypes.mQUESTION)) {
    ParserUtils.getToken(builder,GroovyTokenTypes.mNLS);
    if (!AssignmentExpression.parse(builder,parser)) {
      builder.error(GroovyBundle.message("expression.expected"));
    }
    if (ParserUtils.lookAhead(builder,GroovyTokenTypes.mNLS,GroovyTokenTypes.mCOLON)) {
      ParserUtils.getToken(builder,GroovyTokenTypes.mNLS);
    }
    if (ParserUtils.getToken(builder,GroovyTokenTypes.mCOLON,GroovyBundle.message("colon.expected"))) {
      ParserUtils.getToken(builder,GroovyTokenTypes.mNLS);
      parse(builder,parser);
    }
    marker.done(GroovyElementTypes.CONDITIONAL_EXPRESSION);
  }
 else   if (ParserUtils.getToken(builder,GroovyTokenTypes.mELVIS)) {
    ParserUtils.getToken(builder,GroovyTokenTypes.mNLS);
    if (!parse(builder,parser)) {
      builder.error(GroovyBundle.message("expression.expected"));
    }
    marker.done(GroovyElementTypes.ELVIS_EXPRESSION);
  }
 else {
    marker.drop();
  }
}
