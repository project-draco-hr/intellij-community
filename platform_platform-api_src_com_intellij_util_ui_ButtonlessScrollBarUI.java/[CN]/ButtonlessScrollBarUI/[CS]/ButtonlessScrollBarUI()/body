{
  myAdjustmentListener=new AdjustmentListener(){
    @Override public void adjustmentValueChanged(    AdjustmentEvent e){
      if (e.getValueIsAdjusting())       return;
      resetThumbAnimator();
      if (isMacScrollbar()) {
        stopMacScrollbarFadeout();
        if (!myMouseOverScrollbar) {
          myMacScrollbarFadeAnimator.resume();
        }
      }
    }
  }
;
  myMouseMotionListener=new MouseMotionAdapter(){
    @Override public void mouseMoved(    MouseEvent e){
      boolean inside=isOverThumb(e.getPoint());
      if (inside != myMouseIsOverThumb) {
        myMouseIsOverThumb=inside;
        resetThumbAnimator();
      }
    }
  }
;
  myMouseListener=new MouseAdapter(){
    @Override public void mouseEntered(    MouseEvent e){
      if (isMacScrollbar()) {
        myMouseOverScrollbar=true;
        myMouseOverScrollbarStarted=true;
        stopMacScrollbarFadeout();
      }
    }
    @Override public void mouseExited(    MouseEvent e){
      if (myMouseIsOverThumb) {
        myMouseIsOverThumb=false;
        resetThumbAnimator();
      }
      if (isMacScrollbar()) {
        myMouseOverScrollbar=false;
        if (scrollbar != null)         scrollbar.repaint();
        myMacScrollbarFadeAnimator.resume();
      }
    }
  }
;
}
