{
  final List<LookupElement> ret=Lists.newArrayList();
  final PsiElement realContext=PyPsiUtils.getRealContext(myElement);
  final int underscores=PyUtil.getInitialUnderscores(myElement.getName());
  final PyUtil.UnderscoreFilter filter=new PyUtil.UnderscoreFilter(underscores);
  final VariantsProcessor processor=new VariantsProcessor(myElement,null,filter);
  PyResolveUtil.treeCrawlUp(processor,realContext);
  PyResolveUtil.scanOuterContext(processor,realContext);
  PythonDataflowUtil.collectFunctionArgNames(myElement,ret);
  CollectProcessor collect_proc=new CollectProcessor(IS_STAR_IMPORT);
  PyResolveUtil.treeCrawlUp(collect_proc,realContext);
  List<PsiElement> stars=collect_proc.getResult();
  for (  PsiElement star_elt : stars) {
    final PyFromImportStatement from_import_stmt=(PyFromImportStatement)star_elt.getParent();
    if (from_import_stmt != null) {
      final PyReferenceExpression import_src=from_import_stmt.getImportSource();
      if (import_src != null) {
        final String imported_name=import_src.getName();
        processor.setNotice(imported_name);
        final PsiElement importedModule=import_src.getReference().resolve();
        List<String> dunderAll=null;
        if (importedModule instanceof PyFile) {
          dunderAll=((PyFile)importedModule).getDunderAll();
        }
        processor.setAllowedNames(dunderAll);
        try {
          PyResolveUtil.treeCrawlUp(processor,true,importedModule);
          processor.addVariantsFromAllowedNames();
        }
  finally {
          processor.setAllowedNames(null);
        }
      }
    }
  }
  processor.setNotice("__builtin__");
  PyResolveUtil.treeCrawlUp(processor,true,PyBuiltinCache.getInstance(getElement()).getBuiltinsFile());
  if (underscores >= 2) {
    PsiFile f=realContext.getContainingFile();
    if (f instanceof PyFile) {
      for (      String name : PyModuleType.getPossibleInstanceMembers()) {
        ret.add(LookupElementBuilder.create(name).setIcon(Icons.FIELD_ICON));
      }
    }
  }
  ret.addAll(processor.getResultList());
  return ret.toArray();
}
