{
  final List<LookupElement> ret=Lists.newArrayList();
  final PsiElement realContext=PyPsiUtils.getRealContext(myElement);
  final int underscores=PyUtil.getInitialUnderscores(myElement.getName());
  final VariantsProcessor processor=new VariantsProcessor(myElement);
  PyResolveUtil.treeCrawlUp(processor,realContext);
  PyResolveUtil.scanOuterContext(processor,realContext);
  PythonDataflowUtil.collectFunctionArgNames(myElement,ret);
  processor.setNotice("__builtin__");
  PyResolveUtil.treeCrawlUp(processor,true,PyBuiltinCache.getInstance(getElement()).getBuiltinsFile());
  if (underscores >= 2) {
    PsiFile f=realContext.getContainingFile();
    if (f instanceof PyFile) {
      for (      String name : PyModuleType.getPossibleInstanceMembers()) {
        ret.add(LookupElementBuilder.create(name).setIcon(Icons.FIELD_ICON));
      }
    }
  }
  ret.addAll(processor.getResultList());
  return ret.toArray();
}
