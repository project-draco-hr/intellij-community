{
  if (element instanceof PsiFileSystemItem) {
    final PsiElement resolveResult=resolve();
    if (element instanceof PsiDirectory && resolveResult instanceof PyFile && PyNames.INIT_DOT_PY.equals(((PyFile)resolveResult).getName())&& ((PyFile)resolveResult).getContainingDirectory() == element) {
      return true;
    }
    return resolveResult == element;
  }
  element=transitiveResolve(element);
  if (element instanceof PsiNamedElement) {
    final String elementName=((PsiNamedElement)element).getName();
    if ((Comparing.equal(myElement.getReferencedName(),elementName) || PyNames.INIT.equals(elementName)) && !haveQualifiers(element)) {
      final ScopeOwner ourScopeOwner=ScopeUtil.getScopeOwner(getElement());
      final ScopeOwner theirScopeOwner=ScopeUtil.getScopeOwner(element);
      if (element instanceof PyParameter || element instanceof PyTargetExpression) {
        PsiElement ourContainer=PsiTreeUtil.getParentOfType(getElement(),PsiNamedElement.class,PyLambdaExpression.class,PyComprehensionElement.class);
        PsiElement theirContainer=PsiTreeUtil.getParentOfType(element,PsiNamedElement.class,PyLambdaExpression.class,PyComprehensionElement.class);
        if (ourContainer != null) {
          if (ourContainer == theirContainer) {
            return true;
          }
          if (PsiTreeUtil.isAncestor(theirContainer,ourContainer,true)) {
            if (ourScopeOwner != theirScopeOwner) {
              boolean shadowsName=false;
              ScopeOwner owner=ourScopeOwner;
              while (owner != theirScopeOwner && owner != null) {
                if (ControlFlowCache.getScope(owner).containsDeclaration(elementName)) {
                  shadowsName=true;
                  break;
                }
                owner=ScopeUtil.getScopeOwner(owner);
              }
              if (!shadowsName) {
                return true;
              }
            }
          }
        }
      }
      final PsiElement resolveResult=transitiveResolve(this.getElement());
      if (resolveResult == element) {
        return true;
      }
      if (!haveQualifiers(element)) {
        final boolean ourIsGlobal=ControlFlowCache.getScope(ourScopeOwner).isGlobal(elementName);
        final boolean theirIsGlobal=ControlFlowCache.getScope(theirScopeOwner).isGlobal(elementName);
        final PsiFile ourFile=getElement().getContainingFile();
        final PsiFile theirFile=element.getContainingFile();
        if (ourIsGlobal && theirIsGlobal && ourFile == theirFile) {
          return true;
        }
        if (theirIsGlobal && ScopeUtil.getScopeOwner(resolveResult) == ourFile) {
          return true;
        }
      }
      return false;
    }
  }
  return false;
}
