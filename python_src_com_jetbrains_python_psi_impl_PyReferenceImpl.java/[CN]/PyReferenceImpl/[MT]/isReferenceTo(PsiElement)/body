{
  if (element instanceof PsiNamedElement) {
    final String elementName=((PsiNamedElement)element).getName();
    if (Comparing.equal(myElement.getReferencedName(),elementName) || PyNames.INIT.equals(elementName)) {
      if (element instanceof PyParameter || element instanceof PyTargetExpression) {
        PsiElement ourContainer=PsiTreeUtil.getParentOfType(getElement(),PsiNamedElement.class,PyLambdaExpression.class);
        PsiElement theirContainer=PsiTreeUtil.getParentOfType(element,PsiNamedElement.class,PyLambdaExpression.class);
        if (ourContainer != null && ourContainer == theirContainer) {
          return true;
        }
      }
      final PsiElement resolveResult=resolve();
      if (resolveResult == element) {
        return true;
      }
      final ScopeOwner ourScope=PsiTreeUtil.getParentOfType(getElement(),ScopeOwner.class);
      final ScopeOwner theirScope=PsiTreeUtil.getParentOfType(element,ScopeOwner.class);
      if (ourScope != null && ourScope.getScope().isGlobal(elementName) && PsiTreeUtil.isAncestor(theirScope,ourScope,false)) {
        return true;
      }
      if (theirScope != null && theirScope.getScope().isGlobal(elementName) && PsiTreeUtil.isAncestor(ourScope,theirScope,false)) {
        return true;
      }
      return false;
    }
  }
  return false;
}
