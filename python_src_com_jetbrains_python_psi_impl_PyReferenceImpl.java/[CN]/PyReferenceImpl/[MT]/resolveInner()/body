{
  ResolveResultList ret=new ResolveResultList();
  final String referencedName=myElement.getReferencedName();
  if (referencedName == null)   return ret;
  ResolveProcessor processor=new ResolveProcessor(referencedName);
  PsiElement realContext=PyPsiUtils.getRealContext(myElement);
  PyClass containingClass=PsiTreeUtil.getParentOfType(realContext,PyClass.class);
  if (containingClass != null && PsiTreeUtil.isAncestor(containingClass.getSuperClassExpressionList(),myElement,false)) {
    realContext=containingClass;
  }
  PsiElement roof=findResolveRoof(referencedName,realContext);
  PsiElement uexpr=PyResolveUtil.treeCrawlUp(processor,false,realContext,roof);
  if ((uexpr != null)) {
    for (    PsiElement hit : processor.getDefiners()) {
      ret.poke(hit,getRate(hit));
    }
    uexpr=PyUtil.turnDirIntoInit(uexpr);
  }
 else   if (!processor.getDefiners().isEmpty()) {
    ret.add(new ImportedResolveResult(null,RatedResolveResult.RATE_LOW - 1,processor.getDefiners()));
  }
  PyBuiltinCache builtins_cache=PyBuiltinCache.getInstance(realContext);
  if (uexpr == null) {
    PyType otype=builtins_cache.getObjectType();
    if (otype != null) {
      ret.addAll(otype.resolveMember(myElement.getName(),null,AccessDirection.READ,myContext));
    }
  }
  if (uexpr == null) {
    PyFile bfile=builtins_cache.getBuiltinsFile();
    if (bfile != null) {
      uexpr=bfile.getElementNamed(referencedName);
      if (uexpr == null && "__builtins__".equals(referencedName)) {
        uexpr=bfile;
      }
    }
  }
  if (uexpr == null && !(myElement instanceof PyTargetExpression)) {
    final PsiElement outerContextElement=PyResolveUtil.scanOuterContext(new ResolveProcessor(referencedName),realContext);
    uexpr=PyUtil.turnDirIntoInit(outerContextElement);
  }
  if (uexpr != null) {
    ret.add(new ImportedResolveResult(uexpr,getRate(uexpr),processor.getDefiners()));
  }
  return ret;
}
