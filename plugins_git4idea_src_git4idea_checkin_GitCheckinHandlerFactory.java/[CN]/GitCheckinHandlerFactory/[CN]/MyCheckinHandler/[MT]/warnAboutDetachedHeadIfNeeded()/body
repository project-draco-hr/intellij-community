{
  DetachedRoot detachedRoot=getDetachedRoot();
  if (detachedRoot == null || !GitVcsSettings.getInstance(myProject).warnAboutDetachedHead()) {
    return ReturnResult.COMMIT;
  }
  final String title;
  final String message;
  final CharSequence rootPath=StringUtil.last(detachedRoot.myRoot.getPresentableUrl(),50,true);
  final String messageCommonStart="The Git repository <code>" + rootPath + "</code>";
  if (detachedRoot.myRebase) {
    title="Unfinished rebase process";
    message=messageCommonStart + " <br/> has an <b>unfinished rebase</b> process. <br/>" + "You probably want to <b>continue rebase</b> instead of committing. <br/>"+ "Committing during rebase may lead to the commit loss. <br/>"+ readMore("http://www.kernel.org/pub/software/scm/git/docs/git-rebase.html","Read more about Git rebase");
  }
 else {
    title="Commit in detached HEAD may be dangerous";
    message=messageCommonStart + " is in the <b>detached HEAD</b> state. <br/>" + "You can look around, make experimental changes and commit them, but be sure to checkout a branch not to lose your work. <br/>"+ "Otherwise you risk losing your changes. <br/>"+ readMore("http://gitolite.com/detached-head.html","Read more about detached HEAD");
  }
  DialogWrapper.DoNotAskOption dontAskAgain=new DialogWrapper.DoNotAskOption.Adapter(){
    @Override public void rememberChoice(    boolean isSelected,    int exitCode){
      GitVcsSettings.getInstance(myProject).setWarnAboutDetachedHead(!isSelected);
    }
    @NotNull @Override public String getDoNotShowMessage(){
      return "Don't warn again";
    }
  }
;
  int choice=Messages.showOkCancelDialog(myProject,XmlStringUtil.wrapInHtml(message),title,"Commit",CommonBundle.getCancelButtonText(),Messages.getWarningIcon(),dontAskAgain);
  if (choice == Messages.OK) {
    return ReturnResult.COMMIT;
  }
 else {
    return ReturnResult.CLOSE_WINDOW;
  }
}
