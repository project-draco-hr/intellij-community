{
  final PyArgumentList argumentList=PyUtil.as(context.getParent(),PyArgumentList.class);
  if (PyInjectionUtil.getLargestStringLiteral(context) == context && argumentList != null) {
    final PyCallExpression call=PsiTreeUtil.getParentOfType(context,PyCallExpression.class);
    if (call != null) {
      final RegexpMethodDescriptor methodDescriptor=findRegexpMethodDescriptor(resolvePossibleRegexpCall(call));
      if (methodDescriptor != null && methodDescriptor.argIndex == ArrayUtil.indexOf(argumentList.getArguments(),context)) {
        injectRegexpLanguage(registrar,context,isVerbose(call));
      }
    }
  }
}
