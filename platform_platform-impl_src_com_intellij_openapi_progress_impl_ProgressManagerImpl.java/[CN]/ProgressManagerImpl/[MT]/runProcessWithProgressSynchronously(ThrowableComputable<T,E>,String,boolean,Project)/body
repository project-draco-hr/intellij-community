{
  final Ref<T> result=new Ref<T>();
  final Ref<Throwable> exception=new Ref<Throwable>();
  runProcessWithProgressSynchronously(new Task.Modal(project,progressTitle,canBeCanceled){
    @Override public void run(    @NotNull ProgressIndicator indicator){
      try {
        T compute=process.compute();
        result.set(compute);
      }
 catch (      Throwable t) {
        exception.set(t);
      }
    }
  }
,null);
  if (!exception.isNull()) {
    Throwable t=exception.get();
    if (t instanceof Error)     throw (Error)t;
    if (t instanceof RuntimeException)     throw (RuntimeException)t;
    @SuppressWarnings("unchecked") E e=(E)t;
    throw e;
  }
  return result.get();
}
