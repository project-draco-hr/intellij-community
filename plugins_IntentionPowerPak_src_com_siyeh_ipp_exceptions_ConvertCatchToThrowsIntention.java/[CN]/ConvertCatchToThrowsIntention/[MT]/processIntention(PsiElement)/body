{
  final PsiCatchSection catchSection=(PsiCatchSection)element.getParent();
  final NavigatablePsiElement owner=PsiTreeUtil.getParentOfType(catchSection,PsiMethod.class,PsiLambdaExpression.class);
  final PsiMethod method;
  if (owner instanceof PsiMethod) {
    method=(PsiMethod)owner;
  }
 else   if (owner instanceof PsiLambdaExpression) {
    method=LambdaUtil.getFunctionalInterfaceMethod(owner);
    if (method == null || !FileModificationService.getInstance().preparePsiElementsForWrite(method)) {
      return;
    }
  }
 else {
    return;
  }
  final PsiReferenceList throwsList=method.getThrowsList();
  final PsiType catchType=catchSection.getCatchType();
  addToThrowsList(throwsList,catchType);
  final PsiTryStatement tryStatement=catchSection.getTryStatement();
  final PsiCatchSection[] catchSections=tryStatement.getCatchSections();
  if (catchSections.length > 1 || tryStatement.getResourceList() != null || tryStatement.getFinallyBlock() != null) {
    catchSection.delete();
  }
 else {
    final PsiCodeBlock tryBlock=tryStatement.getTryBlock();
    if (tryBlock == null) {
      return;
    }
    final PsiElement first=tryBlock.getFirstBodyElement();
    final PsiElement last=tryBlock.getLastBodyElement();
    if (first != null && last != null) {
      tryStatement.getParent().addRangeAfter(first,last,tryStatement);
    }
    tryStatement.delete();
  }
}
