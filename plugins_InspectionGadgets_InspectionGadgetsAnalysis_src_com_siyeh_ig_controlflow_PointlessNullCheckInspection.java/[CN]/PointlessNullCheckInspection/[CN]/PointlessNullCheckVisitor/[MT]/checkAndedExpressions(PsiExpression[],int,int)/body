{
  final PsiExpression lhs=ParenthesesUtils.stripParentheses(operands[i]);
  final PsiExpression rhs=ParenthesesUtils.stripParentheses(operands[j]);
  final PsiBinaryExpression binaryExpression;
  final PsiExpression possibleInstanceofExpression;
  final boolean checkRef;
  if (lhs instanceof PsiBinaryExpression) {
    binaryExpression=(PsiBinaryExpression)lhs;
    possibleInstanceofExpression=rhs;
    checkRef=true;
  }
 else   if (rhs instanceof PsiBinaryExpression) {
    binaryExpression=(PsiBinaryExpression)rhs;
    possibleInstanceofExpression=lhs;
    checkRef=false;
  }
 else {
    return false;
  }
  final IElementType tokenType=binaryExpression.getOperationTokenType();
  if (!tokenType.equals(JavaTokenType.NE)) {
    return false;
  }
  final PsiVariable variable=checkExpressions(binaryExpression,possibleInstanceofExpression);
  if (variable == null || checkRef && isVariableUsed(operands,i,j,variable)) {
    return false;
  }
  registerError(binaryExpression,binaryExpression,Boolean.valueOf(checkRef));
  return true;
}
