{
  super(project);
  myDependencyValidationManager=dependencyValidationManager;
  myNamedScopeManager=namedScopeManager;
  myScopeListener=new NamedScopesHolder.ScopeListener(){
    Alarm refreshProjectViewAlarm=new Alarm();
    @Override public void scopesChanged(){
      refreshProjectViewAlarm.cancelAllRequests();
      refreshProjectViewAlarm.addRequest(new Runnable(){
        @Override public void run(){
          if (myProject.isDisposed()) {
            return;
          }
          final String subId=getSubId();
          ProjectView projectView=ProjectView.getInstance(myProject);
          final String id=projectView.getCurrentViewId();
          projectView.removeProjectPane(ScopeViewPane.this);
          projectView.addProjectPane(ScopeViewPane.this);
          if (id != null) {
            if (Comparing.strEqual(id,getId())) {
              projectView.changeView(id,subId);
            }
 else {
              projectView.changeView(id);
            }
          }
        }
      }
,10);
    }
  }
;
  myDependencyValidationManager.addScopeListener(myScopeListener);
  myNamedScopeManager.addScopeListener(myScopeListener);
}
