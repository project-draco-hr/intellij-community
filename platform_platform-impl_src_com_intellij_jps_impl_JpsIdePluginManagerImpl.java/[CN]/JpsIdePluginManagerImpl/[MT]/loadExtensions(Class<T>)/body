{
  String resourceName="META-INF/services/" + extensionClass.getName();
  Set<Class<T>> classes=new LinkedHashSet<>();
  Set<ClassLoader> loaders=new LinkedHashSet<>();
  for (  PluginDescriptor plugin : myExternalBuildPlugins) {
    ContainerUtil.addIfNotNull(loaders,plugin.getPluginClassLoader());
  }
  if (loaders.isEmpty()) {
    loaders.add(getClass().getClassLoader());
  }
  Set<String> loadedUrls=new HashSet<>();
  for (  ClassLoader loader : loaders) {
    try {
      Enumeration<URL> resources=loader.getResources(resourceName);
      while (resources.hasMoreElements()) {
        URL url=resources.nextElement();
        if (loadedUrls.add(url.toExternalForm())) {
          loadImplementations(url,loader,classes);
        }
      }
    }
 catch (    IOException e) {
      throw new ServiceConfigurationError("Cannot load configuration files for " + extensionClass.getName(),e);
    }
  }
  List<T> extensions=new ArrayList<>();
  for (  Class<T> aClass : classes) {
    try {
      extensions.add(extensionClass.cast(aClass.newInstance()));
    }
 catch (    Exception e) {
      throw new ServiceConfigurationError("Class " + aClass.getName() + " cannot be instantiated",e);
    }
  }
  return extensions;
}
