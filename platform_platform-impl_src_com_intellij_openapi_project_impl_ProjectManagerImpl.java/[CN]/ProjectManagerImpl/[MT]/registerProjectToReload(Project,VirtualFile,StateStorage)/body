{
  if (LOG.isDebugEnabled()) {
    LOG.debug("[RELOAD] Registering project to reload: " + file,new Exception());
  }
  if (project == null) {
    myChangedApplicationFiles.add(Pair.create(file,storage));
  }
 else {
    List<Pair<VirtualFile,StateStorage>> changes=CHANGED_FILES_KEY.get(project);
    if (changes == null) {
      changes=new SmartList<Pair<VirtualFile,StateStorage>>();
      CHANGED_FILES_KEY.set(project,changes);
    }
synchronized (changes) {
      changes.add(Pair.create(file,storage));
    }
  }
  if (storage instanceof StateStorageBase) {
    ((StateStorageBase)storage).disableSaving();
  }
  if (isReloadUnblocked()) {
    myChangedFilesAlarm.cancelAndRequest();
  }
}
