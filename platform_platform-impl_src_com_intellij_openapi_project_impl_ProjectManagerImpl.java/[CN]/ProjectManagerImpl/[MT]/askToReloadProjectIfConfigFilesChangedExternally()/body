{
  Set<Project> projects;
synchronized (myChangedProjectFiles) {
    if (myChangedProjectFiles.isEmpty()) {
      return;
    }
    projects=new THashSet<Project>(myChangedProjectFiles.keySet());
  }
  List<Pair<Project,Collection<ChangedFileEntry>>> projectsToReload=new SmartList<Pair<Project,Collection<ChangedFileEntry>>>();
  for (  Project project : projects) {
    Collection<ChangedFileEntry> changedFileEntries=shouldReloadProject(project);
    if (changedFileEntries != null) {
      projectsToReload.add(Pair.create(project,changedFileEntries));
    }
  }
  for (  Pair<Project,Collection<ChangedFileEntry>> projectToReload : projectsToReload) {
    reloadProjectImpl(projectToReload.first,projectToReload.second);
  }
}
