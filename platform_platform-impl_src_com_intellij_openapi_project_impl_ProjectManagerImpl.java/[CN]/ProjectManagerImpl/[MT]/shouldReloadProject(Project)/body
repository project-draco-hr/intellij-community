{
  if (project.isDisposed()) {
    return false;
  }
  Collection<Pair<VirtualFile,StateStorage>> causes=new SmartList<Pair<VirtualFile,StateStorage>>();
  Collection<Pair<VirtualFile,StateStorage>> changes;
synchronized (myChangedProjectFiles) {
    changes=myChangedProjectFiles.remove(project);
    if (!ContainerUtil.isEmpty(changes)) {
      for (      Pair<VirtualFile,StateStorage> change : changes) {
        causes.add(change);
      }
    }
  }
  return !causes.isEmpty() && ComponentStoreImpl.reloadStore(causes,((ProjectEx)project).getStateStore()) == ReloadComponentStoreStatus.RESTART_AGREED;
}
