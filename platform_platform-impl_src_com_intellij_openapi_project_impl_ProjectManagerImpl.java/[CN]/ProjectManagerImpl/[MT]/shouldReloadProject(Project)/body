{
  if (project.isDisposed()) {
    return null;
  }
  Collection<Pair<VirtualFile,StateStorage>> causes=new SmartList<Pair<VirtualFile,StateStorage>>();
  Collection<ChangedFileEntry> changes;
synchronized (myChangedProjectFiles) {
    changes=myChangedProjectFiles.remove(project);
    if (!ContainerUtil.isEmpty(changes)) {
      for (      ChangedFileEntry change : changes) {
        causes.add(Pair.create(change.file,change.storage));
      }
    }
  }
  if (causes.isEmpty()) {
    return null;
  }
  ReloadComponentStoreStatus status=ComponentStoreImpl.reloadStore(causes,((ProjectEx)project).getStateStore());
  return status == ReloadComponentStoreStatus.RESTART_REQUIRED ? changes : null;
}
