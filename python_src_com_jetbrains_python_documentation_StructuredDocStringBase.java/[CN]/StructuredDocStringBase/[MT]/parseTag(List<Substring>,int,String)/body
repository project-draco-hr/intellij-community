{
  final Substring lineWithPrefix=lines.get(lineno).trim();
  if (lineWithPrefix.startsWith(tagPrefix)) {
    final Substring line=lineWithPrefix.substring(tagPrefix.length());
    final Matcher strictTagMatcher=RE_STRICT_TAG_LINE.matcher(line);
    final Matcher looseTagMatcher=RE_LOOSE_TAG_LINE.matcher(line);
    Matcher tagMatcher=null;
    if (strictTagMatcher.matches()) {
      tagMatcher=strictTagMatcher;
    }
 else     if (looseTagMatcher.matches()) {
      tagMatcher=looseTagMatcher;
    }
    if (tagMatcher != null) {
      final Substring tagName=line.getMatcherGroup(tagMatcher,1);
      final Substring argName=line.getMatcherGroup(tagMatcher,2).trim();
      final TextRange firstArgLineRange=line.getMatcherGroup(tagMatcher,3).trim().getTextRange();
      final int linesCount=lines.size();
      final int argStart=firstArgLineRange.getStartOffset();
      int argEnd=firstArgLineRange.getEndOffset();
      while (lineno + 1 < linesCount) {
        final Substring nextLine=lines.get(lineno + 1).trim();
        if (nextLine.length() == 0 || nextLine.startsWith(tagPrefix)) {
          break;
        }
        argEnd=nextLine.getTextRange().getEndOffset();
        lineno++;
      }
      final Substring argValue=new Substring(argName.getSuperString(),argStart,argEnd);
      final String tagNameString=tagName.toString();
      if (argName.length() == 0) {
        mySimpleTagValues.put(tagNameString,argValue);
      }
 else {
        if ("param".equals(tagNameString) || "parameter".equals(tagNameString) || "arg".equals(tagNameString)|| "argument".equals(tagNameString)) {
          final Matcher argTypeMatcher=RE_ARG_TYPE.matcher(argName);
          if (argTypeMatcher.matches()) {
            final Substring type=argName.getMatcherGroup(argTypeMatcher,1).trim();
            final Substring arg=argName.getMatcherGroup(argTypeMatcher,2);
            getTagValuesMap(TYPE).put(arg,type);
          }
 else {
            getTagValuesMap(tagNameString).put(argName,argValue);
          }
        }
 else {
          getTagValuesMap(tagNameString).put(argName,argValue);
        }
      }
    }
  }
  return lineno;
}
