{
  if (!(g2d instanceof Graphics2D)) {
    return;
  }
  Graphics2D g=(Graphics2D)g2d;
  Insets b=progressBar.getInsets();
  int barRectWidth=progressBar.getWidth() - (b.right + b.left);
  int barRectHeight=progressBar.getHeight() - (b.top + b.bottom);
  if (barRectWidth <= 0 || barRectHeight <= 0) {
    return;
  }
  g.setColor(new JBColor(Gray._240,Gray._128));
  int w=c.getWidth();
  int h=c.getPreferredSize().height;
  if (c.isOpaque()) {
    g.fillRect(0,(c.getHeight() - h) / 2,w,h);
  }
  g.setColor(new JBColor(Gray._165,Gray._88));
  final GraphicsConfig config=GraphicsUtil.setupAAPainting(g);
  g.translate(0f,(c.getHeight() - h) / 2f);
  int x=-offset;
  final float R=JBUI.scale(8f);
  final float R2=JBUI.scale(9f);
  final Area containingRoundRect=new Area(new RoundRectangle2D.Float(1f,1f,w - 2f,h - 2f,R,R));
  while (x < Math.max(c.getWidth(),c.getHeight())) {
    Path2D.Double path=new Path2D.Double();
    float ww=getPeriodLength() / 2f;
    path.moveTo(x,0);
    path.lineTo(x + ww,0);
    path.lineTo(x + ww - h / 2,h);
    path.lineTo(x - h / 2,h);
    path.lineTo(x,0);
    path.closePath();
    final Area area=new Area(path);
    area.intersect(containingRoundRect);
    g.fill(area);
    x+=getPeriodLength();
  }
  offset=(offset + 1) % getPeriodLength();
  Area area=new Area(new Rectangle2D.Float(0,0,w,h));
  area.subtract(new Area(new RoundRectangle2D.Float(1f,1f,w - 2f,h - 2f,R,R)));
  g.setPaint(Gray._128);
  if (c.isOpaque()) {
    g.fill(area);
  }
  area.subtract(new Area(new RoundRectangle2D.Float(0,0,w,h,R2,R2)));
  g.setPaint(c.getParent().getBackground());
  if (c.isOpaque()) {
    g.fill(area);
  }
  g.draw(new RoundRectangle2D.Float(1f,1f,w - 2f - 1f,h - 2f - 1f,R,R));
  g.translate(0f,-(c.getHeight() - h) / 2f);
  if (progressBar.isStringPainted()) {
    if (progressBar.getOrientation() == SwingConstants.HORIZONTAL) {
      paintString(g,b.left,b.top,barRectWidth,barRectHeight,boxRect.x,boxRect.width);
    }
 else {
      paintString(g,b.left,b.top,barRectWidth,barRectHeight,boxRect.y,boxRect.height);
    }
  }
  config.restore();
}
