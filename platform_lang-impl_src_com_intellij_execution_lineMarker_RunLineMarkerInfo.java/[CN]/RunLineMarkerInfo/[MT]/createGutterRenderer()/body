{
  return new LineMarkerGutterIconRenderer<PsiElement>(this){
    @Override public boolean isNavigateAction(){
      return true;
    }
    @NotNull @Override public ActionGroup getPopupMenuActions(){
      List<AnAction> actions=new ArrayList<AnAction>();
      Executor[] executors=ExecutorRegistry.getInstance().getRegisteredExecutors();
      actions.addAll(ContainerUtil.mapNotNull(executors,new Function<Executor,AnAction>(){
        @Override public AnAction fun(        Executor executor){
          return new ActionWrapper(ActionManager.getInstance().getAction(executor.getContextActionId()));
        }
      }
));
      actions.add(Separator.getInstance());
      actions.addAll(ContainerUtil.mapNotNull(RunLineMarkerContributor.EXTENSION.allForLanguage(myElement.getLanguage()),new NullableFunction<RunLineMarkerContributor,AnAction>(){
        @Nullable @Override public AnAction fun(        RunLineMarkerContributor contributor){
          AnAction action=contributor.getAdditionalAction(myElement);
          return action != null ? new ActionWrapper(action) : null;
        }
      }
));
      return new DefaultActionGroup(actions);
    }
    @Override public AnAction getClickAction(){
      return null;
    }
  }
;
}
