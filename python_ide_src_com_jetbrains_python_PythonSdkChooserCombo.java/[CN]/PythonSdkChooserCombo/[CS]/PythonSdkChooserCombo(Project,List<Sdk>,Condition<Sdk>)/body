{
  Sdk initialSelection=null;
  for (  Sdk sdk : sdks) {
    if (acceptableSdkCondition.value(sdk)) {
      initialSelection=sdk;
      break;
    }
  }
  getComboBox().setModel(new CollectionComboBoxModel(sdks,initialSelection));
  getComboBox().setRenderer(new SdkListCellRenderer("<no interpreter>"){
    @Override protected Icon getSdkIcon(    Sdk sdk){
      final PythonSdkFlavor flavor=PythonSdkFlavor.getFlavor(sdk);
      return flavor != null ? flavor.getIcon() : ((SdkType)sdk.getSdkType()).getIcon();
    }
  }
);
  addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      final PythonSdkConfigurable configurable=new PythonSdkConfigurable(project);
      configurable.setNewProject(true);
      ShowSettingsUtil.getInstance().editConfigurable(PythonSdkChooserCombo.this,configurable);
      Sdk selection=configurable.getRealSelectedSdk();
      final List<Sdk> sdks=PythonSdkType.getAllSdks();
      getComboBox().setModel(new CollectionComboBoxModel(sdks,selection));
      notifyChanged(e);
    }
  }
);
  getComboBox().addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      notifyChanged(e);
    }
  }
);
}
