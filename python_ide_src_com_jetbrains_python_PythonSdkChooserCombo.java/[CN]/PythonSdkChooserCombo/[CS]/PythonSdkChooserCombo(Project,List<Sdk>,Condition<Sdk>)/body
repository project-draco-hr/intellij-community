{
  Sdk initialSelection=null;
  for (  Sdk sdk : sdks) {
    if (acceptableSdkCondition.value(sdk)) {
      initialSelection=sdk;
      break;
    }
  }
  final JComboBox comboBox=getComboBox();
  comboBox.setModel(new CollectionComboBoxModel(sdks,initialSelection));
  comboBox.setRenderer(new SdkListCellRenderer("<no interpreter>"){
    @Override protected Icon getSdkIcon(    Sdk sdk){
      final PythonSdkFlavor flavor=PythonSdkFlavor.getFlavor(sdk);
      final Icon icon=flavor != null ? flavor.getIcon() : ((SdkType)sdk.getSdkType()).getIcon();
      return sdk instanceof PyDetectedSdk ? IconLoader.getTransparentIcon(icon) : icon;
    }
  }
);
  addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      final List<Sdk> sdks=PythonSdkType.getAllSdks();
      PythonSdkDetailsDialog dialog=new PythonSdkDetailsDialog(project,new NullableConsumer<Sdk>(){
        @Override public void consume(        @Nullable Sdk sdk){
          comboBox.setModel(new CollectionComboBoxModel(sdks,sdk));
        }
      }
);
      dialog.show();
      notifyChanged(e);
    }
  }
);
  comboBox.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      notifyChanged(e);
    }
  }
);
}
