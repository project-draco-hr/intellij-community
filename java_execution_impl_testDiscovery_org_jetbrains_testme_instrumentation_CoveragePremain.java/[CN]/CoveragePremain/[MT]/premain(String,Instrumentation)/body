{
  File archiveFile=new File(getArchivePath());
  final File lib=archiveFile.getParentFile();
  final URL[] urls=new URL[3];
  urls[0]=fileToURL(archiveFile);
  urls[1]=fileToURL(new File(lib,"asm-all.jar"));
  urls[2]=fileToURL(new File(lib,"trove4j.jar"));
  final Class instrumentator=Class.forName("org.jetbrains.testme.instrumentation.TestDiscoveryInstrumentator",true,new URLClassLoader(urls){
    protected Class loadClass(    String name,    boolean resolve) throws ClassNotFoundException {
synchronized (this) {
        Class result=findLoadedClass(name);
        if (result == null) {
          try {
            result=findClass(name);
          }
 catch (          ClassNotFoundException e) {
          }
        }
        if (result != null && resolve) {
          resolveClass(result);
        }
        if (result != null) {
          return result;
        }
      }
      return getParent().loadClass(name);
    }
  }
);
  final Method premainMethod=instrumentator.getDeclaredMethod("premain",new Class[]{String.class,Instrumentation.class});
  premainMethod.invoke(null,new Object[]{argsString,instrumentation});
}
