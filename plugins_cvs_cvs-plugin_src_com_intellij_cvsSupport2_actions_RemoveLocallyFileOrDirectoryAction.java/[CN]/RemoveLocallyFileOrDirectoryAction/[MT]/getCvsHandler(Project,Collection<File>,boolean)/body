{
  final ArrayList<File> files=new ArrayList<>();
  for (  final File file : filesToRemove) {
    if (CvsUtil.fileIsLocallyAdded(file)) {
      CvsUtil.removeEntryFor(file);
    }
 else {
      files.add(file);
    }
  }
  if (files.isEmpty())   return CvsHandler.NULL;
  Collection<FilePath> filesToBeRemoved=filesToFilePaths(files);
  if (showDialog) {
    final AbstractVcsHelper vcsHelper=AbstractVcsHelper.getInstance(project);
    filesToBeRemoved=vcsHelper.selectFilePathsToProcess(filesToFilePaths(files),CvsBundle.message("dialog.title.delete.files.from.cvs"),null,CvsBundle.message("dialog.title.delete.file.from.cvs"),CvsBundle.message("confirmation.text.delete.file.from.cvs"),VcsShowConfirmationOption.STATIC_SHOW_CONFIRMATION,CvsBundle.message("button.text.delete.from.cvs"),CommonBundle.getCancelButtonText());
    if (filesToBeRemoved == null || filesToBeRemoved.isEmpty())     return CvsHandler.NULL;
  }
  return CommandCvsHandler.createRemoveFilesHandler(project,ChangesUtil.filePathsToFiles(filesToBeRemoved));
}
