{
  EditorSettingsExternalizable editorSettings=EditorSettingsExternalizable.getInstance();
  CodeInsightSettings codeInsightSettings=CodeInsightSettings.getInstance();
  UISettings uiSettings=UISettings.getInstance();
  VcsApplicationSettings vcsSettings=VcsApplicationSettings.getInstance();
  boolean isModified=isModified(myCbSmoothScrolling,editorSettings.isSmoothScrolling());
  isModified|=isModified(myCbHighlightBraces,codeInsightSettings.HIGHLIGHT_BRACES);
  isModified|=isModified(myCbHighlightScope,codeInsightSettings.HIGHLIGHT_SCOPE);
  isModified|=isModified(myCbHighlightIdentifierUnderCaret,codeInsightSettings.HIGHLIGHT_IDENTIFIER_UNDER_CARET);
  isModified|=isModified(myCbUseSoftWrapsAtEditor,editorSettings.isUseSoftWraps(SoftWrapAppliancePlaces.MAIN_EDITOR));
  isModified|=isModified(myCbUseCustomSoftWrapIndent,editorSettings.isUseCustomSoftWrapIndent());
  isModified|=editorSettings.getCustomSoftWrapIndent() != getCustomSoftWrapIndent();
  isModified|=isModified(myCbShowSoftWrapsOnlyOnCaretLine,!editorSettings.isAllSoftWrapsShown());
  isModified|=isModified(myCbVirtualSpace,editorSettings.isVirtualSpace());
  isModified|=isModified(myCbCaretInsideTabs,editorSettings.isCaretInsideTabs());
  isModified|=isModified(myCbVirtualPageAtBottom,editorSettings.isAdditionalPageAtBottom());
  isModified|=getMaxClipboardContents() != uiSettings.MAX_CLIPBOARD_CONTENTS;
  isModified|=!getStripTrailingSpacesValue().equals(editorSettings.getStripTrailingSpaces());
  isModified|=isModified(myCbEnsureBlankLineBeforeCheckBox,editorSettings.isEnsureNewLineAtEOF());
  isModified|=isModified(myCbShowQuickDocOnMouseMove,editorSettings.isShowQuickDocOnMouseOverElement());
  Long quickDocDelay=getQuickDocDelayFromGui();
  if (quickDocDelay != null && !quickDocDelay.equals(Long.valueOf(editorSettings.getQuickDocOnMouseOverElementDelayMillis()))) {
    return true;
  }
  isModified|=isModified(myCbEnableDnD,editorSettings.isDndEnabled());
  isModified|=isModified(myCbEnableWheelFontChange,editorSettings.isWheelFontChangeEnabled());
  isModified|=isModified(myCbHonorCamelHumpsWhenSelectingByClicking,editorSettings.isMouseClickSelectionHonorsCamelWords());
  isModified|=myRbPreferMovingCaret.isSelected() != editorSettings.isRefrainFromScrolling();
  isModified|=isModified(myRecentFilesLimitField,UISettings.getInstance().RECENT_FILES_LIMIT);
  isModified|=isModified(myCbRenameLocalVariablesInplace,editorSettings.isVariableInplaceRenameEnabled());
  isModified|=isModified(myPreselectCheckBox,editorSettings.isPreselectRename());
  isModified|=isModified(myShowInlineDialogForCheckBox,editorSettings.isShowInlineLocalDialog());
  isModified|=isModified(myShowNotificationAfterReformatCodeCheckBox,editorSettings.getOptions().SHOW_NOTIFICATION_AFTER_REFORMAT_CODE_ACTION);
  isModified|=isModified(myShowNotificationAfterOptimizeImportsCheckBox,editorSettings.getOptions().SHOW_NOTIFICATION_AFTER_OPTIMIZE_IMPORTS_ACTION);
  isModified|=isModified(myShowLSTInGutterCheckBox,vcsSettings.SHOW_LST_GUTTER_MARKERS);
  isModified|=isModified(myShowWhitespacesModificationsInLSTGutterCheckBox,vcsSettings.SHOW_WHITESPACES_IN_LST);
  isModified|=myErrorHighlightingPanel.isModified();
  RichCopySettings settings=RichCopySettings.getInstance();
  isModified|=isModified(myCbEnableRichCopyByDefault,settings.isEnabled());
  isModified|=!Comparing.equal(settings.getSchemeName(),myRichCopyColorSchemeComboBox.getSelectedItem());
  return isModified;
}
