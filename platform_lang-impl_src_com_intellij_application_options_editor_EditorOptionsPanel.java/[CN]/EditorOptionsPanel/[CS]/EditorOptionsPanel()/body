{
  if (SystemInfo.isMac) {
    myCbEnableWheelFontChange.setText(ApplicationBundle.message("checkbox.enable.ctrl.mousewheel.changes.font.size.macos"));
  }
  myStripTrailingSpacesCombo.addItem(STRIP_CHANGED);
  myStripTrailingSpacesCombo.addItem(STRIP_ALL);
  myStripTrailingSpacesCombo.addItem(STRIP_NONE);
  ActionListener explainer=new ActionListener(){
    @Override public void actionPerformed(    ActionEvent e){
      explainTrailingSpaces(getStripTrailingSpacesValue());
    }
  }
;
  myStripTrailingSpacesCombo.addActionListener(explainer);
  myCbVirtualSpace.addActionListener(explainer);
  myHighlightSettingsPanel.setLayout(new BorderLayout());
  myHighlightSettingsPanel.add(myErrorHighlightingPanel.getPanel(),BorderLayout.CENTER);
  myCbRenameLocalVariablesInplace.setVisible(OptionsApplicabilityFilter.isApplicable(OptionId.RENAME_IN_PLACE));
  myRichCopyColorSchemeComboBox.setRenderer(new ListCellRendererWrapper<String>(){
    @Override public void customize(    JList list,    String value,    int index,    boolean selected,    boolean hasFocus){
      final String textToUse;
      if (RichCopySettings.ACTIVE_GLOBAL_SCHEME_MARKER.equals(value)) {
        textToUse=ACTIVE_COLOR_SCHEME;
      }
 else {
        textToUse=value;
      }
      setText(textToUse);
    }
  }
);
  myConfigurable=new MyConfigurable();
  initQuickDocProcessing();
  initSoftWrapsSettingsProcessing();
}
