{
  PyElementGenerator elementGenerator=PyElementGenerator.getInstance(project);
  if (myIsLeftLeft) {
    PyExpression newLeftExpression=invertExpression(leftExpression,elementGenerator);
    if (myIsRightLeft) {
      PyBinaryExpression binaryExpression=elementGenerator.createBinaryExpression((rightExpression).getPsiOperator().getText(),newLeftExpression,getLargeRightExpression(rightExpression,project));
      leftExpression.replace(binaryExpression);
      rightExpression.delete();
    }
 else {
      PsiElement op=rightExpression.getPsiOperator();
      String newOp=invertOperator(op);
      PyBinaryExpression binaryExpression=elementGenerator.createBinaryExpression(newOp,newLeftExpression,rightExpression.getLeftExpression());
      leftExpression.replace(binaryExpression);
      rightExpression.delete();
    }
  }
 else {
    if (myIsRightLeft) {
      PyBinaryExpression binaryExpression=elementGenerator.createBinaryExpression((rightExpression).getPsiOperator().getText(),leftExpression,getLargeRightExpression(rightExpression,project));
      leftExpression.replace(binaryExpression);
      rightExpression.delete();
    }
 else {
      PsiElement op=rightExpression.getPsiOperator();
      String newOp=invertOperator(op);
      PyBinaryExpression binaryExpression=elementGenerator.createBinaryExpression(newOp,leftExpression,rightExpression.getLeftExpression());
      leftExpression.replace(binaryExpression);
      rightExpression.delete();
    }
  }
}
