{
  Object moduleContext=LangDataKeys.MODULE_CONTEXT.getData(dataProvider);
  if (moduleContext != null) {
    return moduleContext;
  }
  Project project=PlatformDataKeys.PROJECT.getData(dataProvider);
  if (project == null) {
    PsiElement element=LangDataKeys.PSI_ELEMENT.getData(dataProvider);
    if (element == null) {
      PsiElement[] psiElements=LangDataKeys.PSI_ELEMENT_ARRAY.getData(dataProvider);
      if (psiElements != null && psiElements.length > 0) {
        element=psiElements[0];
      }
    }
    if (element == null || !element.isValid())     return null;
    project=element.getProject();
  }
  VirtualFile[] files=PlatformDataKeys.VIRTUAL_FILE_ARRAY.getData(dataProvider);
  if (files == null) {
    GetDataRule dataRule=((DataManagerImpl)DataManager.getInstance()).getDataRule(PlatformDataKeys.VIRTUAL_FILE_ARRAY.getName());
    if (dataRule != null) {
      files=(VirtualFile[])dataRule.getData(dataProvider);
    }
  }
  if (files == null) {
    return null;
  }
  Module singleModule=null;
  for (  VirtualFile file : files) {
    Module module=ModuleUtilCore.findModuleForFile(file,project);
    if (module == null) {
      return null;
    }
    if (singleModule == null) {
      singleModule=module;
    }
 else     if (module != singleModule) {
      return null;
    }
  }
  return singleModule;
}
