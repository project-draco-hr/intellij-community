{
  LinkedList<Statement> stack=new LinkedList<>();
  stack.add(stat);
  while (!stack.isEmpty()) {
    Statement st=stack.remove(0);
    if (stack.isEmpty() || setStats.contains(st)) {
      if (st.isLabeled() && !stack.isEmpty() || st.getExprents() != null) {
        return st;
      }
      stack.clear();
switch (st.type) {
case Statement.TYPE_SEQUENCE:
        stack.addAll(0,st.getStats());
      break;
case Statement.TYPE_IF:
case Statement.TYPE_ROOT:
case Statement.TYPE_SWITCH:
case Statement.TYPE_SYNCRONIZED:
    stack.add(st.getFirst());
  break;
default :
return st;
}
}
}
return null;
}
