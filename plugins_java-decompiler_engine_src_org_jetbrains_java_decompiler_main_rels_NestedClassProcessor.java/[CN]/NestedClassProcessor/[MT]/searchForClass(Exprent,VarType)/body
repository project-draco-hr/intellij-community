{
  List<Exprent> lst=exprent.getAllExprents(true);
  lst.add(exprent);
  String classname=classtype.value;
  for (  Exprent expr : lst) {
    boolean res=false;
switch (expr.type) {
case Exprent.EXPRENT_CONST:
      ConstExprent cexpr=(ConstExprent)expr;
    res=(VarType.VARTYPE_CLASS.equals(cexpr.getConstType()) && classname.equals(cexpr.getValue()) || classtype.equals(cexpr.getConstType()));
  break;
case Exprent.EXPRENT_FIELD:
res=classname.equals(((FieldExprent)expr).getClassname());
break;
case Exprent.EXPRENT_INVOCATION:
res=classname.equals(((InvocationExprent)expr).getClassname());
break;
case Exprent.EXPRENT_NEW:
VarType newType=expr.getExprType();
res=newType.type == CodeConstants.TYPE_OBJECT && classname.equals(newType.value);
break;
case Exprent.EXPRENT_VAR:
VarExprent vexpr=(VarExprent)expr;
if (vexpr.isDefinition()) {
VarType vtype=vexpr.getVarType();
if (classtype.equals(vtype) || (vtype.arrayDim > 0 && classtype.value.equals(vtype.value))) {
res=true;
}
}
}
if (res) {
return true;
}
}
return false;
}
