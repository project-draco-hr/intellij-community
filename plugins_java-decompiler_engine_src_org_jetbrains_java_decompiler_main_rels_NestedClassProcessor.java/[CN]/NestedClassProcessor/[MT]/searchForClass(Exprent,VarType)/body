{
  List<Exprent> lst=exprent.getAllExprents(true);
  lst.add(exprent);
  String classname=classType.value;
  for (  Exprent expr : lst) {
    boolean res=false;
switch (expr.type) {
case Exprent.EXPRENT_CONST:
      ConstExprent constExpr=(ConstExprent)expr;
    res=(VarType.VARTYPE_CLASS.equals(constExpr.getConstType()) && classname.equals(constExpr.getValue()) || classType.equals(constExpr.getConstType()));
  break;
case Exprent.EXPRENT_FIELD:
res=classname.equals(((FieldExprent)expr).getClassname());
break;
case Exprent.EXPRENT_INVOCATION:
res=classname.equals(((InvocationExprent)expr).getClassname());
break;
case Exprent.EXPRENT_NEW:
VarType newType=expr.getExprType();
res=newType.type == CodeConstants.TYPE_OBJECT && classname.equals(newType.value);
break;
case Exprent.EXPRENT_VAR:
VarExprent varExpr=(VarExprent)expr;
if (varExpr.isDefinition()) {
VarType varType=varExpr.getVarType();
if (classType.equals(varType) || (varType.arrayDim > 0 && classType.value.equals(varType.value))) {
res=true;
}
}
}
if (res) {
return true;
}
}
return false;
}
