{
  final Project project=getProject();
  try {
    LightPlatformTestCase.doTearDown(project,myApplication,false);
    for (    ModuleFixtureBuilder moduleFixtureBuilder : myModuleFixtureBuilders) {
      moduleFixtureBuilder.getFixture().tearDown();
    }
    final CompositeException compositeException=new CompositeException();
    EdtTestUtil.runInEdtAndWait(new ThrowableRunnable<Throwable>(){
      @Override public void run() throws Throwable {
        PlatformTestCase.closeAndDisposeProjectAndCheckThatNoOpenProjects(project,compositeException);
      }
    }
);
    myProject=null;
    for (    File fileToDelete : myFilesToDelete) {
      if (!FileUtil.delete(fileToDelete)) {
        compositeException.add(new IOException("Can't delete " + fileToDelete));
      }
    }
    if (!compositeException.isEmpty()) {
      throw compositeException;
    }
  }
  finally {
    try {
      super.tearDown();
    }
  finally {
      myEditorListenerTracker.checkListenersLeak();
      myThreadTracker.checkLeak();
      LightPlatformTestCase.checkEditorsReleased();
      PlatformTestCase.cleanupApplicationCaches(project);
      InjectedLanguageManagerImpl.checkInjectorsAreDisposed(project);
    }
  }
}
