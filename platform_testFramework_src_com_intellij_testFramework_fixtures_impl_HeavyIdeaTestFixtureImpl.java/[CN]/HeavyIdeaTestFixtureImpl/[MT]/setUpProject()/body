{
  UIUtil.invokeAndWaitIfNeeded(new Runnable(){
    @Override public void run(){
      try {
        File tempDirectory=FileUtil.createTempDirectory(myName,"");
        PlatformTestCase.synchronizeTempDirVfs(LocalFileSystem.getInstance().refreshAndFindFileByIoFile(tempDirectory));
        myFilesToDelete.add(tempDirectory);
        File projectFile=new File(tempDirectory,myName + PROJECT_FILE_SUFFIX);
        LocalFileSystem.getInstance().refreshAndFindFileByIoFile(projectFile);
        ByteArrayOutputStream buffer=new ByteArrayOutputStream();
        new Throwable(projectFile.getPath()).printStackTrace(new PrintStream(buffer));
        myProject=PlatformTestCase.createProject(projectFile,buffer.toString());
        ProjectManagerEx.getInstanceEx().openTestProject(myProject);
        for (        ModuleFixtureBuilder moduleFixtureBuilder : myModuleFixtureBuilders) {
          moduleFixtureBuilder.getFixture().setUp();
        }
        LightPlatformTestCase.clearUncommittedDocuments(myProject);
        ((FileTypeManagerImpl)FileTypeManager.getInstance()).drainReDetectQueue();
      }
 catch (      Exception e) {
        throw new RuntimeException(e);
      }
    }
  }
);
}
