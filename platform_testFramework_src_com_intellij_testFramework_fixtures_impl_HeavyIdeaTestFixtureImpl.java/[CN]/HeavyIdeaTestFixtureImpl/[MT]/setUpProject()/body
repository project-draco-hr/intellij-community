{
  new WriteCommandAction.Simple(null){
    @Override protected void run() throws Throwable {
      File tempDirectory=FileUtil.createTempDirectory(myName,"");
      PlatformTestCase.synchronizeTempDirVfs(LocalFileSystem.getInstance().refreshAndFindFileByIoFile(tempDirectory));
      myFilesToDelete.add(tempDirectory);
      File projectFile=new File(tempDirectory,myName + PROJECT_FILE_SUFFIX);
      LocalFileSystem.getInstance().refreshAndFindFileByIoFile(projectFile);
      ByteArrayOutputStream buffer=new ByteArrayOutputStream();
      new Throwable(projectFile.getPath()).printStackTrace(new PrintStream(buffer));
      myProject=PlatformTestCase.createProject(projectFile,buffer.toString());
      for (      ModuleFixtureBuilder moduleFixtureBuilder : myModuleFixtureBuilders) {
        moduleFixtureBuilder.getFixture().setUp();
      }
      StartupManagerImpl sm=(StartupManagerImpl)StartupManager.getInstance(myProject);
      sm.runStartupActivities();
      sm.startCacheUpdate();
      sm.runPostStartupActivities();
      ProjectManagerEx.getInstanceEx().openTestProject(myProject);
      LightPlatformTestCase.clearUncommittedDocuments(myProject);
      ((FileTypeManagerImpl)FileTypeManager.getInstance()).drainReDetectQueue();
    }
  }
.execute().throwException();
}
