{
  final TreeTableTree tree=myTreeTable.getTree();
  if (Location.DATA_KEYS.is(dataId)) {
    TreePath[] paths=tree.getSelectionModel().getSelectionPaths();
    if (paths != null && paths.length > 1) {
      final List<Location<?>> locations=new ArrayList<Location<?>>(paths.length);
      for (      TreePath path : paths) {
        if (tree.isPathSelected(path.getParentPath()))         continue;
        ExecutionInfo executionInfo=getSelectedExecution(path);
        if (executionInfo != null) {
          final Location<?> location=(Location<?>)GradleRunnerUtil.getData(myProject,Location.DATA_KEY.getName(),executionInfo);
          if (location != null) {
            locations.add(location);
          }
        }
      }
      return locations.isEmpty() ? null : locations.toArray(new Location[locations.size()]);
    }
  }
  final TreePath selectionPath=tree.getSelectionPath();
  if (selectionPath == null)   return null;
  ExecutionInfo executionInfo=getSelectedExecution(selectionPath);
  if (executionInfo == null)   return null;
  return GradleRunnerUtil.getData(myProject,dataId,executionInfo);
}
