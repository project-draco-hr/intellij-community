{
  myFixture.addFileToProject("qwe/asd/p.properties","");
  final PsiFile file=myFixture.addFileToProject("qwe/asd/p_en.properties","");
  final PropertiesFile propertiesFile=PropertiesImplUtil.getPropertiesFile(file);
  assertNotNull(propertiesFile);
  final ResourceBundleManager resourceBundleManager=ResourceBundleManager.getInstance(getProject());
  resourceBundleManager.dissociateResourceBundle(propertiesFile.getResourceBundle());
  final PropertiesFile propFile1=PropertiesImplUtil.getPropertiesFile(myFixture.addFileToProject("qwe1/asd1/p.properties",""));
  final PropertiesFile propFile2=PropertiesImplUtil.getPropertiesFile(myFixture.addFileToProject("qwe1/asd1/p_abc.properties",""));
  assertNotNull(propFile1);
  assertNotNull(propFile2);
  resourceBundleManager.combineToResourceBundle(ContainerUtil.newArrayList(propFile1,propFile2),"p");
  final PsiFile someFile=myFixture.addFileToProject("to_remove/asd.txt","");
  final PsiDirectory toRemove=someFile.getParent();
  assertNotNull(toRemove);
  ApplicationManager.getApplication().runWriteAction(new Runnable(){
    @Override public void run(){
      toRemove.delete();
    }
  }
);
  final ResourceBundleManagerState state=resourceBundleManager.getState();
  assertNotNull(state);
  assertSize(1,state.getCustomResourceBundles());
  assertSize(2,state.getDissociatedFiles());
  final PsiDirectory directory=propertiesFile.getParent().getParent();
  assertNotNull(directory);
  ApplicationManager.getApplication().runWriteAction(new Runnable(){
    @Override public void run(){
      directory.delete();
    }
  }
);
  assertSize(1,state.getCustomResourceBundles());
  assertSize(0,state.getDissociatedFiles());
  final PsiDirectory directory1=propFile1.getParent().getParent();
  assertNotNull(directory1);
  ApplicationManager.getApplication().runWriteAction(new Runnable(){
    @Override public void run(){
      directory1.delete();
    }
  }
);
  assertSize(0,state.getCustomResourceBundles());
  assertSize(0,state.getDissociatedFiles());
}
