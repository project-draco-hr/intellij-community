{
  myConfigurations=configurations;
  myTemplatesList.setModel(new MyListModel());
  myTemplatesList.setCellRenderer(new DefaultListCellRenderer(){
    public Component getListCellRendererComponent(    JList list,    Object value,    int index,    boolean isSelected,    boolean cellHasFocus){
      JLabel component=(JLabel)super.getListCellRendererComponent(list,value,index,isSelected,cellHasFocus);
      Configuration configuration=myConfigurations.get(index);
      component.setText(configuration.getName());
      return component;
    }
  }
);
  myTemplatesList.getSelectionModel().addListSelectionListener(new ListSelectionListener(){
    public void valueChanged(    ListSelectionEvent e){
      templateListChanged();
    }
  }
);
  myTemplatesList.getModel().addListDataListener(new ListDataListener(){
    public void intervalAdded(    ListDataEvent e){
      templateListChanged();
    }
    public void intervalRemoved(    ListDataEvent e){
      templateListChanged();
    }
    public void contentsChanged(    ListDataEvent e){
      templateListChanged();
    }
  }
);
  myAddSearchButton.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      addTemplate(new SearchDialogFactory(){
        public SearchDialog createDialog(        SearchContext searchContext){
          return new SearchDialog(searchContext,false,false);
        }
      }
);
    }
  }
);
  myAddReplaceButton.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      addTemplate(new SearchDialogFactory(){
        public SearchDialog createDialog(        SearchContext searchContext){
          return new ReplaceDialog(searchContext,false,false);
        }
      }
);
    }
  }
);
  myEditButton.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      final Configuration configuration=(Configuration)myTemplatesList.getSelectedValue();
      if (configuration == null)       return;
      SearchDialog dialog=createDialog(new SearchDialogFactory(){
        public SearchDialog createDialog(        SearchContext searchContext){
          return configuration instanceof SearchConfiguration ? new SearchDialog(searchContext,false,false){
            public Configuration createConfiguration(){
              SearchConfiguration newConfiguration=new SearchConfiguration();
              copyConfiguration(configuration,newConfiguration);
              return newConfiguration;
            }
          }
 : new ReplaceDialog(searchContext,false,false){
            public Configuration createConfiguration(){
              ReplaceConfiguration newConfiguration=new ReplaceConfiguration();
              copyConfiguration(configuration,newConfiguration);
              return newConfiguration;
            }
          }
;
        }
      }
);
      dialog.setValuesFromConfig(configuration);
      dialog.setUseLastConfiguration(true);
      dialog.show();
      if (!dialog.isOK())       return;
      Configuration newConfiguration=dialog.getConfiguration();
      copyConfiguration(newConfiguration,configuration);
      configurationsChanged(dialog.getSearchContext());
    }
  }
);
  myRemoveButton.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      Object[] selected=myTemplatesList.getSelectedValues();
      for (      Object o : selected) {
        Configuration configuration=(Configuration)o;
        Iterator<Configuration> iterator=myConfigurations.iterator();
        while (iterator.hasNext()) {
          Configuration configuration1=iterator.next();
          if (configuration1.getName().equals(configuration.getName())) {
            iterator.remove();
          }
        }
      }
      configurationsChanged(createSearchContext());
    }
  }
);
  SwingUtilities.invokeLater(new Runnable(){
    public void run(){
      templateListChanged();
    }
  }
);
}
