{
  GlobalSearchScope scope;
  Module module=getModule(klass);
  if (module != null) {
    scope=GlobalSearchScope.moduleWithDependentsScope(module);
  }
 else {
    scope=GlobalSearchScope.projectScope(klass.getProject());
  }
  PsiShortNamesCache cache=PsiShortNamesCache.getInstance(klass.getProject());
  String klassName=klass.getName();
  Pattern pattern=Pattern.compile(".*" + klassName + ".*");
  HashSet<String> names=new HashSet<String>();
  cache.getAllClassNames(names);
  final TestFrameworks frameworks=TestFrameworks.getInstance();
  for (  String eachName : names) {
    if (pattern.matcher(eachName).matches()) {
      for (      PsiClass eachClass : cache.getClassesByName(eachName,scope)) {
        if (frameworks.isTestClass(eachClass) || frameworks.isPotentialTestClass(eachClass)) {
          if (!processor.process(Pair.create(eachClass,TestFinderHelper.calcTestNameProximity(klassName,eachName)))) {
            return true;
          }
        }
      }
    }
  }
  return false;
}
