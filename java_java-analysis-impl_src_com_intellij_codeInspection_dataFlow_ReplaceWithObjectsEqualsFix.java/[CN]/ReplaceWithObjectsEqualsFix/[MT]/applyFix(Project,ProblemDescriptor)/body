{
  PsiMethodCallExpression call=PsiTreeUtil.getParentOfType(descriptor.getPsiElement(),PsiMethodCallExpression.class);
  if (call == null || !FileModificationService.getInstance().prepareFileForWrite(call.getContainingFile()))   return;
  PsiElement qualifier=call.getMethodExpression().getQualifier();
  PsiExpression[] args=call.getArgumentList().getExpressions();
  if (qualifier == null || args.length != 1)   return;
  String replacementText="java.util.Objects.equals(" + qualifier.getText() + ", "+ args[0].getText()+ ")";
  PsiElement replaced=call.replace(JavaPsiFacade.getElementFactory(project).createExpressionFromText(replacementText,call));
  JavaCodeStyleManager.getInstance(project).shortenClassReferences(((PsiMethodCallExpression)replaced).getMethodExpression());
}
