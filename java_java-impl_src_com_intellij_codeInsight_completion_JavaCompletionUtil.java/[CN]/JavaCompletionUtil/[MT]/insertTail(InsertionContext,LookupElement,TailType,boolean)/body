{
  TailType toInsert=tailType;
  LookupItem<?> lookupItem=item.as(LookupItem.CLASS_CONDITION_KEY);
  if (lookupItem == null || lookupItem.getAttribute(LookupItem.TAIL_TYPE_ATTR) != TailType.UNKNOWN) {
    if (!hasTail && item.getObject() instanceof PsiMethod && PsiType.VOID.equals(((PsiMethod)item.getObject()).getReturnType())) {
      PsiDocumentManager.getInstance(context.getProject()).commitAllDocuments();
      if (psiElement().beforeLeaf(psiElement().withText(".")).accepts(context.getFile().findElementAt(context.getTailOffset() - 1))) {
        return false;
      }
      boolean insertAdditionalSemicolon=true;
      PsiElement leaf=context.getFile().findElementAt(context.getStartOffset());
      PsiElement composite=leaf == null ? null : leaf.getParent();
      if (composite instanceof PsiMethodReferenceExpression && LambdaHighlightingUtil.insertSemicolon(composite.getParent())) {
        insertAdditionalSemicolon=false;
      }
 else       if (composite instanceof PsiReferenceExpression) {
        PsiElement parent=composite.getParent();
        if (parent instanceof PsiMethodCallExpression) {
          parent=parent.getParent();
        }
        if (parent instanceof PsiLambdaExpression && !LambdaHighlightingUtil.insertSemicolonAfter((PsiLambdaExpression)parent)) {
          insertAdditionalSemicolon=false;
        }
      }
      if (insertAdditionalSemicolon) {
        toInsert=TailType.SEMICOLON;
      }
    }
  }
  toInsert.processTail(context.getEditor(),context.getTailOffset());
  return true;
}
