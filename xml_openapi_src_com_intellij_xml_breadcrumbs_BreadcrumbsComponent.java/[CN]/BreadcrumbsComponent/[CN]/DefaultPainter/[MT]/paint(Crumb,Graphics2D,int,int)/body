{
  final PainterSettings s=getSettings();
  final Font oldFont=g2.getFont();
  final int offset=c.getOffset() - pageOffset;
  final int width=c.getWidth();
  RectanglePainter.paint(g2,offset + 2,2,width - 4,height - 4,ROUND_VALUE + 2,s.getBackgroundColor(c),s.getBorderColor(c));
  final Color textColor=s.getForegroundColor(c);
  if (textColor != null) {
    g2.setColor(textColor);
  }
  final Font font=s.getFont(g2,c);
  if (font != null) {
    g2.setFont(font);
  }
  final FontMetrics fm=g2.getFontMetrics();
  String string=c.getString();
  if (fm.stringWidth(string) > width) {
    final int dotsWidth=fm.stringWidth("...");
    final StringBuilder sb=new StringBuilder();
    int length=0;
    for (int i=0; i < string.length(); i++) {
      final int charWidth=fm.charWidth(string.charAt(i));
      if (length + charWidth + dotsWidth > width) {
        break;
      }
      length+=charWidth;
      sb.append(string.charAt(i));
    }
    string=sb.append("...").toString();
  }
  g2.drawString(string,offset + ROUND_VALUE + 5,height - fm.getDescent() - 5);
  g2.setFont(oldFont);
}
