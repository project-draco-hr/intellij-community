{
  checkNotStarted();
  try {
    myStartTime=System.currentTimeMillis();
    if (!myProject.isDefault() && !mySilent && (myVcs != null)) {
      myVcs.showCommandLine("cd " + myWorkingDirectory);
      myVcs.showCommandLine(printableCommandLine());
      LOG.info("cd " + myWorkingDirectory);
      LOG.info(printableCommandLine());
    }
 else {
      LOG.debug("cd " + myWorkingDirectory);
      LOG.debug("[" + myWorkingDirectory.getName() + "] "+ printableCommandLine());
    }
    if (isRemote()) {
      setupHttpAuthenticator();
      if (myProjectSettings.isIdeaSsh()) {
        setupSshAuthenticator();
      }
    }
    myCommandLine.getEnvironment().clear();
    myCommandLine.getEnvironment().putAll(myEnv);
    myProcess=startProcess();
    startHandlingStreams();
  }
 catch (  ProcessCanceledException pce) {
    cleanupEnv();
  }
catch (  Throwable t) {
    if (!ApplicationManager.getApplication().isUnitTestMode() || !myProject.isDisposed()) {
      LOG.error(t);
    }
    cleanupEnv();
    myListeners.getMulticaster().startFailed(t);
  }
}
