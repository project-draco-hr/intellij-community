{
  saveMasterBreakpoint();
  try {
    String text=myPassCountField.getText().trim();
    breakpoint.setCountFilter(!text.isEmpty() ? Integer.parseInt(text) : 0);
    if (breakpoint.getCountFilter() < 0) {
      breakpoint.setCountFilter(0);
    }
  }
 catch (  Exception ignored) {
  }
  breakpoint.setCountFilterEnabled(breakpoint.getCountFilter() > 0 && myPassCountCheckbox.isSelected());
  breakpoint.setCondition(myConditionCombo.getText().getText());
  breakpoint.setLogMessage(myLogExpressionCombo.getText());
  breakpoint.setLogExpressionEnabled(!breakpoint.getLogMessage().isEmpty() && myLogExpressionCheckBox.isSelected());
  breakpoint.setLogEnabled(myLogMessageCheckBox.isSelected());
  breakpoint.setEnabled(myEnabledCheckbox.isSelected());
  breakpoint.setRemoveAfterHit(myTemporaryCheckBox.isSelected());
  breakpoint.setSuspendPolicy(getSelectedSuspendPolicy());
  reloadInstanceFilters();
  reloadClassFilters();
  updateInstanceFilterEditor(true);
  updateClassFilterEditor(true);
  breakpoint.setInstanceFiltersEnabled(myInstanceFiltersField.getText().length() > 0 && myInstanceFiltersCheckBox.isSelected());
  breakpoint.setClassFiltersEnabled(myClassFiltersField.getText().length() > 0 && myClassFiltersCheckBox.isSelected());
  breakpoint.setClassFilters(myClassFilters);
  breakpoint.setClassExclusionFilters(myClassExclusionFilters);
  breakpoint.setInstanceFilters(myInstanceFilters);
  myConditionCombo.addRecent(myConditionCombo.getText());
  myLogExpressionCombo.addRecent(myLogExpressionCombo.getText());
  breakpoint.updateUI();
}
