{
  PsiElement refElement=usage.getElement();
  if (refElement == null)   return;
  PsiManager manager=refElement.getManager();
  PsiElement refParent=refElement.getParent();
  if (refParent instanceof PsiNewExpression || refParent instanceof PsiAnonymousClass) {
    PsiNewExpression newExpr=refParent instanceof PsiNewExpression ? (PsiNewExpression)refParent : (PsiNewExpression)refParent.getParent();
    PsiExpressionList argList=newExpr.getArgumentList();
    if (argList != null) {
      if (newExpr.getQualifier() == null) {
        PsiThisExpression thisExpr;
        PsiClass parentClass=RefactoringChangeUtil.getThisClass(newExpr);
        if (outerClass.equals(parentClass)) {
          thisExpr=RefactoringChangeUtil.createThisExpression(manager,null);
        }
 else {
          thisExpr=RefactoringChangeUtil.createThisExpression(manager,outerClass);
        }
        argList.addAfter(thisExpr,null);
      }
 else {
        argList.addAfter(newExpr.getQualifier(),null);
        newExpr.getQualifier().delete();
      }
    }
  }
}
