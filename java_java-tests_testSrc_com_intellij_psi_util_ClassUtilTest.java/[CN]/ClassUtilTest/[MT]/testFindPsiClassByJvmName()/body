{
  myFixture.configureByFile("ManyClasses.java");
  assertNotNull(ClassUtil.findPsiClassByJVMName(getPsiManager(),"ManyClasses"));
  assertNotNull(ClassUtil.findPsiClassByJVMName(getPsiManager(),"ManyClasses$1"));
  assertNotNull(ClassUtil.findPsiClassByJVMName(getPsiManager(),"ManyClasses$1$1"));
  assertNotNull(ClassUtil.findPsiClassByJVMName(getPsiManager(),"ManyClasses$1FooLocal"));
  assertNotNull(ClassUtil.findPsiClassByJVMName(getPsiManager(),"ManyClasses$1FooLocal$1"));
  assertNotNull(ClassUtil.findPsiClassByJVMName(getPsiManager(),"ManyClasses$Child"));
  assertNotNull(ClassUtil.findPsiClassByJVMName(getPsiManager(),"ManyClasses$Child$"));
  assertNotNull(ClassUtil.findPsiClassByJVMName(getPsiManager(),"ManyClasses$Ma$ked"));
  assertNotNull(ClassUtil.findPsiClassByJVMName(getPsiManager(),"ManyClasses$Ma$ked$Ne$ted"));
  assertNotNull(ClassUtil.findPsiClassByJVMName(getPsiManager(),"ManyClasses$Edge"));
  assertNotNull(ClassUtil.findPsiClassByJVMName(getPsiManager(),"ManyClasses$Edge$"));
  assertNotNull(ClassUtil.findPsiClassByJVMName(getPsiManager(),"ManyClasses$Edge$$$tu_pid_ne$s"));
  assertNotNull(ClassUtil.findPsiClassByJVMName(getPsiManager(),"Local"));
  assertNotNull(ClassUtil.findPsiClassByJVMName(getPsiManager(),"Local$Sub"));
  PsiClass local=ClassUtil.findPsiClassByJVMName(getPsiManager(),"Local$");
  assertNotNull(local);
  assertEquals("Local$",local.getName());
  PsiClass sub=ClassUtil.findPsiClassByJVMName(getPsiManager(),"Local$$Sub");
  assertNotNull(sub);
  assertEquals("Local$",((PsiClass)sub.getParent()).getName());
  PsiClass fooLocal2=ClassUtil.findPsiClassByJVMName(getPsiManager(),"ManyClasses$2FooLocal");
  assertNotNull(fooLocal2);
  assertEquals("Runnable",fooLocal2.getImplementsListTypes()[0].getClassName());
}
