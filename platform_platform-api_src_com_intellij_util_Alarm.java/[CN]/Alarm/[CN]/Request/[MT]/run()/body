{
  try {
    if (myDisposed) {
      return;
    }
synchronized (LOCK) {
      if (myTask == null) {
        return;
      }
    }
    final Runnable scheduledTask=new Runnable(){
      @Override public void run(){
        final Runnable task;
synchronized (LOCK) {
          task=myTask;
          myTask=null;
          myRequests.remove(Request.this);
          myFuture=null;
        }
        if (task == null)         return;
        if (myThreadToUse == ThreadToUse.SWING_THREAD && !isEdt()) {
          EdtInvocationManager.getInstance().invokeLater(new Runnable(){
            @Override public void run(){
              if (!myDisposed) {
                QueueProcessor.runSafely(task);
              }
            }
          }
);
        }
 else {
          QueueProcessor.runSafely(task);
        }
      }
      @Override public String toString(){
        return "ScheduledTask " + Request.this;
      }
    }
;
    if (myModalityState == null) {
      scheduledTask.run();
    }
 else {
      final Application app=ApplicationManager.getApplication();
      if (app == null) {
        SwingUtilities.invokeLater(scheduledTask);
      }
 else       if (app.isDispatchThread() && app.getCurrentModalityState().equals(myModalityState)) {
        scheduledTask.run();
      }
 else {
        app.invokeLater(scheduledTask,myModalityState);
      }
    }
  }
 catch (  Throwable e) {
    LOG.error(e);
  }
}
