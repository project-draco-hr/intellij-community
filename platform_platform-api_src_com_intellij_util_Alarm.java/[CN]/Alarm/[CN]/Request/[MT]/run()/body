{
  try {
    if (myDisposed) {
      return;
    }
synchronized (LOCK) {
      if (myTask == null)       return;
    }
    final Runnable scheduledTask=new Runnable(){
      @Override public void run(){
        final Runnable task;
synchronized (LOCK) {
          task=myTask;
          if (task == null)           return;
          myTask=null;
          myRequests.remove(Request.this);
          myFuture=null;
        }
        try {
          if (myThreadToUse == ThreadToUse.SWING_THREAD && !isEdt()) {
            SwingUtilities.invokeAndWait(task);
          }
 else {
            task.run();
          }
        }
 catch (        Exception e) {
          LOG.error("Exception in task " + task,e);
        }
      }
    }
;
    if (myModalityState == null) {
      Future<?> future=myExecutorService.submit(scheduledTask);
synchronized (LOCK) {
        myFuture=future;
      }
    }
 else {
      final Application app=ApplicationManager.getApplication();
      if (app == null) {
        SwingUtilities.invokeLater(scheduledTask);
      }
 else {
        app.invokeLater(scheduledTask,myModalityState);
      }
    }
  }
 catch (  Throwable e) {
    LOG.error(e);
  }
}
