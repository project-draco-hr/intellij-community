{
  element.accept(new JsonElementVisitor(){
    @Override public void visitComment(    PsiComment comment){
      holder.createErrorAnnotation(comment,JsonBundle.message("compliance.problem.comments"));
    }
    @Override public void visitStringLiteral(    @NotNull JsonStringLiteral stringLiteral){
      if (stringLiteral.getText().startsWith("'")) {
        holder.createErrorAnnotation(stringLiteral,JsonBundle.message("compliance.problem.single.quoted.strings"));
      }
      super.visitStringLiteral(stringLiteral);
    }
    @Override public void visitLiteral(    @NotNull JsonLiteral literal){
      final PsiFile psiFile=literal.getContainingFile();
      if (psiFile instanceof JsonFile && literal == ((JsonFile)psiFile).getTopLevelValue()) {
        holder.createErrorAnnotation(literal,JsonBundle.message("compliance.problem.illegal.top.level.value"));
      }
    }
    @Override public void visitReferenceExpression(    @NotNull JsonReferenceExpression reference){
      holder.createErrorAnnotation(reference,JsonBundle.message("compliance.problem.identifier"));
    }
  }
);
}
