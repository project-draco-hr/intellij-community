{
  final PyClass cls=function.getContainingClass();
  if (cls != null) {
    final String name=function.getName();
    if (name != null) {
      final List<PyFunction> overloads=new ArrayList<PyFunction>();
      cls.visitMethods(new Processor<PyFunction>(){
        @Override public boolean process(        PyFunction f){
          if (name.equals(f.getName()) && isOverload(f,context)) {
            overloads.add(f);
          }
          return true;
        }
      }
,false);
      if (!overloads.isEmpty()) {
        final List<PyType> overloadTypes=new ArrayList<PyType>();
        for (        PyFunction overload : overloads) {
          overloadTypes.add(context.getType(overload));
        }
        return PyUnionType.union(overloadTypes);
      }
    }
  }
  return null;
}
