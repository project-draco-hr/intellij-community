{
  final ScopeOwner owner=ScopeUtil.getScopeOwner(function);
  final String name=function.getName();
  final List<PyFunction> overloads=new ArrayList<PyFunction>();
  final Processor<PyFunction> overloadsProcessor=new Processor<PyFunction>(){
    @Override public boolean process(    @NotNull PyFunction f){
      if (name != null && name.equals(f.getName()) && isOverload(f,context)) {
        overloads.add(f);
      }
      return true;
    }
  }
;
  if (owner instanceof PyClass) {
    final PyClass cls=(PyClass)owner;
    if (name != null) {
      cls.visitMethods(overloadsProcessor,false);
    }
  }
 else   if (owner instanceof PyFile) {
    final PyFile file=(PyFile)owner;
    for (    PyFunction f : file.getTopLevelFunctions()) {
      if (!overloadsProcessor.process(f)) {
        break;
      }
    }
  }
  return overloads;
}
