{
  if (callSite != null) {
    final PsiElement pythonStub=PyiUtil.getPythonStub(function);
    if (pythonStub instanceof PyFunction) {
      final PyFunction functionStub=(PyFunction)pythonStub;
      if (isOverload(functionStub,context)) {
        final List<PyType> returnTypes=new ArrayList<PyType>();
        final List<PyFunction> overloads=getOverloads(functionStub,context);
        for (        PyFunction overload : overloads) {
          final Map<PyExpression,PyNamedParameter> mapping=mapArguments(callSite,overload);
          final PyExpression receiver=PyTypeChecker.getReceiver(callSite,overload);
          final Map<PyGenericType,PyType> substitutions=PyTypeChecker.unifyGenericCall(receiver,mapping,context);
          final PyType returnType=context.getReturnType(overload);
          final PyType unifiedType=substitutions != null ? PyTypeChecker.substitute(returnType,substitutions,context) : null;
          if (unifiedType != null) {
            returnTypes.add(unifiedType);
          }
        }
        return PyUnionType.union(returnTypes);
      }
    }
  }
  return null;
}
