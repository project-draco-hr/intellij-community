{
  List<TreeNodeOnVcsRevision> selection=getSelection();
  if (selection.isEmpty()) {
    myComments.setText("");
    myOriginalComment="";
    return;
  }
  boolean addRevisionInfo=selection.size() > 1;
  StringBuilder original=new StringBuilder();
  StringBuilder html=new StringBuilder();
  for (  TreeNodeOnVcsRevision revision : selection) {
    String message=revision.getCommitMessage();
    if (StringUtil.isEmpty(message))     continue;
    if (original.length() > 0) {
      original.append("\n\n");
      html.append("<br/><br/>");
    }
    if (addRevisionInfo) {
      String revisionInfo=getRevisionInfo(revision.getRevision());
      html.append("<font color=\"#").append(Integer.toHexString(JBColor.gray.getRGB()).substring(2)).append("\">").append(getHtmlWithFonts(revisionInfo)).append("</font><br/>");
      original.append(revisionInfo).append("\n");
    }
    original.append(message);
    html.append(getHtmlWithFonts(formatTextWithLinks(myVcs.getProject(),message)));
  }
  myOriginalComment=original.toString();
  if (StringUtil.isEmpty(myOriginalComment)) {
    myComments.setText("");
  }
 else {
    myComments.setText("<html><head>" + UIUtil.getCssFontDeclaration(VcsHistoryUtil.getCommitDetailsFont()) + "</head><body>"+ html.toString()+ "</body></html>");
    myComments.setCaretPosition(0);
  }
  if (myListener != null) {
    myListener.consume(selection.get(0).getRevision());
  }
}
