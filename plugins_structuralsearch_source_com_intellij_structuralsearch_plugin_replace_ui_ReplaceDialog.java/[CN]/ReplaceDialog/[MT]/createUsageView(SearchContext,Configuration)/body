{
  super.createUsageView(searchContext,config);
  final Runnable replaceRunnable=new Runnable(){
    public void run(){
      LocalVcs instance=LocalVcs.getInstance(searchContext.getProject());
      LvcsAction lvcsAction=instance.startAction("StructuralReplace",null,false);
      doReplace(usageView,(StructuralReplaceViewDescriptor)descriptor);
      UsageViewManager.getInstance(searchContext.getProject()).closeContent(usageView);
      lvcsAction.finish();
    }
  }
;
  usageView.addDoProcessAction(replaceRunnable,"Replace All",null,"&Do Replace All");
  final AnAction replaceSelected=new AnAction(){
{
      getTemplatePresentation().setText("Replace S&elected");
    }
    public void actionPerformed(    AnActionEvent e){
      final UsageInfo infos[]=usageView.getSelectedUsages();
      if (infos == null)       return;
      LocalVcs instance=LocalVcs.getInstance(searchContext.getProject());
      LvcsAction lvcsAction=instance.startAction("StructuralReplace",null,false);
      for (int i=0; i < infos.length; ++i) {
        if (!isValid(infos[i],usageView)) {
          continue;
        }
        replaceOne(infos[i],searchContext,false);
      }
      lvcsAction.finish();
    }
    public void update(    AnActionEvent e){
      e.getPresentation().setEnabled(!usageView.isInAsyncUpdate());
      super.update(e);
    }
  }
;
  usageView.addButton(1,replaceSelected);
  usageView.addButton(2,new AnAction("P&review Replacement"){
    public void actionPerformed(    AnActionEvent e){
      UsageInfo[] selection=usageView.getSelectedUsages();
      if (selection == null || selection.length == 0 || !isValid(selection[0],usageView)) {
        return;
      }
      UsageInfo info=selection[0];
      replaceOne(info,searchContext,true);
    }
  }
);
}
