{
  final String definitionAddress=parSchema.getDefinitionAddress();
  if (StringUtil.isEmptyOrSpaces(definitionAddress))   return null;
  final JsonSchemaReader.SchemaUrlSplitter splitter=new JsonSchemaReader.SchemaUrlSplitter(definitionAddress);
  if (!splitter.isAbsolute()) {
    VirtualFile schemaFile=null;
    if (parSchema.getId() != null) {
      schemaFile=JsonSchemaService.Impl.getEx(myElement.getProject()).getSchemaFileById(parSchema.getId());
    }
    return resolveInSomeSchema(definitionAddress.substring(1) + PROPERTIES + propertyName,myElement.getProject(),parSchema.getId(),schemaFile != null ? GlobalSearchScope.fileScope(myElement.getProject(),schemaFile) : null);
  }
 else {
    String relative=splitter.getRelativePath();
    if (StringUtil.isEmptyOrSpaces(relative)) {
      relative=PROPERTIES + propertyName;
    }
 else {
      relative+=((relative.endsWith("/") ? PROPERTIES.substring(1) : PROPERTIES) + propertyName);
    }
    return resolveInSomeSchema(relative,myElement.getProject(),splitter.getSchemaId(),null);
  }
}
