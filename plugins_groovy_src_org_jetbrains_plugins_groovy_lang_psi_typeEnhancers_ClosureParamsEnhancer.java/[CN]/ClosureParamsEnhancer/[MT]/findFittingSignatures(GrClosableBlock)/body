{
  GrCall call=findCall(closure);
  if (call == null)   return Collections.emptyList();
  List<PsiType[]> expectedSignatures=ContainerUtil.newArrayList();
  GroovyResolveResult[] variants=call.getCallVariants(closure);
  for (  GroovyResolveResult variant : variants) {
    expectedSignatures.addAll(inferExpectedSignatures(variant,call,closure));
  }
  final GrParameter[] parameters=closure.getAllParameters();
  return ContainerUtil.findAll(expectedSignatures,new Condition<PsiType[]>(){
    @Override public boolean value(    PsiType[] types){
      return types.length == parameters.length;
    }
  }
);
}
