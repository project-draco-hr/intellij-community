{
  super.visitField(field);
  if (field.hasModifierProperty(PsiModifier.STATIC) && field.hasModifierProperty(PsiModifier.FINAL)) {
    return;
  }
  final PsiType type=field.getType();
  if (!InheritanceUtil.isInheritor(type,"java.util.concurrent.atomic.AtomicIntegerFieldUpdater") && !InheritanceUtil.isInheritor(type,"java.util.concurrent.atomic.AtomicLongFieldUpdater") && !InheritanceUtil.isInheritor(type,"java.util.concurrent.atomic.AtomicReferenceFieldUpdater")) {
    return;
  }
  registerFieldError(field,field);
}
