{
  final Set<String> outputPaths=new OrderedSet<String>();
  for (  Module module : modules) {
    final CompilerModuleExtension compilerModuleExtension=!module.isDisposed() ? CompilerModuleExtension.getInstance(module) : null;
    if (compilerModuleExtension == null) {
      continue;
    }
    String outputPathUrl=compilerModuleExtension.getCompilerOutputUrl();
    if (outputPathUrl != null) {
      outputPaths.add(VirtualFileManager.extractPath(outputPathUrl).replace('/',File.separatorChar));
    }
    String outputPathForTestsUrl=compilerModuleExtension.getCompilerOutputUrlForTests();
    if (outputPathForTestsUrl != null) {
      outputPaths.add(VirtualFileManager.extractPath(outputPathForTestsUrl).replace('/',File.separatorChar));
    }
    final ModuleRootManager moduleRootManager=ModuleRootManager.getInstance(module);
    for (    OrderEnumerationHandler.Factory handlerFactory : OrderEnumerationHandler.EP_NAME.getExtensions()) {
      if (handlerFactory.isApplicable(module)) {
        OrderEnumerationHandler handler=handlerFactory.createHandler(module);
        final List<String> outputUrls=new SmartList<>();
        handler.addCustomModuleRoots(OrderRootType.CLASSES,moduleRootManager,outputUrls,true,true);
        for (        String outputUrl : outputUrls) {
          outputPaths.add(VirtualFileManager.extractPath(outputUrl).replace('/',File.separatorChar));
        }
      }
    }
  }
  return ArrayUtil.toStringArray(outputPaths);
}
