{
  String version=properties.getVersion();
  boolean isLatest=LatestVersionId.equals(version);
  boolean isRelease=ReleaseVersionId.equals(version);
  if (isLatest || isRelease) {
    Iterable<String> versions=RepositoryAttachHandler.retrieveVersions(project,properties.getGroupId(),properties.getArtifactId(),RepositoryLibraryDescription.findDescription(properties).getRemoteRepositories());
    if (isRelease) {
      versions=Iterables.filter(versions,new Predicate<String>(){
        @Override public boolean apply(        String input){
          return !input.endsWith(SnapshotVersionSuffix);
        }
      }
);
    }
    Iterator<String> iterator=versions.iterator();
    if (iterator.hasNext()) {
      version=iterator.next();
    }
  }
  return version;
}
