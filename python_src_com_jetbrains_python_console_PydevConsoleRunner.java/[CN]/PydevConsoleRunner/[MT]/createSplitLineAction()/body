{
class ConsoleSplitLineAction extends EditorAction {
    private static final String CONSOLE_SPLIT_LINE_ACTION_ID="Console.SplitLine";
    public ConsoleSplitLineAction(){
      super(new EditorWriteActionHandler(){
        private final SplitLineAction mySplitLineAction=new SplitLineAction();
        @Override public boolean isEnabled(        Editor editor,        DataContext dataContext){
          return mySplitLineAction.getHandler().isEnabled(editor,dataContext);
        }
        @Override public void executeWriteAction(        Editor editor,        @Nullable Caret caret,        DataContext dataContext){
          ((EditorWriteActionHandler)mySplitLineAction.getHandler()).executeWriteAction(editor,caret,dataContext);
          editor.getCaretModel().getCurrentCaret().moveCaretRelatively(0,1,false,true);
        }
      }
);
    }
    public void setup(){
      EmptyAction.setupAction(this,CONSOLE_SPLIT_LINE_ACTION_ID,null);
    }
  }
  ConsoleSplitLineAction action=new ConsoleSplitLineAction();
  action.setup();
  return action;
}
