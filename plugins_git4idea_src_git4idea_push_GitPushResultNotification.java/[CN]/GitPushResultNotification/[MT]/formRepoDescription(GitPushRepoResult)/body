{
  String description;
  String sourceBranch=GitBranchUtil.stripRefsPrefix(result.getSourceBranch());
  String targetBranch=GitBranchUtil.stripRefsPrefix(result.getTargetBranch());
  String tagDescription=formTagDescription(result.getPushedTags(),result.getTargetRemote());
switch (result.getType()) {
case SUCCESS:
    int commitNum=result.getNumberOfPushedCommits();
  String commits=StringUtil.pluralize("commit",commitNum);
description=String.format("pushed %d %s to %s",commitNum,commits,targetBranch);
if (tagDescription != null) {
description+=", and " + tagDescription;
}
break;
case NEW_BRANCH:
description=String.format("pushed %s to new branch %s",sourceBranch,targetBranch);
if (tagDescription != null) {
description+=", and " + tagDescription;
}
break;
case UP_TO_DATE:
if (tagDescription != null) {
description="pushed " + tagDescription;
}
 else {
description="everything is up-to-date";
}
break;
case FORCED:
description=String.format("force pushed %s to %s",sourceBranch,targetBranch);
break;
case REJECTED_NO_FF:
description=formDescriptionBasedOnUpdateResult(result.getUpdateResult(),targetBranch);
break;
case REJECTED_OTHER:
description=String.format("push %s to %s was rejected by remote",sourceBranch,targetBranch);
break;
case ERROR:
description="failed with error: " + result.getError();
break;
default :
LOG.error("Unexpected push result: " + result);
description="";
break;
}
return description;
}
