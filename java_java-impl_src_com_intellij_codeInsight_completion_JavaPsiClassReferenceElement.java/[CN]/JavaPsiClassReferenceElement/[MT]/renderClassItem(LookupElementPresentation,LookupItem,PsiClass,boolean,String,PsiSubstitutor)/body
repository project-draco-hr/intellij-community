{
  if (!(psiClass instanceof PsiTypeParameter)) {
    presentation.setIcon(DefaultLookupItemRenderer.getRawIcon(item,presentation.isReal()));
  }
  boolean strikeout=JavaElementLookupRenderer.isToStrikeout(item);
  presentation.setItemText(getName(psiClass,item,diamond,substitutor));
  presentation.setStrikeout(strikeout);
  String tailText=locationString;
  if (item instanceof PsiTypeLookupItem) {
    if (((PsiTypeLookupItem)item).isIndicateAnonymous() && (psiClass.isInterface() || psiClass.hasModifierProperty(PsiModifier.ABSTRACT)) || ((PsiTypeLookupItem)item).isAddArrayInitializer()) {
      tailText="{...}" + tailText;
    }
  }
  if (substitutor == PsiSubstitutor.EMPTY && !diamond && psiClass.getTypeParameters().length > 0) {
    tailText="<" + StringUtil.join(psiClass.getTypeParameters(),new Function<PsiTypeParameter,String>(){
      @Override public String fun(      PsiTypeParameter psiTypeParameter){
        return psiTypeParameter.getName();
      }
    }
,"," + (showSpaceAfterComma(psiClass) ? " " : "")) + ">"+ tailText;
  }
  presentation.setTailText(tailText,true);
}
