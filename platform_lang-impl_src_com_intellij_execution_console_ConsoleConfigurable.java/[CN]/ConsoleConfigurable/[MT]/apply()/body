{
  EditorSettingsExternalizable editorSettings=EditorSettingsExternalizable.getInstance();
  UISettings uiSettings=UISettings.getInstance();
  editorSettings.setUseSoftWraps(myCbUseSoftWrapsAtConsole.isSelected(),SoftWrapAppliancePlaces.CONSOLE);
  boolean uiSettingsChanged=false;
  if (isModified(myCommandsHistoryLimitField,uiSettings.CONSOLE_COMMAND_HISTORY_LIMIT)) {
    uiSettings.CONSOLE_COMMAND_HISTORY_LIMIT=Math.max(0,Math.min(1000,Integer.parseInt(myCommandsHistoryLimitField.getText().trim())));
    uiSettingsChanged=true;
  }
  if (ConsoleBuffer.useCycleBuffer()) {
    if (isModified(myCbOverrideConsoleCycleBufferSize,uiSettings.OVERRIDE_CONSOLE_CYCLE_BUFFER_SIZE)) {
      uiSettings.OVERRIDE_CONSOLE_CYCLE_BUFFER_SIZE=myCbOverrideConsoleCycleBufferSize.isSelected();
      uiSettingsChanged=true;
    }
    if (isModified(myConsoleCycleBufferSizeField,uiSettings.CONSOLE_CYCLE_BUFFER_SIZE_KB)) {
      uiSettings.CONSOLE_CYCLE_BUFFER_SIZE_KB=Math.max(0,Math.min(1024 * 100,Integer.parseInt(myConsoleCycleBufferSizeField.getText().trim())));
      uiSettingsChanged=true;
    }
  }
  if (uiSettingsChanged) {
    uiSettings.fireUISettingsChanged();
  }
  myNegativePanel.applyTo(mySettings.getNegativePatterns());
  myPositivePanel.applyTo(mySettings.getPositivePatterns());
}
