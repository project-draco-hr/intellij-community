{
  int rightMargin=mySettings.getRightMargin(JavaLanguage.INSTANCE);
  StringBuilder sb=new StringBuilder();
  List<String> list;
  if (mySettings.WRAP_COMMENTS) {
    list=toArrayWrapping(str,rightMargin - prefix.length());
    if (firstLineShorter && list != null && !list.isEmpty() && list.get(0).length() > rightMargin - firstLinePrefixLength) {
      list=new ArrayList<String>();
      String firstLine=toArrayWrapping(str,rightMargin - firstLinePrefixLength).get(0);
      list.add(firstLine);
      str=str.substring(firstLine.length());
      boolean unclosedPreTag=lineHasUnclosedPreTag(firstLine);
      if (unclosedPreTag) {
        str=PRE_TAG_START + str.replaceAll("^\\s+","");
      }
      List<String> subList=toArrayWrapping(str,rightMargin - prefix.length());
      if (unclosedPreTag && subList != null && !subList.isEmpty()) {
        String firstLineTagRemoved=subList.get(0).substring(PRE_TAG_START.length());
        subList.set(0,firstLineTagRemoved);
      }
      if (subList != null)       list.addAll(subList);
    }
  }
 else {
    list=toArray(str,"\n",new ArrayList<Boolean>());
  }
  if (list == null) {
    sb.append('\n');
  }
 else {
    boolean insidePreTag=false;
    for (int i=0; i < list.size(); i++) {
      String line=list.get(i);
      if (line.isEmpty() && !mySettings.JD_KEEP_EMPTY_LINES)       continue;
      if (i != 0)       sb.append(prefix);
      if (line.isEmpty() && mySettings.JD_P_AT_EMPTY_LINES && !insidePreTag) {
        if (myLanguageLevel.isAtLeast(LanguageLevel.JDK_1_8)) {
          sb.append(P_START_TAG);
        }
 else {
          sb.append(SELF_CLOSED_P_TAG);
        }
      }
 else {
        sb.append(line);
        if (line.startsWith(PRE_TAG_START)) {
          insidePreTag=true;
        }
 else         if (line.endsWith(PRE_TAG_END)) {
          insidePreTag=false;
        }
      }
      sb.append('\n');
    }
  }
  return sb;
}
