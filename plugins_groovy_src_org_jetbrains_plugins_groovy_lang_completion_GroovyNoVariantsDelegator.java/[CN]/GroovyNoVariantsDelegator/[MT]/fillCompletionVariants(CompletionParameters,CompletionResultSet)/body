{
  JavaNoVariantsDelegator.ResultTracker tracker=new JavaNoVariantsDelegator.ResultTracker(result);
  result.runRemainingContributors(parameters,tracker);
  final boolean empty=tracker.containsOnlyPackages || suggestMetaAnnotations(parameters);
  if (!empty && parameters.getInvocationCount() == 0) {
    result.restartCompletionWhenNothingMatches();
  }
  if (empty) {
    delegate(parameters,result);
  }
 else   if (Registry.is("ide.completion.show.better.matching.classes")) {
    if (parameters.getCompletionType() == CompletionType.BASIC && parameters.getInvocationCount() <= 1 && JavaCompletionContributor.mayStartClassName(result) && GrMainCompletionProvider.isClassNamePossible(parameters.getPosition()) && !MapArgumentCompletionProvider.isMapKeyCompletion(parameters) && !GroovySmartCompletionContributor.AFTER_NEW.accepts(parameters.getPosition())) {
      result=result.withPrefixMatcher(tracker.betterMatcher);
      suggestNonImportedClasses(parameters,result);
    }
  }
}
