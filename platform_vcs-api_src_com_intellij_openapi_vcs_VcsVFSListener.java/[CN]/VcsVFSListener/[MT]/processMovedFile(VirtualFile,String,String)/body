{
  final FileStatus status=FileStatusManager.getInstance(myProject).getStatus(file);
  LOG.debug("Checking moved file " + file + "; status="+ status);
  if (status == FileStatus.IGNORED) {
    if (file.getParent() != null) {
      myDirtyFiles.add(file.getParent());
      myDirtyFiles.add(file);
    }
  }
  final String newPath=newParentPath + "/" + newName;
  MovedFileInfo existingMovedFile=ContainerUtil.find(myMovedFiles,new Condition<MovedFileInfo>(){
    @Override public boolean value(    MovedFileInfo info){
      return Comparing.equal(info.myFile,file);
    }
  }
);
  if (existingMovedFile != null) {
    LOG.debug("Reusing existing moved file " + file);
    existingMovedFile.myNewPath=newPath;
  }
 else {
    LOG.debug("Registered moved file " + file);
    myMovedFiles.add(new MovedFileInfo(file,newPath));
  }
}
