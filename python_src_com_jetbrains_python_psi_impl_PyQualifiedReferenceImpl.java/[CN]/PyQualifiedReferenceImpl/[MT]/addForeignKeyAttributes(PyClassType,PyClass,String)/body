{
  for (  PyTargetExpression e : pyClass.getClassAttributes()) {
    if (e.getParent() instanceof PyAssignmentStatement) {
      if (e.getParent().getLastChild() instanceof PyCallExpressionImpl) {
        PyCallExpressionImpl initCall=(PyCallExpressionImpl)e.getParent().getLastChild();
        if (initCall != null && initCall.getCallee() != null && "models.ForeignKey".equals(initCall.getCallee().getText())) {
          PyExpression[] args=initCall.getArguments();
          if (args.length > 0 && args[0] instanceof PyReferenceExpressionImpl) {
            PyReferenceExpressionImpl refClassRef=(PyReferenceExpressionImpl)args[0];
            PyType refClassType=refClassRef.getType(TypeEvalContext.slow());
            if (refClassType != null && ((PyClassType)refClassType).getPyClass() == referencedType.getPyClass()) {
              PyExpression expr=PyUtil.getKeywordArgument(initCall,"related_name");
              String relatedNamed=pyClass.getName().toLowerCase() + "_set";
              if (expr != null && expr instanceof PyStringLiteralExpression) {
                relatedNamed=((PyStringLiteralExpression)expr).getStringValue();
              }
              if (referencedName.equals(relatedNamed)) {
                return true;
              }
            }
          }
        }
      }
    }
  }
  return false;
}
