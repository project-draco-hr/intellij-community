{
  final Set<String> members=new HashSet<String>();
  myElement.getContainingFile().accept(new PyRecursiveElementVisitor(){
    @Override public void visitPyReferenceExpression(    PyReferenceExpression node){
      super.visitPyReferenceExpression(node);
      if (node != myElement) {
        final PyExpression qualifier=node.getQualifier();
        if (qualifier != null && qualifier.getText().equals(text)) {
          final String refName=node.getReferencedName();
          if (refName != null) {
            members.add(refName);
          }
        }
      }
    }
  }
);
  List<LookupElement> results=new ArrayList<LookupElement>(members.size());
  for (  String member : members) {
    results.add(AutoCompletionPolicy.NEVER_AUTOCOMPLETE.applyPolicy(LookupElementBuilder.create(member)));
  }
  return results.toArray(new Object[results.size()]);
}
