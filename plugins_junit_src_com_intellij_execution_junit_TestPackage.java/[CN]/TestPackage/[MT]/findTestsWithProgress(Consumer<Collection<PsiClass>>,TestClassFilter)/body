{
  if (ApplicationManager.getApplication().isUnitTestMode()) {
    THashSet<PsiClass> classes=new THashSet<PsiClass>();
    ConfigurationUtil.findAllTestClasses(classFilter,classes);
    callback.consume(classes);
    return null;
  }
  final THashSet<PsiClass> classes=new THashSet<PsiClass>();
  final SearchForTestsTask task=new SearchForTestsTask(classFilter.getProject(),myServerSocket){
    @Override protected void search(){
      classes.clear();
      ConfigurationUtil.findAllTestClasses(classFilter,classes);
    }
    @Override protected void onFound(){
      myFoundTests=!classes.isEmpty();
      callback.consume(classes);
    }
  }
;
  mySearchForTestsIndicator=new BackgroundableProcessIndicator(task);
  ProgressManager.getInstance().runProcessWithProgressAsynchronously(task,mySearchForTestsIndicator);
  return task;
}
