{
  if (!propertiesComponent.getBoolean("PyCharm.InitialConfiguration")) {
    propertiesComponent.setValue("PyCharm.InitialConfiguration","true");
    EditorSettingsExternalizable.getInstance().setVirtualSpace(false);
  }
  if (!propertiesComponent.getBoolean("PyCharm.InitialConfiguration.V2")) {
    propertiesComponent.setValue("PyCharm.InitialConfiguration.V2",true);
    final CodeStyleSettings settings=CodeStyleSettingsManager.getInstance().getCurrentSettings();
    settings.ALIGN_MULTILINE_PARAMETERS_IN_CALLS=true;
    settings.getCommonSettings(PythonLanguage.getInstance()).ALIGN_MULTILINE_PARAMETERS_IN_CALLS=true;
    UISettings.getInstance().SHOW_DIRECTORY_FOR_NON_UNIQUE_FILENAMES=true;
  }
  if (!propertiesComponent.getBoolean("PyCharm.InitialConfiguration.V3")) {
    propertiesComponent.setValue("PyCharm.InitialConfiguration.V3","true");
    UISettings.getInstance().SHOW_MEMORY_INDICATOR=false;
    final String ignoredFilesList=fileTypeManager.getIgnoredFilesList();
    ApplicationManager.getApplication().invokeLater(new Runnable(){
      @Override public void run(){
        ApplicationManager.getApplication().runWriteAction(new Runnable(){
          @Override public void run(){
            FileTypeManager.getInstance().setIgnoredFilesList(ignoredFilesList + ";*$py.class");
          }
        }
);
      }
    }
);
  }
  if (!propertiesComponent.getBoolean("PyCharm.InitialConfiguration.V4")) {
    propertiesComponent.setValue("PyCharm.InitialConfiguration.V4",true);
    PyCodeInsightSettings.getInstance().SHOW_IMPORT_POPUP=false;
  }
  if (!propertiesComponent.getBoolean("PyCharm.InitialConfiguration.V5")) {
    propertiesComponent.setValue("PyCharm.InitialConfiguration.V5",true);
    CodeInsightSettings.getInstance().REFORMAT_ON_PASTE=CodeInsightSettings.NO_REFORMAT;
  }
  if (!propertiesComponent.isValueSet(DISPLAYED_PROPERTY)) {
    bus.connect().subscribe(AppLifecycleListener.TOPIC,new AppLifecycleListener.Adapter(){
      @Override public void welcomeScreenDisplayed(){
        ApplicationManager.getApplication().invokeLater(new Runnable(){
          public void run(){
            propertiesComponent.setValue(DISPLAYED_PROPERTY,"true");
            showInitialConfigurationDialog();
          }
        }
);
      }
    }
);
  }
  Registry.get("ide.scratch.enabled").setValue(true);
}
