{
  final String configurationName=dependency.getDeclaredConfiguration().getName();
  final GradleDependencyScope scope=deduceScope(configurationName,userScopes);
  if (scope == null)   return;
  final ModuleVersionIdentifier dependencyId;
  if (dependency instanceof UnresolvedIdeRepoFileDependency) {
    UnresolvedIdeRepoFileDependency unresolvedDependency=(UnresolvedIdeRepoFileDependency)dependency;
    dependencyId=new MyModuleVersionIdentifier(unresolvedDependency.getFile().getName());
  }
 else {
    dependencyId=dependency.getId();
  }
  String classifier=parseClassifier(dependencyId,dependency.getFile());
  DependencyVersionId versionId=new DependencyVersionId(dependency,dependencyId.getName(),dependencyId.getGroup(),dependencyId.getVersion(),classifier);
  Scopes scopes=map.get(versionId);
  if (scopes == null) {
    map.put(versionId,new Scopes(scope));
  }
 else {
    scopes.add(scope);
  }
}
