{
  myInstallButton.addActionListener(new ActionListener(){
    @Override public void actionPerformed(    ActionEvent event){
      final Object pyPackage=myPackages.getSelectedValue();
      if (pyPackage instanceof ComparablePair) {
        final ComparablePair pair=(ComparablePair)pyPackage;
        final String packageName=pair.getFirst();
        final String repository=pair.getSecond().equals(PyPIPackageUtil.PYPI_URL) ? null : pair.getSecond();
        final List<String> extraArgs=new ArrayList<String>();
        if (myInstallToUser.isSelected()) {
          extraArgs.add(PyPackageManager.USE_USER_SITE);
        }
        if (myOptionsCheckBox.isEnabled() && myOptionsCheckBox.isSelected()) {
          Collections.addAll(extraArgs,myOptionsField.getText().split(" +"));
        }
        if (repository != null) {
          extraArgs.add("--extra-index-url");
          extraArgs.add(repository);
        }
        final PyRequirement req;
        if (myVersionCheckBox.isEnabled() && myVersionCheckBox.isSelected()) {
          req=new PyRequirement(packageName,(String)myVersionComboBox.getSelectedItem());
        }
 else {
          req=new PyRequirement(packageName);
        }
        final PyPackageManager.UI ui=new PyPackageManager.UI(project,sdk,new PyPackageManager.UI.Listener(){
          @Override public void started(){
            setDownloadStatus(true);
            table.setPaintBusy(true);
            currentlyInstalling.add(packageName);
          }
          @Override public void finished(          @Nullable List<PyExternalProcessException> exceptions){
            table.clearSelection();
            setDownloadStatus(false);
            addNotifications(exceptions,packageName,myNotificationArea,myPackageListPanel.getNotificationsArea());
            myPackageListPanel.updatePackages(sdk,myInstalledPackages);
            currentlyInstalling.remove(packageName);
          }
        }
);
        ui.install(Collections.singletonList(req),extraArgs);
        myInstallButton.setEnabled(false);
      }
    }
  }
);
}
