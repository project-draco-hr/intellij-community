{
  myInstallButton.addActionListener(new ActionListener(){
    @Override public void actionPerformed(    ActionEvent event){
      final Object pyPackage=myPackages.getSelectedValue();
      if (pyPackage instanceof RepoPackage) {
        final RepoPackage repoPackage=(RepoPackage)pyPackage;
        final String packageName=repoPackage.getName();
        String extraOptions=null;
        if (myOptionsCheckBox.isEnabled() && myOptionsCheckBox.isSelected()) {
          extraOptions=myOptionsField.getText();
        }
        String version=null;
        if (myVersionCheckBox.isEnabled() && myVersionCheckBox.isSelected()) {
          version=(String)myVersionComboBox.getSelectedItem();
        }
        final PackageManagerController.Listener listener=new PackageManagerController.Listener(){
          @Override public void installationStarted(){
            setDownloadStatus(true);
            table.setPaintBusy(true);
            currentlyInstalling.add(packageName);
          }
          @Override public void installationFinished(          @Nullable String errorDescription){
            table.clearSelection();
            setDownloadStatus(false);
            addNotifications(errorDescription,packageName,myNotificationArea,myPackageListPanel.getNotificationsArea());
            myPackageListPanel.updatePackages(sdk,myInstalledPackages);
            currentlyInstalling.remove(packageName);
          }
        }
;
        myController.installPackage(packageName,repoPackage.getRepoUrl(),version,myInstallToUser.isSelected(),extraOptions,listener);
        myInstallButton.setEnabled(false);
      }
    }
  }
);
}
