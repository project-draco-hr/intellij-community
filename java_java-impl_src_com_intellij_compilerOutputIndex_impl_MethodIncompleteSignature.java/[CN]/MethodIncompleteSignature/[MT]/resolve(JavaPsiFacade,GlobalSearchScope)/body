{
  if (CONSTRUCTOR_METHOD_NAME.equals(getName())) {
    return PsiMethod.EMPTY_ARRAY;
  }
  final PsiClass aClass=javaPsiFacade.findClass(getOwner(),scope);
  if (aClass == null) {
    return PsiMethod.EMPTY_ARRAY;
  }
  final PsiMethod[] methods=aClass.findMethodsByName(getName(),true);
  final List<PsiMethod> filtered=new ArrayList<PsiMethod>(methods.length);
  for (  final PsiMethod method : methods) {
    if (method.hasModifierProperty(PsiModifier.STATIC) == isStatic()) {
      final PsiType returnType=method.getReturnType();
      if (returnType != null && returnType.equalsToText(getReturnType())) {
        filtered.add(method);
      }
    }
  }
  return filtered.toArray(new PsiMethod[filtered.size()]);
}
