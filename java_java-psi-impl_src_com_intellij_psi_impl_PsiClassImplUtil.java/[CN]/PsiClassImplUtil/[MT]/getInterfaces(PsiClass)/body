{
  if (psiClass.isInterface()) {
    return resolveClassReferenceList(psiClass.getExtendsListTypes(),psiClass,false);
  }
  if (psiClass instanceof PsiAnonymousClass) {
    PsiClassType baseClassReference=((PsiAnonymousClass)psiClass).getBaseClassType();
    PsiClass baseClass=baseClassReference.resolve();
    return baseClass != null && baseClass.isInterface() ? new PsiClass[]{baseClass} : PsiClass.EMPTY_ARRAY;
  }
  final PsiClassType[] implementsListTypes=psiClass.getImplementsListTypes();
  return resolveClassReferenceList(implementsListTypes,psiClass,false);
}
