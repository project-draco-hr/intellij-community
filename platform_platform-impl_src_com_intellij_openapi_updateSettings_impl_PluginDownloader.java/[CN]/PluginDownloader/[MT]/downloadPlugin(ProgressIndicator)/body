{
  final File pluginsTemp=new File(PathManager.getPluginTempPath());
  if (!pluginsTemp.exists() && !pluginsTemp.mkdirs()) {
    throw new IOException(IdeBundle.message("error.cannot.create.temp.dir",pluginsTemp));
  }
  final File file=FileUtil.createTempFile(pluginsTemp,"plugin_","_download",true,false);
  if (progressIndicator != null) {
    progressIndicator.setText(IdeBundle.message("progress.connecting"));
  }
  URLConnection connection=null;
  try {
    Pair<URLConnection,String> result=HttpRequests.openConnection(myPluginUrl,false);
    if (result.second != null) {
      myPluginUrl=result.second;
    }
    connection=result.first;
    final InputStream is=(ApplicationManager.getApplication() != null) ? UrlConnectionUtil.getConnectionInputStream(connection,progressIndicator) : connection.getInputStream();
    if (is == null) {
      throw new IOException("Failed to open connection");
    }
    if (progressIndicator != null && ApplicationManager.getApplication() != null) {
      progressIndicator.setText(IdeBundle.message("progress.downloading.plugin",getPluginName()));
    }
    try {
      final OutputStream fos=new BufferedOutputStream(new FileOutputStream(file,false));
      try {
        NetUtils.copyStreamContent(progressIndicator,is,fos,connection.getContentLength());
      }
  finally {
        fos.close();
      }
    }
  finally {
      is.close();
    }
    if (myFileName == null) {
      myFileName=guessFileName(connection,file);
    }
    final File newFile=new File(file.getParentFile(),myFileName);
    FileUtil.rename(file,newFile);
    return newFile;
  }
  finally {
    if (connection instanceof HttpURLConnection) {
      ((HttpURLConnection)connection).disconnect();
    }
  }
}
