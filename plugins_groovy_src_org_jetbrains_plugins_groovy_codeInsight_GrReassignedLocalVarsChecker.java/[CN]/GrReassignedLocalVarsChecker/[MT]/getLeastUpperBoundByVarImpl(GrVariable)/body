{
  return RecursionManager.doPreventingRecursion(resolved,false,new NullableComputable<PsiType>(){
    @Override public PsiType compute(){
      final Collection<PsiReference> all=ReferencesSearch.search(resolved).findAll();
      final GrExpression initializer=resolved.getInitializerGroovy();
      PsiType result=initializer != null ? initializer.getType() : null;
      final PsiManager manager=resolved.getManager();
      for (      PsiReference reference : all) {
        final PsiElement ref=reference.getElement();
        if (ref instanceof GrReferenceExpression && PsiUtil.isLValue(((GrReferenceExpression)ref))) {
          result=TypesUtil.getLeastUpperBoundNullable(result,TypeInferenceHelper.getInitializerTypeFor(ref),manager);
        }
      }
      return result;
    }
  }
);
}
