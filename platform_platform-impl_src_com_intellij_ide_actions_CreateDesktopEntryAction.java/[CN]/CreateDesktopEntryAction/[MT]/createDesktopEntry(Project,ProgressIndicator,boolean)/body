{
  if (!isAvailable())   return;
  double step=(1.0 - indicator.getFraction()) / 3.0;
  File entry=null;
  try {
    indicator.setText(ApplicationBundle.message("desktop.entry.checking"));
    check();
    indicator.setFraction(indicator.getFraction() + step);
    indicator.setText(ApplicationBundle.message("desktop.entry.preparing"));
    entry=prepare();
    indicator.setFraction(indicator.getFraction() + step);
    indicator.setText(ApplicationBundle.message("desktop.entry.installing"));
    install(entry,globalEntry);
    indicator.setFraction(indicator.getFraction() + step);
    if (ApplicationManager.getApplication() != null) {
      String message=ApplicationBundle.message("desktop.entry.success",ApplicationNamesInfo.getInstance().getProductName());
      Notifications.Bus.notify(new Notification(Notifications.SYSTEM_MESSAGES_GROUP_ID,"Desktop entry created",message,NotificationType.INFORMATION),project);
    }
  }
 catch (  Exception e) {
    if (ApplicationManager.getApplication() == null) {
      throw new RuntimeException(e);
    }
    LOG.warn(e);
    String message=e.getMessage();
    if (StringUtil.isEmptyOrSpaces(message))     message="Internal error";
    Notifications.Bus.notify(new Notification(Notifications.SYSTEM_MESSAGES_GROUP_ID,"Failed to create desktop entry",message,NotificationType.ERROR),project);
  }
 finally {
    if (entry != null) {
      FileUtil.delete(entry);
    }
  }
}
