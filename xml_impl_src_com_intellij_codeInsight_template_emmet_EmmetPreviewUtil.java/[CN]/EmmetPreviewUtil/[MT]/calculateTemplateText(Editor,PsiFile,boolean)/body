{
  if (file instanceof XmlFile) {
    PsiDocumentManager.getInstance(file.getProject()).commitDocument(editor.getDocument());
    CollectCustomTemplateCallback callback=new CollectCustomTemplateCallback(editor,file);
    PsiElement context=callback.getContext();
    ZenCodingGenerator generator=ZenCodingTemplate.findApplicableDefaultGenerator(context,false);
    if (generator != null && generator instanceof XmlZenCodingGenerator) {
      final String templatePrefix=new ZenCodingTemplate().computeTemplateKeyWithoutContextChecking(callback);
      if (templatePrefix != null) {
        try {
          ZenCodingTemplate.expand(templatePrefix,callback,generator,Collections.<ZenCodingFilter>emptyList(),expandPrimitiveAbbreviations,0);
          TemplateImpl template=callback.getGeneratedTemplate();
          String templateText=template != null ? template.getTemplateText() : null;
          if (!StringUtil.isEmpty(templateText)) {
            return template.isToReformat() ? reformatTemplateText(file,templateText) : templateText;
          }
        }
 catch (        EmmetException e) {
          return e.getMessage();
        }
      }
    }
  }
  return null;
}
