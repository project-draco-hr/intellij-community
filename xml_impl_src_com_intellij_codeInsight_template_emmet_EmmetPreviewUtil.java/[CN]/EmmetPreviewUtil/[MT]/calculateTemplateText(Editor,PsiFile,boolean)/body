{
  if (file instanceof XmlFile) {
    final Ref<TemplateImpl> generatedTemplate=new Ref<TemplateImpl>();
    PsiDocumentManager.getInstance(file.getProject()).commitDocument(editor.getDocument());
    CustomTemplateCallback callback=createCallback(editor,file,generatedTemplate);
    PsiElement context=callback.getContext();
    ZenCodingGenerator generator=ZenCodingTemplate.findApplicableDefaultGenerator(context,false);
    if (generator != null && generator instanceof XmlZenCodingGenerator) {
      final String templatePrefix=new ZenCodingTemplate().computeTemplateKeyWithoutContextChecking(callback);
      if (templatePrefix != null) {
        ZenCodingTemplate.expand(templatePrefix,callback,null,generator,Collections.<ZenCodingFilter>emptyList(),expandPrimitiveAbbreviations,0);
        TemplateImpl template=generatedTemplate.get();
        String templateText=template != null ? template.getTemplateText() : null;
        if (!StringUtil.isEmpty(templateText)) {
          return template.isToReformat() ? reformatTemplateText(file,templateText) : templateText;
        }
      }
    }
  }
  return null;
}
