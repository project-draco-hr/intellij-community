{
  myComponent=new MyPanel();
  mySplitter=new JBSplitter(false,.15f);
  mySplitter.setSplitterProportionKey("ProjectStructure.TopLevelElements");
  mySplitter.setHonorComponentsMinimumSize(true);
  if (Registry.is("ide.new.project.settings")) {
    mySplitter.setDividerWidth(1);
    mySplitter.setShowDividerIcon(false);
    mySplitter.getDivider().setBackground(Gray._153.withAlpha(128));
    mySplitter.setShowDividerControls(false);
    mySplitter.setOrientation(mySplitter.getOrientation());
  }
  initSidePanel();
  final JPanel left=new JPanel(new BorderLayout()){
    @Override public Dimension getMinimumSize(){
      final Dimension original=super.getMinimumSize();
      return new Dimension(Math.max(original.width,100),original.height);
    }
  }
;
  final DefaultActionGroup toolbarGroup=new DefaultActionGroup();
  toolbarGroup.add(new BackAction(myComponent));
  toolbarGroup.add(new ForwardAction(myComponent));
  final ActionToolbar toolbar=ActionManager.getInstance().createActionToolbar(ActionPlaces.UNKNOWN,toolbarGroup,true);
  toolbar.setTargetComponent(myComponent);
  myToolbarComponent=toolbar.getComponent();
  if (Registry.is("ide.new.project.settings")) {
    left.setBackground(new Color(0xD2D6DD));
  }
 else {
    left.add(myToolbarComponent,BorderLayout.NORTH);
  }
  left.add(mySidePanel,BorderLayout.CENTER);
  mySplitter.setFirstComponent(left);
  mySplitter.setSecondComponent(myDetails);
  myComponent.add(mySplitter,BorderLayout.CENTER);
  myErrorsComponent=new ConfigurationErrorsComponent(myProject);
  myComponent.add(myErrorsComponent,BorderLayout.SOUTH);
  myUiInitialized=true;
  return myComponent;
}
