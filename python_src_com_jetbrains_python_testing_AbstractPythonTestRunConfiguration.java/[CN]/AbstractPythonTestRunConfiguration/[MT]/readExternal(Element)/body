{
  super.readExternal(element);
  myScriptName=JDOMExternalizerUtil.readField(element,"SCRIPT_NAME");
  myClassName=JDOMExternalizerUtil.readField(element,"CLASS_NAME");
  myMethodName=JDOMExternalizerUtil.readField(element,"METHOD_NAME");
  myFolderName=JDOMExternalizerUtil.readField(element,"FOLDER_NAME");
  myPattern=JDOMExternalizerUtil.readField(element,"PATTERN");
  usePattern=Boolean.parseBoolean(JDOMExternalizerUtil.readField(element,"USE_PATTERN"));
  myAddContentRoots=Boolean.parseBoolean(JDOMExternalizerUtil.readField(element,"ADD_CONTENT_ROOTS"));
  myAddSourceRoots=Boolean.parseBoolean(JDOMExternalizerUtil.readField(element,"ADD_SOURCE_ROOTS"));
  try {
    final String testType=JDOMExternalizerUtil.readField(element,"TEST_TYPE");
    myTestType=testType != null ? TestType.valueOf(testType) : TestType.TEST_SCRIPT;
  }
 catch (  IllegalArgumentException e) {
    myTestType=TestType.TEST_SCRIPT;
  }
}
