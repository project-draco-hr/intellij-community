{
  final LinkedHashSet<T> result=new LinkedHashSet<T>();
  TreeUtil.traverseDepth((ChangesBrowserNode)myTree.getModel().getRoot(),new TreeUtil.Traverse(){
    @Override public boolean accept(    Object node){
      ChangesBrowserNode changeNode=(ChangesBrowserNode)node;
      if (changeNode.isLeaf()) {
        result.addAll(changeNode.getAllChangesUnder());
      }
      return true;
    }
  }
);
  return new ArrayList<T>(result);
}
