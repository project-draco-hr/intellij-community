{
  if (myShowFlatten) {
    ListModel m=myList.getModel();
    int size=m.getSize();
    List<T> result=new ArrayList<T>(size);
    for (int i=0; i < size; i++) {
      result.add((T)m.getElementAt(i));
    }
    return result;
  }
 else {
    final LinkedHashSet<T> result=new LinkedHashSet<T>();
    TreeUtil.traverseDepth((ChangesBrowserNode)myTree.getModel().getRoot(),new TreeUtil.Traverse(){
      @Override public boolean accept(      Object node){
        ChangesBrowserNode changeNode=(ChangesBrowserNode)node;
        if (changeNode.isLeaf()) {
          result.addAll(changeNode.getAllChangesUnder());
        }
        return true;
      }
    }
);
    return new ArrayList<T>(result);
  }
}
