{
  final DefaultTreeModel treeModel=(DefaultTreeModel)myTree.getModel();
  final TreeNode root=(TreeNode)treeModel.getRoot();
  final List<TreePath> treeSelection=new ArrayList<TreePath>(changes.size());
  TreeUtil.traverse(root,new TreeUtil.Traverse(){
    @Override public boolean accept(    Object node){
      @SuppressWarnings("unchecked") final T change=(T)((DefaultMutableTreeNode)node).getUserObject();
      if (changes.contains(change)) {
        treeSelection.add(new TreePath(((DefaultMutableTreeNode)node).getPath()));
      }
      return true;
    }
  }
);
  myTree.setSelectionPaths(treeSelection.toArray(new TreePath[treeSelection.size()]));
  if (treeSelection.size() == 1)   myTree.scrollPathToVisible(treeSelection.get(0));
}
