{
  final IdeView view=e.getData(LangDataKeys.IDE_VIEW);
  final Project project=e.getData(CommonDataKeys.PROJECT);
  if (view == null || project == null) {
    return;
  }
  final PsiDirectory taskDir=DirectoryChooserUtil.getOrChooseDirectory(view);
  if (taskDir == null)   return;
  PsiDirectory lessonDir=taskDir.getParent();
  if (lessonDir == null) {
    return;
  }
  final CCProjectService service=CCProjectService.getInstance(project);
  final Course course=service.getCourse();
  final Lesson lesson=course.getLesson(lessonDir.getName());
  final Task task=lesson.getTask(taskDir.getName());
  final int index=task.getTaskFiles().size() + 1;
  String generatedName="file" + index;
  final String taskFileName=Messages.showInputDialog("Name:","Task File Name",null,generatedName,null);
  if (taskFileName == null)   return;
  ApplicationManager.getApplication().runWriteAction(new Runnable(){
    @Override public void run(){
      final FileTemplate taskTemplate=FileTemplateManager.getInstance().getInternalTemplate("task.py");
      try {
        final PsiElement taskPyFile=FileTemplateUtil.createFromTemplate(taskTemplate,taskFileName + ".py",null,taskDir);
        task.addTaskFile(taskPyFile.getContainingFile().getName(),index);
        ApplicationManager.getApplication().invokeLater(new Runnable(){
          @Override public void run(){
            EditorHelper.openInEditor(taskPyFile,false);
            view.selectElement(taskPyFile);
          }
        }
);
      }
 catch (      Exception ignored) {
      }
    }
  }
);
}
