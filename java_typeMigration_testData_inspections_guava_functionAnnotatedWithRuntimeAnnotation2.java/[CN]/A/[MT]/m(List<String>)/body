{
  Function<String,String> function=new Function<String,String>(){
    @Nullable @Override public String apply(    @Nullable String x){
      return x;
    }
  }
;
  boolean strings=FluentIterable.from(l).transform(new Function<String,String>(){
    @Nullable @Override public String apply(    @Nullable String x){
      return x;
    }
  }
).first().isPresent();
}
