{
  NonOpaquePanel panel=new NonOpaquePanel(new GridLayout(0,1,10,10));
  StringBuilder state=new StringBuilder();
  for (int i=0; i < projects.size(); i++) {
    Project project=projects.get(i);
    final ExecutionManagerImpl executionManager=ExecutionManagerImpl.getInstance(project);
    List<RunContentDescriptor> runningDescriptors=executionManager.getRunningDescriptors(Condition.TRUE);
    if (!runningDescriptors.isEmpty() && projects.size() > 1) {
      state.append(project.getName());
      panel.add(new JLabel("<html><body><b>Project '" + project.getName() + "'</b></body></html>"));
    }
    for (    RunContentDescriptor descriptor : runningDescriptors) {
      Set<Executor> executors=executionManager.getExecutors(descriptor);
      for (      Executor executor : executors) {
        state.append(System.identityHashCode(descriptor.getAttachedContent())).append("@").append(System.identityHashCode(executor.getIcon())).append(";");
        ProcessHandler processHandler=descriptor.getProcessHandler();
        Icon icon=(processHandler instanceof KillableProcess && processHandler.isProcessTerminating()) ? AllIcons.Debugger.KillProcess : executor.getIcon();
        JLabel label=new JLabel("<html><body><a href=\"\">" + descriptor.getDisplayName() + "</a></body></html>",icon,SwingConstants.LEADING);
        label.setIconTextGap(JBUI.scale(2));
        label.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        label.putClientProperty(KEY,Trinity.create(project,executor,descriptor));
        panel.add(label);
      }
    }
  }
  if (panel.getComponentCount() == 0) {
    panel.setBorder(JBUI.Borders.empty(10));
    panel.add(new JLabel(ExecutionBundle.message("show.running.list.balloon.nothing"),SwingConstants.CENTER));
  }
 else {
    panel.setBorder(JBUI.Borders.empty(10,10,0,10));
    JLabel label=new JLabel(ExecutionBundle.message("show.running.list.balloon.hint"));
    label.setFont(JBUI.Fonts.miniFont());
    panel.add(label);
  }
  return Pair.create(panel,state.toString());
}
