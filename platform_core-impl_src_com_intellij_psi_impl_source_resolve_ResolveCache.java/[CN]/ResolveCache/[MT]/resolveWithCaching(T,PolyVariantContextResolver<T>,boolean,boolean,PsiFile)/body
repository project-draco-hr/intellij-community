{
  ProgressIndicatorProvider.checkCanceled();
  ApplicationManager.getApplication().assertReadAccessAllowed();
  ConcurrentMap<T,Getter<ResolveResult[]>> map=getMap(containingFile.isPhysical(),incompleteCode,true);
  Getter<ResolveResult[]> reference=map.get(ref);
  ResolveResult[] result=reference == null ? null : reference.get();
  if (result != null) {
    return result;
  }
  RecursionGuard.StackStamp stamp=myGuard.markStack();
  result=needToPreventRecursion ? myGuard.doPreventingRecursion(Pair.create(ref,incompleteCode),true,new Computable<ResolveResult[]>(){
    @Override public ResolveResult[] compute(){
      return resolver.resolve(ref,containingFile,incompleteCode);
    }
  }
) : resolver.resolve(ref,containingFile,incompleteCode);
  if (stamp.mayCacheNow()) {
    cache(ref,map,result,true);
  }
  return result == null ? ResolveResult.EMPTY_ARRAY : result;
}
