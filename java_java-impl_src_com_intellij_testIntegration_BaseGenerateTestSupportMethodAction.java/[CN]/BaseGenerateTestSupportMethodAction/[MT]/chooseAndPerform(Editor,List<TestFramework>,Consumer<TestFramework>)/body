{
  if (frameworks.size() == 1) {
    consumer.consume(frameworks.get(0));
    return;
  }
  final JList list=new JBList(frameworks.toArray(new TestFramework[frameworks.size()]));
  list.setCellRenderer(new DefaultListCellRenderer(){
    @Override public Component getListCellRendererComponent(    JList list,    Object value,    int index,    boolean isSelected,    boolean cellHasFocus){
      Component result=super.getListCellRendererComponent(list,"",index,isSelected,cellHasFocus);
      if (value == null)       return result;
      TestFramework framework=(TestFramework)value;
      setIcon(framework.getIcon());
      setText(framework.getName());
      return result;
    }
  }
);
  PopupChooserBuilder builder=new PopupChooserBuilder(list);
  builder.setFilteringEnabled(new Function<Object,String>(){
    @Override public String fun(    Object o){
      return ((TestFramework)o).getName();
    }
  }
);
  builder.setTitle("Choose Framework").setItemChoosenCallback(new Runnable(){
    @Override public void run(){
      consumer.consume((TestFramework)list.getSelectedValue());
    }
  }
).setMovable(true).createPopup().showInBestPositionFor(editor);
}
