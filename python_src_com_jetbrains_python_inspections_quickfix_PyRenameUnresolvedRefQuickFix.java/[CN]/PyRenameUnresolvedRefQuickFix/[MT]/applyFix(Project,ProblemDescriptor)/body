{
  final PsiElement element=descriptor.getPsiElement();
  if (!(element instanceof PyReferenceExpression)) {
    return;
  }
  final PyReferenceExpression referenceExpression=(PyReferenceExpression)element;
  ScopeOwner parentScope=ScopeUtil.getScopeOwner(referenceExpression);
  if (parentScope == null)   return;
  List<PyReferenceExpression> refs=collectExpressionsToRename(referenceExpression,parentScope);
  LookupElement[] items=collectLookupItems(parentScope);
  final String name=referenceExpression.getReferencedName();
  ReferenceNameExpression refExpr=new ReferenceNameExpression(items,name);
  TemplateBuilderImpl builder=(TemplateBuilderImpl)TemplateBuilderFactory.getInstance().createTemplateBuilder(parentScope);
  for (  PyReferenceExpression expr : refs) {
    if (!expr.equals(referenceExpression)) {
      builder.replaceElement(expr,name,name,false);
    }
 else {
      builder.replaceElement(expr,name,refExpr,true);
    }
  }
  Editor editor=getEditor(project,element.getContainingFile(),parentScope.getTextRange().getStartOffset());
  if (editor != null) {
    Template template=builder.buildInlineTemplate();
    TemplateManager.getInstance(project).startTemplate(editor,template);
  }
}
