{
  final XmlTag another=(XmlTag)myMatchingVisitor.getElement();
  final boolean isTypedVar=myMatchingVisitor.getMatchContext().getPattern().isTypedVar(tag.getName());
  myMatchingVisitor.setResult((matches(tag.getName(),another.getName()) || isTypedVar) && myMatchingVisitor.matchInAnyOrder(tag.getAttributes(),another.getAttributes()));
  if (myMatchingVisitor.getResult()) {
    final XmlTagChild[] contentChildren=tag.getValue().getChildren();
    if (contentChildren.length > 0) {
      PsiElement[] patternNodes=contentChildren;
      PsiElement[] matchedNodes=another.getValue().getChildren();
      if (contentChildren.length != 1) {
        patternNodes=expandXmlTexts(patternNodes);
        matchedNodes=expandXmlTexts(matchedNodes);
      }
      myMatchingVisitor.setResult(myMatchingVisitor.matchSequentially(new ArrayBackedNodeIterator(patternNodes),new ArrayBackedNodeIterator(matchedNodes)));
    }
  }
  if (myMatchingVisitor.getResult() && isTypedVar) {
    MatchingHandler handler=myMatchingVisitor.getMatchContext().getPattern().getHandler(tag.getName());
    myMatchingVisitor.setResult(((SubstitutionHandler)handler).handle(another,myMatchingVisitor.getMatchContext()));
  }
}
