{
  Keymap keymap=createKeymapCopyIfNeeded();
  KeyboardShortcutDialog dialog=new KeyboardShortcutDialog(this,actionId,myQuickLists);
  dialog.setData(keymap,shortcut instanceof KeyboardShortcut ? (KeyboardShortcut)shortcut : null);
  if (!dialog.showAndGet()) {
    return;
  }
  KeyboardShortcut keyboardShortcut=dialog.getKeyboardShortcut();
  if (keyboardShortcut == null) {
    return;
  }
  Map<String,ArrayList<KeyboardShortcut>> conflicts=keymap.getConflicts(actionId,keyboardShortcut);
  if (!conflicts.isEmpty()) {
    int result=Messages.showYesNoCancelDialog(this,KeyMapBundle.message("conflict.shortcut.dialog.message"),KeyMapBundle.message("conflict.shortcut.dialog.title"),KeyMapBundle.message("conflict.shortcut.dialog.remove.button"),KeyMapBundle.message("conflict.shortcut.dialog.leave.button"),KeyMapBundle.message("conflict.shortcut.dialog.cancel.button"),Messages.getWarningIcon());
    if (result == Messages.YES) {
      for (      String id : conflicts.keySet()) {
        for (        KeyboardShortcut s : conflicts.get(id)) {
          keymap.removeShortcut(id,s);
        }
      }
    }
 else     if (result != Messages.NO) {
      return;
    }
  }
  Shortcut[] shortcuts=keymap.getShortcuts(actionId);
  for (  Shortcut s : shortcuts) {
    if (s.equals(keyboardShortcut)) {
      return;
    }
  }
  keymap.addShortcut(actionId,keyboardShortcut);
  if (StringUtil.startsWithChar(actionId,'$')) {
    keymap.addShortcut(KeyMapBundle.message("editor.shortcut",actionId.substring(1)),keyboardShortcut);
  }
  repaintLists();
  currentKeymapChanged();
}
