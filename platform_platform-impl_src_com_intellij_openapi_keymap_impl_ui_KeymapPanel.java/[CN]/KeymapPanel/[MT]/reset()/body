{
  if (myNonEnglishKeyboardSupportOption != null) {
    KeyboardSettingsExternalizable.getInstance().setNonEnglishKeyboardSupportEnabled(false);
    myNonEnglishKeyboardSupportOption.setSelected(KeyboardSettingsExternalizable.getInstance().isNonEnglishKeyboardSupportEnabled());
  }
  myKeymapListModel.removeAllElements();
  KeymapManagerEx keymapManager=KeymapManagerEx.getInstanceEx();
  for (  Keymap keymap1 : keymapManager.getAllKeymaps()) {
    if (SystemInfo.isMac && KeymapManager.DEFAULT_IDEA_KEYMAP.equals(keymap1.getName())) {
      continue;
    }
    KeymapImpl keymap=(KeymapImpl)keymap1;
    if (keymap.canModify()) {
      keymap=keymap.copy();
    }
    myKeymapListModel.addElement(keymap);
    if (Comparing.equal(keymapManager.getActiveKeymap(),keymap1)) {
      mySelectedKeymap=keymap;
    }
  }
  if (myKeymapListModel.getSize() == 0) {
    KeymapImpl keymap=new KeymapImpl();
    keymap.setName(KeyMapBundle.message("keymap.no.name"));
    myKeymapListModel.addElement(keymap);
  }
  myKeymapList.setSelectedItem(mySelectedKeymap);
  myActionsTree.reset(mySelectedKeymap,getCurrentQuickListIds());
}
