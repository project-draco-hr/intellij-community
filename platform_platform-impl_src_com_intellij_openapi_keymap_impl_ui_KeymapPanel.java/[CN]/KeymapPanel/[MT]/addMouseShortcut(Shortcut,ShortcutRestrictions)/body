{
  String actionId=myActionsTree.getSelectedActionId();
  if (actionId == null) {
    return;
  }
  Keymap keymapSelected=myEditor.getModel().getSelected();
  MouseShortcutDialog dialog=new MouseShortcutDialog(this,restrictions.allowMouseDoubleClick);
  MouseShortcut mouseShortcut=dialog.showAndGet(shortcut,actionId,keymapSelected,myQuickLists);
  if (mouseShortcut == null) {
    return;
  }
  Keymap keymap=null;
  if (dialog.hasConflicts()) {
    int result=showConfirmationDialog(this);
    if (result == Messages.YES) {
      keymap=createKeymapCopyIfNeededAndPossible(this,keymapSelected);
      String[] actionIds=keymap.getActionIds(mouseShortcut);
      for (      String id : actionIds) {
        keymap.removeShortcut(id,mouseShortcut);
      }
    }
 else     if (result != Messages.NO) {
      return;
    }
  }
  if (keymap == null)   keymap=createKeymapCopyIfNeededAndPossible(this,keymapSelected);
  Shortcut[] shortcuts=keymap.getShortcuts(actionId);
  for (  Shortcut shortcut1 : shortcuts) {
    if (shortcut1.equals(mouseShortcut)) {
      return;
    }
  }
  keymap.addShortcut(actionId,mouseShortcut);
  if (StringUtil.startsWithChar(actionId,'$')) {
    keymap.addShortcut(KeyMapBundle.message("editor.shortcut",actionId.substring(1)),mouseShortcut);
  }
  repaintLists();
  currentKeymapChanged();
}
