{
  String actionId=myActionsTree.getSelectedActionId();
  if (actionId == null) {
    return;
  }
  Keymap keymap=createKeymapCopyIfNeeded();
  MouseShortcut mouseShortcut=shortcut instanceof MouseShortcut ? (MouseShortcut)shortcut : null;
  Project project=CommonDataKeys.PROJECT.getData(DataManager.getInstance().getDataContext(this));
  MouseShortcutDialog dialog=new MouseShortcutDialog(this,mouseShortcut,keymap,actionId,ActionsTreeUtil.createMainGroup(project,keymap,myQuickLists,null,true,null),restrictions);
  if (!dialog.showAndGet()) {
    return;
  }
  mouseShortcut=dialog.getMouseShortcut();
  if (mouseShortcut == null) {
    return;
  }
  String[] actionIds=keymap.getActionIds(mouseShortcut);
  if (actionIds.length > 1 || (actionIds.length == 1 && !actionId.equals(actionIds[0]))) {
    int result=Messages.showYesNoCancelDialog(this,KeyMapBundle.message("conflict.shortcut.dialog.message"),KeyMapBundle.message("conflict.shortcut.dialog.title"),KeyMapBundle.message("conflict.shortcut.dialog.remove.button"),KeyMapBundle.message("conflict.shortcut.dialog.leave.button"),KeyMapBundle.message("conflict.shortcut.dialog.cancel.button"),Messages.getWarningIcon());
    if (result == Messages.YES) {
      for (      String id : actionIds) {
        keymap.removeShortcut(id,mouseShortcut);
      }
    }
 else     if (result != Messages.NO) {
      return;
    }
  }
  Shortcut[] shortcuts=keymap.getShortcuts(actionId);
  for (  Shortcut shortcut1 : shortcuts) {
    if (shortcut1.equals(mouseShortcut)) {
      return;
    }
  }
  keymap.addShortcut(actionId,mouseShortcut);
  if (StringUtil.startsWithChar(actionId,'$')) {
    keymap.addShortcut(KeyMapBundle.message("editor.shortcut",actionId.substring(1)),mouseShortcut);
  }
  repaintLists();
  currentKeymapChanged();
}
