{
  if (!restrictions.allowMouseShortcut)   return;
  MouseShortcutDialog dialog=new MouseShortcutDialog(parent,restrictions.allowMouseDoubleClick);
  MouseShortcut mouseShortcut=dialog.showAndGet(actionId,keymapSelected,quickLists);
  if (mouseShortcut == null)   return;
  Keymap keymap=null;
  if (dialog.hasConflicts()) {
    int result=showConfirmationDialog(parent);
    if (result == Messages.YES) {
      keymap=createKeymapCopyIfNeededAndPossible(parent,keymapSelected);
      String[] actionIds=keymap.getActionIds(mouseShortcut);
      for (      String id : actionIds) {
        keymap.removeShortcut(id,mouseShortcut);
      }
    }
 else     if (result != Messages.NO) {
      return;
    }
  }
  if (keymap == null)   keymap=createKeymapCopyIfNeededAndPossible(parent,keymapSelected);
  Shortcut[] shortcuts=keymap.getShortcuts(actionId);
  for (  Shortcut shortcut1 : shortcuts) {
    if (shortcut1.equals(mouseShortcut)) {
      return;
    }
  }
  keymap.addShortcut(actionId,mouseShortcut);
  if (StringUtil.startsWithChar(actionId,'$')) {
    keymap.addShortcut(KeyMapBundle.message("editor.shortcut",actionId.substring(1)),mouseShortcut);
  }
}
