{
  if (myProject.isDisposed())   return;
  final Application app=ApplicationManager.getApplication();
  if (app.isUnitTestMode()) {
    if (ourGrailsTestFlag && !myProject.isInitialized()) {
      runActions(computeRawActions(takeOrderSnapshot()));
    }
    return;
  }
  final Set<Pair<Object,SyncAction>> orderSnapshot=takeOrderSnapshot();
  ProgressIndicatorUtils.scheduleWithWriteActionPriority(new ReadTask(){
    @Nullable @Override public Continuation performInReadAction(    @NotNull final ProgressIndicator indicator) throws ProcessCanceledException {
      final Set<Trinity<Module,SyncAction,MvcFramework>> actions=isUpToDate() ? computeRawActions(orderSnapshot) : Collections.<Trinity<Module,SyncAction,MvcFramework>>emptySet();
      return new Continuation(new Runnable(){
        @Override public void run(){
          if (isUpToDate()) {
            runActions(actions);
          }
 else           if (!indicator.isCanceled()) {
            scheduleRunActions();
          }
        }
      }
,ModalityState.NON_MODAL);
    }
    @Override public void onCanceled(    @NotNull ProgressIndicator indicator){
      scheduleRunActions();
    }
    private boolean isUpToDate(){
      return !myProject.isDisposed() && orderSnapshot.equals(takeOrderSnapshot());
    }
  }
);
}
