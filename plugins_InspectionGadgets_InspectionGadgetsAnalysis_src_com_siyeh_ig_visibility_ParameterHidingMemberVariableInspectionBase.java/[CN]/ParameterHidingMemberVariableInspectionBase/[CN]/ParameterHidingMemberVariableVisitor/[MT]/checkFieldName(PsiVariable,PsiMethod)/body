{
  final String variableName=variable.getName();
  if (variableName == null) {
    return null;
  }
  PsiClass aClass=ClassUtils.getContainingClass(method);
  while (aClass != null) {
    final PsiField field=aClass.findFieldByName(variableName,true);
    if (field != null && (!m_ignoreStaticMethodParametersHidingInstanceFields || field.hasModifierProperty(PsiModifier.STATIC) || !method.hasModifierProperty(PsiModifier.STATIC)) && (!m_ignoreInvisibleFields || ClassUtils.isFieldVisible(field,aClass))) {
      return aClass;
    }
    if (aClass.hasModifierProperty(PsiModifier.STATIC) && m_ignoreStaticMethodParametersHidingInstanceFields) {
      return null;
    }
    aClass=ClassUtils.getContainingClass(aClass);
  }
  return null;
}
