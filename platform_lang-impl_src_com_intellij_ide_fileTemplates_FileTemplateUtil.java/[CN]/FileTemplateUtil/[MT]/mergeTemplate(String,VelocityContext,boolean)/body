{
  final StringWriter stringWriter=new StringWriter();
  try {
    Project project=null;
    final Object projectName=context.get(FileTemplateManager.PROJECT_NAME_VARIABLE);
    if (projectName instanceof String) {
      Project[] projects=ProjectManager.getInstance().getOpenProjects();
      project=ContainerUtil.find(projects,new Condition<Project>(){
        @Override public boolean value(        Project project){
          return projectName.equals(project.getName());
        }
      }
);
    }
    VelocityWrapper.evaluate(project,context,stringWriter,templateContent);
  }
 catch (  final VelocityException e) {
    if (ApplicationManager.getApplication().isUnitTestMode()) {
      LOG.error(e);
    }
    LOG.info("Error evaluating template:\n" + templateContent,e);
    ApplicationManager.getApplication().invokeLater(new Runnable(){
      @Override public void run(){
        Messages.showErrorDialog(IdeBundle.message("error.parsing.file.template",e.getMessage()),IdeBundle.message("title.velocity.error"));
      }
    }
);
  }
  final String result=stringWriter.toString();
  if (useSystemLineSeparators) {
    final String newSeparator=CodeStyleSettingsManager.getSettings(ProjectManagerEx.getInstanceEx().getDefaultProject()).getLineSeparator();
    if (!"\n".equals(newSeparator)) {
      return StringUtil.convertLineSeparators(result,newSeparator);
    }
  }
  return result;
}
