{
  UIUtil.invokeLaterIfNeeded(new Runnable(){
    @Override public void run(){
      ProgressIndicator indicator=SoftReference.dereference(file.getUserData(CURRENT_UPDATES));
      if (indicator != null) {
        indicator.cancel();
      }
      if (myProject.isDisposed()) {
        return;
      }
      indicator=new ProgressIndicatorBase();
      file.putUserData(CURRENT_UPDATES,new WeakReference<ProgressIndicator>(indicator));
      final ReadTask task=createTask(indicator,file);
      if (task == null)       return;
      if (ApplicationManager.getApplication().isUnitTestMode()) {
        task.computeInReadAction(indicator);
      }
 else {
        final ProgressIndicator indicator1=indicator;
        myExecutor.execute(new Runnable(){
          @Override public void run(){
            ProgressIndicatorUtils.runWithWriteActionPriority(indicator1,task);
          }
        }
);
      }
    }
  }
);
}
