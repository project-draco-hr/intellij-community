{
  if (promises.isEmpty()) {
    return DONE;
  }
  final AsyncPromise<Void> totalPromise=new AsyncPromise<Void>();
  Consumer done=new CountDownConsumer(promises.size(),totalPromise);
  Consumer<Throwable> rejected=new Consumer<Throwable>(){
    @Override public void consume(    Throwable error){
      if (totalPromise.state == AsyncPromise.State.PENDING) {
        totalPromise.setError(error);
      }
    }
  }
;
  for (  Promise<?> promise : promises) {
    promise.done(done);
    promise.rejected(rejected);
  }
  return totalPromise;
}
