{
  int size=asyncResults.size();
  if (size == 0) {
    return AsyncResult.doneList();
  }
  final List<T> results=size == 1 ? new SmartList<T>() : new ArrayList<T>(size);
  final AsyncResult<List<T>> totalResult=new AsyncResult<List<T>>(asyncResults.size(),results);
  Consumer<T> resultConsumer=new Consumer<T>(){
    @Override public void consume(    T result){
synchronized (results) {
        results.add(result);
      }
      totalResult.setDone();
    }
  }
;
  for (  AsyncResult<T> subResult : asyncResults) {
    subResult.doWhenDone(resultConsumer).notifyWhenRejected(totalResult);
  }
  return totalResult;
}
