{
  this.own=own;
  this.loader=loader;
  in.discard(4);
  minorVersion=in.readUnsignedShort();
  majorVersion=in.readUnsignedShort();
  pool=new ConstantPool(in);
  accessFlags=in.readUnsignedShort();
  int thisClassIdx=in.readUnsignedShort();
  int superClassIdx=in.readUnsignedShort();
  qualifiedName=pool.getPrimitiveConstant(thisClassIdx).getString();
  superClass=pool.getPrimitiveConstant(superClassIdx);
  int length=in.readUnsignedShort();
  interfaces=new int[length];
  interfaceNames=new String[length];
  for (int i=0; i < length; i++) {
    interfaces[i]=in.readUnsignedShort();
    interfaceNames[i]=pool.getPrimitiveConstant(interfaces[i]).getString();
  }
  length=in.readUnsignedShort();
  fields=new VBStyleCollection<>();
  for (int i=0; i < length; i++) {
    StructField field=new StructField(in,this);
    fields.addWithKey(field,InterpreterUtil.makeUniqueKey(field.getName(),field.getDescriptor()));
  }
  length=in.readUnsignedShort();
  methods=new VBStyleCollection<>();
  for (int i=0; i < length; i++) {
    StructMethod method=new StructMethod(in,this);
    methods.addWithKey(method,InterpreterUtil.makeUniqueKey(method.getName(),method.getDescriptor()));
  }
  attributes=readAttributes(in,pool);
  releaseResources();
}
