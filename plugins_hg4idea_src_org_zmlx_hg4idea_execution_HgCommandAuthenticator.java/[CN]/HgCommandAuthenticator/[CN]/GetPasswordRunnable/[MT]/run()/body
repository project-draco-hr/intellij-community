{
  final HgVcs vcs=HgVcs.getInstance(myProject);
  if (vcs == null) {
    return;
  }
  @NotNull final HgGlobalSettings hgGlobalSettings=vcs.getGlobalSettings();
  @Nullable String rememberedLoginsForUrl=null;
  String url=VirtualFileManager.extractPath(myURL);
  if (!StringUtil.isEmptyOrSpaces(myURL)) {
    rememberedLoginsForUrl=hgGlobalSettings.getRememberedUserName(url);
  }
  String login=myProposedLogin;
  if (StringUtil.isEmptyOrSpaces(login)) {
    login=rememberedLoginsForUrl;
  }
  String password=null;
  if (!StringUtil.isEmptyOrSpaces(login)) {
    password=PasswordSafe.getInstance().getPassword(HgCommandAuthenticator.class,keyForUrlAndLogin(url,login));
  }
  if (!myForceAuthorization && !StringUtil.isEmptyOrSpaces(password) && !StringUtil.isEmptyOrSpaces(login)) {
    myCredentials=new Credentials(login,password);
    ok=true;
    return;
  }
  if (mySilent) {
    ok=false;
    return;
  }
  final AuthDialog dialog=new AuthDialog(myProject,HgVcsMessages.message("hg4idea.dialog.login.password.required"),HgVcsMessages.message("hg4idea.dialog.login.description",myURL),login,password,true);
  if (dialog.showAndGet()) {
    ok=true;
    Credentials credentials=new Credentials(dialog.getUsername(),dialog.getPassword());
    myCredentials=credentials;
    PasswordSafe.getInstance().set(CredentialAttributes(HgCommandAuthenticator.class,keyForUrlAndLogin(url,credentials.getUserName())),credentials,!dialog.isRememberPassword());
    hgGlobalSettings.addRememberedUrl(url,credentials.getUserName());
  }
}
