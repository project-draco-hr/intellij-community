{
  if (context.getFrameProxy() == null)   return null;
  final ReferenceType type=myField.declaringType();
  final JavaPsiFacade facade=JavaPsiFacade.getInstance(project);
  final String fieldName=myField.name();
  if (fieldName.startsWith(OUTER_LOCAL_VAR_FIELD_PREFIX)) {
    String varName=fieldName.substring(fieldName.lastIndexOf('$') + 1);
    PsiElement element=PositionUtil.getContextElement(context);
    if (element == null) {
      return null;
    }
    PsiClass aClass=PsiTreeUtil.getParentOfType(element,PsiClass.class,false);
    if (aClass == null) {
      return null;
    }
    aClass=(PsiClass)aClass.getNavigationElement();
    PsiVariable psiVariable=facade.getResolveHelper().resolveReferencedVariable(varName,aClass);
    if (psiVariable == null) {
      return null;
    }
    return SourcePosition.createFromOffset(psiVariable.getContainingFile(),psiVariable.getTextOffset());
  }
 else {
    PsiClass aClass=facade.findClass(type.name().replace('$','.'),context.getDebuggerSession().getSearchScope());
    if (aClass == null) {
      try {
        final List<Location> locations=type.allLineLocations();
        if (!locations.isEmpty()) {
          final Location lastLocation=locations.get(locations.size() - 1);
          final SourcePosition position=context.getDebugProcess().getPositionManager().getSourcePosition(lastLocation);
          if (position != null) {
            aClass=JVMNameUtil.getClassAt(position);
          }
        }
      }
 catch (      AbsentInformationException ignored) {
      }
catch (      ClassNotPreparedException ignored) {
      }
    }
    if (aClass != null) {
      aClass=(PsiClass)aClass.getNavigationElement();
      for (      PsiField field : aClass.getFields()) {
        if (fieldName.equals(field.getName())) {
          return SourcePosition.createFromOffset(field.getContainingFile(),field.getTextOffset());
        }
      }
    }
    return null;
  }
}
