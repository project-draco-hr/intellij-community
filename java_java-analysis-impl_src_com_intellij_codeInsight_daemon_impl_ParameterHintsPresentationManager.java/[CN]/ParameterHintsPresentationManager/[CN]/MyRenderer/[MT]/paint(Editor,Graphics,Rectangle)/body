{
  if (myText != null && (step > steps || startWidth != 0)) {
    TextAttributes attributes=editor.getColorsScheme().getAttributes(JavaHighlightingColors.INLINE_PARAMETER_HINT);
    if (attributes != null) {
      Color backgroundColor=attributes.getBackgroundColor();
      if (backgroundColor != null) {
        GraphicsConfig config=GraphicsUtil.setupAAPainting(g);
        int shadeRectHeight=Math.min(4,r.height - 3);
        g.setColor(ColorUtil.darker(backgroundColor,1));
        g.fillRoundRect(r.x + 2,r.y + r.height - shadeRectHeight - 1,r.width - 4,shadeRectHeight,4,4);
        g.setColor(backgroundColor);
        g.fillRoundRect(r.x + 2,r.y + 1,r.width - 4,r.height - 3,4,4);
        config.restore();
      }
      Color foregroundColor=attributes.getForegroundColor();
      if (foregroundColor != null) {
        g.setColor(foregroundColor);
        g.setFont(getFont(editor));
        FontMetrics metrics=g.getFontMetrics();
        Shape savedClip=g.getClip();
        g.clipRect(r.x + 3,r.y + 1,r.width - 6,r.height - 3);
        int editorAscent=editor instanceof EditorImpl ? ((EditorImpl)editor).getAscent() : 0;
        g.drawString(myText,r.x + 7,r.y + Math.max(editorAscent,(r.height + metrics.getAscent() - metrics.getDescent()) / 2) - 1);
        g.setClip(savedClip);
      }
    }
  }
}
