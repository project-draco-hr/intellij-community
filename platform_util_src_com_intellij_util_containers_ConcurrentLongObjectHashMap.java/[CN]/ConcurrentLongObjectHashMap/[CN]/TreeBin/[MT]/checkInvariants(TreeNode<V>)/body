{
  TreeNode<V> tp=t.parent;
  TreeNode<V> tl=t.left;
  TreeNode<V> tr=t.right;
  TreeNode<V> tb=t.prev;
  TreeNode<V> tn=(TreeNode<V>)t.next;
  if (tb != null && tb.next != t) {
    return false;
  }
  if (tn != null && tn.prev != t) {
    return false;
  }
  if (tp != null && t != tp.left && t != tp.right) {
    return false;
  }
  if (tl != null && (tl.parent != t || tl.hash > t.hash)) {
    return false;
  }
  if (tr != null && (tr.parent != t || tr.hash < t.hash)) {
    return false;
  }
  if (t.red && tl != null && tl.red && tr != null && tr.red) {
    return false;
  }
  if (tl != null && !checkInvariants(tl)) {
    return false;
  }
  if (tr != null && !checkInvariants(tr)) {
    return false;
  }
  return true;
}
