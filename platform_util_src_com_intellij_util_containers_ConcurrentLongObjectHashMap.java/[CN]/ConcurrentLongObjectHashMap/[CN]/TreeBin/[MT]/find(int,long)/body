{
  for (Node<V> e=first; e != null; e=e.next) {
    int s;
    if (((s=lockState) & (WAITER | WRITER)) != 0) {
      if (e.hash == h && (e.key == k)) {
        return e;
      }
    }
 else     if (U.compareAndSwapInt(this,LOCKSTATE,s,s + READER)) {
      TreeNode<V> p;
      try {
        TreeNode<V> r;
        p=(r=root) == null ? null : r.findTreeNode(h,k);
      }
  finally {
        int ls;
        do {
        }
 while (!U.compareAndSwapInt(this,LOCKSTATE,ls=lockState,ls - READER));
        Thread w;
        if (ls == (READER | WAITER) && (w=waiter) != null) {
          LockSupport.unpark(w);
        }
      }
      return p;
    }
  }
  return null;
}
