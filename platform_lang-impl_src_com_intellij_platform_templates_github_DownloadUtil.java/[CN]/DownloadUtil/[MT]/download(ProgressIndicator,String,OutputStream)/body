{
  final String originalText=progress != null ? progress.getText() : null;
  substituteContentLength(progress,originalText,-1);
  if (progress != null) {
    progress.setText2("Downloading " + location);
  }
  try {
    HttpRequests.request(location).productNameAsUserAgent().connect(new HttpRequests.RequestProcessor<Object>(){
      @Override public Object process(      @NotNull HttpRequests.Request request) throws IOException {
        try {
          int contentLength=request.getConnection().getContentLength();
          substituteContentLength(progress,originalText,contentLength);
          NetUtils.copyStreamContent(progress,request.getInputStream(),output,contentLength);
        }
 catch (        IOException e) {
          throw new IOException(HttpRequests.createErrorMessage(e,request),e);
        }
        return null;
      }
    }
);
  }
 catch (  IOException e) {
    throw new IOException("Cannot download " + location,e);
  }
}
