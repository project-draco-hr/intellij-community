{
  EditorColorsScheme colorsScheme=myEditor.getColorsScheme();
  StringBuilder sb=new StringBuilder();
  sb.append("Deleted line below\n\n" + "Modified line\n\n" + "Added line\n\n"+ "Line with modified whitespaces\n\n"+ "Added line\n"+ "Line with modified whitespaces and deletion after\n");
  int additionalLines=Math.max(0,AnnotationsSettings.getInstance().getOrderedColors(colorsScheme).size() - StringUtil.countNewLines(sb));
  sb.append(StringUtil.repeat("\n",additionalLines));
  myEditor.getDocument().setText(sb);
  myEditor.getMarkupModel().removeAllHighlighters();
  myEditor.getGutterComponentEx().closeAllAnnotations();
  addHighlighter(new Range(1,1,0,1),EditorColors.DELETED_LINES_COLOR);
  addHighlighter(createModifiedRange(2,Range.MODIFIED),EditorColors.MODIFIED_LINES_COLOR);
  addHighlighter(createModifiedRange(4,Range.INSERTED),EditorColors.ADDED_LINES_COLOR);
  addHighlighter(createModifiedRange(6,Range.EQUAL),EditorColors.WHITESPACES_MODIFIED_LINES_COLOR);
  addHighlighter(createModifiedRange(8,Range.INSERTED,Range.EQUAL,Range.DELETED),EditorColors.WHITESPACES_MODIFIED_LINES_COLOR);
  List<Color> annotationColors=AnnotationsSettings.getInstance().getOrderedColors(colorsScheme);
  List<Integer> anchorIndexes=AnnotationsSettings.getInstance().getAnchorIndexes(colorsScheme);
  myEditor.getGutterComponentEx().registerTextAnnotation(new MyTextAnnotationGutterProvider(annotationColors,anchorIndexes));
}
