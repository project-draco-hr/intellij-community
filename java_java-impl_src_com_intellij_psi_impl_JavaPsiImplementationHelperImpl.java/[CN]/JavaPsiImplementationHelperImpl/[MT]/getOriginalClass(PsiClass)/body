{
  PsiCompiledElement cls=psiClass.getUserData(ClsElementImpl.COMPILED_ELEMENT);
  if (cls != null && cls.isValid())   return (PsiClass)cls;
  VirtualFile vFile=psiClass.getContainingFile().getVirtualFile();
  final ProjectFileIndex idx=ProjectRootManager.getInstance(myProject).getFileIndex();
  if (vFile == null || !idx.isInLibrarySource(vFile))   return psiClass;
  String fqn=psiClass.getQualifiedName();
  if (fqn == null)   return psiClass;
  final Set<OrderEntry> orderEntries=ContainerUtil.newHashSet(idx.getOrderEntriesForFile(vFile));
  GlobalSearchScope librariesScope=LibraryScopeCache.getInstance(myProject).getLibrariesOnlyScope();
  for (  PsiClass original : JavaPsiFacade.getInstance(myProject).findClasses(fqn,librariesScope)) {
    PsiFile psiFile=original.getContainingFile();
    if (psiFile != null) {
      VirtualFile candidateFile=psiFile.getVirtualFile();
      if (candidateFile != null) {
        List<OrderEntry> entries=idx.getOrderEntriesForFile(candidateFile);
        for (int i=0; i < entries.size(); i++) {
          if (orderEntries.contains(entries.get(i)))           return original;
        }
      }
    }
  }
  return psiClass;
}
