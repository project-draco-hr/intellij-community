{
  final FileTemplate catchBodyTemplate=FileTemplateManager.getInstance(catchSection.getProject()).getCodeTemplate(JavaTemplateUtil.TEMPLATE_CATCH_BODY);
  LOG.assertTrue(catchBodyTemplate != null);
  Properties props=FileTemplateManager.getInstance(myProject).getDefaultProperties();
  props.setProperty(FileTemplate.ATTRIBUTE_EXCEPTION,exceptionName);
  props.setProperty(FileTemplate.ATTRIBUTE_EXCEPTION_TYPE,exceptionType.getCanonicalText());
  if (context != null && context.isPhysical()) {
    final PsiDirectory directory=context.getContainingFile().getContainingDirectory();
    if (directory != null) {
      JavaTemplateUtil.setPackageNameAttribute(props,directory);
    }
  }
  final PsiCodeBlock codeBlockFromText;
  try {
    codeBlockFromText=PsiElementFactory.SERVICE.getInstance(myProject).createCodeBlockFromText("{\n" + catchBodyTemplate.getText(props) + "\n}",null);
  }
 catch (  ProcessCanceledException ce) {
    throw ce;
  }
catch (  Exception e) {
    throw new IncorrectOperationException("Incorrect file template",(Throwable)e);
  }
  catchSection.getCatchBlock().replace(codeBlockFromText);
}
