{
  myData=bundle;
  myStateBean=stateBean;
  myRootPackage=JavaPsiFacade.getInstance(project).findPackage("");
  myTopLevelPackages=new ArrayList<AbstractTreeNode>();
  myFilteredPackages=new ArrayList<String>();
  myFilteredClasses=new ArrayList<String>();
  myRootNode=new CoverageListNode(myRootPackage,myData,myTopLevelPackages,myStateBean,myFilteredPackages,myFilteredClasses);
  for (  CoverageSuite suite : bundle.getSuites()) {
    final List<PsiPackage> packages=((JavaCoverageSuite)suite).getCurrentSuitePackages(project);
    for (    PsiPackage aPackage : packages) {
      myFilteredPackages.add(aPackage.getQualifiedName());
      final CoverageListNode node=new CoverageListNode(aPackage,myData,myTopLevelPackages,myStateBean,myFilteredPackages,myFilteredClasses);
      myTopLevelPackages.add(node);
      collectSubPackages(myTopLevelPackages,aPackage,myData,myTopLevelPackages,myStateBean,myFilteredPackages,myFilteredClasses,true);
    }
    final List<PsiClass> classes=((JavaCoverageSuite)suite).getCurrentSuiteClasses(project);
    for (    PsiClass aClass : classes) {
      myFilteredClasses.add(aClass.getQualifiedName());
      myTopLevelPackages.add(new CoverageListNode(aClass,bundle,myTopLevelPackages,myStateBean,myFilteredPackages,myFilteredClasses));
    }
  }
  for (  AbstractTreeNode abstractTreeNode : myTopLevelPackages) {
    abstractTreeNode.setParent(myRootNode);
  }
}
