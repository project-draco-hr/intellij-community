{
  final VirtualFile[] sourceDir=new VirtualFile[1];
  ApplicationManager.getApplication().runWriteAction(new Runnable(){
    @Override public void run(){
      try {
        setupRootModel(testDir,sourceDir,jdkName);
      }
 catch (      Exception e) {
        LOG.error(e);
      }
    }
  }
);
  VirtualFile projectDir=LocalFileSystem.getInstance().refreshAndFindFileByIoFile(new File(testDir));
  AnalysisScope scope=createAnalysisScope(sourceDir[0].equals(projectDir) ? projectDir : sourceDir[0].getParent());
  InspectionManagerEx inspectionManager=(InspectionManagerEx)InspectionManager.getInstance(getProject());
  InspectionToolWrapper[] toolWrappers=runDeadCodeFirst ? new InspectionToolWrapper[]{getUnusedDeclarationWrapper(),toolWrapper} : new InspectionToolWrapper[]{toolWrapper};
  toolWrappers=ArrayUtil.mergeArrays(toolWrappers,additional);
  final GlobalInspectionContextForTests globalContext=CodeInsightTestFixtureImpl.createGlobalContextForTool(scope,getProject(),inspectionManager,toolWrappers);
  InspectionTestUtil.runTool(toolWrapper,scope,globalContext);
  return globalContext;
}
