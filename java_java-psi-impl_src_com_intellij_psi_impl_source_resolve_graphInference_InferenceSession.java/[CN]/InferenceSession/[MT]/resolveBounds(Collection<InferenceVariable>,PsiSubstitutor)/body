{
  final Collection<InferenceVariable> allVars=new ArrayList<InferenceVariable>(inferenceVariables);
  while (!allVars.isEmpty()) {
    final List<InferenceVariable> vars=InferenceVariablesOrder.resolveOrder(allVars,this);
    List<InferenceVariable> unresolved=new ArrayList<InferenceVariable>();
    for (    InferenceVariable var : vars) {
      final PsiType eqBound=getEqualsBound(var,substitutor);
      if (eqBound == PsiType.NULL) {
        unresolved.add(var);
      }
    }
    if (!unresolved.isEmpty() && vars.size() > unresolved.size()) {
      vars.removeAll(unresolved);
      vars.addAll(unresolved);
    }
    if (!myIncorporationPhase.hasCaptureConstraints(unresolved)) {
      PsiSubstitutor firstSubstitutor=resolveSubset(vars,substitutor);
      if (hasBoundProblems(vars,firstSubstitutor)) {
        firstSubstitutor=null;
        unresolved=vars;
      }
      if (firstSubstitutor != null) {
        substitutor=firstSubstitutor;
        allVars.removeAll(vars);
        continue;
      }
    }
    if (!initFreshVariables(substitutor,unresolved)) {
      return;
    }
    myIncorporationPhase.forgetCaptures(vars);
    if (!repeatInferencePhases()) {
      return;
    }
  }
  if (myContext != null) {
    myContext.putUserData(ERASED,myErased);
  }
  final Map<PsiTypeParameter,PsiType> map=substitutor.getSubstitutionMap();
  for (  PsiTypeParameter parameter : map.keySet()) {
    final PsiType mapping=map.get(parameter);
    PsiTypeParameter param;
    if (parameter instanceof InferenceVariable) {
      ((InferenceVariable)parameter).setInstantiation(mapping);
      if (((InferenceVariable)parameter).getCallContext() != myContext) {
        continue;
      }
      param=((InferenceVariable)parameter).getParameter();
    }
 else {
      param=parameter;
    }
    mySiteSubstitutor=mySiteSubstitutor.put(param,mapping);
  }
}
