{
  if (!repeatInferencePhases()) {
    return;
  }
  if (properties != null && !properties.isApplicabilityCheck()) {
    initReturnTypeConstraint(properties.getMethod(),(PsiCall)parent);
    if (!repeatInferencePhases()) {
      return;
    }
    if (parameters != null && args != null && !isOverloadCheck()) {
      final Set<ConstraintFormula> additionalConstraints=new LinkedHashSet<ConstraintFormula>();
      final HashSet<ConstraintFormula> ignoredConstraints=new HashSet<ConstraintFormula>();
      if (parameters.length > 0) {
        collectAdditionalConstraints(parameters,args,properties.getMethod(),mySiteSubstitutor,additionalConstraints,ignoredConstraints,properties.isVarargs(),initialSubstitutor);
      }
      if (!additionalConstraints.isEmpty() && !proceedWithAdditionalConstraints(additionalConstraints,ignoredConstraints)) {
        return;
      }
    }
  }
  final PsiSubstitutor substitutor=resolveBounds(myInferenceVariables,initialSubstitutor);
  if (substitutor != null) {
    if (myContext != null) {
      myContext.putUserData(ERASED,myErased);
    }
    final Map<PsiTypeParameter,PsiType> map=substitutor.getSubstitutionMap();
    for (    PsiTypeParameter parameter : map.keySet()) {
      final PsiType mapping=map.get(parameter);
      PsiTypeParameter param;
      if (parameter instanceof InferenceVariable) {
        ((InferenceVariable)parameter).setInstantiation(mapping);
        if (((InferenceVariable)parameter).getCallContext() != myContext) {
          continue;
        }
        param=((InferenceVariable)parameter).getParameter();
      }
 else {
        param=parameter;
      }
      mySiteSubstitutor=mySiteSubstitutor.put(param,mapping);
    }
  }
}
