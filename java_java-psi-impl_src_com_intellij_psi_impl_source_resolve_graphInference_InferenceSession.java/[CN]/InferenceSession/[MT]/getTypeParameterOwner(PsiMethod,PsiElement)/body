{
  PsiTypeParameterListOwner owner=null;
  if (method.getTypeParameters().length > 0 && gParent instanceof PsiCallExpression && ((PsiCallExpression)gParent).getTypeArgumentList().getTypeParameterElements().length == 0) {
    owner=method;
  }
 else   if (method.isConstructor() && gParent instanceof PsiNewExpression) {
    final PsiClass containingClass=method.getContainingClass();
    if (containingClass != null && containingClass.hasTypeParameters()) {
      final PsiJavaCodeReferenceElement classReference=((PsiNewExpression)gParent).getClassOrAnonymousClassReference();
      if (classReference != null) {
        final PsiReferenceParameterList parameterList=classReference.getParameterList();
        if (parameterList != null) {
          final PsiTypeElement[] typeElements=parameterList.getTypeParameterElements();
          if (typeElements.length == 1 && typeElements[0].getType() instanceof PsiDiamondType) {
            owner=containingClass;
          }
        }
      }
    }
  }
  return owner;
}
