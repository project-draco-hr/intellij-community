{
  if (!repeatInferencePhases(true)) {
    return prepareSubstitution();
  }
  final Pair<PsiMethod,PsiCallExpression> pair=getPair(parent);
  if (pair != null) {
    initReturnTypeConstraint(pair.first,(PsiCallExpression)parent);
    if (!repeatInferencePhases(true)) {
      return prepareSubstitution();
    }
  }
  if (parameters != null && args != null && pair != null) {
    final Set<ConstraintFormula> additionalConstraints=new HashSet<ConstraintFormula>();
    if (parameters.length > 0) {
      for (int i=0; i < args.length; i++) {
        if (args[i] != null) {
          PsiType parameterType=getParameterType(parameters,args,i,mySiteSubstitutor);
          if (!isPertinentToApplicability(args[i],pair.first)) {
            additionalConstraints.add(new ExpressionCompatibilityConstraint(args[i],parameterType));
          }
          additionalConstraints.add(new CheckedExceptionCompatibilityConstraint(args[i],parameterType));
        }
      }
    }
    if (!additionalConstraints.isEmpty() && !proceedWithAdditionalConstraints(additionalConstraints)) {
      return resolveSubset(myInferenceVariables.values(),mySiteSubstitutor,false);
    }
  }
  final PsiSubstitutor substitutor=resolveBounds(myInferenceVariables.values(),mySiteSubstitutor);
  if (substitutor != null) {
    mySiteSubstitutor=substitutor;
    for (    PsiTypeParameter parameter : substitutor.getSubstitutionMap().keySet()) {
      final InferenceVariable variable=getInferenceVariable(parameter);
      if (variable != null) {
        variable.setInstantiation(substitutor.substitute(parameter));
      }
    }
  }
 else {
    return resolveSubset(myInferenceVariables.values(),mySiteSubstitutor,false);
  }
  return prepareSubstitution();
}
