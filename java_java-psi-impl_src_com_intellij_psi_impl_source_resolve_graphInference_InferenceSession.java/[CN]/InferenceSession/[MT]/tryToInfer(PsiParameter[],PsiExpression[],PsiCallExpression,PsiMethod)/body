{
  if (!repeatInferencePhases(true)) {
    return null;
  }
  if (parent != null) {
    initReturnTypeConstraint(parentMethod,parent);
    if (!repeatInferencePhases(true)) {
      return null;
    }
    if (parameters != null && args != null) {
      final Set<ConstraintFormula> additionalConstraints=new HashSet<ConstraintFormula>();
      if (parameters.length > 0) {
        for (int i=0; i < args.length; i++) {
          if (args[i] != null) {
            PsiType parameterType=getParameterType(parameters,args,i,mySiteSubstitutor);
            if (!isPertinentToApplicability(args[i],parentMethod)) {
              additionalConstraints.add(new ExpressionCompatibilityConstraint(args[i],parameterType));
            }
            additionalConstraints.add(new CheckedExceptionCompatibilityConstraint(args[i],parameterType));
          }
        }
      }
      if (!additionalConstraints.isEmpty() && !proceedWithAdditionalConstraints(additionalConstraints)) {
        return null;
      }
    }
  }
  return PsiSubstitutor.EMPTY;
}
