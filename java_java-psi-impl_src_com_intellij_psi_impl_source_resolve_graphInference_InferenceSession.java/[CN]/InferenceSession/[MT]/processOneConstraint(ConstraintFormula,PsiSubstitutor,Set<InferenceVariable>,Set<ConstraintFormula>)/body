{
  if (formula instanceof ExpressionCompatibilityConstraint) {
    final PsiExpression expression=((ExpressionCompatibilityConstraint)formula).getExpression();
    final PsiCall callExpression=PsiTreeUtil.getParentOfType(expression,PsiCall.class,false);
    if (callExpression != null) {
      final InferenceSession session=myInferenceSessionContainer.findNestedCallSession(callExpression,null);
      if (session != null) {
        formula.apply(session.myInferenceSubstitution,false);
        collectVarsToResolve(varsToResolve,(InputOutputConstraintFormula)formula);
      }
    }
  }
  PsiSubstitutor substitutor=resolveSubsetOrdered(varsToResolve,siteSubstitutor);
  if (myContext instanceof PsiCall) {
    PsiExpressionList argumentList=((PsiCall)myContext).getArgumentList();
    LOG.assertTrue(argumentList != null);
    MethodCandidateInfo.updateSubstitutor(argumentList,substitutor);
  }
  formula.apply(substitutor,true);
  addConstraint(formula);
  if (!repeatInferencePhases(true)) {
    return false;
  }
  if (formula instanceof ExpressionCompatibilityConstraint) {
    PsiExpression expression=((ExpressionCompatibilityConstraint)formula).getExpression();
    if (expression instanceof PsiLambdaExpression) {
      PsiType parameterType=((ExpressionCompatibilityConstraint)formula).getT();
      collectLambdaReturnExpression(additionalConstraints,(PsiLambdaExpression)expression,parameterType,!isProperType(parameterType));
    }
  }
  return true;
}
