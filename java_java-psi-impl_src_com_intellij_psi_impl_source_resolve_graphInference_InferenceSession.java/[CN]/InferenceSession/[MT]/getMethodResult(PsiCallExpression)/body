{
  final PsiExpressionList argumentList=callExpression.getArgumentList();
  final PsiLambdaExpression expression=PsiTreeUtil.getParentOfType(argumentList,PsiLambdaExpression.class);
  final Computable<JavaResolveResult> computableResolve=new Computable<JavaResolveResult>(){
    @Override public JavaResolveResult compute(){
      return callExpression.resolveMethodGenerics();
    }
  }
;
  MethodCandidateInfo.CurrentCandidateProperties properties=MethodCandidateInfo.getCurrentMethod(argumentList);
  return properties != null ? null : expression == null || !PsiResolveHelper.ourGraphGuard.currentStack().contains(expression) ? computableResolve.compute() : PsiResolveHelper.ourGraphGuard.doPreventingRecursion(expression,false,computableResolve);
}
