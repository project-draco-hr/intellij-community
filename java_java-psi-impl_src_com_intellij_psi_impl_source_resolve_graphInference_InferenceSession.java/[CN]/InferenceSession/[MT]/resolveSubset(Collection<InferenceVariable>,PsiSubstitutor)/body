{
  for (  InferenceVariable var : vars) {
    LOG.assertTrue(var.getInstantiation() == PsiType.NULL);
    final PsiTypeParameter typeParameter=var.getParameter();
    if (substitutor.putAll(mySiteSubstitutor).getSubstitutionMap().containsKey(typeParameter) && var.getCallContext() != myContext) {
      continue;
    }
    final PsiType eqBound=getEqualsBound(var,substitutor);
    if (eqBound != PsiType.NULL && eqBound instanceof PsiPrimitiveType)     continue;
    final PsiType lowerBound=getLowerBound(var,substitutor);
    final PsiType upperBound=getUpperBound(var,substitutor);
    PsiType type;
    if (eqBound != PsiType.NULL && (myErased || eqBound != null)) {
      if (lowerBound != PsiType.NULL && !TypeConversionUtil.isAssignable(eqBound,lowerBound)) {
        continue;
      }
 else {
        type=eqBound;
      }
    }
 else {
      type=lowerBound;
    }
    if (type == PsiType.NULL) {
      if (var.isThrownBound() && isThrowable(var.getBounds(InferenceBound.UPPER))) {
        type=PsiType.getJavaLangRuntimeException(myManager,GlobalSearchScope.allScope(myManager.getProject()));
      }
 else {
        if (substitutor.putAll(mySiteSubstitutor).getSubstitutionMap().get(typeParameter) != null)         continue;
        type=myErased ? null : upperBound;
      }
    }
    substitutor=substitutor.put(typeParameter,type);
  }
  return substitutor;
}
