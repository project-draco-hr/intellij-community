{
  if (parentMethod instanceof PsiMethod) {
    final PsiParameter[] parameters=((PsiMethod)parentMethod).getParameterList().getParameters();
    if (parameters.length == 0)     return null;
    final PsiExpression[] args=argumentList.getExpressions();
    if (!((PsiMethod)parentMethod).isVarArgs() && parameters.length != args.length)     return null;
    PsiElement arg=context;
    while (arg.getParent() instanceof PsiParenthesizedExpression) {
      arg=arg.getParent();
    }
    final int i=ArrayUtilRt.find(args,arg);
    if (i < 0)     return null;
    final PsiCallExpression callExpression=(PsiCallExpression)argumentList.getParent();
    if (callExpression.getTypeArguments().length > 0) {
      return getParameterType(parameters,args,i,((MethodCandidateInfo)result).typeArgumentsSubstitutor());
    }
    final PsiType parameterType=getParameterType(parameters,args,i,pair != null ? pair.second : PsiSubstitutor.EMPTY);
    args[i]=null;
    final PsiTypeParameter[] typeParameters=((PsiMethod)parentMethod).getTypeParameters();
    final InferenceSession session=new InferenceSession(typeParameters,((MethodCandidateInfo)result).getSiteSubstitutor(),myManager,argumentList);
    session.initExpressionConstraints(parameters,args,argumentList,(PsiMethod)parentMethod);
    if (session.tryToInfer(parameters,args,callExpression,(PsiMethod)parentMethod) != null) {
      return null;
    }
    final Collection<PsiTypeParameter> params=session.getTypeParams();
    initBounds(params.toArray(new PsiTypeParameter[params.size()]));
    liftBounds(session.getInferenceVariables());
    final PsiSubstitutor substitutor=((MethodCandidateInfo)result).getSiteSubstitutor();
    return substitutor.substitute(parameterType);
  }
  return null;
}
