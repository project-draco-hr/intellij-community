{
  for (int i=0; i < args.length; i++) {
    if (args[i] != null) {
      PsiType parameterType=getParameterType(parameters,args,i,mySiteSubstitutor);
      if (!isPertinentToApplicability(args[i],parentMethod)) {
        additionalConstraints.add(new ExpressionCompatibilityConstraint(args[i],parameterType));
      }
      additionalConstraints.add(new CheckedExceptionCompatibilityConstraint(args[i],parameterType));
      if (args[i] instanceof PsiCallExpression) {
        final PsiCallExpression callExpression=(PsiCallExpression)args[i];
        final PsiExpressionList argumentList=callExpression.getArgumentList();
        if (argumentList != null) {
          final PsiMethod method=callExpression.resolveMethod();
          if (method != null) {
            final PsiExpression[] newArgs=argumentList.getExpressions();
            final PsiParameter[] newParams=method.getParameterList().getParameters();
            collectAdditionalConstraints(newParams,newArgs,method,additionalConstraints);
          }
        }
      }
    }
  }
}
