{
  if (callExpression instanceof PsiNewExpression) {
    final PsiJavaCodeReferenceElement classReference=((PsiNewExpression)callExpression).getClassOrAnonymousClassReference();
    if (classReference != null) {
      return CachedValuesManager.getCachedValue(classReference,new CachedValueProvider<JavaResolveResult>(){
        @Nullable @Override public Result<JavaResolveResult> compute(){
          final JavaResolveResult resolveResult=classReference.advancedResolve(false);
          final PsiElement psiClass=resolveResult.getElement();
          JavaResolveResult constructor=JavaResolveResult.EMPTY;
          if (psiClass != null) {
            final JavaPsiFacade facade=JavaPsiFacade.getInstance(callExpression.getProject());
            constructor=facade.getResolveHelper().resolveConstructor(facade.getElementFactory().createType((PsiClass)psiClass).rawType(),argumentList,callExpression);
          }
          return new Result<JavaResolveResult>(constructor.getElement() == null ? resolveResult : constructor,PsiModificationTracker.MODIFICATION_COUNT);
        }
      }
);
    }
 else {
      return JavaResolveResult.EMPTY;
    }
  }
  return callExpression.resolveMethodGenerics();
}
