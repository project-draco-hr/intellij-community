{
  if (formula instanceof ExpressionCompatibilityConstraint) {
    final PsiExpression expression=((ExpressionCompatibilityConstraint)formula).getExpression();
    final PsiCallExpression callExpression=PsiTreeUtil.getParentOfType(expression,PsiCallExpression.class,false);
    if (callExpression != null) {
      final InferenceSession session=myNestedSessions.get(callExpression);
      if (session != null) {
        formula.apply(session.myInferenceSubstitution,true);
        collectVarsToResolve(varsToResolve,(InputOutputConstraintFormula)formula);
      }
    }
  }
  PsiSubstitutor substitutor=resolveSubset(varsToResolve,siteSubstitutor);
  if (substitutor == null) {
    return false;
  }
  if (myContext instanceof PsiCallExpression) {
    PsiExpressionList argumentList=((PsiCallExpression)myContext).getArgumentList();
    LOG.assertTrue(argumentList != null);
    MethodCandidateInfo.updateSubstitutor(argumentList,substitutor);
  }
  try {
    formula.apply(substitutor,true);
    myConstraints.add(formula);
    if (!repeatInferencePhases(true)) {
      return false;
    }
  }
  finally {
    LambdaUtil.ourFunctionTypes.set(null);
  }
  return true;
}
