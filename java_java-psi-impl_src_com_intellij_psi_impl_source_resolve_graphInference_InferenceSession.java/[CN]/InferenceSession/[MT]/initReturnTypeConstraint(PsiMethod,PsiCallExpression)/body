{
  if (PsiPolyExpressionUtil.isMethodCallPolyExpression(context,method) || context instanceof PsiNewExpression && PsiDiamondType.ourDiamondGuard.currentStack().contains(context)) {
    final PsiType returnType=method.getReturnType();
    if (!PsiType.VOID.equals(returnType) && returnType != null) {
      PsiType targetType=PsiTypesUtil.getExpectedTypeByParent(context);
      if (targetType == null) {
        targetType=PsiResolveHelper.ourGraphGuard.doPreventingRecursion(context,true,new Computable<PsiType>(){
          @Override public PsiType compute(){
            return getTargetType(context);
          }
        }
);
      }
      if (targetType != null) {
        myConstraints.add(new TypeCompatibilityConstraint(GenericsUtil.eliminateWildcards(targetType,false),PsiImplUtil.normalizeWildcardTypeByPosition(returnType,context)));
      }
    }
  }
}
