{
  if (PsiPolyExpressionUtil.isMethodCallPolyExpression(context,method) || context instanceof PsiNewExpression && PsiDiamondType.ourDiamondGuard.currentStack().contains(context)) {
    PsiType returnType=method.getReturnType();
    if (!PsiType.VOID.equals(returnType) && returnType != null) {
      returnType=PsiImplUtil.normalizeWildcardTypeByPosition(returnType,context);
      PsiType targetType=PsiTypesUtil.getExpectedTypeByParent(context);
      if (targetType == null) {
        final PsiType finalReturnType=returnType;
        targetType=PsiResolveHelper.ourGraphGuard.doPreventingRecursion(context,false,new Computable<PsiType>(){
          @Override public PsiType compute(){
            return getTargetType(context,finalReturnType);
          }
        }
);
      }
      if (targetType != null) {
        registerConstraints(returnType,targetType);
      }
    }
  }
  for (  PsiClassType thrownType : method.getThrowsList().getReferencedTypes()) {
    final InferenceVariable variable=getInferenceVariable(thrownType);
    if (variable != null) {
      variable.setThrownBound();
    }
  }
}
