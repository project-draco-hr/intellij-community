{
  if (PsiPolyExpressionUtil.isMethodCallPolyExpression(context,method)) {
    PsiType returnType=method.getReturnType();
    if (!PsiType.VOID.equals(returnType) && returnType != null) {
      PsiType targetType=getTargetType(context);
      if (targetType != null && !PsiType.VOID.equals(targetType)) {
        registerReturnTypeConstraints(PsiUtil.isRawSubstitutor(method,mySiteSubstitutor) ? returnType : mySiteSubstitutor.substitute(returnType),targetType);
      }
    }
  }
  for (  PsiClassType thrownType : method.getThrowsList().getReferencedTypes()) {
    final InferenceVariable variable=getInferenceVariable(substituteWithInferenceVariables(thrownType));
    if (variable != null) {
      variable.setThrownBound();
    }
  }
}
