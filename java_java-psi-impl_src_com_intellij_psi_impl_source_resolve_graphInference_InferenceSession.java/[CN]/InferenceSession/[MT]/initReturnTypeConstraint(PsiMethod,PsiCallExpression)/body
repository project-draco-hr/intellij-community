{
  if (PsiPolyExpressionUtil.isMethodCallPolyExpression(context,method)) {
    PsiType returnType=method.getReturnType();
    if (!PsiType.VOID.equals(returnType) && returnType != null) {
      returnType=PsiImplUtil.normalizeWildcardTypeByPosition(returnType,context);
      PsiType targetType=PsiTypesUtil.getExpectedTypeByParent(context);
      if (targetType == null) {
        targetType=getTargetType(context);
      }
      if (targetType != null) {
        registerConstraints(returnType,targetType);
      }
    }
  }
  for (  PsiClassType thrownType : method.getThrowsList().getReferencedTypes()) {
    final InferenceVariable variable=getInferenceVariable(thrownType);
    if (variable != null) {
      variable.setThrownBound();
    }
  }
}
