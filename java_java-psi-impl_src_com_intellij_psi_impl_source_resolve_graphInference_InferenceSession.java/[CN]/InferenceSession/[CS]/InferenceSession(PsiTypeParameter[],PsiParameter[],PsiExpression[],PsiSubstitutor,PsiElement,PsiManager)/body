{
  myManager=manager;
  mySiteSubstitutor=siteSubstitutor;
  initBounds(typeParams);
  if (parameters.length > 0) {
    for (int i=0; i < args.length; i++) {
      PsiType parameterType=mySiteSubstitutor.substitute(parameters[i < parameters.length ? i : parameters.length - 1].getType());
      if (parameterType instanceof PsiEllipsisType) {
        if (args.length != parameters.length || !(args[i].getType() instanceof PsiArrayType)) {
          parameterType=((PsiEllipsisType)parameterType).getComponentType();
        }
      }
      myConstraints.add(new ExpressionCompatibilityConstraint(args[i],parameterType));
    }
  }
  if (parent instanceof PsiCallExpression) {
    final Map<PsiElement,Pair<PsiMethod,PsiSubstitutor>> map=MethodCandidateInfo.CURRENT_CANDIDATE.get();
    if (map != null) {
      final Pair<PsiMethod,PsiSubstitutor> pair=map.get(parent);
      if (pair != null) {
        initReturnTypeConstraint(pair.first,(PsiCallExpression)parent);
      }
    }
  }
}
