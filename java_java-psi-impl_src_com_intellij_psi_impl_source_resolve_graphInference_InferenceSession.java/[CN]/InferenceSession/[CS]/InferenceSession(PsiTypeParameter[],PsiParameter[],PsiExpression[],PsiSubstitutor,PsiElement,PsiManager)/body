{
  myManager=manager;
  mySiteSubstitutor=siteSubstitutor;
  initBounds(typeParams);
  if (parameters.length > 0) {
    for (int i=0; i < args.length; i++) {
      PsiType parameterType=getParameterType(parameters,args,i,mySiteSubstitutor);
      if (args[i] != null) {
        myConstraints.add(new ExpressionCompatibilityConstraint(args[i],parameterType));
        myConstraints.add(new CheckedExceptionCompatibilityConstraint(args[i],parameterType));
      }
    }
  }
  if (parent instanceof PsiCallExpression) {
    final Map<PsiElement,Pair<PsiMethod,PsiSubstitutor>> map=MethodCandidateInfo.CURRENT_CANDIDATE.get();
    if (map != null) {
      final Pair<PsiMethod,PsiSubstitutor> pair=map.get(((PsiCallExpression)parent).getArgumentList());
      if (pair != null) {
        initReturnTypeConstraint(pair.first,(PsiCallExpression)parent);
      }
    }
  }
}
