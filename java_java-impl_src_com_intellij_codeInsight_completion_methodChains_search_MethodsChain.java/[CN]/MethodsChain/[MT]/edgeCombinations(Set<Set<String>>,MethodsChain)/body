{
  if (oldCombinations.isEmpty()) {
    final Set<Set<String>> result=new HashSet<Set<String>>(methodsChain.myRevertedPath.size());
    for (    final PsiMethod[] e : methodsChain.myRevertedPath) {
      final Set<String> set=new HashSet<String>();
      set.add(e[0].getName());
      result.add(set);
    }
    return result;
  }
 else {
    final Set<Set<String>> newTail=new HashSet<Set<String>>(oldCombinations.size() * methodsChain.size());
    for (    final PsiMethod[] e : methodsChain.myRevertedPath) {
      final String methodName=e[0].getName();
      for (      final Set<String> tailSet : oldCombinations) {
        final Set<String> newSet=new HashSet<String>(tailSet);
        newSet.add(methodName);
        if (!oldCombinations.contains(newSet)) {
          newTail.add(newSet);
        }
      }
    }
    return newTail;
  }
}
