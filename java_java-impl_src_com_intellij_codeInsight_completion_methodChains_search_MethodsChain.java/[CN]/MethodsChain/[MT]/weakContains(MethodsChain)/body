{
  if (otherChain.myRevertedPath.isEmpty()) {
    return true;
  }
  if (myRevertedPath.isEmpty()) {
    return false;
  }
  final Iterator<PsiMethod[]> otherChainIterator=otherChain.myRevertedPath.iterator();
  String otherChainCurrentName=otherChainIterator.next()[0].getName();
  boolean checkingStarted=false;
  for (  final PsiMethod[] methods : myRevertedPath) {
    final String thisCurrentName=methods[0].getName();
    if (!checkingStarted && thisCurrentName.equals(otherChainCurrentName)) {
      checkingStarted=true;
    }
    if (checkingStarted) {
      if (otherChainIterator.hasNext()) {
        otherChainCurrentName=otherChainIterator.next()[0].getName();
        if (!otherChainCurrentName.equals(thisCurrentName)) {
          return false;
        }
      }
 else {
        return false;
      }
    }
  }
  return !otherChainIterator.hasNext();
}
