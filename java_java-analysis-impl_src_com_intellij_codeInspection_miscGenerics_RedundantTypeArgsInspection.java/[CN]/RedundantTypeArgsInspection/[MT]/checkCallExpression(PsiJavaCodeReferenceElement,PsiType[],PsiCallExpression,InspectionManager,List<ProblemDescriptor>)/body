{
  PsiExpressionList argumentList=expression.getArgumentList();
  if (argumentList == null)   return;
  final JavaResolveResult resolveResult=reference.advancedResolve(false);
  final PsiElement element=resolveResult.getElement();
  if (element instanceof PsiMethod && resolveResult.isValidResult()) {
    PsiMethod method=(PsiMethod)element;
    final PsiTypeParameter[] typeParameters=method.getTypeParameters();
    if (typeParameters.length == typeArguments.length) {
      if (PsiDiamondTypeUtil.areTypeArgumentsRedundant(typeArguments,expression,false,method,typeParameters)) {
        final ProblemDescriptor descriptor=inspectionManager.createProblemDescriptor(expression.getTypeArgumentList(),InspectionsBundle.message("inspection.redundant.type.problem.descriptor"),ourQuickFixAction,ProblemHighlightType.LIKE_UNUSED_SYMBOL,false);
        problems.add(descriptor);
      }
    }
  }
}
