{
  MultiMap<DependencyConflictId,MavenDomDependency> allDuplicates=getDuplicateDependenciesMap(projectModel);
  for (  MavenDomDependency dependency : projectModel.getDependencies().getDependencies()) {
    DependencyConflictId id=DependencyConflictId.create(dependency);
    if (id != null) {
      Collection<MavenDomDependency> dependencies=allDuplicates.get(id);
      if (dependencies.size() > 1) {
        List<MavenDomDependency> duplicatedDependencies=new ArrayList<>();
        for (        MavenDomDependency d : dependencies) {
          if (d == dependency)           continue;
          if (d.getParent() == dependency.getParent()) {
            duplicatedDependencies.add(d);
          }
 else {
            if (scope(d).equals(scope(dependency)) && Comparing.equal(d.getVersion().getStringValue(),dependency.getVersion().getStringValue())) {
              duplicatedDependencies.add(d);
            }
          }
        }
        if (duplicatedDependencies.size() > 0) {
          addProblem(dependency,duplicatedDependencies,holder);
        }
      }
    }
  }
}
