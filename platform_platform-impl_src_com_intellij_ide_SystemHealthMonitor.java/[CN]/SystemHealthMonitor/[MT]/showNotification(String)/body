{
  final String ignoreKey="ignore." + key;
  if (myProperties.isValueSet(ignoreKey)) {
    return;
  }
  final String message=IdeBundle.message(key) + IdeBundle.message("sys.health.acknowledge.link");
  final Application app=ApplicationManager.getApplication();
  app.getMessageBus().connect(app).subscribe(AppLifecycleListener.TOPIC,new AppLifecycleListener.Adapter(){
    @Override public void appFrameCreated(    String[] commandLineArgs,    @NotNull Ref<Boolean> willOpenProject){
      app.invokeLater(new Runnable(){
        @Override public void run(){
          JComponent component=WindowManager.getInstance().findVisibleFrame().getRootPane();
          if (component != null) {
            Rectangle rect=component.getVisibleRect();
            JBPopupFactory.getInstance().createHtmlTextBalloonBuilder(message,MessageType.WARNING,new HyperlinkAdapter(){
              @Override protected void hyperlinkActivated(              HyperlinkEvent e){
                String url=e.getDescription();
                if ("ack".equals(url)) {
                  myProperties.setValue(ignoreKey,"true");
                }
 else {
                  BrowserUtil.browse(url);
                }
              }
            }
).setFadeoutTime(-1).setHideOnFrameResize(false).setHideOnLinkClick(true).setDisposable(app).createBalloon().show(new RelativePoint(component,new Point(rect.x + 30,rect.y + rect.height - 10)),Balloon.Position.above);
          }
          Notification notification=LOG_GROUP.createNotification(message,NotificationType.WARNING);
          notification.setImportant(true);
          Notifications.Bus.notify(notification);
        }
      }
);
    }
  }
);
}
