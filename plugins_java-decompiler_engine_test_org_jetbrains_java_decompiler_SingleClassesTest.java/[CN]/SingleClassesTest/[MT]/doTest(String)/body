{
  try {
    File classFile=new File(fixture.getTestDataDir(),"/classes/pkg/" + testName + ".class");
    assertTrue(classFile.isFile());
    ConsoleDecompiler decompiler=fixture.getDecompiler();
    decompiler.addSpace(classFile,true);
    File[] innerClasses=classFile.getParentFile().listFiles(new FilenameFilter(){
      @Override public boolean accept(      File dir,      String name){
        return name.matches(testName + "\\$.+\\.class");
      }
    }
);
    for (    File inner : innerClasses) {
      decompiler.addSpace(inner,true);
    }
    decompiler.decompileContext();
    File decompiledFile=new File(fixture.getTargetDir(),testName + ".java");
    assertTrue(decompiledFile.isFile());
    File referenceFile=new File(fixture.getTestDataDir(),"results/" + testName + ".dec");
    assertTrue(referenceFile.isFile());
    String decompiledContent=getContent(decompiledFile);
    String referenceContent=getContent(referenceFile);
    assertEquals(referenceContent,decompiledContent);
  }
 catch (  Exception e) {
    throw new RuntimeException(e);
  }
}
