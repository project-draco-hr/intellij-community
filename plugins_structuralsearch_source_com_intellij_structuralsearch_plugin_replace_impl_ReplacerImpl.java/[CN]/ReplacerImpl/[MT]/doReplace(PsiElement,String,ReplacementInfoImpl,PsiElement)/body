{
  PsiManager.getInstance(project).performActionWithFormatterDisabled(new Runnable(){
    public void run(){
      doReplacement(info,elementToReplace,replacementToMake,elementParent);
    }
  }
);
  try {
    CodeStyleManager codeStyleManager=PsiManager.getInstance(project).getCodeStyleManager();
    final PsiFile containingFile=elementParent.getContainingFile();
    if (containingFile != null) {
      if (options.isToShortenFQN()) {
        if (containingFile.getVirtualFile() != null) {
          PsiDocumentManager.getInstance(project).commitDocument(FileDocumentManager.getInstance().getDocument(containingFile.getVirtualFile()));
        }
        final int paretOffset=elementParent.getTextRange().getStartOffset();
        codeStyleManager.shortenClassReferences(containingFile,paretOffset,paretOffset + elementParent.getTextLength());
      }
      if (options.isToReformatAccordingToStyle()) {
        if (containingFile.getVirtualFile() != null) {
          PsiDocumentManager.getInstance(project).commitDocument(FileDocumentManager.getInstance().getDocument(containingFile.getVirtualFile()));
        }
        final int paretOffset=elementParent.getTextRange().getStartOffset();
        codeStyleManager.reformatRange(containingFile,paretOffset,paretOffset + elementParent.getTextLength(),true);
      }
    }
  }
 catch (  IncorrectOperationException ex) {
    ex.printStackTrace();
  }
}
