{
  ReplacementInfoImpl replacementInfo=context.replacementInfo;
  if (replacementInfo.elementToVariableNameMap == null) {
    replacementInfo.elementToVariableNameMap=new HashMap<PsiElement,String>(1);
    Map<String,MatchResult> variableMap=replacementInfo.variableMap;
    if (variableMap != null) {
      for (      String name : variableMap.keySet()) {
        fill(name,replacementInfo.variableMap.get(name),replacementInfo.elementToVariableNameMap);
      }
    }
  }
  PsiElement lastChild=el.getLastChild();
  if (lastChild instanceof PsiComment && replacementInfo.elementToVariableNameMap.get(lastChild) == null) {
    PsiElement firstElementAfterStatementEnd=lastChild;
    for (PsiElement curElement=firstElementAfterStatementEnd.getPrevSibling(); curElement != null; curElement=curElement.getPrevSibling()) {
      if (!(curElement instanceof PsiWhiteSpace) && !(curElement instanceof PsiComment))       break;
      firstElementAfterStatementEnd=curElement;
    }
    replacement.addRangeAfter(firstElementAfterStatementEnd,lastChild,replacement.getLastChild());
  }
  final PsiElement firstChild=el.getFirstChild();
  if (firstChild instanceof PsiComment && !(firstChild instanceof PsiDocComment) && replacementInfo.elementToVariableNameMap.get(firstChild) == null) {
    PsiElement lastElementBeforeStatementStart=firstChild;
    for (PsiElement curElement=lastElementBeforeStatementStart.getNextSibling(); curElement != null; curElement=curElement.getNextSibling()) {
      if (!(curElement instanceof PsiWhiteSpace) && !(curElement instanceof PsiComment))       break;
      lastElementBeforeStatementStart=curElement;
    }
    replacement.addRangeBefore(firstChild,lastElementBeforeStatementStart,replacement.getFirstChild());
  }
}
