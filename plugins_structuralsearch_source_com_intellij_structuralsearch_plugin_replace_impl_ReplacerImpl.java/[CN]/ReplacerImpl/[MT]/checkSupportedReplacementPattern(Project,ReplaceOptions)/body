{
  try {
    String search=options.getMatchOptions().getSearchPattern();
    String replacement=options.getReplacement();
    FileType fileType=options.getMatchOptions().getFileType();
    Template template=TemplateManager.getInstance(project).createTemplate("","",search);
    Template template2=TemplateManager.getInstance(project).createTemplate("","",replacement);
    int segmentCount=template2.getSegmentsCount();
    for (int i=0; i < segmentCount; ++i) {
      final String replacementSegmentName=template2.getSegmentName(i);
      final int segmentCount2=template.getSegmentsCount();
      int j;
      for (j=0; j < segmentCount2; ++j) {
        final String searchSegmentName=template.getSegmentName(j);
        if (replacementSegmentName.equals(searchSegmentName))         break;
        if (replacementSegmentName.startsWith(searchSegmentName) && replacementSegmentName.charAt(searchSegmentName.length()) == '_') {
          try {
            Integer.parseInt(replacementSegmentName.substring(searchSegmentName.length() + 1));
            break;
          }
 catch (          NumberFormatException ex) {
          }
        }
      }
      if (j == segmentCount2) {
        ReplacementVariableDefinition definition=options.getVariableDefinition(replacementSegmentName);
        if (definition == null || definition.getScriptCodeConstraint().length() <= 2) {
          throw new UnsupportedPatternException(SSRBundle.message("replacement.variable.is.not.defined.message",replacementSegmentName));
        }
 else {
          String message=ScriptSupport.checkValidScript(StringUtil.stripQuotesAroundValue(definition.getScriptCodeConstraint()));
          if (message != null) {
            throw new UnsupportedPatternException(SSRBundle.message("replacement.variable.is.not.valid",replacementSegmentName,message));
          }
        }
      }
    }
    StructuralSearchProfile profile=StructuralSearchUtil.getProfileByFileType(fileType);
    profile.checkReplacementPattern(project,options);
  }
 catch (  IncorrectOperationException ex) {
    throw new UnsupportedPatternException(SSRBundle.message("incorrect.pattern.message"));
  }
}
