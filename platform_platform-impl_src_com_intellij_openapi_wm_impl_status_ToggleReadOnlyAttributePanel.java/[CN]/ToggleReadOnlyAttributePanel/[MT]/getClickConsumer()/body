{
  return new Consumer<MouseEvent>(){
    public void consume(    MouseEvent mouseEvent){
      final VirtualFile file=getCurrentFile();
      if (!isReadOnlyApplicableForFile(file)) {
        return;
      }
      FileDocumentManager.getInstance().saveAllDocuments();
      ApplicationManager.getApplication().runWriteAction(new Runnable(){
        public void run(){
          try {
            ReadOnlyAttributeUtil.setReadOnlyAttribute(file,file.isWritable());
            myStatusBar.updateWidget(ID());
          }
 catch (          IOException e) {
            Messages.showMessageDialog(getProject(),e.getMessage(),UIBundle.message("error.dialog.title"),Messages.getErrorIcon());
          }
        }
      }
);
    }
  }
;
}
