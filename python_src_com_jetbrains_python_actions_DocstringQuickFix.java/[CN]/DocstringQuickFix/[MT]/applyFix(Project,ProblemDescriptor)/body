{
  PyDocStringOwner docStringOwner=PsiTreeUtil.getParentOfType(descriptor.getPsiElement(),PyDocStringOwner.class);
  if (docStringOwner == null)   return;
  PyStringLiteralExpression element=docStringOwner.getDocStringExpression();
  if (element == null)   return;
  PyElementGenerator elementGenerator=PyElementGenerator.getInstance(project);
  PyDocumentationSettings documentationSettings=PyDocumentationSettings.getInstance(element.getProject());
  if (documentationSettings.isEpydocFormat(element.getContainingFile()))   myPrefix="@";
 else   myPrefix=":";
  String replacement=element.getText();
  if (myMissing != null) {
    replacement=createMissingReplacement(element);
  }
  if (myUnexpected != null) {
    replacement=createUnexpectedReplacement(replacement);
  }
  if (!replacement.equals(element.getText())) {
    PyExpression str=elementGenerator.createDocstring(replacement).getExpression();
    element.replace(str);
  }
}
