{
  PyDocStringOwner docStringOwner=PsiTreeUtil.getParentOfType(descriptor.getPsiElement(),PyDocStringOwner.class);
  if (docStringOwner == null)   return;
  PyStringLiteralExpression docStringExpression=docStringOwner.getDocStringExpression();
  if (docStringExpression == null && myMissing == null && myUnexpected == null) {
    if (docStringOwner instanceof PyFunction) {
      PythonDocumentationProvider.inserDocStub((PyFunction)docStringOwner,project,getEditor(project,docStringOwner.getContainingFile()));
    }
    if (docStringOwner instanceof PyClass) {
      PyFunction init=((PyClass)docStringOwner).findInitOrNew(false);
      if (init == null)       return;
      PythonDocumentationProvider.inserDocStub(init,((PyClass)docStringOwner).getStatementList(),project,getEditor(project,docStringOwner.getContainingFile()));
    }
    return;
  }
  if (docStringExpression == null)   return;
  PyElementGenerator elementGenerator=PyElementGenerator.getInstance(project);
  PyDocumentationSettings documentationSettings=PyDocumentationSettings.getInstance(project);
  if (documentationSettings.isEpydocFormat(docStringExpression.getContainingFile())) {
    myPrefix="@";
  }
 else {
    myPrefix=":";
  }
  String replacement=docStringExpression.getText();
  if (myMissing != null) {
    replacement=createMissingReplacement(docStringOwner);
  }
  if (myUnexpected != null) {
    replacement=createUnexpectedReplacement(replacement);
  }
  if (!replacement.equals(docStringExpression.getText())) {
    PyExpression str=elementGenerator.createDocstring(replacement).getExpression();
    docStringExpression.replace(str);
  }
}
