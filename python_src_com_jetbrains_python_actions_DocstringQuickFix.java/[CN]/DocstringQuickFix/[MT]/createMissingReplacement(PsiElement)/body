{
  String text=element.getText();
  String[] lines=LineTokenizer.tokenize(text,true);
  StringBuilder newText=new StringBuilder();
  int ind=lines.length - 1;
  for (int i=0; i != lines.length - 1; ++i) {
    String line=lines[i];
    if (line.contains(myPrefix)) {
      ind=i;
      break;
    }
    newText.append(line);
  }
  PyFunction fun=PsiTreeUtil.getParentOfType(element,PyFunction.class);
  PsiWhiteSpace whitespace=PsiTreeUtil.getPrevSiblingOfType(fun.getStatementList(),PsiWhiteSpace.class);
  String ws="\n";
  if (whitespace != null) {
    String[] spaces=whitespace.getText().split("\n");
    if (spaces.length > 1)     ws=ws + whitespace.getText().split("\n")[1];
  }
  newText.deleteCharAt(newText.length() - 1);
  newText.append(ws);
  for (int i=0; i != myMissing.size(); ++i) {
    String s=myMissing.get(i);
    newText.append(myPrefix).append("param ").append(s).append(": ");
    if (i != myMissing.size() - 1)     newText.append(ws);
  }
  newText.append("\n");
  for (int i=ind; i != lines.length; ++i) {
    String line=lines[i];
    newText.append(line);
  }
  return newText.toString();
}
