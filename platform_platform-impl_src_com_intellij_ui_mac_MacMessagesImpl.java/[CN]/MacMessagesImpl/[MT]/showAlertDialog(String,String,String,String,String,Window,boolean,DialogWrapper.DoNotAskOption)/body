{
  Window documentRoot=getDocumetnRootFromWindow(window);
  String documentRootTitle=getdocumentRootTitle(documentRoot);
  final ID focusedWindow=MacUtil.findWindowForTitle(documentRootTitle);
  ID pool=invoke("NSAutoreleasePool","new");
  try {
    final ID delegate=invoke(Foundation.getObjcClass("NSAlertDelegate_"),"new");
    cfRetain(delegate);
    final ID paramsArray=invoke("NSArray","arrayWithObjects:",nsString(title),nsString(UIUtil.removeMnemonic(defaultText)),nsString(otherText == null ? "-1" : UIUtil.removeMnemonic(otherText)),nsString(alternateText == null ? "-1" : UIUtil.removeMnemonic(alternateText)),nsString(StringUtil.stripHtml(message == null ? "" : message,true).replace("%","%%")),focusedWindow,nsString(""),nsString(errorStyle ? "error" : "-1"),nsString(doNotAskDialogOption == null || !doNotAskDialogOption.canBeHidden() ? "-1" : doNotAskDialogOption.getDoNotShowMessage()),nsString(doNotAskDialogOption != null && !doNotAskDialogOption.isToBeShown() ? "checked" : "-1"),null);
    IdeFocusManager.getGlobalInstance().setTypeaheadEnabled(false);
    runOrPostponeForWindow(documentRoot,new Runnable(){
      @Override public void run(){
        invoke(delegate,"performSelectorOnMainThread:withObject:waitUntilDone:",Foundation.createSelector("showSheet:"),paramsArray,false);
      }
    }
);
    startModal(documentRoot,focusedWindow);
    IdeFocusManager.getGlobalInstance().setTypeaheadEnabled(true);
  }
  finally {
    invoke(pool,"release");
  }
  return convertRetunCodeFromNativeAlertDialog(documentRoot,alternateText);
}
