{
  if (builder.getTargetTypes().contains(target.getTargetType())) {
    DirtyFilesHolder<R,T> holder=new DirtyFilesHolderBase<R,T>(context){
      @Override public void processDirtyFiles(      @NotNull FileProcessor<R,T> processor) throws IOException {
        context.getProjectDescriptor().fsState.processFilesToRecompile(context,target,processor);
      }
    }
;
    BuildOutputConsumerImpl outputConsumer=new BuildOutputConsumerImpl(target,context);
    long start=System.nanoTime();
    ((TargetBuilder<R,T>)builder).build(target,holder,outputConsumer,context);
    incBuilderElapsedTime(builder,System.nanoTime() - start);
    outputConsumer.fireFileGeneratedEvent();
    context.checkCanceled();
  }
}
