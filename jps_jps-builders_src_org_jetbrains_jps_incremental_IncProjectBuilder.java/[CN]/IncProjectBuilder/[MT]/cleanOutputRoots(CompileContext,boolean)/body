{
  final ProjectDescriptor projectDescriptor=context.getProjectDescriptor();
  ProjectBuildException ex=null;
  try {
    final JpsJavaCompilerConfiguration configuration=JpsJavaExtensionService.getInstance().getOrCreateCompilerConfiguration(projectDescriptor.getProject());
    final boolean shouldClear=configuration.isClearOutputDirectoryOnRebuild();
    if (shouldClear) {
      clearOutputs(context);
    }
 else {
      for (      BuildTarget<?> target : projectDescriptor.getBuildTargetIndex().getAllTargets()) {
        context.checkCanceled();
        if (context.getScope().isBuildForced(target)) {
          clearOutputFilesUninterruptibly(context,target);
        }
      }
    }
  }
 catch (  ProjectBuildException e) {
    ex=e;
  }
 finally {
    if (cleanCaches) {
      try {
        projectDescriptor.timestamps.getStorage().clean();
      }
 catch (      IOException e) {
        if (ex == null) {
          ex=new ProjectBuildException("Error cleaning timestamps storage",e);
        }
 else {
          LOG.info("Error cleaning timestamps storage",e);
        }
      }
 finally {
        try {
          projectDescriptor.dataManager.clean();
        }
 catch (        IOException e) {
          if (ex == null) {
            ex=new ProjectBuildException("Error cleaning compiler storages",e);
          }
 else {
            LOG.info("Error cleaning compiler storages",e);
          }
        }
 finally {
          projectDescriptor.fsState.clearAll();
          if (ex != null) {
            throw ex;
          }
        }
      }
    }
  }
}
