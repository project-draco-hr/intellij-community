{
  final PsiElement element=descriptor.getPsiElement();
  final PsiElementFactory factory=JavaPsiFacade.getInstance(project).getElementFactory();
  final PsiElement newElement;
  if (element instanceof PsiTypeElement) {
    final String canonicalText=((PsiTypeElement)element).getType().getCanonicalText();
    final String type=canonicalText.substring(canonicalText.indexOf('<') + 1,canonicalText.indexOf(','));
    final PsiTypeElement newType=factory.createTypeElementFromText(COUPLE_FQN + "<" + type+ ">",element.getContext());
    newElement=element.replace(newType);
  }
 else {
    final String text=COUPLE_FQN + ".newOne" + element.getText().substring("Pair.create".length());
    final PsiExpression expression=factory.createExpressionFromText(text,element.getContext());
    newElement=element.replace(expression);
  }
  JavaCodeStyleManager.getInstance(project).shortenClassReferences(newElement);
}
