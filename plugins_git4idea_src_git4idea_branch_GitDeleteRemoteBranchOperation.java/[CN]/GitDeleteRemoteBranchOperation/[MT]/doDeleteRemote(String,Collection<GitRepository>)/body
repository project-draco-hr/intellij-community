{
  Couple<String> pair=splitNameOfRemoteBranch(branchName);
  String remoteName=pair.getFirst();
  String branch=pair.getSecond();
  GitCompoundResult result=new GitCompoundResult(myProject);
  for (  GitRepository repository : repositories) {
    GitCommandResult res;
    GitRemote remote=getRemoteByName(repository,remoteName);
    if (remote == null) {
      String error="Couldn't find remote by name: " + remoteName;
      LOG.error(error);
      res=GitCommandResult.error(error);
    }
 else {
      res=pushDeletion(repository,remote,branch);
      if (!res.success() && isAlreadyDeletedError(res.getErrorOutputAsJoinedString())) {
        res=myGit.remotePrune(repository,remote);
      }
    }
    result.append(repository,res);
    repository.update();
  }
  if (!result.totalSuccess()) {
    VcsNotifier.getInstance(myProject).notifyError("Failed to delete remote branch " + branchName,result.getErrorOutputWithReposIndication());
  }
  return result.totalSuccess();
}
