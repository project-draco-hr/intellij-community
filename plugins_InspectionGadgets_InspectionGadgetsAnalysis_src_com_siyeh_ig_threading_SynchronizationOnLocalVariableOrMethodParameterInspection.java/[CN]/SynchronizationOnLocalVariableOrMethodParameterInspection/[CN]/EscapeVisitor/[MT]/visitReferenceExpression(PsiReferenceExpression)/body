{
  if (escaping) {
    return;
  }
  super.visitReferenceExpression(expression);
  final PsiElement target=expression.resolve();
  if (!myVariable.equals(target)) {
    return;
  }
  final PsiElement context=PsiTreeUtil.getParentOfType(expression,PsiMember.class,PsiLambdaExpression.class);
  if (context != null && PsiTreeUtil.isAncestor(myContext,context,true)) {
    escaping=true;
  }
}
