{
  configureByText(StdFileTypes.JAVA,"class S { void ffffff() {fff<caret>fff();}}");
  List<HighlightInfo> infos=highlightErrors();
  assertEmpty(infos);
  MarkupModel markup=DocumentMarkupModel.forDocument(myEditor.getDocument(),getProject(),true);
  final TextRange[] highlightersBefore=getHighlightersTextRange(markup);
  type("%%%%");
  highlightErrors();
  backspace();
  backspace();
  backspace();
  backspace();
  infos=highlightErrors();
  assertEmpty(infos);
  final TextRange[] highlightersAfter=getHighlightersTextRange(markup);
  assertEquals(highlightersBefore.length,highlightersAfter.length);
  for (int i=0; i < highlightersBefore.length; i++) {
    TextRange before=highlightersBefore[i];
    TextRange after=highlightersAfter[i];
    assertEquals(before.getStartOffset(),after.getStartOffset());
    assertEquals(before.getEndOffset(),after.getEndOffset());
  }
}
