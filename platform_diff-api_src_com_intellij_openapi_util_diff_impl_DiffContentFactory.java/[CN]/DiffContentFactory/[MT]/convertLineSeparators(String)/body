{
  StringBuilder builder=null;
  char prev=' ';
  int crCount=0;
  int lfCount=0;
  int crlfCount=0;
  final int length=text.length();
  for (int src=0; src < length; src++) {
    char c=text.charAt(src);
switch (c) {
case '\r':
      if (builder == null) {
        builder=new StringBuilder(text.length());
        builder.append(text,0,src);
      }
    builder.append('\n');
  crCount++;
break;
case '\n':
if (prev == '\r') {
crCount--;
crlfCount++;
}
 else {
if (builder != null) builder.append('\n');
lfCount++;
}
break;
default :
if (builder != null) builder.append(c);
break;
}
prev=c;
}
LineSeparator separator;
if (crCount == 0 && lfCount == 0 && crlfCount == 0) {
separator=null;
}
 else if (lfCount == 0 && crlfCount == 0) {
separator=LineSeparator.CR;
}
 else if (crCount == 0 && crlfCount == 0) {
separator=LineSeparator.LF;
}
 else if (crCount == 0 && lfCount == 0) {
separator=LineSeparator.CRLF;
}
 else if (crlfCount > crCount && crlfCount > lfCount) {
separator=LineSeparator.CRLF;
}
 else if (crCount > lfCount) {
separator=LineSeparator.CR;
}
 else if (lfCount > 0) {
separator=LineSeparator.LF;
}
 else {
separator=null;
}
String result=builder == null ? text : builder.toString();
return Pair.create(result,separator);
}
