{
  final Project project=viewer.getProject();
  if (project == null)   return;
  final ContentDiffRequest request=viewer.getRequest();
  AnnotationData data=getDataFromCache(request,side);
  if (data != null) {
    annotator.showAnnotation(viewer,side,data);
    return;
  }
  final FileAnnotationLoader loader=createAnnotationsLoader(project,request,side);
  if (loader == null)   return;
  final DiffContextEx diffContext=ObjectUtils.tryCast(viewer.getContext(),DiffContextEx.class);
  getBackgroundableLock(viewer,side).lock();
  if (diffContext != null)   diffContext.showProgressBar(true);
  BackgroundTaskUtil.executeOnPooledThread(new Consumer<ProgressIndicator>(){
    @Override public void consume(    ProgressIndicator indicator){
      try {
        loader.run();
      }
  finally {
        ApplicationManager.getApplication().invokeLater(new Runnable(){
          @Override public void run(){
            if (diffContext != null)             diffContext.showProgressBar(false);
            getBackgroundableLock(viewer,side).unlock();
            VcsException exception=loader.getException();
            if (exception != null) {
              Notification notification=VcsNotifier.IMPORTANT_ERROR_NOTIFICATION.createNotification("Can't Load Annotations",exception.getMessage(),NotificationType.ERROR,null);
              showNotification(viewer,notification);
              LOG.warn(exception);
              return;
            }
            if (loader.getResult() == null)             return;
            if (loader.shouldCache()) {
              putDataToCache(request,side,loader.getResult());
            }
            if (viewer.isDisposed())             return;
            annotator.showAnnotation(viewer,side,loader.getResult());
          }
        }
,indicator.getModalityState());
      }
    }
  }
,viewer);
}
