{
  final ProcessBuilder builder=new ProcessBuilder().command(params);
  builder.directory(workingDir);
  builder.redirectErrorStream(true);
  Process clientProcess;
  try {
    clientProcess=builder.start();
  }
 catch (  IOException e) {
    throw new RuntimeException(e);
  }
  String commandLine=StringUtil.join(params," ");
  CapturingProcessHandler handler=new CapturingProcessHandler(clientProcess,CharsetToolkit.getDefaultSystemCharset(),commandLine);
  ProcessOutput result=handler.runProcess(30 * 1000);
  if (result.isTimeout()) {
    throw new RuntimeException("Timeout waiting for the command execution. Command: " + commandLine);
  }
  String stdout=result.getStdout().trim();
  if (result.getExitCode() != 0) {
    if (ignoreNonZeroExitCode) {
      debug("{" + result.getExitCode() + "}");
    }
    debug(stdout);
    if (!ignoreNonZeroExitCode) {
      throw new ExecutionException(result.getExitCode(),stdout);
    }
  }
 else {
    debug(stdout);
  }
  return stdout;
}
