{
  if (myReusePreviousGitOutput && ourPreviousOutput != null) {
    return ourPreviousOutput;
  }
  statusUpdater.execute("Loading Git history...");
  progressUpdater=new Executor<Integer>(){
    @Override public void execute(    Integer key){
      statusUpdater.execute("Reading " + key + " commits...");
    }
  }
;
  List<TimestampCommitParents> commitParentsList=nextBlock();
  TimestampCommitParents lastCommit=commitParentsList.get(commitParentsList.size() - 1);
  lastTimeStamp=lastCommit.getTimestamp();
  if (commitParentsList.size() == COMMIT_BLOCK_SIZE) {
    removeElementsWithLastTimeStamp(commitParentsList);
  }
 else {
    lastTimeStamp++;
  }
  List<CommitParents> commitParentses=Collections.<CommitParents>unmodifiableList(commitParentsList);
  ourPreviousOutput=commitParentses;
  return commitParentses;
}
