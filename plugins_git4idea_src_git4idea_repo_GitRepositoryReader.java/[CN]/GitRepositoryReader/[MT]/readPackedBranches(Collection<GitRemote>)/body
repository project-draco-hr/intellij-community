{
  final Set<GitLocalBranch> localBranches=new HashSet<GitLocalBranch>();
  final Set<GitRemoteBranch> remoteBranches=new HashSet<GitRemoteBranch>();
  if (!myPackedRefsFile.exists()) {
    return GitBranchesCollection.EMPTY;
  }
  readPackedRefsFile(new PackedRefsLineResultHandler(){
    @Override public void handleResult(    @Nullable String hashString,    @Nullable String branchName){
      if (hashString == null || branchName == null) {
        return;
      }
      hashString=shortBuffer(hashString);
      Hash hash=createHash(hashString);
      if (hash == null) {
        return;
      }
      if (branchName.startsWith(REFS_HEADS_PREFIX)) {
        localBranches.add(new GitLocalBranch(branchName,hash));
      }
 else       if (branchName.startsWith(REFS_REMOTES_PREFIX)) {
        GitRemoteBranch remoteBranch=GitBranchUtil.parseRemoteBranch(branchName,hash,remotes);
        if (remoteBranch != null) {
          remoteBranches.add(remoteBranch);
        }
      }
    }
  }
);
  return new GitBranchesCollection(localBranches,remoteBranches);
}
