{
  String headContent;
  try {
    headContent=DvcsUtil.tryLoadFile(headFile,CharsetToolkit.UTF8);
  }
 catch (  RepoStateException e) {
    LOG.error(e);
    return new HeadInfo(false,null);
  }
  Hash hash=parseHash(headContent);
  if (hash != null) {
    if (alreadyVisited.isEmpty()) {
      return new HeadInfo(false,headContent);
    }
 else {
      return new HeadInfo(true,ContainerUtil.getLastItem(alreadyVisited));
    }
  }
  String target=getTarget(headContent);
  if (target != null) {
    if (alreadyVisited.contains(target)) {
      alreadyVisited.add(target);
      LOG.error(new RepoStateException("Cyclic symbolic ref in HEAD: [" + StringUtil.join(alreadyVisited," -> ") + "]"));
      return new HeadInfo(false,null);
    }
 else {
      alreadyVisited.add(target);
      return readHeadInternal(myGitFiles.getBranchFile(target),alreadyVisited);
    }
  }
  LOG.error(new RepoStateException("Invalid format of the .git/HEAD file: [" + headContent + "]"));
  return new HeadInfo(false,null);
}
