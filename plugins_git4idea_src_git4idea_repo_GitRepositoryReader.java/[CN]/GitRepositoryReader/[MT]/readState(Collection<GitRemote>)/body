{
  Pair<Map<GitLocalBranch,Hash>,Map<GitRemoteBranch,Hash>> branches=readBranches(remotes);
  Map<GitLocalBranch,Hash> localBranches=branches.first;
  HeadInfo headInfo=readHead();
  Repository.State state=readRepositoryState(headInfo);
  GitLocalBranch currentBranch;
  String currentRevision;
  if (!headInfo.isBranch) {
    currentBranch=null;
    currentRevision=headInfo.content;
  }
 else   if (!localBranches.isEmpty()) {
    currentBranch=findCurrentBranch(headInfo,state,localBranches.keySet());
    currentRevision=getCurrentRevision(headInfo,currentBranch == null ? null : localBranches.get(currentBranch));
  }
 else   if (headInfo.content != null) {
    currentBranch=new GitLocalBranch(headInfo.content);
    currentRevision=null;
  }
 else {
    currentBranch=null;
    currentRevision=null;
  }
  return new GitBranchState(currentRevision,currentBranch,state,localBranches,branches.second);
}
