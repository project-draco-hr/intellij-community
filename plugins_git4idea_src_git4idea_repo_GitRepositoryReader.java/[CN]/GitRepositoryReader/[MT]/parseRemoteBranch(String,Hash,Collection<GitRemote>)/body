{
  String stdName=GitBranchUtil.stripRefsPrefix(fullBranchName);
  int slash=stdName.indexOf('/');
  if (slash == -1) {
    return new GitSvnRemoteBranch(fullBranchName,hash);
  }
 else {
    GitRemote remote;
    String remoteName;
    String branchName;
    do {
      remoteName=stdName.substring(0,slash);
      branchName=stdName.substring(slash + 1);
      remote=GitUtil.findRemoteByName(remotes,remoteName);
      slash=stdName.indexOf('/',slash + 1);
    }
 while (remote == null && slash >= 0);
    if (remote == null) {
      LOG.debug(String.format("No remote found with the name [%s]. All remotes: %s",remoteName,remotes));
      GitRemote fakeRemote=new GitRemote(remoteName,ContainerUtil.<String>emptyList(),Collections.<String>emptyList(),Collections.<String>emptyList(),Collections.<String>emptyList());
      return new GitStandardRemoteBranch(fakeRemote,branchName,hash);
    }
    return new GitStandardRemoteBranch(remote,branchName,hash);
  }
}
