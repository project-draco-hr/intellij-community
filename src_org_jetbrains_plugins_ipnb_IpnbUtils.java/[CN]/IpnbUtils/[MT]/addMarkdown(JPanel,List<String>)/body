{
  StringBuilder stringBuilder=new StringBuilder();
  boolean inCode=false;
  for (  String string : strings) {
    if (string.startsWith("```") && !inCode) {
      inCode=true;
      string=StringUtil.trimStart(string,"```");
      stringBuilder.append("<code>").append(string).append("<br>");
    }
 else     if (StringUtil.trimTrailing(string).endsWith("```") && inCode) {
      inCode=false;
      string=StringUtil.trimTrailing(string);
      string=StringUtil.trimEnd(string,"```");
      stringBuilder.append(string).append("</code>").append("\n");
    }
 else     if (inCode) {
      stringBuilder.append(string).append("<br>");
    }
 else {
      stringBuilder.append(string).append("\n");
    }
  }
  final String string=IpnbUtils.markdown2Html(stringBuilder.toString());
  final JEditorPane editorPane=new JEditorPane();
  editorPane.setContentType(new HTMLEditorKit().getContentType());
  editorPane.setText("<html><body>" + string + "</body></html>");
  final Font font=new Font(Font.SERIF,Font.PLAIN,16);
  String bodyRule="body { font-family: \"Helvetica Neue\",Helvetica,Arial,sans-serif;; " + "font-size: " + font.getSize() + "pt; "+ "width: "+ IpnbEditorUtil.PANEL_WIDTH+ "px;}";
  String codeRule="code { font-family: \"Helvetica Neue\",Helvetica,Arial,sans-serif; " + "font-size: " + font.getSize() + "pt;}";
  final StyleSheet sheet=((HTMLDocument)editorPane.getDocument()).getStyleSheet();
  sheet.addRule(bodyRule);
  sheet.addRule(codeRule);
  editorPane.setEditable(false);
  editorPane.addMouseListener(new MouseAdapter(){
    @Override public void mouseClicked(    MouseEvent e){
      final MouseEvent parentEvent=SwingUtilities.convertMouseEvent(editorPane,e,panel);
      panel.dispatchEvent(parentEvent);
    }
  }
);
  editorPane.addHyperlinkListener(new BrowserHyperlinkListener());
  panel.add(editorPane);
}
