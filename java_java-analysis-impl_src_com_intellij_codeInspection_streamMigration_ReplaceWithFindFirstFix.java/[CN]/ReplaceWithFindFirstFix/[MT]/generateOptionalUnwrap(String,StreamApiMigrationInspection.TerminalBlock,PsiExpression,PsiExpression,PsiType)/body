{
  PsiVariable var=tb.getVariable();
  if (!StreamApiMigrationInspection.isIdentityMapping(var,trueExpression)) {
    if (trueExpression instanceof PsiTypeCastExpression && ExpressionUtils.isNullLiteral(falseExpression)) {
      PsiTypeCastExpression castExpression=(PsiTypeCastExpression)trueExpression;
      PsiTypeElement castType=castExpression.getCastType();
      if (castType != null && StreamApiMigrationInspection.isIdentityMapping(var,castExpression.getOperand())) {
        return "(" + castType.getText() + ")"+ stream+ ".orElse(null)";
      }
    }
    if (ExpressionUtils.isLiteral(falseExpression,Boolean.FALSE) && PsiType.BOOLEAN.equals(trueExpression.getType())) {
      return stream + ".filter(" + LambdaUtil.createLambda(var,trueExpression)+ ").isPresent()";
    }
    if (trueExpression instanceof PsiConditionalExpression) {
      PsiConditionalExpression condition=(PsiConditionalExpression)trueExpression;
      if (EquivalenceChecker.getCanonicalPsiEquivalence().expressionsAreEquivalent(falseExpression,condition.getElseExpression())) {
        return generateOptionalUnwrap(stream + ".filter(" + LambdaUtil.createLambda(var,condition.getCondition())+ ")",tb,condition.getThenExpression(),falseExpression,var.getType());
      }
    }
    trueExpression=targetType == null ? trueExpression : ExpressionUtils.convertInitializerToNormalExpression(trueExpression,targetType);
    stream+=".map(" + LambdaUtil.createLambda(var,trueExpression) + ")";
  }
  stream+=".orElse(" + falseExpression.getText() + ")";
  return stream;
}
