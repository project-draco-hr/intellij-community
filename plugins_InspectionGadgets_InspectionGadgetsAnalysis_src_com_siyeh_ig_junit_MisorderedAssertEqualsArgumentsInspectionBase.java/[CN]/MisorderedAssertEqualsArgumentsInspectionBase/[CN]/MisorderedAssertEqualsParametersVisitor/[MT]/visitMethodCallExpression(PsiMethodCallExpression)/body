{
  super.visitMethodCallExpression(expression);
  final PsiReferenceExpression methodExpression=expression.getMethodExpression();
  @NonNls final String methodName=methodExpression.getReferenceName();
  if (!methodNames.contains(methodName)) {
    return;
  }
  final PsiMethod method=expression.resolveMethod();
  if (method == null || method.hasModifierProperty(PsiModifier.PRIVATE)) {
    return;
  }
  final PsiExpressionList argumentList=expression.getArgumentList();
  final PsiExpression[] arguments=argumentList.getExpressions();
  if (arguments.length < 2) {
    return;
  }
  final ExpectedActual expectedActual=ExpectedActual.create(method,arguments,checkTestNG());
  if (expectedActual == null) {
    return;
  }
  if (looksLikeExpectedArgument(expectedActual.getExpected()) || !looksLikeExpectedArgument(expectedActual.getActual())) {
    return;
  }
  registerMethodCallError(expression);
}
