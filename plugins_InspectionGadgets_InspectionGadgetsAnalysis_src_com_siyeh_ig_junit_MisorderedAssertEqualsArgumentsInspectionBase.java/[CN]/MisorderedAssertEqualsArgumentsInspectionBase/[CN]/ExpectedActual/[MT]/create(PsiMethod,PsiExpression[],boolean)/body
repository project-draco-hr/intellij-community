{
  final PsiClass containingClass=method.getContainingClass();
  final PsiExpression expectedArgument;
  final PsiExpression actualArgument;
  if (checkTestNG) {
    if (InheritanceUtil.isInheritor(containingClass,"org.testng.Assert")) {
      expectedArgument=arguments[1];
      actualArgument=arguments[0];
    }
 else {
      expectedArgument=null;
      actualArgument=null;
    }
  }
 else {
    final boolean messageOnFirstPosition=AssertHint.isMessageOnFirstPosition(containingClass);
    final boolean messageOnLastPosition=AssertHint.isMessageOnLastPosition(containingClass,false);
    if (!messageOnFirstPosition && !messageOnLastPosition) {
      return null;
    }
    int offset=messageOnFirstPosition && method.getParameterList().getParameters().length > 2 ? 1 : 0;
    expectedArgument=arguments[offset];
    actualArgument=arguments[offset + 1];
  }
  if (expectedArgument == null || actualArgument == null) {
    return null;
  }
  return new ExpectedActual(expectedArgument,actualArgument);
}
