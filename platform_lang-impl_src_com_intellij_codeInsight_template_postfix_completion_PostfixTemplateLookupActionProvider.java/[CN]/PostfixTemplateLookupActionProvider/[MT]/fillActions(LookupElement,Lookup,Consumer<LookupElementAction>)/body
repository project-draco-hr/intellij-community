{
  if (element instanceof PostfixTemplateLookupElement) {
    final PostfixTemplateLookupElement templateLookupElement=(PostfixTemplateLookupElement)element;
    final PostfixTemplate template=templateLookupElement.getPostfixTemplate();
    consumer.consume(new LookupElementAction(PlatformIcons.EDIT,"Edit postfix templates settings"){
      @Override public Result performLookupAction(){
        final Project project=lookup.getProject();
        ApplicationManager.getApplication().invokeLater(new Runnable(){
          @Override public void run(){
            if (project.isDisposed())             return;
            final PostfixTemplatesConfigurable configurable=new PostfixTemplatesConfigurable();
            ShowSettingsUtil.getInstance().editConfigurable(project,configurable,new Runnable(){
              @Override public void run(){
                PostfixTemplatesCheckboxTree templatesTree=configurable.getTemplatesTree();
                if (templatesTree != null) {
                  templatesTree.selectTemplate(template,PostfixTemplatesUtils.getLangForProvider(templateLookupElement.getProvider()));
                }
              }
            }
);
          }
        }
);
        return Result.HIDE_LOOKUP;
      }
    }
);
    final PostfixTemplatesSettings settings=PostfixTemplatesSettings.getInstance();
    if (settings != null && settings.isTemplateEnabled(template,templateLookupElement.getProvider())) {
      consumer.consume(new LookupElementAction(AllIcons.Actions.Delete,String.format("Disable '%s' template",template.getKey())){
        @Override public Result performLookupAction(){
          ApplicationManager.getApplication().invokeLater(new Runnable(){
            @Override public void run(){
              settings.disableTemplate(template,templateLookupElement.getProvider());
            }
          }
);
          return Result.HIDE_LOOKUP;
        }
      }
);
    }
  }
}
