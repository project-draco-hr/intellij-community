{
  GrTypeElement typeElement=getReturnTypeElementGroovy();
  if (newReturnType == null || newReturnType == PsiType.NULL) {
    if (typeElement != null)     typeElement.delete();
    insertPlaceHolderToModifierList();
    return null;
  }
  final GrTypeElement stub=GroovyPsiElementFactory.getInstance(getProject()).createTypeElement(newReturnType);
  GrTypeElement newTypeElement;
  if (typeElement == null) {
    final GrTypeParameterList typeParemeterList=getTypeParameterList();
    PsiElement anchor=typeParemeterList != null ? typeParemeterList : getModifierList();
    newTypeElement=(GrTypeElement)addAfter(stub,anchor);
  }
 else {
    newTypeElement=(GrTypeElement)typeElement.replace(stub);
  }
  newTypeElement.accept(new GroovyRecursiveElementVisitor(){
    @Override public void visitCodeReferenceElement(    GrCodeReferenceElement refElement){
      super.visitCodeReferenceElement(refElement);
      GrReferenceAdjuster.shortenReference(refElement);
    }
  }
);
  return newTypeElement;
}
