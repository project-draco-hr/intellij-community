{
  final StringBuilder result=new StringBuilder();
  boolean stop=false;
  boolean longTypeSeen=false;
  for (  PsiElement child : expression.getChildren()) {
    if (child == fromTarget) {
      stop=true;
      result.append(replacement);
    }
 else     if (child == untilTarget) {
      stop=false;
    }
 else     if (child instanceof PsiComment || !stop) {
      if (child instanceof PsiExpression) {
        final PsiExpression childExpression=(PsiExpression)child;
        longTypeSeen|=TypeConversionUtil.isLongType(childExpression.getType());
      }
      result.append(child.getText());
    }
 else     if (child instanceof PsiJavaToken && untilTarget == null) {
      stop=false;
    }
  }
  if (!longTypeSeen && TypeConversionUtil.isLongType(expression.getType()) && replacement.isEmpty()) {
    result.insert(0,"(long)");
  }
  return result.toString();
}
