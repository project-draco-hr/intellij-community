{
  return RecursionManager.doPreventingRecursion(this,false,new Computable<PsiClassType>(){
    @Override public PsiClassType compute(){
      return CachedValuesManager.getCachedValue(GroovyScriptClass.this,new CachedValueProvider<PsiClassType>(){
        @Nullable @Override public Result<PsiClassType> compute(){
          GrVariableDeclaration declaration=findDeclaration();
          if (declaration != null) {
            GrModifierList modifierList=declaration.getModifierList();
            if (modifierList.findAnnotation(GroovyCommonClassNames.GROOVY_TRANSFORM_BASE_SCRIPT) != null) {
              GrTypeElement typeElement=declaration.getTypeElementGroovy();
              if (typeElement != null) {
                PsiType type=typeElement.getType();
                if (type instanceof PsiClassType) {
                  return Result.create(((PsiClassType)type),myFile);
                }
              }
            }
          }
          return Result.create(null,myFile);
        }
      }
);
    }
  }
);
}
