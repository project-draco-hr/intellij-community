{
  Type genericReturnType=m.getGenericReturnType();
  boolean nullable=m.getAnnotation(JsonNullable.class) != null || (genericReturnType == String.class && ((m.getAnnotation(JsonField.class) != null && m.getAnnotation(JsonField.class).optional()) || m.getAnnotation(JsonOptionalField.class) != null));
  ValueReader fieldTypeParser=reader.getFieldTypeParser(genericReturnType,nullable,false,m);
  if (fieldTypeParser != InterfaceReader.VOID_PARSER) {
    fieldLoaders.add(new FieldLoader(fieldName,fieldTypeParser));
  }
  return new PreparsedFieldMethodHandler(fieldTypeParser == InterfaceReader.VOID_PARSER ? null : fieldName);
}
