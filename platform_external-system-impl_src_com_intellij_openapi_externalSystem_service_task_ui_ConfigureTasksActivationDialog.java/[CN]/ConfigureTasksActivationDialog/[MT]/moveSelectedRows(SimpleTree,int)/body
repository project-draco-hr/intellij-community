{
  final TreePath[] selectionPaths=tree.getSelectionPaths();
  if (selectionPaths == null)   return;
  ContainerUtil.sort(selectionPaths,new Comparator<TreePath>(){
    @Override public int compare(    TreePath o1,    TreePath o2){
      return -direction * compare(tree.getRowForPath(o1),tree.getRowForPath(o2));
    }
    private int compare(    int x,    int y){
      return (x < y) ? -1 : ((x == y) ? 0 : 1);
    }
  }
);
  for (  TreePath selectionPath : selectionPaths) {
    final DefaultMutableTreeNode treeNode=(DefaultMutableTreeNode)selectionPath.getLastPathComponent();
    final DefaultMutableTreeNode parent=(DefaultMutableTreeNode)treeNode.getParent();
    final int idx=parent.getIndex(treeNode);
    ((DefaultTreeModel)tree.getModel()).removeNodeFromParent(treeNode);
    ((DefaultTreeModel)tree.getModel()).insertNodeInto(treeNode,parent,idx + direction);
  }
  tree.addSelectionPaths(selectionPaths);
}
