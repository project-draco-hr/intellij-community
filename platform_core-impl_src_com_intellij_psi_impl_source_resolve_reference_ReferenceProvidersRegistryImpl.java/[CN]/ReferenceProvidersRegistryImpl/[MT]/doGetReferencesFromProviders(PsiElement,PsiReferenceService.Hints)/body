{
  List<ProviderBinding.ProviderInfo<PsiReferenceProvider,ProcessingContext>> providers=getRegistrar(context.getLanguage()).getPairsByElement(context,hints);
  if (providers.isEmpty()) {
    return PsiReference.EMPTY_ARRAY;
  }
  if (providers.size() == 1) {
    return providers.get(0).provider.getReferencesByElement(context,providers.get(0).processingContext);
  }
  ContainerUtil.sort(providers,PRIORITY_COMPARATOR);
  List<PsiReference> result=new ArrayList<PsiReference>();
  final double maxPriority=providers.get(0).priority;
  next:   for (  ProviderBinding.ProviderInfo<PsiReferenceProvider,ProcessingContext> trinity : providers) {
    final PsiReference[] refs;
    try {
      refs=trinity.provider.getReferencesByElement(context,trinity.processingContext);
    }
 catch (    IndexNotReadyException ex) {
      continue;
    }
    if (trinity.priority != maxPriority) {
      for (      PsiReference ref : refs) {
        for (        PsiReference reference : result) {
          if (ref != null && ReferenceRange.containsRangeInElement(reference,ref.getRangeInElement())) {
            continue next;
          }
        }
      }
    }
    for (    PsiReference ref : refs) {
      if (ref != null) {
        result.add(ref);
      }
    }
  }
  return result.isEmpty() ? PsiReference.EMPTY_ARRAY : ContainerUtil.toArray(result,new PsiReference[result.size()]);
}
