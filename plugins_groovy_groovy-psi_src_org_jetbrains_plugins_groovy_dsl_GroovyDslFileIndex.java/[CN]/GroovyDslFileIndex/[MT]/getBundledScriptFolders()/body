{
  final GroovyFrameworkConfigNotification[] extensions=GroovyFrameworkConfigNotification.EP_NAME.getExtensions();
  Set<Class> classes=new HashSet<Class>(ContainerUtil.map2Set(extensions,new Function<GroovyFrameworkConfigNotification,Class>(){
    @Override public Class fun(    GroovyFrameworkConfigNotification notification){
      return notification.getClass();
    }
  }
));
  classes.add(GroovyFrameworkConfigNotification.class);
  Set<File> scriptFolders=new LinkedHashSet<File>();
  for (  Class aClass : classes) {
    File jarPath=new File(PathUtil.getJarPathForClass(aClass));
    if (jarPath.isFile()) {
      jarPath=jarPath.getParentFile();
    }
    scriptFolders.add(new File(jarPath,"standardDsls"));
  }
  return scriptFolders;
}
