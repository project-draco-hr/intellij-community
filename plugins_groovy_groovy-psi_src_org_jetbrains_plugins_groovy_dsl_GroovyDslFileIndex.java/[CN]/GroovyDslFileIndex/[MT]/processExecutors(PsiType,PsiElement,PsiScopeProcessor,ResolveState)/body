{
  if (insideAnnotation(place)) {
    return true;
  }
  final PsiFile placeFile=place.getContainingFile().getOriginalFile();
  final DelegatingScopeProcessor nameChecker=new DelegatingScopeProcessor(processor){
    @Override public boolean execute(    @NotNull PsiElement element,    @NotNull ResolveState state){
      if (element instanceof PsiMethod && ((PsiMethod)element).isConstructor()) {
        return processor.execute(element,state);
      }
 else       if (element instanceof PsiNamedElement) {
        return ResolveUtil.processElement(processor,(PsiNamedElement)element,state);
      }
 else {
        return processor.execute(element,state);
      }
    }
  }
;
  for (  GroovyDslScript script : getDslScripts(place.getProject())) {
    if (!script.processExecutor(nameChecker,psiType,place,placeFile,state)) {
      return false;
    }
  }
  return true;
}
