{
  checkRange(fromIndex,toIndex);
  int len=length();
  if (len <= fromIndex || fromIndex == toIndex) {
    return new ConcurrentBitSet(0);
  }
  if (toIndex > len) {
    toIndex=len;
  }
  ConcurrentBitSet result=new ConcurrentBitSet(toIndex - fromIndex);
  int targetWords=wordIndex(toIndex - fromIndex - 1) + 1;
  int sourceIndex=wordIndex(fromIndex);
  boolean wordAligned=(fromIndex & BIT_INDEX_MASK) == 0;
  for (int i=0; i < targetWords - 1; i++, sourceIndex++) {
    result.words[i]=wordAligned ? words[sourceIndex] : words[sourceIndex] >>> fromIndex | words[sourceIndex + 1] << -fromIndex;
  }
  long lastWordMask=WORD_MASK >>> -toIndex;
  result.words[targetWords - 1]=(toIndex - 1 & BIT_INDEX_MASK) < (fromIndex & BIT_INDEX_MASK) ? words[sourceIndex] >>> fromIndex | (words[sourceIndex + 1] & lastWordMask) << -fromIndex : (words[sourceIndex] & lastWordMask) >>> fromIndex;
  return result;
}
