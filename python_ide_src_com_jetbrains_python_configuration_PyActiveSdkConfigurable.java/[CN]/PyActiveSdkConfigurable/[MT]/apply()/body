{
  try {
    final Sdk item=(Sdk)mySdkCombo.getSelectedItem();
    Sdk newSdk=item == null ? null : myProjectSdksModel.findSdk(item);
    if (item instanceof PyDetectedSdk) {
      VirtualFile sdkHome=ApplicationManager.getApplication().runWriteAction(new Computable<VirtualFile>(){
        @Override public VirtualFile compute(){
          return LocalFileSystem.getInstance().refreshAndFindFileByPath(item.getName());
        }
      }
);
      newSdk=SdkConfigurationUtil.createAndAddSDK(sdkHome.getPath(),PythonSdkType.getInstance());
      if (newSdk != null) {
        myProjectSdksModel.addSdk(newSdk);
        updateSdkList(false);
        myProjectSdksModel.apply();
      }
      PySdkService.getInstance().solidifySdk(item);
    }
    mySdkCombo.getModel().setSelectedItem(newSdk == null ? null : myProjectSdksModel.findSdk(newSdk.getName()));
    final Sdk prevSdk=getSdk();
    setSdk(newSdk);
    if (prevSdk != null && newSdk != null) {
      final PythonSdkFlavor flavor1=PythonSdkFlavor.getFlavor(newSdk);
      final PythonSdkFlavor flavor2=PythonSdkFlavor.getFlavor(prevSdk);
      if (flavor1 != null && flavor2 != null) {
        final LanguageLevel languageLevel1=flavor1.getLanguageLevel(newSdk);
        final LanguageLevel languageLevel2=flavor2.getLanguageLevel(prevSdk);
        if ((languageLevel1.isPy3K() && languageLevel2.isPy3K()) || (!languageLevel1.isPy3K()) && !languageLevel2.isPy3K()) {
          return;
        }
      }
    }
    rehighlightStrings(myProject);
  }
  finally {
    mySdkSettingsWereModified=false;
  }
}
