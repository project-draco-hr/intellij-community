{
  final Sdk item=(Sdk)mySdkCombo.getSelectedItem();
  myProjectSdksModel.apply();
  Sdk newSdk=item == null ? null : myProjectSdksModel.findSdk(item);
  if (item instanceof PyDetectedSdk) {
    VirtualFile sdkHome=ApplicationManager.getApplication().runWriteAction(new Computable<VirtualFile>(){
      @Override public VirtualFile compute(){
        return LocalFileSystem.getInstance().refreshAndFindFileByPath(item.getName());
      }
    }
);
    newSdk=SdkConfigurationUtil.createAndAddSDK(sdkHome.getPath(),PythonSdkType.getInstance());
    if (newSdk != null) {
      myProjectSdksModel.addSdk(newSdk);
      updateSdkList(false);
      myProjectSdksModel.apply();
    }
    PySdkService.getInstance().solidifySdk(item);
  }
  mySdkCombo.getModel().setSelectedItem(newSdk == null ? null : myProjectSdksModel.findSdk(newSdk.getName()));
  final Sdk prevSdk=getSdk();
  setSdk(newSdk);
  rehighlightStringLiterals(newSdk,prevSdk);
}
