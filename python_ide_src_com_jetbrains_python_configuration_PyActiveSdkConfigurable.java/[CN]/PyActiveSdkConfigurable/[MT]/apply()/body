{
  final Sdk item=(Sdk)mySdkCombo.getSelectedItem();
  if (item instanceof PyDetectedSdk) {
    ApplicationManager.getApplication().invokeLater(new Runnable(){
      @Override public void run(){
        final Sdk sdk=SdkConfigurationUtil.createAndAddSDK(item.getName(),PythonSdkType.getInstance());
        myProjectSdksModel.removeSdk(item);
        myProjectSdksModel.addSdk(sdk);
        updateSdkList(true);
        mySdkCombo.setSelectedItem(sdk);
        setSdk(sdk);
      }
    }
,ModalityState.any());
  }
 else   if (item != null) {
    myProjectSdksModel.addSdk(item);
    myProjectSdksModel.apply(null,true);
    mySdkCombo.setSelectedItem(item);
  }
 else   if (myAddedSdk != null) {
    myProjectSdksModel.apply(null,true);
  }
  final Sdk prevSdk=ProjectRootManager.getInstance(myProject).getProjectSdk();
  final Sdk selectedSdk=setSdk(item);
  if (prevSdk != null && selectedSdk != null) {
    final PythonSdkFlavor flavor1=PythonSdkFlavor.getFlavor(selectedSdk);
    final PythonSdkFlavor flavor2=PythonSdkFlavor.getFlavor(prevSdk);
    if (flavor1 != null && flavor2 != null) {
      final LanguageLevel languageLevel1=flavor1.getLanguageLevel(selectedSdk);
      final LanguageLevel languageLevel2=flavor2.getLanguageLevel(prevSdk);
      if ((languageLevel1.isPy3K() && languageLevel2.isPy3K()) || (!languageLevel1.isPy3K()) && !languageLevel2.isPy3K()) {
        return;
      }
    }
  }
  rehighlightStrings(myProject);
}
