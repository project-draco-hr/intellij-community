{
  final Sdk item=(Sdk)mySdkCombo.getSelectedItem();
  Sdk newSdk=item;
  if (item instanceof PyDetectedSdk) {
    VirtualFile sdkHome=ApplicationManager.getApplication().runWriteAction(new Computable<VirtualFile>(){
      @Override public VirtualFile compute(){
        return LocalFileSystem.getInstance().refreshAndFindFileByPath(item.getName());
      }
    }
);
    newSdk=SdkConfigurationUtil.setupSdk(ProjectJdkTable.getInstance().getAllJdks(),sdkHome,PythonSdkType.getInstance(),true,null,null);
    if (newSdk != null) {
      myProjectSdksModel.addSdk(newSdk);
      mySdkCombo.setSelectedItem(newSdk);
      myProjectSdksModel.apply();
    }
  }
 else {
    final Sdk sdk=myProjectSdksModel.findSdk(item);
    if (item != null && sdk == null) {
      myProjectSdksModel.addSdk(item);
      myProjectSdksModel.apply(null,true);
      mySdkCombo.setSelectedItem(item);
    }
 else     if (!myAddedSdks.isEmpty()) {
      myProjectSdksModel.apply();
    }
  }
  final Sdk prevSdk=ProjectRootManager.getInstance(myProject).getProjectSdk();
  final Sdk selectedSdk=setSdk(newSdk);
  if (prevSdk != null && selectedSdk != null) {
    final PythonSdkFlavor flavor1=PythonSdkFlavor.getFlavor(selectedSdk);
    final PythonSdkFlavor flavor2=PythonSdkFlavor.getFlavor(prevSdk);
    if (flavor1 != null && flavor2 != null) {
      final LanguageLevel languageLevel1=flavor1.getLanguageLevel(selectedSdk);
      final LanguageLevel languageLevel2=flavor2.getLanguageLevel(prevSdk);
      if ((languageLevel1.isPy3K() && languageLevel2.isPy3K()) || (!languageLevel1.isPy3K()) && !languageLevel2.isPy3K()) {
        return;
      }
    }
  }
  rehighlightStrings(myProject);
}
