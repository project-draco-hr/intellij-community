{
  myInterpreterList=PyConfigurableInterpreterList.getInstance(myProject);
  myInterpreterList.setSdkCombo(mySdkCombo);
  myProjectSdksModel=myInterpreterList.getModel();
  myListener=new MyListener(this);
  myProjectSdksModel.addListener(myListener);
  mySdkCombo.addActionListener(new ActionListener(){
    @Override public void actionPerformed(    ActionEvent e){
      final Sdk selectedSdk=(Sdk)mySdkCombo.getSelectedItem();
      if (selectedSdk != null)       myPackagesPanel.updatePackages(new PyPackageManagementService(myProject,selectedSdk));
    }
  }
);
  myDetailsButton.addActionListener(new ActionListener(){
    @Override public void actionPerformed(    ActionEvent e){
      DetailsChooser.show(myProject,myProjectSdksModel.getSdks(),RelativePoint.fromScreen(myDetailsButton.getLocationOnScreen()),true,new NullableConsumer<Sdk>(){
        @Override public void consume(        Sdk sdk){
          if (sdk == null)           return;
          final Sdk existedSdk=myProjectSdksModel.findSdk(sdk.getName());
          if (existedSdk == null) {
            myProjectSdksModel.addSdk(sdk);
          }
          myInterpreterList.setSelectedSdk(sdk);
          mySdkCombo.getModel().setSelectedItem(sdk);
          myPackagesPanel.updatePackages(new PyPackageManagementService(myProject,sdk));
        }
      }
);
    }
  }
);
}
