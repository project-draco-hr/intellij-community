{
  final ScopeOwner owner=ScopeUtil.getScopeOwner(element);
  if (owner != null) {
    final ControlFlow flow=ControlFlowCache.getControlFlow(owner);
    final Instruction[] instructions=flow.getInstructions();
    final int start=ControlFlowUtil.findInstructionNumberByElement(instructions,element);
    if (start >= 0) {
      final Ref<Boolean> resultRef=Ref.create(false);
      ControlFlowUtil.iteratePrev(start,instructions,new Function<Instruction,ControlFlowUtil.Operation>(){
        @Override public ControlFlowUtil.Operation fun(        Instruction instruction){
          if (instruction.allPred().isEmpty() && !isFirstInstruction(instruction)) {
            resultRef.set(true);
            return ControlFlowUtil.Operation.BREAK;
          }
          return ControlFlowUtil.Operation.NEXT;
        }
      }
);
      return resultRef.get();
    }
  }
  return false;
}
