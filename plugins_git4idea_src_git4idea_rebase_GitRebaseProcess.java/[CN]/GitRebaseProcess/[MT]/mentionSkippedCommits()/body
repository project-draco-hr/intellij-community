{
  if (mySkippedCommits.isEmpty())   return "";
  String message="<br/>";
  if (mySkippedCommits.size() == 1) {
    message+="The following commit was skipped during rebase:<br/>";
  }
 else {
    message+="The following commits were skipped during rebase:<br/>";
  }
  message+=StringUtil.join(mySkippedCommits.values(),new Function<GitRebaseUtils.CommitInfo,String>(){
    @Override public String fun(    @NotNull GitRebaseUtils.CommitInfo commitInfo){
      String commitMessage=StringUtil.shortenPathWithEllipsis(commitInfo.subject,72,true);
      String hash=commitInfo.revision.asString();
      String shortHash=DvcsUtil.getShortHash(commitInfo.revision.asString());
      return String.format("<a href='%s'>%s</a> %s",hash,shortHash,commitMessage);
    }
  }
,"<br/>");
  return message;
}
