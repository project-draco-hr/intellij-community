{
  final SvnConfiguration configuration=SvnConfiguration.getInstance(myVcs.getProject());
  boolean add=Boolean.TRUE.equals(configuration.TREE_CONFLICT_MERGE_THEIRS_NEW_INTO_OLD_PLACE);
  if (configuration.TREE_CONFLICT_MERGE_THEIRS_NEW_INTO_OLD_PLACE != null) {
    return add;
  }
  if (!containAdditions(myTheirsChanges) && !containAdditions(myTheirsBinaryChanges)) {
    return false;
  }
  return Messages.YES == MessageBuilder.yesNo(TreeConflictRefreshablePanel.TITLE,"Keep newly created file(s) in their original place?").yesText("Keep").noText("Move").doNotAsk(new DialogWrapper.DoNotAskOption(){
    @Override public boolean isToBeShown(){
      return true;
    }
    @Override public void setToBeShown(    boolean value,    int exitCode){
      if (!value) {
        if (exitCode == 0) {
          configuration.TREE_CONFLICT_MERGE_THEIRS_NEW_INTO_OLD_PLACE=true;
        }
 else {
          configuration.TREE_CONFLICT_MERGE_THEIRS_NEW_INTO_OLD_PLACE=false;
        }
      }
    }
    @Override public boolean canBeHidden(){
      return true;
    }
    @Override public boolean shouldSaveOptionsOnCancel(){
      return true;
    }
    @Override public String getDoNotShowMessage(){
      return CommonBundle.message("dialog.options.do.not.ask");
    }
  }
).show();
}
