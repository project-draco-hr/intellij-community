{
  try {
    final Collection<FilePathUnderVcs> filesConverted=convertPaths(filesDirty);
    final Collection<FilePathUnderVcs> dirsConverted=convertPaths(dirsRecursivelyDirty);
    if (filesConverted.isEmpty() && dirsConverted.isEmpty())     return;
    if (LOG.isDebugEnabled()) {
      LOG.debug("paths dirty: " + filesConverted + "; "+ dirsConverted+ "; "+ ReflectionUtil.findCallerClass(3));
    }
    boolean hasSomethingDirty;
synchronized (LOCK) {
      if (myDisposed)       return;
      for (      final FilePathUnderVcs root : filesConverted) {
        myDirtBuilder.addDirtyFile(root);
      }
      for (      final FilePathUnderVcs root : dirsConverted) {
        myDirtBuilder.addDirtyDirRecursively(root);
      }
      hasSomethingDirty=!myDirtBuilder.isEmpty();
    }
    if (hasSomethingDirty) {
      myChangeListManager.scheduleUpdate();
    }
  }
 catch (  ProcessCanceledException ignore) {
  }
}
