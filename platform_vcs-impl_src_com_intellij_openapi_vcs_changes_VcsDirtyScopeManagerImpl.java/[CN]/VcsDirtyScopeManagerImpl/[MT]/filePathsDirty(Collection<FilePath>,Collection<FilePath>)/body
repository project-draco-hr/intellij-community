{
  try {
    final Collection<FilePathUnderVcs> filesConverted=convertPaths(filesDirty);
    final Collection<FilePathUnderVcs> dirsConverted=convertPaths(dirsRecursivelyDirty);
    if (filesConverted.isEmpty() && dirsConverted.isEmpty())     return;
    if (LOG.isDebugEnabled()) {
      LOG.debug("paths dirty: " + filesConverted + "; "+ dirsConverted+ "; "+ ReflectionUtil.findCallerClass(2));
    }
    takeDirt(new Consumer<DirtBuilder>(){
      @Override public void consume(      final DirtBuilder dirt){
        for (        FilePathUnderVcs root : filesConverted) {
          dirt.addDirtyFile(root);
        }
        for (        FilePathUnderVcs root : dirsConverted) {
          dirt.addDirtyDirRecursively(root);
        }
      }
    }
);
  }
 catch (  ProcessCanceledException ignore) {
  }
}
