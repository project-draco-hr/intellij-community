{
  List<String> filterParameters=ContainerUtil.newArrayList();
  if (filterCollection.getBranchFilter() != null) {
    HgRepository repository=myRepositoryManager.getRepositoryForRoot(root);
    if (repository == null) {
      LOG.error("Repository not found for root " + root);
      return Collections.emptyList();
    }
    boolean atLeastOneBranchExists=false;
    for (    String branchName : filterCollection.getBranchFilter().getBranchNames()) {
      if (branchName.equals(TIP_REFERENCE) || branchExists(repository,branchName)) {
        filterParameters.add(HgHistoryUtil.prepareParameter("branch",branchName));
        atLeastOneBranchExists=true;
      }
 else       if (branchName.equals(HEAD_REFERENCE)) {
        filterParameters.add(HgHistoryUtil.prepareParameter("branch","."));
        filterParameters.add("-r");
        filterParameters.add("::.");
        atLeastOneBranchExists=true;
      }
    }
    if (!atLeastOneBranchExists) {
      return Collections.emptyList();
    }
  }
  if (filterCollection.getUserFilter() != null) {
    for (    String authorName : filterCollection.getUserFilter().getUserNames(root)) {
      filterParameters.add(HgHistoryUtil.prepareParameter("user",authorName));
    }
  }
  if (filterCollection.getDateFilter() != null) {
    StringBuilder args=new StringBuilder();
    final SimpleDateFormat dateFormatter=new SimpleDateFormat("yyyy-MM-dd HH:mm");
    filterParameters.add("-d");
    VcsLogDateFilter filter=filterCollection.getDateFilter();
    if (filter.getAfter() != null) {
      if (filter.getBefore() != null) {
        args.append(dateFormatter.format(filter.getAfter())).append(" to ").append(dateFormatter.format(filter.getBefore()));
      }
 else {
        args.append('>').append(dateFormatter.format(filter.getAfter()));
      }
    }
 else     if (filter.getBefore() != null) {
      args.append('<').append(dateFormatter.format(filter.getBefore()));
    }
    filterParameters.add(args.toString());
  }
  if (filterCollection.getTextFilter() != null) {
    String textFilter=filterCollection.getTextFilter().getText();
    filterParameters.add(HgHistoryUtil.prepareParameter("keyword",textFilter));
  }
  if (filterCollection.getStructureFilter() != null) {
    for (    VirtualFile file : filterCollection.getStructureFilter().getFiles()) {
      filterParameters.add(file.getPath());
    }
  }
  return HgHistoryUtil.readAllHashes(myProject,root,Consumer.EMPTY_CONSUMER,filterParameters);
}
