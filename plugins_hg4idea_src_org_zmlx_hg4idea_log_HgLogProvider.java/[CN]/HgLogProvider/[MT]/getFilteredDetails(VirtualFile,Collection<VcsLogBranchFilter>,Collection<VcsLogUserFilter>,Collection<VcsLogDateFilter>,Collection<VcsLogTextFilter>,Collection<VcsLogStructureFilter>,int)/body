{
  List<String> filterParameters=ContainerUtil.newArrayList();
  if (!branchFilters.isEmpty()) {
    for (    VcsLogBranchFilter branchFilter : branchFilters) {
      filterParameters.add(prepareParameter("branch",branchFilter.getBranchName()));
    }
  }
  if (!userFilters.isEmpty()) {
    for (    VcsLogUserFilter authorFilter : userFilters) {
      filterParameters.add(prepareParameter("user",authorFilter.getUserName(root)));
    }
  }
  if (!dateFilters.isEmpty()) {
    StringBuilder args=new StringBuilder();
    final SimpleDateFormat dateFormatter=new SimpleDateFormat("yyyy-MM-dd HH:mm");
    filterParameters.add("-r");
    VcsLogDateFilter filter=dateFilters.iterator().next();
    if (filter.getAfter() != null) {
      args.append("date('>").append(dateFormatter.format(filter.getAfter())).append("')");
    }
    if (filter.getBefore() != null) {
      if (args.length() > 0) {
        args.append(" and ");
      }
      args.append("date('<").append(dateFormatter.format(filter.getBefore())).append("')");
    }
    filterParameters.add(args.toString());
  }
  if (textFilters.size() > 1) {
    LOG.warn("Expected only one text filter: " + textFilters);
  }
 else   if (!textFilters.isEmpty()) {
    String textFilter=textFilters.iterator().next().getText();
    filterParameters.add(prepareParameter("keyword",textFilter));
  }
  if (!structureFilters.isEmpty()) {
    for (    VcsLogStructureFilter filter : structureFilters) {
      for (      VirtualFile file : filter.getFiles(root)) {
        filterParameters.add(file.getPath());
      }
    }
  }
  return HgHistoryUtil.history(myProject,root,maxCount,filterParameters);
}
