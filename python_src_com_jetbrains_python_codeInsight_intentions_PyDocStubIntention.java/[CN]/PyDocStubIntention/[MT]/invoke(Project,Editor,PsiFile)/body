{
  PyFunction function=PsiTreeUtil.getParentOfType(file.findElementAt(editor.getCaretModel().getOffset()),PyFunction.class);
  PyElementGenerator elementGenerator=PyElementGenerator.getInstance(project);
  PythonDocumentationProvider documentationProvider=new PythonDocumentationProvider();
  PyStatementList list=function.getStatementList();
  PsiWhiteSpace whitespace=PsiTreeUtil.getPrevSiblingOfType(list,PsiWhiteSpace.class);
  String docContent=documentationProvider.generateDocumentationContentStub(function,(whitespace != null ? whitespace.getText() : "\n"));
  PyExpressionStatement string=elementGenerator.createFromText(LanguageLevel.forElement(function),PyExpressionStatement.class,"\"\"\"" + docContent + "\"\"\"");
  if (list.getStatements().length != 0)   list.addBefore(string,list.getStatements()[0]);
}
