{
  PsiBuilder.Marker list=builder.mark();
  IElementType tokenType=builder.getTokenType();
  boolean isEmpty=tokenType != JavaTokenType.IMPORT_KEYWORD && tokenType != JavaTokenType.SEMICOLON;
  if (!isEmpty) {
    PsiBuilder.Marker invalidElements=null;
    while (!builder.eof()) {
      tokenType=builder.getTokenType();
      if (stoppers.contains(tokenType)) {
        break;
      }
 else       if (tokenType == JavaTokenType.SEMICOLON) {
        builder.advanceLexer();
        continue;
      }
      final PsiBuilder.Marker statement=parseImportStatement(builder);
      if (statement != null) {
        if (invalidElements != null) {
          invalidElements.errorBefore(JavaErrorMessages.message("unexpected.token"),statement);
          invalidElements=null;
        }
        continue;
      }
      if (invalidElements == null) {
        invalidElements=builder.mark();
      }
      builder.advanceLexer();
    }
    if (invalidElements != null) {
      invalidElements.error(JavaErrorMessages.message("unexpected.token"));
    }
  }
  done(list,JavaElementType.IMPORT_LIST);
  return Pair.create(list,isEmpty);
}
