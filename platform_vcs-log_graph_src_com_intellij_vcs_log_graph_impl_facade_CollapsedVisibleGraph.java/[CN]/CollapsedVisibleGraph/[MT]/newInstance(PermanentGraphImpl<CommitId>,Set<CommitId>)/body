{
  LinearGraphAsGraphWithHiddenNodes branchesGraph;
  if (heads == null) {
    branchesGraph=new LinearGraphAsGraphWithHiddenNodes(permanentGraph.getPermanentLinearGraph());
  }
 else {
    Set<Integer> headIndexes=permanentGraph.getPermanentCommitsInfo().convertToCommitIndexes(heads);
    Flags visibleNodes=CurrentBranches.getVisibleNodes(permanentGraph.getPermanentLinearGraph(),headIndexes);
    branchesGraph=new LinearGraphAsGraphWithHiddenNodes(permanentGraph.getPermanentLinearGraph(),visibleNodes);
  }
  CollapsedGraphWithHiddenNodes collapsedGraph=new CollapsedGraphWithHiddenNodes(branchesGraph);
  GraphWithHiddenNodesAsGraphWithCommitInfo<CommitId> graphWithCommitInfo=new GraphWithHiddenNodesAsGraphWithCommitInfo<CommitId>(collapsedGraph,permanentGraph.getPermanentGraphLayout(),permanentGraph.getPermanentCommitsInfo());
  FragmentGenerator fragmentGeneratorForPrinterGraph=new FragmentGenerator(graphWithCommitInfo,permanentGraph.getNotCollapsedNodes());
  PrintElementsManagerImpl printElementsManager=new PrintElementsManagerImpl(graphWithCommitInfo,fragmentGeneratorForPrinterGraph);
  return new CollapsedVisibleGraph<CommitId>(graphWithCommitInfo,collapsedGraph,permanentGraph.getCommitsWithNotLoadParent(),printElementsManager,fragmentGeneratorForPrinterGraph);
}
