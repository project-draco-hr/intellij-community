{
  if (!(attrDescription instanceof ColorAndFontDescription))   return;
  ColorAndFontDescription description=(ColorAndFontDescription)attrDescription;
  if (description.isFontEnabled()) {
    myLabelFont.setEnabled(description.isEditable());
    myCbBold.setEnabled(description.isEditable());
    myCbItalic.setEnabled(description.isEditable());
    int fontType=description.getFontType();
    myCbBold.setSelected(BitUtil.isSet(fontType,Font.BOLD));
    myCbItalic.setSelected(BitUtil.isSet(fontType,Font.ITALIC));
  }
 else {
    myLabelFont.setEnabled(false);
    myCbBold.setSelected(false);
    myCbBold.setEnabled(false);
    myCbItalic.setSelected(false);
    myCbItalic.setEnabled(false);
  }
  updateColorChooser(myCbForeground,myForegroundChooser,description.isForegroundEnabled(),description.isForegroundChecked(),description.getForegroundColor());
  updateColorChooser(myCbBackground,myBackgroundChooser,description.isBackgroundEnabled(),description.isBackgroundChecked(),description.getBackgroundColor());
  updateColorChooser(myCbErrorStripe,myErrorStripeColorChooser,description.isErrorStripeEnabled(),description.isErrorStripeChecked(),description.getErrorStripeColor());
  EffectType effectType=description.getEffectType();
  updateColorChooser(myCbEffects,myEffectsColorChooser,description.isEffectsColorEnabled(),description.isEffectsColorChecked(),description.getEffectColor());
  if (description.isEffectsColorEnabled() && description.isEffectsColorChecked()) {
    myEffectsCombo.setEnabled(description.isEditable());
    myEffectsModel.setEffectName(ContainerUtil.reverseMap(myEffectsMap).get(effectType));
  }
 else {
    myEffectsCombo.setEnabled(false);
  }
  setInheritanceInfo(description);
  myLabelFont.setEnabled(myCbBold.isEnabled() || myCbItalic.isEnabled());
}
