{
  String prefix=StringUtil.repeatSymbol('a',128) + ".";
  File dir=FileUtil.createTempDirectory(FileUtil.createTempDirectory(FileUtil.createTempDirectory(FileUtil.createTempDirectory(myTempDirectory,prefix,".dir"),prefix,".dir"),prefix,".dir"),prefix,".dir");
  File file=FileUtil.createTempFile(dir,prefix,".txt");
  assertTrue(file.exists());
  FileUtil.writeToFile(file,myTestData);
  assertFileAttributes(file);
  if (SystemInfo.isWindows) {
    assertDirectoriesEqual(dir);
  }
  String target=FileSystemUtil.resolveSymLink(file);
  assertEquals(file.getPath(),target);
  if (SystemInfo.isWindows) {
    String path=myTempDirectory.getPath();
    int length=250 - path.length();
    for (int i=0; i < length / 10; i++) {
      path+="\\x_x_x_x_x";
    }
    File baseDir=new File(path);
    assertTrue(baseDir.mkdirs());
    assertTrue(getAttributes(baseDir).isDirectory());
    for (int i=1; i <= 100; i++) {
      dir=new File(baseDir,StringUtil.repeat("x",i));
      assertTrue(dir.mkdir());
      assertTrue(getAttributes(dir).isDirectory());
      file=new File(dir,"file.txt");
      FileUtil.writeToFile(file,"test".getBytes("UTF-8"));
      assertTrue(file.exists());
      assertFileAttributes(file);
      target=FileSystemUtil.resolveSymLink(file);
      assertEquals(file.getPath(),target);
    }
  }
}
