{
  assertEquals("Signature",text,StringUtil.join(myTexts,""));
  StringBuilder wrongs=new StringBuilder();
  Set<String> highlight_set=new HashSet<String>();
  ContainerUtil.addAll(highlight_set,highlighted);
  for (int i=0; i < myTexts.length; i+=1) {
    if (myFlags[i].contains(Flag.HIGHLIGHT) && !highlight_set.contains(myTexts[i])) {
      wrongs.append("Highlighted unexpected '").append(myTexts[i]).append("'. ");
    }
  }
  for (int i=0; i < myTexts.length; i+=1) {
    if (!myFlags[i].contains(Flag.HIGHLIGHT) && highlight_set.contains(myTexts[i])) {
      wrongs.append("Not highlighted expected '").append(myTexts[i]).append("'. ");
    }
  }
  Set<String> disabled_set=new HashSet<String>();
  ContainerUtil.addAll(disabled_set,disabled);
  for (int i=0; i < myTexts.length; i+=1) {
    if (myFlags[i].contains(Flag.DISABLE) && !disabled_set.contains(myTexts[i])) {
      wrongs.append("Highlighted a disabled '").append(myTexts[i]).append("'. ");
    }
  }
  for (int i=0; i < myTexts.length; i+=1) {
    if (!myFlags[i].contains(Flag.DISABLE) && disabled_set.contains(myTexts[i])) {
      wrongs.append("Not disabled expected '").append(myTexts[i]).append("'. ");
    }
  }
  if (wrongs.length() > 0)   fail(wrongs.toString());
}
