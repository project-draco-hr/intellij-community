{
  assertEquals("Signature",text,StringUtil.join(myTexts,""));
  StringBuilder wrongs=new StringBuilder();
  Set<String> highlightSet=new HashSet<String>();
  ContainerUtil.addAll(highlightSet,highlighted);
  for (int i=0; i < myTexts.length; i+=1) {
    if (myFlags[i].contains(Flag.HIGHLIGHT) && !highlightSet.contains(myTexts[i])) {
      wrongs.append("Highlighted unexpected '").append(myTexts[i]).append("'. ");
    }
  }
  for (int i=0; i < myTexts.length; i+=1) {
    if (!myFlags[i].contains(Flag.HIGHLIGHT) && highlightSet.contains(myTexts[i])) {
      wrongs.append("Not highlighted expected '").append(myTexts[i]).append("'. ");
    }
  }
  Set<String> disabledSet=new HashSet<String>();
  ContainerUtil.addAll(disabledSet,disabled);
  for (int i=0; i < myTexts.length; i+=1) {
    if (myFlags[i].contains(Flag.DISABLE) && !disabledSet.contains(myTexts[i])) {
      wrongs.append("Highlighted a disabled '").append(myTexts[i]).append("'. ");
    }
  }
  for (int i=0; i < myTexts.length; i+=1) {
    if (!myFlags[i].contains(Flag.DISABLE) && disabledSet.contains(myTexts[i])) {
      wrongs.append("Not disabled expected '").append(myTexts[i]).append("'. ");
    }
  }
  if (wrongs.length() > 0)   fail(wrongs.toString());
}
