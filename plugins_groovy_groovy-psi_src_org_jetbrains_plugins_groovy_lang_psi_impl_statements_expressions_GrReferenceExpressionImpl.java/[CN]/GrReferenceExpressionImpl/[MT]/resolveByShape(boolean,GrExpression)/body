{
  LOG.assertTrue(allVariants || upToArgument == null);
  final Trinity key=Trinity.create(TypeInferenceHelper.getCurrentContext(),this,Pair.create(allVariants,upToArgument));
  final Pair<Boolean,GroovyResolveResult[]> result=RecursionManager.doPreventingRecursion(key,true,new Computable<Pair<Boolean,GroovyResolveResult[]>>(){
    @Override public Pair<Boolean,GroovyResolveResult[]> compute(){
      return doResolveByShape(allVariants,upToArgument);
    }
  }
);
  return result == null ? Pair.create(false,GroovyResolveResult.EMPTY_ARRAY) : result;
}
