{
  final InferenceContext context=TypeInferenceHelper.getCurrentContext();
  final Trinity<?,?,?> key=Trinity.create(this,context,Pair.create(incompleteCode,genericsMatter));
  final GroovyResolveResult[] value=RecursionManager.doPreventingRecursion(key,true,new Computable<GroovyResolveResult[]>(){
    @Override public GroovyResolveResult[] compute(){
      return doPolyResolve(incompleteCode,genericsMatter);
    }
  }
);
  return value == null ? GroovyResolveResult.EMPTY_ARRAY : value;
}
