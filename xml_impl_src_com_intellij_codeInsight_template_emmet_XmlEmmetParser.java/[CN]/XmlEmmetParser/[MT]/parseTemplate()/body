{
  ZenCodingToken token=getToken();
  String templateKey=getDefaultTemplateKey();
  boolean mustHaveSelector=true;
  if (token instanceof IdentifierToken) {
    templateKey=((IdentifierToken)token).getText();
    advance();
    if (startsWithIgnoreCase(templateKey,LOREM_KEYWORD) || startsWithIgnoreCase(templateKey,LIPSUM_KEYWORD)) {
      return parseLorem(templateKey);
    }
    mustHaveSelector=false;
  }
  if (templateKey == null) {
    return null;
  }
  TemplateImpl template=myCallback.findApplicableTemplate(templateKey);
  if (template == null && !ZenCodingUtil.isXML11ValidQName(templateKey) && !StringUtil.containsChar(templateKey,'$')) {
    return null;
  }
  final Map<String,String> attributes=parseSelectors();
  if (mustHaveSelector && attributes.isEmpty()) {
    return null;
  }
  final TemplateToken templateToken=new TemplateToken(templateKey,attributes);
  if (!setTemplate(templateToken,template)) {
    return null;
  }
  return new TemplateNode(templateToken,myGenerator);
}
