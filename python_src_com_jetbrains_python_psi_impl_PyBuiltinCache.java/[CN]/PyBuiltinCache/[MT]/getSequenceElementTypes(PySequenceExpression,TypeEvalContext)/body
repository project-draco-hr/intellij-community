{
  final PyExpression[] elements=sequence.getElements();
  if (elements.length == 0 || elements.length > 10) {
    return Collections.singletonList(null);
  }
  final PyType firstElementType=context.getType(elements[0]);
  if (firstElementType == null) {
    return Collections.singletonList(null);
  }
  for (int i=1; i < elements.length; i++) {
    final PyType elementType=context.getType(elements[i]);
    if (elementType == null || !elementType.equals(firstElementType)) {
      return Collections.singletonList(null);
    }
  }
  if (sequence instanceof PyDictLiteralExpression) {
    if (firstElementType instanceof PyTupleType) {
      final PyTupleType tupleType=(PyTupleType)firstElementType;
      if (tupleType.getElementCount() == 2) {
        return Arrays.asList(tupleType.getElementType(0),tupleType.getElementType(1));
      }
    }
    return Arrays.asList(null,null);
  }
 else {
    return Collections.singletonList(firstElementType);
  }
}
