{
  offset=Math.max(0,Math.min(myDocument.getTextLength(),offset));
  int logicalLine=myDocument.getLineNumber(offset);
  int lineStartOffset=myDocument.getLineStartOffset(logicalLine);
  int intraLineOffset=offset - lineStartOffset;
  int y=visualLineToY(offsetToVisualLine(offset));
  float x=getStartX(logicalLine);
  if (myDocument.getTextLength() > 0) {
    for (    VisualLineFragmentsIterator.Fragment fragment : VisualLineFragmentsIterator.create(myView,offset)) {
      if (intraLineOffset == 0 && !leanTowardsLargerOffsets && fragment.getStartVisualColumn() == 0 && fragment.getStartLogicalLine() == logicalLine) {
        break;
      }
      int minOffset=fragment.getMinOffset();
      int maxOffset=fragment.getMaxOffset();
      if (offset > minOffset && offset < maxOffset || offset == minOffset && leanTowardsLargerOffsets || offset == maxOffset && !leanTowardsLargerOffsets) {
        x=fragment.offsetToX(offset);
        break;
      }
 else {
        x=fragment.getEndX();
      }
    }
  }
  return new Point((int)x,y);
}
