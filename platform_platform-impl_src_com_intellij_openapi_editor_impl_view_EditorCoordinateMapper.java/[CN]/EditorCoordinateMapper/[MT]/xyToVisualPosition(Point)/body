{
  int line=yToVisualLine(Math.max(p.y,0));
  float x=line == 0 ? myView.getPrefixTextWidthInPixels() : 0;
  int column=0;
  if (line < myDocument.getLineCount()) {
    LineLayout lineLayout=myView.getLineLayout(line);
    int lastEndOffset=0;
    for (    LineLayout.Fragment fragment : lineLayout.getFragmentsInVisualOrder()) {
      column+=fragment.getVisualStartOffset() - lastEndOffset;
      lastEndOffset=fragment.getVisualEndOffset();
      float nextX=fragment.advance(x);
      if (p.x <= nextX) {
        column=fragment.isRtl() ? column - fragment.xToColumn(x,p.x) : column + fragment.xToColumn(x,p.x);
        return new VisualPosition(line,column);
      }
 else {
        column=fragment.isRtl() ? column - fragment.getColumnCount(x) : column + fragment.getColumnCount(x);
        x=nextX;
      }
    }
    int lineLength=myDocument.getLineEndOffset(line) - myDocument.getLineStartOffset(line);
    column+=lineLength - lastEndOffset;
  }
  return new VisualPosition(line,column + spacePixelsToColumns((int)(p.x - x)));
}
