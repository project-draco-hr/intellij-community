{
  final Color bg=myComboBox.getBackground();
  final Color fg=myComboBox.getForeground();
  JButton button=new BasicArrowButton(SwingConstants.SOUTH,bg,fg,fg,fg){
    @Override public void paint(    Graphics g2){
      final Graphics2D g=(Graphics2D)g2;
      final GraphicsConfig config=new GraphicsConfig(g);
      final int w=getWidth();
      final int h=getHeight();
      if (!isTableCellEditor(myComboBox)) {
        g.setColor(getArrowButtonFillColor(UIUtil.getControlColor()));
        g.fillRect(0,0,w,h);
      }
      g.setColor(comboBox.isEnabled() ? new JBColor(Gray._255,getForeground()) : new JBColor(Gray._255,getForeground().darker()));
      g.setRenderingHint(RenderingHints.KEY_ANTIALIASING,RenderingHints.VALUE_ANTIALIAS_ON);
      g.setRenderingHint(RenderingHints.KEY_STROKE_CONTROL,RenderingHints.VALUE_STROKE_NORMALIZE);
      g.setStroke(new BasicStroke(1.0f,BasicStroke.CAP_BUTT,BasicStroke.JOIN_BEVEL));
      final int tW=JBUI.scale(8);
      final int tH=JBUI.scale(6);
      final int xU=(w - tW) / 2;
      final int yU=(h - tH) / 2;
      g.translate(JBUI.scale(2),0);
      final Path2D.Double path=new Path2D.Double();
      path.moveTo(xU,yU);
      path.lineTo(xU + tW,yU);
      path.lineTo(xU + tW / 2,yU + tH);
      path.lineTo(xU,yU);
      path.closePath();
      g.fill(path);
      g.translate(-JBUI.scale(2),0);
      if (!isTableCellEditor(myComboBox)) {
        g.setColor(getArrowButtonFillColor(getBorderColor()));
        g.drawLine(0,-1,0,h);
      }
      config.restore();
    }
    @Override public Dimension getPreferredSize(){
      int size=getFont().getSize() + 4;
      if (size % 2 == 1)       size++;
      return new DimensionUIResource(size,size);
    }
  }
;
  button.setBorder(BorderFactory.createEmptyBorder());
  button.setOpaque(false);
  return button;
}
