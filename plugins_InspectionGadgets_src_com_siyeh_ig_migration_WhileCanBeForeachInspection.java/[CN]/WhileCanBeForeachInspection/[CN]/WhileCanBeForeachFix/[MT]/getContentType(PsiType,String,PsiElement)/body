{
  if (!(type instanceof PsiClassType)) {
    return null;
  }
  final PsiClassType classType=(PsiClassType)type;
  final PsiClassType.ClassResolveResult resolveResult=classType.resolveGenerics();
  final PsiClass aClass=resolveResult.getElement();
  final Project project=context.getProject();
  if (aClass == null) {
    return null;
  }
  final PsiClass iterableClass=JavaPsiFacade.getInstance(project).findClass(containerClassName,aClass.getResolveScope());
  if (iterableClass == null) {
    return null;
  }
  final PsiSubstitutor substitutor1=resolveResult.getSubstitutor();
  final PsiSubstitutor substitutor=TypeConversionUtil.getClassSubstitutor(iterableClass,aClass,substitutor1);
  if (substitutor == null) {
    return null;
  }
  PsiType parameterType=substitutor.substitute(iterableClass.getTypeParameters()[0]);
  if (parameterType instanceof PsiCapturedWildcardType) {
    parameterType=((PsiCapturedWildcardType)parameterType).getWildcard();
  }
  if (parameterType != null) {
    if (parameterType instanceof PsiWildcardType) {
      if (((PsiWildcardType)parameterType).isExtends()) {
        return ((PsiWildcardType)parameterType).getBound();
      }
 else {
        return null;
      }
    }
    return parameterType;
  }
  return TypeUtils.getObjectType(context);
}
