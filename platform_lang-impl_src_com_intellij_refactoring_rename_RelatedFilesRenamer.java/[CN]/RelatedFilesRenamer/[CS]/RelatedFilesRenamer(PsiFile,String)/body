{
  final Collection<NestingTreeStructureProvider.ChildFileInfo> relatedFileInfos=NestingTreeStructureProvider.getFilesShownAsChildrenInProjectView(psiFile.getProject(),psiFile.getVirtualFile());
  for (  NestingTreeStructureProvider.ChildFileInfo info : relatedFileInfos) {
    final PsiFile relatedPsiFile=psiFile.getManager().findFile(info.file);
    if (relatedPsiFile == null)     continue;
    LOG.assertTrue(psiFile.getName().startsWith(info.namePartCommonWithParentFile) && relatedPsiFile.getName().startsWith(info.namePartCommonWithParentFile),psiFile.getName() + "," + relatedPsiFile.getName()+ ","+ info.namePartCommonWithParentFile);
    final String suffix=psiFile.getName().substring(info.namePartCommonWithParentFile.length());
    LOG.assertTrue(suffix.length() > 0,psiFile.getName() + "," + info.namePartCommonWithParentFile);
    if (!newName.endsWith(suffix)) {
      continue;
    }
    final String newRelatedFileName=newName.substring(0,newName.length() - suffix.length()) + relatedPsiFile.getName().substring(info.namePartCommonWithParentFile.length());
    myElements.add(relatedPsiFile);
    suggestAllNames(relatedPsiFile.getName(),newRelatedFileName);
  }
}
