{
  final Map<IProperty,PropertiesFile> propertiesFileMapping=new HashMap<IProperty,PropertiesFile>();
  for (  IProperty property : properties) {
    final PropertiesFile containingFile=property.getPropertiesFile();
    final PropertiesFile matched=findWithMatchedSuffix(containingFile,resourceBundle);
    if (matched != null) {
      propertiesFileMapping.put(property,matched);
    }
  }
  final Project project=resourceBundle.getProject();
  if (properties.size() != propertiesFileMapping.size() && Messages.NO == Messages.showYesNoDialog(project,"Source and target resource bundles properties files are not matched correctly. Copy properties anyway?","Resource Bundles Are not Matched",null)) {
    return;
  }
  WriteCommandAction.runWriteCommandAction(project,new Runnable(){
    @Override public void run(){
      if (!FileModificationService.getInstance().preparePsiElementsForWrite(ContainerUtil.map(propertiesFileMapping.values(),new Function<PropertiesFile,PsiElement>(){
        @Override public PsiElement fun(        PropertiesFile file){
          return file.getContainingFile();
        }
      }
)))       return;
      for (      Map.Entry<IProperty,PropertiesFile> entry : propertiesFileMapping.entrySet()) {
        final String value=entry.getKey().getValue();
        final PropertiesFile target=entry.getValue();
        target.addProperty(newName,value);
      }
    }
  }
);
}
