{
  final IProperty representative=PropertiesImplUtil.getProperty(elements[0]);
  final String key=representative.getKey();
  if (key == null) {
    return;
  }
  final ResourceBundle resourceBundle=representative.getPropertiesFile().getResourceBundle();
  final List<IProperty> properties=ContainerUtil.mapNotNull(resourceBundle.getPropertiesFiles(),new NullableFunction<PropertiesFile,IProperty>(){
    @Nullable @Override public IProperty fun(    PropertiesFile propertiesFile){
      return propertiesFile.findPropertyByKey(key);
    }
  }
);
  final PropertiesCopyDialog dlg=new PropertiesCopyDialog(properties,resourceBundle);
  if (dlg.showAndGet()) {
    final String propertyNewName=dlg.getCurrentPropertyName();
    final ResourceBundle destinationResourceBundle=dlg.getCurrentResourceBundle();
    copyPropertyToAnotherBundle(properties,propertyNewName,destinationResourceBundle);
  }
}
