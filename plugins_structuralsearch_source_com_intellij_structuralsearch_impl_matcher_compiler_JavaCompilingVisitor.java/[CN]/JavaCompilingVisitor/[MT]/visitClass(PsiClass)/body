{
  super.visitClass(psiClass);
  final MatchingHandler handler=myCompilingVisitor.getContext().getPattern().getHandler(psiClass);
  if (needsSupers(psiClass,handler)) {
    myCompilingVisitor.getContext().getPattern().setRequestsSuperInners(true);
  }
  GlobalCompilingVisitor.setFilter(handler,ClassFilter.getInstance());
  for (PsiElement element=psiClass.getFirstChild(); element != null; element=element.getNextSibling()) {
    if (element instanceof PsiTypeElement && element.getNextSibling() instanceof PsiErrorElement) {
      psiClass.putUserData(CompiledPattern.ALL_CLASS_CONTENT_VAR_KEY,element);
    }
  }
}
