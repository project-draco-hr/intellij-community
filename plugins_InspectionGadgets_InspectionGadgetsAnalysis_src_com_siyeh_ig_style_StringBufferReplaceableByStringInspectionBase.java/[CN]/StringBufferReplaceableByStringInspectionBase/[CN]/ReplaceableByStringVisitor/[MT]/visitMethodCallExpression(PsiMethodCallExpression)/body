{
  super.visitMethodCallExpression(expression);
  if (expression.getTextOffset() < myVariable.getTextOffset() || myToStringFound) {
    return;
  }
  final PsiMethod method=expression.resolveMethod();
  if (method == null) {
    myPossibleSideEffect=true;
    return;
  }
  final PsiClass aClass=method.getContainingClass();
  if (aClass == null) {
    myPossibleSideEffect=true;
    return;
  }
  final String name=aClass.getQualifiedName();
  if (CommonClassNames.JAVA_LANG_STRING_BUFFER.equals(name) || CommonClassNames.JAVA_LANG_STRING_BUILDER.equals(name)) {
    return;
  }
  if (isArgumentOfStringBuilderMethod(expression)) {
    return;
  }
  myPossibleSideEffect=true;
}
