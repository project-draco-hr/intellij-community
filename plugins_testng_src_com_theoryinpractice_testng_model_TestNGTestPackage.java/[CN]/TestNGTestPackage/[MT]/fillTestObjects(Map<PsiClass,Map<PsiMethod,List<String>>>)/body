{
  final String packageName=myConfig.getPersistantData().getPackageName();
  PsiPackage psiPackage=ApplicationManager.getApplication().runReadAction(new Computable<PsiPackage>(){
    @Nullable public PsiPackage compute(){
      return JavaPsiFacade.getInstance(myConfig.getProject()).findPackage(packageName);
    }
  }
);
  if (psiPackage == null) {
    throw CantRunException.packageNotFound(packageName);
  }
 else {
    TestSearchScope scope=myConfig.getPersistantData().getScope();
    SourceScope sourceScope=scope.getSourceScope(myConfig);
    TestClassFilter projectFilter=new TestClassFilter(sourceScope != null ? sourceScope.getGlobalSearchScope() : GlobalSearchScope.projectScope(myConfig.getProject()),myConfig.getProject(),true,true);
    TestClassFilter filter=projectFilter.intersectionWith(PackageScope.packageScope(psiPackage,true));
    calculateDependencies(null,classes,getSearchScope(),TestNGUtil.getAllTestClasses(filter,false));
    if (classes.size() == 0) {
      throw new CantRunException("No tests found in the package \"" + packageName + '\"');
    }
  }
}
