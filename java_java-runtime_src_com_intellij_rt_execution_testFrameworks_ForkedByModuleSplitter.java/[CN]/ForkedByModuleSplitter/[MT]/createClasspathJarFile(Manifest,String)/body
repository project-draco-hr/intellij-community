{
  final Attributes attributes=manifest.getMainAttributes();
  attributes.put(Attributes.Name.MANIFEST_VERSION,"1.0");
  String classpathForManifest="";
  int idx=0;
  int endIdx=0;
  while (endIdx >= 0) {
    endIdx=classpath.indexOf(File.pathSeparator,idx);
    String path=endIdx < 0 ? classpath.substring(idx) : classpath.substring(idx,endIdx);
    if (classpathForManifest.length() > 0) {
      classpathForManifest+=" ";
    }
    try {
      classpathForManifest+=new File(path).toURI().toURL().toString();
    }
 catch (    NoSuchMethodError e) {
      classpathForManifest+=new File(path).toURL().toString();
    }
    idx=endIdx + File.pathSeparator.length();
  }
  attributes.put(Attributes.Name.CLASS_PATH,classpathForManifest);
  File jarFile=File.createTempFile("classpath",".jar");
  ZipOutputStream jarPlugin=null;
  try {
    BufferedOutputStream out=new BufferedOutputStream(new FileOutputStream(jarFile));
    jarPlugin=new JarOutputStream(out,manifest);
  }
  finally {
    if (jarPlugin != null)     jarPlugin.close();
  }
  jarFile.deleteOnExit();
  return jarFile;
}
