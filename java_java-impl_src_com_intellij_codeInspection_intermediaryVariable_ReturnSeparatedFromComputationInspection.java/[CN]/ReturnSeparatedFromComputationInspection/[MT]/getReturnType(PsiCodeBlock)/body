{
  NavigatablePsiElement returnFrom=PsiTreeUtil.getNonStrictParentOfType(returnScope,PsiMethod.class,PsiLambdaExpression.class);
  if (returnFrom instanceof PsiMethod) {
    return ((PsiMethod)returnFrom).getReturnType();
  }
  if (returnFrom instanceof PsiLambdaExpression) {
    return LambdaUtil.getFunctionalInterfaceReturnType((PsiLambdaExpression)returnFrom);
  }
  return null;
}
