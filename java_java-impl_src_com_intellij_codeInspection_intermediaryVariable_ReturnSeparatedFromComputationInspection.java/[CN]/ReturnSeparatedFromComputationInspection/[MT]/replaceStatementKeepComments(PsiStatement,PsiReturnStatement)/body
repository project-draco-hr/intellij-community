{
  List<PsiComment> keptComments=new ArrayList<>();
  for (PsiElement element=replacedStatement.getFirstChild(); element != null; element=element.getNextSibling()) {
    if (element instanceof PsiComment) {
      keptComments.add((PsiComment)element);
    }
  }
  if (!keptComments.isEmpty()) {
    returnStatement=(PsiReturnStatement)returnStatement.copy();
    PsiElement lastReturnChild=returnStatement.getLastChild();
    Project project=returnStatement.getProject();
    PsiParserFacade parserFacade=PsiParserFacade.SERVICE.getInstance(project);
    PsiElementFactory elementFactory=JavaPsiFacade.getInstance(project).getElementFactory();
    if (lastReturnChild instanceof PsiComment && ((PsiComment)lastReturnChild).getTokenType() == JavaTokenType.END_OF_LINE_COMMENT) {
      String commentText=StringUtil.trimStart(lastReturnChild.getText(),"//");
      PsiComment inlineComment=elementFactory.createCommentFromText("/* " + commentText + " */",returnStatement);
      lastReturnChild=lastReturnChild.replace(inlineComment);
    }
    for (    PsiComment comment : keptComments) {
      lastReturnChild=returnStatement.addAfter(parserFacade.createWhiteSpaceFromText(" "),lastReturnChild);
      lastReturnChild=returnStatement.addAfter(comment,lastReturnChild);
    }
    CodeStyleManager.getInstance(project).reformat(returnStatement,true);
  }
  replacedStatement.replace(returnStatement);
}
