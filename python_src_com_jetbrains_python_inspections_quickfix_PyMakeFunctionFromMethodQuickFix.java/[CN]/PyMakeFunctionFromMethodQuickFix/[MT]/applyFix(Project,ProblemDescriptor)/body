{
  final PsiElement element=descriptor.getPsiElement();
  final PyFunction problemFunction=PsiTreeUtil.getParentOfType(element,PyFunction.class);
  if (problemFunction == null)   return;
  final PyClass containingClass=problemFunction.getContainingClass();
  if (containingClass == null)   return;
  PyUtil.deleteParameter(problemFunction,0);
  final PsiElement copy=problemFunction.copy();
  final PyStatementList classStatementList=containingClass.getStatementList();
  classStatementList.deleteChildRange(problemFunction,problemFunction);
  if (classStatementList.getStatements().length < 1) {
    classStatementList.add(PyElementGenerator.getInstance(project).createPassStatement());
  }
  final PsiFile file=containingClass.getContainingFile();
  file.addAfter(copy,containingClass);
}
