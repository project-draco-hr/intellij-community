{
  PrintStream oldOut=System.out;
  PrintStream oldErr=System.err;
  try {
    IdeaTestRunner testRunner=(IdeaTestRunner)getAgentClass(agentName).newInstance();
    Object out=SM_RUNNER ? System.out : (Object)new SegmentedOutputStream(System.out);
    Object err=SM_RUNNER ? System.err : (Object)new SegmentedOutputStream(System.err);
    if (!SM_RUNNER) {
      System.setOut(new PrintStream((OutputStream)out));
      System.setErr(new PrintStream((OutputStream)err));
    }
    if (ourCommandFileName != null) {
      if (!"none".equals(ourForkMode) || ourWorkingDirs != null && new File(ourWorkingDirs).length() > 0) {
        final List newArgs=new ArrayList();
        newArgs.add(agentName);
        newArgs.addAll(listeners);
        PrintStream printOutputStream=SM_RUNNER ? ((PrintStream)out) : ((SegmentedOutputStream)out).getPrintStream();
        PrintStream printErrStream=SM_RUNNER ? ((PrintStream)err) : ((SegmentedOutputStream)err).getPrintStream();
        return new JUnitForkedSplitter(ourWorkingDirs,ourForkMode,printOutputStream,printErrStream,newArgs).startSplitting(args,name,ourCommandFileName,ourRepeatCount);
      }
    }
    testRunner.setStreams(out,err,0);
    return testRunner.startRunnerWithArgs(args,listeners,name,ourCount,true);
  }
 catch (  Exception e) {
    e.printStackTrace(System.err);
    return -2;
  }
 finally {
    System.setOut(oldOut);
    System.setErr(oldErr);
  }
}
