{
  JPanel panel=ToolbarDecorator.createDecorator(myList).setPanelBorder(IdeBorderFactory.createTitledBorder("Ignored suffixes")).disableUpDownActions().setAddAction(new AnActionButtonRunnable(){
    @Override public void run(    AnActionButton button){
      final String result=Messages.showInputDialog(CommonDataKeys.PROJECT.getData(button.getDataContext()),"Suffixes to ignore (use comma to separate suffixes):","Add Ignored Suffixes",null);
      if (result != null) {
        mySuffixes.addAll(StringUtil.split(result,","));
        changed();
      }
    }
  }
).setRemoveAction(new AnActionButtonRunnable(){
    @Override public void run(    AnActionButton button){
      for (      Object v : myList.getSelectedValues()) {
        mySuffixes.remove(v);
      }
      changed();
    }
  }
).createPanel();
  myList.setCellRenderer(new ColoredListCellRenderer<String>(){
    @Override protected void customizeCellRenderer(    @NotNull JList list,    String suffix,    int index,    boolean selected,    boolean hasFocus){
      append(suffix);
      final Locale locale=PropertiesUtil.getLocale("_" + suffix + ".properties");
      if (locale != PropertiesUtil.DEFAULT_LOCALE) {
        if (PropertiesUtil.hasDefaultLanguage(locale)) {
          append(" ");
          append(PropertiesUtil.getPresentableLocale(locale),SimpleTextAttributes.GRAY_ATTRIBUTES);
        }
      }
 else {
        append("Default locale");
      }
    }
  }
);
  return panel;
}
