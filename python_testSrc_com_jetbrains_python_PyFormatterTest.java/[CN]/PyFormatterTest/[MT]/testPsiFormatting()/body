{
  String initial="def method_name(\n" + "   desired_impulse_response,\n" + " desired_response_parameters,\n"+ " inverse_filter_length, \n"+ " observed_impulse_response):\n"+ " #  Extract from here to ...\n"+ "   desired_impulse_response = {'dirac, 'gaussian', logistic_derivative'}\n"+ "return desired,                o";
  final PsiFile file=PyElementGenerator.getInstance(myFixture.getProject()).createDummyFile(LanguageLevel.PYTHON30,initial);
  final PsiElement reformatted=CodeStyleManager.getInstance(myFixture.getProject()).reformat(file);
  String expected="def method_name(\n" + "desired_impulse_response,\n" + "desired_response_parameters,\n"+ "inverse_filter_length,\n"+ "observed_impulse_response):\n"+ "#  Extract from here to ...\n"+ "    desired_impulse_response = {'dirac, '\n"+ "    gaussian\n"+ "    ', logistic_derivative'}\n"+ "    return desired, o";
  assertEquals(expected,reformatted.getText());
}
