{
  final PsiElement identifier=descriptor.getPsiElement();
  final PsiMethod method=(PsiMethod)identifier.getParent();
  final PsiCodeBlock methodBody=method.getBody();
  final PsiStatement statement=ControlFlowUtils.getOnlyStatementInBlock(methodBody);
  if (!(statement instanceof PsiSynchronizedStatement)) {
    return;
  }
  final PsiSynchronizedStatement synchronizedStatement=(PsiSynchronizedStatement)statement;
  final PsiCodeBlock body=synchronizedStatement.getBody();
  if (body == null) {
    return;
  }
  final PsiStatement[] statements=body.getStatements();
  if (statements.length > 0) {
    final PsiElement added=methodBody.addRangeBefore(statements[0],statements[statements.length - 1],synchronizedStatement);
    final CodeStyleManager codeStyleManager=CodeStyleManager.getInstance(project);
    codeStyleManager.reformat(added);
  }
  synchronizedStatement.delete();
  final PsiModifierList modifierList=method.getModifierList();
  modifierList.setModifierProperty(PsiModifier.SYNCHRONIZED,true);
}
