{
  PsiClass newClass;
  if (!moveAllClassesInFile) {
    for (    MoveClassHandler handler : MoveClassHandler.EP_NAME.getExtensions()) {
      newClass=handler.doMoveClass(aClass,moveDestination);
      if (newClass != null)       return newClass;
    }
  }
  PsiFile file=aClass.getContainingFile();
  final PsiPackage newPackage=JavaDirectoryService.getInstance().getPackage(moveDestination);
  newClass=aClass;
  final PsiDirectory containingDirectory=file.getContainingDirectory();
  if (!Comparing.equal(moveDestination.getVirtualFile(),containingDirectory != null ? containingDirectory.getVirtualFile() : null)) {
    LOG.assertTrue(file.getVirtualFile() != null,aClass);
    MoveFilesOrDirectoriesUtil.doMoveFile(file,moveDestination);
    if (newPackage != null && file instanceof PsiClassOwner && !FileTypeUtils.isInServerPageFile(file) && !PsiUtil.isModuleFile(file)) {
      String aClassName=aClass.getName();
      ((PsiClassOwner)file).setPackageName(newPackage.getQualifiedName());
      newClass=findClassByName((PsiClassOwner)file,aClassName);
      LOG.assertTrue(newClass != null,"name:" + aClassName + " file:"+ file+ " classes:"+ Arrays.toString(((PsiClassOwner)file).getClasses()));
    }
  }
  return newClass;
}
