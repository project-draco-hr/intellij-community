{
  ApplicationManager.getApplication().assertIsDispatchThread();
  List<Runnable> list;
synchronized (ACTION_AFTER_COMMIT) {
    list=document.getUserData(ACTION_AFTER_COMMIT);
    if (list != null) {
      list=new ArrayList<Runnable>(list);
      document.putUserData(ACTION_AFTER_COMMIT,null);
    }
  }
  if (list != null) {
    for (    final Runnable runnable : list) {
      runnable.run();
    }
  }
  if (!hasUncommitedDocuments() && !actionsWhenAllDocumentsAreCommitted.isEmpty()) {
    List<Object> keys=new ArrayList<Object>(actionsWhenAllDocumentsAreCommitted.keySet());
    for (    Object key : keys) {
      Runnable action=actionsWhenAllDocumentsAreCommitted.remove(key);
      try {
        myDocumentCommitProcessor.log("Running after commit runnable: ",null,false,key,action);
        int before=actionsWhenAllDocumentsAreCommitted.size();
        action.run();
        int after=actionsWhenAllDocumentsAreCommitted.size();
        if (before != after) {
          LOG.error("You must not call performWhenAllCommitted() from within after-commit handler " + action + ": "+ action.getClass());
        }
      }
 catch (      Throwable e) {
        LOG.error("During running " + action,e);
      }
    }
  }
}
