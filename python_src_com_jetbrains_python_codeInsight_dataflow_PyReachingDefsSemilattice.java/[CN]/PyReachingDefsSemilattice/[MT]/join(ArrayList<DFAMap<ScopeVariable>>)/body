{
  if (ins.isEmpty()) {
    return DFAMap.empty();
  }
  if (ins.size() == 1) {
    return ins.get(0);
  }
  final Set<String> resultNames=getResultNames(ins);
  if (resultNames == null || resultNames.isEmpty()) {
    return new DFAMap<ScopeVariable>();
  }
  final DFAMap<ScopeVariable> result=new DFAMap<ScopeVariable>();
  for (  String name : resultNames) {
    boolean isParameter=true;
    Set<PsiElement> declarations=new HashSet<PsiElement>();
    PsiElement scope=null;
    for (    DFAMap<ScopeVariable> map : ins) {
      final ScopeVariable variable=map.get(name);
      if (variable == null) {
        continue;
      }
      final PsiElement valueScope=variable.getScope();
      if (scope == null || scope == valueScope) {
        scope=valueScope;
        declarations.addAll(variable.getDeclarations());
      }
 else       if (PsiTreeUtil.isAncestor(valueScope,scope,false)) {
        scope=valueScope;
        declarations=new HashSet<PsiElement>(variable.getDeclarations());
      }
    }
    final ScopeVariable scopeVariable=new ScopeVariableImpl(name,isParameter,scope,declarations);
    result.put(name,scopeVariable);
  }
  return result;
}
