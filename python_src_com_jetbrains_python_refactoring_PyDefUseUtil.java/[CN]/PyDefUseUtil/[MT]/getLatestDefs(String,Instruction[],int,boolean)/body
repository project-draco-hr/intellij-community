{
  final Collection<ReadWriteInstruction> result=new LinkedHashSet<ReadWriteInstruction>();
  ControlFlowUtil.iteratePrev(instr,instructions,new Function<Instruction,ControlFlowUtil.Operation>(){
    @Override public ControlFlowUtil.Operation fun(    Instruction instruction){
      if (instruction instanceof ReadWriteInstruction) {
        final ReadWriteInstruction rwInstruction=(ReadWriteInstruction)instruction;
        final PsiElement element=instruction.getElement();
        final String name=elementName(element);
        final ReadWriteInstruction.ACCESS access=rwInstruction.getAccess();
        if ((access.isWriteAccess() || (acceptTypeAssertions && access.isAssertTypeAccess())) && Comparing.strEqual(name,varName)) {
          result.add(rwInstruction);
          return ControlFlowUtil.Operation.CONTINUE;
        }
      }
      return ControlFlowUtil.Operation.NEXT;
    }
  }
);
  return result;
}
