{
  UIUtil.invokeAndWaitIfNeeded(new Runnable(){
    @Override public void run(){
      new MavenResourceCompilerConfigurationGenerator(myProject,MavenProjectsManager.getInstance(myProject).getProjectsTreeForTests()).generateBuildConfiguration(false);
    }
  }
);
  try {
    CompilerTester tester=new CompilerTester(myProject,Arrays.asList(scope.getAffectedModules()));
    try {
      List<CompilerMessage> messages=tester.make(scope);
      for (      CompilerMessage message : messages) {
        if (message.getCategory() == CompilerMessageCategory.ERROR) {
          fail("Compilation failed with error: " + message.getMessage());
        }
      }
    }
  finally {
      tester.tearDown();
    }
  }
 catch (  Exception e) {
    throw new RuntimeException(e);
  }
}
