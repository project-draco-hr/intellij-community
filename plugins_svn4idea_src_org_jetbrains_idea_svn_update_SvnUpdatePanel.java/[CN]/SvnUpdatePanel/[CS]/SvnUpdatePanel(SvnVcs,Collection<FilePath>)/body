{
  super(vcs);
  init(roots);
  boolean descend=false;
  for (  FilePath root : roots) {
    if (root.isDirectory()) {
      descend=true;
      break;
    }
  }
  myDepthCombo.setVisible(descend);
  myDepthLabel.setVisible(descend);
  myDepthLabel.setLabelFor(myDepthCombo);
  final SvnConfiguration svnConfiguration=SvnConfiguration.getInstance(myVCS.getProject());
  myLockOnDemand.setSelected(svnConfiguration.isUpdateLockOnDemand());
  myLockOnDemand.addActionListener(new ActionListener(){
    public void actionPerformed(    final ActionEvent e){
      svnConfiguration.setUpdateLockOnDemand(myLockOnDemand.isSelected());
    }
  }
);
  myForceBox.setSelected(svnConfiguration.isForceUpdate());
  myIgnoreExternalsCheckBox.setSelected(svnConfiguration.isIgnoreExternals());
  myForceBox.addActionListener(new ActionListener(){
    @Override public void actionPerformed(    ActionEvent e){
      svnConfiguration.setForceUpdate(myForceBox.isSelected());
    }
  }
);
  myIgnoreExternalsCheckBox.addActionListener(new ActionListener(){
    @Override public void actionPerformed(    ActionEvent e){
      svnConfiguration.setIgnoreExternals(myIgnoreExternalsCheckBox.isSelected());
    }
  }
);
}
