{
  final Project project=groovyFile.getProject();
  final Module module=ModuleUtil.findModuleForPsiElement(groovyFile);
  Set<VirtualFile> jars=new HashSet<>();
  if (module != null) {
    ContainerUtil.addAll(jars,OrderEnumerator.orderEntries(module).getAllLibrariesAndSdkClassesRoots());
  }
  if (groovyFile.isScript() && GroovyScriptUtil.getScriptType(groovyFile) instanceof GantScriptType) {
    jars.addAll(GantScriptType.additionalScopeFiles(groovyFile));
  }
  final ArrayList<URL> urls=new ArrayList<>();
  for (  VirtualFile jar : jars) {
    VirtualFile localFile=PathUtil.getLocalFile(jar);
    if (localFile.getFileSystem() instanceof LocalFileSystem) {
      urls.add(VfsUtilCore.convertToURL(localFile.getUrl()));
    }
  }
  AntClassLoader loader;
synchronized (ourLock) {
    final Map<List<URL>,AntClassLoader> map=CachedValuesManager.getManager(project).getParameterizedCachedValue(project,KEY,PROVIDER,false,project);
    loader=map.get(urls);
    if (loader == null) {
      map.put(urls,loader=new AntClassLoader(urls));
    }
  }
  return loader.getAntObjects();
}
