{
  VirtualFile vDirectory;
  final VirtualFile virtualFile;
  final PsiFile containingFile;
  final GlobalSearchScope allScope=GlobalSearchScope.allScope(myManager.getProject());
  if (element instanceof PsiDirectory) {
    vDirectory=((PsiDirectory)element).getVirtualFile();
    virtualFile=null;
    containingFile=null;
  }
 else {
    containingFile=element.getContainingFile();
    if (containingFile == null)     return allScope;
    virtualFile=containingFile.getVirtualFile();
    if (virtualFile == null)     return allScope;
    vDirectory=virtualFile.getParent();
  }
  if (vDirectory == null)   return allScope;
  final ProjectFileIndex projectFileIndex=myProjectRootManager.getFileIndex();
  final Module module=projectFileIndex.getModuleForFile(vDirectory);
  if (module == null) {
    return containingFile == null || virtualFile.isDirectory() || allScope.contains(virtualFile) ? allScope : GlobalSearchScope.fileScope(containingFile).uniteWith(allScope);
  }
  boolean isTest=projectFileIndex.isInTestSourceContent(vDirectory);
  GlobalSearchScope scope=isTest ? GlobalSearchScope.moduleTestsWithDependentsScope(module) : GlobalSearchScope.moduleWithDependentsScope(module);
  if (virtualFile instanceof VirtualFileWithId && ENABLED_REF_BACK) {
    return RefResolveService.getInstance(myProject).restrictByBackwardIds(virtualFile,scope);
  }
  return scope;
}
