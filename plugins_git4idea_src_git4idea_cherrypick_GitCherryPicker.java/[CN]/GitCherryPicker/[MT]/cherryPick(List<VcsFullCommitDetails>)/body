{
  Map<GitRepository,List<VcsFullCommitDetails>> commitsInRoots=DvcsUtil.groupCommitsByRoots(myPlatformFacade.getRepositoryManager(myProject),commits);
  List<GitCommitWrapper> successfulCommits=ContainerUtil.newArrayList();
  List<GitCommitWrapper> alreadyPicked=ContainerUtil.newArrayList();
  AccessToken token=DvcsUtil.workingTreeChangeStarted(myProject);
  try {
    for (    Map.Entry<GitRepository,List<VcsFullCommitDetails>> entry : commitsInRoots.entrySet()) {
      GitRepository repository=entry.getKey();
      boolean result=cherryPick(repository,entry.getValue(),successfulCommits,alreadyPicked);
      repository.update();
      if (!result) {
        return;
      }
    }
    notifyResult(successfulCommits,alreadyPicked);
  }
  finally {
    DvcsUtil.workingTreeChangeFinished(myProject,token);
  }
}
