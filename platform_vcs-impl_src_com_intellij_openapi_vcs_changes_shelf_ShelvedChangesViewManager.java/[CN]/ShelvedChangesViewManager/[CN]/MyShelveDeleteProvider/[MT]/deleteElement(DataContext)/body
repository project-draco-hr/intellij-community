{
  final Project project=CommonDataKeys.PROJECT.getData(dataContext);
  if (project == null)   return;
  List<ShelvedChangeList> shelvedListsToDelete=TreeUtil.collectSelectedObjectsOfType(myTree,ShelvedChangeList.class);
  ArrayList<ShelvedChangeList> shelvedListsFromChanges=ContainerUtil.newArrayList(getLists(dataContext));
  shelvedListsFromChanges.removeAll(shelvedListsToDelete);
  List<ShelvedChange> changesToDelete=getChangesNotInLists(shelvedListsToDelete,notNullize(SHELVED_CHANGE_KEY.getData(dataContext)));
  List<ShelvedBinaryFile> binariesToDelete=getBinariesNotInLists(shelvedListsToDelete,notNullize(SHELVED_BINARY_FILE_KEY.getData(dataContext)));
  int changeListSize=shelvedListsToDelete.size();
  int fileListSize=binariesToDelete.size() + changesToDelete.size();
  if (fileListSize == 0 && changeListSize == 0)   return;
  String message=VcsBundle.message("shelve.changes.delete.items.confirm",constructDeleteFilesInfoMessage(fileListSize),changeListSize != 0 && fileListSize != 0 ? " and " : "",constructShelvedListInfoMessage(changeListSize,ContainerUtil.getFirstItem(shelvedListsToDelete)));
  int rc=Messages.showOkCancelDialog(myProject,message,VcsBundle.message("shelvedChanges.delete.title"),CommonBundle.message("button.delete"),CommonBundle.getCancelButtonText(),Messages.getWarningIcon());
  if (rc != Messages.OK)   return;
  for (  ShelvedChangeList changeList : shelvedListsToDelete) {
    ShelveChangesManager.getInstance(myProject).deleteChangeList(changeList);
  }
  for (  ShelvedChangeList list : shelvedListsFromChanges) {
    removeChangesFromChangeList(project,list,changesToDelete,binariesToDelete);
  }
}
