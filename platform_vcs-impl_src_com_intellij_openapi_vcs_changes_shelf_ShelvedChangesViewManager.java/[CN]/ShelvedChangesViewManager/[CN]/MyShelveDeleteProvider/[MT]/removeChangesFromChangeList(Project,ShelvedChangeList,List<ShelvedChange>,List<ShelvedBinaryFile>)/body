{
  final ArrayList<ShelvedBinaryFile> oldBinaries=new ArrayList<>(list.getBinaryFiles());
  final ArrayList<ShelvedChange> oldChanges=new ArrayList<>(list.getChanges(project));
  oldBinaries.removeAll(binaryFiles);
  oldChanges.removeAll(changes);
  final CommitContext commitContext=new CommitContext();
  final List<FilePatch> patches=new ArrayList<>();
  final List<VcsException> exceptions=new ArrayList<>();
  for (  ShelvedChange change : oldChanges) {
    try {
      patches.add(change.loadFilePatch(myProject,commitContext));
    }
 catch (    IOException e) {
      exceptions.add(new VcsException(e));
    }
catch (    PatchSyntaxException e) {
      exceptions.add(new VcsException(e));
    }
  }
  myShelveChangesManager.saveRemainingPatches(list,patches,oldBinaries,commitContext);
  if (!exceptions.isEmpty()) {
    String title=list.DESCRIPTION == null ? "" : list.DESCRIPTION;
    title=title.substring(0,Math.min(10,title.length()));
    AbstractVcsHelper.getInstance(myProject).showErrors(exceptions,"Deleting files from '" + title + "'");
  }
}
