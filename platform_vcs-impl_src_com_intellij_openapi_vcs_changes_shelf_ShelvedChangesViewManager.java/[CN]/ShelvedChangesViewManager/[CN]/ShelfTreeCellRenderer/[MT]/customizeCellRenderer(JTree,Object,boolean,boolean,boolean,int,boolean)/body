{
  DefaultMutableTreeNode node=(DefaultMutableTreeNode)value;
  Object nodeValue=node.getUserObject();
  if (nodeValue instanceof ShelvedChangeList) {
    ShelvedChangeList changeListData=(ShelvedChangeList)nodeValue;
    if (changeListData.isRecycled()) {
      myIssueLinkRenderer.appendTextWithLinks(changeListData.DESCRIPTION,SimpleTextAttributes.GRAYED_BOLD_ATTRIBUTES);
      setIcon(changeListData.isMarkedToDelete() ? DisabledToDeleteIcon : DisabledPatchIcon);
    }
 else {
      myIssueLinkRenderer.appendTextWithLinks(changeListData.DESCRIPTION);
      setIcon(PatchIcon);
    }
    int count=node.getChildCount();
    String numFilesText=spaceAndThinSpace() + count + " "+ StringUtil.pluralize("file",count)+ ",";
    append(numFilesText,SimpleTextAttributes.GRAYED_ATTRIBUTES);
    String date=DateFormatUtil.formatPrettyDateTime(changeListData.DATE);
    append(" " + date,SimpleTextAttributes.GRAYED_ATTRIBUTES);
  }
 else   if (nodeValue instanceof ShelvedChange) {
    ShelvedChange change=(ShelvedChange)nodeValue;
    final String movedMessage=myMoveRenameInfo.get(Couple.of(change.getBeforePath(),change.getAfterPath()));
    renderFileName(change.getBeforePath(),change.getFileStatus(),movedMessage);
  }
 else   if (nodeValue instanceof ShelvedBinaryFile) {
    ShelvedBinaryFile binaryFile=(ShelvedBinaryFile)nodeValue;
    String path=binaryFile.BEFORE_PATH;
    if (path == null) {
      path=binaryFile.AFTER_PATH;
    }
    final String movedMessage=myMoveRenameInfo.get(Couple.of(binaryFile.BEFORE_PATH,binaryFile.AFTER_PATH));
    renderFileName(path,binaryFile.getFileStatus(),movedMessage);
  }
}
