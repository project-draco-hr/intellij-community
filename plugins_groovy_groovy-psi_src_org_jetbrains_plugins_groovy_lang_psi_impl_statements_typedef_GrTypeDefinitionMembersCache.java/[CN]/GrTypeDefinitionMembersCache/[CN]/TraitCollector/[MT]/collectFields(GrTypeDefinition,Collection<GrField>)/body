{
  if (clazz.isInterface() && !clazz.isTrait())   return;
  if (clazz.isTrait()) {
    for (    GrField field : clazz.getCodeFields()) {
      collector.add(new GrTraitField(field,clazz,PsiSubstitutor.EMPTY));
    }
  }
  GrImplementsClause clause=clazz.getImplementsClause();
  if (clause == null)   return;
  PsiClassType[] types=clause.getReferencedTypes();
  List<PsiClassType.ClassResolveResult> traits=getSuperTraitsByCorrectOrder(types);
  for (  PsiClassType.ClassResolveResult resolveResult : traits) {
    GrTypeDefinition trait=(GrTypeDefinition)resolveResult.getElement();
    LOG.assertTrue(trait != null);
    List<CandidateInfo> traitFields=new TraitProcessor<PsiField>(trait,resolveResult.getSubstitutor()){
      protected void processTrait(      @NotNull GrTypeDefinition trait,      @NotNull PsiSubstitutor substitutor){
        for (        GrField field : trait.getCodeFields()) {
          addCandidate(field,substitutor);
        }
      }
    }
.getResult();
    for (    CandidateInfo candidateInfo : traitFields) {
      collector.add(new GrTraitField(((PsiField)candidateInfo.getElement()),clazz,candidateInfo.getSubstitutor()));
    }
  }
  if (clazz.isTrait()) {
    for (    GrField field : clazz.getCodeFields()) {
      collector.add(new GrTraitField(field,clazz,PsiSubstitutor.EMPTY));
    }
  }
}
