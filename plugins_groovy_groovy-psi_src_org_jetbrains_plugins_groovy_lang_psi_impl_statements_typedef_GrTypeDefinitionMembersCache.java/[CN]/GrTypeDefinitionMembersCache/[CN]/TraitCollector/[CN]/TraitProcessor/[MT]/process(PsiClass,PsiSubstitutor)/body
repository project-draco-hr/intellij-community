{
  if (!processed.add(trait))   return;
  processTrait(trait,substitutor);
  List<PsiClassType.ClassResolveResult> traits=getSuperTraitsByCorrectOrder(trait.getSuperTypes());
  for (  PsiClassType.ClassResolveResult resolveResult : traits) {
    PsiClass superClass=resolveResult.getElement();
    if (GrTraitUtil.isTrait(superClass)) {
      final PsiSubstitutor superSubstitutor=TypeConversionUtil.getSuperClassSubstitutor(superClass,trait,substitutor);
      process(superClass,superSubstitutor);
    }
  }
}
