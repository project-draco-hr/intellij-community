{
  if (arg instanceof Class) {
    out.append(((Class<?>)arg).getCanonicalName());
  }
 else   if (arg instanceof ParameterizedType) {
    ParameterizedType parameterizedType=(ParameterizedType)arg;
    writeJavaTypeName(parameterizedType.getRawType(),out);
    out.append('<');
    Type[] params=parameterizedType.getActualTypeArguments();
    for (int i=0; i < params.length; i++) {
      if (i != 0) {
        out.comma();
      }
      writeJavaTypeName(params[i],out);
    }
    out.append('>');
  }
 else   if (arg instanceof WildcardType) {
    WildcardType wildcardType=(WildcardType)arg;
    Type[] upperBounds=wildcardType.getUpperBounds();
    if (upperBounds == null) {
      throw new RuntimeException();
    }
    if (upperBounds.length != 1) {
      throw new RuntimeException();
    }
    out.append("? extends ");
    writeJavaTypeName(upperBounds[0],out);
  }
 else {
    out.append(String.valueOf(arg));
  }
}
