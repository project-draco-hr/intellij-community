{
  FlattenStatementsHelper flatthelper=new FlattenStatementsHelper();
  DirectGraph dgraph=flatthelper.buildDirectGraph(root);
  HashSet<Integer> setInit=new HashSet<Integer>();
  for (int i=0; i < 64; i++) {
    setInit.add(i);
  }
  factory=new FastSparseSetFactory<Integer>(setInit);
  extraVarVersions.put(dgraph.first.id,createFirstMap(mt,root));
  setCatchMaps(root,dgraph,flatthelper);
  HashSet<String> updated=new HashSet<String>();
  do {
    ssaStatements(dgraph,updated,false);
  }
 while (!updated.isEmpty());
  ssaStatements(dgraph,updated,true);
  ssuversions.initDominators();
}
