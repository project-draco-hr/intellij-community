{
  final PsiTypeParameter parameter=(PsiTypeParameter)myMatchingVisitor.getElement();
  final PsiElement[] children=psiTypeParameter.getChildren();
  final PsiElement[] children2=parameter.getChildren();
  final MatchingHandler handler=myMatchingVisitor.getMatchContext().getPattern().getHandler(children[0]);
  if (handler instanceof SubstitutionHandler) {
    myMatchingVisitor.setResult(((SubstitutionHandler)handler).handle(children2[0],myMatchingVisitor.getMatchContext()));
  }
 else {
    myMatchingVisitor.setResult(children[0].textMatches(children2[0]));
  }
  if (myMatchingVisitor.getResult() && children.length > 2) {
    if (children2.length == 2) {
      myMatchingVisitor.setResult(false);
      return;
    }
    if (!children[2].getFirstChild().textMatches(children2[2].getFirstChild())) {
      myMatchingVisitor.setResult(false);
      return;
    }
    myMatchingVisitor.setResult(myMatchingVisitor.matchInAnyOrder(children[2].getChildren(),children2[2].getChildren()));
  }
}
