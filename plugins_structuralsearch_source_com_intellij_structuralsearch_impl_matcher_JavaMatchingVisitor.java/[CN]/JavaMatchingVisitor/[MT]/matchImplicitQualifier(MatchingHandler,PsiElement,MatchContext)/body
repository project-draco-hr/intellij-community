{
  if (!(matchingHandler instanceof SubstitutionHandler)) {
    myMatchingVisitor.setResult(false);
    return;
  }
  final SubstitutionHandler substitutionHandler=(SubstitutionHandler)matchingHandler;
  final MatchPredicate predicate=substitutionHandler.getPredicate();
  if (substitutionHandler.getMinOccurs() != 0) {
    myMatchingVisitor.setResult(false);
    return;
  }
  if (predicate == null) {
    myMatchingVisitor.setResult(true);
    return;
  }
  if (target == null) {
    myMatchingVisitor.setResult(false);
    return;
  }
  if (target instanceof PsiModifierListOwner && ((PsiModifierListOwner)target).hasModifierProperty(PsiModifier.STATIC)) {
    myMatchingVisitor.setResult(predicate.match(null,PsiTreeUtil.getParentOfType(target,PsiClass.class),context));
  }
 else {
    final PsiElementFactory factory=JavaPsiFacade.getElementFactory(target.getProject());
    final PsiExpression implicitReference=factory.createExpressionFromText("this",target);
    myMatchingVisitor.setResult(predicate.match(null,implicitReference,context));
  }
}
