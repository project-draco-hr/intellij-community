{
  final PsiModifierList list2=(PsiModifierList)myMatchingVisitor.getElement();
  for (  @Modifier String aMODIFIERS : MODIFIERS) {
    if (list.hasModifierProperty(aMODIFIERS) && !list2.hasModifierProperty(aMODIFIERS)) {
      myMatchingVisitor.setResult(false);
      return;
    }
  }
  final PsiAnnotation[] annotations=list.getAnnotations();
  if (annotations.length > 0) {
    HashSet<PsiAnnotation> set=new HashSet<PsiAnnotation>(Arrays.asList(annotations));
    for (    PsiAnnotation annotation : annotations) {
      final PsiJavaCodeReferenceElement nameReferenceElement=annotation.getNameReferenceElement();
      if (nameReferenceElement != null && MatchOptions.MODIFIER_ANNOTATION_NAME.equals(nameReferenceElement.getText())) {
        final PsiAnnotationParameterList parameterList=annotation.getParameterList();
        final PsiNameValuePair[] attributes=parameterList.getAttributes();
        for (        PsiNameValuePair pair : attributes) {
          final PsiAnnotationMemberValue value=pair.getValue();
          if (value == null)           continue;
          if (value instanceof PsiArrayInitializerMemberValue) {
            boolean matchedOne=false;
            for (            PsiAnnotationMemberValue v : ((PsiArrayInitializerMemberValue)value).getInitializers()) {
              final String name=StringUtil.stripQuotesAroundValue(v.getText());
              if (MatchOptions.INSTANCE_MODIFIER_NAME.equals(name)) {
                if (isNotInstanceModifier(list2)) {
                  myMatchingVisitor.setResult(false);
                  return;
                }
 else {
                  matchedOne=true;
                }
              }
 else               if (list2.hasModifierProperty(name)) {
                matchedOne=true;
                break;
              }
            }
            if (!matchedOne) {
              myMatchingVisitor.setResult(false);
              return;
            }
          }
 else {
            final String name=StringUtil.stripQuotesAroundValue(value.getText());
            if (MatchOptions.INSTANCE_MODIFIER_NAME.equals(name)) {
              if (isNotInstanceModifier(list2)) {
                myMatchingVisitor.setResult(false);
                return;
              }
            }
 else             if (!list2.hasModifierProperty(name)) {
              myMatchingVisitor.setResult(false);
              return;
            }
          }
        }
        set.remove(annotation);
      }
    }
    myMatchingVisitor.setResult(set.size() == 0 || myMatchingVisitor.matchInAnyOrder(set.toArray(new PsiAnnotation[set.size()]),list2.getAnnotations()));
  }
 else {
    myMatchingVisitor.setResult(true);
  }
}
