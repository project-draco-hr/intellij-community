{
  if (resolved instanceof PsiModifierListOwner) {
    if (((PsiModifierListOwner)resolved).hasModifierProperty(PsiModifier.PACKAGE_LOCAL)) {
      PsiFile aFile=resolved.getContainingFile();
      if (aFile != null && !isInsideMoved(resolved)) {
        final PsiDirectory containingDirectory=aFile.getContainingDirectory();
        if (containingDirectory != null) {
          PsiPackage aPackage=JavaDirectoryService.getInstance().getPackage(containingDirectory);
          if (aPackage != null && !myTargetPackage.equalToPackage(aPackage)) {
            HashSet<PsiElement> reportedRefs=myReported.get(resolved);
            if (reportedRefs == null) {
              reportedRefs=new HashSet<>();
              myReported.put(resolved,reportedRefs);
            }
            PsiElement container=ConflictsUtil.getContainer(reference);
            if (!reportedRefs.contains(container)) {
              final String message=RefactoringBundle.message("0.uses.a.package.local.1",RefactoringUIUtil.getDescription(container,true),RefactoringUIUtil.getDescription(resolved,true));
              myConflicts.putValue(resolved,CommonRefactoringUtil.capitalize(message));
              reportedRefs.add(container);
            }
          }
        }
      }
    }
  }
}
