{
  final JPanel panel=new JPanel();
  final String[] text=myCell.getLatex();
  StringBuilder formula=new StringBuilder();
  boolean hasFormula=false;
  boolean isEscaped=false;
  boolean inFormula=false;
  for (  String string : text) {
    if (string.startsWith("```") && !isEscaped) {
      isEscaped=true;
    }
 else     if (StringUtil.trimTrailing(string).endsWith("```") && isEscaped) {
      isEscaped=false;
    }
    string=string.replace("\n"," \n");
    if ((StringUtil.trimTrailing(string).endsWith("$$") || string.startsWith("\\\\end{")) && inFormula) {
      inFormula=false;
      string=StringUtil.trimTrailing(string);
      if (string.endsWith("$$")) {
        string=StringUtil.trimEnd(string,"$$");
      }
      formula.append(string);
    }
 else     if (string.trim().startsWith("$$") && !isEscaped) {
      string=string.substring(2);
      formula.append(string);
      hasFormula=true;
      inFormula=true;
    }
 else     if (string.startsWith("\\") && !isEscaped || inFormula) {
      inFormula=true;
      hasFormula=true;
      if (string.contains("equation*"))       string=string.replace("equation*","align");
      formula.append(string);
    }
 else {
      if (hasFormula) {
        try {
          TeXFormula f=new TeXFormula(formula.toString());
          final Image image=f.createBufferedImage(TeXFormula.SERIF,new Float(20.),JBColor.BLACK,JBColor.WHITE);
          JLabel picLabel=new JLabel(new ImageIcon(image));
          panel.add(picLabel);
        }
 catch (        ParseException x) {
          LOG.error("Error parsing " + formula.toString() + " because of:"+ x.getMessage());
        }
        hasFormula=false;
        formula=new StringBuilder();
      }
    }
  }
  if (hasFormula) {
    try {
      TeXFormula f=new TeXFormula(formula.toString());
      final TeXIcon icon=f.createTeXIcon(TeXFormula.SERIF,20);
      JLabel picLabel=new JLabel(icon);
      panel.add(picLabel);
    }
 catch (    ParseException x) {
      LOG.error("Error parsing " + formula.toString() + " because of:"+ x.getMessage());
    }
  }
  setBackground(IpnbEditorUtil.getBackground());
  setOpaque(true);
  return panel;
}
