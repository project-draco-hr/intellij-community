{
  final PyStringLiteralExpression pyString=as(descriptor.getPsiElement(),PyStringLiteralExpression.class);
  if (pyString != null) {
    final PyElementGenerator elementGenerator=PyElementGenerator.getInstance(project);
    for (    ASTNode node : pyString.getStringNodes()) {
      final String nodeText=node.getText();
      final int prefixLength=PyStringLiteralExpressionImpl.getPrefixLength(nodeText);
      if (nodeText.substring(0,prefixLength).equalsIgnoreCase(myPrefix)) {
        final PyStringLiteralExpression replacement=elementGenerator.createStringLiteralAlreadyEscaped(nodeText.substring(prefixLength));
        node.getPsi().replace(replacement.getFirstChild());
      }
    }
  }
}
