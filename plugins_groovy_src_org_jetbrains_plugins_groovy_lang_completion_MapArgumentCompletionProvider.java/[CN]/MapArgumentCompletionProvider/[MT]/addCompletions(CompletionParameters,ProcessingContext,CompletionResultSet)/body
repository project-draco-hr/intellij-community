{
  PsiElement mapOrArgumentList=findMapOrArgumentList(parameters);
  if (mapOrArgumentList == null) {
    return;
  }
  if (isMapKeyCompletion(parameters)) {
    result.stopHere();
  }
  final Map<String,NamedArgumentDescriptor> map=ContainerUtil.newHashMap(calculateNamedArguments(mapOrArgumentList));
  for (  GrNamedArgument argument : getSiblingNamedArguments(mapOrArgumentList)) {
    map.remove(argument.getLabelName());
  }
  for (  Map.Entry<String,NamedArgumentDescriptor> entry : map.entrySet()) {
    LookupElementBuilder lookup=LookupElementBuilder.create(entry.getValue(),entry.getKey()).withInsertHandler(NamedArgumentInsertHandler.INSTANCE).withTailText(":");
    if (entry.getValue().getPriority() == NamedArgumentDescriptor.Priority.UNLIKELY) {
      lookup=lookup.withItemTextForeground(GroovySyntaxHighlighter.MAP_KEY.getDefaultAttributes().getForegroundColor());
    }
 else {
      lookup=lookup.withIcon(JetgroovyIcons.Groovy.DynamicProperty);
    }
    LookupElement customized=entry.getValue().customizeLookupElement(lookup);
    result.addElement(customized == null ? lookup : customized);
  }
}
