{
  final EditorColorsScheme colorsScheme=myConsoleEditor.getColorsScheme();
  final DelegateColorScheme scheme=new DelegateColorScheme(colorsScheme){
    @NotNull @Override public Color getDefaultBackground(){
      final Color color=getColor(ConsoleViewContentType.CONSOLE_BACKGROUND_KEY);
      return color == null ? super.getDefaultBackground() : color;
    }
  }
;
  myConsoleEditor.setColorsScheme(scheme);
  myHistoryViewer.setColorsScheme(scheme);
  myPanel.add(myHistoryViewer.getComponent());
  myPanel.add(myConsoleEditor.getComponent());
  setupComponents();
  DataManager.registerDataProvider(myPanel,new TypeSafeDataProviderAdapter(this));
  myHistoryViewer.getComponent().addComponentListener(new ComponentAdapter(){
    @Override public void componentResized(    ComponentEvent e){
      if (myForceScrollToEnd.getAndSet(false)) {
        scrollHistoryToEnd();
      }
    }
    @Override public void componentShown(    ComponentEvent e){
      componentResized(e);
    }
  }
);
  setPromptInner(myPrompt);
}
