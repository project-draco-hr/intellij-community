{
  final PsiVariable myVariable=(PsiVariable)startElement;
  if (changeMethodSignatureIfNeeded(myVariable))   return;
  if (!FileModificationService.getInstance().prepareFileForWrite(myVariable.getContainingFile()))   return;
  new WriteCommandAction.Simple(project,getText(),file){
    @Override protected void run() throws Throwable {
      try {
        myVariable.normalizeDeclaration();
        final PsiTypeElement typeElement=myVariable.getTypeElement();
        LOG.assertTrue(typeElement != null,myVariable.getClass());
        final PsiTypeElement newTypeElement=JavaPsiFacade.getInstance(file.getProject()).getElementFactory().createTypeElement(getReturnType());
        typeElement.replace(newTypeElement);
        JavaCodeStyleManager.getInstance(project).shortenClassReferences(myVariable);
        UndoUtil.markPsiFileForUndo(file);
      }
 catch (      IncorrectOperationException e) {
        LOG.error(e);
      }
    }
  }
.execute();
}
