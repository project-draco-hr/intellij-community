{
  PsiClassType alreadyComputed=myResultMap.get(classType);
  if (alreadyComputed != null) {
    return alreadyComputed;
  }
  final PsiClassType.ClassResolveResult classResolveResult=classType.resolveGenerics();
  final PsiClass psiClass=classResolveResult.getElement();
  final PsiSubstitutor substitutor=classResolveResult.getSubstitutor();
  if (psiClass == null)   return classType;
  PsiUtilCore.ensureValid(psiClass);
  final PsiClass mappedClass=mapClass(psiClass);
  if (mappedClass == null)   return null;
  PsiClassType mappedType=new PsiCorrectedClassType(classType.getLanguageLevel(),classType,new CorrectedResolveResult(psiClass,mappedClass,substitutor,classResolveResult));
  myResultMap.put(classType,mappedType);
  return mappedType;
}
