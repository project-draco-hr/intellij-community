{
  Project project=file.getProject();
  if (compiledConfigurations == null) {
    compiledConfigurations=myInspectionsPrecompiler.getCompiledConfigurations(myConfigurations);
  }
  if (compiledConfigurations == null) {
    precompileConfigurations();
    return null;
  }
  Collection<Pair<MatchResult,Configuration>> matches=new Matcher(project).findMatchesInFile(compiledConfigurations,file);
  List<ProblemDescriptor> problems=new ArrayList<ProblemDescriptor>();
  for (  Pair<MatchResult,Configuration> pair : matches) {
    MatchResult matchResult=pair.first;
    Configuration configuration=pair.second;
    PsiElement element=matchResult.getMatch();
    String name=configuration.getName();
    LocalQuickFix fix=createQuickFix(project,matchResult,configuration);
    ProblemDescriptor problemDescriptor=manager.createProblemDescriptor(element,name,fix,ProblemHighlightType.GENERIC_ERROR_OR_WARNING);
    problems.add(problemDescriptor);
  }
  return problems.toArray(new ProblemDescriptor[problems.size()]);
}
