{
  final Project project=file.getProject();
  if (compiledConfigurations == null)   return null;
  final List<ProblemDescriptor> problems=new ArrayList<ProblemDescriptor>();
  try {
    new Matcher(project).processMatchesInFile(compiledConfigurations,file,new PairProcessor<MatchResult,Configuration>(){
      public boolean process(      MatchResult matchResult,      Configuration configuration){
        PsiElement element=matchResult.getMatch();
        String name=configuration.getName();
        LocalQuickFix fix=createQuickFix(project,matchResult,configuration);
        ProblemDescriptor problemDescriptor=manager.createProblemDescriptor(element,name,fix,ProblemHighlightType.GENERIC_ERROR_OR_WARNING,isOnTheFly);
        problems.add(problemDescriptor);
        return true;
      }
    }
);
    return problems.toArray(new ProblemDescriptor[problems.size()]);
  }
 catch (  StackOverflowError e) {
    return null;
  }
}
