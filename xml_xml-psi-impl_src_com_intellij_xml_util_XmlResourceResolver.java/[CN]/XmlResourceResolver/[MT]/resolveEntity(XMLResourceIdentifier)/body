{
  String publicId=xmlResourceIdentifier.getLiteralSystemId() != null ? xmlResourceIdentifier.getLiteralSystemId() : xmlResourceIdentifier.getNamespace();
  if (publicId != null) {
    try {
      String userDir=new File(System.getProperty("user.dir")).toURI().getPath();
      if (new URI(publicId).getPath().startsWith(userDir)) {
        publicId=publicId.substring(publicId.indexOf(userDir) + userDir.length());
      }
    }
 catch (    Exception e) {
    }
  }
  PsiFile psiFile=resolve(xmlResourceIdentifier.getBaseSystemId(),publicId);
  if (psiFile == null && xmlResourceIdentifier.getBaseSystemId() != null) {
    psiFile=ExternalResourceManager.getInstance().getResourceLocation(xmlResourceIdentifier.getBaseSystemId(),myFile,null);
  }
  if (psiFile == null && xmlResourceIdentifier.getLiteralSystemId() != null && xmlResourceIdentifier.getNamespace() != null) {
    psiFile=resolve(xmlResourceIdentifier.getBaseSystemId(),publicId=xmlResourceIdentifier.getNamespace());
  }
  if (psiFile == null) {
    if (publicId != null && publicId.contains(":/")) {
      try {
        myErrorReporter.processError(new SAXParseException(XmlErrorMessages.message("xml.validate.external.resource.is.not.registered",publicId),publicId,null,0,0),ValidateXmlActionHandler.ProblemType.ERROR);
      }
 catch (      SAXException ignore) {
      }
      final XMLInputSource source=new XMLInputSource(xmlResourceIdentifier);
      source.setPublicId(publicId);
      source.setCharacterStream(new StringReader(""));
      return source;
    }
    return null;
  }
  XMLInputSource source=new XMLInputSource(xmlResourceIdentifier);
  if (xmlResourceIdentifier.getLiteralSystemId() == null) {
    VirtualFile virtualFile=psiFile.getVirtualFile();
    if (virtualFile != null) {
      final String url=VfsUtilCore.fixIDEAUrl(virtualFile.getUrl());
      source.setBaseSystemId(url);
      source.setSystemId(url);
    }
  }
  source.setPublicId(publicId);
  source.setCharacterStream(new StringReader(psiFile.getText()));
  return source;
}
