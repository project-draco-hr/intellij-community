{
  final RemoteState remoteState=new RemoteStateState(myProject,remoteConnection);
  final ExecutionEnvironment environment=new ExecutionEnvironmentBuilder(myProject,DefaultDebugExecutor.getDebugExecutorInstance()).setRunProfile(new MockConfiguration()).build();
  final DebuggerSession[] debuggerSession=new DebuggerSession[1];
  UIUtil.invokeAndWaitIfNeeded(new Runnable(){
    @Override public void run(){
      try {
        debuggerSession[0]=attachVirtualMachine(new GenericDebuggerRunner(),remoteState,environment,remoteConnection,pollConnection);
      }
 catch (      ExecutionException e) {
        fail(e.getMessage());
      }
    }
  }
);
  debuggerSession[0].getProcess().getExecutionResult().getProcessHandler().addProcessListener(new ProcessAdapter(){
    @Override public void onTextAvailable(    ProcessEvent event,    Key outputType){
      print(event.getText(),outputType);
    }
  }
);
  return debuggerSession[0];
}
