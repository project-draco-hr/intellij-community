{
  if (parent instanceof PsiCall) {
    final PsiExpressionList argumentList=((PsiCall)parent).getArgumentList();
    final MethodCandidateInfo.CurrentCandidateProperties properties=MethodCandidateInfo.getCurrentMethod(argumentList);
    if (properties != null && !properties.isApplicabilityCheck()) {
      final InferenceSession session=PsiResolveHelper.ourGraphGuard.doPreventingRecursion(parent,false,new Computable<InferenceSession>(){
        @Override public InferenceSession compute(){
          if (MethodCandidateInfo.isOverloadCheck()) {
            return startTopLevelInference(parent);
          }
          return CachedValuesManager.getCachedValue(parent,new CachedValueProvider<InferenceSession>(){
            @Nullable @Override public Result<InferenceSession> compute(){
              return new Result<InferenceSession>(startTopLevelInference(parent),PsiModificationTracker.MODIFICATION_COUNT);
            }
          }
);
        }
      }
);
      if (session != null) {
        final CompoundInitialState compoundInitialState=createState(session);
        final InitialInferenceState initialInferenceState=compoundInitialState.getInitialState(PsiTreeUtil.getParentOfType(argumentList,PsiCall.class));
        if (initialInferenceState != null) {
          return new InferenceSession(initialInferenceState).collectAdditionalAndInfer(parameters,arguments,properties,compoundInitialState.getInitialSubstitutor());
        }
      }
    }
  }
  final InferenceSession inferenceSession=new InferenceSession(typeParameters,partialSubstitutor,parent.getManager(),parent);
  inferenceSession.initExpressionConstraints(parameters,arguments,parent,null);
  return inferenceSession.infer(parameters,arguments,parent);
}
