{
  if (parent instanceof PsiCall) {
    final PsiExpressionList argumentList=((PsiCall)parent).getArgumentList();
    final MethodCandidateInfo.CurrentCandidateProperties properties=MethodCandidateInfo.getCurrentMethod(argumentList);
    if (properties != null && !properties.isApplicabilityCheck()) {
      final Pair<PsiSubstitutor,Map<PsiElement,InitialInferenceState>> session=PsiResolveHelper.ourGraphGuard.doPreventingRecursion(parent,false,new Computable<Pair<PsiSubstitutor,Map<PsiElement,InitialInferenceState>>>(){
        @Override public Pair<PsiSubstitutor,Map<PsiElement,InitialInferenceState>> compute(){
          return createValue(parent);
        }
      }
);
      if (session != null) {
        final InitialInferenceState initialInferenceState=session.second.get(PsiTreeUtil.getParentOfType(argumentList,PsiCall.class));
        if (initialInferenceState != null) {
          return new InferenceSession(initialInferenceState).collectAdditionalAndInfer(parameters,arguments,properties,session.first);
        }
      }
    }
  }
  final InferenceSession inferenceSession=new InferenceSession(typeParameters,partialSubstitutor,parent.getManager(),parent);
  inferenceSession.initExpressionConstraints(parameters,arguments,parent,null);
  return inferenceSession.infer(parameters,arguments,parent);
}
