{
  final String name=base.getModel().getFullName(element);
  if (name == null)   return null;
  final List<String> suspects=split(name,base);
  int matchingDegree=0;
  int matchPosition=0;
  patterns:   for (  Pair<String,MinusculeMatcher> patternAndMatcher : patternsAndMatchers) {
    final String pattern=patternAndMatcher.first;
    final MinusculeMatcher matcher=patternAndMatcher.second;
    if (!pattern.isEmpty()) {
      for (int j=matchPosition; j < suspects.size() - 1; j++) {
        String suspect=suspects.get(j);
        MatchResult suspectMatch=matches(base,pattern,matcher,suspect);
        if (suspectMatch != null) {
          matchingDegree+=suspectMatch.matchingDegree;
          matchPosition=j + 1;
          continue patterns;
        }
        matchingDegree-=(j + 1) * (j + 1);
      }
      return null;
    }
  }
  for (int j=matchPosition; j < suspects.size() - 1; j++) {
    matchingDegree-=(j + 1) * (j + 1);
  }
  return matchingDegree;
}
