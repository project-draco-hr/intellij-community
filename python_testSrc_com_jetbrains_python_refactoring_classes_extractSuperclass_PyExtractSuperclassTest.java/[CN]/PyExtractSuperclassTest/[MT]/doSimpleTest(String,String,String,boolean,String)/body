{
  try {
    String baseName="/refactoring/extractsuperclass/" + getTestName(true);
    myFixture.configureByFile(baseName + ".before.py");
    final PyClass clazz=findClass(className);
    final List<PyMemberInfo> members=new ArrayList<PyMemberInfo>();
    for (    String memberName : membersName) {
      final PyElement member=findMember(className,memberName);
      members.add(MembersManager.findMember(clazz,member));
    }
    new WriteCommandAction.Simple(myFixture.getProject()){
      @Override protected void run() throws Throwable {
        final String url=sameFile ? myFixture.getFile().getVirtualFile().getUrl() : myFixture.getFile().getVirtualFile().getParent().getUrl();
        PyExtractSuperclassHelper.extractSuperclass(clazz,members,superclassName,url);
      }
    }
.execute();
    myFixture.checkResultByFile(baseName + ".after.py");
  }
 catch (  Exception e) {
    if (expectedError == null)     throw e;
    assertEquals(expectedError,e.getMessage());
  }
}
