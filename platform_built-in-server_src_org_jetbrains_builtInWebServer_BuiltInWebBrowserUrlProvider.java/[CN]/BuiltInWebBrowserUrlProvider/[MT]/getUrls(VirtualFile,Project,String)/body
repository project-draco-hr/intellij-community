{
  if (currentAuthority != null && !compareAuthority(currentAuthority)) {
    return Collections.emptyList();
  }
  PathInfo info=WebServerPathToFileManager.getInstance(project).getPathInfo(file);
  if (info == null) {
    return Collections.emptyList();
  }
  int effectiveBuiltInServerPort=BuiltInServerOptions.getInstance().getEffectiveBuiltInServerPort();
  String path=info.getPath();
  String authority=currentAuthority == null ? "localhost:" + effectiveBuiltInServerPort : currentAuthority;
  List<Url> urls=new SmartList<>(Urls.newHttpUrl(authority,'/' + project.getName() + '/'+ path));
  String path2=info.getRootLessPathIfPossible();
  if (path2 != null) {
    urls.add(Urls.newHttpUrl(authority,'/' + project.getName() + '/'+ path2));
  }
  int defaultPort=BuiltInServerManager.getInstance().getPort();
  if (currentAuthority == null && defaultPort != effectiveBuiltInServerPort) {
    String defaultAuthority="localhost:" + defaultPort;
    urls.add(Urls.newHttpUrl(defaultAuthority,'/' + project.getName() + '/'+ path));
    if (path2 != null) {
      urls.add(Urls.newHttpUrl(defaultAuthority,'/' + project.getName() + '/'+ path2));
    }
  }
  return urls;
}
