{
  final PySdkService sdkService=PySdkService.getInstance();
  final List<String> sdkHomes=new ArrayList<String>();
  sdkHomes.addAll(VirtualEnvSdkFlavor.INSTANCE.suggestHomePaths());
  for (  PythonSdkFlavor flavor : PythonSdkFlavor.getApplicableFlavors()) {
    if (flavor instanceof VirtualEnvSdkFlavor)     continue;
    sdkHomes.addAll(flavor.suggestHomePaths());
  }
  Collections.sort(sdkHomes);
  sdkHomes.addAll(sdkService.getAddedSdks());
  for (  String sdkHome : SdkConfigurationUtil.filterExistingPaths(PythonSdkType.getInstance(),sdkHomes,getModel().getSdks())) {
    result.add(new PyDetectedSdk(sdkHome));
  }
  Iterables.removeIf(result,new Predicate<Sdk>(){
    @Override public boolean apply(    @Nullable Sdk input){
      return input != null && sdkService.isRemoved(input);
    }
  }
);
}
