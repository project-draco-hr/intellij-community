{
  final WarPlugin warPlugin=project.getPlugins().findPlugin(WarPlugin.class);
  if (warPlugin == null)   return null;
  final String webAppDirName=!project.hasProperty(WEB_APP_DIR_NAME_PROPERTY) ? "src/main/webapp" : String.valueOf(project.property(WEB_APP_DIR_NAME_PROPERTY));
  final File webAppDir=!project.hasProperty(WEB_APP_DIR_PROPERTY) ? new File(project.getProjectDir(),webAppDirName) : (File)project.property(WEB_APP_DIR_PROPERTY);
  List<WebConfiguration.WarModel> warModels=new ArrayList<WebConfiguration.WarModel>();
  for (  Task task : project.getTasks()) {
    if (task instanceof War) {
      final WarModelImpl warModel=new WarModelImpl(((War)task).getArchiveName(),webAppDirName,webAppDir);
      final List<WebConfiguration.WebResource> webResources=new ArrayList<WebConfiguration.WebResource>();
      final War warTask=(War)task;
      warModel.setWebXml(warTask.getWebXml());
      warTask.getRootSpec().walk(new Action<CopySpecInternal>(){
        @Override public void execute(        CopySpecInternal internal){
          final String relativePath=internal.getDestPath().getPathString();
          internal.getSource().visit(new FileVisitor(){
            @Override public void visitDir(            FileVisitDetails dirDetails){
              try {
                addPath(webResources,relativePath,dirDetails.getPath(),dirDetails.getFile());
              }
 catch (              Exception ignore) {
              }
            }
            @Override public void visitFile(            FileVisitDetails fileDetails){
              try {
                if (warTask.getWebXml() == null || !fileDetails.getFile().getCanonicalPath().equals(warTask.getWebXml().getCanonicalPath())) {
                  addPath(webResources,relativePath,fileDetails.getPath(),fileDetails.getFile());
                }
              }
 catch (              Exception ignore) {
              }
            }
          }
);
        }
      }
);
      warModel.setWebResources(webResources);
      warModel.setClasspath(warTask.getClasspath().getFiles());
      Manifest manifest=warTask.getManifest();
      if (manifest != null) {
        StringWriter writer=new StringWriter();
        manifest.writeTo(writer);
        warModel.setManifestContent(writer.toString());
      }
      warModels.add(warModel);
    }
  }
  return new WebConfigurationImpl(warModels);
}
