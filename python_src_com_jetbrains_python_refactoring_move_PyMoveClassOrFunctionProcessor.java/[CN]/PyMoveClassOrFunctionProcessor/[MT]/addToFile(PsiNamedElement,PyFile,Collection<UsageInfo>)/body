{
  List<PsiElement> topLevelAtDestination=new ArrayList<PsiElement>();
  for (  UsageInfo usage : usages) {
    final PsiElement e=usage.getElement();
    if (e != null && ScopeUtil.getResolveScopeOwner(e) == destination && getImportStatementByElement(e) == null) {
      PsiElement topLevel=PsiTreeUtil.findFirstParent(e,new Condition<PsiElement>(){
        @Override public boolean value(        PsiElement element){
          return element.getParent() == destination;
        }
      }
);
      if (topLevel != null) {
        topLevelAtDestination.add(topLevel);
      }
    }
  }
  if (topLevelAtDestination.isEmpty()) {
    return (PsiNamedElement)(destination.add(element));
  }
 else {
    Collections.sort(topLevelAtDestination,new Comparator<PsiElement>(){
      @Override public int compare(      PsiElement e1,      PsiElement e2){
        return PsiUtilCore.compareElementsByPosition(e1,e2);
      }
    }
);
    final PsiElement firstUsage=topLevelAtDestination.get(0);
    return (PsiNamedElement)destination.addBefore(element,firstUsage);
  }
}
