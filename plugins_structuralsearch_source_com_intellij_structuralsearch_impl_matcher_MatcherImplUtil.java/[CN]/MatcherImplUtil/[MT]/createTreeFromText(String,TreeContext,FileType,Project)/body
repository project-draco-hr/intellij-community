{
  PsiElementFactory elementFactory=PsiManager.getInstance(project).getElementFactory();
  if (fileType != StdFileTypes.JAVA) {
    String text1=context == TreeContext.File ? text : "<QQQ>" + text + "</QQQ>";
    final PsiFile fileFromText=PsiFileFactory.getInstance(project).createFileFromText("dummy." + fileType.getDefaultExtension(),text1);
    final XmlDocument document=HtmlUtil.getRealXmlDocument(((XmlFile)fileFromText).getDocument());
    if (context == TreeContext.File) {
      return new PsiElement[]{document};
    }
    return document.getRootTag().getValue().getChildren();
  }
 else   if (fileType == StdFileTypes.JAVA) {
    PsiElement[] result;
    if (context == TreeContext.Block) {
      PsiElement element=elementFactory.createStatementFromText("{\n" + text + "\n}",null);
      result=((PsiBlockStatement)element).getCodeBlock().getChildren();
      final int extraChildCount=4;
      if (result.length > extraChildCount) {
        PsiElement[] newresult=new PsiElement[result.length - extraChildCount];
        final int extraChildStart=2;
        System.arraycopy(result,extraChildStart,newresult,0,result.length - extraChildCount);
        result=newresult;
      }
 else {
        result=PsiElement.EMPTY_ARRAY;
      }
    }
 else     if (context == TreeContext.Class) {
      PsiElement element=elementFactory.createStatementFromText("class A {\n" + text + "\n}",null);
      PsiClass clazz=(PsiClass)((PsiDeclarationStatement)element).getDeclaredElements()[0];
      PsiElement startChild=clazz.getLBrace();
      if (startChild != null)       startChild=startChild.getNextSibling();
      PsiElement endChild=clazz.getRBrace();
      if (endChild != null)       endChild=endChild.getPrevSibling();
      List<PsiElement> resultElementsList=new ArrayList<PsiElement>(3);
      for (PsiElement el=startChild.getNextSibling(); el != endChild && el != null; el=el.getNextSibling()) {
        resultElementsList.add(el);
      }
      result=resultElementsList.toArray(new PsiElement[resultElementsList.size()]);
    }
 else {
      result=PsiFileFactory.getInstance(project).createFileFromText("__dummy.java",text).getChildren();
    }
    return result;
  }
  return PsiElement.EMPTY_ARRAY;
}
