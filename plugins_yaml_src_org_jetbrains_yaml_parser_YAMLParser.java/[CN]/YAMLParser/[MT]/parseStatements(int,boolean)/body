{
  passJunk();
  final PsiBuilder.Marker marker=mark();
  IElementType nodeType=null;
  if (getTokenType() == YAMLTokenTypes.TAG) {
    advanceLexer();
  }
  while (!eof() && (isJunk() || !eolSeen || myIndent + getIndentBonus(insideSequence) >= indent)) {
    if (isJunk()) {
      advanceLexer();
      continue;
    }
    if (!myStopTokensStack.isEmpty() && myStopTokensStack.peek().contains(getTokenType())) {
      rollBackToEol();
      break;
    }
    final IElementType parsedTokenType=parseSingleStatement(eolSeen ? myIndent : indent);
    if (nodeType == null) {
      if (parsedTokenType == YAMLElementTypes.SEQUENCE_ITEM) {
        nodeType=YAMLElementTypes.SEQUENCE;
      }
 else       if (parsedTokenType == YAMLElementTypes.KEY_VALUE_PAIR) {
        nodeType=YAMLElementTypes.MAPPING;
      }
 else {
        nodeType=YAMLElementTypes.COMPOUND_VALUE;
      }
    }
  }
  rollBackToEol();
  if (nodeType == null) {
    nodeType=YAMLElementTypes.COMPOUND_VALUE;
  }
  marker.done(nodeType);
}
