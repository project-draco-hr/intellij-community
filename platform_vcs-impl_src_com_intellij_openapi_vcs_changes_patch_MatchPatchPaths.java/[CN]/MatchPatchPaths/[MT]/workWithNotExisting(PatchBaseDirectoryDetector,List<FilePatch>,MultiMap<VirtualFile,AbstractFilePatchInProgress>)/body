{
  for (  FilePatch patch : newOrWithoutMatches) {
    final String[] strings=patch.getAfterName().replace('\\','/').split("/");
    Pair<VirtualFile,Integer> best=null;
    for (int i=strings.length - 2; i >= 0; --i) {
      final String name=strings[i];
      final Collection<VirtualFile> files=findFilesFromIndex(directoryDetector,name);
      if (!files.isEmpty()) {
        for (        VirtualFile file : files) {
          Pair<VirtualFile,Integer> pair=compareNamesImpl(strings,file,i);
          if (pair != null && pair.getSecond() < i) {
            if (best == null || pair.getSecond() < best.getSecond()) {
              best=pair;
            }
          }
        }
      }
    }
    if (best != null) {
      final AbstractFilePatchInProgress patchInProgress=createPatchInProgress(patch,best.getFirst());
      if (patchInProgress == null)       break;
      processStipUp(patchInProgress,best.getSecond());
      result.putValue(best.getFirst(),patchInProgress);
    }
 else {
      final AbstractFilePatchInProgress patchInProgress=createPatchInProgress(patch,myBaseDir);
      if (patchInProgress == null)       break;
      result.putValue(myBaseDir,patchInProgress);
    }
  }
}
