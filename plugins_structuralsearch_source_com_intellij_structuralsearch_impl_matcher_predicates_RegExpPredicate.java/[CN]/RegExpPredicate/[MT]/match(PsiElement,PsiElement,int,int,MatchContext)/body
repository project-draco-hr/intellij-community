{
  if (matchedNode == null)   return false;
  String text;
  text=myNodeTextGenerator != null ? myNodeTextGenerator.getText(matchedNode) : getMeaningfulText(matchedNode);
  boolean result=doMatch(text,start,end,context,matchedNode);
  if (!result) {
    if (matchedNode instanceof PsiIdentifier)     matchedNode=matchedNode.getParent();
    if (matchedNode instanceof PsiJavaCodeReferenceElement || matchedNode instanceof PsiClass) {
      PsiElement element=(matchedNode instanceof PsiJavaCodeReferenceElement) ? ((PsiJavaCodeReferenceElement)matchedNode).resolve() : matchedNode;
      if (element instanceof PsiClass) {
        String previousText=text;
        text=((PsiClass)element).getQualifiedName();
        if (text != null && text.equals(previousText))         text=((PsiClass)element).getName();
        if (text != null) {
          result=doMatch(text,start,end,context,matchedNode);
        }
      }
    }
 else     if (matchedNode instanceof PsiLiteralExpression) {
      result=doMatch(matchedNode.getText(),start,end,context,matchedNode);
    }
  }
  return result;
}
