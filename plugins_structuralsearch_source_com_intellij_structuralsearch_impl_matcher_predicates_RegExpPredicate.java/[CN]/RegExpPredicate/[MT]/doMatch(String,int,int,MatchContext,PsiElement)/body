{
  if (from != 0 || end != -1) {
    text=text.substring(from,end == -1 ? text.length() : end);
  }
  if (simpleString) {
    return (caseSensitive) ? text.equals(regexp) : text.equalsIgnoreCase(regexp);
  }
  if (!multiline && text.contains("\n"))   setMultiline(true);
  final Matcher matcher=pattern.matcher(text);
  if (matcher.matches()) {
    for (int i=1; i <= matcher.groupCount(); ++i) {
      context.getResult().addSon(new MatchResultImpl(baseHandlerName + "_" + i,matcher.group(i),new SmartPsiPointer(matchedElement),matcher.start(i),matcher.end(i),target));
    }
    return true;
  }
 else {
    return false;
  }
}
