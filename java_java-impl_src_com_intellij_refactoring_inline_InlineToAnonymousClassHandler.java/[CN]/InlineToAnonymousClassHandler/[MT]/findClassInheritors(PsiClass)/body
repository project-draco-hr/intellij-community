{
  final Collection<PsiElement> inheritors=new ArrayList<PsiElement>();
  if (!ProgressManager.getInstance().runProcessWithProgressSynchronously(new Runnable(){
    @Override public void run(){
      ApplicationManager.getApplication().runReadAction(new Runnable(){
        @Override public void run(){
          final PsiClass inheritor=ClassInheritorsSearch.search(element).findFirst();
          if (inheritor != null) {
            inheritors.add(inheritor);
          }
 else {
            final PsiFunctionalExpression functionalExpression=FunctionalExpressionSearch.search(element).findFirst();
            if (functionalExpression != null) {
              inheritors.add(functionalExpression);
            }
          }
        }
      }
);
    }
  }
,"Searching for class \"" + element.getQualifiedName() + "\" inheritors ...",true,element.getProject()))   return false;
  return inheritors.isEmpty();
}
