{
synchronized (myLock) {
    if (myInitialized && !myDirty)     return;
    mySchemasIterator.consume(new PairConsumer<VirtualFile,NullableLazyValue<JsonSchemaObject>>(){
      @Override public void consume(      VirtualFile key,      NullableLazyValue<JsonSchemaObject> value){
        if (!myInitialized || !myId2Key.containsValue(key)) {
          final JsonSchemaObject object=value.getValue();
          if (object != null) {
            JsonSchemaReader.registerObjectsExportedDefinitions(key,JsonSchemaExportedDefinitions.this,object);
          }
        }
      }
    }
);
    myDirty=false;
    myInitialized=true;
  }
}
