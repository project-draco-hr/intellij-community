{
  if (!super.match(matchNode,engine)) {
    return false;
  }
  for (  Entry<MatchProperties,RuleValue> rule : matchNode.getRules().entrySet()) {
    RuleValue value=rule.getValue();
switch (rule.getKey()) {
case EXPRENT_INVOCATION_PARAMETER:
      if (value.isVariable()) {
        if (value.parameter < lstParameters.size()) {
          if (!engine.checkAndSetVariableValue(value.value.toString(),lstParameters.get(value.parameter))) {
            return false;
          }
        }
 else {
          return false;
        }
      }
    break;
case EXPRENT_INVOCATION_CLASS:
  if (!value.value.equals(this.classname)) {
    return false;
  }
break;
case EXPRENT_INVOCATION_SIGNATURE:
if (!value.value.equals(this.name + this.stringDescriptor)) {
return false;
}
break;
}
}
return true;
}
