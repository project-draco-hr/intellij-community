{
  boolean isRequiredSelectionEnabled=computeRequiredSelectionStatus();
  String stateMessage="";
  final Object root=myTree.getModel().getRoot();
  if (root instanceof CheckedTreeNode) {
    final int[] selectedModulesCount={0};
    TreeUtil.traverse((CheckedTreeNode)root,new TreeUtil.Traverse(){
      @Override public boolean accept(      Object node){
        if (node instanceof DataNodeCheckedTreeNode && ((DataNodeCheckedTreeNode)node).isChecked() && myDependencyAwareDataKeys.contains((((DataNodeCheckedTreeNode)node).myDataNode.getKey()))) {
          selectedModulesCount[0]++;
        }
        return true;
      }
    }
);
    stateMessage=String.format("%1$d Modules. %2$d selected",myModulesCount,selectedModulesCount[0]);
  }
  return new SelectionState(isRequiredSelectionEnabled,stateMessage);
}
