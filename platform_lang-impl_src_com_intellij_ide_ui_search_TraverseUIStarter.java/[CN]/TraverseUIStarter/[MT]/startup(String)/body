{
  final HashMap<SearchableConfigurable,TreeSet<OptionDescription>> options=new HashMap<>();
  SearchUtil.processProjectConfigurables(ProjectManager.getInstance().getDefaultProject(),options);
  Element root=new Element(OPTIONS);
  for (  SearchableConfigurable configurable : options.keySet()) {
    Element configurableElement=new Element(CONFIGURABLE);
    final String id=configurable.getId();
    if (id == null)     continue;
    configurableElement.setAttribute(ID,id);
    configurableElement.setAttribute(CONFIGURABLE_NAME,configurable.getDisplayName());
    final TreeSet<OptionDescription> sortedOptions=options.get(configurable);
    writeOptions(configurableElement,sortedOptions);
    if (configurable instanceof ConfigurableWrapper) {
      final UnnamedConfigurable wrapped=((ConfigurableWrapper)configurable).getConfigurable();
      if (wrapped instanceof SearchableConfigurable) {
        configurable=(SearchableConfigurable)wrapped;
      }
    }
    if (configurable instanceof KeymapPanel) {
      processKeymap(configurableElement);
    }
 else     if (configurable instanceof OptionsContainingConfigurable) {
      processOptionsContainingConfigurable((OptionsContainingConfigurable)configurable,configurableElement);
    }
 else     if (configurable instanceof PluginManagerConfigurable) {
      final TreeSet<OptionDescription> descriptions=wordsToOptionDescriptors(Collections.singleton(AvailablePluginsManagerMain.MANAGE_REPOSITORIES));
      for (      OptionDescription description : descriptions) {
        append(null,AvailablePluginsManagerMain.MANAGE_REPOSITORIES,description.getOption(),configurableElement);
      }
    }
 else     if (configurable instanceof AllFileTemplatesConfigurable) {
      processFileTemplates(configurableElement);
    }
    root.addContent(configurableElement);
    configurable.disposeUIResources();
  }
  final File file=new File(outputPath);
  if (!file.isFile()) {
    file.getParentFile().mkdirs();
    file.createNewFile();
  }
  JDOMUtil.writeDocument(new Document(root),outputPath,"\n");
  System.out.println("Searchable options index builder completed");
}
