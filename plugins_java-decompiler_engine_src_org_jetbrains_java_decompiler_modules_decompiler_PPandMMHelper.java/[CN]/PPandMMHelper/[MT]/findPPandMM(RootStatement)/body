{
  FlattenStatementsHelper flatthelper=new FlattenStatementsHelper();
  DirectGraph dgraph=flatthelper.buildDirectGraph(root);
  LinkedList<DirectNode> stack=new LinkedList<DirectNode>();
  stack.add(dgraph.first);
  HashSet<DirectNode> setVisited=new HashSet<DirectNode>();
  boolean res=false;
  while (!stack.isEmpty()) {
    DirectNode node=stack.removeFirst();
    if (setVisited.contains(node)) {
      continue;
    }
    setVisited.add(node);
    res|=processExprentList(node.exprents);
    stack.addAll(node.succs);
  }
  return res;
}
