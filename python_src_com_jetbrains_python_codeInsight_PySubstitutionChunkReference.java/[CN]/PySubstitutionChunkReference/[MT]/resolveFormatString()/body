{
  final PyArgumentList argumentList=getArgumentList(getElement());
  if (argumentList != null && argumentList.getArguments().length > 0) {
    final PyExpression[] arguments=argumentList.getArguments();
    boolean isStarArgument=arguments.length == 1 && arguments[0] instanceof PyStarArgument;
    if (isStarArgument)     return getUnderStarExpression(arguments);
    boolean isKeywordSubstitution=myChunk.getMappingKey() != null;
    if (isKeywordSubstitution) {
      return argumentList.getKeywordArgument(myChunk.getMappingKey());
    }
 else {
      final int position=myChunk.getPosition() == null ? myPosition : myChunk.getPosition();
      if (position < arguments.length)       return arguments[position];
      if (arguments[0] instanceof PyBinaryExpression && ((PyBinaryExpression)arguments[0]).isOperator("+")) {
        return processNotNestedBinaryExpression((PyBinaryExpression)arguments[0]);
      }
    }
  }
  return null;
}
