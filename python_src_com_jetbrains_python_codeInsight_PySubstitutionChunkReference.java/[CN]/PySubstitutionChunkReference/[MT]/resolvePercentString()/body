{
  final PyBinaryExpression binaryExpression=PsiTreeUtil.getParentOfType(getElement(),PyBinaryExpression.class);
  if (binaryExpression != null) {
    final PyExpression rightExpression=binaryExpression.getRightExpression();
    if (rightExpression instanceof PyParenthesizedExpression) {
      final PyParenthesizedExpression expression=(PyParenthesizedExpression)rightExpression;
      final PyExpression containedExpression=expression.getContainedExpression();
      if (containedExpression instanceof PyTupleExpression) {
        final PyExpression[] elements=((PySequenceExpression)containedExpression).getElements();
        if (elements.length > myPosition) {
          return elements[myPosition];
        }
      }
    }
 else     if (rightExpression instanceof PyDictLiteralExpression) {
      if (myChunk.getMappingKey() != null) {
        final PyKeyValueExpression[] keyValueExpressions=((PyDictLiteralExpression)rightExpression).getElements();
        for (        PyKeyValueExpression keyValueExpression : keyValueExpressions) {
          final PyStringLiteralExpression key=(PyStringLiteralExpression)keyValueExpression.getKey();
          if (key.getStringValue().equals(myChunk.getMappingKey())) {
            return key;
          }
        }
      }
    }
  }
  return null;
}
