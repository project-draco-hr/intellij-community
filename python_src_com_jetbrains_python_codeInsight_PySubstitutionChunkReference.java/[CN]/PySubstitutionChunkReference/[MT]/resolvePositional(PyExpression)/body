{
  PyExpression containedExpression=expression;
  if (expression instanceof PyParenthesizedExpression) {
    containedExpression=PyPsiUtils.flattenParens(expression);
  }
  PsiElement result=null;
  if (containedExpression instanceof PyTupleExpression) {
    myIgnoreUnresolved=false;
    final PyExpression[] elements=((PySequenceExpression)containedExpression).getElements();
    if (elements.length > myPosition) {
      result=elements[myPosition];
    }
  }
 else   if (containedExpression instanceof PyBinaryExpression && ((PyBinaryExpression)containedExpression).isOperator("+")) {
    result=resolveNotNestedBinaryExpression((PyBinaryExpression)containedExpression);
  }
 else   if (myPosition == 0) {
    result=containedExpression;
  }
 else {
    myIgnoreUnresolved=false;
  }
  return result;
}
