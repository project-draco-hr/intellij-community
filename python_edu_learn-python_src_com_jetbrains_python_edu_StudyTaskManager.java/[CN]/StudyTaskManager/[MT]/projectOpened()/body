{
  ApplicationManager.getApplication().invokeLater(new DumbAwareRunnable(){
    @Override public void run(){
      ApplicationManager.getApplication().runWriteAction(new DumbAwareRunnable(){
        @Override public void run(){
          if (myCourse != null) {
            StartupManager.getInstance(myProject).runWhenProjectIsInitialized(new Runnable(){
              @Override public void run(){
                ToolWindowManager.getInstance(myProject).getToolWindow(ToolWindowId.PROJECT_VIEW).show(null);
                FileEditor[] editors=FileEditorManager.getInstance(myProject).getSelectedEditors();
                if (editors.length > 0) {
                  JComponent focusedComponent=editors[0].getPreferredFocusedComponent();
                  if (focusedComponent != null) {
                    IdeFocusManager.getInstance(myProject).requestFocus(focusedComponent,true);
                  }
                }
              }
            }
);
            UISettings.getInstance().HIDE_TOOL_STRIPES=false;
            UISettings.getInstance().fireUISettingsChanged();
            ToolWindowManager toolWindowManager=ToolWindowManager.getInstance(myProject);
            String toolWindowId=StudyToolWindowFactory.STUDY_TOOL_WINDOW;
            try {
              Method method=toolWindowManager.getClass().getDeclaredMethod("registerToolWindow",String.class,JComponent.class,ToolWindowAnchor.class,boolean.class,boolean.class,boolean.class);
              method.setAccessible(true);
              method.invoke(toolWindowManager,toolWindowId,null,ToolWindowAnchor.LEFT,true,true,true);
            }
 catch (            Exception e) {
              final ToolWindow toolWindow=toolWindowManager.getToolWindow(toolWindowId);
              if (toolWindow == null)               toolWindowManager.registerToolWindow(toolWindowId,true,ToolWindowAnchor.RIGHT,myProject,true);
            }
            final ToolWindow studyToolWindow=toolWindowManager.getToolWindow(toolWindowId);
            if (studyToolWindow != null) {
              StudyUtils.updateStudyToolWindow(myProject);
              studyToolWindow.show(null);
            }
            addShortcut(StudyNextWindowAction.SHORTCUT,StudyNextWindowAction.ACTION_ID);
            addShortcut(StudyPrevWindowAction.SHORTCUT,StudyPrevWindowAction.ACTION_ID);
            addShortcut(StudyShowHintAction.SHORTCUT,StudyShowHintAction.ACTION_ID);
            addShortcut(StudyNextWindowAction.SHORTCUT2,StudyNextWindowAction.ACTION_ID);
          }
        }
      }
);
    }
  }
);
}
