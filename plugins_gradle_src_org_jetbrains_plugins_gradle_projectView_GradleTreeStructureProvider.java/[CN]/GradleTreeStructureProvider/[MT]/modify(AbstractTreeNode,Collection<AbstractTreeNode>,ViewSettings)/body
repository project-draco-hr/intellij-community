{
  Project project=parent.getProject();
  if (project == null)   return children;
  if (parent instanceof ProjectViewProjectNode) {
    return getProjectNodeChildren(project,children);
  }
  if (parent instanceof ProjectViewModuleGroupNode) {
    Collection<AbstractTreeNode> modifiedChildren=ContainerUtil.newSmartList();
    for (    AbstractTreeNode child : children) {
      if (child instanceof ProjectViewModuleNode) {
        Module module=((ProjectViewModuleNode)child).getValue();
        if (!showUnderModuleGroup(module))         continue;
        GradleProjectViewModuleNode sourceSetNode=getGradleSourceSetNode(project,(ProjectViewModuleNode)child,settings);
        child=sourceSetNode != null ? sourceSetNode : child;
      }
 else       if (child instanceof PsiDirectoryNode) {
        GradleSourceSetDirectoryNode sourceSetNode=getGradleSourceSetNode(project,(PsiDirectoryNode)child,settings);
        if (sourceSetNode != null && !showUnderModuleGroup(sourceSetNode.myModule))         continue;
        child=sourceSetNode != null ? sourceSetNode : child;
      }
      modifiedChildren.add(child);
    }
    return modifiedChildren;
  }
  if (parent instanceof GradleProjectViewModuleNode) {
    Module module=((GradleProjectViewModuleNode)parent).getValue();
    String projectPath=ExternalSystemApiUtil.getExternalProjectPath(module);
    Collection<AbstractTreeNode> modifiedChildren=ContainerUtil.newSmartList();
    for (    AbstractTreeNode child : children) {
      if (child instanceof PsiDirectoryNode) {
        PsiDirectory psiDirectory=((PsiDirectoryNode)child).getValue();
        if (psiDirectory != null) {
          final VirtualFile virtualFile=psiDirectory.getVirtualFile();
          if (projectPath != null && FileUtil.isAncestor(projectPath,virtualFile.getPath(),false)) {
            continue;
          }
        }
      }
      modifiedChildren.add(child);
    }
    return modifiedChildren;
  }
  if (parent instanceof PsiDirectoryNode) {
    Collection<AbstractTreeNode> modifiedChildren=ContainerUtil.newSmartList();
    for (    AbstractTreeNode child : children) {
      if (child instanceof PsiDirectoryNode) {
        GradleSourceSetDirectoryNode sourceSetNode=getGradleSourceSetNode(project,(PsiDirectoryNode)child,settings);
        child=sourceSetNode != null ? sourceSetNode : child;
      }
      modifiedChildren.add(child);
    }
    return modifiedChildren;
  }
  return children;
}
