{
  Collection<AbstractTreeNode> modifiedChildren=ContainerUtil.newSmartList();
  ProjectFileIndex fileIndex=ProjectRootManager.getInstance(project).getFileIndex();
  for (  AbstractTreeNode child : children) {
    Pair<VirtualFile,PsiDirectoryNode> parentNodePair=null;
    if (child instanceof ProjectViewModuleGroupNode) {
      final ProjectViewModuleGroupNode groupNode=(ProjectViewModuleGroupNode)child;
      final Collection<AbstractTreeNode> groupNodeChildren=groupNode.getChildren();
      for (      final AbstractTreeNode node : groupNodeChildren) {
        if (node instanceof PsiDirectoryNode) {
          final PsiDirectoryNode psiDirectoryNode=(PsiDirectoryNode)node;
          final PsiDirectory psiDirectory=psiDirectoryNode.getValue();
          if (psiDirectory == null) {
            parentNodePair=null;
            break;
          }
          final VirtualFile virtualFile=psiDirectory.getVirtualFile();
          final Module module=fileIndex.getModuleForFile(virtualFile);
          if (!ExternalSystemApiUtil.isExternalSystemAwareModule(GradleConstants.SYSTEM_ID,module)) {
            parentNodePair=null;
            break;
          }
          if (parentNodePair == null || VfsUtilCore.isAncestor(virtualFile,parentNodePair.first,false)) {
            parentNodePair=Pair.pair(virtualFile,psiDirectoryNode);
          }
 else           if (!VfsUtilCore.isAncestor(parentNodePair.first,virtualFile,false)) {
            parentNodePair=null;
            break;
          }
        }
 else {
          parentNodePair=null;
          break;
        }
      }
    }
    modifiedChildren.add(parentNodePair != null ? parentNodePair.second : child);
  }
  return modifiedChildren;
}
