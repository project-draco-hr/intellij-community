{
  for (int i=2; i >= 0; i--) {
    E[] lstOwn=lstElements.get(i);
    E[] lstExtern=map.lstElements.get(i);
    int externsize=lstExtern.length;
    if (lstOwn.length < externsize) {
      lstOwn=ensureCapacity(lstOwn,externsize,true);
      lstElements.set(i,lstOwn);
    }
    int ownsize=lstOwn.length;
    int minsize=ownsize > externsize ? externsize : ownsize;
    for (int j=minsize - 1; j >= 0; j--) {
      E second=lstExtern[j];
      if (second != null) {
        E first=lstOwn[j];
        if (first == null) {
          lstOwn[j]=union.copy(second);
          size++;
        }
 else {
          union.union(first,second);
        }
      }
    }
  }
}
