{
  List<Location> results=Collections.emptyList();
  String paramName=null;
  int idx=path.indexOf('[');
  if (idx >= 0) {
    paramName=path.substring(idx);
    path=path.substring(0,idx);
  }
  if (SUITE_PROTOCOL.equals(protocol)) {
    path=StringUtil.trimEnd(path,".");
    PsiClass aClass=ClassUtil.findPsiClass(PsiManager.getInstance(project),path,null,true,scope);
    if (aClass != null) {
      results=ContainerUtil.newSmartList();
      results.add(createClassNavigatable(paramName,aClass));
    }
 else {
      results=collectMethodNavigatables(path,project,scope,paramName);
    }
  }
 else   if (TEST_PROTOCOL.equals(protocol)) {
    results=collectMethodNavigatables(path,project,scope,paramName);
  }
  return results;
}
