{
  DataFlowInspectionTest.addJavaxNullabilityAnnotations(myFixture);
  myFixture.addClass("package custom;" + "public @interface CheckForNull {}");
  final NullableNotNullManager nnnManager=NullableNotNullManager.getInstance(getProject());
  nnnManager.setNullables("custom.CheckForNull");
  Disposer.register(getTestRootDisposable(),new Disposable(){
    @Override public void dispose(){
      nnnManager.setNullables();
    }
  }
);
  myFixture.addClass("package foo;" + "import static java.lang.annotation.ElementType.*;" + "@javax.annotation.meta.TypeQualifierDefault(METHOD) "+ "@javax.annotation.Nonnull "+ "public @interface ReturnValuesAreNonnullByDefault {}");
  myFixture.addFileToProject("foo/package-info.java","@ReturnValuesAreNonnullByDefault package foo;");
  myFixture.configureFromExistingVirtualFile(myFixture.copyFileToProject(getTestName(false) + ".java","foo/Classes.java"));
  myFixture.enableInspections(myInspection);
  myFixture.checkHighlighting(true,false,true);
}
