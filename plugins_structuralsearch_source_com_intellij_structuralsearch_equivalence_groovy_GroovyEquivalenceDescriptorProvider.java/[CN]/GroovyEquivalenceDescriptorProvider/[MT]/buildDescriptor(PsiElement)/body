{
  final EquivalenceDescriptorBuilder builder=new EquivalenceDescriptorBuilder();
  if (e instanceof GrVariableDeclaration) {
    return builder.elements(((GrVariableDeclaration)e).getVariables());
  }
 else   if (e instanceof GrParameter) {
    final GrParameter p=(GrParameter)e;
    return builder.element(p.getNameIdentifierGroovy()).optionally(p.getTypeElementGroovy()).optionallyInPattern(p.getDefaultInitializer()).role(p.getNameIdentifierGroovy(),ChildRole.VARIABLE_NAME);
  }
 else   if (e instanceof GrVariable) {
    final GrVariable v=(GrVariable)e;
    return builder.element(v.getNameIdentifierGroovy()).optionally(v.getTypeElementGroovy()).optionallyInPattern(v.getInitializerGroovy()).role(v.getNameIdentifierGroovy(),ChildRole.VARIABLE_NAME);
  }
 else   if (e instanceof GrMethod) {
    final GrMethod m=(GrMethod)e;
    return builder.element(m.getNameIdentifierGroovy()).elements(m.getParameters()).optionally(m.getReturnTypeElementGroovy()).optionallyInPattern(m.getBlock()).role(m.getNameIdentifierGroovy(),ChildRole.FUNCTION_NAME);
  }
 else   if (e instanceof GrForInClause) {
    final GrForInClause f=(GrForInClause)e;
    return builder.element(f.getDeclaredVariable()).element(f.getIteratedExpression());
  }
 else   if (e instanceof GrReferenceList) {
    return builder.inAnyOrder(((GrReferenceList)e).getReferenceElements());
  }
 else   if (e instanceof GrCodeBlock) {
    return builder.codeBlock(((GrStatementOwner)e).getStatements());
  }
  return null;
}
