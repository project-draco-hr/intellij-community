{
  if (element instanceof PsiDirectory) {
    final PsiDirectory psiDirectory=(PsiDirectory)element;
    final VirtualFile vFile=psiDirectory.getVirtualFile();
    final Project project=psiDirectory.getProject();
    SourceFolder sourceFolder;
    Icon symbolIcon;
    if (vFile.getParent() == null && vFile.getFileSystem() instanceof ArchiveFileSystem) {
      symbolIcon=PlatformIcons.JAR_ICON;
    }
 else     if (ProjectRootsUtil.isModuleContentRoot(vFile,project)) {
      Module module=ProjectRootManager.getInstance(project).getFileIndex().getModuleForFile(vFile);
      symbolIcon=module != null ? ModuleType.get(module).getIcon() : PlatformIcons.CONTENT_ROOT_ICON_CLOSED;
    }
 else     if ((sourceFolder=ProjectRootsUtil.getModuleSourceRoot(vFile,project)) != null) {
      symbolIcon=SourceRootPresentation.getSourceRootIcon(sourceFolder);
    }
 else     if (JrtFileSystem.isModuleRoot(vFile)) {
      symbolIcon=AllIcons.Nodes.JavaModuleRoot;
    }
 else     if (JavaDirectoryService.getInstance().getPackage(psiDirectory) != null) {
      symbolIcon=PlatformIcons.PACKAGE_ICON;
    }
 else     if (!Registry.is("ide.hide.excluded.files") && ProjectRootManager.getInstance(project).getFileIndex().isExcluded(vFile)) {
      symbolIcon=AllIcons.Modules.ExcludeRoot;
    }
 else {
      symbolIcon=PlatformIcons.DIRECTORY_CLOSED_ICON;
    }
    return ElementBase.createLayeredIcon(element,symbolIcon,0);
  }
  return null;
}
