{
  if (checkIndexAndRecreateIfNeed(project,indexVersion,canonicalIndexName)) {
    ClassFilesIndexStorageReader<K,V> index=null;
    IOException exception=null;
    final File projectBuildSystemDirectory=BuildManager.getInstance().getProjectSystemDirectory(project);
    final File indexDir=ClassFilesIndexStorageBase.getIndexDir(canonicalIndexName,projectBuildSystemDirectory);
    try {
      index=new ClassFilesIndexStorageReader<>(indexDir,keyDescriptor,valueExternalizer);
    }
 catch (    final IOException e) {
      exception=e;
      PersistentHashMap.deleteFilesStartingWith(ClassFilesIndexStorageBase.getIndexFile(indexDir));
    }
    if (exception != null) {
      recreateIndex(canonicalIndexName,indexVersion,projectBuildSystemDirectory,indexDir);
      myIndex=null;
      myMappings=null;
    }
 else {
      myIndex=index;
      try {
        myMappings=new Mappings(BuildDataManager.getMappingsRoot(projectBuildSystemDirectory),false);
      }
 catch (      final IOException e) {
        throw new RuntimeException(e);
      }
    }
  }
 else {
    myIndex=null;
    myMappings=null;
  }
}
