{
  super(project,false);
  setTitle("Close Task");
  myTaskLabel.setText(task.getSummary());
  myTaskLabel.setIcon(task.getIcon());
  TaskRepository repository=task.getRepository();
  boolean visible=task.isIssue() && repository != null && repository.getRepositoryType().getPossibleTaskStates().contains(TaskState.RESOLVED);
  myCloseIssue.setVisible(visible);
  myTaskManager=(TaskManagerImpl)TaskManager.getManager(project);
  myCloseIssue.setSelected(visible && myTaskManager.getState().closeIssue);
  if (myTaskManager.isVcsEnabled()) {
    myCommitChanges.setEnabled(!task.getChangeLists().isEmpty());
    myCommitChanges.setSelected(myTaskManager.getState().commitChanges);
    if (myTaskManager.getActiveVcs().getType() == VcsType.distributed) {
      boolean enabled=!task.getBranches(true).isEmpty() && !task.getBranches(false).isEmpty();
      myMergeBranches.setEnabled(enabled);
      myMergeBranches.setSelected(enabled && myTaskManager.getState().mergeBranch);
    }
 else {
      myMergeBranches.setVisible(false);
    }
  }
 else {
    myVcsPanel.setVisible(false);
  }
  init();
}
