{
  final PsiMethod method=(PsiMethod)parameter.getDeclarationScope();
  PsiMethod[] overrides=OverridingMethodsSearch.search(method,true).toArray(PsiMethod.EMPTY_ARRAY);
  for (int i=0; i < overrides.length; i++) {
    final PsiElement navigationElement=overrides[i].getNavigationElement();
    if (navigationElement instanceof PsiMethod) {
      overrides[i]=(PsiMethod)navigationElement;
    }
  }
  List<PsiElement> elementsToSearch=new ArrayList<PsiElement>(overrides.length + 1);
  elementsToSearch.add(parameter);
  int idx=method.getParameterList().getParameterIndex(parameter);
  for (  PsiMethod override : overrides) {
    final PsiParameter[] parameters=override.getParameterList().getParameters();
    if (idx < parameters.length) {
      elementsToSearch.add(parameters[idx]);
    }
  }
  return PsiUtilCore.toPsiElementArray(elementsToSearch);
}
