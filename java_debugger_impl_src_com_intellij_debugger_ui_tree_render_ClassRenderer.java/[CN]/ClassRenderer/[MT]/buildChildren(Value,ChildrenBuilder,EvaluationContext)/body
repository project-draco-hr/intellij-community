{
  DebuggerManagerThreadImpl.assertIsManagerThread();
  final ValueDescriptorImpl parentDescriptor=(ValueDescriptorImpl)builder.getParentDescriptor();
  final NodeManager nodeManager=builder.getNodeManager();
  final NodeDescriptorFactory nodeDescriptorFactory=builder.getDescriptorManager();
  List<DebuggerTreeNode> children=new ArrayList<DebuggerTreeNode>();
  if (value instanceof ObjectReference) {
    final ObjectReference objRef=(ObjectReference)value;
    final ReferenceType refType=objRef.referenceType();
    List<Field> fields=refType.allFields();
    if (!fields.isEmpty()) {
      for (      Field field : fields) {
        if (shouldDisplay(evaluationContext,objRef,field)) {
          children.add(nodeManager.createNode(createFieldDescriptor(parentDescriptor,nodeDescriptorFactory,objRef,field,evaluationContext),evaluationContext));
        }
      }
      if (children.isEmpty()) {
        children.add(nodeManager.createMessageNode(DebuggerBundle.message("message.node.class.no.fields.to.display")));
      }
 else       if (XDebuggerSettingsManager.getInstance().getDataViewSettings().isSortValues()) {
        Collections.sort(children,NodeManagerImpl.getNodeComparator());
      }
    }
 else {
      children.add(nodeManager.createMessageNode(MessageDescriptor.CLASS_HAS_NO_FIELDS.getLabel()));
    }
  }
  builder.setChildren(children);
}
