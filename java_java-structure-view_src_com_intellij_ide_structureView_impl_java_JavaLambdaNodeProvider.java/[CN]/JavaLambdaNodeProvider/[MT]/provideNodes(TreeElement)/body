{
  if (node instanceof PsiMethodTreeElement || node instanceof PsiFieldTreeElement || node instanceof ClassInitializerTreeElement|| node instanceof JavaLambdaTreeElement) {
    final PsiElement el=((PsiTreeElementBase)node).getElement();
    if (el != null) {
      final List<JavaLambdaTreeElement> result=new ArrayList<>();
      el.accept(new JavaRecursiveElementVisitor(){
        @Override public void visitLambdaExpression(        PsiLambdaExpression expression){
          super.visitLambdaExpression(expression);
          result.add(new JavaLambdaTreeElement(expression));
        }
        @Override public void visitClass(        PsiClass aClass){
        }
      }
);
      return result;
    }
  }
  return Collections.emptyList();
}
