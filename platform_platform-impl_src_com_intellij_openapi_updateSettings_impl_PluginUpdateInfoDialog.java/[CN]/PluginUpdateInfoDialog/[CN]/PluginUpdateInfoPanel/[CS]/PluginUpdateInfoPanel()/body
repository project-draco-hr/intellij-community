{
  myPluginsToUpdateLabel.setVisible(true);
  myPluginsPanel.setVisible(true);
  final DetectedPluginsPanel foundPluginsPanel=new DetectedPluginsPanel();
  foundPluginsPanel.addAll(myUploadedPlugins);
  TableUtil.ensureSelectionExists(foundPluginsPanel.getEntryTable());
  foundPluginsPanel.addStateListener(new DetectedPluginsPanel.Listener(){
    @Override public void stateChanged(){
      final Set<String> skipped=foundPluginsPanel.getSkippedPlugins();
      final PluginDownloader any=ContainerUtil.find(myUploadedPlugins,new Condition<PluginDownloader>(){
        @Override public boolean value(        PluginDownloader plugin){
          return !skipped.contains(plugin.getPluginId());
        }
      }
);
      getOKAction().setEnabled(any != null);
    }
  }
);
  myPluginsPanel.add(foundPluginsPanel,BorderLayout.CENTER);
  configureMessageArea(myMessageArea);
}
