{
  myApplication.assertWriteAccessAllowed();
synchronized (myLock) {
    List<Range> affectedRanges=new ArrayList<Range>();
    boolean wasEnd=false;
    boolean simple=true;
    for (    Range range : myRanges) {
      if (!range.isValid()) {
        LOG.warn("Rollback of invalid range");
        return;
      }
      boolean check;
      if (range.getOffset1() == range.getOffset2()) {
        check=lines.get(range.getOffset1());
      }
 else {
        check=checkRange(lines,range.getOffset1(),range.getOffset2());
      }
      if (check) {
        if (wasEnd)         simple=false;
        affectedRanges.add(range);
      }
 else {
        if (!affectedRanges.isEmpty())         wasEnd=true;
      }
    }
    if (simple) {
      rollbackChangesSimple(affectedRanges);
    }
 else {
      rollbackChangesComplex(affectedRanges);
    }
  }
}
