{
  final SvnVcs vcs=SvnVcs.getInstance(project);
  final List<VirtualFile> addedVFiles=new ArrayList<>();
  final Map<VirtualFile,File> copyFromMap=new HashMap<>();
  final Set<VirtualFile> recursiveItems=new HashSet<>();
  fillAddedFiles(project,vcs,addedVFiles,copyFromMap,recursiveItems);
  if (addedVFiles.isEmpty())   return;
  final VcsShowConfirmationOption.Value value=vcs.getAddConfirmation().getValue();
  if (value != VcsShowConfirmationOption.Value.DO_NOTHING_SILENTLY) {
    runNotUnderWriteAction(project,new Runnable(){
      @Override public void run(){
        final AbstractVcsHelper vcsHelper=AbstractVcsHelper.getInstance(project);
        final Collection<VirtualFile> filesToProcess=promptAboutAddition(vcs,addedVFiles,value,vcsHelper);
        if (filesToProcess != null && !filesToProcess.isEmpty()) {
          final List<VcsException> exceptions=new ArrayList<>();
          runInBackground(project,"Adding files to Subversion",createAdditionRunnable(project,vcs,copyFromMap,filesToProcess,exceptions));
          if (!exceptions.isEmpty()) {
            vcsHelper.showErrors(exceptions,SvnBundle.message("add.files.errors.title"));
          }
        }
      }
    }
);
  }
}
