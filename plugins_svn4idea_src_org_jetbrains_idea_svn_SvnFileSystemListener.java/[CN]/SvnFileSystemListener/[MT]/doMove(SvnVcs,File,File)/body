{
  long srcTime=src.lastModified();
  try {
    final boolean isUndo=isUndo(vcs);
    final String list=isUndo ? null : SvnChangelistListener.getCurrentMapping(vcs,src);
    WorkingCopyFormat format=vcs.getWorkingCopyFormat(src);
    final boolean is17OrLater=format.isOrGreater(WorkingCopyFormat.ONE_DOT_SEVEN);
    if (is17OrLater) {
      Status srcStatus=getFileStatus(vcs,src);
      final File toDir=dst.getParentFile();
      Status dstStatus=getFileStatus(vcs,toDir);
      final boolean srcUnversioned=srcStatus == null || srcStatus.is(StatusType.STATUS_UNVERSIONED);
      if (srcUnversioned && (dstStatus == null || dstStatus.is(StatusType.STATUS_UNVERSIONED))) {
        return false;
      }
      if (srcUnversioned) {
        Status dstWasStatus=getFileStatus(vcs,dst);
        if (dstWasStatus == null || dstWasStatus.is(StatusType.STATUS_UNVERSIONED)) {
          return false;
        }
      }
      if (for17move(vcs,src,dst,isUndo,srcStatus))       return false;
    }
 else {
      if (for16move(vcs,src,dst,isUndo))       return false;
    }
    if (!isUndo && list != null) {
      SvnChangelistListener.putUnderList(vcs.getProject(),list,dst);
    }
    dst.setLastModified(srcTime);
  }
 catch (  VcsException e) {
    addToMoveExceptions(vcs.getProject(),e);
    return false;
  }
  return true;
}
