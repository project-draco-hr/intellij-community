{
  TableUtil.stopEditing(myTable);
  final PsiNameHelper nameHelper=PsiNameHelper.getInstance(project);
  final ClassPatternValidator validator=new ClassPatternValidator(nameHelper);
  for (  EntryPointsManagerBase.ClassPattern pattern : myModifiedPatterns) {
    final String errorText=validator.getErrorText(pattern.pattern);
    if (errorText != null) {
      return errorText;
    }
    final String subst=pattern.method.replace("*","");
    if (!subst.isEmpty()) {
      if (!nameHelper.isIdentifier(subst)) {
        return "Method pattern '" + pattern.method + "' must be a valid java identifier, only '*' are accepted as placeholders";
      }
    }
  }
  return null;
}
