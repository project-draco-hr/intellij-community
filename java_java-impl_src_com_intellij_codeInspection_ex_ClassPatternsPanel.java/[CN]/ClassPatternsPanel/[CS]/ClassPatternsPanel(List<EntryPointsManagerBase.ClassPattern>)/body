{
  super(new BorderLayout());
  myModifiedPatterns=patterns;
  myTable=createTableForPatterns();
  final String addPatternMessage="Add Class Name Pattern";
  final String addClassMessage="Add Class";
  final ToolbarDecorator toolbarDecorator=ToolbarDecorator.createDecorator(myTable).setAddAction(new AnActionButtonRunnable(){
    @Override public void run(    AnActionButton button){
      Project project=CommonDataKeys.PROJECT.getData(DataManager.getInstance().getDataContext(myTable));
      if (project == null)       project=ProjectManager.getInstance().getDefaultProject();
      TreeClassChooser chooser=TreeClassChooserFactory.getInstance(project).createWithInnerClassesScopeChooser(addClassMessage,GlobalSearchScope.allScope(project),ClassFilter.ALL,null);
      chooser.showDialog();
      final PsiClass selected=chooser.getSelected();
      if (selected != null) {
        insertRow(selected.getQualifiedName());
      }
    }
  }
).setAddActionName(addClassMessage).setAddIcon(IconUtil.getAddClassIcon()).addExtraAction(new AnActionButton(addPatternMessage,IconUtil.getAddPatternIcon()){
    @Override public void actionPerformed(    AnActionEvent e){
      final PsiNameHelper nameHelper=PsiNameHelper.getInstance(e.getProject());
      String selectedPattern=Messages.showInputDialog("Pattern:","Class Name Pattern",Messages.getQuestionIcon(),null,new ClassPatternValidator(nameHelper));
      if (selectedPattern != null) {
        insertRow(selectedPattern);
      }
    }
  }
).setRemoveAction(new AnActionButtonRunnable(){
    @Override public void run(    AnActionButton button){
      TableUtil.removeSelectedItems(myTable);
      myTable.repaint();
    }
  }
).setRemoveActionUpdater(new AnActionButtonUpdater(){
    @Override public boolean isEnabled(    AnActionEvent e){
      return myTable.getSelectedRow() >= 0;
    }
  }
).setButtonComparator(addClassMessage,addPatternMessage,"Remove");
  add(SeparatorFactory.createSeparator("Mark code as entry point if qualified name matches",null),BorderLayout.NORTH);
  add(toolbarDecorator.createPanel(),BorderLayout.CENTER);
  setPreferredSize(new JBDimension(-1,250));
}
