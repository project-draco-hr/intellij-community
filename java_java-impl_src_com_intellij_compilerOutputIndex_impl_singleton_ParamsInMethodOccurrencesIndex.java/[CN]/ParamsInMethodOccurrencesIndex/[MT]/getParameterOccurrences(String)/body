{
  try {
    final Multiset<MethodShortSignature> resultAsMultiset=HashMultiset.create();
    final ValueContainer<Multiset<MethodShortSignature>> valueContainer=myIndex.getData(parameterTypeName);
    valueContainer.forEach(new ValueContainer.ContainerAction<Multiset<MethodShortSignature>>(){
      @Override public boolean perform(      final int id,      final Multiset<MethodShortSignature> localMap){
        for (        final Multiset.Entry<MethodShortSignature> e : localMap.entrySet()) {
          resultAsMultiset.add(e.getElement(),e.getCount());
        }
        return true;
      }
    }
);
    final List<MethodShortSignatureWithWeight> result=new ArrayList<MethodShortSignatureWithWeight>(resultAsMultiset.elementSet().size());
    int sumWeight=0;
    for (    final Multiset.Entry<MethodShortSignature> e : resultAsMultiset.entrySet()) {
      sumWeight+=e.getCount();
      result.add(new MethodShortSignatureWithWeight(e.getElement(),e.getCount()));
    }
    Collections.sort(result,MethodShortSignatureWithWeight.COMPARATOR);
    return Pair.create(result,sumWeight);
  }
 catch (  StorageException e) {
    throw new RuntimeException(e);
  }
}
