{
  int totalSize=myExtensionAdapters.size() + myLoadedAdapters.size();
  if (totalSize != 0) {
    List<ExtensionComponentAdapter> allAdapters=new ArrayList<ExtensionComponentAdapter>(totalSize);
    allAdapters.addAll(myExtensionAdapters);
    allAdapters.addAll(myLoadedAdapters);
    myExtensions.clear();
    ExtensionComponentAdapter[] loadedAdapters=myLoadedAdapters.isEmpty() ? ExtensionComponentAdapter.EMPTY_ARRAY : myLoadedAdapters.toArray(new ExtensionComponentAdapter[myLoadedAdapters.size()]);
    myLoadedAdapters.clear();
    ExtensionComponentAdapter[] adapters=allAdapters.toArray(new ExtensionComponentAdapter[myExtensionAdapters.size()]);
    LoadingOrder.sort(adapters);
    final List<T> extensions=new ArrayList<T>(adapters.length);
    for (    ExtensionComponentAdapter adapter : adapters) {
      @SuppressWarnings("unchecked") T extension=(T)adapter.getExtension();
      assertClass(extension.getClass());
      extensions.add(extension);
    }
    for (int i=0; i < extensions.size(); i++) {
      T extension=extensions.get(i);
      internalRegisterExtension(extension,adapters[i],myExtensions.size(),ArrayUtilRt.find(loadedAdapters,adapters[i]) == -1);
    }
    myExtensionAdapters.clear();
  }
}
