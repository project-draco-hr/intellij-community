{
  List<String> arguments=new LinkedList<>();
  if (clean) {
    arguments.add("--clean");
  }
  if (!StringUtil.isEmptyOrSpaces(revision)) {
    arguments.add("--rev");
    arguments.add(revision);
  }
  final HgPromptCommandExecutor executor=new HgPromptCommandExecutor(project);
  executor.setShowOutput(true);
  HgCommandResult result;
  AccessToken token=DvcsUtil.workingTreeChangeStarted(project);
  try {
    result=executor.executeInCurrentThread(repo,"update",arguments);
    if (!clean && hasUncommittedChangesConflict(result)) {
      final String message="<html>Your uncommitted changes couldn't be merged into the requested changeset.<br>" + "Would you like to perform force update and discard them?";
      if (showDiscardChangesConfirmation(project,message) == Messages.OK) {
        arguments.add("-C");
        result=executor.executeInCurrentThread(repo,"update",arguments);
      }
    }
  }
  finally {
    DvcsUtil.workingTreeChangeFinished(project,token);
  }
  VfsUtil.markDirtyAndRefresh(false,true,false,repo);
  return result;
}
