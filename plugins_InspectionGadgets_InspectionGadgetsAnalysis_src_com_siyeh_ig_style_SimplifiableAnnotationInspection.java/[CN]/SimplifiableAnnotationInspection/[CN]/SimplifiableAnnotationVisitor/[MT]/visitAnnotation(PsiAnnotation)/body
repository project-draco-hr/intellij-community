{
  super.visitAnnotation(annotation);
  final PsiAnnotationParameterList parameterList=annotation.getParameterList();
  final PsiJavaCodeReferenceElement nameReferenceElement=annotation.getNameReferenceElement();
  if (nameReferenceElement == null) {
    return;
  }
  final PsiNameValuePair[] attributes=parameterList.getAttributes();
  final PsiElement[] annotationChildren=annotation.getChildren();
  if (annotationChildren.length >= 2 && annotationChildren[1] instanceof PsiWhiteSpace && !containsError(annotation)) {
    registerError(annotationChildren[1],Boolean.TRUE);
  }
  if (attributes.length == 0) {
    if (parameterList.getChildren().length > 0 && !containsError(annotation)) {
      registerError(parameterList,ProblemHighlightType.LIKE_UNUSED_SYMBOL,Boolean.FALSE);
    }
  }
 else   if (attributes.length == 1) {
    final PsiNameValuePair attribute=attributes[0];
    final PsiIdentifier identifier=attribute.getNameIdentifier();
    final PsiAnnotationMemberValue attributeValue=attribute.getValue();
    if (identifier != null && attributeValue != null) {
      @NonNls final String name=attribute.getName();
      if (PsiAnnotation.DEFAULT_REFERENCED_METHOD_NAME.equals(name) && !containsError(annotation)) {
        registerErrorAtOffset(attribute,0,attributeValue.getStartOffsetInParent(),ProblemHighlightType.LIKE_UNUSED_SYMBOL,Boolean.FALSE);
      }
    }
    if (!(attributeValue instanceof PsiArrayInitializerMemberValue)) {
      return;
    }
    final PsiArrayInitializerMemberValue arrayValue=(PsiArrayInitializerMemberValue)attributeValue;
    final PsiAnnotationMemberValue[] initializers=arrayValue.getInitializers();
    if (initializers.length != 1) {
      return;
    }
    if (!containsError(annotation)) {
      registerError(arrayValue.getFirstChild(),ProblemHighlightType.LIKE_UNUSED_SYMBOL,Boolean.FALSE);
      registerError(arrayValue.getLastChild(),ProblemHighlightType.LIKE_UNUSED_SYMBOL,Boolean.FALSE);
    }
  }
 else   if (attributes.length > 1) {
    for (    PsiNameValuePair attribute : attributes) {
      final PsiAnnotationMemberValue value=attribute.getValue();
      if (!(value instanceof PsiArrayInitializerMemberValue)) {
        continue;
      }
      final PsiArrayInitializerMemberValue arrayValue=(PsiArrayInitializerMemberValue)value;
      final PsiAnnotationMemberValue[] initializers=arrayValue.getInitializers();
      if (initializers.length != 1) {
        continue;
      }
      if (!containsError(annotation)) {
        registerError(arrayValue.getFirstChild(),ProblemHighlightType.LIKE_UNUSED_SYMBOL,Boolean.FALSE);
        registerError(arrayValue.getLastChild(),ProblemHighlightType.LIKE_UNUSED_SYMBOL,Boolean.FALSE);
      }
    }
  }
}
