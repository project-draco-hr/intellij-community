{
  final PsiJavaCodeReferenceElement nameRef=annotation.getNameReferenceElement();
  if (nameRef == null) {
    return true;
  }
  final PsiClass aClass=(PsiClass)nameRef.resolve();
  if (aClass == null || !aClass.isAnnotationType()) {
    return true;
  }
  final Set<String> names=new HashSet<String>();
  for (  PsiNameValuePair attribute : annotation.getParameterList().getAttributes()) {
    final PsiReference ref=attribute.getReference();
    if (ref == null) {
      return true;
    }
    final PsiMethod method=(PsiMethod)ref.resolve();
    if (method == null) {
      return true;
    }
    if (!hasCorrectType(attribute.getValue(),method.getReturnType())) {
      return true;
    }
    final String name=attribute.getName();
    if (!names.add(name != null ? name : PsiAnnotation.DEFAULT_REFERENCED_METHOD_NAME)) {
      return true;
    }
  }
  for (  PsiMethod method : aClass.getMethods()) {
    if (!(method instanceof PsiAnnotationMethod)) {
      continue;
    }
    final PsiAnnotationMethod annotationMethod=(PsiAnnotationMethod)method;
    if (annotationMethod.getDefaultValue() == null && !names.contains(annotationMethod.getName())) {
      return true;
    }
  }
  return false;
}
