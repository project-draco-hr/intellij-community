{
  boolean expressionPossible=!isInAnnotation && !isInClass;
  if (modifiersParsed && builder.getTokenType() == GroovyTokenTypes.mLT) {
    return parseDeclarationWithGenerics(builder,isInClass,isInAnnotation,typeDefinitionName,parser,modifiersParsed,expressionPossible);
  }
 else   if (modifiersParsed) {
    return parseDeclarationWithoutGenerics(builder,isInClass,isInAnnotation,typeDefinitionName,parser,modifiersParsed,expressionPossible);
  }
 else   if (typeDefinitionName != null && ParserUtils.lookAhead(builder,GroovyTokenTypes.mIDENT,GroovyTokenTypes.mLPAREN) && typeDefinitionName.equals(builder.getTokenText())) {
    return VariableDefinitions.parseDefinitions(builder,isInClass,isInAnnotation,typeDefinitionName,modifiersParsed,false,parser);
  }
 else {
    return parsePossibleCallExpression(builder,isInClass,isInAnnotation,typeDefinitionName,parser,expressionPossible);
  }
}
