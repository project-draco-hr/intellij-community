{
  myMessageLabel.setIcon(null);
  myConfigureButton.setVisible(true);
  final LibraryDownloadSettings settings=mySettings.getDownloadSettings();
  myDownloadRadioButton.setVisible(settings != null);
  myUseFromProviderRadioButton.setVisible(myLibraryProvider != null);
  if (!myUseFromProviderRadioButton.isVisible() && myUseFromProviderRadioButton.isSelected()) {
    if (myDownloadRadioButton.isVisible()) {
      myDownloadRadioButton.setSelected(true);
    }
 else {
      myUseLibraryRadioButton.setSelected(true);
    }
  }
  if (!myDownloadRadioButton.isVisible() && myDownloadRadioButton.isSelected() && myUseLibraryRadioButton.isVisible()) {
    myUseLibraryRadioButton.setSelected(true);
  }
  String message="";
  boolean showConfigurePanel=true;
switch (myButtonEnumModel.getSelected()) {
case DOWNLOAD:
    message=getDownloadFilesMessage();
  break;
case USE_FROM_PROVIDER:
if (myLibraryProvider != null) {
  message="Library from " + myLibraryProvider.getPresentableName() + " will be used";
}
myConfigureButton.setVisible(false);
break;
case USE_LIBRARY:
final Object item=myExistingLibraryComboBox.getSelectedItem();
if (item == null) {
myMessageLabel.setIcon(AllIcons.RunConfigurations.ConfigurationWarning);
message="<b>Error:</b> library is not specified";
myConfigureButton.setVisible(false);
}
 else if (item instanceof NewLibraryEditor) {
final LibraryEditor libraryEditor=(LibraryEditor)item;
message=IdeBundle.message("label.library.will.be.created.description.text",mySettings.getNewLibraryLevel(),libraryEditor.getName(),libraryEditor.getFiles(OrderRootType.CLASSES).length);
}
 else {
message=MessageFormat.format("<b>{0}</b> library will be used",((ExistingLibraryEditor)item).getName());
}
break;
default :
showConfigurePanel=false;
}
if (myLibraryProvider != null) {
myUseFromProviderRadioButton.setText("Use library from " + myLibraryProvider.getPresentableName());
}
if (mySettings.getDownloadSettings() != null) {
myHiddenLabel.setText(getDownloadFilesMessage());
}
 else {
myHiddenLabel.setText(IdeBundle.message("label.library.will.be.created.description.text",mySettings.getNewLibraryLevel(),"name",10));
}
((CardLayout)myConfigurationPanel.getLayout()).show(myConfigurationPanel,showConfigurePanel ? "configure" : "empty");
myMessageLabel.setText(XmlStringUtil.wrapInHtml(message));
}
