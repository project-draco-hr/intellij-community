{
  if (insertOverride && canInsertOverride(overridden,targetClass)) {
    AddAnnotationPsiFix.addPhysicalAnnotation(Override.class.getName(),PsiNameValuePair.EMPTY_ARRAY,method.getModifierList());
  }
  final Module module=ModuleUtilCore.findModuleForPsiElement(targetClass);
  final GlobalSearchScope moduleScope=module != null ? GlobalSearchScope.moduleWithDependenciesAndLibrariesScope(module) : null;
  final Project project=targetClass.getProject();
  final JavaPsiFacade facade=JavaPsiFacade.getInstance(project);
  for (  OverrideImplementsAnnotationsHandler each : Extensions.getExtensions(OverrideImplementsAnnotationsHandler.EP_NAME)) {
    for (    String annotation : each.getAnnotations(project)) {
      if (moduleScope != null && facade.findClass(annotation,moduleScope) == null)       continue;
      if (AnnotationUtil.isAnnotated(overridden,annotation,false,false)) {
        AddAnnotationPsiFix.removePhysicalAnnotations(method,each.annotationsToRemove(project,annotation));
        AddAnnotationPsiFix.addPhysicalAnnotation(annotation,PsiNameValuePair.EMPTY_ARRAY,method.getModifierList());
      }
    }
  }
}
