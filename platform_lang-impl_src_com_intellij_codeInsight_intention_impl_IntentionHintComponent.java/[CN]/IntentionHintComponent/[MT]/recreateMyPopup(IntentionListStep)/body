{
  ApplicationManager.getApplication().assertIsDispatchThread();
  if (myPopup != null) {
    Disposer.dispose(myPopup);
  }
  myPopup=JBPopupFactory.getInstance().createListPopup(step);
  myPopup.addListener(new JBPopupListener.Adapter(){
    @Override public void onClosed(    LightweightWindowEvent event){
      myPopupShown=false;
    }
  }
);
  if (myEditor.isOneLineMode()) {
    final Container ancestor=SwingUtilities.getAncestorOfClass(JComboBox.class,myEditor.getContentComponent());
    if (ancestor != null) {
      final JComboBox comboBox=(JComboBox)ancestor;
      myOuterComboboxPopupListener=new PopupMenuListenerAdapter(){
        @Override public void popupMenuWillBecomeVisible(        PopupMenuEvent e){
          hide();
        }
      }
;
      comboBox.addPopupMenuListener(myOuterComboboxPopupListener);
    }
  }
  Disposer.register(this,myPopup);
  Disposer.register(myPopup,new Disposable(){
    @Override public void dispose(){
      ApplicationManager.getApplication().assertIsDispatchThread();
    }
  }
);
}
