{
  PythonLanguageLevelPusher.setForcedLanguageLevel(myFixture.getProject(),LanguageLevel.PYTHON30);
  try {
    final String testFileName=getTestName(true);
    myFixture.configureByFile(testFileName + ".py");
    String signature=PySignatureCacheManager.signatureToString(new PySignature(myFixture.getFile().getVirtualFile().getCanonicalPath(),"get_dict").addReturnType("Dict[int, str]"));
    PySignatureCacheManagerImpl.CALL_SIGNATURES_ATTRIBUTE.writeAttributeBytes(myFixture.getFile().getVirtualFile(),signature.getBytes());
    final IntentionAction intentionAction=myFixture.findSingleIntention(PyBundle.message("INTN.annotate.types"));
    assertNotNull(intentionAction);
    myFixture.launchAction(intentionAction);
    myFixture.checkResultByFile(testFileName + "_after.py",true);
  }
  finally {
    PythonLanguageLevelPusher.setForcedLanguageLevel(myFixture.getProject(),null);
  }
  doTest();
}
