{
  return PsiTreeUtil.processElements(elementToCheck,new PsiElementProcessor(){
    @Override public boolean execute(    @NotNull PsiElement element){
      if (!(element instanceof PsiJavaCodeReferenceElement)) {
        return true;
      }
      final PsiJavaCodeReferenceElement referenceElement=(PsiJavaCodeReferenceElement)element;
      final PsiElement target=referenceElement.resolve();
      if (target == null) {
        return false;
      }
      if (PsiTreeUtil.isAncestor(elementToCheck,target,false)) {
        return true;
      }
      return target instanceof PsiMember && PsiUtil.isAccessible((PsiMember)target,place,null);
    }
  }
);
}
