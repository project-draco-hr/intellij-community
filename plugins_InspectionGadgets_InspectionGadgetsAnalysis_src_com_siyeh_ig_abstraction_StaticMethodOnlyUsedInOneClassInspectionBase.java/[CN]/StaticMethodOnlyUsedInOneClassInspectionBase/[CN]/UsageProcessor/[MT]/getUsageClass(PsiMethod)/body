{
  final ProgressManager progressManager=ProgressManager.getInstance();
  final PsiSearchHelper searchHelper=PsiSearchHelper.SERVICE.getInstance(method.getProject());
  final String name=method.getName();
  final GlobalSearchScope scope=GlobalSearchScope.projectScope(method.getProject());
  if (searchHelper.isCheapEnoughToSearch(name,scope,null,progressManager.getProgressIndicator()) == PsiSearchHelper.SearchCostResult.TOO_MANY_OCCURRENCES) {
    return null;
  }
  progressManager.runProcess(new Runnable(){
    @Override public void run(){
      final Query<PsiReference> query=MethodReferencesSearch.search(method);
      if (!query.forEach(UsageProcessor.this)) {
        foundClass.set(null);
      }
    }
  }
,null);
  return foundClass.get();
}
