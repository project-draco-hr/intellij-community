{
  if (s.isEmpty())   return s;
  IElementType tokenType=token.getNode().getElementType();
  if (tokenType == GroovyTokenTypes.mREGEX_CONTENT || tokenType == GroovyTokenTypes.mREGEX_LITERAL) {
    return GrStringUtil.escapeSymbolsForSlashyStrings(s);
  }
  if (tokenType == GroovyTokenTypes.mDOLLAR_SLASH_REGEX_CONTENT || tokenType == GroovyTokenTypes.mDOLLAR_SLASH_REGEX_LITERAL) {
    return GrStringUtil.escapeSymbolsForDollarSlashyStrings(s);
  }
  if (tokenType == GroovyTokenTypes.mGSTRING_CONTENT || tokenType == GroovyTokenTypes.mGSTRING_LITERAL || tokenType == GroovyElementTypes.GSTRING_INJECTION) {
    boolean singleLine=!GrStringUtil.findContainingLiteral(token).getText().contains("\"\"\"");
    StringBuilder b=new StringBuilder();
    GrStringUtil.escapeStringCharacters(s.length(),s,singleLine ? "\"" : "",singleLine,true,b);
    GrStringUtil.unescapeCharacters(b,singleLine ? "'" : "'\"",true);
    LOG.assertTrue(b.length() > 0,"s=" + s);
    for (int i=b.length() - 2; i >= 0; i--) {
      if (b.charAt(i) == '$') {
        final char next=b.charAt(i + 1);
        if (next != '{' && !Character.isLetter(next)) {
          b.insert(i,'\\');
        }
      }
    }
    if (b.charAt(b.length() - 1) == '$') {
      b.insert(b.length() - 1,'\\');
    }
    return b.toString();
  }
  if (tokenType == GroovyTokenTypes.mSTRING_LITERAL) {
    return GrStringUtil.escapeSymbolsForString(s,!token.getText().contains("'''"),false);
  }
  return super.escapeCharCharacters(s,token);
}
