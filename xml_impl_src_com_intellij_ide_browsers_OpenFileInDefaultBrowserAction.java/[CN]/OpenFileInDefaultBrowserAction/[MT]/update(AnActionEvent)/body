{
  final DataContext dataContext=e.getDataContext();
  final PsiFile file=CommonDataKeys.PSI_FILE.getData(dataContext);
  final Presentation presentation=e.getPresentation();
  if (file == null || file.getVirtualFile() == null) {
    presentation.setVisible(false);
    presentation.setEnabled(false);
    return;
  }
  Pair<WebBrowserUrlProvider,Set<Url>> browserUrlProvider=WebBrowserServiceImpl.getProvider(file);
  final boolean isHtmlFile=HtmlUtil.isHtmlFile(file);
  if (browserUrlProvider == null) {
    if (file.getVirtualFile() instanceof LightVirtualFile) {
      presentation.setVisible(false);
      presentation.setEnabled(false);
      return;
    }
 else {
      presentation.setEnabled(isHtmlFile);
    }
  }
 else {
    presentation.setEnabled(true);
  }
  presentation.setVisible(true);
  String text=getTemplatePresentation().getText();
  String description=getTemplatePresentation().getDescription();
  if (browserUrlProvider != null) {
    final String customText=browserUrlProvider.first.getOpenInBrowserActionText(file);
    if (customText != null) {
      text=customText;
    }
    final String customDescription=browserUrlProvider.first.getOpenInBrowserActionDescription(file);
    if (customDescription != null) {
      description=customDescription;
    }
    if (isHtmlFile) {
      description+=" (hold Shift to open URL of local file)";
    }
  }
  presentation.setText(text);
  presentation.setDescription(description);
  GeneralSettings settings=GeneralSettings.getInstance();
  if (!settings.isUseDefaultBrowser()) {
    BrowsersConfiguration.BrowserFamily family=BrowsersConfiguration.getInstance().findFamilyByPath(settings.getBrowserPath());
    if (family != null) {
      presentation.setIcon(family.getIcon());
    }
  }
  if (ActionPlaces.isPopupPlace(e.getPlace())) {
    presentation.setVisible(presentation.isEnabled());
  }
}
