{
  final Editor editor=CommonDataKeys.EDITOR.getData(context);
  if (editor != null) {
    Project project=editor.getProject();
    if (project != null && project.isInitialized()) {
      PsiFile psiFile=CommonDataKeys.PSI_FILE.getData(context);
      if (psiFile == null) {
        psiFile=PsiDocumentManager.getInstance(project).getPsiFile(editor.getDocument());
      }
      if (psiFile != null) {
        return new OpenInBrowserRequest(psiFile){
          private PsiElement element;
          @NotNull @Override public PsiElement getElement(){
            if (element == null) {
              element=getFile().findElementAt(editor.getCaretModel().getOffset());
            }
            return ObjectUtils.chooseNotNull(element,getFile());
          }
        }
;
      }
    }
  }
 else {
    final PsiFile psiFile=CommonDataKeys.PSI_FILE.getData(context);
    if (psiFile != null) {
      return OpenInBrowserRequest.create(psiFile);
    }
    final VirtualFile virtualFile=CommonDataKeys.VIRTUAL_FILE.getData(context);
    final Project project=CommonDataKeys.PROJECT.getData(context);
    if (virtualFile != null && !virtualFile.isDirectory() && virtualFile.isValid() && project != null && project.isInitialized()) {
      return new OpenInBrowserRequest(){
        @NotNull @Override public VirtualFile getVirtualFile(){
          return virtualFile;
        }
        @NotNull @Override public Project getProject(){
          return project;
        }
        @NotNull @Override public PsiElement getElement(){
          return getFile();
        }
        @NotNull @Override public PsiFile getFile(){
          if (file == null) {
            file=PsiManager.getInstance(getProject()).findFile(virtualFile);
            LOG.assertTrue(file != null);
          }
          return file;
        }
      }
;
    }
  }
  return null;
}
