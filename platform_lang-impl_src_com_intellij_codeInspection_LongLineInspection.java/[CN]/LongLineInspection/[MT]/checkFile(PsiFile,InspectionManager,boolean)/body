{
  final Project project=manager.getProject();
  final int codeStyleRightMargin=CodeStyleSettingsManager.getSettings(project).getRightMargin(file.getLanguage());
  final VirtualFile vFile=file.getVirtualFile();
  if (vFile instanceof VirtualFileWindow) {
    return null;
  }
  final Document document=FileDocumentManager.getInstance().getDocument(vFile);
  if (document == null) {
    return null;
  }
  final List<ProblemDescriptor> descriptors=new SmartList<ProblemDescriptor>();
  for (int idx=0; idx < document.getLineCount(); idx++) {
    final int startOffset=document.getLineStartOffset(idx);
    final int endOffset=document.getLineEndOffset(idx);
    if (endOffset - startOffset > codeStyleRightMargin) {
      final int maxOffset=startOffset + codeStyleRightMargin;
      PsiElement element=file.findElementAt(maxOffset);
      if (element != null) {
        descriptors.add(manager.createProblemDescriptor(element,String.format("Line is longer than allowed by code style (> %s symbols)",codeStyleRightMargin),(LocalQuickFix)null,ProblemHighlightType.GENERIC_ERROR_OR_WARNING,isOnTheFly));
      }
    }
  }
  return descriptors.isEmpty() ? null : descriptors.toArray(new ProblemDescriptor[descriptors.size()]);
}
