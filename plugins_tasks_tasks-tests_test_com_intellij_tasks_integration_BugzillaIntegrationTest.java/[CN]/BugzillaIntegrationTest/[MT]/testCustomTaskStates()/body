{
  final Task task=myRepository.findTask(BUG_FOR_CUSTOM_STATES_ID);
  assertNotNull(task);
  try {
    assertEquals(TaskState.OPEN,task.getState());
    Set<CustomTaskState> states=myRepository.getAvailableTaskStates(task);
    List<String> stateNames=ContainerUtil.map(states,new Function<CustomTaskState,String>(){
      @Override public String fun(      CustomTaskState state){
        return state.getPresentableName();
      }
    }
);
    assertContainsElements(stateNames,"IN_PROGRESS");
    assertDoesntContain(stateNames,"CONFIRMED");
    setStateAndCheckResult(task,IN_PROGRESS_STATE,TaskState.IN_PROGRESS);
    states=myRepository.getAvailableTaskStates(task);
    stateNames=ContainerUtil.map(states,new Function<CustomTaskState,String>(){
      @Override public String fun(      CustomTaskState state){
        return state.getPresentableName();
      }
    }
);
    assertContainsElements(stateNames,"CONFIRMED");
    assertDoesntContain(stateNames,"IN_PROGRESS");
  }
  finally {
    setStateAndCheckResult(task,CONFIRMED_STATE,TaskState.OPEN);
  }
}
