{
  PsiElement owner=parameter.getParent().getParent();
  if (owner == null)   return null;
  if (!(owner instanceof PsiMethod)) {
    String text=JavaErrorMessages.message("receiver.wrong.context");
    return HighlightInfo.newHighlightInfo(HighlightInfoType.ERROR).range(parameter.getIdentifier()).descriptionAndTooltip(text).create();
  }
  PsiMethod method=(PsiMethod)owner;
  if (isStatic(method) || (method).isConstructor() && isStatic(method.getContainingClass())) {
    String text=JavaErrorMessages.message("receiver.static.context");
    return HighlightInfo.newHighlightInfo(HighlightInfoType.ERROR).range(parameter.getIdentifier()).descriptionAndTooltip(text).create();
  }
  PsiElement leftNeighbour=PsiTreeUtil.skipSiblingsBackward(parameter,PsiWhiteSpace.class);
  if (leftNeighbour != null && !PsiUtil.isJavaToken(leftNeighbour,JavaTokenType.LPARENTH)) {
    String text=JavaErrorMessages.message("receiver.wrong.position");
    return HighlightInfo.newHighlightInfo(HighlightInfoType.ERROR).range(parameter.getIdentifier()).descriptionAndTooltip(text).create();
  }
  return null;
}
