{
  PsiElement owner=parameter.getParent().getParent();
  if (!(owner instanceof PsiMethod))   return null;
  PsiMethod method=(PsiMethod)owner;
  PsiClass enclosingClass=method.getContainingClass();
  if (method.isConstructor() && enclosingClass != null) {
    enclosingClass=enclosingClass.getContainingClass();
  }
  if (enclosingClass != null && !enclosingClass.equals(PsiUtil.resolveClassInType(parameter.getType()))) {
    PsiElement range=ObjectUtils.notNull(parameter.getTypeElement(),parameter);
    String text=JavaErrorMessages.message("receiver.type.mismatch");
    return HighlightInfo.newHighlightInfo(HighlightInfoType.ERROR).range(range).descriptionAndTooltip(text).create();
  }
  PsiThisExpression identifier=parameter.getIdentifier();
  if (enclosingClass != null && !enclosingClass.equals(PsiUtil.resolveClassInType(identifier.getType()))) {
    String text=JavaErrorMessages.message("receiver.name.mismatch");
    return HighlightInfo.newHighlightInfo(HighlightInfoType.ERROR).range(identifier).descriptionAndTooltip(text).create();
  }
  return null;
}
