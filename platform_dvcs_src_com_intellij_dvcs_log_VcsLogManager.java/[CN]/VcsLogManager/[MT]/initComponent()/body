{
  super.initComponent();
  StartupManager.getInstance(myProject).registerPostStartupActivity(new DumbAwareRunnable(){
    @Override public void run(){
      if (!Registry.is("git.new.log")) {
        return;
      }
      final VcsLogContainer mainPanel=new VcsLogContainer(myProject);
      Content vcsLogContentPane=new ContentImpl(mainPanel,"Log",true);
      ChangesViewContentI changesView=ChangesViewContentManager.getInstance(myProject);
      changesView.addContent(vcsLogContentPane);
      vcsLogContentPane.setCloseable(false);
      VcsLogProvider logProvider=null;
      for (      VcsLogProvider provider : Extensions.getExtensions(LOG_PROVIDER_EP,myProject)) {
        logProvider=provider;
      }
      VirtualFile root=myVcsManager.getAllVcsRoots()[0].getPath();
      VcsLogDataHolder.init(myProject,logProvider,root,new Consumer<VcsLogDataHolder>(){
        @Override public void consume(        VcsLogDataHolder vcsLogDataHolder){
          Disposer.register(myProject,vcsLogDataHolder);
          myProject.getMessageBus().connect(myProject).subscribe(VcsLogRefresher.TOPIC,vcsLogDataHolder);
          VcsLogUI logUI=new VcsLogUI(vcsLogDataHolder,myProject);
          mainPanel.init(logUI.getMainFrame().getMainComponent());
        }
      }
);
    }
  }
);
}
