{
  if (containingClass != null) {
    receiverType=getExpandedType(receiverType,containingClass);
  }
  final PsiClassType.ClassResolveResult resolveResult=PsiUtil.resolveGenericsClassInType(receiverType);
  final PsiClass receiverClass=resolveResult.getElement();
  if (receiverClass != null && isReceiverType(receiverClass,containingClass)) {
    if (emptyOrRaw(containingClass,psiSubstitutor)) {
      return true;
    }
    final PsiSubstitutor derivedSubstitutor=TypeConversionUtil.getClassSubstitutor(containingClass,receiverClass,psiSubstitutor);
    return derivedSubstitutor != null && TypeConversionUtil.isAssignable(JavaPsiFacade.getElementFactory(containingClass.getProject()).createType(containingClass,derivedSubstitutor),receiverType);
  }
  return false;
}
