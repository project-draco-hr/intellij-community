{
  long start=System.currentTimeMillis();
  List<Future<?>> futures=ContainerUtil.newArrayList();
  Random seedRandom=new Random();
  for (int i=0; i < threadCount; i++) {
    final Random threadRandom=new Random(seedRandom.nextInt());
    final int finalI=i;
    futures.add(ApplicationManager.getApplication().executeOnPooledThread(new Runnable(){
      @Override public void run(){
        testIteration.doTest(finalI,ids,threadRandom,queryCount);
      }
    }
));
  }
  for (  Future<?> future : futures) {
    future.get();
  }
  return System.currentTimeMillis() - start;
}
