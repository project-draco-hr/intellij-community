{
  if (unit.myDecls.length == 0) {
    return null;
  }
  QualifiedName pid=StringUtil.isEmpty(unit.myPackageId) ? null : nameEnvironment.fromString(unit.myPackageId,true);
  ArrayList<ClassDeclaration> classesList=new ArrayList<ClassDeclaration>();
  for (  IndexTree.ClassDecl def : unit.myDecls) {
    ClassDeclaration classDecl=processClassDecl(nameEnvironment,unit.myFileId,def);
    classesList.add(classDecl);
  }
  TLongArrayList importList=new TLongArrayList();
  for (  IndexTree.Import anImport : unit.imports) {
    importList.add(processImport(nameEnvironment,anImport));
  }
  long[] imports=importList.isEmpty() ? Import.EMPTY_ARRAY : importList.toNativeArray();
  ClassDeclaration[] classes=classesList.toArray(new ClassDeclaration[classesList.size()]);
  return new Unit(pid,imports,classes,unit.myUnitType);
}
