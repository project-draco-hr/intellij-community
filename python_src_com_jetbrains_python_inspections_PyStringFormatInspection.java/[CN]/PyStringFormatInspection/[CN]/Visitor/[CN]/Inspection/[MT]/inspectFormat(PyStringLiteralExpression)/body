{
  final String value=formatExpression.getStringValue();
  final List<PyStringFormatParser.SubstitutionChunk> chunks=filterSubstitutions(parsePercentFormat(value));
  myExpectedArguments=chunks.size();
  myUsedMappingKeys.clear();
  final boolean mapping=chunks.size() > 0 && chunks.get(0).getMappingKey() != null;
  for (int i=0; i < chunks.size(); ++i) {
    PyStringFormatParser.SubstitutionChunk chunk=chunks.get(i);
    String mappingKey=Integer.toString(i + 1);
    if (mapping) {
      if (chunk.getMappingKey() == null || chunk.isUnclosedMapping()) {
        registerProblem(formatExpression,PyBundle.message("INSP.too.few.keys"));
        break;
      }
      mappingKey=chunk.getMappingKey();
      myUsedMappingKeys.put(mappingKey,false);
    }
    inspectWidth(formatExpression,chunk.getWidth());
    inspectWidth(formatExpression,chunk.getPrecision());
    if (FORMAT_CONVERSIONS.containsKey(chunk.getConversionType())) {
      myFormatSpec.put(mappingKey,FORMAT_CONVERSIONS.get(chunk.getConversionType()));
      continue;
    }
    registerProblem(formatExpression,PyBundle.message("INSP.no.format.specifier.char"));
  }
}
