{
  final String literal=formatExpression.getStringValue().replace("%%","");
  final String[] sections=literal.split("%");
  myExpectedArguments=sections.length - 1;
  myUsedMappingKeys.clear();
  final boolean mapping=(sections.length > 1 && sections[1].charAt(0) == '(');
  for (int i=1; i < sections.length; ++i) {
    final String section=sections[i];
    int characterNumber=0;
    String mappingKey=Integer.toString(i);
    if (mapping) {
      characterNumber=section.indexOf(")");
      if (section.charAt(0) != '(' || characterNumber == -1) {
        registerProblem(formatExpression,PyBundle.message("INSP.too.few.keys"));
        break;
      }
      mappingKey=section.substring(1,characterNumber);
      myUsedMappingKeys.put(mappingKey,false);
      ++characterNumber;
    }
    final int length=section.length();
    while (characterNumber < length && FORMAT_FLAGS.indexOf(section.charAt(characterNumber)) != -1) {
      ++characterNumber;
    }
    if (characterNumber < length) {
      characterNumber=inspectWidth(formatExpression,section,characterNumber);
    }
    if (characterNumber < length && section.charAt(characterNumber) == '.') {
      ++characterNumber;
      characterNumber=inspectWidth(formatExpression,section,characterNumber);
    }
    if (characterNumber < length && FORMAT_LENGTH.indexOf(section.charAt(characterNumber)) != -1) {
      ++characterNumber;
    }
    if (characterNumber < length) {
      final char c=section.charAt(characterNumber);
      if (FORMAT_CONVERSIONS.containsKey(c)) {
        myFormatSpec.put(mappingKey,FORMAT_CONVERSIONS.get(c));
        continue;
      }
    }
    registerProblem(formatExpression,PyBundle.message("INSP.no.format.specifier.char"));
  }
}
