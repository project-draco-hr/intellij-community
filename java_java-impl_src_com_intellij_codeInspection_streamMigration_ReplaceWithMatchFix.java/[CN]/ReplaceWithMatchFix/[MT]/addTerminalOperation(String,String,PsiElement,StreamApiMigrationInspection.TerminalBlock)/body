{
  PsiElementFactory elementFactory=JavaPsiFacade.getElementFactory(contextElement.getProject());
  PsiExpression stream=elementFactory.createExpressionFromText(origStream,contextElement);
  LOG.assertTrue(stream instanceof PsiMethodCallExpression);
  PsiElement nameElement=((PsiMethodCallExpression)stream).getMethodExpression().getReferenceNameElement();
  if (nameElement != null && nameElement.getText().equals("filter")) {
    if (methodName.equals("noneMatch")) {
      PsiExpression[] expressions=((PsiMethodCallExpression)stream).getArgumentList().getExpressions();
      if (expressions.length == 1 && expressions[0] instanceof PsiLambdaExpression) {
        PsiLambdaExpression lambda=(PsiLambdaExpression)expressions[0];
        PsiElement lambdaBody=lambda.getBody();
        if (lambdaBody instanceof PsiExpression && BoolUtils.isNegation((PsiExpression)lambdaBody)) {
          PsiExpression negated=BoolUtils.getNegated((PsiExpression)lambdaBody);
          LOG.assertTrue(negated != null,lambdaBody.getText());
          lambdaBody.replace(negated);
          methodName="allMatch";
        }
      }
    }
    nameElement.replace(elementFactory.createIdentifier(methodName));
    return stream.getText();
  }
  return origStream + "." + methodName+ "("+ tb.getVariable().getName()+ " -> true)";
}
