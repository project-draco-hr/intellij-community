{
  ApplicationManager.getApplication().assertReadAccessAllowed();
  final PsiManager psiManager=PsiManager.getInstance(project);
  final JavaPsiFacade javaPsiFacade=JavaPsiFacade.getInstance(psiManager.getProject());
  if (getArrayClass(className) != null) {
    return javaPsiFacade.getElementFactory().getArrayClass(LanguageLevelProjectExtension.getInstance(psiManager.getProject()).getLanguageLevel());
  }
  if (project.isDefault()) {
    return null;
  }
  final String _className=className.replace('$','.');
  PsiClass aClass=ClassUtil.findPsiClass(psiManager,_className,null,true,scope);
  if (aClass == null) {
    if (!_className.equals(className)) {
      aClass=ClassUtil.findPsiClass(psiManager,className,null,true,scope);
    }
  }
  if (aClass == null) {
    final GlobalSearchScope globalScope=GlobalSearchScope.allScope(project);
    if (!globalScope.equals(scope)) {
      aClass=ClassUtil.findPsiClass(psiManager,_className,null,true,globalScope);
      if (aClass == null) {
        if (!_className.equals(className)) {
          aClass=ClassUtil.findPsiClass(psiManager,className,null,true,globalScope);
        }
      }
    }
  }
  return aClass;
}
