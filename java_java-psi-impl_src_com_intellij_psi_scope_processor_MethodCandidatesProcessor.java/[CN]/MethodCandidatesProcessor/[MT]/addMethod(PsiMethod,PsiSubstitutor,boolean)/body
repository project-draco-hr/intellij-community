{
  final boolean isAccessible=JavaResolveUtil.isAccessible(method,getContainingClass(method),method.getModifierList(),myPlace,myAccessClass,myCurrentFileContext,myPlaceFile) && !isShadowed(method);
  if (isAccepted(method) && !(isInterfaceStaticMethodAccessibleThroughInheritance(method) && ImportsUtil.hasStaticImportOn(myPlace,method,true))) {
    add(createCandidateInfo(method,substitutor,staticProblem,isAccessible,false));
    if (acceptVarargs() && method.isVarArgs() && PsiUtil.isLanguageLevel8OrHigher(myPlace)) {
      add(createCandidateInfo(method,substitutor,staticProblem,isAccessible,true));
    }
    myHasAccessibleStaticCorrectCandidate|=isAccessible && !staticProblem;
  }
}
