{
  ExternalSystemApiUtil.executeProjectChangeAction(synchronous,new DisposeAwareProjectChange(module){
    @Override public void execute(){
      final ModuleRootManager moduleRootManager=ModuleRootManager.getInstance(module);
      final ModifiableRootModel model=moduleRootManager.getModifiableModel();
      final ContentEntry[] contentEntries=model.getContentEntries();
      final Map<String,ContentEntry> contentEntriesMap=ContainerUtilRt.newHashMap();
      for (      ContentEntry contentEntry : contentEntries) {
        contentEntriesMap.put(contentEntry.getUrl(),contentEntry);
      }
      try {
        for (        final DataNode<ContentRootData> data : datas) {
          final ContentRootData contentRoot=data.getData();
          final ContentEntry contentEntry=findOrCreateContentRoot(model,contentRoot.getRootPath());
          contentEntry.clearExcludeFolders();
          contentEntry.clearSourceFolders();
          LOG.info(String.format("Importing content root '%s' for module '%s'",contentRoot.getRootPath(),module.getName()));
          for (          String path : contentRoot.getPaths(ExternalSystemSourceType.SOURCE)) {
            createSourceRootIfAbsent(contentEntry,path,module.getName(),JavaSourceRootType.SOURCE,false);
          }
          for (          String path : contentRoot.getPaths(ExternalSystemSourceType.TEST)) {
            createSourceRootIfAbsent(contentEntry,path,module.getName(),JavaSourceRootType.TEST_SOURCE,false);
          }
          for (          String path : contentRoot.getPaths(ExternalSystemSourceType.RESOURCE)) {
            createSourceRootIfAbsent(contentEntry,path,module.getName(),JavaResourceRootType.RESOURCE,false);
          }
          for (          String path : contentRoot.getPaths(ExternalSystemSourceType.TEST_RESOURCE)) {
            createSourceRootIfAbsent(contentEntry,path,module.getName(),JavaResourceRootType.TEST_RESOURCE,false);
          }
          for (          String path : contentRoot.getPaths(ExternalSystemSourceType.SOURCE_GENERATED)) {
            createSourceRootIfAbsent(contentEntry,path,module.getName(),JavaSourceRootType.SOURCE,true);
          }
          for (          String path : contentRoot.getPaths(ExternalSystemSourceType.TEST_GENERATED)) {
            createSourceRootIfAbsent(contentEntry,path,module.getName(),JavaSourceRootType.TEST_SOURCE,true);
          }
          for (          String path : contentRoot.getPaths(ExternalSystemSourceType.EXCLUDED)) {
            createExcludedRootIfAbsent(contentEntry,path,module.getName());
          }
          contentEntriesMap.remove(contentEntry.getUrl());
        }
        for (        ContentEntry contentEntry : contentEntriesMap.values()) {
          model.removeContentEntry(contentEntry);
        }
      }
  finally {
        model.commit();
      }
    }
  }
);
}
