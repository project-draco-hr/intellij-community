{
  final PsiElement resolve=resolveResult.getElement();
  if (!(resolve instanceof PsiMethod)) {
    return false;
  }
  PsiMethod psiMethod=(PsiMethod)resolve;
  if (!psiMethod.isVarArgs()) {
    return false;
  }
  if (AnnotationUtil.isAnnotated(psiMethod,"java.lang.SafeVarargs",false,false)) {
    return false;
  }
  int parametersCount=psiMethod.getParameterList().getParametersCount();
  PsiParameter varargParameter=psiMethod.getParameterList().getParameters()[parametersCount - 1];
  PsiType componentType=((PsiEllipsisType)varargParameter.getType()).getComponentType();
  if (isReifiableType(resolveResult.getSubstitutor().substitute(componentType))) {
    return false;
  }
  if (expression instanceof PsiMethodReferenceExpression)   return true;
  final PsiElement parent=expression.getParent();
  if (parent instanceof PsiCall) {
    final PsiExpressionList argumentList=((PsiCall)parent).getArgumentList();
    if (argumentList != null) {
      final PsiExpression[] args=argumentList.getExpressions();
      if (args.length == parametersCount) {
        final PsiExpression lastArg=args[args.length - 1];
        if (lastArg.getType() instanceof PsiArrayType) {
          return false;
        }
      }
      for (int i=parametersCount - 1; i < args.length; i++) {
        if (!isReifiableType(resolveResult.getSubstitutor().substitute(args[i].getType()))) {
          return true;
        }
      }
      return args.length < parametersCount;
    }
  }
  return false;
}
