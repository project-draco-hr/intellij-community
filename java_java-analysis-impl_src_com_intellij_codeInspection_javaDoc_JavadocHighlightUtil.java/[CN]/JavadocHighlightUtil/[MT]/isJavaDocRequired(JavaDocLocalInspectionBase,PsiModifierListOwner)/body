{
  int actualAccess=getAccessNumber(RefJavaUtil.getInstance().getAccessModifier(element));
  if (element instanceof PsiPackage) {
    return 1 <= getAccessNumber(inspection.PACKAGE_OPTIONS);
  }
  if (element instanceof PsiClass) {
    boolean isInner=PsiTreeUtil.getParentOfType(element,PsiClass.class) != null;
    return actualAccess <= getAccessNumber(isInner ? inspection.INNER_CLASS_OPTIONS : inspection.TOP_LEVEL_CLASS_OPTIONS);
  }
  if (element instanceof PsiMethod) {
    element=PsiTreeUtil.getParentOfType(element,PsiClass.class);
    while (element != null) {
      actualAccess=Math.max(actualAccess,getAccessNumber(RefJavaUtil.getInstance().getAccessModifier(element)));
      element=PsiTreeUtil.getParentOfType(element,PsiClass.class);
    }
    return actualAccess <= getAccessNumber(inspection.METHOD_OPTIONS);
  }
  if (element instanceof PsiField) {
    element=PsiTreeUtil.getParentOfType(element,PsiClass.class);
    while (element != null) {
      actualAccess=Math.max(actualAccess,getAccessNumber(RefJavaUtil.getInstance().getAccessModifier(element)));
      element=PsiTreeUtil.getParentOfType(element,PsiClass.class);
    }
    return actualAccess <= getAccessNumber(inspection.FIELD_OPTIONS);
  }
  return false;
}
