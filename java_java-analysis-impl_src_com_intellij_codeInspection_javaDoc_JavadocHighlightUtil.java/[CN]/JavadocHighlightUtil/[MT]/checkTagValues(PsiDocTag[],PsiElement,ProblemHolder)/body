{
  JavadocManager docManager=JavadocManager.SERVICE.getInstance(holder.project());
  for (  PsiDocTag tag : tags) {
    String tagName=tag.getName();
    JavadocTagInfo tagInfo=docManager.getTagInfo(tagName);
    if (tagInfo == null || !tagInfo.isValidInContext(context)) {
      if (checkTagInfo(tag,tagInfo,holder))       continue;
    }
    PsiDocTagValue value=tag.getValueElement();
    if (tagInfo != null && !tagInfo.isValidInContext(context))     continue;
    String message=tagInfo == null ? null : tagInfo.checkTagValue(value);
    PsiReference reference=value != null ? value.getReference() : null;
    if (message == null && reference != null) {
      PsiElement element=reference.resolve();
      if (element == null) {
        int textOffset=value.getTextOffset();
        if (textOffset == value.getTextRange().getEndOffset()) {
          holder.eolProblem(tag,InspectionsBundle.message("inspection.javadoc.problem.name.expected"),null);
        }
      }
    }
    if (message != null) {
      PsiDocTagValue valueElement=tag.getValueElement();
      if (valueElement == null) {
        String tagText="<code>" + tag.getName() + "</code>";
        holder.problem(tag,InspectionsBundle.message("inspection.javadoc.method.problem.missing.tag.description",tagText),null);
      }
 else {
        holder.problem(valueElement,message,null);
      }
    }
    PsiElement[] dataElements=tag.getDataElements();
    if ("see".equals(tagName)) {
      if (dataElements.length == 0 || dataElements.length == 1 && empty(dataElements[0])) {
        holder.problem(tag.getNameElement(),InspectionsBundle.message("inspection.javadoc.problem.see.tag.expecting.ref"),null);
      }
 else       if (!isValidSeeRef(dataElements[0])) {
        holder.problem(dataElements[0],InspectionsBundle.message("inspection.javadoc.problem.see.tag.expecting.ref"),null);
      }
    }
    checkInlineTags(dataElements,holder);
  }
}
