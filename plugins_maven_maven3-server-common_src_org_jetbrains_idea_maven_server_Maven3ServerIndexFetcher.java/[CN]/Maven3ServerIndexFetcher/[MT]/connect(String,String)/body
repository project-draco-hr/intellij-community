{
  ArtifactRepository artifactRepository=myRepositorySystem.createArtifactRepository(myOriginalRepositoryId,myOriginalRepositoryUrl,null,null,null);
  final ArtifactRepository mirrorRepository=myWagonManager.getMirrorRepository(artifactRepository);
  String mirrorUrl=mirrorRepository.getUrl();
  String indexUrl=mirrorUrl + (mirrorUrl.endsWith("/") ? "" : "/") + ".index";
  Repository repository=new Repository(myOriginalRepositoryId,indexUrl);
  try {
    myWagon=myWagonManager.getWagon(repository);
    myWagon.addTransferListener(myListener);
    myWagon.connect(repository,myWagonManager.getAuthenticationInfo(mirrorRepository.getId()),myWagonManager.getProxy(mirrorRepository.getProtocol()));
  }
 catch (  AuthenticationException e) {
    IOException newEx=new IOException("Authentication exception connecting to " + repository);
    newEx.initCause(e);
    throw newEx;
  }
catch (  WagonException e) {
    IOException newEx=new IOException("Wagon exception connecting to " + repository);
    newEx.initCause(e);
    throw newEx;
  }
}
