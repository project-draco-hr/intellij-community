{
  if (type == null)   return val1;
  called++;
  if (type == Type.VOID_TYPE)   return null;
  if (called < rangeEnd && rangeStart <= called && (ASMUtils.isReferenceType(type) || ASMUtils.isBooleanType(type))) {
    int n=called - shift;
    return type.getSize() == 1 ? new IParamsValue(1 << n,1) : new IParamsValue(1 << n,2);
  }
 else {
    return type.getSize() == 1 ? val1 : val2;
  }
}
