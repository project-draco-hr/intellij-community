{
  if (expression instanceof PsiNewExpression) {
    final PsiAnonymousClass anonymousClass=((PsiNewExpression)expression).getAnonymousClass();
    if (anonymousClass != null) {
      if (AnonymousCanBeLambdaInspection.canBeConvertedToLambda(anonymousClass,true)) {
        AnonymousCanBeLambdaInspection.replacePsiElementWithLambda(expression,true);
      }
    }
 else {
      return addApplyReference(expression);
    }
  }
 else   if (!(expression instanceof PsiFunctionalExpression)) {
    return addApplyReference(expression);
  }
  return expression;
}
