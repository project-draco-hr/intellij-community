{
  myParentToolWindow.activate();
  myParentToolWindow.waitUntilIsVisible();
  TabLabel tabLabel;
  if (parentComponentType == null) {
    tabLabel=waitUntilFound(myRobot,new GenericTypeMatcher<TabLabel>(TabLabel.class){
      @Override protected boolean isMatching(      @NotNull TabLabel component){
        return component.toString().equals(tabName);
      }
    }
);
  }
 else {
    final JComponent parent=myRobot.finder().findByType(root,parentComponentType,false);
    tabLabel=waitUntilFound(myRobot,parent,new GenericTypeMatcher<TabLabel>(TabLabel.class){
      @Override protected boolean isMatching(      @NotNull TabLabel component){
        return component.getParent() == parent && component.toString().equals(tabName);
      }
    }
);
  }
  myRobot.click(tabLabel);
  return myRobot.finder().findByType(tabContentType);
}
