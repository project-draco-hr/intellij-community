{
  IParametersUsage parametersUsage=new IParametersUsage(methodNode);
  Frame<?>[] frames=jsr ? new Analyzer<IParamsValue>(parametersUsage).analyze(className,methodNode) : new LiteAnalyzer<IParamsValue>(parametersUsage).analyze(className,methodNode);
  int leakingMask=parametersUsage.leaking;
  boolean[] result=new boolean[parametersUsage.arity];
  for (int i=0; i < result.length; i++) {
    result[i]=(leakingMask & (1 << i)) != 0;
  }
  return Pair.create(result,(Frame<Value>[])frames);
}
