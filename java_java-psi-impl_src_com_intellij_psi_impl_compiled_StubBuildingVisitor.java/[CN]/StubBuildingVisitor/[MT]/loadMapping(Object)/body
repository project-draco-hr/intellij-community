{
  if (MAP_INNER_CLASSES_BY_TABLE && classSource instanceof VirtualFile) {
    try {
      final Map<String,Pair<String,String>> mapping=ContainerUtil.newHashMap();
      byte[] bytes=((VirtualFile)classSource).contentsToByteArray(false);
      new ClassReader(bytes).accept(new ClassVisitor(ASM_API){
        @Override public void visitInnerClass(        String name,        String outerName,        String innerName,        int access){
          if (outerName != null && innerName != null) {
            mapping.put(name,pair(outerName,innerName));
          }
        }
      }
,EMPTY_ATTRIBUTES,ClassReader.SKIP_DEBUG | ClassReader.SKIP_CODE | ClassReader.SKIP_FRAMES);
      if (!mapping.isEmpty()) {
        return mapping;
      }
    }
 catch (    Exception ignored) {
    }
  }
  return null;
}
