{
  final PsiCodeBlock body=method.getBody();
  final String baseParameterName=StringUtil.decapitalize(descriptor.getClassName());
  final Project project=method.getProject();
  final String paramName=body != null ? JavaCodeStyleManager.getInstance(project).suggestUniqueVariableName(baseParameterName,body.getLBrace(),true) : JavaCodeStyleManager.getInstance(project).propertyNameToVariableName(baseParameterName,VariableKind.PARAMETER);
  final String classTypeText=descriptor.createFakeClassTypeText();
  final JavaPsiFacade facade=JavaPsiFacade.getInstance(project);
  return new ParameterInfoImpl(-1,paramName,facade.getElementFactory().createTypeFromText(classTypeText,method),null){
    @Nullable @Override public PsiElement getActualValue(    PsiElement exp){
      final IntroduceParameterObjectDelegate<PsiNamedElement,ParameterInfo,IntroduceParameterObjectClassDescriptor<PsiNamedElement,ParameterInfo>> delegate=findDelegate(exp);
      return delegate != null ? delegate.createNewParameterInitializerAtCallSite(exp,descriptor,oldMethodParameters) : null;
    }
  }
;
}
