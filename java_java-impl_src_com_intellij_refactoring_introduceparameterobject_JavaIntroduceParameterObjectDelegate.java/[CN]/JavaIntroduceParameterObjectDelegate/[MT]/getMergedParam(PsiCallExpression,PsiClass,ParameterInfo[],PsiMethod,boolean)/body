{
  final PsiExpression[] args=call.getArgumentList().getExpressions();
  StringBuilder newExpression=new StringBuilder();
  final JavaResolveResult resolvant=call.resolveMethodGenerics();
  final PsiSubstitutor substitutor=resolvant.getSubstitutor();
  newExpression.append("new ").append(JavaPsiFacade.getElementFactory(call.getProject()).createType(existingClass,substitutor).getCanonicalText());
  newExpression.append('(');
  boolean isFirst=true;
  for (  ParameterInfo info : paramsToMerge) {
    if (!isFirst) {
      newExpression.append(", ");
    }
    isFirst=false;
    newExpression.append(getArgument(args,info.getOldIndex(),method));
  }
  if (lastVarargsToMerge) {
    final int lastArg=paramsToMerge[paramsToMerge.length - 1].getOldIndex();
    for (int i=lastArg + 1; i < args.length; i++) {
      newExpression.append(',');
      newExpression.append(getArgument(args,i,method));
    }
  }
  newExpression.append(')');
  return newExpression.toString();
}
