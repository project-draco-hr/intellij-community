{
  myLeftPane=ScrollPaneFactory.createScrollPane();
  myLeftPane.putClientProperty(UIUtil.KEEP_BORDER_SIDES,SideBorder.TOP);
  myStatisticsComponent=createStatisticsPanel();
  myStatusLine=createStatusLine();
  JComponent testTreeView=createTestTreeView();
  myToolbarPanel=createToolbarPanel();
  Disposer.register(this,myToolbarPanel);
  final String windowId=myProperties.getExecutor().getToolWindowId();
  final ToolWindow toolWindow=ToolWindowManager.getInstance(myProperties.getProject()).getToolWindow(windowId);
  boolean splitVertically=false;
  if (toolWindow != null) {
    final ToolWindowAnchor anchor=toolWindow.getAnchor();
    splitVertically=anchor == ToolWindowAnchor.LEFT || anchor == ToolWindowAnchor.RIGHT;
  }
  myStatusLine.setPreferredSize(splitVertically);
  mySplitter=createSplitter(mySplitterProportionProperty,mySplitterDefaultProportion,splitVertically);
  Disposer.register(this,new Disposable(){
    @Override public void dispose(){
      remove(mySplitter);
      mySplitter.dispose();
    }
  }
);
  add(mySplitter,BorderLayout.CENTER);
  final JPanel leftPanel=new JPanel(new BorderLayout());
  leftPanel.add(myLeftPane,BorderLayout.CENTER);
  leftPanel.add(myToolbarPanel,BorderLayout.NORTH);
  mySplitter.setFirstComponent(leftPanel);
  myStatusLine.setMinimumSize(new Dimension(0,myStatusLine.getMinimumSize().height));
  myStatusLine.setBorder(BorderFactory.createEmptyBorder(0,0,0,5));
  final JPanel rightPanel=new JPanel(new BorderLayout());
  rightPanel.add(SameHeightPanel.wrap(myStatusLine,myToolbarPanel),BorderLayout.NORTH);
  myStatisticsSplitter=createSplitter(myStatisticsSplitterProportionProperty,0.5f,false);
  myStatisticsSplitter.setFirstComponent(createOutputTab(myConsole,myConsoleActions));
  if (Registry.is("tests.view.old.statistics.panel")) {
    if (TestConsoleProperties.SHOW_STATISTICS.value(myProperties)) {
      showStatistics();
    }
    myProperties.addListener(TestConsoleProperties.SHOW_STATISTICS,new TestFrameworkPropertyListener<Boolean>(){
      @Override public void onChanged(      Boolean value){
        if (value.booleanValue()) {
          showStatistics();
        }
 else {
          myStatisticsSplitter.setSecondComponent(null);
        }
      }
    }
);
  }
  rightPanel.add(myStatisticsSplitter,BorderLayout.CENTER);
  mySplitter.setSecondComponent(rightPanel);
  testTreeView.setBorder(BorderFactory.createEmptyBorder(0,3,0,0));
  setLeftComponent(testTreeView);
}
