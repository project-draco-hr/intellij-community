{
  JPanel outputTab=new JPanel(new BorderLayout());
  console.setFocusable(true);
  final Color editorBackground=EditorColorsManager.getInstance().getGlobalScheme().getDefaultBackground();
  console.setBorder(new CompoundBorder(IdeBorderFactory.createBorder(SideBorder.RIGHT | SideBorder.TOP),new SideBorder(editorBackground,SideBorder.LEFT)));
  outputTab.add(console,BorderLayout.CENTER);
  final DefaultActionGroup actionGroup=new DefaultActionGroup(consoleActions);
  final ToggleBooleanProperty property=new ToggleBooleanProperty("Layout Vertically","Layout console under the tests tree",null,myProperties,TestConsoleProperties.SPLIT_VERTICALLY){
    @Override public void setSelected(    AnActionEvent e,    boolean state){
      super.setSelected(e,state);
      myStatusLine.setPreferredSize(myProperties);
      mySplitter.setOrientation(state);
    }
  }
;
  final DefaultActionGroup settingsGroup=new DefaultActionGroup(property);
  settingsGroup.setPopup(true);
  settingsGroup.getTemplatePresentation().setIcon(AllIcons.General.SecondaryGroup);
  actionGroup.add(settingsGroup);
  final ActionToolbar toolbar=ActionManager.getInstance().createActionToolbar(ActionPlaces.UNKNOWN,actionGroup,false);
  outputTab.add(toolbar.getComponent(),BorderLayout.EAST);
  return outputTab;
}
