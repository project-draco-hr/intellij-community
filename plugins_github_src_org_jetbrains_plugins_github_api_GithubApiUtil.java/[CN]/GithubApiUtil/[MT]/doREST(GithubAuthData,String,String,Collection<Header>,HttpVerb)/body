{
  HttpClient client=getHttpClient(auth.getBasicAuth(),auth.isUseProxy());
  HttpMethod method;
switch (verb) {
case POST:
    method=new PostMethod(uri);
  if (requestBody != null) {
    ((PostMethod)method).setRequestEntity(new StringRequestEntity(requestBody,"application/json","UTF-8"));
  }
break;
case GET:
method=new GetMethod(uri);
break;
case DELETE:
method=new DeleteMethod(uri);
break;
case HEAD:
method=new HeadMethod(uri);
break;
default :
throw new IllegalStateException("Wrong HttpVerb: unknown method: " + verb.toString());
}
GithubAuthData.TokenAuth tokenAuth=auth.getTokenAuth();
if (tokenAuth != null) {
method.addRequestHeader("Authorization","token " + tokenAuth.getToken());
}
for (Header header : headers) {
method.addRequestHeader(header);
}
try {
client.executeMethod(method);
}
 catch (SSLHandshakeException e) {
if (e.getCause() instanceof ValidatorException) {
LOG.info("Host SSL certificate is not trusted",e);
throw new GithubOperationCanceledException("Host SSL certificate is not trusted",e);
}
throw e;
}
return method;
}
