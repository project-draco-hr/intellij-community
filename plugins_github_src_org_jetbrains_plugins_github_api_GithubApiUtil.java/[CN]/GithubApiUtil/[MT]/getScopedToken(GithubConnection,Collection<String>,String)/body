{
  try {
    return getNewScopedToken(connection,scopes,note).getToken();
  }
 catch (  GithubStatusCodeException e) {
    if (e.getError() != null && e.getError().containsErrorCode("already_exists")) {
      List<GithubAuthorization> tokens=getAllTokens(connection);
      for (int i=1; i < 100; i++) {
        final String newNote=note + "_" + i;
        if (ContainerUtil.find(tokens,new Condition<GithubAuthorization>(){
          @Override public boolean value(          GithubAuthorization authorization){
            return newNote.equals(authorization.getNote());
          }
        }
) == null) {
          return getNewScopedToken(connection,scopes,newNote).getToken();
        }
      }
    }
    throw e;
  }
}
