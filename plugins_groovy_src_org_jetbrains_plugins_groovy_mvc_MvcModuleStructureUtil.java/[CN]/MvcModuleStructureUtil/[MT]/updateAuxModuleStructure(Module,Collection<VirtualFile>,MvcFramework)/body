{
  final MvcProjectStructure structure=framework.createProjectStructure(auxModule,true);
  Pair<Collection<Consumer<ModifiableRootModel>>,Collection<Consumer<ModifiableFacetModel>>> actions=getUpdateProjectStructureActions(pluginDirs,structure);
  for (  final ContentEntry root : ModuleRootManager.getInstance(auxModule).getContentEntries()) {
    if (!pluginDirs.contains(root.getFile())) {
      actions.first.add(removeStaleContentEntries(pluginDirs));
      break;
    }
  }
  if (!actions.first.isEmpty()) {
    actions.first.add(exportDefaultLibrary(structure.getUserLibraryName()));
  }
  if (!actions.first.isEmpty()) {
    final ModifiableRootModel model=ModuleRootManager.getInstance(auxModule).getModifiableModel();
    for (    final Consumer<ModifiableRootModel> pluginsUpdateAction : actions.first) {
      pluginsUpdateAction.consume(model);
    }
    model.commit();
  }
  if (!actions.second.isEmpty()) {
    final ModifiableFacetModel model=FacetManager.getInstance(auxModule).createModifiableModel();
    for (    Consumer<ModifiableFacetModel> action : actions.second) {
      action.consume(model);
    }
    model.commit();
  }
}
