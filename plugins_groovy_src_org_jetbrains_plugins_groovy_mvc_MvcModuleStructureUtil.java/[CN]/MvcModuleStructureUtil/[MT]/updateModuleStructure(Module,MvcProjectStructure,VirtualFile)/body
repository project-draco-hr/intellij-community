{
  final Pair<Collection<Consumer<ModifiableRootModel>>,Collection<Consumer<ModifiableFacetModel>>> actions=getUpdateProjectStructureActions(Collections.singletonList(root),structure);
  if (!actions.first.isEmpty()) {
    ModuleRootModificationUtil.updateModel(module,new Consumer<ModifiableRootModel>(){
      @Override public void consume(      ModifiableRootModel model){
        for (        final Consumer<ModifiableRootModel> action : actions.first) {
          action.consume(model);
        }
      }
    }
);
  }
  if (!actions.second.isEmpty()) {
    final Application application=ApplicationManager.getApplication();
    final ModifiableFacetModel model=application.runReadAction(new Computable<ModifiableFacetModel>(){
      @Override public ModifiableFacetModel compute(){
        return FacetManager.getInstance(module).createModifiableModel();
      }
    }
);
    for (    Consumer<ModifiableFacetModel> action : actions.second) {
      action.consume(model);
    }
    application.invokeAndWait(new Runnable(){
      @Override public void run(){
        application.runWriteAction(new Runnable(){
          @Override public void run(){
            model.commit();
          }
        }
);
      }
    }
,application.getDefaultModalityState());
  }
}
