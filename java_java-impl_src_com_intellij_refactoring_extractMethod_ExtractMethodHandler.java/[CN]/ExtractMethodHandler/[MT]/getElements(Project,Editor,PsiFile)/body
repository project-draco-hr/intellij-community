{
  int startOffset=editor.getSelectionModel().getSelectionStart();
  int endOffset=editor.getSelectionModel().getSelectionEnd();
  PsiElement[] elements;
  PsiExpression expr=CodeInsightUtil.findExpressionInRange(file,startOffset,endOffset);
  if (expr != null) {
    elements=new PsiElement[]{expr};
  }
 else {
    elements=CodeInsightUtil.findStatementsInRange(file,startOffset,endOffset);
    if (elements.length == 0) {
      final PsiExpression expression=IntroduceVariableBase.getSelectedExpression(project,file,startOffset,endOffset);
      if (expression != null && IntroduceVariableBase.getErrorMessage(expression) == null) {
        final PsiType originalType=RefactoringUtil.getTypeByExpressionWithExpectedType(expression);
        if (originalType != null) {
          elements=new PsiElement[]{expression};
        }
      }
    }
  }
  return elements;
}
