{
  editor.getScrollingModel().scrollToCaret(ScrollType.MAKE_VISIBLE);
  if (!editor.getSelectionModel().hasSelection()) {
    final int offset=editor.getCaretModel().getOffset();
    final List<PsiExpression> expressions=IntroduceVariableBase.collectExpressions(file,editor,offset,true);
    if (expressions.isEmpty()) {
      editor.getSelectionModel().selectLineAtCaret();
    }
 else     if (expressions.size() == 1) {
      callback.pass(new PsiElement[]{expressions.get(0)});
      return;
    }
 else {
      IntroduceTargetChooser.showChooser(editor,expressions,new Pass<PsiExpression>(){
        @Override public void pass(        PsiExpression psiExpression){
          callback.pass(new PsiElement[]{psiExpression});
        }
      }
,new PsiExpressionTrimRenderer.RenderFunction());
      return;
    }
  }
  PsiDocumentManager.getInstance(project).commitAllDocuments();
  callback.pass(getElements(project,editor,file));
}
