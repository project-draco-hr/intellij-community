{
  final Project project=psiManager.getProject();
  GlobalSearchScope scope=GlobalSearchScope.projectScope(project).intersectWith(globalSearchScope);
  final String baseName=ApplicationManager.getApplication().runReadAction(new Computable<String>(){
    @Override public String compute(){
      return propFile.getResourceBundle().getBaseName();
    }
  }
);
  PsiFile containingFile=ApplicationManager.getApplication().runReadAction(new Computable<PsiFile>(){
    @Override public PsiFile compute(){
      return propFile.getContainingFile();
    }
  }
);
  List<PsiFile> files=Arrays.asList(CacheManager.SERVICE.getInstance(project).getFilesWithWord(baseName,UsageSearchContext.IN_PLAIN_TEXT,scope,true));
  return processReferencesInFiles(files,psiManager,baseName,containingFile,filterScope,processor);
}
