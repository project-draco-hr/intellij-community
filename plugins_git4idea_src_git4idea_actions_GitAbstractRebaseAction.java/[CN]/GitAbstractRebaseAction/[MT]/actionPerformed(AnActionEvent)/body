{
  final Project project=e.getRequiredData(CommonDataKeys.PROJECT);
  ProgressManager progressManager=ProgressManager.getInstance();
  String progressTitle=getProgressTitle();
  if (getRepositoryManager(project).hasOngoingRebase()) {
    progressManager.run(new Task.Backgroundable(project,progressTitle){
      @Override public void run(      @NotNull ProgressIndicator indicator){
        performActionForProject(project,indicator);
      }
    }
);
  }
 else {
    final GitRepository repositoryToOperate=chooseRepository(project,GitRebaseUtils.getRebasingRepositories(project));
    if (repositoryToOperate != null) {
      progressManager.run(new Task.Backgroundable(project,progressTitle){
        @Override public void run(        @NotNull ProgressIndicator indicator){
          performActionForRepository(project,repositoryToOperate,indicator);
        }
      }
);
    }
  }
}
