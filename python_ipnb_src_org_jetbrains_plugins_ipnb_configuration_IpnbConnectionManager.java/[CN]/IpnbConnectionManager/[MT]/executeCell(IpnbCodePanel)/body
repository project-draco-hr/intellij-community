{
  final IpnbFileEditor fileEditor=codePanel.getFileEditor();
  final VirtualFile virtualFile=fileEditor.getVirtualFile();
  final String path=virtualFile.getPath();
  if (!myKernels.containsKey(path)) {
    String url=IpnbSettings.getInstance(myProject).getURL();
    if (StringUtil.isEmptyOrSpaces(url)) {
      showWarning(fileEditor,"Please, specify IPython Notebook URL in <a href=\"\">Settings->IPython Notebook</a>");
      return;
    }
    if (startConnection(codePanel,path,url,false)) {
      return;
    }
    url=showDialogUrl(url);
    if (url == null)     return;
    IpnbSettings.getInstance(myProject).setURL(url);
    boolean connectionStarted=startConnection(codePanel,path,url,false);
    if (!connectionStarted) {
      final boolean serverStarted=startIpythonServer(url,fileEditor);
      if (!serverStarted) {
        return;
      }
      final Notification notification=new Notification("IPythonNotebook","","<html>IPython notebook started at <a href=\"" + url + "\">"+ url+ "</a></html>",NotificationType.INFORMATION,NotificationListener.URL_OPENING_LISTENER);
      notification.notify(myProject);
      IpnbSettings.getInstance(myProject).setURL(url);
    }
    final String finalUrl=url;
    new Alarm().addRequest(new Runnable(){
      @Override public void run(){
        startConnection(codePanel,path,finalUrl,true);
      }
    }
,3000);
  }
 else {
    final IpnbConnection connection=myKernels.get(path);
    if (connection != null) {
      final String messageId=connection.execute(codePanel.getCell().getSourceAsString());
      myUpdateMap.put(messageId,codePanel);
    }
  }
}
