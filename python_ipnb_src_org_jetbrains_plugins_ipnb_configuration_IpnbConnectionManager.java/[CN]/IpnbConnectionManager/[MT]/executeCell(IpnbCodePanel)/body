{
  final IpnbFileEditor fileEditor=codePanel.getFileEditor();
  final VirtualFile virtualFile=fileEditor.getVirtualFile();
  final String path=virtualFile.getPath();
  if (!myKernels.containsKey(path)) {
    String url=IpnbSettings.getInstance(myProject).getURL();
    if (StringUtil.isEmptyOrSpaces(url)) {
      url=DEFAULT_URL;
    }
    if (!isAvailable(url)) {
      url=showDialogUrl(url);
      if (url == null)       return;
      final boolean serverStarted=startIpythonServer(url,fileEditor);
      if (myProcessHandler != null) {
        waitForIpythonServer();
        boolean connectionStarted=startConnection(codePanel,path,url);
        if (connectionStarted && serverStarted) {
          final Notification notification=new Notification("IPythonNotebook","","<html>IPython notebook started at <a href=\"" + url + "\">"+ url+ "</a></html>",NotificationType.INFORMATION,NotificationListener.URL_OPENING_LISTENER);
          notification.notify(myProject);
          IpnbSettings.getInstance(myProject).setURL(url);
        }
        return;
      }
 else {
        return;
      }
    }
    if (StringUtil.isEmptyOrSpaces(url)) {
      showWarning(fileEditor,"Please, specify IPython Notebook URL in <a href=\"\">Settings->IPython Notebook</a>");
      return;
    }
    startConnection(codePanel,path,url);
  }
 else {
    final IpnbConnection connection=myKernels.get(path);
    if (connection != null) {
      final String messageId=connection.execute(codePanel.getCell().getSourceAsString());
      myUpdateMap.put(messageId,codePanel);
    }
  }
}
