{
  final Set<ArrangementRuleAlias> tokens=ContainerUtil.newHashSet(visibilityToken(),modifiersToken());
  final ArrayList<ArrangementGroupingRule> groupings=ContainerUtil.newArrayList(new ArrangementGroupingRule(OVERRIDDEN_METHODS,BY_NAME));
  final ArrayList<ArrangementSectionRule> rules=ContainerUtil.newArrayList(section(true,FIELD,customToken("visibility")));
  final StdArrangementExtendableSettings settings=extendableSettings(groupings,rules,tokens);
  final ArrayList<ArrangementSectionRule> defaultRules=ContainerUtil.newArrayList(section(true,FIELD));
  final StdArrangementExtendableSettings defaultSettings=extendableSettings(groupings,defaultRules,tokens);
  final Element holder=doSerializationTest(settings,defaultSettings);
  assertTrue(holder.getChildren().size() == 1);
  final Element tokenElement=holder.getChildren().get(0);
  assertEquals(tokenElement.getName(),"rules");
  assertTrue(tokenElement.getChildren().size() == 1);
  assertEquals(tokenElement.getChildren().get(0).getName(),"section");
  final Element rule=tokenElement.getChildren().get(0).getChildren().get(0);
  assertEquals(rule.getName(),"rule");
  assertEquals(rule.getChildren().get(0).getName(),"match");
  final Element and=rule.getChildren().get(0).getChildren().get(0);
  assertEquals(and.getName(),"AND");
  assertTrue(StringUtil.equals(and.getChildren().get(0).getName(),"visibility") || StringUtil.equals(and.getChildren().get(1).getName(),"visibility"));
}
