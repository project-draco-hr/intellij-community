{
  final Set<ArrangementRuleAlias> tokens=ContainerUtil.newHashSet(visibilityToken(),modifiersToken());
  final ArrayList<ArrangementGroupingRule> groupings=ContainerUtil.newArrayList(new ArrangementGroupingRule(OVERRIDDEN_METHODS,BY_NAME));
  final ArrayList<ArrangementSectionRule> rules=ContainerUtil.newArrayList(section(true,FIELD));
  final StdArrangementExtendableSettings settings=extendableSettings(groupings,rules,tokens);
  final Set<ArrangementRuleAlias> defaultTokens=ContainerUtil.newHashSet(visibilityToken());
  final StdArrangementExtendableSettings defaultSettings=extendableSettings(groupings,rules,defaultTokens);
  final Element holder=doSerializationTest(settings,defaultSettings);
  assertTrue(holder.getChildren().size() == 1);
  final Element tokenElement=holder.getChildren().get(0);
  assertEquals(tokenElement.getName(),"tokens");
  assertTrue(tokenElement.getChildren().size() == 2);
  final List<Element> tokenElements=tokenElement.getChildren();
  final Element first=tokenElements.get(0);
  final Element second=tokenElements.get(1);
  assertEquals(first.getName(),"token");
  assertEquals(second.getName(),"token");
  assertTrue(StringUtil.equals(first.getAttributeValue("id"),"visibility") || StringUtil.equals(second.getAttributeValue("id"),"visibility"));
  assertTrue(StringUtil.equals(first.getAttributeValue("id"),"modifiers") || StringUtil.equals(second.getAttributeValue("id"),"modifiers"));
}
