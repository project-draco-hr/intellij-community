{
  prepareLocalChangesOverwrittenBy(myUltimate);
  GitBranchWorker brancher=new GitBranchWorker(myProject,myGit,new TestUiHandler(){
    @Override public int showSmartOperationDialog(    @NotNull Project project,    @NotNull List<Change> changes,    @NotNull Collection<String> paths,    @NotNull String operation,    @Nullable String forceButton){
      return GitSmartOperationDialog.FORCE_EXIT_CODE;
    }
  }
);
  brancher.checkoutNewBranchStartingFrom("new_branch","feature",myRepositories);
  assertEquals("Notification about successful branch creation is incorrect","Checked out new branch <b><code>new_branch</code></b> from <b><code>feature</code></b>",myVcsNotifier.getLastNotification().getContent());
  assertCurrentBranch("new_branch");
}
