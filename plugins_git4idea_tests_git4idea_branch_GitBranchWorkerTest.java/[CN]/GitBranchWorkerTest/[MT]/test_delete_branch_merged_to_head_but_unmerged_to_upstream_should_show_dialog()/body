{
  prepareRemoteRepo(myCommunity);
  cd(myCommunity);
  git("checkout -b feature");
  git("push -u origin feature");
  touch("feature.txt","feature content");
  git("add feature.txt");
  git("commit -m feature_branch");
  git("checkout master");
  git("merge feature");
  final Ref<Boolean> dialogShown=Ref.create(false);
  GitBranchWorker brancher=new GitBranchWorker(myProject,myGit,new TestUiHandler(){
    @Override public boolean showBranchIsNotFullyMergedDialog(    @NotNull Project project,    @NotNull Map<GitRepository,List<GitCommit>> history,    @NotNull String unmergedBranch,    @NotNull List<String> mergedToBranches,    @NotNull String baseBranch){
      dialogShown.set(true);
      return false;
    }
  }
);
  brancher.deleteBranch("feature",Arrays.asList(myCommunity));
  assertTrue("'Branch is not fully merged' dialog was not shown",dialogShown.get());
}
