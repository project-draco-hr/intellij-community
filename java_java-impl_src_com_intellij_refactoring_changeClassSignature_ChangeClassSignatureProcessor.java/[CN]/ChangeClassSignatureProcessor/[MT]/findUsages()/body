{
  GlobalSearchScope projectScope=GlobalSearchScope.projectScope(myProject);
  List<UsageInfo> result=new ArrayList<UsageInfo>();
  boolean hadTypeParameters=myClass.hasTypeParameters();
  for (  final PsiReference reference : ReferencesSearch.search(myClass,projectScope,false)) {
    if (reference.getElement() instanceof PsiJavaCodeReferenceElement) {
      PsiJavaCodeReferenceElement referenceElement=(PsiJavaCodeReferenceElement)reference.getElement();
      PsiElement parent=referenceElement.getParent();
      if (parent instanceof PsiTypeElement && parent.getParent() instanceof PsiInstanceOfExpression)       continue;
      if (parent instanceof PsiNewExpression && PsiUtil.isLanguageLevel7OrHigher(parent)) {
        final PsiReferenceParameterList parameterList=referenceElement.getParameterList();
        if (parameterList != null) {
          final PsiTypeElement[] parameterElements=parameterList.getTypeParameterElements();
          if (parameterElements.length == 1 && parameterElements[0].getType() instanceof PsiDiamondType)           continue;
        }
      }
      if (parent instanceof PsiTypeElement || parent instanceof PsiNewExpression || parent instanceof PsiAnonymousClass|| parent instanceof PsiReferenceList) {
        if (!hadTypeParameters || referenceElement.getTypeParameters().length > 0) {
          result.add(new UsageInfo(referenceElement));
        }
      }
    }
  }
  return result.toArray(new UsageInfo[result.size()]);
}
