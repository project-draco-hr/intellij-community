{
  startNode(node);
  final PyForPart forPart=node.getForPart();
  final PyExpression source=forPart.getSource();
  if (source != null) {
    source.accept(this);
  }
  final Instruction head=myPrevInstruction;
  final PyElsePart elsePart=node.getElsePart();
  if (elsePart == null) {
    addPendingEdge(node,myPrevInstruction);
  }
  final PyStatementList list=forPart.getStatementList();
  if (list != null) {
    Instruction bodyInstruction=startNode(list);
    final PyExpression target=forPart.getTarget();
    if (target != null) {
      target.accept(this);
    }
    list.accept(this);
    if (myPrevInstruction != null) {
      addEdge(myPrevInstruction,bodyInstruction);
      addPendingEdge(node,myPrevInstruction);
    }
  }
  myPrevInstruction=head;
  if (elsePart != null) {
    elsePart.accept(this);
    addPendingEdge(node,myPrevInstruction);
  }
  flowAbrupted();
}
