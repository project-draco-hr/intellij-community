{
  myBuilder.startNode(node);
  final PyForPart forPart=node.getForPart();
  final PyExpression source=forPart.getSource();
  if (source != null) {
    source.accept(this);
  }
  final Instruction head=myBuilder.prevInstruction;
  final PyElsePart elsePart=node.getElsePart();
  if (elsePart == null) {
    myBuilder.addPendingEdge(node,myBuilder.prevInstruction);
  }
  final PyStatementList list=forPart.getStatementList();
  if (list != null) {
    Instruction bodyInstruction=myBuilder.startNode(list);
    final PyExpression target=forPart.getTarget();
    if (target != null) {
      target.accept(this);
    }
    list.accept(this);
    if (myBuilder.prevInstruction != null) {
      myBuilder.addEdge(myBuilder.prevInstruction,bodyInstruction);
      myBuilder.addPendingEdge(node,myBuilder.prevInstruction);
    }
  }
  myBuilder.prevInstruction=head;
  if (elsePart != null) {
    elsePart.accept(this);
    myBuilder.addPendingEdge(node,myBuilder.prevInstruction);
  }
  myBuilder.flowAbrupted();
}
