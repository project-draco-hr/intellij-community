{
  if ("exit".equals(node.getCallee().getText())) {
    for (    PyExpression expression : node.getArguments()) {
      expression.accept(this);
    }
    myBuilder.processPending(new ControlFlowBuilder.PendingProcessor(){
      public void process(      final PsiElement pendingScope,      final Instruction instruction){
        if (pendingScope != null && PsiTreeUtil.isAncestor(node,pendingScope,false)) {
          myBuilder.addPendingEdge(null,instruction);
        }
 else {
          myBuilder.addPendingEdge(pendingScope,instruction);
        }
      }
    }
);
    myBuilder.addPendingEdge(null,myBuilder.prevInstruction);
    myBuilder.flowAbrupted();
  }
 else {
    super.visitPyCallExpression(node);
  }
}
