{
  final TestData data=myConfig.getPersistantData();
  final SourceScope scope=data.getScope().getSourceScope(myConfig);
  if (scope == null) {
    throw new RuntimeConfigurationException("Invalid scope specified");
  }
  PsiClass psiClass=JavaPsiFacade.getInstance(myConfig.getProject()).findClass(data.getMainClassName(),scope.getGlobalSearchScope());
  if (psiClass == null)   throw new RuntimeConfigurationException("Class '" + data.getMainClassName() + "' not found");
  PsiMethod[] methods=psiClass.findMethodsByName(data.getMethodName(),true);
  if (methods.length == 0) {
    throw new RuntimeConfigurationException("Method '" + data.getMethodName() + "' not found");
  }
  for (  PsiMethod method : methods) {
    if (!method.hasModifierProperty(PsiModifier.PUBLIC)) {
      throw new RuntimeConfigurationException("Non public method '" + data.getMethodName() + "'specified");
    }
  }
}
