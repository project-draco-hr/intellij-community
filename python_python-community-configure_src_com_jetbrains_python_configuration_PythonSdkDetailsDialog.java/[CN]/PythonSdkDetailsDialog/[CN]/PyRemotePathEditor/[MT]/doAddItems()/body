{
  Project project=CommonDataKeys.PROJECT.getData(DataManager.getInstance().getDataContext(myPanel));
  try {
    String[] files=PythonRemoteInterpreterManager.getInstance().chooseRemoteFiles(project,(PyRemoteSdkAdditionalDataBase)mySdk.getSdkAdditionalData(),false);
    final String sourcesLocalPath=PySdkUtil.getRemoteSourcesLocalPath(mySdk.getHomePath());
    VirtualFile[] vFiles=new VirtualFile[files.length];
    int i=0;
    for (    String file : files) {
      String localRoot=PyRemoteSourceItem.localPathForRemoteRoot(sourcesLocalPath,file);
      myNewMappings.add(new PathMappingSettings.PathMapping(localRoot,file));
      myRemoteSdkData.getPathMappings().addMappingCheckUnique(localRoot,file);
      if (!new File(localRoot).exists()) {
        new File(localRoot).mkdirs();
      }
      vFiles[i++]=LocalFileSystem.getInstance().refreshAndFindFileByIoFile(new File(localRoot));
    }
    vFiles=adjustAddedFileSet(myPanel,vFiles);
    List<VirtualFile> added=new ArrayList<VirtualFile>(vFiles.length);
    for (    VirtualFile vFile : vFiles) {
      if (addElement(vFile)) {
        added.add(vFile);
      }
    }
    return VfsUtilCore.toVirtualFileArray(added);
  }
 catch (  Exception e) {
    LOG.error(e);
  }
  return VirtualFile.EMPTY_ARRAY;
}
