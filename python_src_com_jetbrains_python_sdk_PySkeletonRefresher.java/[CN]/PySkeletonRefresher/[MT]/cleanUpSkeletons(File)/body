{
  indicateMinor(dir.getPath());
  final File[] files=dir.listFiles();
  if (files == null) {
    return;
  }
  for (  File item : files) {
    if (item.isDirectory()) {
      cleanUpSkeletons(item);
      File[] remaining=item.listFiles();
      if (remaining != null && remaining.length == 0) {
        mySkeletonsGenerator.deleteOrLog(item);
      }
 else       if (remaining != null && remaining.length == 1) {
        File lastFile=remaining[0];
        if (PyNames.INIT_DOT_PY.equals(lastFile.getName()) && lastFile.length() == 0) {
          boolean deleted=mySkeletonsGenerator.deleteOrLog(lastFile);
          if (deleted)           mySkeletonsGenerator.deleteOrLog(item);
        }
      }
    }
 else     if (item.isFile()) {
      final String itemName=item.getName();
      if (PyNames.INIT_DOT_PY.equals(itemName) && item.length() == 0)       continue;
      if (BLACKLIST_FILE_NAME.equals(itemName))       continue;
      Matcher headerMatcher=getParseHeader(item);
      boolean canLive=headerMatcher != null && headerMatcher.matches();
      if (canLive) {
        String sourceName=headerMatcher.group(1);
        canLive=sourceName != null && (SkeletonVersionChecker.BUILTIN_NAME.equals(sourceName) || new File(sourceName).exists());
      }
      if (!canLive) {
        mySkeletonsGenerator.deleteOrLog(item);
      }
    }
  }
}
