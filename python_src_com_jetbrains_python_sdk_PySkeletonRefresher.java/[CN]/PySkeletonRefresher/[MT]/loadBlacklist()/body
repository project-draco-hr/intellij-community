{
  Map<String,Pair<Integer,Long>> ret=new HashMap<String,Pair<Integer,Long>>();
  File blacklistFile=new File(mySkeletonsPath,BLACKLIST_FILE_NAME);
  if (blacklistFile.exists() && blacklistFile.canRead()) {
    Reader input;
    try {
      input=new FileReader(blacklistFile);
      LineNumberReader lines=new LineNumberReader(input);
      try {
        String line;
        do {
          line=lines.readLine();
          if (line != null && line.length() > 0 && line.charAt(0) != '#') {
            Matcher matcher=BLACKLIST_LINE.matcher(line);
            boolean notParsed=true;
            if (matcher.matches()) {
              final int version=fromVersionString(matcher.group(2));
              if (version > 0) {
                try {
                  final long timestamp=Long.parseLong(matcher.group(3));
                  final String filename=matcher.group(1);
                  ret.put(filename,new Pair<Integer,Long>(version,timestamp));
                  notParsed=false;
                }
 catch (                NumberFormatException ignore) {
                }
              }
            }
            if (notParsed)             LOG.warn("In blacklist at " + mySkeletonsPath + " strange line '"+ line+ "'");
          }
        }
 while (line != null);
      }
 catch (      IOException ex) {
        LOG.warn("Failed to read blacklist in " + mySkeletonsPath,ex);
      }
 finally {
        lines.close();
      }
    }
 catch (    IOException ignore) {
    }
  }
  return ret;
}
