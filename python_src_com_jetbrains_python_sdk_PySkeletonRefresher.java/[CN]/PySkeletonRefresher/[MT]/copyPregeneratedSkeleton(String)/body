{
  File targetDir;
  final String modulePath=moduleName.replace('.','/');
  File skeletonsDir=new File(getSkeletonsPath());
  VirtualFile pregenerated=myPregeneratedSkeletons.findFileByRelativePath(modulePath + ".py");
  if (pregenerated == null) {
    pregenerated=myPregeneratedSkeletons.findFileByRelativePath(modulePath + "/" + PyNames.INIT_DOT_PY);
    targetDir=new File(skeletonsDir,modulePath);
  }
 else {
    int pos=modulePath.lastIndexOf('/');
    if (pos < 0) {
      targetDir=skeletonsDir;
    }
 else {
      final String moduleParentPath=modulePath.substring(0,pos);
      targetDir=new File(skeletonsDir,moduleParentPath);
    }
  }
  if (pregenerated != null && (targetDir.exists() || targetDir.mkdirs())) {
    LOG.info("Pregenerated skeleton for " + moduleName);
    File target=new File(targetDir,pregenerated.getName());
    try {
      FileOutputStream fos=new FileOutputStream(target);
      try {
        FileUtil.copy(pregenerated.getInputStream(),fos);
      }
  finally {
        fos.close();
      }
    }
 catch (    IOException e) {
      LOG.info("Error copying pregenerated skeleton",e);
      return false;
    }
    return true;
  }
  return false;
}
