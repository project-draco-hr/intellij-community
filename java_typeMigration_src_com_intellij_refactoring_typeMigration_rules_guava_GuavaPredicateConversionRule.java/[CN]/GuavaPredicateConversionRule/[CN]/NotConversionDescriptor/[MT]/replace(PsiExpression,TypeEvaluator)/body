{
  String newExpressionString=adjust(((PsiMethodCallExpression)expression).getArgumentList().getExpressions()[0],true,myTargetType,evaluator) + ".negate()";
  final PsiElementFactory elementFactory=JavaPsiFacade.getElementFactory(expression.getProject());
  PsiExpression convertedExpression=(PsiExpression)expression.replace(elementFactory.createExpressionFromText(newExpressionString,expression));
  convertedExpression=convertedExpression.getParent() instanceof PsiMethodReferenceExpression ? (PsiExpression)convertedExpression.getParent().replace(convertedExpression) : convertedExpression;
  final PsiElement maybeTypeCast=convertedExpression.getParent();
  if (maybeTypeCast instanceof PsiTypeCastExpression && RedundantCastUtil.isCastRedundant((PsiTypeCastExpression)maybeTypeCast)) {
    convertedExpression=(PsiExpression)maybeTypeCast.replace(((PsiTypeCastExpression)maybeTypeCast).getOperand());
  }
  return convertedExpression;
}
