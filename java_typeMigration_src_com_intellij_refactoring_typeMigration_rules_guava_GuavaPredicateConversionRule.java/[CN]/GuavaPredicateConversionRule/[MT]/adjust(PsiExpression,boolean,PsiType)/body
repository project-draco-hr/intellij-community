{
  if (expression instanceof PsiFunctionalExpression) {
    final PsiType functionalInterfaceType=((PsiFunctionalExpression)expression).getFunctionalInterfaceType();
    if (isUnconverted(functionalInterfaceType) && insertTypeCase) {
      return "((" + targetType.getCanonicalText() + ")"+ expression.getText()+ ")";
    }
  }
 else   if (expression instanceof PsiMethodCallExpression || expression instanceof PsiReferenceExpression) {
    if (isUnconverted(expression.getType())) {
      expression=(PsiExpression)expression.replace(JavaPsiFacade.getElementFactory(expression.getProject()).createExpressionFromText(expression.getText() + "::apply",expression));
      return adjust(expression,insertTypeCase,targetType);
    }
  }
  return expression.getText();
}
