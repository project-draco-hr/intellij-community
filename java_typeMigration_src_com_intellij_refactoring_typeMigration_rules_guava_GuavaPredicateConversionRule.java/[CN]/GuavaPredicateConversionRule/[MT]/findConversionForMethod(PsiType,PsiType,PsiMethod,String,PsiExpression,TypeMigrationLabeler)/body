{
  if (!(context instanceof PsiMethodCallExpression)) {
    return null;
  }
  if (isPredicates((PsiMethodCallExpression)context)) {
    final TypeConversionDescriptorBase descriptor=GuavaPredicatesUtil.tryConvertIfPredicates(method,context);
    if (descriptor != null) {
      return descriptor;
    }
  }
  return new TypeConversionDescriptorBase(){
    @Override public PsiExpression replace(    PsiExpression expression,    TypeEvaluator evaluator) throws IncorrectOperationException {
      return (PsiExpression)expression.replace(JavaPsiFacade.getElementFactory(expression.getProject()).createExpressionFromText(expression.getText() + "::apply",expression));
    }
  }
;
}
