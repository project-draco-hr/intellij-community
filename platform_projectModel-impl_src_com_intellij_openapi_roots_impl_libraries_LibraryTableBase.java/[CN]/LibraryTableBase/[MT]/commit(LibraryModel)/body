{
  myFirstLoad=false;
  ApplicationManager.getApplication().assertWriteAccessAllowed();
  if (!model.isChanged()) {
    Disposer.dispose(model);
    return;
  }
  Set<Library> addedLibraries=ContainerUtil.newIdentityTroveSet(model.myLibraries);
  addedLibraries.removeAll(myModel.myLibraries);
  Set<Library> removedLibraries=ContainerUtil.newIdentityTroveSet(myModel.myLibraries);
  removedLibraries.removeAll(model.myLibraries);
  for (  Library library : removedLibraries) {
    fireBeforeLibraryRemoved(library);
  }
  myModel.copyFrom(model);
  for (  Library library : removedLibraries) {
    Disposer.dispose(library);
    fireAfterLibraryRemoved(library);
  }
  for (  Library library : addedLibraries) {
    fireLibraryAdded(library);
  }
  Disposer.dispose(model);
}
