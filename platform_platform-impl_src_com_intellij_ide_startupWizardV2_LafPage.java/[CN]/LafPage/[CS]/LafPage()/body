{
  boolean isAlloyAvailable=false;
  boolean isGTKAvailable=false;
  for (  UIManager.LookAndFeelInfo info : UIManager.getInstalledLookAndFeels()) {
    if (ALLOY.equals(info.getName())) {
      isAlloyAvailable=true;
    }
    if (GTK.equals(info.getName())) {
      isGTKAvailable=true;
    }
  }
  final String osPrefix=SystemInfo.isMac ? "OSX" : SystemInfo.isWindows ? "Windows" : "Linux";
  if (SystemInfo.isMac) {
    myLafs.put(new UIManager.LookAndFeelInfo(AQUA,"com.apple.laf.AquaLookAndFeel"),IconLoader.getIcon("/lafs/OSXAqua.png"));
  }
 else {
    if (isAlloyAvailable) {
      myLafs.put(new UIManager.LookAndFeelInfo(ALLOY,"com.incors.plaf.alloy.AlloyIdea"),IconLoader.getIcon("/lafs/" + osPrefix + "Alloy.png"));
    }
 else {
      myLafs.put(new IntelliJLookAndFeelInfo(),IconLoader.getIcon("/lafs/" + osPrefix + "IntelliJ.png"));
    }
  }
  myLafs.put(new DarculaLookAndFeelInfo(),IconLoader.getIcon("/lafs/" + osPrefix + "Darcula.png"));
  if (SystemInfo.isLinux && isGTKAvailable) {
    myLafs.put(new UIManager.LookAndFeelInfo(GTK,"com.sun.java.swing.plaf.gtk.GTKLookAndFeel"),IconLoader.getIcon("/lafs/" + osPrefix + "GTK.png"));
  }
  myVertical=myLafs.size() > 2;
  JPanel buttonPanel=new JPanel(myVertical ? new GridLayout(myLafs.size(),1,5,5) : new GridLayout(1,myLafs.size(),5,5));
  ButtonGroup group=new ButtonGroup();
  boolean isFirst=true;
  for (  Map.Entry<UIManager.LookAndFeelInfo,Icon> entry : myLafs.entrySet()) {
    JPanel p=new JPanel(new BorderLayout());
    JRadioButton radioButton=new JRadioButton(entry.getKey().getName(),isFirst);
    isFirst=false;
    group.add(radioButton);
    p.add(radioButton,BorderLayout.NORTH);
    Icon icon=entry.getValue();
    buttonPanel.add(new JLabel(myVertical ? new ImageIcon(IconUtil.toImage(icon).getScaledInstance(icon.getIconWidth() / 3,icon.getIconHeight() / 3,Image.SCALE_AREA_AVERAGING)) : icon));
  }
  setLayout(new BorderLayout());
  add(buttonPanel,BorderLayout.CENTER);
  if (myVertical) {
    add(myPreviewLabel,BorderLayout.EAST);
  }
}
