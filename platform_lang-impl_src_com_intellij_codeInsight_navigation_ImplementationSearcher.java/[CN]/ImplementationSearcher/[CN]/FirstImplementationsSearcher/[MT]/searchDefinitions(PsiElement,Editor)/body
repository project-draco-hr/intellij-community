{
  if (canShowPopupWithOneItem(element)) {
    return new PsiElement[]{element};
  }
  final PsiElementProcessor.CollectElementsWithLimit<PsiElement> collectProcessor=new PsiElementProcessor.CollectElementsWithLimit<>(2,new THashSet<>());
  final PsiElement[][] result=new PsiElement[1][];
  if (!ProgressManager.getInstance().runProcessWithProgressSynchronously(new Runnable(){
    @Override public void run(){
      try {
        DefinitionsScopedSearch.search(element,getSearchScope(element,editor)).forEach(new PsiElementProcessorAdapter<PsiElement>(collectProcessor){
          @Override public boolean processInReadAction(          PsiElement element){
            return !accept(element) || super.processInReadAction(element);
          }
        }
);
        result[0]=collectProcessor.toArray();
      }
 catch (      IndexNotReadyException e) {
        ImplementationSearcher.dumbModeNotification(element);
        result[0]=null;
      }
    }
  }
,SEARCHING_FOR_IMPLEMENTATIONS,true,element.getProject())) {
    return null;
  }
  return result[0];
}
