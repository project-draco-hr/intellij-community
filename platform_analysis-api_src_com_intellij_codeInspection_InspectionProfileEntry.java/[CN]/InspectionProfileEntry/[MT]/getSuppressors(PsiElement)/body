{
  FileViewProvider viewProvider=element.getContainingFile().getViewProvider();
  final InspectionSuppressor elementLanguageSuppressor=LanguageInspectionSuppressors.INSTANCE.forLanguage(element.getLanguage());
  if (viewProvider instanceof TemplateLanguageFileViewProvider) {
    Set<InspectionSuppressor> suppressors=new LinkedHashSet<InspectionSuppressor>();
    ContainerUtil.addIfNotNull(suppressors,LanguageInspectionSuppressors.INSTANCE.forLanguage(viewProvider.getBaseLanguage()));
    for (    Language language : viewProvider.getLanguages()) {
      ContainerUtil.addIfNotNull(suppressors,LanguageInspectionSuppressors.INSTANCE.forLanguage(language));
    }
    ContainerUtil.addIfNotNull(suppressors,elementLanguageSuppressor);
    return suppressors;
  }
  if (!element.getLanguage().isKindOf(viewProvider.getBaseLanguage())) {
    Set<InspectionSuppressor> suppressors=new LinkedHashSet<InspectionSuppressor>();
    ContainerUtil.addIfNotNull(suppressors,LanguageInspectionSuppressors.INSTANCE.forLanguage(viewProvider.getBaseLanguage()));
    ContainerUtil.addIfNotNull(suppressors,elementLanguageSuppressor);
    return suppressors;
  }
  return elementLanguageSuppressor != null ? Collections.singleton(elementLanguageSuppressor) : Collections.<InspectionSuppressor>emptySet();
}
