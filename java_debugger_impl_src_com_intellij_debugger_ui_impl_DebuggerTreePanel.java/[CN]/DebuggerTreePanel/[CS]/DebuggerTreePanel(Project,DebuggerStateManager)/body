{
  super(project,stateManager);
  myTree=createTreeView();
  final PopupHandler popupHandler=new PopupHandler(){
    @Override public void invokePopup(    Component comp,    int x,    int y){
      ActionPopupMenu popupMenu=createPopupMenu();
      if (popupMenu != null) {
        myTree.myTipManager.registerPopup(popupMenu.getComponent()).show(comp,x,y);
      }
    }
  }
;
  myTree.addMouseListener(popupHandler);
  setFocusTraversalPolicy(new IdeFocusTraversalPolicy(){
    @Override public Component getDefaultComponentImpl(    Container focusCycleRoot){
      return myTree;
    }
  }
);
  registerDisposable(new Disposable(){
    @Override public void dispose(){
      myTree.removeMouseListener(popupHandler);
    }
  }
);
  DebuggerUIUtil.registerActionOnComponent(XDebuggerActions.MARK_OBJECT,myTree,this);
}
