{
  assertCurrentToken(PyTokenTypes.WITH_KEYWORD);
  final PsiBuilder.Marker statement=myBuilder.mark();
  myBuilder.advanceLexer();
  while (true) {
    PsiBuilder.Marker withItem=myBuilder.mark();
    getExpressionParser().parseExpression();
    myExpectAsKeyword=true;
    if (myBuilder.getTokenType() == PyTokenTypes.AS_KEYWORD) {
      myBuilder.advanceLexer();
      getExpressionParser().parseSingleExpression(true);
    }
    withItem.done(PyElementTypes.WITH_ITEM);
    if (!matchToken(PyTokenTypes.COMMA)) {
      break;
    }
  }
  checkMatches(PyTokenTypes.COLON,"colon expected");
  parseSuite(scope);
  statement.done(PyElementTypes.WITH_STATEMENT);
}
