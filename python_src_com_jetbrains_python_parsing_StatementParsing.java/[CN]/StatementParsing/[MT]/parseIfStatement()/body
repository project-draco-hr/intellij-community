{
  assertCurrentToken(PyTokenTypes.IF_KEYWORD);
  final PsiBuilder.Marker ifStatement=myBuilder.mark();
  final PsiBuilder.Marker ifPart=myBuilder.mark();
  myBuilder.advanceLexer();
  getExpressionParser().parseExpression();
  if (checkMatches(PyTokenTypes.COLON,"colon expected")) {
    parseSuite();
  }
  ifPart.done(PyElementTypes.IF_PART_IF);
  PsiBuilder.Marker elifPart=myBuilder.mark();
  while (myBuilder.getTokenType() == PyTokenTypes.ELIF_KEYWORD) {
    myBuilder.advanceLexer();
    getExpressionParser().parseExpression();
    checkMatches(PyTokenTypes.COLON,"colon expected");
    parseSuite();
    elifPart.done(PyElementTypes.IF_PART_ELIF);
    elifPart=myBuilder.mark();
  }
  elifPart.drop();
  final PsiBuilder.Marker elsePart=myBuilder.mark();
  if (myBuilder.getTokenType() == PyTokenTypes.ELSE_KEYWORD) {
    myBuilder.advanceLexer();
    checkMatches(PyTokenTypes.COLON,"colon expected");
    parseSuite();
    elsePart.done(PyElementTypes.ELSE_PART);
  }
 else   elsePart.drop();
  ifStatement.done(PyElementTypes.IF_STATEMENT);
}
