{
  PsiBuilder builder=myContext.getBuilder();
  while (true) {
    final PsiBuilder.Marker asMarker=builder.mark();
    if (isModuleName) {
      if (!parseDottedName()) {
        asMarker.drop();
        break;
      }
    }
 else {
      parseIdentifier(PyElementTypes.REFERENCE_EXPRESSION);
    }
    String tokenText=builder.getTokenText();
    if (builder.getTokenType() == PyTokenTypes.IDENTIFIER && tokenText != null && tokenText.equals("as")) {
      builder.advanceLexer();
      parseIdentifier(PyElementTypes.TARGET_EXPRESSION);
    }
    asMarker.done(PyElementTypes.IMPORT_ELEMENT);
    if (builder.getTokenType() == PyTokenTypes.COMMA) {
      builder.advanceLexer();
      if (inParens && builder.getTokenType() == PyTokenTypes.RPAR) {
        break;
      }
    }
 else {
      break;
    }
  }
}
