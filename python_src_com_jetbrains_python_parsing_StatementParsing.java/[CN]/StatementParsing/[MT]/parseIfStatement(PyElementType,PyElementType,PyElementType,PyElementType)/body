{
  assertCurrentToken(ifKeyword);
  final PsiBuilder.Marker ifStatement=myBuilder.mark();
  final PsiBuilder.Marker ifPart=myBuilder.mark();
  myBuilder.advanceLexer();
  if (!getExpressionParser().parseSingleExpression(false)) {
    myBuilder.error("expression expected");
  }
  parseColonAndSuite();
  ifPart.done(PyElementTypes.IF_PART_IF);
  PsiBuilder.Marker elifPart=myBuilder.mark();
  while (myBuilder.getTokenType() == elifKeyword) {
    myBuilder.advanceLexer();
    if (!getExpressionParser().parseSingleExpression(false)) {
      myBuilder.error("expression expected");
    }
    parseColonAndSuite();
    elifPart.done(PyElementTypes.IF_PART_ELIF);
    elifPart=myBuilder.mark();
  }
  elifPart.drop();
  final PsiBuilder.Marker elsePart=myBuilder.mark();
  if (myBuilder.getTokenType() == elseKeyword) {
    myBuilder.advanceLexer();
    parseColonAndSuite();
    elsePart.done(PyElementTypes.ELSE_PART);
  }
 else {
    elsePart.drop();
  }
  ifStatement.done(elementType);
}
