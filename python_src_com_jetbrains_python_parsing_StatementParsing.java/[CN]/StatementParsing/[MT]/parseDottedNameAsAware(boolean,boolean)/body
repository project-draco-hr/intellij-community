{
  if (myBuilder.getTokenType() != PyTokenTypes.IDENTIFIER) {
    if (optional)     return true;
    myBuilder.error("identifier expected");
    return false;
  }
  PsiBuilder.Marker marker=myBuilder.mark();
  myBuilder.advanceLexer();
  marker.done(PyElementTypes.REFERENCE_EXPRESSION);
  boolean old_expect_AS_kwd=myExpectAsKeyword;
  myExpectAsKeyword=expect_as;
  while (myBuilder.getTokenType() == PyTokenTypes.DOT) {
    marker=marker.precede();
    myBuilder.advanceLexer();
    checkMatches(PyTokenTypes.IDENTIFIER,"identifier expected");
    marker.done(PyElementTypes.REFERENCE_EXPRESSION);
  }
  myExpectAsKeyword=old_expect_AS_kwd;
  return true;
}
