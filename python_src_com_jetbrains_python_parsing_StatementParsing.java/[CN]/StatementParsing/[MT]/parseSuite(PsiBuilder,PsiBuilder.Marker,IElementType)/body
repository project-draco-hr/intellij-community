{
  if (builder.getTokenType() == PyTokenTypes.STATEMENT_BREAK) {
    builder.advanceLexer();
    final PsiBuilder.Marker marker=builder.mark();
    if (builder.getTokenType() != PyTokenTypes.INDENT) {
      builder.error("indent expected");
    }
 else {
      builder.advanceLexer();
      while (!builder.eof() && builder.getTokenType() != PyTokenTypes.DEDENT) {
        parseStatement(builder);
      }
    }
    marker.done(PyElementTypes.STATEMENT_LIST);
    if (endMarker != null) {
      endMarker.done(elType);
    }
    if (!builder.eof()) {
      checkMatches(PyTokenTypes.DEDENT,"dedent expected");
    }
    builder.getTokenType();
  }
 else {
    final PsiBuilder.Marker marker=builder.mark();
    parseSimpleStatement(true);
    while (builder.getTokenType() == PyTokenTypes.SEMICOLON) {
      builder.advanceLexer();
      parseSimpleStatement(true);
    }
    marker.done(PyElementTypes.STATEMENT_LIST);
    if (endMarker != null) {
      endMarker.done(elType);
    }
  }
}
