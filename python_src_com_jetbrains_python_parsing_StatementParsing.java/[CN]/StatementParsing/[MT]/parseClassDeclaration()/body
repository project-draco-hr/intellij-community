{
  assertCurrentToken(PyTokenTypes.CLASS_KEYWORD);
  final PsiBuilder.Marker classMarker=myBuilder.mark();
  myBuilder.advanceLexer();
  checkMatches(PyTokenTypes.IDENTIFIER,"identifier expected");
  final PsiBuilder.Marker inheritMarker=myBuilder.mark();
  if (myBuilder.getTokenType() == PyTokenTypes.LPAR) {
    myBuilder.advanceLexer();
    getExpressionParser().parseExpression();
    checkMatches(PyTokenTypes.RPAR,") expected");
  }
  inheritMarker.done(PyElementTypes.PARENTHESIZED_EXPRESSION);
  checkMatches(PyTokenTypes.COLON,"colon expected");
  parseSuite();
  classMarker.done(PyElementTypes.CLASS_DECLARATION);
}
