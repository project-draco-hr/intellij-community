{
  assertCurrentToken(PyTokenTypes.ASYNC_KEYWORD);
  final PsiBuilder.Marker marker=myBuilder.mark();
  myBuilder.advanceLexer();
  final IElementType token=myBuilder.getTokenType();
  if (token == PyTokenTypes.DEF_KEYWORD) {
    getFunctionParser().parseFunctionDeclaration(marker,true);
  }
 else   if (token == PyTokenTypes.WITH_KEYWORD) {
    parseWithStatement(marker);
  }
 else   if (token == PyTokenTypes.FOR_KEYWORD) {
    parseForStatement(marker);
  }
 else {
    marker.drop();
    myBuilder.error("'def' or 'with' or 'for' expected");
  }
}
