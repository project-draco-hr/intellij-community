{
  LOG.assertTrue(builder.getTokenType() == PyTokenTypes.FOR_KEYWORD);
  final PsiBuilder.Marker statement=builder.mark();
  builder.advanceLexer();
  getExpressionParser().parseExpression(builder,true,true);
  checkMatches(builder,PyTokenTypes.IN_KEYWORD,"'in' expected");
  getExpressionParser().parseExpression(builder);
  checkMatches(builder,PyTokenTypes.COLON,"colon expected");
  parseSuite(builder);
  if (builder.getTokenType() == PyTokenTypes.ELSE_KEYWORD) {
    builder.advanceLexer();
    checkMatches(builder,PyTokenTypes.COLON,"colon expected");
    parseSuite(builder);
  }
  statement.done(PyElementTypes.FOR_STATEMENT);
}
