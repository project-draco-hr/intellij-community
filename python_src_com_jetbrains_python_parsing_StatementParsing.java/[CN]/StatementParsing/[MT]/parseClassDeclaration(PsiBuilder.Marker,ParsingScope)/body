{
  assertCurrentToken(PyTokenTypes.CLASS_KEYWORD);
  myBuilder.advanceLexer();
  checkMatches(PyTokenTypes.IDENTIFIER,"identifier expected");
  if (myBuilder.getTokenType() == PyTokenTypes.LPAR) {
    getExpressionParser().parseArgumentList();
  }
 else {
    final PsiBuilder.Marker inheritMarker=myBuilder.mark();
    inheritMarker.done(PyElementTypes.ARGUMENT_LIST);
  }
  if (expectColon()) {
    parseSuite(scope.withClass(true));
  }
 else {
    final PsiBuilder.Marker mark=myBuilder.mark();
    mark.done(PyElementTypes.STATEMENT_LIST);
  }
  classMarker.done(PyElementTypes.CLASS_DECLARATION);
}
