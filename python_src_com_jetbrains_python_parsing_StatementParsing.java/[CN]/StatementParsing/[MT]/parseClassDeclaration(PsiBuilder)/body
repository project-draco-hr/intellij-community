{
  LOG.assertTrue(builder.getTokenType() == PyTokenTypes.CLASS_KEYWORD);
  final PsiBuilder.Marker classMarker=builder.mark();
  builder.advanceLexer();
  checkMatches(PyTokenTypes.IDENTIFIER,"identifier expected");
  final PsiBuilder.Marker inheritMarker=builder.mark();
  if (builder.getTokenType() == PyTokenTypes.LPAR) {
    builder.advanceLexer();
    getExpressionParser().parseExpression(builder);
    checkMatches(PyTokenTypes.RPAR,") expected");
  }
  inheritMarker.done(PyElementTypes.PARENTHESIZED_EXPRESSION);
  checkMatches(PyTokenTypes.COLON,"colon expected");
  parseSuite(builder);
  classMarker.done(PyElementTypes.CLASS_DECLARATION);
}
