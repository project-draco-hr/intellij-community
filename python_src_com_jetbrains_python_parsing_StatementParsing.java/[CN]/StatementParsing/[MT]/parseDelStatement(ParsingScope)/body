{
  assertCurrentToken(PyTokenTypes.DEL_KEYWORD);
  final PsiBuilder.Marker delStatement=myBuilder.mark();
  myBuilder.advanceLexer();
  if (!getExpressionParser().parseSingleExpression(false)) {
    myBuilder.error("expression expected");
  }
  while (myBuilder.getTokenType() == PyTokenTypes.COMMA) {
    myBuilder.advanceLexer();
    if (!getEndOfStatementsTokens().contains(myBuilder.getTokenType())) {
      if (!getExpressionParser().parseSingleExpression(false)) {
        myBuilder.error("expression expected");
      }
    }
  }
  checkEndOfStatement(inSuite);
  delStatement.done(PyElementTypes.DEL_STATEMENT);
}
