{
  PsiBuilder builder=myContext.getBuilder();
  assertCurrentToken(PyTokenTypes.FROM_KEYWORD);
  _from_import_phase=FIPH.FROM;
  final PsiBuilder.Marker fromImportStatement=builder.mark();
  builder.advanceLexer();
  boolean from_future=false;
  if (parseDottedName()) {
    checkMatches(PyTokenTypes.IMPORT_KEYWORD,"'import' expected");
    if (_from_import_phase == FIPH.FUTURE) {
      _from_import_phase=FIPH.IMPORT;
      from_future=true;
    }
    if (builder.getTokenType() == PyTokenTypes.MULT) {
      builder.advanceLexer();
    }
 else     if (builder.getTokenType() == PyTokenTypes.LPAR) {
      builder.advanceLexer();
      parseImportElements(false,true,from_future);
      checkMatches(PyTokenTypes.RPAR,") expected");
    }
 else {
      parseImportElements(false,false,from_future);
    }
  }
  checkEndOfStatement(inSuite);
  fromImportStatement.done(PyElementTypes.FROM_IMPORT_STATEMENT);
  _from_import_phase=FIPH.NONE;
}
