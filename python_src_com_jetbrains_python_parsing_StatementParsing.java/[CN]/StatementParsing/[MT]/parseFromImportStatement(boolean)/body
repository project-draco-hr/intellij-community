{
  PsiBuilder builder=myContext.getBuilder();
  assertCurrentToken(PyTokenTypes.FROM_KEYWORD);
  myFutureImportPhase=Phase.FROM;
  final PsiBuilder.Marker fromImportStatement=builder.mark();
  builder.advanceLexer();
  boolean from_future=false;
  boolean had_dots=parseRelativeImportDots();
  if (had_dots && parseOptionalDottedName() || parseDottedName()) {
    checkMatches(PyTokenTypes.IMPORT_KEYWORD,"'import' expected");
    if (myFutureImportPhase == Phase.FUTURE) {
      myFutureImportPhase=Phase.IMPORT;
      from_future=true;
    }
    if (builder.getTokenType() == PyTokenTypes.MULT) {
      final PsiBuilder.Marker star_import_mark=builder.mark();
      builder.advanceLexer();
      star_import_mark.done(PyElementTypes.STAR_IMPORT_ELEMENT);
    }
 else     if (builder.getTokenType() == PyTokenTypes.LPAR) {
      builder.advanceLexer();
      parseImportElements(false,true,from_future);
      checkMatches(PyTokenTypes.RPAR,") expected");
    }
 else {
      parseImportElements(false,false,from_future);
    }
  }
 else   if (had_dots) {
    checkMatches(PyTokenTypes.IMPORT_KEYWORD,"'import' expected");
    parseImportElements(false,false,from_future);
  }
  checkEndOfStatement(inSuite);
  fromImportStatement.done(PyElementTypes.FROM_IMPORT_STATEMENT);
  myFutureImportPhase=Phase.NONE;
}
