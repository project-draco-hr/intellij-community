{
  extend(CompletionType.BASIC,psiElement().withLanguage(PythonLanguage.getInstance()).inside(psiElement(PySequenceExpression.class)).andNot(psiElement().afterLeaf(or(psiElement(PyTokenTypes.LBRACE),psiElement(PyTokenTypes.LBRACKET),psiElement(PyTokenTypes.LPAR)))),new PyKeywordCompletionProvider("for"));
  extend(CompletionType.BASIC,psiElement().withLanguage(PythonLanguage.getInstance()).and(psiElement().inside(psiElement(PyComprehensionElement.class))).afterLeaf(psiElement().inside(psiElement(PyComprehensionElement.class)).and(psiElement().afterLeaf("for"))),new PyKeywordCompletionProvider("in"));
}
