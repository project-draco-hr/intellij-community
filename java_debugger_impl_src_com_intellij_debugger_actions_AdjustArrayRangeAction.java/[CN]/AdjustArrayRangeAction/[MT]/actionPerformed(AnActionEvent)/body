{
  DebuggerContextImpl debuggerContext=DebuggerAction.getDebuggerContext(e.getDataContext());
  DebugProcessImpl debugProcess=debuggerContext.getDebugProcess();
  if (debugProcess == null) {
    return;
  }
  final Project project=debuggerContext.getProject();
  final XValueNodeImpl node=XDebuggerTreeActionBase.getSelectedNode(e.getDataContext());
  if (node == null) {
    return;
  }
  final XValue container=node.getValueContainer();
  if (!(container instanceof JavaValue)) {
    return;
  }
  final ValueDescriptorImpl descriptor=((JavaValue)container).getDescriptor();
  ArrayRenderer renderer=getArrayRenderer(descriptor);
  if (renderer == null) {
    return;
  }
  String title=node.getName();
  final ArrayRenderer clonedRenderer=renderer.clone();
  clonedRenderer.setForced(true);
  if (ShowSettingsUtil.getInstance().editConfigurable(project,new NamedArrayConfigurable(title,clonedRenderer))) {
    debugProcess.getManagerThread().schedule(new SuspendContextCommandImpl(debuggerContext.getSuspendContext()){
      @Override public void contextAction() throws Exception {
        final Renderer lastRenderer=descriptor.getLastRenderer();
        if (lastRenderer instanceof ArrayRenderer) {
          ((JavaValue)container).setRenderer(clonedRenderer,node);
        }
 else         if (lastRenderer instanceof CompoundNodeRenderer) {
          final CompoundNodeRenderer compoundRenderer=(CompoundNodeRenderer)lastRenderer;
          final ChildrenRenderer childrenRenderer=compoundRenderer.getChildrenRenderer();
          if (childrenRenderer instanceof ExpressionChildrenRenderer) {
            ExpressionChildrenRenderer.setPreferableChildrenRenderer(descriptor,clonedRenderer);
            ((JavaValue)container).reBuild(node);
          }
        }
      }
    }
);
  }
}
