{
  myProject=project;
  myTableView=new TableView<JsonSchemaMappingsConfigurationBase.Item>();
  myTableView.getTableHeader().setVisible(false);
  myDecorator=ToolbarDecorator.createDecorator(myTableView);
  myDecorator.setRemoveAction(new AnActionButtonRunnable(){
    @Override public void run(    AnActionButton button){
      final int[] rows=myTableView.getSelectedRows();
      if (rows != null && rows.length > 0) {
        int cnt=0;
        for (        int row : rows) {
          myTableView.getListTableModel().removeRow(row - cnt);
          ++cnt;
        }
        myTableView.getListTableModel().fireTableDataChanged();
      }
    }
  }
).setAddAction(new MyAddActionButtonRunnable(project)).disableUpDownActions();
  final JPanel wrapper=new JPanel(new BorderLayout());
  final JPanel wrapper2=new JPanel(new BorderLayout());
  mySchemaField=new TextFieldWithBrowseButton();
  SwingHelper.installFileCompletionAndBrowseDialog(myProject,mySchemaField,JsonBundle.message("json.schema.add.schema.chooser.title"),FileChooserDescriptorFactory.createSingleFileDescriptor());
  attachNavigateToSchema();
  final JBLabel label=new JBLabel("JSON schema file:");
  wrapper2.add(label,BorderLayout.WEST);
  label.setBorder(JBUI.Borders.empty(0,0,0,10));
  wrapper2.add(mySchemaField,BorderLayout.CENTER);
  wrapper2.setBorder(JBUI.Borders.empty(0,10,10,10));
  wrapper.add(wrapper2,BorderLayout.NORTH);
  wrapper.add(myDecorator.createPanel(),BorderLayout.CENTER);
  myComponent=wrapper;
}
