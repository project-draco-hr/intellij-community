{
  myRepository=repository;
  Collection<String> rootPaths=ContainerUtil.map(gitFiles.getRootDirs(),new Function<VirtualFile,String>(){
    @Override public String fun(    VirtualFile file){
      return file.getPath();
    }
  }
);
  myWatchRequests=LocalFileSystem.getInstance().addRootsToWatch(rootPaths,true);
  myRepositoryFiles=gitFiles;
  visitSubDirsInVfs();
  myHeadsDir=VcsUtil.getVirtualFile(myRepositoryFiles.getRefsHeadsFile());
  myRemotesDir=VcsUtil.getVirtualFile(myRepositoryFiles.getRefsRemotesFile());
  myTagsDir=VcsUtil.getVirtualFile(myRepositoryFiles.getRefsTagsFile());
  Project project=repository.getProject();
  myUpdateQueue=new QueueProcessor<Object>(new DvcsUtil.Updater(repository),project.getDisposed());
  if (!project.isDisposed()) {
    myMessageBusConnection=project.getMessageBus().connect();
    myMessageBusConnection.subscribe(VirtualFileManager.VFS_CHANGES,this);
  }
 else {
    myMessageBusConnection=null;
  }
}
