{
  try {
    myToken.setText(GithubUtil.computeValueInModal(myProject,"Access to GitHub",new ThrowableConvertor<ProgressIndicator,String,IOException>(){
      @NotNull @Override public String convert(      ProgressIndicator indicator) throws IOException {
        return GithubUtil.runTaskWithBasicAuthForHost(myProject,GithubAuthDataHolder.createFromSettings(),indicator,getHost(),new ThrowableConvertor<GithubAuthData,String,IOException>(){
          @NotNull @Override public String convert(          @NotNull GithubAuthData auth) throws IOException {
            return GithubApiUtil.getReadOnlyToken(auth,getRepoAuthor(),getRepoName(),"IntelliJ tasks plugin");
          }
        }
);
      }
    }
));
  }
 catch (  GithubOperationCanceledException ignore) {
  }
catch (  IOException e) {
    GithubNotifications.showErrorDialog(myProject,"Can't get access token",e);
  }
}
