{
  PyExpression exceptClass=node.getExceptClass();
  if (exceptClass != null) {
    LanguageLevel languageLevel=getLanguageLevel(node);
    if (languageLevel == LanguageLevel.PYTHON24 || languageLevel == LanguageLevel.PYTHON25) {
      PsiElement element=exceptClass.getNextSibling();
      while (element instanceof PsiWhiteSpace) {
        element=element.getNextSibling();
      }
      if (element != null && "as".equals(element.getText())) {
        getHolder().createWarningAnnotation(node,"This Python version does not support this syntax");
      }
    }
 else     if (isPy3K(node)) {
      PsiElement element=exceptClass.getNextSibling();
      while (element instanceof PsiWhiteSpace) {
        element=element.getNextSibling();
      }
      if (element != null && ",".equals(element.getText())) {
        getHolder().createWarningAnnotation(node,"Python 3 does not support this syntax").registerFix(new ReplaceExceptPartIntention());
      }
    }
  }
}
