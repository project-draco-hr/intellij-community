{
  super.visitPyRaiseStatement(node);
  final PyExpression[] expressions=node.getExpressions();
  if (expressions != null) {
    if (expressions.length < 2) {
      return;
    }
    if (isPy3K(node)) {
      if (expressions.length == 3) {
        getHolder().createWarningAnnotation(node,"Python 3 does not support this syntax").registerFix(new ReplaceRaiseStatementIntention());
        return;
      }
      PsiElement element=expressions[0].getNextSibling();
      while (element instanceof PsiWhiteSpace) {
        element=element.getNextSibling();
      }
      if (element != null && ",".equals(element.getText())) {
        getHolder().createWarningAnnotation(node,"Python 3 does not support this syntax").registerFix(new ReplaceRaiseStatementIntention());
      }
    }
  }
}
