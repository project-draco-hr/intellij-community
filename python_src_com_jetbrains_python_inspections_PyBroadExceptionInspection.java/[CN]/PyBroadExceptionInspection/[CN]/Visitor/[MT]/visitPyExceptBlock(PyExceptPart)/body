{
  PyExpression exceptClass=node.getExceptClass();
  if (reRaised(node))   return;
  if (exceptClass == null) {
    registerProblem(node.getFirstChild(),"Too broad exception clause");
  }
  if (exceptClass != null) {
    final PyType type=myTypeEvalContext.getType(exceptClass);
    if (type instanceof PyClassType) {
      final PyClass cls=((PyClassType)type).getPyClass();
      final PyExpression target=node.getTarget();
      if (equalsException(cls,myTypeEvalContext) && (target == null || !isExceptionUsed(node,target.getText()))) {
        registerProblem(exceptClass,"Too broad exception clause");
      }
    }
  }
}
