{
  if (exprText == null)   return null;
  if (variable == null || !variable.isValid())   return null;
  final PsiElement refVariableElement=containingFile.findElementAt(marker.getStartOffset());
  final PsiElement refVariableElementParent=refVariableElement != null ? refVariableElement.getParent() : null;
  GrExpression expression=refVariableElementParent instanceof GrNewExpression && refVariableElement.getNode().getElementType() == GroovyTokenTypes.kNEW ? (GrNewExpression)refVariableElementParent : PsiTreeUtil.getParentOfType(refVariableElement,GrReferenceExpression.class);
  if (expression instanceof GrReferenceExpression && !(expression.getParent() instanceof GrMethodCall)) {
    final String referenceName=((GrReferenceExpression)expression).getReferenceName();
    if (((GrReferenceExpression)expression).resolve() == variable || Comparing.strEqual(variable.getName(),referenceName) || Comparing.strEqual(exprText,referenceName)) {
      return (GrExpression)expression.replace(GroovyPsiElementFactory.getInstance(myProject).createExpressionFromText(exprText,variable));
    }
  }
  if (expression == null) {
    expression=PsiTreeUtil.getParentOfType(refVariableElement,GrExpression.class);
  }
  while (expression instanceof GrReferenceExpression) {
    final PsiElement parent=expression.getParent();
    if (parent instanceof GrMethodCallExpression) {
      if (parent.getText().equals(exprText))       return (GrExpression)parent;
    }
    if (parent instanceof GrExpression) {
      expression=(GrExpression)parent;
      if (expression.getText().equals(exprText)) {
        return expression;
      }
    }
 else {
      return null;
    }
  }
  if (expression != null && expression.isValid() && expression.getText().equals(exprText)) {
    return expression;
  }
  if (refVariableElementParent instanceof GrExpression && refVariableElementParent.getText().equals(exprText)) {
    return (GrExpression)refVariableElementParent;
  }
  return null;
}
