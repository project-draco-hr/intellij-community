{
  for (  RemoteServersViewContributor contributor : RemoteServersViewContributor.EP_NAME.getExtensions()) {
    contributor.setupAvailabilityListener(myProject,new Runnable(){
      @Override public void run(){
        updateWindowAvailable(true);
      }
    }
);
  }
  myProject.getMessageBus().connect().subscribe(RemoteServerListener.TOPIC,new RemoteServerListener(){
    @Override public void serverAdded(    @NotNull RemoteServer<?> server){
      updateWindowAvailable(true);
    }
    @Override public void serverRemoved(    @NotNull RemoteServer<?> server){
      updateWindowAvailable(false);
    }
  }
);
}
