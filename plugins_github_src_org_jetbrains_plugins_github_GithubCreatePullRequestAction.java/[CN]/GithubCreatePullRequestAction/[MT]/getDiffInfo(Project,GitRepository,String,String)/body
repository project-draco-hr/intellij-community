{
  try {
    return GithubUtil.computeValueInModal(project,"Access to Git",new ThrowableConvertor<ProgressIndicator,DiffInfo,VcsException>(){
      @Override public DiffInfo convert(      ProgressIndicator indicator) throws VcsException {
        List<GitCommit> commits=GitHistoryUtils.history(project,repository.getRoot(),targetBranch + "..");
        Collection<Change> diff=GitChangeUtils.getDiff(repository.getProject(),repository.getRoot(),targetBranch,currentBranch,null);
        return new DiffInfo(targetBranch,currentBranch,commits,diff);
      }
    }
);
  }
 catch (  VcsException e) {
    LOG.info(e);
    return null;
  }
}
