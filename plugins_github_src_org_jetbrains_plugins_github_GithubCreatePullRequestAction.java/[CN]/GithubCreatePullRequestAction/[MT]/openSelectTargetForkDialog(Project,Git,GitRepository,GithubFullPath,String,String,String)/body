{
  final GithubInfo2 info=getAvailableForksInModal(project,gitRepository,path);
  if (info == null) {
    return;
  }
  Convertor<String,GithubFullPath> getForkPath=new Convertor<String,GithubFullPath>(){
    @Nullable @Override public GithubFullPath convert(    final String user){
      return GithubUtil.computeValueInModal(project,"Access to GitHub",new Convertor<ProgressIndicator,GithubFullPath>(){
        @Nullable @Override public GithubFullPath convert(        ProgressIndicator o){
          return findRepositoryByUser(project,user,info.getForks(),info.getAuthData(),info.getSource());
        }
      }
);
    }
  }
;
  GithubSelectForkDialog dialog=new GithubSelectForkDialog(project,info.getForks(),getForkPath);
  dialog.show();
  if (!dialog.isOK()) {
    return;
  }
  performCreatePullRequest(project,git,gitRepository,path,dialog.getPath(),remoteName,remoteUrl,currentBranch);
}
