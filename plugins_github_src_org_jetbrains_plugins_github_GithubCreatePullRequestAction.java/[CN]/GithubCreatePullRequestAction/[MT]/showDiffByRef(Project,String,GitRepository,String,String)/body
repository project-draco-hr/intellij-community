{
  if (branch == null) {
    return;
  }
  DiffInfo info=GithubUtil.computeValueInModal(project,"Collecting diff data...",new Convertor<ProgressIndicator,DiffInfo>(){
    @Override @Nullable public DiffInfo convert(    ProgressIndicator indicator){
      return getDiffInfo(project,gitRepository,currentBranch,targetRemote + "/" + branch);
    }
  }
);
  if (info == null) {
    GithubNotifications.showErrorDialog(project,"Can't show diff","Can't get diff info");
    return;
  }
  GitCompareBranchesDialog dialog=new GitCompareBranchesDialog(project,info.getTo(),info.getFrom(),info.getInfo(),gitRepository);
  dialog.show();
}
