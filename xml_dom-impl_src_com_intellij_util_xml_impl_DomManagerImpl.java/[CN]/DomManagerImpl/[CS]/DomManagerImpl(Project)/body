{
  myProject=project;
  mySemService=SemService.getSemService(project);
  myApplicationComponent=DomApplicationComponent.getInstance();
  final PomModel pomModel=PomManager.getModel(project);
  pomModel.addModelListener(new PomModelListener(){
    @Override public void modelChanged(    PomModelEvent event){
      if (myChanging)       return;
      final XmlChangeSet changeSet=(XmlChangeSet)event.getChangeSet(pomModel.getModelAspect(XmlAspect.class));
      if (changeSet != null) {
        for (        XmlFile file : changeSet.getChangedFiles()) {
          DomFileElementImpl<DomElement> element=getCachedFileElement(file);
          if (element != null) {
            fireEvent(new DomEvent(element,false));
          }
        }
      }
    }
    @Override public boolean isAspectChangeInteresting(    PomModelAspect aspect){
      return aspect instanceof XmlAspect;
    }
  }
,project);
  VirtualFileManager.getInstance().addVirtualFileListener(new VirtualFileAdapter(){
    private final List<DomEvent> myDeletionEvents=new SmartList<DomEvent>();
    @Override public void contentsChanged(    @NotNull VirtualFileEvent event){
      if (!event.isFromSave()) {
        fireEvents(calcDomChangeEvents(event.getFile()));
      }
    }
    @Override public void fileMoved(    @NotNull VirtualFileMoveEvent event){
      fireEvents(calcDomChangeEvents(event.getFile()));
    }
    @Override public void beforeFileDeletion(    @NotNull final VirtualFileEvent event){
      myDeletionEvents.addAll(calcDomChangeEvents(event.getFile()));
    }
    @Override public void fileDeleted(    @NotNull VirtualFileEvent event){
      if (!myDeletionEvents.isEmpty()) {
        fireEvents(myDeletionEvents);
        myDeletionEvents.clear();
      }
    }
    @Override public void propertyChanged(    @NotNull VirtualFilePropertyEvent event){
      final VirtualFile file=event.getFile();
      if (!file.isDirectory() && VirtualFile.PROP_NAME.equals(event.getPropertyName())) {
        fireEvents(calcDomChangeEvents(file));
      }
    }
  }
,myProject);
}
