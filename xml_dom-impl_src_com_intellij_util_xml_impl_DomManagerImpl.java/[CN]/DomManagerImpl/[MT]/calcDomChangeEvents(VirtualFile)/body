{
  if (!(file instanceof NewVirtualFile))   return Collections.emptyList();
  final List<DomEvent> events=ContainerUtil.newArrayList();
  VfsUtilCore.visitChildrenRecursively(file,new VirtualFileVisitor(){
    @Override public boolean visitFile(    @NotNull VirtualFile file){
      if (!ProjectFileIndex.SERVICE.getInstance(myProject).isInContent(file))       return false;
      if (!file.isDirectory() && StdFileTypes.XML == file.getFileType()) {
        final PsiFile psiFile=getCachedPsiFile(file);
        if (psiFile != null && StdFileTypes.XML.equals(psiFile.getFileType()) && psiFile instanceof XmlFile) {
          final DomFileElementImpl domElement=getCachedFileElement((XmlFile)psiFile);
          if (domElement != null) {
            events.add(new DomEvent(domElement,false));
          }
        }
      }
      return true;
    }
    @Nullable @Override public Iterable<VirtualFile> getChildrenIterable(    @NotNull VirtualFile file){
      return ((NewVirtualFile)file).getCachedChildren();
    }
  }
);
  return events;
}
