{
  if (checkBases) {
    return PsiClassImplUtil.findMethodsByName(myClass,name,true);
  }
 else {
    PsiMethod[] methods=CachedValuesManager.getCachedValue(myClass,new CachedValueProvider<Map<String,PsiMethod[]>>(){
      @Nullable @Override public Result<Map<String,PsiMethod[]>> compute(){
        return Result.create(getMethodsMap(),OUT_OF_CODE_BLOCK_MODIFICATION_COUNT,myTracker);
      }
    }
).get(name);
    return methods != null ? methods : PsiMethod.EMPTY_ARRAY;
  }
}
