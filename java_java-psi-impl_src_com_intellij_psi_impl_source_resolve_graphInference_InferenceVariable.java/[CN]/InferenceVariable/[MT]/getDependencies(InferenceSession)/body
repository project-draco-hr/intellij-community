{
  final Set<InferenceVariable> dependencies=new LinkedHashSet<InferenceVariable>();
  for (  InferenceBound inferenceBound : InferenceBound.values()) {
    for (    PsiType bound : getBounds(inferenceBound)) {
      session.collectDependencies(bound,dependencies);
    }
  }
  next:   for (  InferenceVariable variable : session.getInferenceVariables()) {
    if (!dependencies.contains(variable) && variable != this) {
      nextBound:       for (      InferenceBound inferenceBound : InferenceBound.values()) {
        final List<PsiType> bounds=getBounds(inferenceBound);
        for (        PsiType bound : bounds) {
          if (session.isProperType(bound)) {
            continue nextBound;
          }
        }
        for (        PsiType bound : bounds) {
          Set<InferenceVariable> deps=new HashSet<InferenceVariable>();
          session.collectDependencies(bound,deps);
          if (deps.contains(this)) {
            dependencies.add(variable);
            continue next;
          }
        }
      }
    }
  }
  if (!session.hasCapture(this)) {
    return dependencies;
  }
  for (Iterator<InferenceVariable> iterator=dependencies.iterator(); iterator.hasNext(); ) {
    if (!session.hasCapture(iterator.next())) {
      iterator.remove();
    }
  }
  session.collectCaptureDependencies(this,dependencies);
  return dependencies;
}
