{
  final Set<InferenceVariable> dependencies=new LinkedHashSet<InferenceVariable>();
  for (  List<PsiType> boundTypes : myBounds.values()) {
    if (boundTypes != null) {
      for (      PsiType bound : boundTypes) {
        session.collectDependencies(bound,dependencies);
      }
    }
  }
  next:   for (  InferenceVariable variable : session.getInferenceVariables()) {
    if (!dependencies.contains(variable) && variable != this) {
      nextBound:       for (      List<PsiType> bounds : myBounds.values()) {
        if (bounds != null) {
          for (          PsiType bound : bounds) {
            final Set<InferenceVariable> deps=new HashSet<InferenceVariable>();
            session.collectDependencies(bound,deps);
            if (deps.isEmpty()) {
              continue nextBound;
            }
            if (deps.contains(this)) {
              dependencies.add(variable);
              continue next;
            }
          }
        }
      }
    }
  }
  if (!session.hasCapture(this)) {
    return dependencies;
  }
  for (Iterator<InferenceVariable> iterator=dependencies.iterator(); iterator.hasNext(); ) {
    if (!session.hasCapture(iterator.next())) {
      iterator.remove();
    }
  }
  session.collectCaptureDependencies(this,dependencies);
  return dependencies;
}
