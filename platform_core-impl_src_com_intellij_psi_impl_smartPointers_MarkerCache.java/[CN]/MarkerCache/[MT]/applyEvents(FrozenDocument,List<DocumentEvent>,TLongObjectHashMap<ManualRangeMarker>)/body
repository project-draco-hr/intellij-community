{
  for (  DocumentEvent event : events) {
    final FrozenDocument before=frozen;
    final DocumentEvent corrected;
    if ((event instanceof RetargetRangeMarkers)) {
      RetargetRangeMarkers retarget=(RetargetRangeMarkers)event;
      corrected=new RetargetRangeMarkers(frozen,retarget.getStartOffset(),retarget.getEndOffset(),retarget.getMoveDestinationOffset());
    }
 else {
      frozen=frozen.applyEvent(event,0);
      corrected=new DocumentEventImpl(frozen,event.getOffset(),event.getOldFragment(),event.getNewFragment(),event.getOldTimeStamp(),event.isWholeTextReplaced(),((DocumentEventImpl)event).getInitialStartOffset(),((DocumentEventImpl)event).getInitialOldLength());
    }
    map.transformValues(new TObjectFunction<ManualRangeMarker,ManualRangeMarker>(){
      @Override public ManualRangeMarker execute(      ManualRangeMarker currentRange){
        return currentRange == null ? null : currentRange.getUpdatedRange(corrected,before);
      }
    }
);
  }
  return frozen;
}
