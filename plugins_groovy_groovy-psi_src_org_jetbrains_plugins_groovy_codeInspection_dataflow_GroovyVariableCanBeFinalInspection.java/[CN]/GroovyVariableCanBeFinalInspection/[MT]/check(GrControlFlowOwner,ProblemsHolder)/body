{
  final Instruction[] flow=owner.getControlFlow();
  final DFAEngine<TObjectIntHashMap<GrVariable>> engine=new DFAEngine<TObjectIntHashMap<GrVariable>>(flow,new WritesCounterDFAInstance(),new WritesCounterSemilattice<GrVariable>());
  final List<TObjectIntHashMap<GrVariable>> dfaResult=engine.performDFAWithTimeout();
  if (dfaResult == null || dfaResult.isEmpty())   return;
  dfaResult.get(dfaResult.size() - 1).forEachEntry(new TObjectIntProcedure<GrVariable>(){
    @Override public boolean execute(    GrVariable variable,    int writesCount){
      if (writesCount == 1) {
        process(owner,variable,problemsHolder);
      }
      return true;
    }
  }
);
}
