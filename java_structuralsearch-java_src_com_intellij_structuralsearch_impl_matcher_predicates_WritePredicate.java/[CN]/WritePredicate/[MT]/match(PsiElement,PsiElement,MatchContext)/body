{
  if (matchedNode instanceof PsiIdentifier) {
    matchedNode=matchedNode.getParent();
  }
  final PsiElement parent=PsiTreeUtil.skipParentsOfType(matchedNode,PsiParenthesizedExpression.class);
  return (matchedNode instanceof PsiReferenceExpression && parent instanceof PsiAssignmentExpression && PsiTreeUtil.isAncestor(((PsiAssignmentExpression)parent).getLExpression(),matchedNode,false)&& MatchUtils.getReferencedElement(matchedNode) instanceof PsiVariable) || (matchedNode instanceof PsiVariable && ((PsiVariable)matchedNode).getInitializer() != null) || parent instanceof PsiPostfixExpression|| parent instanceof PsiPrefixExpression;
}
