{
  final PsiElement psiElement=property.getPsiElement();
  final RenameRefactoring rename=new JavaRenameRefactoringImpl(psiElement.getProject(),psiElement,newName,searchInComments,false);
  rename.setPreviewUsages(isPreview);
  final PsiMethod setter=property.getSetter();
  if (setter != null) {
    final String setterName=PropertyUtil.suggestSetterName(newName);
    rename.addElement(setter,setterName);
    final PsiParameter[] setterParameters=setter.getParameterList().getParameters();
    if (setterParameters.length == 1) {
      final JavaCodeStyleManager manager=JavaCodeStyleManager.getInstance(psiElement.getProject());
      final String suggestedParameterName=manager.propertyNameToVariableName(property.getName(),VariableKind.PARAMETER);
      if (suggestedParameterName.equals(setterParameters[0].getName())) {
        rename.addElement(setterParameters[0],manager.propertyNameToVariableName(newName,VariableKind.PARAMETER));
      }
    }
  }
  final PsiMethod getter=property.getGetter();
  if (getter != null) {
    final String getterName=PropertyUtil.suggestGetterName(newName,getter.getReturnType());
    rename.addElement(getter,getterName);
  }
  rename.run();
}
