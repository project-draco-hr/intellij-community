{
  ProgressManager.getInstance().run(new Task.Backgroundable(myProject,VcsBundle.message("loading.file.history.progress"),true,BackgroundFromStartOption.getInstance()){
    public void run(    @NotNull ProgressIndicator indicator){
      indicator.setText(VcsUtil.getPathForProgressPresentation(filePath.getIOFile()));
      indicator.setIndeterminate(true);
      try {
        VcsHistorySession cachedSession=null;
        if (canUseLastRevisionCheck && myCachesHistory && ((cachedSession=getSessionFromCacheWithLastRevisionCheck(filePath,vcsKey))) != null) {
          cachedPartner.reportCreatedEmptySession((VcsAbstractHistorySession)cachedSession);
        }
 else         if (myDelegate instanceof VcsHistoryProviderEx) {
          ((VcsHistoryProviderEx)myDelegate).reportAppendableHistory(filePath,startRevisionNumber,cachedPartner);
        }
 else {
          myDelegate.reportAppendableHistory(filePath,cachedPartner);
        }
      }
 catch (      VcsException e) {
        cachedPartner.reportException(e);
      }
 finally {
        cachedPartner.finished();
        ApplicationManager.getApplication().invokeLater(new Runnable(){
          public void run(){
            handler.completed(resultingActionKey);
          }
        }
,ModalityState.NON_MODAL);
      }
    }
  }
);
}
