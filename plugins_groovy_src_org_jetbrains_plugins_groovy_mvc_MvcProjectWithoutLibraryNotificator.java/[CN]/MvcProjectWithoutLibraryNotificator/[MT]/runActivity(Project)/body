{
  ProgressIndicatorUtils.scheduleWithWriteActionPriority(new ReadTask(){
    @Override public void computeInReadAction(    @NotNull ProgressIndicator indicator){
      if (project.isDisposed()) {
        return;
      }
      Pair<Module,MvcFramework> pair=findModuleWithoutLibrary(project);
      if (pair != null) {
        final MvcFramework framework=pair.second;
        final Module module=pair.first;
        String name=framework.getFrameworkName();
        String content="<html><body>Module '" + module.getName() + "' has no "+ name+ " SDK. <a href='create'>Configure SDK</a></body></html>";
        new Notification(name + ".Configure",name + " SDK not found",content,NotificationType.INFORMATION,new NotificationListener.Adapter(){
          @Override protected void hyperlinkActivated(          @NotNull Notification notification,          @NotNull HyperlinkEvent e){
            if (!module.isDisposed()) {
              MvcConfigureNotification.configure(framework,module);
            }
          }
        }
).notify(project);
      }
    }
    @Override public void onCanceled(    @NotNull ProgressIndicator indicator){
      ProgressIndicatorUtils.scheduleWithWriteActionPriority(this);
    }
  }
);
}
