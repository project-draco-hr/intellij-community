{
  int tabCount=tabRendererPositions.size();
  if (tabCount == 0)   return;
  int[] tabWidths=new int[tabCount];
  int currentPos=0;
  int currentX=firstLine ? editor.getPrefixTextWidthInPixels() : 0;
  TextMeasurer measurer=null;
  for (int i=0; i < tabCount; i++) {
    int pos=tabRendererPositions.get(i);
    if (pos > currentPos) {
      if (measurer == null) {
        measurer=new TextMeasurer(string.getIterator(),fontRenderContext);
      }
      currentX+=measurer.getAdvanceBetween(currentPos,pos);
      currentPos=pos;
    }
    currentPos++;
    int nextX=EditorUtil.nextTabStop(currentX,editor);
    tabWidths[i]=nextX - currentX;
    currentX=nextX;
  }
  TabSpacer[] tabArray=new TabSpacer[tabCount];
  for (int i=0; i < tabCount; i++) {
    int pos=tabRendererPositions.get(i);
    string.addAttribute(TextAttribute.CHAR_REPLACEMENT,tabArray[i]=new TabSpacer(editor,pos,tabWidths[i]),pos,pos + 1);
  }
  tabs.set(tabArray);
}
