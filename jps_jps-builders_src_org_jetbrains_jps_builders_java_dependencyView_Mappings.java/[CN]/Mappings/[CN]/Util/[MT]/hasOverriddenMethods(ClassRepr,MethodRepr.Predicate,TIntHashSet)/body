{
  if (visitedClasses == null) {
    visitedClasses=new TIntHashSet();
    visitedClasses.add(fromClass.name);
  }
  for (  int superName : fromClass.getSupers()) {
    if (!visitedClasses.add(superName) || superName == myObjectClassName) {
      continue;
    }
    final ClassRepr superClass=reprByName(superName);
    if (superClass != null) {
      for (      MethodRepr mm : superClass.findMethods(predicate)) {
        if (isVisibleIn(superClass,mm,fromClass)) {
          return true;
        }
      }
      if (hasOverriddenMethods(superClass,predicate,visitedClasses)) {
        return true;
      }
    }
  }
  return false;
}
