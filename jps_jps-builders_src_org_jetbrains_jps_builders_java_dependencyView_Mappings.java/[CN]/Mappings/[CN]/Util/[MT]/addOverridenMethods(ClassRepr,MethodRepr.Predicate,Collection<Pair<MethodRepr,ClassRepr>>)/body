{
  for (  int superName : fromClass.getSupers()) {
    final ClassRepr superClass=reprByName(superName);
    if (superClass != null) {
      boolean cont=true;
      final Collection<MethodRepr> methods=superClass.findMethods(predicate);
      for (      MethodRepr mm : methods) {
        if (isVisibleIn(superClass,mm,fromClass)) {
          container.add(Pair.create(mm,superClass));
          cont=false;
        }
      }
      if (cont) {
        addOverridenMethods(superClass,predicate,container);
      }
    }
 else {
      container.add(Pair.create(MOCK_METHOD,MOCK_CLASS));
    }
  }
}
