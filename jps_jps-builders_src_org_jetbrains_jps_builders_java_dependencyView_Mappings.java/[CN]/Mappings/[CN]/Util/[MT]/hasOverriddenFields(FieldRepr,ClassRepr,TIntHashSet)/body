{
  if (visitedClasses == null) {
    visitedClasses=new TIntHashSet();
    visitedClasses.add(fromClass.name);
  }
  for (  int supername : fromClass.getSupers()) {
    if (!visitedClasses.add(supername) || supername == myObjectClassName) {
      continue;
    }
    final ClassRepr superClass=reprByName(supername);
    if (superClass != null) {
      final FieldRepr ff=superClass.findField(f.name);
      if (ff != null && isVisibleIn(superClass,ff,fromClass)) {
        return true;
      }
      final boolean found=hasOverriddenFields(f,superClass,visitedClasses);
      if (found) {
        return true;
      }
    }
  }
  return false;
}
