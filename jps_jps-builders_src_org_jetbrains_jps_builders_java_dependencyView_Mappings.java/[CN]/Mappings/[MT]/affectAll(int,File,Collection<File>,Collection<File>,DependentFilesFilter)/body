{
  final TIntHashSet dependants=myClassToClassDependency.get(className);
  if (dependants != null) {
    dependants.forEach(new TIntProcedure(){
      @Override public boolean execute(      int depClass){
        final Collection<File> allSources=myClassToSourceFile.get(depClass);
        if (allSources == null || allSources.isEmpty()) {
          return true;
        }
        boolean shouldAffect=false;
        for (        File depFile : allSources) {
          if (FileUtil.filesEqual(depFile,sourceFile)) {
            continue;
          }
          if (!alreadyCompiledFiles.contains(depFile) && (filter == null || filter.accept(depFile))) {
            shouldAffect=true;
            break;
          }
        }
        if (shouldAffect) {
          for (          File depFile : allSources) {
            if (!FileUtil.filesEqual(depFile,sourceFile)) {
              affectedFiles.add(depFile);
            }
          }
        }
        return true;
      }
    }
);
  }
}
