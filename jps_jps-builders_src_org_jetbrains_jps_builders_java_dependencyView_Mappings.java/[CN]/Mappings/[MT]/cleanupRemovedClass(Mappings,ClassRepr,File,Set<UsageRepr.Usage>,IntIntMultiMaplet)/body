{
  final int className=cr.name;
  if (!FileUtil.filesEqual(sourceFile,myClassToSourceFile.get(className))) {
    return;
  }
  for (  final int superSomething : cr.getSupers()) {
    delta.registerRemovedSuperClass(className,superSomething);
  }
  cleanupBackDependency(className,usages,dependenciesTrashBin);
  myClassToClassDependency.remove(className);
  myClassToSubclasses.remove(className);
  myClassToSourceFile.remove(className);
  if (!cr.isLocal() && !cr.isAnonymous()) {
    myShortClassNameIndex.removeFrom(myContext.get(cr.getShortName()),className);
  }
}
