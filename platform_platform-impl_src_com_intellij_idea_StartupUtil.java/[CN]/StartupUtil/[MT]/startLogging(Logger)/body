{
  Runtime.getRuntime().addShutdownHook(new Thread("Shutdown hook - logging"){
    @Override public void run(){
      log.info("------------------------------------------------------ IDE SHUTDOWN ------------------------------------------------------");
    }
  }
);
  log.info("------------------------------------------------------ IDE STARTED ------------------------------------------------------");
  ApplicationInfo appInfo=ApplicationInfoImpl.getShadowInstance();
  ApplicationNamesInfo namesInfo=ApplicationNamesInfo.getInstance();
  String buildDate=new SimpleDateFormat("dd MMM yyyy HH:ss",Locale.US).format(appInfo.getBuildDate().getTime());
  log.info("IDE: " + namesInfo.getFullProductName() + " (build #"+ appInfo.getBuild().asStringWithAllDetails()+ ", "+ buildDate+ ")");
  log.info("OS: " + SystemInfoRt.OS_NAME + " ("+ SystemInfoRt.OS_VERSION+ ", "+ SystemInfo.OS_ARCH+ ")");
  log.info("JRE: " + System.getProperty("java.runtime.version","-") + " ("+ System.getProperty("java.vendor","-")+ ")");
  log.info("JVM: " + System.getProperty("java.vm.version","-") + " ("+ System.getProperty("java.vm.name","-")+ ")");
  List<String> arguments=ManagementFactory.getRuntimeMXBean().getInputArguments();
  if (arguments != null) {
    log.info("JVM Args: " + StringUtil.join(arguments," "));
  }
  String extDirs=System.getProperty("java.ext.dirs");
  if (extDirs != null) {
    for (    String dir : StringUtil.split(extDirs,File.pathSeparator)) {
      String[] content=new File(dir).list();
      if (content != null && content.length > 0) {
        log.info("ext: " + dir + ": "+ Arrays.toString(content));
      }
    }
  }
}
