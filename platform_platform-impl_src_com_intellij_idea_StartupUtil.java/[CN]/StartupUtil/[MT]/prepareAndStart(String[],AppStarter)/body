{
  boolean newConfigFolder=false;
  if (!Main.isHeadless()) {
    AppUIUtil.updateFrameClass();
    newConfigFolder=!new File(PathManager.getConfigPath()).exists();
  }
  if (!checkJdkVersion()) {
    System.exit(Main.JDK_CHECK_FAILED);
  }
  System.setProperty("log4j.defaultInitOverride","true");
  try {
    org.apache.log4j.Logger root=org.apache.log4j.Logger.getRootLogger();
    if (!root.getAllAppenders().hasMoreElements()) {
      root.setLevel(Level.WARN);
      root.addAppender(new ConsoleAppender(new PatternLayout(PatternLayout.DEFAULT_CONVERSION_PATTERN)));
    }
  }
 catch (  Throwable e) {
    e.printStackTrace();
  }
  if (!checkSystemFolders()) {
    System.exit(Main.DIR_CHECK_FAILED);
  }
  ActivationResult result=lockSystemFolders(args);
  if (result == ActivationResult.ACTIVATED) {
    System.exit(0);
  }
 else   if (result != ActivationResult.STARTED) {
    System.exit(Main.INSTANCE_CHECK_FAILED);
  }
  if (newConfigFolder) {
    ConfigImportHelper.importConfigsTo(PathManager.getConfigPath());
  }
  Logger.setFactory(LoggerFactory.class);
  Logger log=Logger.getInstance(Main.class);
  startLogging(log);
  loadSystemLibraries(log);
  fixProcessEnvironment(log);
  if (!Main.isHeadless()) {
    AppUIUtil.updateWindowIcon(JOptionPane.getRootFrame());
    AppUIUtil.registerBundledFonts();
    AppUIUtil.showPrivacyPolicy();
  }
  appStarter.start(newConfigFolder);
}
