{
  CreateVirtualEnvDialog.VirtualEnvCallback callback=new CreateVirtualEnvDialog.VirtualEnvCallback(){
    @Override public void virtualEnvCreated(    Sdk sdk,    boolean associateWithProject,    boolean setAsProjectInterpreter){
      PythonSdkType.setupSdkPaths(sdk,myProject,null);
      if (associateWithProject) {
        SdkAdditionalData additionalData=sdk.getSdkAdditionalData();
        if (additionalData == null) {
          additionalData=new PythonSdkAdditionalData(PythonSdkFlavor.getFlavor(sdk.getHomePath()));
          ((ProjectJdkImpl)sdk).setSdkAdditionalData(additionalData);
        }
        if (myNewProject) {
          ((PythonSdkAdditionalData)additionalData).associateWithNewProject();
        }
 else {
          ((PythonSdkAdditionalData)additionalData).associateWithProject(myProject);
        }
      }
      addCreatedSdk(sdk,true,setAsProjectInterpreter);
    }
  }
;
  final List<Sdk> allSdks=PyConfigurableInterpreterList.getInstance(myProject).getAllPythonSdks();
  final CreateVirtualEnvDialog dialog=new CreateVirtualEnvDialog(myProject,myNewProject,allSdks,sdk);
  dialog.show();
  if (dialog.isOK()) {
    dialog.createVirtualEnv(allSdks,callback);
  }
}
