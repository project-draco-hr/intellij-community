{
  myProjectSdksModel.addListener(new SdkModel.Listener(){
    @Override public void sdkAdded(    Sdk sdk){
    }
    @Override public void beforeSdkRemove(    Sdk sdk){
    }
    @Override public void sdkChanged(    Sdk sdk,    String previousName){
      refreshSdkList();
    }
    @Override public void sdkHomeSelected(    Sdk sdk,    String newSdkHome){
    }
  }
);
  myPackagesPanel.addPathChangedListener(new Consumer<Sdk>(){
    @Override public void consume(    Sdk sdk){
      updateSdkPaths(sdk);
    }
  }
);
  myNotificationsArea.addLinkHandler(PyInstalledPackagesPanel.CREATE_VENV,new Runnable(){
    @Override public void run(){
      createVirtualEnv(getSelectedSdk());
    }
  }
);
  mySdkList.addListSelectionListener(new ListSelectionListener(){
    public void valueChanged(    ListSelectionEvent event){
      updateUI(getSelectedSdk());
    }
  }
);
}
