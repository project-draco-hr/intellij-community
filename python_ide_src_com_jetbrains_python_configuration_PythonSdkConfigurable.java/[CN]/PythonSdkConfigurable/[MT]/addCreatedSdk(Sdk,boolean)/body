{
  if (sdk != null) {
    myAddedSdk=sdk;
    boolean isVirtualEnv=PythonSdkType.isVirtualEnv(sdk);
    boolean askSetAsProjectInterpreter=!myProject.isDefault() && !myNewProject;
    if (askSetAsProjectInterpreter && isVirtualEnv && !newVirtualEnv) {
      AddVEnvOptionsDialog dialog=new AddVEnvOptionsDialog(myPanel);
      dialog.show();
      if (dialog.getExitCode() != DialogWrapper.OK_EXIT_CODE) {
        return;
      }
      SdkModificator modificator=myModificators.get(sdk);
      setSdkAssociated(modificator,!dialog.makeAvailableToAll());
      myModifiedModificators.add(modificator);
      myMakeActiveAdded=dialog.useForThisProject();
    }
    myProjectSdksModel.addSdk(sdk);
    refreshSdkList();
    mySdkList.setSelectedValue(sdk,true);
    mySdkListChanged=true;
    if (askSetAsProjectInterpreter && !isVirtualEnv && !PythonSdkType.isInvalid(sdk)&& !PythonSdkType.isIncompleteRemote(sdk)) {
      myMakeActiveAdded=Messages.showIdeaMessageDialog(myProject,"Do you want to set this interpreter as Project Interpreter?","Project Interpreter",new String[]{CommonBundle.getYesButtonText(),CommonBundle.getNoButtonText()},0,null,null) == Messages.YES;
    }
  }
}
