{
  final PersistentLibraryKind<RepositoryLibraryProperties> libraryKind=RepositoryLibraryType.REPOSITORY_LIBRARY_KIND;
  final MultiMap<Library,Module> result=new MultiMap<Library,Module>();
  ApplicationManager.getApplication().runReadAction(new Runnable(){
    @Override public void run(){
      for (      final Module module : ModuleManager.getInstance(project).getModules()) {
        OrderEnumerator.orderEntries(module).withoutSdk().forEachLibrary(new Processor<Library>(){
          @Override public boolean process(          Library library){
            if (((LibraryEx)library).getKind() == libraryKind) {
              result.putValue(library,module);
            }
            return true;
          }
        }
);
      }
      for (      Library library : ProjectLibraryTable.getInstance(project).getLibraries()) {
        if (!result.containsKey(library) && ((LibraryEx)library).getKind() == libraryKind) {
          result.put(library,Collections.<Module>emptyList());
        }
      }
    }
  }
);
  return result;
}
