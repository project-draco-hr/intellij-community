{
  Component dummyRendererComponent=myDummyRenderer.getTableCellRendererComponent(this,text,selected,hasFocus,row,column);
  VisibleGraph<Integer> visibleGraph=getVisibleGraph();
  if (row < 0 || row >= visibleGraph.getVisibleCommitCount()) {
    LOG.error("Visible graph has " + visibleGraph.getVisibleCommitCount() + " commits, yet we want row "+ row);
    return VcsCommitStyleFactory.createStyle(dummyRendererComponent.getForeground(),dummyRendererComponent.getBackground(),VcsLogHighlighter.TextStyle.NORMAL);
  }
  RowInfo<Integer> rowInfo=visibleGraph.getRowInfo(row);
  VcsLogHighlighter.VcsCommitStyle defaultStyle=VcsCommitStyleFactory.createStyle(rowInfo.getRowType() == RowType.UNMATCHED ? JBColor.GRAY : dummyRendererComponent.getForeground(),dummyRendererComponent.getBackground(),VcsLogHighlighter.TextStyle.NORMAL);
  final VcsShortCommitDetails details=myLogDataHolder.getMiniDetailsGetter().getCommitDataIfAvailable(rowInfo.getCommit());
  if (details == null || details instanceof LoadingDetails)   return defaultStyle;
  List<VcsLogHighlighter.VcsCommitStyle> styles=ContainerUtil.map(myHighlighters,new Function<VcsLogHighlighter,VcsLogHighlighter.VcsCommitStyle>(){
    @Override public VcsLogHighlighter.VcsCommitStyle fun(    VcsLogHighlighter highlighter){
      return highlighter.getStyle(details,selected);
    }
  }
);
  return VcsCommitStyleFactory.combine(ContainerUtil.append(styles,defaultStyle));
}
