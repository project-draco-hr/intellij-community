{
  FilePath filePath=VcsUtil.getFilePath(file);
  final GitRepository gitRepository=GitUtil.getRepositoryManager(project).getRepositoryForFile(file);
  if (gitRepository == null) {
    LOG.error("Couldn't find Git Repository for " + file.getName());
    return;
  }
  final VirtualFile gitRepositoryRoot=gitRepository.getRoot();
  GitRevisionNumber compareRevisionNumber=new GitRevisionNumber(branchToCompare);
  GitRevisionNumber currentRevisionNumber=(GitRevisionNumber)GitHistoryUtils.getCurrentRevision(project,filePath,head);
  if (currentRevisionNumber == null) {
    LOG.error(String.format("Current revision number is null for file [%s] and branch [%s]",filePath,head));
    return;
  }
  Collection<Change> changes=GitChangeUtils.getDiff(project,gitRepositoryRoot,branchToCompare,null,Collections.singletonList(filePath));
  VcsDiffUtil.showDiffFor(project,changes.isEmpty() && !filePath.isDirectory() ? createChangesWithCurrentContentForFile(filePath,GitContentRevision.createRevision(filePath,compareRevisionNumber,project,null)) : changes,VcsDiffUtil.getRevisionTitle(branchToCompare,false),VcsDiffUtil.getRevisionTitle(head,true),filePath);
}
