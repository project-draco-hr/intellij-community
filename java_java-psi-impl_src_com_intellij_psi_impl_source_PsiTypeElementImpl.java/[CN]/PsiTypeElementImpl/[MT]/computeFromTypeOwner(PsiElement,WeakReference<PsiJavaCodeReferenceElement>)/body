{
  return new Computable<PsiJavaCodeReferenceElement>(){
    volatile WeakReference<PsiJavaCodeReferenceElement> myCache=ref;
    @Override public PsiJavaCodeReferenceElement compute(){
      PsiJavaCodeReferenceElement result=myCache.get();
      if (result == null) {
        myCache=new WeakReference<PsiJavaCodeReferenceElement>(result=getParentTypeElement().getReferenceElement());
      }
      return result;
    }
    @NotNull private PsiTypeElementImpl getParentTypeElement(){
      PsiTypeElement typeElement=parent instanceof PsiMethod ? ((PsiMethod)parent).getReturnTypeElement() : ((PsiVariable)parent).getTypeElement();
      return (PsiTypeElementImpl)ObjectUtils.assertNotNull(typeElement);
    }
  }
;
}
