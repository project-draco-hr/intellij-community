{
  PsiUtilCore.ensureValid(method);
  if (method.hasModifierProperty(PsiModifier.STATIC) || !resolveHelper.isAccessible(method,aClass,aClass))   return;
  PsiClass hisClass=method.getContainingClass();
  if (hisClass == null)   return;
  if (method.isConstructor() && (!aClass.isInheritor(hisClass,false) || aClass instanceof PsiAnonymousClass || aClass.isEnum())) {
    return;
  }
  if (skipImplemented) {
    PsiMethod implemented=MethodSignatureUtil.findMethodBySignature(aClass,signature,false);
    if (implemented != null && !(implemented instanceof GrTraitMethod)) {
      return;
    }
  }
  if (method.hasModifierProperty(PsiModifier.FINAL)) {
    finals.put(signature,method);
    return;
  }
  Map<MethodSignature,PsiMethod> map=method.hasModifierProperty(PsiModifier.ABSTRACT) ? abstracts : concretes;
  fillMap(signature,method,map);
  if (isDefaultMethod(method)) {
    fillMap(signature,method,concretes);
  }
}
