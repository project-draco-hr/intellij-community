{
  final String name=getBaseName();
  final Set<String> fileNames=ContainerUtil.map2Set(myLocalesModel.getItems(),new Function<Locale,String>(){
    @Override public String fun(    Locale locale){
      return locale == PropertiesUtil.DEFAULT_LOCALE ? (name + ".properties") : (name + "_" + locale.toString()+ ".properties");
    }
  }
);
  final List<PsiFile> createdFiles=ApplicationManager.getApplication().runWriteAction(new Computable<List<PsiFile>>(){
    @Override public List<PsiFile> compute(){
      return ContainerUtil.map(fileNames,new Function<String,PsiFile>(){
        @Override public PsiFile fun(        String n){
          return myDirectory.createFile(n);
        }
      }
);
    }
  }
);
  combineToResourceBundleIfNeed(createdFiles);
  return createdFiles;
}
