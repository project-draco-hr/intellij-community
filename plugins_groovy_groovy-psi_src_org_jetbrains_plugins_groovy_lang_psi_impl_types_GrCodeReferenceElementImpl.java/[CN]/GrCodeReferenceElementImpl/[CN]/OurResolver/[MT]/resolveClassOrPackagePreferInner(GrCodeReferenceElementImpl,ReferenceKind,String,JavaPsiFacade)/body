{
  if (kind == ReferenceKind.CLASS_OR_PACKAGE_FQ || kind == ReferenceKind.CLASS_FQ) {
    final PsiFile file=ref.getContainingFile();
    boolean qualified=qName.indexOf('.') > 0;
    if (qualified || file instanceof GroovyFile && ((GroovyFile)file).getPackageName().isEmpty()) {
      PsiElement container=qualified ? resolveClassOrPackagePreferInner(ref,kind,StringUtil.getPackageName(qName),facade) : null;
      PsiClass aClass=container instanceof PsiClass && PsiUtil.isAccessible(ref,(PsiClass)container) ? ((PsiClass)container).findInnerClassByName(StringUtil.getShortName(qName),true) : null;
      if (aClass == null) {
        aClass=facade.findClass(qName,ref.getResolveScope());
      }
      if (aClass != null) {
        return aClass;
      }
    }
  }
  if (kind == ReferenceKind.CLASS_OR_PACKAGE_FQ || kind == ReferenceKind.PACKAGE_FQ) {
    return facade.findPackage(qName);
  }
  return null;
}
