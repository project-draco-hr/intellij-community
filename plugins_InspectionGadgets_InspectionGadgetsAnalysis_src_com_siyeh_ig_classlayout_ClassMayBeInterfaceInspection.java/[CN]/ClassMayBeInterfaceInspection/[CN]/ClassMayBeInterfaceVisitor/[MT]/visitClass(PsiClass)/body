{
  if (aClass.isInterface() || aClass.isAnnotationType() || aClass.isEnum()) {
    return;
  }
  if (aClass instanceof PsiTypeParameter || aClass instanceof PsiAnonymousClass) {
    return;
  }
  if (!aClass.hasModifierProperty(PsiModifier.ABSTRACT)) {
    return;
  }
  if (!mayBeInterface(aClass)) {
    return;
  }
  if (ClassUtils.isInnerClass(aClass)) {
    final InnerClassReferenceVisitor visitor=new InnerClassReferenceVisitor(aClass);
    aClass.accept(visitor);
    if (!visitor.canInnerClassBeStatic()) {
      return;
    }
  }
  registerClassError(aClass);
}
