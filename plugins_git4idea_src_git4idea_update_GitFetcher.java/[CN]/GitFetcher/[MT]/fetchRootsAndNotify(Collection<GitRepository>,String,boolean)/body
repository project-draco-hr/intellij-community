{
  MultiRootMessage additionalInfo=new MultiRootMessage(myProject,GitUtil.getRootsFromRepositories(roots));
  for (  GitRepository repository : roots) {
    LOG.info("fetching " + repository);
    GitFetchResult result=fetch(repository);
    String ai=result.getAdditionalInfo();
    if (!StringUtil.isEmptyOrSpaces(ai)) {
      additionalInfo.append(repository.getRoot(),ai);
    }
    if (!result.isSuccess()) {
      Collection<Exception> errors=new ArrayList<Exception>(getErrors());
      errors.addAll(result.getErrors());
      displayFetchResult(myProject,result,errorNotificationTitle,errors);
      return false;
    }
  }
  if (notifySuccess) {
    VcsNotifier.getInstance(myProject).notifySuccess("Fetched successfully");
  }
  if (!additionalInfo.asString().isEmpty()) {
    VcsNotifier.getInstance(myProject).notifyMinorInfo("Fetch details",additionalInfo.asString());
  }
  return true;
}
