{
  Ref<WindowButton> button=Ref.create();
  button.set(new WindowButton("Help",AllIcons.Windows.HelpButton,AllIcons.Windows.HelpButton,new AbstractAction("Help"){
    @Override public void actionPerformed(    ActionEvent e){
      final DialogWrapper dialog=DialogWrapper.findInstance(button.get());
      if (dialog != null) {
        try {
          final Method getHelpAction=DialogWrapper.class.getDeclaredMethod("getHelpAction");
          getHelpAction.setAccessible(true);
          final Object helpAction=getHelpAction.invoke(dialog);
          if (helpAction instanceof Action && ((Action)helpAction).isEnabled()) {
            ((Action)helpAction).actionPerformed(e);
          }
        }
 catch (        Exception ex) {
        }
      }
    }
  }
,BUTTON_HOVER_BG){
{
      setFont(new Font("Segoe UI Regular",Font.PLAIN,JBUI.scale(15)));
    }
    @Override public void paint(    Graphics g){
      if (isHelpAvailable()) {
        super.paint(g);
      }
 else {
        g.setColor(getBackground());
        g.fillRect(0,0,getWidth(),getHeight());
      }
    }
    private boolean isHelpAvailable(){
      final DialogWrapper dialog=DialogWrapper.findInstance(this);
      if (dialog != null) {
        try {
          final Method getHelpAction=DialogWrapper.class.getDeclaredMethod("getHelpAction");
          getHelpAction.setAccessible(true);
          final Object helpAction=getHelpAction.invoke(dialog);
          if (helpAction instanceof Action && ((Action)helpAction).isEnabled()) {
            return true;
          }
        }
 catch (        Exception e) {
          e.printStackTrace();
        }
      }
      return false;
    }
  }
);
  return button.get();
}
