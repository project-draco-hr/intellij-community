{
  FontMetrics fontMetrics=((EditorImpl)myEditor).getFontMetrics(myTextAttributes != null ? myTextAttributes.getFontType() : Font.PLAIN);
  Insets insets=getInsets();
  int maxLineWidth=getWidth() - (insets != null ? insets.left + insets.right : 0);
  myDocumentTextBuilder.setLength(0);
  float visibleLinesCountFractional=getHeight() / (float)myEditor.getLineHeight();
  if (visibleLinesCountFractional < 1.1f) {
    appendAbbreviated(myDocumentTextBuilder,myRawText,0,myRawText.length(),fontMetrics,maxLineWidth,true);
  }
 else {
    int linesToAppend=(int)Math.floor(visibleLinesCountFractional + 0.5);
    for (LineTokenizer lt=new LineTokenizer(myRawText); !lt.atEnd() && linesToAppend > 0; lt.advance(), linesToAppend--) {
      appendAbbreviated(myDocumentTextBuilder,myRawText,lt.getOffset(),lt.getOffset() + lt.getLength(),fontMetrics,maxLineWidth,false);
      if (lt.getLineSeparatorLength() > 0) {
        myDocumentTextBuilder.append('\n');
      }
    }
  }
  setTextToEditor(myDocumentTextBuilder.toString());
}
