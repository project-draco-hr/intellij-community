{
  FontMetrics fontMetrics=((EditorImpl)myEditor).getFontMetrics(myTextAttributes != null ? myTextAttributes.getFontType() : Font.PLAIN);
  Insets insets=getInsets();
  int maxLineWidth=getWidth() - (insets != null ? insets.left + insets.right : 0);
  myDocumentTextBuilder.setLength(0);
  float visibleLinesCountFractional=getHeight() / (float)myEditor.getLineHeight();
  if (visibleLinesCountFractional < 1.1f) {
    appendAbbreviated(myDocumentTextBuilder,myRawText,0,myRawText.length(),fontMetrics,maxLineWidth,true);
  }
 else {
    Matcher m=LINE_PATTERN.matcher(myRawText);
    int visibleLinesCount=(int)Math.floor(visibleLinesCountFractional + 0.5);
    for (int i=0; i < visibleLinesCount && m.find(); i++) {
      appendAbbreviated(myDocumentTextBuilder,myRawText,m.start(1),m.end(1),fontMetrics,maxLineWidth,false);
      if (m.start(2) != -1) {
        myDocumentTextBuilder.append('\n');
      }
    }
  }
  setTextToEditor(myDocumentTextBuilder.toString());
}
