{
  final String xml="" + "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n" + "<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n"+ "    android:layout_height=\"fill_parent\">\n"+ "    <include layout=\"@layout/colorstrip\" />\n"+ "\n"+ "\n"+ "    <LinearLayout\n"+ "        android:id=\"@+id/noteArea\"\n"+ "        android:layout_width=\"fill_parent\"\n"+ "        android:layout_height=\"wrap_content\"\n"+ "        android:layout_weight=\"1\"\n"+ "        android:layout_margin=\"5dip\">\n"+ "    </LinearLayout>\n"+ "\n"+ "</LinearLayout>\n";
  PsiFile file=createFile("file.xml",xml);
  assertTrue(file instanceof XmlFile);
  XmlDocument xmlDocument=((XmlFile)file).getDocument();
  assertNotNull(xmlDocument);
  final XmlTag tagFromText=xmlDocument.getRootTag();
  assertNotNull(tagFromText);
  final PsiFileImpl containingFile=(PsiFileImpl)tagFromText.getContainingFile();
  final PsiDocumentManager documentManager=PsiDocumentManager.getInstance(getProject());
  final Document document=documentManager.getDocument(containingFile);
  assertNotNull(document);
  final TestListener listener=new TestListener();
  PsiManager.getInstance(getProject()).addPsiTreeChangeListener(listener);
  CommandProcessor.getInstance().executeCommand(getProject(),new Runnable(){
    @Override public void run(){
      ApplicationManager.getApplication().runWriteAction(new Runnable(){
        @Override public void run(){
          int positionToInsert=xml.indexOf(" <LinearLayout\n" + "        android:id=\"@+id/noteArea\"\n");
          assertFalse(positionToInsert == -1);
          String stringToInsert="<Button android:id=\"@+id/newid\" />\n";
          document.insertString(positionToInsert,stringToInsert);
          documentManager.commitDocument(document);
        }
      }
);
    }
  }
,"",null);
  PsiManager.getInstance(getProject()).removePsiTreeChangeListener(listener);
}
