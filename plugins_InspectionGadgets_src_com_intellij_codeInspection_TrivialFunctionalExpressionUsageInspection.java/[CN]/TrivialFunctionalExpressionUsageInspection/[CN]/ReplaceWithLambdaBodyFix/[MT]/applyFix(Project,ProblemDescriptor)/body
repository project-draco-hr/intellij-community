{
  final PsiElement psiElement=descriptor.getPsiElement();
  if (!FileModificationService.getInstance().preparePsiElementForWrite(psiElement))   return;
  final PsiMethodCallExpression callExpression=PsiTreeUtil.getParentOfType(psiElement,PsiMethodCallExpression.class);
  if (callExpression != null) {
    final PsiExpression qualifierExpression=PsiUtil.skipParenthesizedExprDown(callExpression.getMethodExpression().getQualifierExpression());
    if (qualifierExpression instanceof PsiTypeCastExpression) {
      final PsiExpression element=((PsiTypeCastExpression)qualifierExpression).getOperand();
      if (element instanceof PsiLambdaExpression) {
        replaceWithLambdaBody(callExpression,(PsiLambdaExpression)element);
      }
 else       if (element instanceof PsiMethodReferenceExpression) {
        final PsiLambdaExpression lambdaExpression=LambdaRefactoringUtil.convertMethodReferenceToLambda((PsiMethodReferenceExpression)element,false,true);
        replaceWithLambdaBody(callExpression,lambdaExpression);
      }
    }
 else     if (qualifierExpression instanceof PsiNewExpression) {
      final PsiExpression cast=AnonymousCanBeLambdaInspection.replacePsiElementWithLambda(qualifierExpression,true,false);
      if (cast instanceof PsiTypeCastExpression) {
        final PsiExpression lambdaExpression=((PsiTypeCastExpression)cast).getOperand();
        if (lambdaExpression instanceof PsiLambdaExpression) {
          replaceWithLambdaBody(callExpression,(PsiLambdaExpression)lambdaExpression);
        }
      }
    }
  }
}
