{
  boolean hasFixes=fixes != null && fixes.length != 0;
  int problemCount=descriptors.length;
  boolean multipleDescriptors=problemCount > 1;
  setLayout(new BoxLayout(this,BoxLayout.LINE_AXIS));
  boolean hasComponents=false;
  final int actualProblemCount=myView.getTree().getContext().getPresentation(myWrapper).getProblemsCount(myView.getTree());
  if (actualProblemCount > 1 || (actualProblemCount == 1 && problemCount > 1)) {
    add(getLabel(actualProblemCount));
    hasComponents=true;
  }
  final DefaultActionGroup actions=new DefaultActionGroup();
  if (hasFixes) {
    actions.addAll(createFixActions(fixes,multipleDescriptors));
  }
  final AnAction suppressionCombo=createSuppressionCombo(myView);
  if (suppressionCombo != null) {
    actions.add(suppressionCombo);
  }
  if (actions.getChildrenCount() != 0) {
    final ActionToolbar toolbar=ActionManager.getInstance().createActionToolbar(ActionPlaces.UNKNOWN,actions,true);
    final JComponent component=toolbar.getComponent();
    toolbar.setTargetComponent(this);
    add(component);
    hasComponents=true;
  }
  if (hasComponents) {
    setBorder(IdeBorderFactory.createEmptyBorder(hasFixes ? 2 : 9,(hasFixes || problemCount > 1) ? 8 : 5,hasFixes ? 0 : 8,0));
  }
  return !hasComponents;
}
