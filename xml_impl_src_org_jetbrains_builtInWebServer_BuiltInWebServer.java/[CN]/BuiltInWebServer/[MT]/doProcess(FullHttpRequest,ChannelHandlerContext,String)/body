{
  final String decodedPath=URLUtil.unescapePercentSequences(UriUtil.trimParameters(request.uri()));
  int offset;
  boolean emptyPath;
  boolean isCustomHost=projectName != null;
  if (isCustomHost) {
    offset=0;
    emptyPath=decodedPath.isEmpty();
  }
 else {
    offset=decodedPath.indexOf('/',1);
    projectName=decodedPath.substring(1,offset == -1 ? decodedPath.length() : offset);
    emptyPath=offset == -1;
  }
  Project project=findProject(projectName,isCustomHost);
  if (project == null) {
    return false;
  }
  if (emptyPath) {
    if (!SystemInfoRt.isFileSystemCaseSensitive) {
      projectName=project.getName();
    }
    WebServerPathHandler.redirectToDirectory(request,context.channel(),projectName);
    return true;
  }
  final String path=FileUtil.toCanonicalPath(decodedPath.substring(offset + 1),'/');
  LOG.assertTrue(path != null);
  for (  WebServerPathHandler pathHandler : WebServerPathHandler.EP_NAME.getExtensions()) {
    try {
      if (pathHandler.process(path,project,request,context,projectName,decodedPath,isCustomHost)) {
        return true;
      }
    }
 catch (    Throwable e) {
      LOG.error(e);
    }
  }
  return false;
}
