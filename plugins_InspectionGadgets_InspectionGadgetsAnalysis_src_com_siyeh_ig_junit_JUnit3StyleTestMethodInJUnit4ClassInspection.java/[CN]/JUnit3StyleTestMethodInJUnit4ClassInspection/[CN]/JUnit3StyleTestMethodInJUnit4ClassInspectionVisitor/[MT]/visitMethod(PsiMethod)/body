{
  super.visitMethod(method);
  final String name=method.getName();
  if (!name.startsWith("test")) {
    return;
  }
  if (!TestUtils.isRunnable(method)) {
    return;
  }
  if (TestUtils.isJUnit4TestMethod(method)) {
    return;
  }
  final PsiClass containingClass=method.getContainingClass();
  if (TestUtils.isJUnitTestClass(containingClass)) {
    return;
  }
  if (!containsJUnit4Annotation(containingClass)) {
    return;
  }
  registerMethodError(method);
}
