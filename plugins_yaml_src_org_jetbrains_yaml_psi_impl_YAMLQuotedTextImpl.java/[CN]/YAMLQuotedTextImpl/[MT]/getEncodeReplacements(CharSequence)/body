{
  if (isSingleQuote()) {
    for (int i=0; i < input.length(); ++i) {
      if (input.charAt(i) == '\n' && !isSurroundedByNoSpace(input,i)) {
        throw new IllegalArgumentException("Newlines with spaces around are not convertible");
      }
    }
  }
  final int indent=YAMLUtil.getIndentToThisElement(this);
  final String indentString=StringUtil.repeatSymbol(' ',indent);
  final List<Pair<TextRange,String>> result=new ArrayList<>();
  int currentLength=0;
  for (int i=0; i < input.length(); ++i) {
    final char c=input.charAt(i);
    if (c == '\n') {
      if (!isSingleQuote() && i + 1 < input.length() && YAMLGrammarCharUtil.isSpaceLike(input.charAt(i + 1))) {
        result.add(Pair.create(TextRange.from(i,1),"\\n\\\n" + indentString + "\\"));
      }
 else       if (!isSingleQuote() && i + 1 < input.length() && input.charAt(i + 1) == '\n') {
        result.add(Pair.create(TextRange.from(i,1),"\\\n" + indentString + "\\n"));
      }
 else {
        result.add(Pair.create(TextRange.from(i,1),"\n\n" + indentString));
      }
      currentLength=0;
      continue;
    }
    if (currentLength > MAX_SCALAR_LENGTH_PREDEFINED && (!isSingleQuote() || (c == ' ' && isSurroundedByNoSpace(input,i)))) {
      final String replacement;
      if (isSingleQuote()) {
        replacement="\n" + indentString;
      }
 else       if (YAMLGrammarCharUtil.isSpaceLike(c)) {
        replacement="\\\n" + indentString + "\\";
      }
 else {
        replacement="\\\n" + indentString;
      }
      result.add(Pair.create(TextRange.from(i,isSingleQuote() ? 1 : 0),replacement));
      currentLength=0;
    }
    currentLength++;
    if (isSingleQuote() && c == '\'') {
      result.add(Pair.create(TextRange.from(i,1),"''"));
      continue;
    }
    if (!isSingleQuote()) {
      if (c == '"') {
        result.add(Pair.create(TextRange.from(i,1),"\\\""));
      }
 else       if (c == '\\') {
        result.add(Pair.create(TextRange.from(i,1),"\\\\"));
      }
    }
  }
  return result;
}
