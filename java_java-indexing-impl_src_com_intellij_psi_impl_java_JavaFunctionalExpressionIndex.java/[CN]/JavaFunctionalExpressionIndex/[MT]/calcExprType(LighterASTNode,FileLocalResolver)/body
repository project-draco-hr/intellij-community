{
  LighterASTNode scope=skipExpressionsUp(resolver.getLightTree(),funExpr,TokenSet.create(LOCAL_VARIABLE,FIELD,TYPE_CAST_EXPRESSION,RETURN_STATEMENT,ASSIGNMENT_EXPRESSION));
  if (scope != null) {
    if (scope.getTokenType() == ASSIGNMENT_EXPRESSION) {
      LighterASTNode lValue=findExpressionChild(scope,resolver.getLightTree());
      scope=lValue == null ? null : resolver.resolveLocally(lValue).getTarget();
    }
 else     if (scope.getTokenType() == RETURN_STATEMENT) {
      scope=LightTreeUtil.getParentOfType(resolver.getLightTree(),scope,TokenSet.create(METHOD),TokenSet.orSet(ElementType.MEMBER_BIT_SET,TokenSet.create(LAMBDA_EXPRESSION)));
    }
  }
  return StringUtil.notNullize(scope == null ? null : resolver.getShortClassTypeName(scope));
}
