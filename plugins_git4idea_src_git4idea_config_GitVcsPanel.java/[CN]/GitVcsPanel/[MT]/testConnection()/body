{
  final String executable=getCurrentExecutablePath();
  if (myAppSettings != null) {
    myAppSettings.setPathToGit(executable);
  }
  GitVersion version;
  try {
    version=ProgressManager.getInstance().runProcessWithProgressSynchronously(new ThrowableComputable<GitVersion,Exception>(){
      @Override public GitVersion compute() throws Exception {
        return GitVersion.identifyVersion(executable);
      }
    }
,"Testing Git Executable...",true,myVcs.getProject());
  }
 catch (  ProcessCanceledException pce) {
    return;
  }
catch (  Exception e) {
    Messages.showErrorDialog(myRootPanel,e.getMessage(),GitBundle.getString("find.git.error.title"));
    return;
  }
  if (version.isSupported()) {
    Messages.showInfoMessage(myRootPanel,String.format("<html>%s<br>Git version is %s</html>",GitBundle.getString("find.git.success.title"),version.toString()),GitBundle.getString("find.git.success.title"));
  }
 else {
    Messages.showWarningDialog(myRootPanel,GitBundle.message("find.git.unsupported.message",version.toString(),GitVersion.MIN),GitBundle.getString("find.git.success.title"));
  }
}
