{
  if (from == PsiType.INT && to.getCanonicalText().equals(AtomicInteger.class.getName())) {
    return true;
  }
  if (from.equals(PsiType.INT.createArrayType()) && to.getCanonicalText().equals(AtomicIntegerArray.class.getName())) {
    return true;
  }
  if (from == PsiType.LONG && to.getCanonicalText().equals(AtomicLong.class.getName())) {
    return true;
  }
  if (from.equals(PsiType.LONG.createArrayType()) && to.getCanonicalText().equals(AtomicLongArray.class.getName())) {
    return true;
  }
  if (from == PsiType.BOOLEAN && to.getCanonicalText().equals(AtomicBoolean.class.getName())) {
    return true;
  }
  final PsiClassType.ClassResolveResult resolveResult=PsiUtil.resolveGenericsClassInType(to);
  final PsiClass atomicClass=resolveResult.getElement();
  if (atomicClass != null) {
    final String typeQualifiedName=atomicClass.getQualifiedName();
    if (!Comparing.strEqual(typeQualifiedName,AtomicReference.class.getName()) && !Comparing.strEqual(typeQualifiedName,AtomicReferenceArray.class.getName())) {
      return false;
    }
    final PsiTypeParameter[] typeParameters=atomicClass.getTypeParameters();
    if (typeParameters.length != 1)     return false;
    final PsiType toTypeParameterValue=resolveResult.getSubstitutor().substitute(typeParameters[0]);
    if (toTypeParameterValue != null) {
      if (from.getDeepComponentType() instanceof PsiPrimitiveType) {
        final PsiPrimitiveType unboxedInitialType=PsiPrimitiveType.getUnboxedType(toTypeParameterValue);
        if (unboxedInitialType != null) {
          return TypeConversionUtil.areTypesConvertible(from.getDeepComponentType(),unboxedInitialType);
        }
      }
 else {
        return TypeConversionUtil.isAssignable(from.getDeepComponentType(),PsiUtil.captureToplevelWildcards(toTypeParameterValue,context));
      }
    }
  }
  return false;
}
