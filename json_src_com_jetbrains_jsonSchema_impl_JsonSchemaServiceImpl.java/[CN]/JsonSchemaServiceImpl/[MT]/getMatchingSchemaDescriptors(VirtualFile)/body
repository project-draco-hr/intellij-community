{
  final List<JsonSchemaObjectCodeInsightWrapper> wrappers=getWrappers(file);
  if (wrappers == null || wrappers.isEmpty())   return null;
  return ContainerUtil.map(wrappers,new NotNullFunction<JsonSchemaObjectCodeInsightWrapper,Pair<Boolean,String>>(){
    @NotNull @Override public Pair<Boolean,String> fun(    JsonSchemaObjectCodeInsightWrapper wrapper){
      return Pair.create(wrapper.isUserSchema(),wrapper.getName());
    }
  }
);
}
