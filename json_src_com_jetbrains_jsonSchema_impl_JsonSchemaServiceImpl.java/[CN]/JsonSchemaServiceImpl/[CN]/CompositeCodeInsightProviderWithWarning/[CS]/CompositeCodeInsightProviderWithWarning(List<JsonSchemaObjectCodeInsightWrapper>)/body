{
  myWrappers=wrappers;
  myContributor=new CompletionContributor(){
    @Override public void fillCompletionVariants(    @NotNull CompletionParameters parameters,    @NotNull CompletionResultSet result){
      for (      JsonSchemaObjectCodeInsightWrapper wrapper : myWrappers) {
        wrapper.getContributor().fillCompletionVariants(parameters,result);
      }
    }
  }
;
  myAnnotator=new Annotator(){
    @Override public void annotate(    @NotNull PsiElement element,    @NotNull AnnotationHolder holder){
      for (      JsonSchemaObjectCodeInsightWrapper wrapper : myWrappers) {
        wrapper.getAnnotator().annotate(element,holder);
      }
    }
  }
;
  final List<DocumentationProvider> list=new ArrayList<>();
  for (  JsonSchemaObjectCodeInsightWrapper wrapper : myWrappers) {
    list.add(wrapper.getDocumentationProvider());
  }
  myDocumentationProvider=CompositeDocumentationProvider.wrapProviders(list);
}
