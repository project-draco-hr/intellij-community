{
  if (constraint.isReadAccess()) {
    MatchPredicate predicate=new ReadPredicate();
    if (constraint.isInvertReadAccess()) {
      predicate=new NotPredicate(predicate);
    }
    predicates.add(predicate);
  }
  if (constraint.isWriteAccess()) {
    MatchPredicate predicate=new WritePredicate();
    if (constraint.isInvertWriteAccess()) {
      predicate=new NotPredicate(predicate);
    }
    predicates.add(predicate);
  }
  if (!StringUtil.isEmptyOrSpaces(constraint.getNameOfExprType())) {
    MatchPredicate predicate=new ExprTypePredicate(constraint.getNameOfExprType(),name,constraint.isExprTypeWithinHierarchy(),options.isCaseSensitiveMatch(),constraint.isPartOfSearchResults());
    if (constraint.isInvertExprType()) {
      predicate=new NotPredicate(predicate);
    }
    predicates.add(predicate);
  }
  if (!StringUtil.isEmptyOrSpaces(constraint.getNameOfFormalArgType())) {
    MatchPredicate predicate=new FormalArgTypePredicate(constraint.getNameOfFormalArgType(),name,constraint.isFormalArgTypeWithinHierarchy(),options.isCaseSensitiveMatch(),constraint.isPartOfSearchResults());
    if (constraint.isInvertFormalType()) {
      predicate=new NotPredicate(predicate);
    }
    predicates.add(predicate);
  }
}
