{
  createStdProjectFolders();
  final VirtualFile target=createProjectSubDir("target");
  createProjectSubDirsWithFile("anno","target/generated-sources/foo","target/generated-sources/annotations","target/generated-sources/test-annotations","target/generated-test-sources/foo");
  createProjectSubDir("test-anno");
  importProject("<groupId>test</groupId>" + "<artifactId>project</artifactId>" + "<version>1</version>"+ "<build>"+ " <plugins>"+ "  <plugin>"+ "   <groupId>org.apache.maven.plugins</groupId>"+ "   <artifactId>maven-compiler-plugin</artifactId>"+ "   <version>2.3.2</version>"+ "   <configuration>"+ "     <generatedSourcesDirectory>${basedir}/anno</generatedSourcesDirectory>"+ "     <generatedTestSourcesDirectory>${basedir}/test-anno</generatedTestSourcesDirectory>"+ "   </configuration>"+ "  </plugin>"+ " </plugins>"+ "</build>");
  final Runnable testAssertions=new Runnable(){
    @Override public void run(){
      assertSources("project","anno","src/main/java","target/generated-sources/annotations","target/generated-sources/foo","target/generated-sources/test-annotations");
      assertResources("project","src/main/resources");
      assertTestSources("project","src/test/java","target/generated-test-sources/foo");
      assertTestResources("project","src/test/resources");
    }
  }
;
  testAssertions.run();
  ApplicationManager.getApplication().runWriteAction(new Runnable(){
    public void run(){
      try {
        target.delete(this);
      }
 catch (      IOException e) {
        fail("Unable to delete the file: " + e.getMessage());
      }
    }
  }
);
  testAssertions.run();
  importProject();
  testAssertions.run();
  resolveFoldersAndImport();
  testAssertions.run();
}
