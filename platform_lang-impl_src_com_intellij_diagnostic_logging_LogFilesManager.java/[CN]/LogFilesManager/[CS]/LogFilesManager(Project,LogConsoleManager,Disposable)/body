{
  myManager=manager;
  myUpdateAlarm=new SingleAlarm(new Runnable(){
    @Override public void run(){
      if (project.isDisposed()) {
        return;
      }
      myUpdateAlarm.cancelAllRequests();
      for (      final LogFileOptions logFile : myLogFileManagerMap.keySet()) {
        final Set<String> oldFiles=myLogFileManagerMap.get(logFile);
        final Set<String> newFiles=logFile.getPaths();
        myLogFileManagerMap.put(logFile,newFiles);
        final Set<String> obsoleteFiles=new THashSet<String>(oldFiles);
        obsoleteFiles.removeAll(newFiles);
        SwingUtilities.invokeLater(new Runnable(){
          @Override public void run(){
            if (project.isDisposed()) {
              return;
            }
            addConfigurationConsoles(logFile,new Condition<String>(){
              @Override public boolean value(              final String file){
                return !oldFiles.contains(file);
              }
            }
,newFiles);
            for (            String each : obsoleteFiles) {
              myManager.removeLogConsole(each);
            }
            myUpdateAlarm.request();
          }
        }
);
      }
    }
  }
,500,Alarm.ThreadToUse.POOLED_THREAD,parentDisposable);
}
