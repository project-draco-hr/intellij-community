{
  final CCProjectService service=CCProjectService.getInstance(project);
  final Course course=service.getCourse();
  final Lesson lesson=course.getLesson(lessonDir.getName());
  final int size=lesson.getTaskList().size();
  final String taskName;
  if (showDialog) {
    taskName=Messages.showInputDialog("Name:","Task Name",null,"task" + (size + 1),null);
  }
 else {
    taskName="task" + (size + 1);
  }
  if (taskName == null) {
    return;
  }
  ApplicationManager.getApplication().runWriteAction(new Runnable(){
    @Override public void run(){
      final PsiDirectory taskDirectory=DirectoryUtil.createSubdirectories("task" + (size + 1),lessonDir,"\\/");
      if (taskDirectory != null) {
        CCUtils.markDirAsSourceRoot(taskDirectory.getVirtualFile(),project);
        final FileTemplate template=FileTemplateManager.getInstance(project).getInternalTemplate("task.html");
        final FileTemplate testsTemplate=FileTemplateManager.getInstance(project).getInternalTemplate("tests");
        final FileTemplate taskTemplate=FileTemplateManager.getInstance(project).getInternalTemplate("task.answer");
        try {
          final PsiElement taskFile=FileTemplateUtil.createFromTemplate(template,"task.html",null,taskDirectory);
          final PsiElement testsFile=FileTemplateUtil.createFromTemplate(testsTemplate,"tests.py",null,taskDirectory);
          final PsiElement taskPyFile=FileTemplateUtil.createFromTemplate(taskTemplate,"file1",null,taskDirectory);
          final Task task=new Task(taskName);
          task.addTaskFile("file1.py",size + 1);
          task.setIndex(size + 1);
          lesson.addTask(task,taskDirectory);
          ApplicationManager.getApplication().invokeLater(new Runnable(){
            @Override public void run(){
              FileEditorManager fileEditorManager=FileEditorManager.getInstance(project);
              for (              VirtualFile virtualFile : fileEditorManager.getOpenFiles()) {
                fileEditorManager.closeFile(virtualFile);
              }
              if (view != null) {
                EditorHelper.openInEditor(testsFile,false);
                EditorHelper.openInEditor(taskPyFile,false);
                view.selectElement(taskFile);
                EditorHelper.openInEditor(taskFile,false);
              }
            }
          }
);
        }
 catch (        Exception ignored) {
        }
      }
    }
  }
);
}
