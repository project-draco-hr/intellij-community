{
  boolean stopIfAllFieldsWereRead=hasLazyFields;
  boolean hasOnlyOneFieldLoader=fieldLoaders.size() == 1;
  boolean isTracedStop=stopIfAllFieldsWereRead && !hasOnlyOneFieldLoader;
  if (isTracedStop) {
    out.newLine().append("int i = 0").semi();
  }
  out.newLine().append("do").openBlock();
  boolean isFirst=true;
  String operator="if";
  for (  FieldLoader fieldLoader : fieldLoaders) {
    if (!isFirst) {
      out.newLine();
    }
    String fieldName=fieldLoader.getFieldName();
    out.append(operator).append(" (name");
    out.append(".equals(\"").append(fieldName).append("\"))").openBlock();
{
      assignField(out,fieldName);
      fieldLoader.valueReader.writeReadCode(classScope,false,fieldName,out);
      out.semi();
      if (stopIfAllFieldsWereRead && !isTracedStop) {
        out.newLine().append(Util.READER_NAME).append(".skipValues()").semi().newLine().append("break").semi();
      }
    }
    out.closeBlock();
    if (isFirst) {
      isFirst=false;
      operator="else if";
    }
  }
  out.newLine().append("else").openBlock().append("reader.skipValue();");
  if (isTracedStop) {
    out.newLine().append("continue").semi();
  }
  out.closeBlock();
  if (isTracedStop) {
    out.newLine().newLine().append("if (i == ").append(fieldLoaders.size() - 1).append(")").openBlock();
    out.append(Util.READER_NAME).append(".skipValues()").semi().newLine().append("break").semi().closeBlock();
    out.newLine().append("else").openBlock().append("i++").semi().closeBlock();
  }
  out.closeBlock();
  out.newLine().append("while ((name = reader.nextNameOrNull()) != null)").semi();
}
