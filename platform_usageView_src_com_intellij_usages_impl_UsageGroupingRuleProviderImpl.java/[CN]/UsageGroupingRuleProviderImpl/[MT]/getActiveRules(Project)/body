{
  List<UsageGroupingRule> rules=new ArrayList<>();
  if (supportsNonCodeRule()) {
    rules.add(new NonCodeUsageGroupingRule(project));
  }
  if (supportsScopesRule() && UsageViewSettings.getInstance().GROUP_BY_SCOPE) {
    rules.add(new UsageScopeGroupingRule());
  }
  if (UsageViewSettings.getInstance().GROUP_BY_USAGE_TYPE) {
    rules.add(new UsageTypeGroupingRule());
  }
  if (supportsModuleRule() && UsageViewSettings.getInstance().GROUP_BY_MODULE) {
    rules.add(new ModuleGroupingRule());
  }
  if (UsageViewSettings.getInstance().GROUP_BY_PACKAGE) {
    rules.add(DirectoryGroupingRule.getInstance(project));
  }
  if (UsageViewSettings.getInstance().GROUP_BY_FILE_STRUCTURE) {
    FileStructureGroupRuleProvider[] providers=Extensions.getExtensions(FileStructureGroupRuleProvider.EP_NAME);
    for (    FileStructureGroupRuleProvider ruleProvider : providers) {
      ContainerUtil.addIfNotNull(rules,ruleProvider.getUsageGroupingRule(project));
    }
  }
 else {
    rules.add(new FileGroupingRule(project));
  }
  return rules.toArray(new UsageGroupingRule[rules.size()]);
}
