{
  final PsiCodeBlock variableAssignmentBlock=PsiTreeUtil.getParentOfType(variableAssignmentExpression,PsiCodeBlock.class);
  final PsiCodeBlock methodCallBlock=PsiTreeUtil.getParentOfType(methodCallExpression,PsiCodeBlock.class);
  if (variableAssignmentBlock == null || variableAssignmentBlock != methodCallBlock) {
    return false;
  }
  final PsiStatement variableDeclarationStatement=PsiTreeUtil.getParentOfType(variableAssignmentExpression,PsiStatement.class);
  final PsiStatement methodCallStatement=PsiTreeUtil.getParentOfType(methodCallExpression,PsiStatement.class);
  if (variableDeclarationStatement == null || methodCallStatement == null || variableDeclarationStatement.getParent() != methodCallStatement.getParent()) {
    return false;
  }
  PsiElement nextStatement=variableDeclarationStatement;
  final List<PsiElement> referencedElementsFromParameter=extractReferencedElementsFromParameter(methodCallExpression);
  while (nextStatement != null) {
    nextStatement=PsiTreeUtil.getNextSiblingOfType(nextStatement,PsiStatement.class);
    if (nextStatement == methodCallStatement) {
      return true;
    }
 else {
      for (      PsiReferenceExpression referenceExpression : PsiTreeUtil.findChildrenOfType(nextStatement,PsiReferenceExpression.class)) {
        if (referenceExpression.isReferenceTo(variable) || isReferenceToOneOf(referenceExpression,referencedElementsFromParameter)) {
          return false;
        }
      }
      for (      PsiLocalVariable localVariable : PsiTreeUtil.findChildrenOfType(nextStatement,PsiLocalVariable.class)) {
        if (referencedElementsFromParameter.contains(localVariable)) {
          return false;
        }
      }
    }
  }
  return false;
}
