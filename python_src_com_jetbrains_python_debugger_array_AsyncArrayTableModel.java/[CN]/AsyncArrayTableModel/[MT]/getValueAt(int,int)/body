{
  Pair<Integer,Integer> key=itemToChunkKey(row,col);
  try {
    ListenableFuture<ArrayChunk> chunk=myChunkCache.get(key);
    if (chunk.isDone()) {
      Object[][] data=chunk.get().getData();
      int r=row % CHUNK_ROW_SIZE;
      int c=col % CHUNK_COL_SIZE;
      if (r < data.length) {
        if (c < data[r].length) {
          return myProvider.correctStringValue(data[r][c]);
        }
      }
    }
 else {
      chunk.addListener(new Runnable(){
        @Override public void run(){
          UIUtil.invokeLaterIfNeeded(new Runnable(){
            @Override public void run(){
              fireTableCellUpdated(row,col);
            }
          }
);
        }
      }
,myExecutorService);
    }
    return EMPTY_CELL_VALUE;
  }
 catch (  Exception e) {
    myProvider.showError(e.getMessage());
    return EMPTY_CELL_VALUE;
  }
}
