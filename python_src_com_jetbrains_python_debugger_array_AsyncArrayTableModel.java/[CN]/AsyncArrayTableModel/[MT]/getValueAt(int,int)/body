{
  Pair<Integer,Integer> key=itemToChunkKey(row,col);
  try {
    ListenableFuture<Object[][]> chunk=myChunkCache.get(key);
    chunk.addListener(new Runnable(){
      @Override public void run(){
        UIUtil.invokeLaterIfNeeded(new Runnable(){
          @Override public void run(){
            fireTableCellUpdated(row,col);
          }
        }
);
      }
    }
,myExecutorService);
    if (chunk.isDone()) {
      int r=row % CHUNK_ROW_SIZE;
      int c=col % CHUNK_COL_SIZE;
      if (r < chunk.get().length) {
        if (c < chunk.get()[r].length) {
          return chunk.get()[r][c];
        }
      }
    }
    return EMPTY_CELL_VALUE;
  }
 catch (  Exception e) {
    return EMPTY_CELL_VALUE;
  }
}
