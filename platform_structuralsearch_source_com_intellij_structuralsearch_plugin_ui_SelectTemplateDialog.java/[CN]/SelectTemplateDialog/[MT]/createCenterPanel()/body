{
  final JPanel centerPanel=new JPanel(new BorderLayout());
  Splitter splitter;
  centerPanel.add(BorderLayout.CENTER,splitter=new Splitter(false,0.3f));
  centerPanel.add(splitter);
  splitter.setFirstComponent(showHistory ? existingTemplatesComponent.getHistoryPanel() : existingTemplatesComponent.getTemplatesPanel());
  final JPanel panel;
  splitter.setSecondComponent(panel=new JPanel(new BorderLayout()));
  searchPatternEditor=UIUtil.createEditor(EditorFactory.getInstance().createDocument(""),project,false,true,ContainerUtil.findInstance(TemplateContextType.EP_NAME.getExtensions(),TemplateContextType.class));
  JComponent centerComponent;
  if (replace) {
    replacePatternEditor=UIUtil.createEditor(EditorFactory.getInstance().createDocument(""),project,false,true,ContainerUtil.findInstance(TemplateContextType.EP_NAME.getExtensions(),TemplateContextType.class));
    centerComponent=new Splitter(true);
    ((Splitter)centerComponent).setFirstComponent(searchPatternEditor.getComponent());
    ((Splitter)centerComponent).setSecondComponent(replacePatternEditor.getComponent());
  }
 else {
    centerComponent=searchPatternEditor.getComponent();
  }
  myCardLayout=new CardLayout();
  myPreviewPanel=new JPanel(myCardLayout);
  myPreviewPanel.add(centerComponent,PREVIEW_CARD);
  JPanel selectPanel=new JPanel(new GridBagLayout());
  GridBagConstraints gb=new GridBagConstraints(0,0,0,0,0,0,GridBagConstraints.CENTER,GridBagConstraints.NONE,new Insets(0,0,0,0),0,0);
  selectPanel.add(new JLabel(SSRBundle.message("selecttemplate.template.label.please.select.template")),gb);
  myPreviewPanel.add(selectPanel,SELECT_TEMPLATE_CARD);
  panel.add(BorderLayout.CENTER,myPreviewPanel);
  final JPanel labelPanel=new JPanel(new FlowLayout(FlowLayout.LEFT,2,0));
  labelPanel.add(new JLabel(SSRBundle.message("selecttemplate.template.preview")));
  labelPanel.add(UIUtil.createCompleteMatchInfo(new Producer<Configuration>(){
    @Nullable @Override public Configuration produce(){
      final Configuration[] configurations=getSelectedConfigurations();
      return configurations.length != 1 ? null : configurations[0];
    }
  }
));
  panel.add(BorderLayout.NORTH,labelPanel);
  return centerPanel;
}
