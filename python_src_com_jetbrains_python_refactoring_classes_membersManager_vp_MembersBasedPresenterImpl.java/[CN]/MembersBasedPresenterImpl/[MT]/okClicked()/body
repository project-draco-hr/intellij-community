{
  final MultiMap<PyClass,PyMemberInfo<?>> conflicts=getConflicts();
  final Collection<PyMemberInfo<?>> dependencyConflicts=new ArrayList<PyMemberInfo<?>>();
  for (  final PyMemberInfo<PyElement> memberInfo : myStorage.getClassMemberInfos(myClassUnderRefactoring)) {
    if (myModel.checkForProblems(memberInfo) != MemberInfoModel.OK) {
      dependencyConflicts.add(memberInfo);
    }
  }
  if ((conflicts.isEmpty() && dependencyConflicts.isEmpty()) || myView.showConflictsDialog(conflicts,dependencyConflicts)) {
    try {
      validateView();
      doRefactor();
    }
 catch (    final BadDataException e) {
      myView.showError(e.getMessage());
    }
  }
}
