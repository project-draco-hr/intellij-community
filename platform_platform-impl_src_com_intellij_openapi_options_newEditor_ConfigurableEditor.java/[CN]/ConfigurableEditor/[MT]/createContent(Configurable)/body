{
  JComponent content=configurable == null ? null : configurable.createComponent();
  if (content != null) {
    configurable.reset();
    if (ConfigurableWrapper.cast(MasterDetails.class,configurable) == null) {
      if (ConfigurableWrapper.cast(Configurable.NoMargin.class,configurable) == null) {
        content.setBorder(BorderFactory.createEmptyBorder(10,10,10,10));
      }
      if (ConfigurableWrapper.cast(Configurable.NoScroll.class,configurable) == null) {
        JScrollPane scroll=ScrollPaneFactory.createScrollPane(null,true);
        scroll.setViewport(new GradientViewport(content,5,0,0,0,true));
        scroll.getVerticalScrollBar().setUnitIncrement(10);
        content=scroll;
      }
    }
  }
 else {
    content=new JPanel(new BorderLayout());
    content.setBorder(BorderFactory.createEmptyBorder(10,10,10,10));
    String key=configurable == null ? null : ConfigurableVisitor.ByID.getID(configurable) + ".settings.description";
    String description=key == null ? null : getString(configurable,key);
    if (description == null) {
      description="Select configuration element in the tree to edit its settings";
      content.add(BorderLayout.CENTER,new JLabel(description,SwingConstants.CENTER));
      content.setPreferredSize(new Dimension(800,600));
    }
 else {
      content.add(BorderLayout.NORTH,new JLabel(description));
      if (configurable instanceof Configurable.Composite) {
        Configurable.Composite composite=(Configurable.Composite)configurable;
        JPanel panel=new JPanel();
        panel.setLayout(new BoxLayout(panel,BoxLayout.Y_AXIS));
        content.add(BorderLayout.CENTER,panel);
        panel.add(Box.createVerticalStrut(10));
        for (        final Configurable current : composite.getConfigurables()) {
          LinkLabel label=new LinkLabel(current.getDisplayName(),null){
            @Override public void doClick(){
              openLink(current);
            }
          }
;
          label.setBorder(BorderFactory.createEmptyBorder(1,17,3,1));
          panel.add(label);
        }
      }
    }
  }
  return content;
}
