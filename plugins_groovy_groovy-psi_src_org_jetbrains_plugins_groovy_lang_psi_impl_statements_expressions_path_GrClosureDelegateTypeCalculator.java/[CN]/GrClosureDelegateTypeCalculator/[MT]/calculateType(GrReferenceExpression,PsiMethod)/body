{
  final GrClosableBlock closure=PsiTreeUtil.getParentOfType(expression,GrClosableBlock.class);
  if (closure == null)   return null;
  final PsiClass closureClass=GroovyPsiManager.getInstance(expression.getProject()).findClassWithCache(GroovyCommonClassNames.GROOVY_LANG_CLOSURE,expression.getResolveScope());
  if (closureClass == null)   return null;
  final PsiMethod delegateMethod=closureClass.findMethodBySignature(new LightMethodBuilder(expression.getManager(),expression.getLanguage(),"getDelegate"),false);
  if (!method.equals(delegateMethod))   return null;
  final GrDelegatesToUtil.DelegatesToInfo info=GrDelegatesToUtil.getDelegatesToInfo(expression,closure);
  if (info == null)   return null;
  return info.getTypeToDelegate();
}
