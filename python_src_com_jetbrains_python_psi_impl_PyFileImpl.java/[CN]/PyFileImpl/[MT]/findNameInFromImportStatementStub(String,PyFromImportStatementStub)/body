{
  if (stub.isStarImport()) {
    if (PyUtil.isClassPrivateName(name)) {
      return null;
    }
    final PyFromImportStatement statement=stub.getPsi();
    PsiElement starImportSource=ResolveImportUtil.resolveFromImportStatementSource(statement);
    if (starImportSource != null) {
      starImportSource=PyUtil.turnDirIntoInit(starImportSource);
      if (starImportSource instanceof PyFile) {
        final PsiElement result=((PyFile)starImportSource).getElementNamed(name);
        if (result != null) {
          return result;
        }
      }
    }
  }
 else {
    final List<StubElement> importElements=stub.getChildrenStubs();
    for (    StubElement importElement : importElements) {
      final PsiElement psi=importElement.getPsi();
      if (psi instanceof PyImportElement && name.equals(((PyImportElement)psi).getVisibleName())) {
        final PsiElement resolved=((PyImportElement)psi).getElementNamed(name);
        if (resolved != null) {
          return resolved;
        }
      }
    }
  }
  if (PyNames.INIT_DOT_PY.equals(getName())) {
    final PyQualifiedName qName=stub.getImportSourceQName();
    if (qName.endsWith(name)) {
      final PsiElement element=PyUtil.turnInitIntoDir(ResolveImportUtil.resolveFromImportStatementSource(stub.getPsi()));
      if (element != null && element.getParent() == getContainingDirectory()) {
        return element;
      }
    }
  }
  return null;
}
