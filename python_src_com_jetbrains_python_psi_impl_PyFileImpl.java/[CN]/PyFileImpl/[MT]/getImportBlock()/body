{
  final List<PyImportStatementBase> result=new ArrayList<>();
  final PsiElement firstChild=getFirstChild();
  final PyImportStatementBase firstImport;
  if (firstChild instanceof PyImportStatementBase) {
    firstImport=(PyImportStatementBase)firstChild;
  }
 else {
    firstImport=PsiTreeUtil.getNextSiblingOfType(firstChild,PyImportStatementBase.class);
  }
  if (firstImport != null) {
    result.add(firstImport);
    PsiElement nextImport=PyPsiUtils.getNextNonCommentSibling(firstImport,true);
    while (nextImport instanceof PyImportStatementBase) {
      result.add((PyImportStatementBase)nextImport);
      nextImport=PyPsiUtils.getNextNonCommentSibling(nextImport,true);
    }
  }
  return result;
}
