{
  final StubElement stub=getStub();
  if (stub != null) {
    final List children=stub.getChildrenStubs();
    for (    Object child : children) {
      if (child instanceof NamedStub && name.equals(((NamedStub)child).getName())) {
        return ((NamedStub)child).getPsi();
      }
 else       if (child instanceof PyFromImportStatementStub || child instanceof PyImportStatementStub) {
        final List<StubElement> importElements=((StubElement)child).getChildrenStubs();
        for (        StubElement importElement : importElements) {
          final PsiElement psi=importElement.getPsi();
          if (psi instanceof PyImportElement && name.equals(((PyImportElement)psi).getVisibleName())) {
            return psi;
          }
        }
      }
    }
    return null;
  }
 else {
    ResolveProcessor proc=new ResolveProcessor(name);
    PyResolveUtil.treeCrawlUp(proc,true,getLastChild());
    return proc.getResult();
  }
}
