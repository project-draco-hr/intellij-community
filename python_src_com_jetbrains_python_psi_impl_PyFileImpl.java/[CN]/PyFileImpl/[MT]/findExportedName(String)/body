{
  final List<String> stack=myFindExportedNameStack.get();
  if (stack.contains(name)) {
    return null;
  }
  stack.add(name);
  try {
    final List<PsiElement> children=PyPsiUtils.collectAllStubChildren(this,getStub());
    final List<PyExceptPart> exceptParts=new ArrayList<PyExceptPart>();
    for (int i=children.size() - 1; i >= 0; i--) {
      ProgressManager.checkCanceled();
      PsiElement child=children.get(i);
      if (child instanceof PyExceptPart) {
        exceptParts.add((PyExceptPart)child);
      }
 else {
        PsiElement element=findNameInStub(child,name);
        if (element != null) {
          return element;
        }
      }
    }
    for (int i=exceptParts.size() - 1; i >= 0; i--) {
      ProgressManager.checkCanceled();
      PyExceptPart part=exceptParts.get(i);
      final List<PsiElement> exceptChildren=PyPsiUtils.collectAllStubChildren(part,part.getStub());
      for (int j=exceptChildren.size() - 1; j >= 0; j--) {
        PsiElement child=exceptChildren.get(j);
        PsiElement element=findNameInStub(child,name);
        if (element != null) {
          return element;
        }
      }
    }
    List<String> allNames=getDunderAll();
    if (allNames != null && allNames.contains(name)) {
      return findExportedName(PyNames.ALL);
    }
    return null;
  }
  finally {
    stack.remove(name);
  }
}
