{
  final Collection<PyClass> elements=fetchElements(members);
  for (  final PyClass destClass : to) {
    PyClassRefactoringUtil.addSuperclasses(from.getProject(),destClass,elements.toArray(new PyClass[members.size()]));
  }
  for (  final PyExpression expression : from.getSuperClassExpressions()) {
    if (!(expression instanceof PyQualifiedExpression)) {
      continue;
    }
    final PyReferenceExpression reference=(PyReferenceExpression)expression;
    for (    final PyClass element : elements) {
      if (reference.getReference().isReferenceTo(element)) {
        expression.delete();
      }
    }
  }
  return Collections.emptyList();
}
