{
  final PyFile file=getTestFile();
  final List<PyClass> classes=file.getTopLevelClasses();
  assertEquals(1,classes.size());
  PyClass pyClass=classes.get(0);
  assertEquals("FooClass",pyClass.getName());
  assertEquals("StubStructure.FooClass",pyClass.getQualifiedName());
  final PyTargetExpression[] attrs=pyClass.getClassAttributes();
  assertEquals(1,attrs.length);
  assertEquals("staticField",attrs[0].getName());
  final PyFunction[] methods=pyClass.getMethods();
  assertEquals(2,methods.length);
  assertEquals("__init__",methods[0].getName());
  assertEquals("fooFunction",methods[1].getName());
  final PyParameter[] parameters=methods[1].getParameterList().getParameters();
  assertFalse(parameters[0].hasDefaultValue());
  assertTrue(parameters[1].hasDefaultValue());
  PyFunction decorated=methods[1];
  PyDecoratorList decos=decorated.getDecoratorList();
  assertNotNull(decos);
  assertNotParsed(file);
  PyDecorator[] da=decos.getDecorators();
  assertNotNull(da);
  assertEquals(1,da.length);
  assertNotParsed(file);
  PyDecorator deco=da[0];
  assertNotNull(deco);
  assertEquals("deco",deco.getName());
  assertNotParsed(file);
  assertFalse(deco.isBuiltin());
  final PyTargetExpression[] instanceAttrs=pyClass.getInstanceAttributes();
  assertEquals(1,instanceAttrs.length);
  assertEquals("instanceField",instanceAttrs[0].getName());
  final List<PyFunction> functions=file.getTopLevelFunctions();
  assertEquals(2,functions.size());
  PyFunction func=functions.get(0);
  assertEquals("deco",func.getName());
  func=functions.get(1);
  assertEquals("topLevelFunction",func.getName());
  final List<PyTargetExpression> exprs=file.getTopLevelAttributes();
  assertEquals(2,exprs.size());
  assertEquals("top1",exprs.get(0).getName());
  assertEquals("top2",exprs.get(1).getName());
  assertNotParsed(file);
}
