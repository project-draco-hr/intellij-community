{
  if (contents.isEmpty()) {
    GithubNotifications.showWarning(project,FAILED_TO_CREATE_GIST,"Can't create empty gist");
    return null;
  }
  String requestBody=prepareCreateJsonRequest(description,isPrivate,contents,filename);
  try {
    JsonElement jsonElement;
    if (auth == null) {
      jsonElement=GithubApiUtil.anonymousPostRequest(GithubApiUtil.getApiUrl(),"/gists",requestBody);
    }
 else {
      jsonElement=GithubApiUtil.postRequest(GithubApiUtil.getApiUrl(),auth,"/gists",requestBody);
    }
    return getUrlFromJson(project,jsonElement);
  }
 catch (  IOException e) {
    LOG.info("Exception when creating a Gist",e);
    GithubNotifications.showError(project,FAILED_TO_CREATE_GIST,e.getMessage());
    return null;
  }
}
