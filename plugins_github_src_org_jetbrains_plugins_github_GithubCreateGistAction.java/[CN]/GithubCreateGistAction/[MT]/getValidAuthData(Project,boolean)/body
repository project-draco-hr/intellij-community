{
  if (isAnonymous) {
    return new GithubAuthDataHolder(GithubAuthData.createAnonymous());
  }
 else {
    try {
      return GithubUtil.computeValueInModal(project,"Access to GitHub",new ThrowableConvertor<ProgressIndicator,GithubAuthDataHolder,IOException>(){
        @NotNull @Override public GithubAuthDataHolder convert(        ProgressIndicator indicator) throws IOException {
          return GithubUtil.getValidAuthDataHolderFromConfig(project,indicator);
        }
      }
);
    }
 catch (    IOException e) {
      GithubNotifications.showError(project,"Can't create gist",e);
      return null;
    }
  }
}
