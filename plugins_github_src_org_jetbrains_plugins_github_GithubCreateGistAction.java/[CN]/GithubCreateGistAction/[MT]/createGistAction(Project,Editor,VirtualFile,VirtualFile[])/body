{
  final GithubCreateGistDialog dialog=new GithubCreateGistDialog(project,editor,files,file);
  dialog.show();
  if (!dialog.isOK()) {
    return;
  }
  final GithubAuthDataHolder authHolder=getValidAuthData(project,dialog.isAnonymous());
  if (authHolder == null) {
    return;
  }
  final AtomicReference<String> url=new AtomicReference<String>();
  new Task.Backgroundable(project,"Creating Gist..."){
    @Override public void run(    @NotNull ProgressIndicator indicator){
      List<FileContent> contents=collectContents(project,editor,file,files);
      String gistUrl=createGist(project,authHolder,indicator,contents,dialog.isPrivate(),dialog.getDescription(),dialog.getFileName());
      url.set(gistUrl);
    }
    @Override public void onSuccess(){
      if (url.get() == null) {
        return;
      }
      if (dialog.isOpenInBrowser()) {
        BrowserUtil.browse(url.get());
      }
 else {
        GithubNotifications.showInfoURL(project,"Gist Created Successfully","Your gist url",url.get());
      }
    }
  }
.queue();
}
