{
  if (contents.isEmpty()) {
    GithubNotifications.showWarning(project,FAILED_TO_CREATE_GIST,"Can't create empty gist");
    return null;
  }
  if (contents.size() == 1 && filename != null) {
    FileContent entry=contents.iterator().next();
    contents=Collections.singletonList(new FileContent(filename,entry.getContent()));
  }
  try {
    final List<FileContent> finalContents=contents;
    return GithubUtil.runTask(project,auth,indicator,new ThrowableConvertor<GithubConnection,GithubGist,IOException>(){
      @NotNull @Override public GithubGist convert(      @NotNull GithubConnection connection) throws IOException {
        return GithubApiUtil.createGist(connection,finalContents,description,isPrivate);
      }
    }
).getHtmlUrl();
  }
 catch (  IOException e) {
    GithubNotifications.showError(project,FAILED_TO_CREATE_GIST,e);
    return null;
  }
}
