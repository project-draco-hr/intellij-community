{
  int flags=checkFlags(tree.myMods,owner);
  if (info.getType() == IndexTree.BYTECODE) {
    flags|=IndexTree.COMPILED;
  }
  int name=tree.myName;
  QualifiedName qname=name == NamesEnumerator.NO_NAME || ownerName == null ? null : myNameEnvironment.qualifiedName(ownerName,name,true);
  @CompactArray(QualifiedName.class) Object supers=internSupers(tree.myMods,tree.mySupers);
  ClassSymbol classSymbol=mySymbols.enterClass(fileId,tree.myStubId,flags,name,owner,info,supers,qname);
  if (uncompleted != null) {
    uncompleted.add(classSymbol);
  }
  if (tree.myDecls.length > 0) {
    classSymbol.setMembers(enter(tree.myDecls,info,classSymbol,qname,fileId));
  }
  return classSymbol;
}
