{
  int flags=checkFlags(tree.mods,owner);
  if (info.getType() == IndexTree.BYTECODE) {
    flags|=IndexTree.COMPILED;
  }
  QualifiedName[] supers=tree.mySupers;
  if ((tree.mods & IndexTree.ANNOTATION) != 0) {
    supers=myNameEnvironment.annotation;
  }
  int name=tree.myName;
  QualifiedName qname=name == NamesEnumerator.NO_NAME || ownerName == null ? null : myNameEnvironment.qualifiedName(ownerName,name,true);
  ClassSymbol classSymbol=mySymbols.enterClass(tree.myClassAnchor,flags,name,owner,info,supers,qname);
  if (uncompleted != null) {
    uncompleted.add(classSymbol);
  }
  ClassSymbol[] members=enter(tree.myDeclarations,info,classSymbol,qname);
  classSymbol.setMembers(members);
  return classSymbol;
}
