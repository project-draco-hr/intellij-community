{
  String path;
  if (myAcceptUnescapedUrls) {
    path=url.getFile();
  }
 else {
    try {
      path=url.toURI().getSchemeSpecificPart();
    }
 catch (    URISyntaxException e) {
      Logger.getInstance(ClassPath.class).error("url: " + url,e);
      path=url.getFile();
    }
  }
  Loader loader=null;
  if (path != null && URLUtil.FILE_PROTOCOL.equals(url.getProtocol())) {
    File file=new File(path);
    if (file.isDirectory()) {
      loader=new FileLoader(url,index,myCanHavePersistentIndex);
    }
 else     if (file.isFile()) {
      loader=new JarLoader(url,myCanLockJars,index,myPreloadJarContents);
    }
  }
  if (loader != null && myCanUseCache) {
    ClasspathCache.LoaderData data=myCachePool == null ? null : myCachePool.getCachedData(url);
    if (data == null) {
      data=loader.buildData();
      if (myCachePool != null && myCachingCondition != null && myCachingCondition.shouldCacheData(url)) {
        myCachePool.cacheData(url,data);
      }
    }
    myCache.applyLoaderData(data,loader);
  }
  return loader;
}
