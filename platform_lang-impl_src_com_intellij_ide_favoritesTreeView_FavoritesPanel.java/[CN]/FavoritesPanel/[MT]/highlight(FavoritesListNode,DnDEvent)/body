{
  int pathCount=0;
  Object object=event.getAttachedObject();
  if (object instanceof TreePath) {
    pathCount=((TreePath)object).getPathCount();
  }
  if (node != null) {
    TreePath pathToList=myTree.getPath(node);
    while (pathToList != null) {
      final Object pathObj=pathToList.getLastPathComponent();
      if (pathObj instanceof DefaultMutableTreeNode) {
        final Object userObject=((DefaultMutableTreeNode)pathObj).getUserObject();
        if (userObject instanceof FavoritesTreeNodeDescriptor) {
          if (((FavoritesTreeNodeDescriptor)userObject).getElement() == node) {
            break;
          }
        }
      }
      pathToList=pathToList.getParentPath();
    }
    if (pathToList != null) {
      Rectangle bounds=myTree.getPathBounds(pathToList);
      if (bounds != null) {
        if (pathCount == 2) {
          FavoritesListNode pathToReorder=FavoritesTreeViewPanel.getListNodeFromPath((TreePath)object);
          FavoritesListNode anchorPath=FavoritesTreeViewPanel.getListNodeFromPath(pathToList);
          boolean below=event.getPoint().y >= bounds.y + bounds.height / 2;
          if (pathToReorder == null || anchorPath == null || !FavoritesManager.getInstance(myProject).canReorder(pathToReorder.getValue(),anchorPath.getValue(),!below)) {
            event.hideHighlighter();
            return;
          }
          if (below) {
            bounds.y+=bounds.height - 2;
          }
          bounds.height=2;
          event.setHighlighting(new RelativeRectangle(myTree,bounds),DnDEvent.DropTargetHighlightingType.RECTANGLE);
        }
 else {
          event.setHighlighting(new RelativeRectangle(myTree,bounds),DnDEvent.DropTargetHighlightingType.RECTANGLE);
        }
      }
    }
  }
 else {
    event.hideHighlighter();
  }
}
