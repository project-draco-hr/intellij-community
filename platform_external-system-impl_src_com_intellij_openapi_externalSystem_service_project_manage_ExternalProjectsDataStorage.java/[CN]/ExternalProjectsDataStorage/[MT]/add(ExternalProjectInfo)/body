{
  final ProjectSystemId projectSystemId=externalProjectInfo.getProjectSystemId();
  final String projectPath=externalProjectInfo.getExternalProjectPath();
  DataNode<ProjectData> externalProjectStructure=externalProjectInfo.getExternalProjectStructure();
  long lastSuccessfulImportTimestamp=externalProjectInfo.getLastSuccessfulImportTimestamp();
  long lastImportTimestamp=externalProjectInfo.getLastImportTimestamp();
  final Pair<ProjectSystemId,String> key=Pair.create(projectSystemId,projectPath);
  final InternalExternalProjectInfo old=myExternalRootProjects.get(key);
  if (old != null) {
    lastImportTimestamp=externalProjectInfo.getLastImportTimestamp();
    if (lastSuccessfulImportTimestamp == -1) {
      lastSuccessfulImportTimestamp=old.getLastSuccessfulImportTimestamp();
    }
    if (externalProjectInfo.getExternalProjectStructure() == null) {
      externalProjectStructure=old.getExternalProjectStructure();
    }
  }
  InternalExternalProjectInfo merged=new InternalExternalProjectInfo(projectSystemId,projectPath,externalProjectStructure);
  merged.setLastImportTimestamp(lastImportTimestamp);
  merged.setLastSuccessfulImportTimestamp(lastSuccessfulImportTimestamp);
  myExternalRootProjects.put(key,merged);
}
