{
  ApplicationManager.getApplication().invokeLater(new Runnable(){
    @Override public void run(){
      Project project=view.getProject();
      CommandProcessor.getInstance().executeCommand(project,new Runnable(){
        @Override public void run(){
          final InspectionToolWrapper wrapper=view.getTree().getSelectedToolWrapper();
          for (          SuppressableInspectionTreeNode node : getNodesToSuppress(view)) {
            final Pair<PsiElement,CommonProblemDescriptor> content=node.getSuppressContent();
            if (content.first == null)             break;
            final PsiElement element=content.first;
            RefEntity refEntity=node.getElement();
            if (!suppress(element,content.second,mySuppressAction,refEntity,wrapper))             break;
            node.markAsSuppressedFromView();
          }
          final Set<GlobalInspectionContextImpl> globalInspectionContexts=((InspectionManagerEx)InspectionManager.getInstance(project)).getRunningContexts();
          for (          GlobalInspectionContextImpl context : globalInspectionContexts) {
            context.refreshViews();
          }
          CommandProcessor.getInstance().markCurrentCommandAsGlobal(project);
        }
      }
,getTemplatePresentation().getText(),null);
    }
  }
);
}
