{
  if (action instanceof SuppressIntentionActionFromFix && !(descriptor instanceof ProblemDescriptor)) {
    LOG.info("local suppression fix for specific problem descriptor:  " + wrapper.getTool().getClass().getName());
  }
  final Project project=element.getProject();
  final PsiModificationTracker tracker=PsiManager.getInstance(project).getModificationTracker();
  ApplicationManager.getApplication().runWriteAction(new Runnable(){
    @Override public void run(){
      PsiDocumentManager.getInstance(project).commitAllDocuments();
      try {
        final long startModificationCount=tracker.getModificationCount();
        PsiElement container=null;
        if (action instanceof SuppressIntentionActionFromFix) {
          container=((SuppressIntentionActionFromFix)action).getContainer(element);
        }
        if (container == null) {
          container=element;
        }
        if (action.isAvailable(project,null,element)) {
          action.invoke(project,null,element);
        }
        if (startModificationCount != tracker.getModificationCount()) {
          final Set<GlobalInspectionContextImpl> globalInspectionContexts=((InspectionManagerEx)InspectionManager.getInstance(element.getProject())).getRunningContexts();
          for (          GlobalInspectionContextImpl context : globalInspectionContexts) {
            context.ignoreElement(wrapper.getTool(),container);
            if (descriptor != null) {
              context.getPresentation(wrapper).ignoreCurrentElementProblem(refEntity,descriptor);
            }
          }
        }
      }
 catch (      IncorrectOperationException e1) {
        LOG.error(e1);
      }
    }
  }
);
  return true;
}
