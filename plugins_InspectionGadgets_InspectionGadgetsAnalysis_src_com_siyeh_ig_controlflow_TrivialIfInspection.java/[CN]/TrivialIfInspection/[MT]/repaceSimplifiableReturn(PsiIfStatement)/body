{
  final PsiExpression condition=statement.getCondition();
  if (condition == null) {
    return;
  }
  final String conditionText=condition.getText();
  @NonNls final String newStatement="return " + conditionText + ';';
  final Collection<PsiComment> comments=PsiTreeUtil.findChildrenOfType(statement,PsiComment.class);
  final PsiElement parent=statement.getParent();
  for (  PsiComment comment : comments) {
    parent.addBefore(comment.copy(),statement);
  }
  PsiReplacementUtil.replaceStatement(statement,newStatement);
}
