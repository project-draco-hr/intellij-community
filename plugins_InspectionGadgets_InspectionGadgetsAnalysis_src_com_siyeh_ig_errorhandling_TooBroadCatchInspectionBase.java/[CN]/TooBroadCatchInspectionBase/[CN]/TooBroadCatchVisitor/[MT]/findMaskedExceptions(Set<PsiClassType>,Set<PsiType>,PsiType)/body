{
  if (thrownTypes.contains(caughtType)) {
    if (ignoreThrown) {
      return Collections.emptyList();
    }
    caughtTypes.add(caughtType);
    thrownTypes.remove(caughtType);
  }
  if (onlyWarnOnRootExceptions) {
    if (!ExceptionUtils.isGenericExceptionClass(caughtType)) {
      return Collections.emptyList();
    }
  }
  final List<PsiClass> maskedTypes=new ArrayList();
  for (  PsiClassType typeThrown : thrownTypes) {
    if (!caughtTypes.contains(typeThrown) && caughtType.isAssignableFrom(typeThrown)) {
      caughtTypes.add(typeThrown);
      final PsiClass aClass=typeThrown.resolve();
      if (aClass != null) {
        maskedTypes.add(aClass);
      }
    }
  }
  return maskedTypes;
}
