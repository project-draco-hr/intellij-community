{
  node.setAlreadySorted(true);
  value.resolve().done(new ObsolescentConsumer<FunctionValue>(node){
    @Override public void consume(    FunctionValue value){
      Scope[] scopes=value.getScopes();
      if (scopes == null || scopes.length == 0) {
        node.addChildren(XValueChildrenList.EMPTY,true);
      }
 else {
        ScopeVariablesGroup.createAndAddScopeList(node,Arrays.asList(scopes),variableContext,null);
      }
    }
  }
).rejected(new Consumer<Throwable>(){
    @Override public void consume(    Throwable error){
      if (!(error instanceof Promise.MessageError)) {
        CommandProcessor.LOG.error(error);
      }
      node.setErrorMessage(error.getMessage());
    }
  }
);
}
