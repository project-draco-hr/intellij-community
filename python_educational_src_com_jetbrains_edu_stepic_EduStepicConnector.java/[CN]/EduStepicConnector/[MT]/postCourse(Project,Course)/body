{
  ProgressManager.getInstance().run(new com.intellij.openapi.progress.Task.Modal(project,"Uploading Course",true){
    @Override public void run(    @NotNull final ProgressIndicator indicator){
      indicator.setText("Uploading course to " + stepicUrl);
      final HttpPost request=new HttpPost(stepicApiUrl + "courses");
      if (ourClient == null) {
        final String login=StudySettings.getInstance().getLogin();
        if (StringUtil.isEmptyOrSpaces(login)) {
          final boolean success=showLoginDialog();
          if (!success) {
            return;
          }
        }
 else {
          final boolean success=login(login,StudySettings.getInstance().getPassword());
          if (!success) {
            LOG.error("Failed to push course. Failed to login.");
            return;
          }
        }
      }
      setHeaders(request,"application/json");
      String requestBody=new Gson().toJson(new CourseWrapper(course));
      request.setEntity(new StringEntity(requestBody,ContentType.APPLICATION_JSON));
      try {
        final CloseableHttpResponse response=ourClient.execute(request);
        final String responseString=EntityUtils.toString(response.getEntity());
        final StatusLine line=response.getStatusLine();
        if (line.getStatusCode() != 201) {
          LOG.error("Failed to push " + responseString);
          return;
        }
        final CourseInfo postedCourse=new Gson().fromJson(responseString,CoursesContainer.class).courses.get(0);
        final int sectionId=postModule(postedCourse.id,1,String.valueOf(postedCourse.getName()));
        int position=1;
        for (        Lesson lesson : course.getLessons()) {
          indicator.checkCanceled();
          final int lessonId=postLesson(project,lesson,indicator);
          postUnit(lessonId,position,sectionId);
          position+=1;
        }
        ApplicationManager.getApplication().runReadAction(new Runnable(){
          @Override public void run(){
            postAdditionalFiles(project,postedCourse.id,indicator);
          }
        }
);
      }
 catch (      IOException e) {
        LOG.error(e.getMessage());
      }
    }
  }
);
}
