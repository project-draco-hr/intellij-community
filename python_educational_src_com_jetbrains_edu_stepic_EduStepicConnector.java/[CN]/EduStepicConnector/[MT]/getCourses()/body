{
  try {
    List<CourseInfo> result=new ArrayList<CourseInfo>();
    final List<CourseInfo> courseInfos=HttpRequests.request(stepicApiUrl + "courses").connect(new HttpRequests.RequestProcessor<List<CourseInfo>>(){
      @Override public List<CourseInfo> process(      @NotNull HttpRequests.Request request) throws IOException {
        final BufferedReader reader=request.getReader();
        Gson gson=new GsonBuilder().setFieldNamingPolicy(FieldNamingPolicy.LOWER_CASE_WITH_UNDERSCORES).create();
        return gson.fromJson(reader,CoursesContainer.class).courses;
      }
    }
);
    for (    CourseInfo info : courseInfos) {
      final String courseType=info.getType();
      if (StringUtil.isEmptyOrSpaces(courseType))       continue;
      final List<String> typeLanguage=StringUtil.split(courseType," ");
      if (typeLanguage.size() == 2 && PYCHARM_PREFIX.equals(typeLanguage.get(0))) {
        result.add(info);
      }
    }
    return result;
  }
 catch (  IOException e) {
    LOG.error("Cannot load course list " + e.getMessage());
  }
  return Collections.emptyList();
}
