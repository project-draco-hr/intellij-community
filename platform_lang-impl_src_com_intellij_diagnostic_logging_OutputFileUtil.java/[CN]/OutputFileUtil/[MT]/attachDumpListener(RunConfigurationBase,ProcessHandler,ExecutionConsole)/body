{
  if (!configuration.isSaveOutputToFile()) {
    return;
  }
  String outputFilePath=configuration.getOutputFilePath();
  if (outputFilePath != null) {
    final String filePath=FileUtil.toSystemDependentName(outputFilePath);
    startedProcess.addProcessListener(new ProcessAdapter(){
      private PrintStream myOutput;
      @Override public void onTextAvailable(      ProcessEvent event,      Key outputType){
        if (configuration.collectOutputFromProcessHandler() && myOutput != null && outputType != ProcessOutputTypes.SYSTEM) {
          myOutput.print(event.getText());
        }
      }
      @Override public void startNotified(      ProcessEvent event){
        try {
          File file=new File(filePath);
          if (configuration instanceof CommonProgramRunConfigurationParameters && !FileUtil.isAbsolute(filePath)) {
            String directory=((CommonProgramRunConfigurationParameters)configuration).getWorkingDirectory();
            if (directory != null) {
              file=new File(new File(directory),filePath);
            }
          }
          myOutput=new PrintStream(new FileOutputStream(file));
        }
 catch (        FileNotFoundException ignored) {
        }
        startedProcess.notifyTextAvailable(CONSOLE_OUTPUT_FILE_MESSAGE + filePath + "\n",ProcessOutputTypes.SYSTEM);
      }
      @Override public void processTerminated(      ProcessEvent event){
        startedProcess.removeProcessListener(this);
        if (myOutput != null) {
          myOutput.close();
        }
      }
    }
);
    if (console instanceof ConsoleView) {
      ((ConsoleView)console).addMessageFilter(new ShowOutputFileFilter());
    }
  }
}
