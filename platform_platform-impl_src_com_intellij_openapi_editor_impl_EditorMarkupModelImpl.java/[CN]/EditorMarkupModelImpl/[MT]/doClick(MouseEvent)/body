{
  RangeHighlighter marker=getNearestRangeHighlighter(e);
  int offset;
  if (marker == null) {
    if (myEditorPreviewHint != null) {
      offset=myEditor.getDocument().getLineStartOffset(getLineByEvent(e));
    }
 else {
      return;
    }
  }
 else {
    offset=marker.getStartOffset();
  }
  final Document doc=myEditor.getDocument();
  if (doc.getLineCount() > 0 && myEditorPreviewHint == null) {
    int lineEnd=doc.getLineEndOffset(myEditorFragmentRenderer.myLine);
    myEditor.getCaretModel().moveToOffset(lineEnd);
  }
  myEditor.getCaretModel().moveToOffset(offset);
  myEditor.getSelectionModel().removeSelection();
  ScrollingModel scrollingModel=myEditor.getScrollingModel();
  scrollingModel.disableAnimation();
  if (myEditorPreviewHint != null) {
    int lineY=myEditor.logicalPositionToXY(new LogicalPosition(myEditorFragmentRenderer.myStartLine,0)).y;
    int relativePopupOffset=myEditorFragmentRenderer.myRelativeY;
    scrollingModel.scrollVertically(lineY - relativePopupOffset);
  }
 else {
    scrollingModel.scrollToCaret(ScrollType.CENTER);
  }
  scrollingModel.enableAnimation();
  if (marker != null) {
    fireErrorMarkerClicked(marker,e);
  }
}
