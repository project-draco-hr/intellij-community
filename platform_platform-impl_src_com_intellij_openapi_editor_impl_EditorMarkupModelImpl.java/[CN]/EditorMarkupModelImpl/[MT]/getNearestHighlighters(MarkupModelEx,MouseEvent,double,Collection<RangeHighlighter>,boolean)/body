{
  if (0 > e.getX() || e.getX() >= width)   return;
  final int y=e.getY();
  int startOffset=yPositionToOffset(y - getMinHeight() * (isTooltip ? 1 : 20),true);
  int endOffset=yPositionToOffset(y + getMinHeight() * (isTooltip ? 1 : 20),false);
  markupModel.processRangeHighlightersOverlappingWith(startOffset,endOffset,new Processor<RangeHighlighterEx>(){
    @Override public boolean process(    RangeHighlighterEx highlighter){
      if (highlighter.getErrorStripeMarkColor() != null) {
        ProperTextRange range=offsetsToYPositions(highlighter.getStartOffset(),highlighter.getEndOffset());
        if (y >= range.getStartOffset() - getMinHeight() * (isTooltip ? 2 : 20) && y <= range.getEndOffset() + getMinHeight() * (isTooltip ? 2 : 20)) {
          nearest.add(highlighter);
        }
      }
      return true;
    }
  }
);
}
