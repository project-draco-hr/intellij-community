{
  return new ProjectTreeBuilder(myProject,myTree,treeModel,null,(ProjectAbstractTreeStructureBase)myTreeStructure){
    @Override protected ProjectViewPsiTreeChangeListener createPsiTreeChangeListener(    Project project){
      return new ProjectTreeBuilderPsiListener(project){
        @Override protected void childrenChanged(        PsiElement parent,        boolean stopProcessingForThisModificationCount){
          VirtualFile virtualFile=parent instanceof PsiFileSystemItem ? ((PsiFileSystemItem)parent).getVirtualFile() : null;
          if (virtualFile != null && virtualFile.isValid() && ScratchFileService.getInstance().getRootType(virtualFile) != null) {
            queueUpdateFrom(parent,true);
          }
        }
      }
;
    }
  }
;
}
