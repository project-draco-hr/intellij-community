{
  SvnBranchPointsCalculator.WrapperInvertor invertor;
  try {
    final TransparentlyFailedValueI<SvnBranchPointsCalculator.WrapperInvertor,VcsException> transparentlyFailedValueI=myData.get();
    if (transparentlyFailedValueI == null) {
      finishWithError(context,"Merge start wasn't found",true);
      return;
    }
    invertor=transparentlyFailedValueI.get();
  }
 catch (  VcsException e) {
    finishWithError(context,"Merge start wasn't found",Collections.singletonList(e));
    return;
  }
  if (invertor == null) {
    finishWithError(context,"Merge start wasn't found",true);
    return;
  }
  final boolean reintegrate=invertor.isInvertedSense();
  if (reintegrate && (!myInteraction.shouldReintegrate(myMergeContext.getSourceUrl(),invertor.inverted().getTarget()))) {
    context.cancelEverything();
    return;
  }
  final MergerFactory mergerFactory=createBranchMergerFactory(reintegrate,invertor);
  final String title="Merging all from " + myMergeContext.getBranchName() + (reintegrate ? " (reintegrate)" : "");
  context.next(new MergeTask(mergerFactory,title));
}
