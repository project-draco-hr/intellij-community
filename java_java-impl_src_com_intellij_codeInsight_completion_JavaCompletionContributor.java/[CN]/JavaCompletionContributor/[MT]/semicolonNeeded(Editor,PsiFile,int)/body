{
  final PsiJavaCodeReferenceElement ref=PsiTreeUtil.findElementOfClassAtOffset(file,startOffset,PsiJavaCodeReferenceElement.class,false);
  if (ref != null && !(ref instanceof PsiReferenceExpression)) {
    if (ref.getParent() instanceof PsiTypeElement) {
      return true;
    }
  }
  HighlighterIterator iterator=((EditorEx)editor).getHighlighter().createIterator(startOffset);
  if (iterator.atEnd())   return false;
  if (iterator.getTokenType() == JavaTokenType.IDENTIFIER) {
    iterator.advance();
  }
  while (!iterator.atEnd() && ElementType.JAVA_COMMENT_OR_WHITESPACE_BIT_SET.contains(iterator.getTokenType())) {
    iterator.advance();
  }
  if (!iterator.atEnd() && iterator.getTokenType() == JavaTokenType.LPARENTH && PsiTreeUtil.getParentOfType(ref,PsiExpression.class,PsiClass.class) == null) {
    return true;
  }
  if (!iterator.atEnd() && (iterator.getTokenType() == JavaTokenType.COLON) && null == PsiTreeUtil.findElementOfClassAtOffset(file,startOffset,PsiConditionalExpression.class,false)) {
    return true;
  }
  while (!iterator.atEnd() && ElementType.JAVA_COMMENT_OR_WHITESPACE_BIT_SET.contains(iterator.getTokenType())) {
    iterator.advance();
  }
  if (iterator.atEnd() || iterator.getTokenType() != JavaTokenType.IDENTIFIER)   return false;
  iterator.advance();
  while (!iterator.atEnd() && ElementType.JAVA_COMMENT_OR_WHITESPACE_BIT_SET.contains(iterator.getTokenType())) {
    iterator.advance();
  }
  if (iterator.atEnd())   return false;
  return iterator.getTokenType() == JavaTokenType.EQ;
}
