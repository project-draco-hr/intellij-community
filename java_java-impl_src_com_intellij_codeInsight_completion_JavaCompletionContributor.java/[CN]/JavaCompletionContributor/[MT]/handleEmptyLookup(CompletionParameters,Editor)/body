{
  if (!(parameters.getOriginalFile() instanceof PsiJavaFile))   return null;
  final String ad=advertise(parameters);
  final String suffix=ad == null ? "" : "; " + StringUtil.decapitalize(ad);
  if (parameters.getCompletionType() == CompletionType.SMART) {
    PsiExpression expression=PsiTreeUtil.getContextOfType(parameters.getPosition(),PsiExpression.class,true);
    if (expression instanceof PsiLiteralExpression) {
      return LangBundle.message("completion.no.suggestions") + suffix;
    }
    if (expression instanceof PsiInstanceOfExpression) {
      final PsiInstanceOfExpression instanceOfExpression=(PsiInstanceOfExpression)expression;
      if (PsiTreeUtil.isAncestor(instanceOfExpression.getCheckType(),parameters.getPosition(),false)) {
        return LangBundle.message("completion.no.suggestions") + suffix;
      }
    }
    final Set<PsiType> expectedTypes=JavaCompletionUtil.getExpectedTypes(parameters);
    if (expectedTypes != null) {
      PsiType type=expectedTypes.size() == 1 ? expectedTypes.iterator().next() : null;
      if (type != null) {
        final PsiType deepComponentType=type.getDeepComponentType();
        String expectedType=type.getPresentableText();
        if (expectedType.contains(CompletionUtil.DUMMY_IDENTIFIER_TRIMMED)) {
          return null;
        }
        if (deepComponentType instanceof PsiClassType) {
          if (((PsiClassType)deepComponentType).resolve() != null) {
            return CompletionBundle.message("completion.no.suggestions.of.type",expectedType) + suffix;
          }
          return CompletionBundle.message("completion.unknown.type",expectedType) + suffix;
        }
        if (!PsiType.NULL.equals(type)) {
          return CompletionBundle.message("completion.no.suggestions.of.type",expectedType) + suffix;
        }
      }
    }
  }
  return LangBundle.message("completion.no.suggestions") + suffix;
}
