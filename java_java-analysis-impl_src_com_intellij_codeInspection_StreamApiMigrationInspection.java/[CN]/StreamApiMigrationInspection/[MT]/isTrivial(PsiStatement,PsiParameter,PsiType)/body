{
  final PsiIfStatement ifStatement=extractIfStatement(body);
  if (ifStatement != null && InheritanceUtil.isInheritor(iteratedValueType,CommonClassNames.JAVA_UTIL_COLLECTION)) {
    return false;
  }
  final PsiCallExpression callExpression=LambdaCanBeMethodReferenceInspection.canBeMethodReferenceProblem(body instanceof PsiBlockStatement ? ((PsiBlockStatement)body).getCodeBlock() : body,new PsiParameter[]{parameter},createDefaultConsumerType(parameter.getProject(),parameter));
  if (callExpression == null) {
    return true;
  }
  final PsiMethod method=callExpression.resolveMethod();
  return method != null && isThrowsCompatible(method);
}
