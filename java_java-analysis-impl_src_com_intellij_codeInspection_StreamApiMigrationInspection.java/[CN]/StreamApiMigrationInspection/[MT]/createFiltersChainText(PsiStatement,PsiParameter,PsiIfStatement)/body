{
  final List<String> filters=new ArrayList<>();
  while (ifStatement != null && PsiTreeUtil.isAncestor(body,ifStatement,false)) {
    final PsiExpression condition=ifStatement.getCondition();
    if (condition != null) {
      filters.add(".filter(" + compoundLambdaOrMethodReference(parameter,condition,"java.util.function.Predicate",new PsiType[]{parameter.getType()}) + ")");
    }
    ifStatement=PsiTreeUtil.getParentOfType(ifStatement,PsiIfStatement.class);
  }
  Collections.reverse(filters);
  return StringUtil.join(filters,"");
}
