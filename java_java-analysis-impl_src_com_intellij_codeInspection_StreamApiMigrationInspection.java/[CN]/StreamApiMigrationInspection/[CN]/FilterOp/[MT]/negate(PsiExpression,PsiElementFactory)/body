{
  if (expression instanceof PsiPrefixExpression && JavaTokenType.EXCL.equals(((PsiPrefixExpression)expression).getOperationTokenType())) {
    return PsiUtil.skipParenthesizedExprDown(((PsiPrefixExpression)expression).getOperand());
  }
  if (expression instanceof PsiBinaryExpression) {
    PsiBinaryExpression binOp=(PsiBinaryExpression)expression;
    if (JavaTokenType.EQEQ.equals(binOp.getOperationTokenType()) || JavaTokenType.NE.equals(binOp.getOperationTokenType())) {
      PsiExpression left=binOp.getLOperand();
      PsiExpression right=binOp.getROperand();
      if (right != null && !isFloating(left) && !isFloating(right)) {
        return factory.createExpressionFromText(left.getText() + (JavaTokenType.EQEQ.equals(binOp.getOperationTokenType()) ? "!=" : "==") + right.getText(),expression);
      }
    }
  }
  String expString;
  if (ParenthesesUtils.getPrecedence(expression) > ParenthesesUtils.PREFIX_PRECEDENCE) {
    expString="!(" + expression.getText() + ')';
  }
 else {
    expString='!' + expression.getText();
  }
  return factory.createExpressionFromText(expString,expression);
}
