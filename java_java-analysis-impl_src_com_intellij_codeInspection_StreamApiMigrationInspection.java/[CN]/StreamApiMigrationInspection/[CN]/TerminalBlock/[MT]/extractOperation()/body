{
  if (getSingleStatement() instanceof PsiIfStatement) {
    PsiIfStatement ifStatement=(PsiIfStatement)getSingleStatement();
    if (ifStatement.getElseBranch() != null || ifStatement.getCondition() == null)     return null;
    replaceWith(ifStatement.getThenBranch());
    return new FilterOp(ifStatement.getCondition(),myVariable,false);
  }
  if (getSingleStatement() instanceof PsiForeachStatement) {
    PsiForeachStatement foreachStatement=(PsiForeachStatement)getSingleStatement();
    final PsiExpression iteratedValue=foreachStatement.getIteratedValue();
    final PsiStatement body=foreachStatement.getBody();
    if (iteratedValue != null && body != null) {
      final PsiType iteratedValueType=iteratedValue.getType();
      Operation op=null;
      if (iteratedValueType instanceof PsiArrayType) {
        if (((PsiArrayType)iteratedValueType).getComponentType() instanceof PsiPrimitiveType)         return null;
        op=new ArrayFlatMapOp(iteratedValue,myVariable);
      }
 else {
        final PsiClass iteratorClass=PsiUtil.resolveClassInClassTypeOnly(iteratedValueType);
        final PsiClass collectionClass=JavaPsiFacade.getInstance(body.getProject()).findClass(CommonClassNames.JAVA_UTIL_COLLECTION,foreachStatement.getResolveScope());
        if (collectionClass != null && InheritanceUtil.isInheritorOrSelf(iteratorClass,collectionClass,true)) {
          op=new FlatMapOp(iteratedValue,myVariable);
        }
      }
      if (op != null && ReferencesSearch.search(myVariable,new LocalSearchScope(body)).findFirst() == null) {
        myVariable=foreachStatement.getIterationParameter();
        replaceWith(body);
        return op;
      }
    }
  }
  if (myStatements.length > 1) {
    PsiStatement first=myStatements[0];
    if (first instanceof PsiDeclarationStatement) {
      PsiDeclarationStatement decl=(PsiDeclarationStatement)first;
      PsiElement[] elements=decl.getDeclaredElements();
      if (elements.length == 1) {
        PsiElement element=elements[0];
        if (element instanceof PsiLocalVariable) {
          PsiLocalVariable declaredVar=(PsiLocalVariable)element;
          if (!(declaredVar.getType() instanceof PsiPrimitiveType)) {
            PsiExpression initializer=declaredVar.getInitializer();
            PsiStatement[] leftOver=Arrays.copyOfRange(myStatements,1,myStatements.length);
            if (initializer != null && ReferencesSearch.search(myVariable,new LocalSearchScope(leftOver)).findFirst() == null) {
              MapOp op=new MapOp(initializer,myVariable);
              myVariable=declaredVar;
              myStatements=leftOver;
              flatten();
              return op;
            }
          }
        }
      }
    }
    if (first instanceof PsiIfStatement) {
      PsiIfStatement ifStatement=(PsiIfStatement)first;
      if (ifStatement.getElseBranch() != null || ifStatement.getCondition() == null)       return null;
      PsiStatement branch=ifStatement.getThenBranch();
      if (branch instanceof PsiBlockStatement) {
        PsiStatement[] statements=((PsiBlockStatement)branch).getCodeBlock().getStatements();
        if (statements.length == 1)         branch=statements[0];
      }
      if (!(branch instanceof PsiContinueStatement))       return null;
      myStatements=Arrays.copyOfRange(myStatements,1,myStatements.length);
      flatten();
      return new FilterOp(ifStatement.getCondition(),myVariable,true);
    }
  }
  return null;
}
