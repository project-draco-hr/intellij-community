{
  PsiReturnStatement returnStatement=(PsiReturnStatement)tb.getSingleStatement();
  PsiExpression value=returnStatement.getReturnValue();
  if (value == null)   return;
  PsiReturnStatement nextReturnStatement=getNextReturnStatement(foreachStatement);
  if (nextReturnStatement == null)   return;
  PsiExpression orElseExpression=nextReturnStatement.getReturnValue();
  if (!ExpressionUtils.isSimpleExpression(orElseExpression))   return;
  final PsiElementFactory elementFactory=JavaPsiFacade.getElementFactory(project);
  StringBuilder builder=generateStream(iteratedValue,intermediateOps).append(".findFirst()");
  if (!(value instanceof PsiReferenceExpression) || ((PsiReferenceExpression)value).resolve() != tb.getVariable()) {
    builder.append(".map(").append(tb.getVariable().getName()).append(" -> ").append(value.getText()).append(")");
  }
  builder.append(".orElse(").append(orElseExpression.getText()).append(")");
  boolean siblings=nextReturnStatement.getParent() == foreachStatement.getParent();
  PsiElement result=foreachStatement.replace(elementFactory.createStatementFromText("return " + builder + ";",foreachStatement));
  if (siblings) {
    nextReturnStatement.delete();
  }
  simplifyAndFormat(project,result);
}
