{
  if (string1 == string2) {
    return 0;
  }
  if (string1 == null) {
    return -1;
  }
  if (string2 == null) {
    return 1;
  }
  final int string1Length=string1.length();
  final int string2Length=string2.length();
  int i=0, j=0;
  for (; i < string1Length && j < string2Length; i++, j++) {
    char ch1=string1.charAt(i);
    char ch2=string2.charAt(j);
    if ((StringUtil.isDecimalDigit(ch1) || ch1 == ' ') && (StringUtil.isDecimalDigit(ch2) || ch2 == ' ')) {
      int startNum1=i;
      while (ch1 == ' ' || ch1 == '0') {
        startNum1++;
        if (startNum1 >= string1Length) {
          break;
        }
        ch1=string1.charAt(startNum1);
      }
      int startNum2=j;
      while (ch2 == ' ' || ch2 == '0') {
        startNum2++;
        if (startNum2 >= string2Length) {
          break;
        }
        ch2=string2.charAt(startNum2);
      }
      i=startNum1;
      j=startNum2;
      while (i < string1Length && StringUtil.isDecimalDigit(string1.charAt(i))) {
        i++;
      }
      while (j < string2Length && StringUtil.isDecimalDigit(string2.charAt(j))) {
        j++;
      }
      int lengthDiff=(i - startNum1) - (j - startNum2);
      if (lengthDiff != 0) {
        return lengthDiff;
      }
      for (; startNum1 < i; startNum1++, startNum2++) {
        int diff=string1.charAt(startNum1) - string2.charAt(startNum2);
        if (diff != 0) {
          return diff;
        }
      }
      i--;
      j--;
    }
 else     if (ch1 != ch2) {
      if (ch1 == '_') {
        return 1;
      }
 else       if (ch2 == '_') {
        return -1;
      }
 else {
        return ch1 - ch2;
      }
    }
  }
  if (i < string1Length) {
    return 1;
  }
 else   if (j < string2Length) {
    return -1;
  }
  return string1Length - string2Length;
}
