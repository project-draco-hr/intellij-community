{
  return context.getMemberFilter().then(new ValueNodeAsyncFunction<MemberFilter,Void>(obsolescent){
    @NotNull @Override public Promise<Void> fun(    final MemberFilter memberFilter){
      return variables.then(new ObsolescentFunction<List<Variable>,Void>(){
        @Override public boolean isObsolete(){
          return obsolescent.isObsolete();
        }
        @Override public Void fun(        List<Variable> variables){
          consumer.consume(memberFilter,variables);
          return null;
        }
      }
);
    }
  }
);
}
