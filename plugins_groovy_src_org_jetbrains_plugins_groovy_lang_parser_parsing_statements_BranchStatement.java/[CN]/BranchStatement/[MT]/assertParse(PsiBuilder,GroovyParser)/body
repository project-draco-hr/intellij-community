{
  PsiBuilder.Marker marker=builder.mark();
  ParserUtils.getToken(builder,GroovyTokenTypes.kASSERT);
  if (!ConditionalExpression.parse(builder,parser)) {
    builder.error(GroovyBundle.message("expression.expected"));
  }
  if (ParserUtils.lookAhead(builder,GroovyTokenTypes.mCOLON) || GroovyTokenTypes.mCOMMA.equals(builder.getTokenType())) {
    builder.advanceLexer();
    ParserUtils.getToken(builder,GroovyTokenTypes.mNLS);
    if (!AssignmentExpression.parse(builder,parser)) {
      builder.error(GroovyBundle.message("expression.expected"));
    }
  }
  marker.done(ASSERT_STATEMENT);
}
