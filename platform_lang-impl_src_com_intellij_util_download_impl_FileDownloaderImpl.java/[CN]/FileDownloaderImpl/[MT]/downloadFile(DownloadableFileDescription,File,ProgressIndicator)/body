{
  final String presentableUrl=fileDescription.getPresentableDownloadUrl();
  indicator.setText2(IdeBundle.message("progress.connecting.to.download.file.text",presentableUrl));
  indicator.setIndeterminate(true);
  HttpURLConnection connection=(HttpURLConnection)new URL(fileDescription.getDownloadUrl()).openConnection();
  connection.setConnectTimeout(CONNECTION_TIMEOUT);
  connection.setReadTimeout(READ_TIMEOUT);
  InputStream input=null;
  BufferedOutputStream output=null;
  boolean deleteFile=true;
  File tempFile=null;
  try {
    final int responseCode=connection.getResponseCode();
    if (responseCode != HttpURLConnection.HTTP_OK) {
      throw new IOException(IdeBundle.message("error.connection.failed.with.http.code.N",responseCode));
    }
    final int size=connection.getContentLength();
    if (existingFile.exists() && size == existingFile.length()) {
      return existingFile;
    }
    tempFile=FileUtil.createTempFile("downloaded","file");
    input=UrlConnectionUtil.getConnectionInputStreamWithException(connection,indicator);
    output=new BufferedOutputStream(new FileOutputStream(tempFile));
    indicator.setText2(IdeBundle.message("progress.download.file.text",fileDescription.getPresentableFileName(),presentableUrl));
    indicator.setIndeterminate(size == -1);
    NetUtils.copyStreamContent(indicator,input,output,size);
    deleteFile=false;
    return tempFile;
  }
  finally {
    if (input != null) {
      input.close();
    }
    if (output != null) {
      output.close();
    }
    if (deleteFile && tempFile != null) {
      FileUtil.delete(tempFile);
    }
    connection.disconnect();
  }
}
