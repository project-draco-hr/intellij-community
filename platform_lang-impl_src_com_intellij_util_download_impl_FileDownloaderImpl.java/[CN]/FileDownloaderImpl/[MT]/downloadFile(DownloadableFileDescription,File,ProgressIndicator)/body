{
  final String presentableUrl=description.getPresentableDownloadUrl();
  indicator.setText2(IdeBundle.message("progress.connecting.to.download.file.text",presentableUrl));
  indicator.setIndeterminate(true);
  return HttpRequests.request(description.getDownloadUrl()).connect(new HttpRequests.RequestProcessor<File>(){
    @Override public File process(    @NotNull HttpRequests.Request request) throws IOException {
      int size=request.getConnection().getContentLength();
      if (existingFile.exists() && size == existingFile.length()) {
        return existingFile;
      }
      indicator.setText2(IdeBundle.message("progress.download.file.text",description.getPresentableFileName(),presentableUrl));
      return request.saveToFile(FileUtil.createTempFile("download.",".tmp"),indicator);
    }
  }
);
}
