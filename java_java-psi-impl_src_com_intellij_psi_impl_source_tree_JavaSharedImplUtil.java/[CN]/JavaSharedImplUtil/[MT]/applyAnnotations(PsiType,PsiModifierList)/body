{
  if (modifierList != null) {
    PsiAnnotation[] annotations=modifierList.getAnnotations();
    if (annotations.length > 0) {
      TypeAnnotationProvider provider=new FilteringTypeAnnotationProvider(annotations);
      if (type instanceof PsiArrayType) {
        Stack<PsiArrayType> types=new Stack<PsiArrayType>();
        do {
          types.push((PsiArrayType)type);
          type=((PsiArrayType)type).getComponentType();
        }
 while (type instanceof PsiArrayType);
        type=type.annotate(provider);
        while (!types.isEmpty()) {
          PsiArrayType t=types.pop();
          type=t instanceof PsiEllipsisType ? new PsiEllipsisType(type,t.getAnnotations()) : new PsiArrayType(type,t.getAnnotations());
        }
        return type;
      }
 else       if (type instanceof PsiDisjunctionType) {
        List<PsiType> components=ContainerUtil.newArrayList(((PsiDisjunctionType)type).getDisjunctions());
        components.set(0,components.get(0).annotate(provider));
        return ((PsiDisjunctionType)type).newDisjunctionType(components);
      }
 else {
        return type.annotate(provider);
      }
    }
  }
  return type;
}
