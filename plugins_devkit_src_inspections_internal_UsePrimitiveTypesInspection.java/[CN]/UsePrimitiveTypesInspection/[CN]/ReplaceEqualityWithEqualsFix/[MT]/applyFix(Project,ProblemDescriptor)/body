{
  final PsiElement psiElement=descriptor.getPsiElement();
  if (psiElement instanceof PsiJavaToken) {
    final IElementType tokenType=((PsiJavaToken)psiElement).getTokenType();
    final String prefix;
    if (tokenType.equals(JavaTokenType.EQEQ)) {
      prefix="";
    }
 else     if (tokenType.equals(JavaTokenType.NE)) {
      prefix="!";
    }
 else {
      return;
    }
    final PsiElement parent=psiElement.getParent();
    if (parent instanceof PsiBinaryExpression) {
      final PsiExpression rOperand=((PsiBinaryExpression)parent).getROperand();
      final PsiExpression lOperand=((PsiBinaryExpression)parent).getLOperand();
      if (rOperand != null) {
        final boolean flip=isPrimitiveTypeRef(rOperand);
        if (flip || isPrimitiveTypeRef(lOperand)) {
          final String rText=PsiUtil.skipParenthesizedExprUp(rOperand).getText();
          final String lText=PsiUtil.skipParenthesizedExprUp(lOperand).getText();
          final String lhText=flip ? rText : lText;
          final String rhText=flip ? lText : rText;
          @NonNls final String expString=prefix + lhText + ".equals("+ rhText+ ')';
          PsiReplacementUtil.replaceExpression((PsiBinaryExpression)parent,expString);
        }
      }
    }
  }
}
