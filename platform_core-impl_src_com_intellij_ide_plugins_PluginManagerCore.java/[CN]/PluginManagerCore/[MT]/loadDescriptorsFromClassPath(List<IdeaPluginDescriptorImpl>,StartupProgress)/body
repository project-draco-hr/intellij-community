{
  Collection<URL> urls=getClassLoaderUrls();
  String platformPrefix=System.getProperty(PlatformUtilsCore.PLATFORM_PREFIX_KEY);
  int i=0;
  for (  URL url : urls) {
    i++;
    if ("file".equals(url.getProtocol())) {
      File file=new File(decodeUrl(url.getFile()));
      IdeaPluginDescriptorImpl platformPluginDescriptor=null;
      if (platformPrefix != null) {
        platformPluginDescriptor=loadDescriptor(file,platformPrefix + "Plugin.xml");
        if (platformPluginDescriptor != null && !result.contains(platformPluginDescriptor)) {
          platformPluginDescriptor.setUseCoreClassLoader(true);
          result.add(platformPluginDescriptor);
        }
      }
      IdeaPluginDescriptorImpl pluginDescriptor=loadDescriptor(file,PLUGIN_XML);
      if (platformPrefix != null && pluginDescriptor != null && pluginDescriptor.getName().equals(SPECIAL_IDEA_PLUGIN)) {
        continue;
      }
      if (pluginDescriptor != null && !result.contains(pluginDescriptor)) {
        if (platformPluginDescriptor != null) {
          pluginDescriptor.setUseCoreClassLoader(true);
        }
        result.add(pluginDescriptor);
        if (progress != null) {
          progress.showProgress("Plugin loaded: " + pluginDescriptor.getName(),PLUGINS_PROGRESS_MAX_VALUE * ((float)i / urls.size()));
        }
      }
    }
  }
}
