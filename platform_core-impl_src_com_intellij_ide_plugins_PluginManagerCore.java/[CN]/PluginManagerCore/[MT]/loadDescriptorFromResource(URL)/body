{
  try {
    if (URLUtil.FILE_PROTOCOL.equals(resource.getProtocol())) {
      File pluginDir=new File(resource.toURI()).getParentFile().getParentFile();
      IdeaPluginDescriptorImpl descriptor=new IdeaPluginDescriptorImpl(pluginDir);
      descriptor.readExternal(resource);
      return descriptor;
    }
 else     if (URLUtil.JAR_PROTOCOL.equals(resource.getProtocol())) {
      String path=resource.getFile();
      File pluginJar=new File(new URL(path.substring(0,path.indexOf(URLUtil.JAR_SEPARATOR))).toURI());
      Document document=JDOMUtil.loadDocument(resource.openStream());
      IdeaPluginDescriptorImpl descriptor=new IdeaPluginDescriptorImpl(pluginJar);
      descriptor.readExternal(document,resource);
      return descriptor;
    }
  }
 catch (  XmlSerializationException e) {
    getLogger().info("Cannot load " + resource,e);
    prepareLoadingPluginsErrorMessage(Collections.singletonList("'" + resource + "' contains invalid plugin descriptor."));
  }
catch (  Throwable e) {
    getLogger().info("Cannot load " + resource,e);
  }
  return null;
}
