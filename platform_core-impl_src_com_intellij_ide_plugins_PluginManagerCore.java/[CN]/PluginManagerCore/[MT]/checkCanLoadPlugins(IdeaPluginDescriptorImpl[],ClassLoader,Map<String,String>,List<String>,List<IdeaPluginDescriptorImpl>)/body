{
  for (  IdeaPluginDescriptorImpl descriptor : pluginDescriptors) {
    String toNotLoadReason=detectReasonToNotLoad(descriptor,pluginDescriptors);
    if (toNotLoadReason == null) {
      if (isBrokenPlugin(descriptor)) {
        brokenPluginsList.add(descriptor.getName());
        toNotLoadReason="This plugin version was marked as incompatible";
      }
    }
    if (toNotLoadReason == null) {
      final List<String> modules=descriptor.getModules();
      if (modules != null) {
        for (        String module : modules) {
          if (!ourModulesToContainingPlugins.containsKey(module)) {
            ourModulesToContainingPlugins.put(module,descriptor);
          }
        }
      }
      result.add(descriptor);
    }
 else {
      descriptor.setEnabled(false);
      getLogger().info(String.format("Plugin '%s' can't be loaded because: %s",descriptor.getName(),toNotLoadReason));
      disabledPluginNames.put(descriptor.getPluginId().getIdString(),descriptor.getName());
      initClassLoader(parentLoader,descriptor);
    }
  }
}
