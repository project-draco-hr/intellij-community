{
  checkDisposed();
  Element element=new Element(ELEMENT);
  if (myName != null) {
    element.setAttribute(LIBRARY_NAME_ATTR,myName);
  }
  if (myKind != null) {
    element.setAttribute(LIBRARY_TYPE_ATTR,myKind.getKindId());
    final Object state=myProperties != null ? myProperties.getState() : null;
    if (state != null) {
      final Element propertiesElement=XmlSerializer.serializeIfNotDefault(state,SERIALIZATION_FILTERS);
      if (!JDOMUtil.isEmpty(propertiesElement)) {
        element.addContent(propertiesElement.setName(PROPERTIES_ELEMENT));
      }
    }
  }
  ArrayList<OrderRootType> storableRootTypes=new ArrayList<>();
  storableRootTypes.addAll(Arrays.asList(OrderRootType.getAllTypes()));
  if (myKind != null) {
    storableRootTypes.addAll(Arrays.asList(myKind.getAdditionalRootTypes()));
  }
  for (  OrderRootType rootType : sortRootTypes(storableRootTypes)) {
    final VirtualFilePointerContainer roots=myRoots.get(rootType);
    if (roots.size() == 0 && rootType.skipWriteIfEmpty()) {
      continue;
    }
    final Element rootTypeElement=new Element(rootType.name());
    roots.writeExternal(rootTypeElement,ROOT_PATH_ELEMENT);
    element.addContent(rootTypeElement);
  }
  if (myExcludedRoots != null && myExcludedRoots.size() > 0) {
    Element excluded=new Element(EXCLUDED_ROOTS_TAG);
    myExcludedRoots.writeExternal(excluded,ROOT_PATH_ELEMENT);
    element.addContent(excluded);
  }
  myJarDirectories.writeExternal(element);
  rootElement.addContent(element);
}
