{
  EditorSettingsExternalizable editorSettings=EditorSettingsExternalizable.getInstance();
  editorSettings.setBlinkCaret(myCbBlinkCaret.isSelected());
  try {
    editorSettings.setBlinkPeriod(Integer.parseInt(myBlinkIntervalField.getText()));
  }
 catch (  NumberFormatException ignore) {
  }
  editorSettings.setBlockCursor(myCbBlockCursor.isSelected());
  editorSettings.setRightMarginShown(myCbRightMargin.isSelected());
  editorSettings.setLineNumbersShown(myCbShowLineNumbers.isSelected());
  editorSettings.setWhitespacesShown(myCbShowWhitespaces.isSelected());
  editorSettings.setLeadingWhitespacesShown(myLeadingWhitespacesCheckBox.isSelected());
  editorSettings.setInnerWhitespacesShown(myInnerWhitespacesCheckBox.isSelected());
  editorSettings.setTrailingWhitespacesShown(myTrailingWhitespacesCheckBox.isSelected());
  editorSettings.setIndentGuidesShown(myShowVerticalIndentGuidesCheckBox.isSelected());
  EditorOptionsPanel.reinitAllEditors();
  DaemonCodeAnalyzerSettings.getInstance().SHOW_METHOD_SEPARATORS=myCbShowMethodSeparators.isSelected();
  UISettings uiSettings=UISettings.getInstance();
  boolean uiSettingsModified=false;
  boolean lafSettingsModified=false;
  if (uiSettings.SHOW_EDITOR_TOOLTIP != myShowCodeLensInEditorCheckBox.isSelected()) {
    uiSettings.SHOW_EDITOR_TOOLTIP=myShowCodeLensInEditorCheckBox.isSelected();
    uiSettingsModified=true;
    lafSettingsModified=true;
  }
  if (editorSettings.isBreadcrumbsShown() != myShowBreadcrumbsCheckBox.isSelected()) {
    editorSettings.setBreadcrumbsShown(myShowBreadcrumbsCheckBox.isSelected());
    uiSettingsModified=true;
  }
  if (lafSettingsModified) {
    LafManager.getInstance().repaintUI();
  }
  if (uiSettingsModified) {
    uiSettings.fireUISettingsChanged();
  }
  EditorOptionsPanel.restartDaemons();
  applyNameHintsSettings();
  super.apply();
}
