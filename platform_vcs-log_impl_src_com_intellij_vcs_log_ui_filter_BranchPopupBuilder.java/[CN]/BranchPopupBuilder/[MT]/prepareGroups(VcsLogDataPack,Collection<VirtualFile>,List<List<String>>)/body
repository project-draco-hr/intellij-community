{
  Groups filteredGroups=new Groups();
  Collection<VcsRef> allRefs=dataPack.getRefs().getBranches();
  for (  Map.Entry<VirtualFile,Collection<VcsRef>> entry : VcsLogUtil.groupRefsByRoot(allRefs).entrySet()) {
    VirtualFile root=entry.getKey();
    if (visibleRoots != null && !visibleRoots.contains(root))     continue;
    Collection<VcsRef> refs=entry.getValue();
    VcsLogProvider provider=dataPack.getLogProviders().get(root);
    VcsLogRefManager refManager=provider.getReferenceManager();
    List<RefGroup> refGroups=refManager.group(refs);
    putActionsForReferences(refGroups,filteredGroups);
  }
  if (recentItems != null) {
    for (    List<String> recentItem : recentItems) {
      if (recentItem.size() == 1) {
        final String item=ContainerUtil.getFirstItem(recentItem);
        if (filteredGroups.singletonGroups.contains(item) || ContainerUtil.find(filteredGroups.expandedGroups.values(),new Condition<TreeSet<String>>(){
          @Override public boolean value(          TreeSet<String> strings){
            return strings.contains(item);
          }
        }
) != null) {
          continue;
        }
      }
      filteredGroups.recentGroups.add(recentItem);
    }
  }
  return filteredGroups;
}
