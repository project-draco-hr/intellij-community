{
  if (first.type == Exprent.EXPRENT_INVOCATION) {
    InvocationExprent invexpr=(InvocationExprent)first;
    if (!invexpr.isStatic() && invexpr.getInstance().type == Exprent.EXPRENT_VAR && invexpr.getName().equals("getClass") && invexpr.getStringDescriptor().equals("()Ljava/lang/Class;")) {
      List<Exprent> lstExprents=second.getAllExprents();
      lstExprents.add(second);
      for (      Exprent expr : lstExprents) {
        if (expr.type == Exprent.EXPRENT_NEW) {
          NewExprent nexpr=(NewExprent)expr;
          if (nexpr.getConstructor() != null && !nexpr.getConstructor().getLstParameters().isEmpty() && nexpr.getConstructor().getLstParameters().get(0).equals(invexpr.getInstance())) {
            String classname=nexpr.getNewType().value;
            ClassNode node=DecompilerContext.getClassProcessor().getMapRootClasses().get(classname);
            if (node != null && node.type != ClassNode.CLASS_ROOT) {
              return true;
            }
          }
        }
      }
    }
  }
  return false;
}
