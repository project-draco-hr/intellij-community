{
  Exprent current=list.get(index);
  if (current.type == Exprent.EXPRENT_ASSIGNMENT) {
    AssignmentExprent as=(AssignmentExprent)current;
    if (as.getLeft().type == Exprent.EXPRENT_VAR && as.getRight().type == Exprent.EXPRENT_NEW) {
      NewExprent newexpr=(NewExprent)as.getRight();
      VarType newtype=newexpr.getNewType();
      VarVersionPair leftPaar=new VarVersionPair((VarExprent)as.getLeft());
      if (newtype.type == CodeConstants.TYPE_OBJECT && newtype.arrayDim == 0 && newexpr.getConstructor() == null) {
        for (int i=index + 1; i < list.size(); i++) {
          Exprent remote=list.get(i);
          if (remote.type == Exprent.EXPRENT_INVOCATION) {
            InvocationExprent in=(InvocationExprent)remote;
            if (in.getFunctype() == InvocationExprent.TYP_INIT && in.getInstance().type == Exprent.EXPRENT_VAR && as.getLeft().equals(in.getInstance())) {
              newexpr.setConstructor(in);
              in.setInstance(null);
              list.set(i,as.copy());
              return true;
            }
          }
          Set<VarVersionPair> setVars=remote.getAllVariables();
          if (setVars.contains(leftPaar)) {
            return false;
          }
        }
      }
    }
  }
  return false;
}
