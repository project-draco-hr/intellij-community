{
  List<Exprent> lst=exprent.getAllExprents();
  for (  Exprent expr : lst) {
    Exprent ret=isLambda(expr,cl);
    if (ret != null) {
      exprent.replaceExprent(expr,ret);
    }
  }
  if (exprent.type == Exprent.EXPRENT_INVOCATION) {
    InvocationExprent in=(InvocationExprent)exprent;
    if (in.getInvocationTyp() == InvocationExprent.INVOKE_DYNAMIC) {
      String lambda_class_name=cl.qualifiedName + in.getInvokeDynamicClassSuffix();
      ClassNode lambda_class=DecompilerContext.getClassProcessor().getMapRootClasses().get(lambda_class_name);
      if (lambda_class != null) {
        NewExprent newexp=new NewExprent(new VarType(lambda_class_name,true),null,0,in.bytecode);
        newexp.setConstructor(in);
        return newexp;
      }
    }
  }
  return null;
}
