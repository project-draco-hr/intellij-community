{
  if (chunk.containsMeta()) {
    myPagingModel=new AsyncArrayTableModel(Math.min(chunk.getRows(),ROWS_IN_DEFAULT_VIEW),Math.min(chunk.getColumns(),COLUMNS_IN_DEFAULT_VIEW),this);
    myPagingModel.addToCache(chunk);
    myDtypeKind=chunk.getType();
    UIUtil.invokeLaterIfNeeded(new Runnable(){
      @Override public void run(){
        myTable.setModel(myPagingModel);
        myComponent.getSliceTextField().setText(chunk.getSlicePresentation());
        myComponent.getFormatTextField().setText(chunk.getFormat());
        myDialog.setTitle(getTitlePresentation(chunk.getSlicePresentation()));
        myTableCellRenderer=new ArrayTableCellRenderer(Double.MIN_VALUE,Double.MIN_VALUE,chunk.getType());
        fillColorRange(chunk.getMin(),chunk.getMax());
        if (!isNumeric()) {
          disableColor();
        }
 else {
          myComponent.getColoredCheckbox().setEnabled(true);
        }
        if (!inPlace) {
          myComponent.getScrollPane().getViewport().setViewPosition(new Point(0,0));
          JBTableWithRowHeaders.RowHeaderTable rowTable=((JBTableWithRowHeaders)myTable).getRowHeaderTable();
          rowTable.setRowShift(0);
        }
        ((AsyncArrayTableModel)myTable.getModel()).fireTableDataChanged();
        ((AsyncArrayTableModel)myTable.getModel()).fireTableCellUpdated(0,0);
        if (myTable.getColumnCount() > 0) {
          myTable.setDefaultRenderer(myTable.getColumnClass(0),myTableCellRenderer);
        }
      }
    }
);
  }
 else {
    showError("Bad metadata for array " + chunk.getValue());
  }
}
