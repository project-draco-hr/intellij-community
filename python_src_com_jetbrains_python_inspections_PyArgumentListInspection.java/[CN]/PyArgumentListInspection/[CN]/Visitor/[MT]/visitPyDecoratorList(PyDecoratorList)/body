{
  PyDecorator[] decos=node.getDecorators();
  for (  PyDecorator deco : decos) {
    if (!deco.hasArgumentList()) {
      PyCallExpression.PyMarkedCallee mkfunc=deco.resolveCallee();
      if (mkfunc != null) {
        Callable callable=mkfunc.getCallable();
        int first_param_offset=mkfunc.getImplicitOffset();
        PyParameter[] params=callable.getParameterList().getParameters();
        PyNamedParameter alleged_first_param=params.length < first_param_offset ? null : params[first_param_offset - 1].getAsNamed();
        if (alleged_first_param == null || alleged_first_param.isKeywordContainer()) {
          registerProblem(deco,PyBundle.message("INSP.func.$0.lacks.first.arg",callable.getName()));
        }
 else {
          for (int i=first_param_offset; i < params.length; i+=1) {
            PyNamedParameter par=params[i].getAsNamed();
            if (par == null || (!par.isKeywordContainer() && !par.isPositionalContainer() && !par.hasDefaultValue())) {
              String par_name;
              if (par != null)               par_name=par.getName();
 else               par_name="(...)";
              registerProblem(deco,PyBundle.message("INSP.parameter.$0.unfilled",par_name));
            }
          }
        }
      }
    }
  }
}
