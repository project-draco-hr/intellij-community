{
  PyDecorator[] decos=node.getDecorators();
  for (  PyDecorator deco : decos) {
    if (!deco.hasArgumentList()) {
      PyCallExpression.PyMarkedFunction mkfunc=deco.resolveCallee();
      if (mkfunc != null) {
        PyFunction decofunc=mkfunc.getFunction();
        int first_param_offset=mkfunc.getImplicitOffset();
        PyParameter[] params=decofunc.getParameterList().getParameters();
        if (params.length < first_param_offset || params[first_param_offset - 1].isKeywordContainer()) {
          registerProblem(deco,PyBundle.message("INSP.func.$0.lacks.first.arg",decofunc.getName()));
        }
 else {
          for (int i=first_param_offset; i < params.length; i+=1) {
            PyParameter par=params[i];
            if (!par.isKeywordContainer() && !par.isPositionalContainer() && (par.getDefaultValue() == null)) {
              registerProblem(deco,PyBundle.message("INSP.parameter.$0.unfilled",par.getName()));
            }
          }
        }
      }
    }
  }
}
