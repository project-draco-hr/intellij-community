{
  final Set<String> duplicateKeywords=getDuplicateKeywordArguments(node);
  for (  PyExpression argument : mapping.getUnmappedArguments()) {
    final List<LocalQuickFix> quickFixes=Lists.<LocalQuickFix>newArrayList(new PyRemoveArgumentQuickFix());
    if (argument instanceof PyKeywordArgument) {
      if (duplicateKeywords.contains(((PyKeywordArgument)argument).getKeyword())) {
        continue;
      }
      quickFixes.add(new PyRenameArgumentQuickFix());
    }
    holder.registerProblem(argument,PyBundle.message("INSP.unexpected.arg"),quickFixes.toArray(new LocalQuickFix[quickFixes.size() - 1]));
  }
  ASTNode our_node=node.getNode();
  if (our_node != null) {
    ASTNode close_paren=our_node.findChildByType(PyTokenTypes.RPAR);
    if (close_paren != null) {
      for (      PyParameter parameter : mapping.getUnmappedParameters()) {
        final String name=parameter.getName();
        if (name != null) {
          holder.registerProblem(close_paren.getPsi(),PyBundle.message("INSP.parameter.$0.unfilled",name));
        }
      }
    }
  }
}
