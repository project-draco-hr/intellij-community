{
  final PyElementGenerator elementGenerator=PyElementGenerator.getInstance(expression.getProject());
  final String expressionText=expression.getText();
  final StringBuilder stringBuilder=new StringBuilder(expressionText + " (");
  final PsiElement whiteSpace=expression.getContainingFile().findElementAt(expression.getTextOffset() + expression.getTextLength());
  PsiElement next=null;
  if (whiteSpace instanceof PsiWhiteSpace) {
    final String whiteSpaceText=whiteSpace.getText();
    if (!whiteSpaceText.contains("\n")) {
      next=whiteSpace.getNextSibling();
      while (next instanceof PsiWhiteSpace && whiteSpaceText.contains("\\")) {
        next=next.getNextSibling();
      }
    }
  }
 else   next=whiteSpace;
  RemoveUnnecessaryBackslashQuickFix.removeBackSlash(next);
  if (whiteSpace != null)   whiteSpace.delete();
  String commentText=null;
  if (next != null) {
    final PsiElement lastChild=next.getLastChild();
    if (lastChild instanceof PsiComment) {
      commentText=lastChild.getText();
    }
    final String text=next instanceof PyExpressionStatement ? ((PyExpressionStatement)next).getExpression().getText() : next.getText();
    stringBuilder.append(text);
    if (text.endsWith(",") && PyNames.PRINT.equals(expressionText))     stringBuilder.append(" end=' '");
    next.delete();
  }
  stringBuilder.append(")");
  if (commentText != null) {
    stringBuilder.append(commentText);
  }
  expression.replace(elementGenerator.createFromText(LanguageLevel.forElement(expression),PyExpression.class,stringBuilder.toString()));
}
