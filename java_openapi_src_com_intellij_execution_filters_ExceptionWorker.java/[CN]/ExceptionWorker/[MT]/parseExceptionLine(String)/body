{
  int startIdx;
  if (line.startsWith(AT_PREFIX)) {
    startIdx=0;
  }
 else {
    startIdx=line.indexOf(STANDALONE_AT);
    if (startIdx < 0) {
      startIdx=line.indexOf(AT_PREFIX);
    }
    if (startIdx < 0) {
      startIdx=-1;
    }
  }
  int rParenIdx=line.lastIndexOf(')');
  while (rParenIdx > 0 && !Character.isDigit(line.charAt(rParenIdx - 1))) {
    rParenIdx=line.lastIndexOf(')',rParenIdx - 1);
  }
  if (rParenIdx < 0)   return null;
  final int lParenIdx=line.lastIndexOf('(',rParenIdx);
  if (lParenIdx < 0)   return null;
  final int dotIdx=line.lastIndexOf('.',lParenIdx);
  if (dotIdx < 0 || dotIdx < startIdx)   return null;
  return Trinity.create(new TextRange(startIdx + 1 + (startIdx >= 0 ? AT.length() : 0),handleSpaces(line,dotIdx,-1,true)),new TextRange(handleSpaces(line,dotIdx + 1,1,true),handleSpaces(line,lParenIdx + 1,-1,true)),new TextRange(lParenIdx,rParenIdx));
}
