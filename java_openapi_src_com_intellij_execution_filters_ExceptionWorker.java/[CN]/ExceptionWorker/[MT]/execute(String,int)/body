{
  myResult=null;
  myInfo=parseExceptionLine(line);
  if (myInfo == null) {
    return;
  }
  myMethod=myInfo.getSecond().substring(line);
  final int lparenthIndex=myInfo.third.getStartOffset();
  final int rparenthIndex=myInfo.third.getEndOffset();
  final String fileAndLine=line.substring(lparenthIndex + 1,rparenthIndex).trim();
  final int colonIndex=fileAndLine.lastIndexOf(':');
  if (colonIndex < 0)   return;
  final String lineString=fileAndLine.substring(colonIndex + 1);
  try {
    final int lineNumber=Integer.parseInt(lineString);
    myClasses=findPositionClasses(line);
    myFiles=new PsiFile[myClasses.length];
    for (int i=0; i < myClasses.length; i++) {
      myFiles[i]=(PsiFile)myClasses[i].getContainingFile().getNavigationElement();
    }
    if (myFiles.length == 0) {
      myFiles=PsiShortNamesCache.getInstance(myProject).getFilesByName(fileAndLine.substring(0,colonIndex).trim());
    }
    if (myFiles.length == 0)     return;
    final int textStartOffset=textEndOffset - line.length();
    final int highlightStartOffset=textStartOffset + lparenthIndex + 1;
    final int highlightEndOffset=textStartOffset + rparenthIndex;
    ProjectFileIndex index=ProjectRootManager.getInstance(myProject).getFileIndex();
    List<VirtualFile> virtualFilesInLibraries=new ArrayList<VirtualFile>();
    List<VirtualFile> virtualFilesInContent=new ArrayList<VirtualFile>();
    for (    PsiFile file : myFiles) {
      VirtualFile virtualFile=file.getVirtualFile();
      if (index.isInContent(virtualFile)) {
        virtualFilesInContent.add(virtualFile);
      }
 else {
        virtualFilesInLibraries.add(virtualFile);
      }
    }
    List<VirtualFile> virtualFiles;
    TextAttributes attributes;
    if (virtualFilesInContent.isEmpty()) {
      attributes=LIBRARY_HYPERLINK_ATTRIBUTES;
      virtualFiles=virtualFilesInLibraries;
    }
 else {
      attributes=HYPERLINK_ATTRIBUTES;
      virtualFiles=virtualFilesInContent;
    }
    HyperlinkInfo linkInfo=HyperlinkInfoFactory.getInstance().createMultipleFilesHyperlinkInfo(virtualFiles,lineNumber - 1,myProject);
    myResult=new Filter.Result(highlightStartOffset,highlightEndOffset,linkInfo,attributes);
  }
 catch (  NumberFormatException e) {
  }
}
