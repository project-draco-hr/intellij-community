{
  myResult=null;
  myInfo=parseExceptionLine(line);
  if (myInfo == null) {
    return;
  }
  myMethod=myInfo.getSecond().substring(line);
  final int lparenthIndex=myInfo.third.getStartOffset();
  final int rparenthIndex=myInfo.third.getEndOffset();
  final String fileAndLine=line.substring(lparenthIndex + 1,rparenthIndex).trim();
  final int colonIndex=fileAndLine.lastIndexOf(':');
  if (colonIndex < 0)   return;
  final int lineNumber=getLineNumber(fileAndLine.substring(colonIndex + 1));
  if (lineNumber < 0)   return;
  Pair<PsiClass[],PsiFile[]> pair=myCache.resolveClass(myInfo.first.substring(line).trim());
  myClasses=pair.first;
  myFiles=pair.second;
  if (myFiles.length == 0) {
    myFiles=PsiShortNamesCache.getInstance(myProject).getFilesByName(fileAndLine.substring(0,colonIndex).trim());
  }
  if (myFiles.length == 0)   return;
  final int textStartOffset=textEndOffset - line.length();
  final int highlightStartOffset=textStartOffset + lparenthIndex + 1;
  final int highlightEndOffset=textStartOffset + rparenthIndex;
  ProjectFileIndex index=ProjectRootManager.getInstance(myProject).getFileIndex();
  List<VirtualFile> virtualFilesInLibraries=new ArrayList<>();
  List<VirtualFile> virtualFilesInContent=new ArrayList<>();
  for (  PsiFile file : myFiles) {
    VirtualFile virtualFile=file.getVirtualFile();
    if (index.isInContent(virtualFile)) {
      virtualFilesInContent.add(virtualFile);
    }
 else {
      virtualFilesInLibraries.add(virtualFile);
    }
  }
  List<VirtualFile> virtualFiles;
  TextAttributes attributes=EditorColorsManager.getInstance().getGlobalScheme().getAttributes(CodeInsightColors.HYPERLINK_ATTRIBUTES);
  if (virtualFilesInContent.isEmpty()) {
    Color libTextColor=UIUtil.getInactiveTextColor();
    attributes=attributes.clone();
    attributes.setForegroundColor(libTextColor);
    attributes.setEffectColor(libTextColor);
    virtualFiles=virtualFilesInLibraries;
  }
 else {
    virtualFiles=virtualFilesInContent;
  }
  HyperlinkInfo linkInfo=HyperlinkInfoFactory.getInstance().createMultipleFilesHyperlinkInfo(virtualFiles,lineNumber - 1,myProject);
  myResult=new Filter.Result(highlightStartOffset,highlightEndOffset,linkInfo,attributes);
}
