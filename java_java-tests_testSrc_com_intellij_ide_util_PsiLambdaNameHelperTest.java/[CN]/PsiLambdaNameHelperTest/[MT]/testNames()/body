{
  final PsiClass aClass=myFixture.addClass("class Test {\n" + "    Runnable r = () -> {\n" + "    };\n"+ "    public void method() {\n"+ "        Runnable r = () -> {\n"+ "            Integer s = RedundantRename.this.s;\n"+ "            Runnable rr = () -> {};\n"+ "            new Runnable() {\n"+ "                Runnable r1 = () -> {};\n"+ "                @Override\n"+ "                public void run() {}\n"+ "            };\n"+ "        };\n"+ "    }\n"+ "}");
  final Collection<PsiLambdaExpression> lambdaExpressions=PsiTreeUtil.findChildrenOfType(aClass,PsiLambdaExpression.class);
  final String[] expectedNames={"lambda$new$0","lambda$method$1","lambda$method$2","lambda$0"};
  int idx=0;
  for (  PsiLambdaExpression expression : lambdaExpressions) {
    assertEquals(expectedNames[idx++],PsiLambdaNameHelper.getVMName(expression));
  }
}
