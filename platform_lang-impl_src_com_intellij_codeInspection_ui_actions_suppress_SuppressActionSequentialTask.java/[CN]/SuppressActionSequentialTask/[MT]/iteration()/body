{
  final SuppressableInspectionTreeNode node=myNodesToSuppress[myCount++];
  final ProgressIndicator indicator=myTask.getIndicator();
  if (indicator != null) {
    indicator.setFraction((double)myCount / myNodesToSuppress.length);
  }
  DumbService.allowStartingDumbModeInside(DumbModePermission.MAY_START_MODAL,new Runnable(){
    @Override public void run(){
      final Pair<PsiElement,CommonProblemDescriptor> content=node.getSuppressContent();
      if (content.first != null) {
        final PsiElement element=content.first;
        RefEntity refEntity=node.getElement();
        LOG.assertTrue(refEntity != null);
        if (suppress(element,content.second,mySuppressAction,refEntity,myWrapper)) {
          node.markAsSuppressedFromView();
        }
      }
    }
  }
);
  return false;
}
