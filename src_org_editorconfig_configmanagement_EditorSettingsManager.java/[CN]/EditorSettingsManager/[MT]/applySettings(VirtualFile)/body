{
  String filePath=file.getCanonicalPath();
  SettingsProviderComponent settingsProvider=SettingsProviderComponent.getInstance();
  List<EditorConfig.OutPair> outPairs=settingsProvider.getOutPairs(filePath);
  String trimTrailingWhitespace=Utils.configValueForKey(outPairs,trimTrailingWhitespaceKey);
  String insertFinalNewline=Utils.configValueForKey(outPairs,insertFinalNewlineKey);
  if (trimTrailingWhitespace.equals("true")) {
    file.putUserData(TrailingSpacesStripper.OVERRIDE_STRIP_TRAILING_SPACES_KEY,EditorSettingsExternalizable.STRIP_TRAILING_SPACES_WHOLE);
  }
 else   if (trimTrailingWhitespace.equals("false")) {
    file.putUserData(TrailingSpacesStripper.OVERRIDE_STRIP_TRAILING_SPACES_KEY,EditorSettingsExternalizable.STRIP_TRAILING_SPACES_NONE);
  }
 else {
    if (!trimTrailingWhitespace.isEmpty()) {
      LOG.warn(Utils.invalidConfigMessage(trimTrailingWhitespace,trimTrailingWhitespaceKey,filePath));
    }
    file.putUserData(TrailingSpacesStripper.OVERRIDE_STRIP_TRAILING_SPACES_KEY,null);
  }
  if (insertFinalNewline.equals("true")) {
    file.putUserData(TrailingSpacesStripper.OVERRIDE_ENSURE_NEWLINE_KEY,TrailingSpacesStripper.ENSURE_NEWLINE);
  }
 else   if (insertFinalNewline.equals("false")) {
    file.putUserData(TrailingSpacesStripper.OVERRIDE_ENSURE_NEWLINE_KEY,TrailingSpacesStripper.DONT_ENSURE_NEWLINE);
  }
 else {
    if (!insertFinalNewline.isEmpty()) {
      LOG.warn(Utils.invalidConfigMessage(insertFinalNewline,insertFinalNewlineKey,filePath));
    }
    file.putUserData(TrailingSpacesStripper.OVERRIDE_ENSURE_NEWLINE_KEY,null);
  }
  LOG.debug("Applied editor settings for: " + filePath);
}
