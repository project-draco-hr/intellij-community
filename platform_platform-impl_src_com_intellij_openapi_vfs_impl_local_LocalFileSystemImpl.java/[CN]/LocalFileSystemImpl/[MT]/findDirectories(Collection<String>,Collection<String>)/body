{
  final Set<String> directories=ContainerUtil.newConcurrentSet();
  final BoundedTaskExecutor executor=new BoundedTaskExecutor(PooledThreadExecutor.INSTANCE,Runtime.getRuntime().availableProcessors());
  Futures.invokeAll(JBIterable.from(recursiveRoots).append(flatRoots).transform(new Function<String,Future<?>>(){
    @Override public Future<?> fun(    final String root){
      return executor.submit(new Runnable(){
        @Override public void run(){
          if (!root.contains(JarFileSystem.JAR_SEPARATOR) && new File(root).isDirectory()) {
            directories.add(root);
          }
        }
      }
);
    }
  }
).toList());
  return directories;
}
