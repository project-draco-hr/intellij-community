{
  Marker marker=builder.mark();
  final boolean isTuple=ParserUtils.lookAhead(builder,GroovyTokenTypes.mLPAREN,GroovyTokenTypes.mIDENT,GroovyTokenTypes.mCOMMA);
  if (parseSide(builder,parser,isTuple,comExprAllowed)) {
    if (ParserUtils.getToken(builder,TokenSets.ASSIGNMENTS)) {
      ParserUtils.getToken(builder,GroovyTokenTypes.mNLS);
      if (!parse(builder,parser,comExprAllowed)) {
        builder.error(GroovyBundle.message("expression.expected"));
      }
      marker.done(GroovyElementTypes.ASSIGNMENT_EXPRESSION);
    }
 else {
      if (isTuple) {
        builder.error(GroovyBundle.message("assign.expected"));
      }
      marker.drop();
    }
    return true;
  }
 else {
    marker.drop();
    return false;
  }
}
