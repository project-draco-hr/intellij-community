{
  final Project project=myRef.getProject();
  PsiShortNamesCache cache=PsiShortNamesCache.getInstance(project);
  final PsiJavaCodeReferenceElement element=myRef.getElement();
  String name=element != null ? element.getReferenceName() : null;
  if (name == null)   return Collections.emptyList();
  final MyStaticMembersProcessor<PsiField> processor=new MyStaticMembersProcessor<PsiField>(element){
    @Override protected boolean isApplicable(    PsiField field,    PsiElement place){
      final PsiType expectedType=getExpectedType();
      return expectedType == null || TypeConversionUtil.isAssignable(expectedType,field.getType());
    }
  }
;
  cache.processFieldsWithName(name,processor,element.getResolveScope(),null);
  return processor.getMembersToImport(applicableOnly);
}
