{
  PrefixExpressionContext expression=context.outerExpression();
  if (!expression.canBeStatement)   return;
  PsiElement node=expression.expression;
  PsiMethod method=null;
  do {
    if (node instanceof PsiClass)     return;
    if (node instanceof PsiMethod) {
      method=(PsiMethod)node;
      break;
    }
    node=node.getParent();
  }
 while (node != null);
  if (method == null)   return;
  if (context.executionContext.isForceMode) {
    consumer.add(new ReturnLookupElement(expression));
  }
 else {
    PsiType returnType=method.getReturnType();
    if (returnType == null || returnType.equals(PsiType.VOID))     return;
    PsiType expressionType=expression.expressionType;
    if (expressionType != null && !returnType.isAssignableFrom(expressionType))     return;
    consumer.add(new ReturnLookupElement(expression));
  }
}
