{
  if (!FileModificationService.getInstance().prepareFileForWrite(elementToDelete.getContainingFile()))   return;
  final PsiElement declaration=variable.getParent();
  final List<PsiElement> sideEffects=new ArrayList<PsiElement>();
  boolean hasSideEffects=RemoveUnusedVariableUtil.checkSideEffects(psiInitializer,variable,sideEffects);
  int res=RemoveUnusedVariableUtil.DELETE_ALL;
  if (hasSideEffects) {
    hasSideEffects=PsiUtil.isStatement(psiInitializer);
    res=RemoveUnusedVariableFix.showSideEffectsWarning(sideEffects,variable,FileEditorManager.getInstance(project).getSelectedTextEditor(),hasSideEffects,sideEffects.get(0).getText(),variable.getTypeElement().getText() + " " + variable.getName()+ ";<br>"+ PsiExpressionTrimRenderer.render((PsiExpression)psiInitializer));
  }
  try {
    if (res == RemoveUnusedVariableUtil.DELETE_ALL) {
      elementToDelete.delete();
    }
 else     if (res == RemoveUnusedVariableUtil.MAKE_STATEMENT) {
      final PsiElementFactory factory=JavaPsiFacade.getInstance(project).getElementFactory();
      final PsiStatement statementFromText=factory.createStatementFromText(psiInitializer.getText() + ";",null);
      final PsiElement parent=elementToDelete.getParent();
      if (parent instanceof PsiExpressionStatement) {
        parent.replace(statementFromText);
      }
 else {
        declaration.getParent().addAfter(statementFromText,declaration);
        elementToDelete.delete();
      }
    }
  }
 catch (  IncorrectOperationException e) {
    LOG.error(e);
  }
}
