{
  HgCommandExecutor commandExecutor=new HgCommandExecutor(myProject);
  commandExecutor.setSilent(true);
  HgCommandResult result=commandExecutor.executeInCurrentThread(repo,"identify",Arrays.asList("--num","--id"));
  if (result == null) {
    return Couple.newOne(HgRevisionNumber.NULL_REVISION_NUMBER,null);
  }
  final List<String> lines=result.getOutputLines();
  if (lines != null && !lines.isEmpty()) {
    List<String> parts=StringUtil.split(lines.get(0)," ");
    String changesets=parts.get(0);
    String revisions=parts.get(1);
    if (parts.size() >= 2) {
      if (changesets.indexOf('+') != changesets.lastIndexOf('+')) {
        List<String> chsets=StringUtil.split(changesets,"+");
        List<String> revs=StringUtil.split(revisions,"+");
        return Couple.newOne(HgRevisionNumber.getInstance(revs.get(0) + "+",chsets.get(0) + "+"),HgRevisionNumber.getInstance(revs.get(1) + "+",chsets.get(1) + "+"));
      }
 else {
        return Couple.newOne(HgRevisionNumber.getInstance(revisions,changesets),null);
      }
    }
  }
  return Couple.newOne(HgRevisionNumber.NULL_REVISION_NUMBER,null);
}
