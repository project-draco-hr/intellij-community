{
  myProject=project;
  myTask=task;
  final JBLabel hintButton=new JBLabel();
  hintButton.setIcon(PlatformIcons.UP_DOWN_ARROWS);
  hintButton.setToolTipText("Pressing Up or Down arrows while in editor changes the state");
  final JComboBox comboBox=myKindCombo.getComboBox();
  comboBox.setPreferredSize(new Dimension(300,UIUtil.fixComboBoxHeight(comboBox.getPreferredSize().height)));
  final ListCellRenderer defaultRenderer=comboBox.getRenderer();
  comboBox.setRenderer(new ListCellRenderer(){
    @SuppressWarnings({"unchecked","GtkPreferredJComboBoxRenderer"}) @Override public Component getListCellRendererComponent(    JList list,    Object value,    int index,    boolean isSelected,    boolean cellHasFocus){
      if (value == null) {
        return new ListCellRendererWrapper<CustomStateTrinityAdapter>(){
          @Override public void customize(          JList list,          CustomStateTrinityAdapter value,          int index,          boolean selected,          boolean hasFocus){
            setText("-- no states available --");
          }
        }
.getListCellRendererComponent(list,null,index,isSelected,cellHasFocus);
      }
      return defaultRenderer.getListCellRendererComponent(list,value,index,isSelected,cellHasFocus);
    }
  }
);
  setLayout(new BoxLayout(this,BoxLayout.LINE_AXIS));
  add(myKindCombo);
  add(hintButton);
}
