{
  try {
    if (!isHostTrusted(request)) {
      Responses.send(Responses.orInSafeMode(HttpResponseStatus.FORBIDDEN,HttpResponseStatus.OK),context.channel(),request);
      return true;
    }
    AtomicInteger counter=abuseCounter.get(((InetSocketAddress)context.channel().remoteAddress()).getAddress());
    if (counter.incrementAndGet() > Registry.intValue("ide.rest.api.requests.per.minute",60)) {
      Responses.send(Responses.orInSafeMode(HttpResponseStatus.TOO_MANY_REQUESTS,HttpResponseStatus.OK),context.channel(),request);
      return true;
    }
    String error=execute(urlDecoder,request,context);
    if (error != null) {
      Responses.send(HttpResponseStatus.BAD_REQUEST,context.channel(),request,error);
    }
  }
 catch (  Throwable e) {
    HttpResponseStatus status;
    if (e instanceof MalformedJsonException || (e instanceof IllegalStateException && e.getMessage().startsWith("Expected a "))) {
      LOG.warn(e);
      status=HttpResponseStatus.BAD_REQUEST;
    }
 else {
      LOG.error(e);
      status=HttpResponseStatus.INTERNAL_SERVER_ERROR;
    }
    Responses.send(status,context.channel(),request,ExceptionUtil.getThrowableText(e));
  }
  return true;
}
