{
  final PsiMethodCallExpression methodCallExpression=(PsiMethodCallExpression)expression;
  final PsiExpression qualifierExpression=methodCallExpression.getMethodExpression().getQualifierExpression();
  final PsiElementFactory elementFactory=JavaPsiFacade.getElementFactory(expression.getProject());
  final JavaCodeStyleManager codeStyleManager=JavaCodeStyleManager.getInstance(expression.getProject());
  if (qualifierExpression != null) {
    codeStyleManager.shortenClassReferences(qualifierExpression.replace(elementFactory.createExpressionFromText(myTargetClassQName,expression)));
    return expression;
  }
 else {
    final PsiElement replacedExpression=expression.replace(elementFactory.createExpressionFromText(myTargetClassQName + "." + expression.getText(),expression));
    return (PsiExpression)codeStyleManager.shortenClassReferences(replacedExpression);
  }
}
