{
  for (int i=0; i < parms.length - 1; i++) {
    final PsiType type=args[i];
    if (type == null)     return false;
    final PsiParameter parameter=parms[i];
    final PsiType substitutedParmType=getParameterType(parameter,languageLevel,substitutorForMethod);
    if (isRaw) {
      final PsiType substErasure=TypeConversionUtil.erasure(substitutedParmType);
      if (substErasure != null && !function.isApplicable(substErasure,type,allowUncheckedConversion,i)) {
        return false;
      }
    }
 else     if (!function.isApplicable(substitutedParmType,type,allowUncheckedConversion,i)) {
      return false;
    }
  }
  return true;
}
