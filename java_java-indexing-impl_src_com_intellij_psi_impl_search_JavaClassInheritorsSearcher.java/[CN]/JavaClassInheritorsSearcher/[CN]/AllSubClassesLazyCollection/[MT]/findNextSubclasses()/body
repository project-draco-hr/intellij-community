{
  while (true) {
    ProgressManager.checkCanceled();
    PsiClass candidate;
synchronized (lock) {
      if (candidatesToFindSubclassesIterator == null) {
        candidatesToFindSubclassesIterator=subClasses.iterator();
        candidate=myBaseClass;
      }
 else {
        if (!candidatesToFindSubclassesIterator.hasNext()) {
          break;
        }
        candidate=candidatesToFindSubclassesIterator.next();
      }
      currentlyProcessingClasses.down();
    }
    boolean added;
    try {
      if (candidate instanceof PsiAnonymousClass || isFinal(candidate)) {
        added=false;
      }
 else {
        Collection<PsiClass> foundSubClasses=DirectClassInheritorsSearch.search(candidate,projectScope).findAll();
synchronized (lock) {
          added=subClasses.addAll(foundSubClasses);
        }
      }
    }
  finally {
      currentlyProcessingClasses.up();
    }
    if (added) {
      return;
    }
  }
  currentlyProcessingClasses.waitFor();
}
