{
  myOutConsumer=outConsumer;
  myOutputFileSink=sink;
  myCanceledStatus=canceledStatus;
  StandardJavaFileManager stdManager=null;
  if (canUseOptimizedmanager) {
    final Class<StandardJavaFileManager> optimizedManagerClass=ClasspathBootstrap.getOptimizedFileManagerClass();
    if (optimizedManagerClass != null) {
      try {
        final Constructor<StandardJavaFileManager> constructor=optimizedManagerClass.getConstructor();
        constructor.setAccessible(true);
        stdManager=constructor.newInstance();
      }
 catch (      Throwable e) {
        if (SystemInfo.isWindows) {
          outConsumer.report(new PlainMessageDiagnostic(Diagnostic.Kind.OTHER,"JPS build failed to load optimized file manager for javac: " + e.getMessage()));
        }
      }
    }
 else {
      String error=ClasspathBootstrap.getOptimizedFileManagerLoadError();
      if (error == null) {
        error="";
      }
      outConsumer.report(new PlainMessageDiagnostic(Diagnostic.Kind.OTHER,"JPS build failed to load optimized file manager for javac:\n" + error));
    }
  }
  if (stdManager != null) {
    myStdManager=stdManager;
  }
 else {
    myStdManager=compiler.getStandardFileManager(outConsumer,Locale.US,null);
  }
}
