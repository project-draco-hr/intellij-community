{
  myOutConsumer=outConsumer;
  myOutputFileSink=sink;
  myCanceledStatus=canceledStatus;
  StandardJavaFileManager optimizedManager=null;
  Method cacheClearMethod=null;
  if (canUseOptimizedmanager) {
    final Class<StandardJavaFileManager> optimizedManagerClass=ClasspathBootstrap.getOptimizedFileManagerClass();
    if (optimizedManagerClass != null) {
      try {
        final Constructor<StandardJavaFileManager> constructor=optimizedManagerClass.getConstructor();
        constructor.setAccessible(true);
        optimizedManager=constructor.newInstance();
        cacheClearMethod=ClasspathBootstrap.getOptimizedFileManagerCacheClearMethod();
      }
 catch (      Throwable e) {
        if (SystemInfo.isWindows) {
          reportMissingOptimizedManager(outConsumer,e.getMessage());
        }
      }
    }
 else {
      reportMissingOptimizedManager(outConsumer,null);
    }
  }
  myCacheClearMethod=cacheClearMethod;
  if (optimizedManager != null) {
    myStdManager=optimizedManager;
  }
 else {
    myStdManager=compiler.getStandardFileManager(outConsumer,Locale.US,null);
  }
}
