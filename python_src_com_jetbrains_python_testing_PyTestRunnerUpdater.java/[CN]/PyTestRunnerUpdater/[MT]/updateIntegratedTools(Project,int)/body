{
  ApplicationManager.getApplication().executeOnPooledThread(new Runnable(){
    public void run(){
      if (delay > 0) {
        try {
          Thread.sleep(delay);
        }
 catch (        InterruptedException ignore) {
        }
      }
      ApplicationManager.getApplication().invokeLater(new Runnable(){
        @Override public void run(){
          if (!TestRunnerService.getInstance(project).getProjectConfiguration().isEmpty())           return;
          String testRunner=detectTestRunnerFromSetupPy(project);
          final Collection<VirtualFile> filenames=FilenameIndex.getAllFilesByExt(project,PythonFileType.INSTANCE.getDefaultExtension(),GlobalSearchScope.projectScope(project));
          for (          VirtualFile file : filenames) {
            if (file.getName().startsWith("test")) {
              if (testRunner.isEmpty())               testRunner=checkImports(file,project);
            }
 else {
              if (PyDocumentationSettings.getInstance(project).getFormat().isEmpty()) {
                checkDocstring(file,project);
              }
            }
            if (!testRunner.isEmpty() && !PyDocumentationSettings.getInstance(project).getFormat().isEmpty()) {
              break;
            }
          }
          if (testRunner.isEmpty()) {
            for (            Module module : ModuleManager.getInstance(project).getModules()) {
              final Sdk sdk=PythonSdkType.findPythonSdk(module);
              if (sdk != null && sdk.getSdkType() instanceof PythonSdkType && testRunner.isEmpty()) {
                String sdkHome=sdk.getHomePath();
                if (VFSTestFrameworkListener.isTestFrameworkInstalled(sdkHome,VFSTestFrameworkListener.NOSETESTSEARCHER))                 testRunner=PythonTestConfigurationsModel.PYTHONS_NOSETEST_NAME;
 else                 if (VFSTestFrameworkListener.isTestFrameworkInstalled(sdkHome,VFSTestFrameworkListener.PYTESTSEARCHER))                 testRunner=PythonTestConfigurationsModel.PY_TEST_NAME;
 else                 if (VFSTestFrameworkListener.isTestFrameworkInstalled(sdkHome,VFSTestFrameworkListener.ATTESTSEARCHER))                 testRunner=PythonTestConfigurationsModel.PYTHONS_ATTEST_NAME;
              }
            }
          }
          if (testRunner.isEmpty())           testRunner=PythonTestConfigurationsModel.PYTHONS_UNITTEST_NAME;
          TestRunnerService.getInstance(project).setProjectConfiguration(testRunner);
          if (PyDocumentationSettings.getInstance(project).getFormat().isEmpty())           PyDocumentationSettings.getInstance(project).setFormat(DocStringFormat.PLAIN);
        }
      }
,ModalityState.any(),project.getDisposed());
    }
  }
);
}
