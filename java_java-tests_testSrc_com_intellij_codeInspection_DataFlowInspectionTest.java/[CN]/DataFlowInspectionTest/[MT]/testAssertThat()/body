{
  myFixture.addClass("package org.hamcrest; public class CoreMatchers { " + "public static <T> Matcher<T> notNullValue() {}\n" + "public static <T> Matcher<T> not(Matcher<T> matcher) {}\n"+ "public static <T> Matcher<T> equalTo(T operand) {}\n"+ "}");
  myFixture.addClass("package org.hamcrest; public interface Matcher<T> {}");
  myFixture.addClass("package org.junit; public class Assert { " + "public static <T> void assertThat(T actual, org.hamcrest.Matcher<? super T> matcher) {}\n" + "public static <T> void assertThat(String msg, T actual, org.hamcrest.Matcher<? super T> matcher) {}\n"+ "}");
  myFixture.addClass("package org.assertj.core.api; public class Assertions { " + "public static <T> AbstractObjectAssert<?, T> assertThat(Object actual) {}\n" + "}");
  myFixture.addClass("package org.assertj.core.api; public class AbstractObjectAssert<S extends AbstractObjectAssert<S, A>, A> {" + "public S isNotNull() {}" + "}");
  myFixture.enableInspections(new DataFlowInspection());
  myFixture.testHighlighting(true,false,true,getTestName(false) + ".java");
}
