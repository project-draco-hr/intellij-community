{
  String relativeImportBasePath=extractPath(moduleLocation);
  for (int level=0; level < statement.getRelativeLevel(); level++) {
    relativeImportBasePath=PathUtil.getParentPath(relativeImportBasePath);
  }
  if (!relativeImportBasePath.isEmpty()) {
    final String relativeImportBaseUrl=constructUrl(extractProtocol(moduleLocation),relativeImportBasePath);
    final VirtualFile relativeImportBaseDir=getInstance().findFileByUrl(relativeImportBaseUrl);
    VirtualFile sourceFile=relativeImportBaseDir;
    if (relativeImportBaseDir != null && relativeImportBaseDir.exists() && statement.getImportSource() != null) {
      final String relativePath=statement.getImportSource().getText().replace('.','/');
      sourceFile=relativeImportBaseDir.findFileByRelativePath(relativePath);
      if (sourceFile == null) {
        sourceFile=relativeImportBaseDir.findFileByRelativePath(relativePath + PyNames.DOT_PY);
      }
    }
    if (sourceFile != null) {
      final PsiManager psiManager=statement.getManager();
      final PsiFileSystemItem sourceElement;
      if (sourceFile.isDirectory()) {
        sourceElement=psiManager.findDirectory(sourceFile);
      }
 else {
        sourceElement=psiManager.findFile(sourceFile);
      }
      return sourceElement;
    }
  }
  return null;
}
