{
  final PythonSdkType sdkType=PythonSdkType.getInstance();
  final List<String> candidates=new ArrayList<String>();
  if (project == null)   return;
  final VirtualFile rootDir=project.getBaseDir();
  if (rootDir != null)   candidates.addAll(VirtualEnvSdkFlavor.findInDirectory(rootDir));
  if (!candidates.isEmpty()) {
    String filePath=candidates.get(0);
    if (StringUtil.startsWithChar(filePath,'~')) {
      final String home=SystemProperties.getUserHome();
      filePath=home + filePath.substring(1);
    }
    final Sdk virtualEnvSdk=SdkConfigurationUtil.createAndAddSDK(filePath,sdkType);
    if (virtualEnvSdk != null) {
      SdkConfigurationUtil.setDirectoryProjectSdk(project,virtualEnvSdk);
      SdkAdditionalData additionalData=virtualEnvSdk.getSdkAdditionalData();
      if (additionalData == null) {
        additionalData=new PythonSdkAdditionalData(PythonSdkFlavor.getFlavor(virtualEnvSdk.getHomePath()));
        ((ProjectJdkImpl)virtualEnvSdk).setSdkAdditionalData(additionalData);
      }
      ((PythonSdkAdditionalData)additionalData).associateWithProject(project);
      return;
    }
    return;
  }
  final Sdk existingSdk=ProjectRootManager.getInstance(project).getProjectSdk();
  if (existingSdk != null && existingSdk.getSdkType() == sdkType)   return;
  final File executableFile=PythonSdkType.findExecutableFile(new File(project.getBasePath(),"bin"),"python");
  if (executableFile != null) {
    final File virtualEnvRoot=PythonSdkType.getVirtualEnvRoot(executableFile.getPath());
    if (virtualEnvRoot != null) {
      final Sdk sdk=SdkConfigurationUtil.createAndAddSDK(executableFile.getPath(),sdkType);
      if (sdk != null) {
        SdkConfigurationUtil.setDirectoryProjectSdk(project,sdk);
        return;
      }
    }
  }
  SdkConfigurationUtil.configureDirectoryProjectSdk(project,new PreferredSdkComparator(),sdkType);
}
