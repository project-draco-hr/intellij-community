{
  final PythonSdkType py_sdk_type=PythonSdkType.getInstance();
  final List<String> candidates=new ArrayList<String>();
  if (project != null) {
    final VirtualFile rootDir=project.getBaseDir();
    if (rootDir != null)     candidates.addAll(VirtualEnvSdkFlavor.findInDirectory(rootDir));
    if (!candidates.isEmpty()) {
      String filePath=candidates.get(0);
      if (StringUtil.startsWithChar(filePath,'~')) {
        final String home=SystemProperties.getUserHome();
        filePath=home + filePath.substring(1);
      }
      final Sdk virtualEnvSdk=SdkConfigurationUtil.createAndAddSDK(filePath,py_sdk_type);
      if (virtualEnvSdk != null) {
        SdkConfigurationUtil.setDirectoryProjectSdk(project,virtualEnvSdk);
        SdkAdditionalData additionalData=virtualEnvSdk.getSdkAdditionalData();
        if (additionalData == null) {
          additionalData=new PythonSdkAdditionalData(PythonSdkFlavor.getFlavor(virtualEnvSdk.getHomePath()));
          ((ProjectJdkImpl)virtualEnvSdk).setSdkAdditionalData(additionalData);
        }
        ((PythonSdkAdditionalData)additionalData).associateWithProject(project);
        return;
      }
      return;
    }
  }
  final Sdk existing_sdk=ProjectRootManager.getInstance(project).getProjectSdk();
  if (existing_sdk != null && existing_sdk.getSdkType() == py_sdk_type)   return;
  final File py_exe=PythonSdkType.findExecutableFile(new File(project.getBasePath(),"bin"),"python");
  if (py_exe != null) {
    final File env_root=PythonSdkType.getVirtualEnvRoot(py_exe.getPath());
    if (env_root != null) {
      final Sdk an_sdk=SdkConfigurationUtil.createAndAddSDK(py_exe.getPath(),py_sdk_type);
      if (an_sdk != null) {
        SdkConfigurationUtil.setDirectoryProjectSdk(project,an_sdk);
        return;
      }
    }
  }
  SdkConfigurationUtil.configureDirectoryProjectSdk(project,new PreferredSdkComparator(),py_sdk_type);
}
