{
  try {
    GitLocalBranch branch=GitBranchUtil.getCurrentBranch(project,root);
    boolean rebase=false;
    if (branch != null) {
      String rebaseValue=GitConfigUtil.getValue(project,root,"branch." + branch.getName() + ".rebase");
      rebase=rebaseValue != null && rebaseValue.equalsIgnoreCase("true");
    }
    if (rebase) {
      return new GitRebaseUpdater(project,git,root,trackedBranches,progressIndicator,updatedFiles);
    }
  }
 catch (  VcsException e) {
    LOG.info("getDefaultUpdaterForBranch branch",e);
  }
  return new GitMergeUpdater(project,git,root,trackedBranches,progressIndicator,updatedFiles);
}
