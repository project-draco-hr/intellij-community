{
  PsiClass superClassCandidate=superMethodCandidate.getContainingClass();
  PsiClass derivedClass=derivedMethod.getContainingClass();
  if (derivedClass == null || superClassCandidate == null)   return false;
  final PsiSubstitutor superSubstitutor=TypeConversionUtil.getMaybeSuperClassSubstitutor(superClassCandidate,derivedClass,PsiSubstitutor.EMPTY,new THashSet<PsiClass>());
  if (superSubstitutor == null)   return false;
  final MethodSignature superSignature=superMethodCandidate.getSignature(superSubstitutor);
  final MethodSignature derivedSignature=derivedMethod.getSignature(PsiSubstitutor.EMPTY);
  return isSubsignature(superSignature,derivedSignature);
}
