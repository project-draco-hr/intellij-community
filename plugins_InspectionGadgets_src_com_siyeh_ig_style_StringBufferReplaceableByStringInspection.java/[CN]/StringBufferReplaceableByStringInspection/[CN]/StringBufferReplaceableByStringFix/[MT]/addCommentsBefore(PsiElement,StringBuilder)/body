{
  final int offset=anchor.getTextOffset();
  boolean newlineAdded=false;
  boolean newlineEncountered=false;
  for (final Iterator<PsiElement> iterator=commentsAndWhitespace.iterator(); iterator.hasNext(); ) {
    final PsiElement element=iterator.next();
    if (element.getTextOffset() >= offset) {
      break;
    }
    if (element instanceof PsiComment) {
      final PsiComment comment=(PsiComment)element;
      if (out.length() == 0) {
        leadingComments.add(comment);
      }
 else {
        final PsiElement prev=comment.getPrevSibling();
        if (prev instanceof PsiWhiteSpace) {
          out.append(prev.getText());
        }
        out.append(comment.getText());
        final PsiElement next=comment.getNextSibling();
        if (next instanceof PsiWhiteSpace) {
          final String text=next.getText();
          if (text.contains("\n")) {
            newlineAdded=true;
          }
          out.append(text);
        }
      }
    }
 else     if (element instanceof PsiWhiteSpace) {
      final String text=element.getText();
      if (text.contains("\n")) {
        newlineEncountered=true;
      }
    }
    iterator.remove();
  }
  if (newlineEncountered && !newlineAdded && out.length() != 0) {
    out.append("\n");
  }
}
