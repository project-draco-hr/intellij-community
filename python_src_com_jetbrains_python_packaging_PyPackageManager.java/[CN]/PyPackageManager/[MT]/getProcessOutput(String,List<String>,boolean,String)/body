{
  final SdkAdditionalData sdkData=mySdk.getSdkAdditionalData();
  if (sdkData instanceof PythonRemoteSdkAdditionalData) {
    final PythonRemoteSdkAdditionalData remoteSdkData=(PythonRemoteSdkAdditionalData)sdkData;
    final PythonRemoteInterpreterManager manager=PythonRemoteInterpreterManager.getInstance();
    if (manager != null) {
      final List<String> cmdline=new ArrayList<String>();
      cmdline.add(mySdk.getHomePath());
      cmdline.add(RemoteFile.detectSystemByPath(mySdk.getHomePath()).createRemoteFile(helperPath).getPath());
      cmdline.addAll(args);
      try {
        if (askForSudo) {
          askForSudo=!manager.ensureCanWrite(null,remoteSdkData,remoteSdkData.getInterpreterPath());
        }
        ProcessOutput processOutput;
        do {
          processOutput=manager.runRemoteProcess(null,remoteSdkData,ArrayUtil.toStringArray(cmdline),askForSudo);
          if (askForSudo && processOutput.getStderr().contains("sudo: 3 incorrect password attempts")) {
            continue;
          }
          break;
        }
 while (true);
        return processOutput;
      }
 catch (      PyRemoteInterpreterException e) {
        throw new PyExternalProcessException(ERROR_INVALID_SDK,helperPath,args,"Error running SDK");
      }
    }
 else {
      throw new PyExternalProcessException(ERROR_INVALID_SDK,helperPath,args,PythonRemoteInterpreterManager.WEB_DEPLOYMENT_PLUGIN_IS_DISABLED);
    }
  }
 else {
    final String homePath=mySdk.getHomePath();
    if (homePath == null) {
      throw new PyExternalProcessException(ERROR_INVALID_SDK,helperPath,args,"Cannot find interpreter for SDK");
    }
    if (parentDir == null) {
      parentDir=new File(homePath).getParent();
    }
    final List<String> cmdline=new ArrayList<String>();
    cmdline.add(homePath);
    cmdline.add(helperPath);
    cmdline.addAll(args);
    final boolean canCreate=FileUtil.ensureCanCreateFile(new File(mySdk.getHomePath()));
    if (!canCreate && !SystemInfo.isWindows && askForSudo) {
      try {
        final ProcessOutput result=ExecUtil.sudoAndGetOutput(StringUtil.join(cmdline," "),"Please enter your password to make changes in system packages: ",parentDir);
        String message=result.getStderr();
        if (result.getExitCode() != 0) {
          final String stdout=result.getStdout();
          if (StringUtil.isEmptyOrSpaces(message)) {
            message=stdout;
          }
          if (StringUtil.isEmptyOrSpaces(message)) {
            message="Failed to perform action. Permission denied.";
          }
          throw new PyExternalProcessException(result.getExitCode(),helperPath,args,message);
        }
        if (SystemInfo.isMac && !StringUtil.isEmptyOrSpaces(message)) {
          throw new PyExternalProcessException(result.getExitCode(),helperPath,args,message);
        }
        return result;
      }
 catch (      ExecutionException e) {
        throw new PyExternalProcessException(ERROR_EXECUTION,helperPath,args,e.getMessage());
      }
catch (      IOException e) {
        throw new PyExternalProcessException(ERROR_ACCESS_DENIED,helperPath,args,e.getMessage());
      }
    }
 else {
      return PySdkUtil.getProcessOutput(parentDir,ArrayUtil.toStringArray(cmdline),TIMEOUT);
    }
  }
}
