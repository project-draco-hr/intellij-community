{
  ProgressManager.getInstance().run(new Task.Backgroundable(myProject,progressTitle,false){
    @Override public void run(    @NotNull ProgressIndicator indicator){
      indicator.setText(progressTitle + "...");
      final Ref<Notification> notificationRef=new Ref<Notification>(null);
      final String PACKAGING_GROUP_ID="Packaging";
      final Application application=ApplicationManager.getApplication();
      if (myListener != null) {
        application.invokeLater(new Runnable(){
          @Override public void run(){
            myListener.started();
          }
        }
);
      }
      final Ref<PyExternalProcessException> exceptionRef=Ref.create(null);
      try {
        runnable.run();
        notificationRef.set(new Notification(PACKAGING_GROUP_ID,successTitle,successDescription,NotificationType.INFORMATION));
      }
 catch (      final PyExternalProcessException e) {
        exceptionRef.set(e);
        final String progressLower=progressTitle.toLowerCase();
        final String description="Error occurred when " + progressLower + ".";
        final String command=e.getName() + " " + StringUtil.join(e.getArgs()," ");
        notificationRef.set(new Notification(PACKAGING_GROUP_ID,failureTitle,String.format("Error occurred when %s. <a href=\"xxx\">Details...</a>",progressLower),NotificationType.ERROR,new NotificationListener(){
          @Override public void hyperlinkUpdate(          @NotNull Notification notification,          @NotNull HyperlinkEvent event){
            PyPIPackageUtil.showError(myProject,failureTitle,description,command,e.getMessage());
            notification.expire();
          }
        }
));
      }
 finally {
        application.invokeLater(new Runnable(){
          @Override public void run(){
            if (myListener != null) {
              myListener.finished(exceptionRef.get());
            }
            VirtualFileManager.getInstance().refreshWithoutFileWatcher(false);
            PythonSdkType.getInstance().setupSdkPaths(mySdk);
            final Notification notification=notificationRef.get();
            if (notification != null) {
              notification.notify(myProject);
            }
          }
        }
);
      }
    }
  }
);
}
