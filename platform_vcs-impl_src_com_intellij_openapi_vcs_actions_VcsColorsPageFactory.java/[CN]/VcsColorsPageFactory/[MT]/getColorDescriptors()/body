{
  List<ColorDescriptor> descriptors=new ArrayList<>();
  descriptors.add(new ColorDescriptor(OptionsBundle.message("options.general.color.descriptor.added.lines"),EditorColors.ADDED_LINES_COLOR,ColorDescriptor.Kind.BACKGROUND));
  descriptors.add(new ColorDescriptor(OptionsBundle.message("options.general.color.descriptor.modified.lines"),EditorColors.MODIFIED_LINES_COLOR,ColorDescriptor.Kind.BACKGROUND));
  descriptors.add(new ColorDescriptor(OptionsBundle.message("options.general.color.descriptor.deleted.lines"),EditorColors.DELETED_LINES_COLOR,ColorDescriptor.Kind.BACKGROUND));
  descriptors.add(new ColorDescriptor(OptionsBundle.message("options.general.color.descriptor.whitespaces.modified.lines"),EditorColors.WHITESPACES_MODIFIED_LINES_COLOR,ColorDescriptor.Kind.BACKGROUND));
  descriptors.add(new ColorDescriptor(OptionsBundle.message("options.general.color.descriptor.border.lines"),EditorColors.BORDER_LINES_COLOR,ColorDescriptor.Kind.BACKGROUND));
  descriptors.add(new ColorDescriptor(OptionsBundle.message("options.general.color.descriptor.vcs.annotations"),EditorColors.ANNOTATIONS_COLOR,ColorDescriptor.Kind.FOREGROUND));
  descriptors.add(new ColorDescriptor(OptionsBundle.message("options.general.color.descriptor.vcs.annotations.merged"),EditorColors.ANNOTATIONS_MERGED_COLOR,ColorDescriptor.Kind.FOREGROUND));
  List<ColorKey> colorKeys=AnnotationsSettings.ANCHOR_COLOR_KEYS;
  for (int i=0; i < colorKeys.size(); i++) {
    descriptors.add(new ColorDescriptor(OptionsBundle.message("options.general.color.descriptor.vcs.annotations.color.n",i + 1),colorKeys.get(i),ColorDescriptor.Kind.BACKGROUND));
  }
  return ArrayUtil.toObjectArray(descriptors,ColorDescriptor.class);
}
