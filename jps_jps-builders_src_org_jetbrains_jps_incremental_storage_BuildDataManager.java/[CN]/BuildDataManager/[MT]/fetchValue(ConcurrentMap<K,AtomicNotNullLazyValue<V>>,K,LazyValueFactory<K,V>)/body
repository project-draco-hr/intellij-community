{
  AtomicNotNullLazyValue<V> lazy=container.get(key);
  if (lazy == null) {
    final AtomicNotNullLazyValue<V> newValue=valueFactory.create(key);
    lazy=container.putIfAbsent(key,newValue);
    if (lazy == null) {
      lazy=newValue;
    }
  }
  try {
    return lazy.getValue();
  }
 catch (  BuildDataCorruptedException e) {
    throw e.getCause();
  }
}
