{
  String path=toSelect != null ? toSelect.getCanonicalPath() : null;
  myFileDialog.setFile(path);
  final CommandProcessorEx commandProcessor=ApplicationManager.getApplication() != null ? (CommandProcessorEx)CommandProcessor.getInstance() : null;
  final boolean appStarted=commandProcessor != null;
  if (appStarted) {
    commandProcessor.enterModal();
    LaterInvocator.enterModal(myFileDialog);
  }
  Component component=myParent.get();
  try {
    myFileDialog.setVisible(true);
  }
  finally {
    if (appStarted) {
      commandProcessor.leaveModal();
      LaterInvocator.leaveModal(myFileDialog);
      Component parent=component;
      if (parent != null)       parent.requestFocus();
    }
  }
  File[] files=myFileDialog.getFiles();
  List<VirtualFile> virtualFileList=getChosenFiles(Stream.of(files));
  virtualFiles=virtualFileList.toArray(VirtualFile.EMPTY_ARRAY);
  try {
    myFileChooserDescriptor.validateSelectedFiles(virtualFiles);
  }
 catch (  Exception e) {
    if (component == null) {
      Messages.showErrorDialog(myProject,e.getMessage(),myTitle);
    }
 else {
      Messages.showErrorDialog(component,e.getMessage(),myTitle);
    }
    return;
  }
  if (!ArrayUtil.isEmpty(files)) {
    callback.consume(virtualFileList);
  }
 else   if (callback instanceof FileChooser.FileChooserConsumer) {
    ((FileChooser.FileChooserConsumer)callback).cancelled();
  }
}
