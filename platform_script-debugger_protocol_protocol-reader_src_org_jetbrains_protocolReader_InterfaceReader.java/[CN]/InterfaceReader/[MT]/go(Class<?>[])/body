{
  for (  Class<?> typeClass : classes) {
    createIfNotExists(typeClass);
  }
  boolean hasUnresolved=true;
  while (hasUnresolved) {
    hasUnresolved=false;
    for (int i=0, n=refs.size(); i < n; i++) {
      TypeRef ref=refs.get(i);
      ref.type=typeToTypeHandler.get(ref.typeClass);
      if (ref.type == null) {
        createIfNotExists(ref.typeClass);
        hasUnresolved=true;
        ref.type=typeToTypeHandler.get(ref.typeClass);
        if (ref.type == null) {
          throw new IllegalStateException();
        }
      }
    }
  }
  for (  SubtypeCaster subtypeCaster : subtypeCasters) {
    ExistingSubtypeAspect subtypeSupport=subtypeCaster.getSubtypeHandler().subtypeAspect;
    if (subtypeSupport != null) {
      subtypeSupport.setSubtypeCaster(subtypeCaster);
    }
  }
  return typeToTypeHandler;
}
