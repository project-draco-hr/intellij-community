{
  myDebugProcess.getManagerThread().schedule(new DebuggerCommandImpl(){
    @Override protected void action() throws Exception {
      List<JavaStackFrame> frames=new ArrayList<JavaStackFrame>();
      if (!myThreadProxy.isCollected() && myDebugProcess.getSuspendManager().isSuspended(myThreadProxy)) {
        int status=myThreadProxy.status();
        if (!(status == ThreadReference.THREAD_STATUS_UNKNOWN) && !(status == ThreadReference.THREAD_STATUS_NOT_STARTED) && !(status == ThreadReference.THREAD_STATUS_ZOMBIE)) {
          try {
            int framesToSkip=firstFrameIndex;
            for (            StackFrameProxyImpl stackFrame : myThreadProxy.frames()) {
              if (framesToSkip > 0) {
                framesToSkip--;
                continue;
              }
              frames.add(new JavaStackFrame(stackFrame,myDebugProcess,myTracker));
            }
          }
 catch (          EvaluateException e) {
            container.errorOccurred(e.getMessage());
            return;
          }
        }
      }
      container.addStackFrames(frames,true);
    }
  }
);
}
