{
  List<FileEditorProvider> mySharedProviderList=new ArrayList<FileEditorProvider>();
  boolean doNotShowTextEditor=false;
  for (  final FileEditorProvider provider : myProviders) {
    if (ApplicationManager.getApplication().runReadAction(new Computable<Boolean>(){
      @Override public Boolean compute(){
        if (DumbService.isDumb(project) && !DumbService.isDumbAware(provider)) {
          return false;
        }
        return provider.accept(project,file);
      }
    }
)) {
      mySharedProviderList.add(provider);
      doNotShowTextEditor|=provider.getPolicy() == FileEditorPolicy.HIDE_DEFAULT_EDITOR;
    }
  }
  if (doNotShowTextEditor) {
    ContainerUtil.retainAll(mySharedProviderList,new Condition<FileEditorProvider>(){
      @Override public boolean value(      FileEditorProvider provider){
        return !(provider instanceof TextEditorProvider);
      }
    }
);
  }
  Collections.sort(mySharedProviderList,MyComparator.ourInstance);
  if (mySharedProviderList.isEmpty()) {
    return EMPTY_ARRAY;
  }
  return mySharedProviderList.toArray(new FileEditorProvider[mySharedProviderList.size()]);
}
