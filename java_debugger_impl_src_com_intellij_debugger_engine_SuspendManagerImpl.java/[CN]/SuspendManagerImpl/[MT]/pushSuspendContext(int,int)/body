{
  SuspendContextImpl suspendContext=new SuspendContextImpl(myDebugProcess,suspendPolicy,nVotes,null){
    @Override protected void resumeImpl(){
      if (LOG.isDebugEnabled()) {
        LOG.debug("Start resuming...");
      }
      myDebugProcess.logThreads();
switch (getSuspendPolicy()) {
case EventRequest.SUSPEND_ALL:
        int resumeAttempts=5;
      while (--resumeAttempts > 0) {
        try {
          myDebugProcess.getVirtualMachineProxy().resume();
          break;
        }
 catch (        InternalException e) {
          if (e.errorCode() == 13) {
          }
 else {
            LOG.error(e);
            break;
          }
        }
      }
    if (LOG.isDebugEnabled()) {
      LOG.debug("VM resumed ");
    }
  break;
case EventRequest.SUSPEND_EVENT_THREAD:
myFrozenThreads.remove(getThread());
getThread().resume();
if (LOG.isDebugEnabled()) {
LOG.debug("Thread resumed : " + getThread().toString());
}
break;
case EventRequest.SUSPEND_NONE:
if (LOG.isDebugEnabled()) {
LOG.debug("None resumed");
}
break;
}
if (LOG.isDebugEnabled()) {
LOG.debug("Suspends = " + suspends);
}
myDebugProcess.logThreads();
}
}
;
pushContext(suspendContext);
return suspendContext;
}
