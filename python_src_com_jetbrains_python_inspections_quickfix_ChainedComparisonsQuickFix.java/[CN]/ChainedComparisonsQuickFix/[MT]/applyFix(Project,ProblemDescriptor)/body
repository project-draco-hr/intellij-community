{
  final PyBinaryExpression expression=as(descriptor.getPsiElement(),PyBinaryExpression.class);
  if (expression != null && expression.isWritable()) {
    final PyBinaryExpression rightExpression=as(expression.getRightExpression(),PyBinaryExpression.class);
    PyBinaryExpression leftExpression=as(expression.getLeftExpression(),PyBinaryExpression.class);
    if (rightExpression != null && leftExpression != null && isLogicalAndExpression(expression)) {
      if (getInnerRight && leftExpression.getRightExpression() instanceof PyBinaryExpression && isLogicalAndExpression(leftExpression)) {
        leftExpression=(PyBinaryExpression)leftExpression.getRightExpression();
      }
      checkOperator(assertNotNull(leftExpression),rightExpression,project);
    }
  }
}
