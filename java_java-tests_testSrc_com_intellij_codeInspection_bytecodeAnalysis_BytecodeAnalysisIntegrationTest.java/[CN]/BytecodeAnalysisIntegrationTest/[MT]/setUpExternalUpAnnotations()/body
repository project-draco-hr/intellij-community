{
  String annotationsPath=PathManagerEx.getTestDataPath() + "/codeInspection/bytecodeAnalysis/annotations";
  final VirtualFile annotationsDir=LocalFileSystem.getInstance().refreshAndFindFileByPath(annotationsPath);
  assertNotNull(annotationsDir);
  ModuleRootModificationUtil.updateModel(myModule,new AsynchConsumer<ModifiableRootModel>(){
    @Override public void finished(){
    }
    @Override public void consume(    ModifiableRootModel modifiableRootModel){
      final LibraryTable libraryTable=modifiableRootModel.getModuleLibraryTable();
      Library[] libs=libraryTable.getLibraries();
      for (      Library library : libs) {
        final Library.ModifiableModel libraryModel=library.getModifiableModel();
        libraryModel.addRoot(annotationsDir,AnnotationOrderRootType.getInstance());
        libraryModel.commit();
      }
      Sdk sdk=modifiableRootModel.getSdk();
      if (sdk != null) {
        SdkModificator sdkModificator=sdk.getSdkModificator();
        sdkModificator.addRoot(annotationsDir,AnnotationOrderRootType.getInstance());
        sdkModificator.commitChanges();
      }
    }
  }
);
  annotationsDir.refresh(false,true);
}
