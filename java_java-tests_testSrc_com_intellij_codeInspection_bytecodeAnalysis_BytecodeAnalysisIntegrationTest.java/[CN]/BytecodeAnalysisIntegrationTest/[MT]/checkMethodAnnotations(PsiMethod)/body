{
  if (ProjectBytecodeAnalysis.getKey(method,myMessageDigest) == null) {
    return;
  }
  String methodKey=PsiFormatUtil.getExternalName(method,false,Integer.MAX_VALUE);
{
    String externalNotNullMethodAnnotation=findExternalAnnotation(method,AnnotationUtil.NOT_NULL) == null ? "null" : "@NotNull";
    String inferredNotNullMethodAnnotation=findInferredAnnotation(method,AnnotationUtil.NOT_NULL) == null ? "null" : "@NotNull";
    if (!externalNotNullMethodAnnotation.equals(inferredNotNullMethodAnnotation)) {
      myDiffs.add(methodKey + ": " + externalNotNullMethodAnnotation+ " != "+ inferredNotNullMethodAnnotation);
    }
  }
{
    String externalNullableMethodAnnotation=findExternalAnnotation(method,AnnotationUtil.NULLABLE) == null ? "null" : "@Nullable";
    String inferredNullableMethodAnnotation=findInferredAnnotation(method,AnnotationUtil.NULLABLE) == null ? "null" : "@Nullable";
    if (!externalNullableMethodAnnotation.equals(inferredNullableMethodAnnotation)) {
      myDiffs.add(methodKey + ": " + externalNullableMethodAnnotation+ " != "+ inferredNullableMethodAnnotation);
    }
  }
  for (  PsiParameter parameter : method.getParameterList().getParameters()) {
    String parameterKey=PsiFormatUtil.getExternalName(parameter,false,Integer.MAX_VALUE);
{
      String externalNotNull=findExternalAnnotation(parameter,AnnotationUtil.NOT_NULL) == null ? "null" : "@NotNull";
      String inferredNotNull=findInferredAnnotation(parameter,AnnotationUtil.NOT_NULL) == null ? "null" : "@NotNull";
      if (!externalNotNull.equals(inferredNotNull)) {
        myDiffs.add(parameterKey + ": " + externalNotNull+ " != "+ inferredNotNull);
      }
    }
{
      String externalNullable=findExternalAnnotation(parameter,AnnotationUtil.NULLABLE) == null ? "null" : "@Nullable";
      String inferredNullable=findInferredAnnotation(parameter,AnnotationUtil.NULLABLE) == null ? "null" : "@Nullable";
      if (!externalNullable.equals(inferredNullable)) {
        myDiffs.add(parameterKey + ": " + externalNullable+ " != "+ inferredNullable);
      }
    }
  }
  PsiAnnotation externalContractAnnotation=findExternalAnnotation(method,ORG_JETBRAINS_ANNOTATIONS_CONTRACT);
  PsiAnnotation inferredContractAnnotation=findInferredAnnotation(method,ORG_JETBRAINS_ANNOTATIONS_CONTRACT);
  String externalContractAnnotationText=externalContractAnnotation == null ? "null" : externalContractAnnotation.getText();
  String inferredContractAnnotationText=inferredContractAnnotation == null ? "null" : inferredContractAnnotation.getText();
  if (!externalContractAnnotationText.equals(inferredContractAnnotationText)) {
    myDiffs.add(methodKey + ": " + externalContractAnnotationText+ " != "+ inferredContractAnnotationText);
  }
}
