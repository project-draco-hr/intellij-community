{
  showCard(SEARCHING_CARD,200);
  final Set<Object> elements=new LinkedHashSet<Object>();
  Runnable calculation=new Runnable(){
    public void run(){
      ProgressManager.getInstance().runProcess(new Runnable(){
        @Override public void run(){
          ApplicationManager.getApplication().runReadAction(new Runnable(){
            @Override public void run(){
              try {
                boolean everywhere=myCheckboxState;
                ensureNamesLoaded(everywhere);
                addElementsByPattern(myPattern,elements,myCancelled,everywhere);
              }
 catch (              ProcessCanceledException e) {
              }
            }
          }
);
        }
      }
,myCancelled);
    }
  }
;
  calculation.run();
  if (myCancelled.isCanceled()) {
    myShowCardAlarm.cancelAllRequests();
    return;
  }
  final String cardToShow;
  if (elements.isEmpty() && !myCheckboxState) {
    myCheckboxState=true;
    calculation.run();
    cardToShow=elements.isEmpty() ? NOT_FOUND_CARD : NOT_FOUND_IN_PROJECT_CARD;
  }
 else {
    cardToShow=elements.isEmpty() ? NOT_FOUND_CARD : CHECK_BOX_CARD;
  }
  showCard(cardToShow,0);
  final Set<Object> filtered=filter(elements);
  ApplicationManager.getApplication().invokeLater(new Runnable(){
    @Override public void run(){
      if (!myCancelled.isCanceled()) {
        myCallback.consume(filtered);
      }
    }
  }
,myModalityState);
}
