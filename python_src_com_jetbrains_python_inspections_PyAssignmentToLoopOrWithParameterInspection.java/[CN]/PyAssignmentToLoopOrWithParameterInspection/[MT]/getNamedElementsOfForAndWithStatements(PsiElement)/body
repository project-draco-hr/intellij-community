{
  final List<PyElement> expressions;
  if (element instanceof PyForStatement) {
    final PyForStatement forStmt=(PyForStatement)element;
    final PyExpression tgt=forStmt.getForPart().getTarget();
    expressions=Lists.newArrayList();
    expressions.addAll(PyUtil.flattenedParensAndStars(tgt));
  }
 else   if (element instanceof PyWithStatement) {
    final PyWithStatement withStmt=(PyWithStatement)element;
    expressions=Lists.newArrayList();
    final PyWithItem[] items=PsiTreeUtil.getChildrenOfType(withStmt,PyWithItem.class);
    if (items != null) {
      for (      PyWithItem item : items) {
        PyExpression targetExpression=item.getTarget();
        expressions.addAll(PyUtil.flattenedParensAndTuples(targetExpression));
      }
    }
  }
 else {
    expressions=Collections.emptyList();
  }
  return expressions;
}
