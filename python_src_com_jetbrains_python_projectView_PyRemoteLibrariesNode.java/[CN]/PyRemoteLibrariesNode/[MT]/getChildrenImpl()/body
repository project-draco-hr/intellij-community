{
  return FluentIterable.from(Lists.newArrayList(getValue().getChildren())).transform(new Function<PsiElement,AbstractTreeNode>(){
    @Override public AbstractTreeNode apply(    PsiElement input){
      if (input instanceof PsiDirectory) {
        PsiDirectory directory=(PsiDirectory)input;
        if (myRemoteSdkData.getPathMappings().canReplaceLocal((directory.getVirtualFile().getPath()))) {
          return new PyRemoteRootNode(myRemoteSdkData.getPathMappings().convertToRemote(directory.getVirtualFile().getPath()),getProject(),directory,getSettings());
        }
      }
      return null;
    }
  }
).filter(Predicates.notNull()).toList();
}
