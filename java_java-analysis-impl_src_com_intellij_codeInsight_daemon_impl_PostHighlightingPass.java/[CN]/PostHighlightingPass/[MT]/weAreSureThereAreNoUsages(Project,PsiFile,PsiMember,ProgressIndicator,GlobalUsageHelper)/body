{
  if (!helper.shouldCheckUsages(member))   return false;
  String name=member.getName();
  if (name == null)   return false;
  SearchScope useScope=member.getUseScope();
  if (useScope instanceof GlobalSearchScope) {
    if (member instanceof PsiClass) {
      useScope=GlobalSearchScope.projectScope(project).uniteWith((GlobalSearchScope)useScope);
    }
    PsiSearchHelper searchHelper=PsiSearchHelper.SERVICE.getInstance(project);
    PsiFile ignoreFile=helper.isCurrentFileAlreadyChecked() ? containingFile : null;
    PsiSearchHelper.SearchCostResult cheapEnough=searchHelper.isCheapEnoughToSearch(name,(GlobalSearchScope)useScope,ignoreFile,progress);
    if (cheapEnough == PsiSearchHelper.SearchCostResult.TOO_MANY_OCCURRENCES)     return false;
    if (cheapEnough == PsiSearchHelper.SearchCostResult.ZERO_OCCURRENCES && !canBeReferencedViaWeirdNames(member,containingFile)) {
      return true;
    }
    if (member instanceof PsiMethod) {
      String propertyName=PropertyUtil.getPropertyName(member);
      if (propertyName != null) {
        SearchScope fileScope=containingFile.getUseScope();
        if (fileScope instanceof GlobalSearchScope && searchHelper.isCheapEnoughToSearch(propertyName,(GlobalSearchScope)fileScope,ignoreFile,progress) == PsiSearchHelper.SearchCostResult.TOO_MANY_OCCURRENCES) {
          return false;
        }
      }
    }
  }
  if (ReferencesSearch.search(member,useScope,true).findFirst() != null)   return false;
  return !(useScope instanceof GlobalSearchScope) || !foundUsageInText(member,(GlobalSearchScope)useScope);
}
