{
  String symbolName=aClass.getName();
  String message=JavaErrorMessages.message(pattern,symbolName);
  final HighlightInfo highlightInfo=createUnusedSymbolInfo(identifier,message,highlightInfoType);
  QuickFixAction.registerQuickFixAction(highlightInfo,QuickFixFactory.getInstance().createSafeDeleteFix(aClass),highlightDisplayKey);
  SpecialAnnotationsUtilBase.createAddToSpecialAnnotationFixes((PsiModifierListOwner)aClass,new Processor<String>(){
    @Override public boolean process(    final String annoName){
      QuickFixAction.registerQuickFixAction(highlightInfo,QuickFixFactory.getInstance().createAddToDependencyInjectionAnnotationsFix(project,annoName,element));
      return true;
    }
  }
);
  return highlightInfo;
}
