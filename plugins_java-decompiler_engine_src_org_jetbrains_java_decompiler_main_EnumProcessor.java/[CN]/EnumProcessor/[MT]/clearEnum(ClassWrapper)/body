{
  StructClass cl=wrapper.getClassStruct();
  for (  MethodWrapper method : wrapper.getMethods()) {
    StructMethod mt=method.methodStruct;
    String name=mt.getName();
    String descriptor=mt.getDescriptor();
    if ("values".equals(name)) {
      if (descriptor.equals("()[L" + cl.qualifiedName + ";")) {
        wrapper.getHiddenMembers().add(InterpreterUtil.makeUniqueKey(name,descriptor));
      }
    }
 else     if ("valueOf".equals(name)) {
      if (descriptor.equals("(Ljava/lang/String;)L" + cl.qualifiedName + ";")) {
        wrapper.getHiddenMembers().add(InterpreterUtil.makeUniqueKey(name,descriptor));
      }
    }
 else     if (CodeConstants.INIT_NAME.equals(name)) {
      Statement firstData=findFirstData(method.root);
      if (firstData != null && !firstData.getExprents().isEmpty()) {
        Exprent exprent=firstData.getExprents().get(0);
        if (exprent.type == Exprent.EXPRENT_INVOCATION) {
          InvocationExprent invexpr=(InvocationExprent)exprent;
          if (isInvocationSuperConstructor(invexpr,method,wrapper)) {
            firstData.getExprents().remove(0);
          }
        }
      }
    }
  }
  for (  StructField fd : cl.getFields()) {
    String descriptor=fd.getDescriptor();
    if (fd.isSynthetic() && descriptor.equals("[L" + cl.qualifiedName + ";")) {
      wrapper.getHiddenMembers().add(InterpreterUtil.makeUniqueKey(fd.getName(),descriptor));
    }
  }
}
