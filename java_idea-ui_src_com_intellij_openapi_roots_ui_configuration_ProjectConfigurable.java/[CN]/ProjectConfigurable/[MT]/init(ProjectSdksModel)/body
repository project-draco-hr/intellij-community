{
  myPanel=new JPanel(new GridBagLayout());
  myPanel.setPreferredSize(JBUI.size(700,500));
  if (ProjectUtil.isDirectoryBased(myProject)) {
    final JPanel namePanel=new JPanel(new BorderLayout());
    final JLabel label=new JLabel("<html><body><b>Project name:</b></body></html>",SwingConstants.LEFT);
    namePanel.add(label,BorderLayout.NORTH);
    myProjectName=new JTextField();
    myProjectName.setColumns(40);
    final JPanel nameFieldPanel=new JPanel();
    nameFieldPanel.setLayout(new BoxLayout(nameFieldPanel,BoxLayout.X_AXIS));
    nameFieldPanel.add(Box.createHorizontalStrut(4));
    nameFieldPanel.add(myProjectName);
    namePanel.add(nameFieldPanel,BorderLayout.CENTER);
    final JPanel wrapper=new JPanel(new FlowLayout(FlowLayout.LEFT,0,0));
    wrapper.add(namePanel);
    wrapper.setAlignmentX(0);
    myPanel.add(wrapper,new GridBagConstraints(0,GridBagConstraints.RELATIVE,1,1,0.0,0.0,GridBagConstraints.WEST,GridBagConstraints.HORIZONTAL,new Insets(4,0,10,0),0,0));
  }
  myProjectJdkConfigurable=new ProjectJdkConfigurable(myProject,model);
  myPanel.add(myProjectJdkConfigurable.createComponent(),new GridBagConstraints(0,GridBagConstraints.RELATIVE,1,1,0.0,0.0,GridBagConstraints.WEST,GridBagConstraints.HORIZONTAL,new Insets(4,0,0,0),0,0));
  myPanel.add(myWholePanel,new GridBagConstraints(0,GridBagConstraints.RELATIVE,1,1,1.0,1.0,GridBagConstraints.NORTHWEST,GridBagConstraints.NONE,new Insets(4,0,0,0),0,0));
  myPanel.setBorder(new EmptyBorder(0,10,0,10));
  myProjectCompilerOutput.getTextField().getDocument().addDocumentListener(new DocumentAdapter(){
    @Override protected void textChanged(    DocumentEvent e){
      if (myFreeze)       return;
      myModulesConfigurator.processModuleCompilerOutputChanged(getCompilerOutputUrl());
    }
  }
);
  myProjectJdkConfigurable.addChangeListener(new ActionListener(){
    @Override public void actionPerformed(    ActionEvent e){
      myLanguageLevelCombo.sdkUpdated(myProjectJdkConfigurable.getSelectedProjectJdk(),myProject.isDefault());
      LanguageLevelProjectExtensionImpl.getInstanceImpl(myProject).setCurrentLevel(myLanguageLevelCombo.getSelectedLevel());
    }
  }
);
  myLanguageLevelCombo.addActionListener(new ActionListener(){
    @Override public void actionPerformed(    ActionEvent e){
      LanguageLevelProjectExtensionImpl.getInstanceImpl(myProject).setCurrentLevel(myLanguageLevelCombo.getSelectedLevel());
    }
  }
);
}
