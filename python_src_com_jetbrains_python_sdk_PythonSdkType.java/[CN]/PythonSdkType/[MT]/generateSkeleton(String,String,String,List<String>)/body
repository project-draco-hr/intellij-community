{
  final String parent_dir=new File(binaryPath).getParent();
  List<String> commandLine=new ArrayList<String>();
  commandLine.add(binaryPath);
  commandLine.add(PythonHelpersLocator.getHelperPath(GENERATOR3));
  commandLine.add("-d");
  commandLine.add(stubsRoot);
  if (!assemblyRefs.isEmpty()) {
    commandLine.add("-c");
    commandLine.add(StringUtil.join(assemblyRefs,";"));
  }
  if (ApplicationManagerEx.getApplicationEx().isInternal()) {
    commandLine.add("-x");
  }
  commandLine.add(modname);
  final ProcessOutput gen_result=SdkUtil.getProcessOutput(parent_dir,commandLine.toArray(new String[commandLine.size()]),getVirtualEnvAdditionalEnv(binaryPath),RUN_TIMEOUT * 10);
  if (gen_result.getExitCode() != 0) {
    StringBuffer sb=new StringBuffer("Skeleton for ");
    sb.append(modname).append(" failed. stderr: --");
    for (    String err_line : gen_result.getStderrLines())     sb.append(err_line).append("\n");
    sb.append("--");
    if (ApplicationManagerEx.getApplicationEx().isInternal()) {
      LOG.error(sb.toString());
    }
 else {
      LOG.warn(sb.toString());
    }
  }
}
