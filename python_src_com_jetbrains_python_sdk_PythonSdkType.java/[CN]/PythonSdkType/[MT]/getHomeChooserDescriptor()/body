{
  final boolean is_windows=SystemInfo.isWindows;
  return new FileChooserDescriptor(true,false,false,false,false,false){
    @Override public void validateSelectedFiles(    VirtualFile[] files) throws Exception {
      if (files.length != 0) {
        if (!isValidSdkHome(files[0].getPath())) {
          throw new Exception(PyBundle.message("sdk.error.invalid.interpreter.name.$0",files[0].getName()));
        }
      }
    }
    @Override public boolean isFileVisible(    VirtualFile file,    boolean showHiddenFiles){
      if (!file.isDirectory()) {
        if (is_windows) {
          String path=file.getPath();
          boolean looks_executable=false;
          for (          String ext : WINDOWS_EXECUTABLE_SUFFIXES) {
            if (path.endsWith(ext)) {
              looks_executable=true;
              break;
            }
          }
          return looks_executable && super.isFileVisible(file,showHiddenFiles);
        }
      }
      return super.isFileVisible(file,showHiddenFiles);
    }
  }
.withTitle(PyBundle.message("sdk.select.path")).withShowHiddenFiles(SystemInfo.isUnix);
}
