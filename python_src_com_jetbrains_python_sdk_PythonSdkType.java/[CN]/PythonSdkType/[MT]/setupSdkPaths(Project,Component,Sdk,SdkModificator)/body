{
  if (isRemote(sdk) && project == null && ownerComponent == null) {
    LOG.error("For refreshing skeletons of remote SDK, either project or owner component must be specified");
  }
  final ProgressManager progressManager=ProgressManager.getInstance();
  final Ref<Boolean> sdkPathsUpdatedRef=new Ref<Boolean>(false);
  final Task.Modal setupTask=new Task.Modal(project,"Setting up library files for " + sdk.getName(),false){
    public void run(    @NotNull final ProgressIndicator indicator){
      sdkModificator.removeAllRoots();
      try {
        updateSdkRootsFromSysPath(sdk,sdkModificator,indicator);
        updateUserAddedPaths(sdk,sdkModificator,indicator);
        PythonSdkUpdater.getInstance().markAlreadyUpdated(sdk.getHomePath());
        sdkPathsUpdatedRef.set(true);
      }
 catch (      InvalidSdkException ignored) {
      }
    }
  }
;
  progressManager.run(setupTask);
  final Boolean sdkPathsUpdated=sdkPathsUpdatedRef.get();
  final Application application=ApplicationManager.getApplication();
  if (sdkPathsUpdated && !application.isUnitTestMode()) {
    application.invokeLater(new Runnable(){
      @Override public void run(){
        progressManager.run(new Task.Backgroundable(project,PyBundle.message("sdk.gen.updating.skels"),false){
          @Override public void run(          @NotNull ProgressIndicator indicator){
            try {
              final String skeletonsPath=getSkeletonsPath(PathManager.getSystemPath(),sdk.getHomePath());
              PythonSdkUpdater.updateSdk(project,ownerComponent,sdk,skeletonsPath);
            }
 catch (            InvalidSdkException e) {
              if (isRemote(sdk)) {
                notifyRemoteSdkSkeletonsFail(e,new Runnable(){
                  @Override public void run(){
                    setupSdkPaths(project,ownerComponent,sdk,sdkModificator);
                  }
                }
);
              }
 else               if (!isInvalid(sdk)) {
                LOG.error(e);
              }
            }
          }
        }
);
      }
    }
);
  }
  return sdkPathsUpdated;
}
