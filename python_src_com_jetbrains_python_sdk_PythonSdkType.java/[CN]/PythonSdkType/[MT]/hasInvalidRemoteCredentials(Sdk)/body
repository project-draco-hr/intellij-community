{
  if (PySdkUtil.isRemote(sdk)) {
    final Ref<Boolean> result=Ref.create(false);
    ((PyRemoteSdkAdditionalDataBase)sdk.getSdkAdditionalData()).switchOnConnectionType(new LanguageCaseCollector<PyCredentialsContribution>(){
      @Override protected void processLanguageContribution(      PyCredentialsContribution languageContribution,      Object credentials){
        result.set(!languageContribution.isValid(credentials));
      }
    }
.collectCases(PyCredentialsContribution.class,new CredentialsCase.Vagrant(){
      @Override public void process(      VagrantBasedCredentialsHolder cred){
        result.set(StringUtil.isEmpty(cred.getVagrantFolder()));
      }
    }
));
    return result.get();
  }
  return false;
}
