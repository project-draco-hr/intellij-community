{
  final String binaryPath=getInterpreterPath(sdkHome);
  if (binaryPath == null) {
    return null;
  }
  final boolean isJython=isJythonSdkHome(sdkHome);
  @NonNls String version_regexp, version_opt;
  if (isJython) {
    version_regexp="(Jython \\S+) on .*";
    version_opt="--version";
  }
 else {
    version_regexp="(Python \\S+).*";
    version_opt="-V";
  }
  Pattern pattern=Pattern.compile(version_regexp);
  String run_dir=new File(binaryPath).getParent();
  final ProcessOutput process_output=SdkUtil.getProcessOutput(run_dir,new String[]{binaryPath,version_opt});
  if (process_output.getExitCode() != 0) {
    LOG.error(process_output.getStderr() + " (exit code " + process_output.getExitCode()+ ")");
  }
  String version=SdkUtil.getFirstMatch(process_output.getStderrLines(),pattern);
  return version;
}
