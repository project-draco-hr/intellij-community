{
  @NonNls final String PYTHON_STR="python";
  TreeSet<String> candidates=new TreeSet<String>();
  if (SystemInfo.isWindows) {
    VirtualFile rootDir=LocalFileSystem.getInstance().findFileByPath("C:\\");
    if (rootDir != null) {
      VirtualFile[] topLevelDirs=rootDir.getChildren();
      for (      VirtualFile dir : topLevelDirs) {
        if (dir.isDirectory() && dir.getName().toLowerCase().startsWith(PYTHON_STR)) {
          candidates.add(dir.getPath());
        }
      }
    }
  }
 else   if (SystemInfo.isLinux) {
    VirtualFile rootDir=LocalFileSystem.getInstance().findFileByPath("/usr/lib");
    if (rootDir != null) {
      VirtualFile[] suspect_dirs=rootDir.getChildren();
      for (      VirtualFile dir : suspect_dirs) {
        if (dir.isDirectory() && dir.getName().startsWith(PYTHON_STR)) {
          candidates.add(dir.getPath());
        }
      }
    }
  }
 else   if (SystemInfo.isMac) {
    final String pythonPath="/Library/Frameworks/Python.framework/Versions/Current/";
    if (new File(pythonPath).exists()) {
      return pythonPath;
    }
    return "/System/Library/Frameworks/Python.framework/Versions/Current/";
  }
  if (candidates.size() > 0) {
    String[] candidateArray=ArrayUtil.toStringArray(candidates);
    return candidateArray[candidateArray.length - 1];
  }
  return null;
}
