{
  final Map<String,List<String>> errors=new TreeMap<String,List<String>>();
  final List<String> failed_sdks=new SmartList<String>();
  final ProgressIndicator indicator=ProgressManager.getInstance().getProgressIndicator();
  final List<Sdk> sdkList=getAllSdks();
  List<String> sdk_errors;
  Ref<Boolean> migration_flag=new Ref<Boolean>(false);
  for (  Sdk sdk : sdkList) {
    final String skeletonsPath=findSkeletonsPath(sdk);
    final String homePath=sdk.getHomePath();
    if (skeletonsPath == null) {
      LOG.info("Could not find skeletons path for SDK path " + homePath);
    }
 else {
      LOG.info("Refreshing skeletons for " + homePath);
      try {
        SkeletonVersionChecker checker=new SkeletonVersionChecker(0);
        sdk_errors=regenerateSkeletons(indicator,sdk,skeletonsPath,checker,migration_flag);
        if (sdk_errors.size() > 0) {
          String sdk_name=sdk.getName();
          List<String> known_errors=errors.get(sdk_name);
          if (known_errors == null)           errors.put(sdk_name,sdk_errors);
 else           known_errors.addAll(sdk_errors);
        }
      }
 catch (      InvalidSdkException ignore) {
        failed_sdks.add(sdk.getName());
      }
    }
  }
  if (failed_sdks.size() > 0 || errors.size() > 0) {
    int module_errors=0;
    for (    String sdk_name : errors.keySet())     module_errors+=errors.get(sdk_name).size();
    String message;
    if (failed_sdks.size() > 0) {
      message=String.format("%d modules failed in %d SDKs, %d SDKs failed <i>completely</i>. <a href='#'>Details...</a>",module_errors,errors.size(),failed_sdks.size());
    }
 else {
      message=String.format("%d modules failed in %d SDKs. <a href='#'>Details...</a>",module_errors,errors.size());
    }
    Notifications.Bus.notify(new Notification("Skeletons","Some skeletons failed to generate",message,NotificationType.WARNING,new NotificationListener(){
      @Override public void hyperlinkUpdate(      @NotNull Notification notification,      @NotNull HyperlinkEvent event){
        new SkeletonErrorsDialog(errors,failed_sdks).setVisible(true);
      }
    }
));
  }
}
