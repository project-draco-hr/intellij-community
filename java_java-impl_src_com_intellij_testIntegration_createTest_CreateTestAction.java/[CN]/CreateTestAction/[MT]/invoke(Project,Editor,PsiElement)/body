{
  final Module srcModule=ModuleUtilCore.findModuleForPsiElement(element);
  final PsiClass srcClass=getContainingClass(element);
  if (srcClass == null)   return;
  PsiDirectory srcDir=element.getContainingFile().getContainingDirectory();
  PsiPackage srcPackage=JavaDirectoryService.getInstance().getPackage(srcDir);
  final PropertiesComponent propertiesComponent=PropertiesComponent.getInstance();
  final HashSet<VirtualFile> testFolders=new HashSet<VirtualFile>();
  checkForTestRoots(srcModule,testFolders);
  if (testFolders.isEmpty() && !propertiesComponent.getBoolean(CREATE_TEST_IN_THE_SAME_ROOT,false)) {
    if (Messages.showOkCancelDialog(project,"Create test in the same source root?","No Test Roots Found",Messages.getQuestionIcon()) != Messages.OK) {
      return;
    }
    propertiesComponent.setValue(CREATE_TEST_IN_THE_SAME_ROOT,String.valueOf(true));
  }
  final CreateTestDialog d=createTestDialog(project,srcModule,srcClass,srcPackage);
  if (!d.showAndGet()) {
    return;
  }
  CommandProcessor.getInstance().executeCommand(project,new Runnable(){
    @Override public void run(){
      TestFramework framework=d.getSelectedTestFrameworkDescriptor();
      final TestGenerator generator=TestGenerators.INSTANCE.forLanguage(framework.getLanguage());
      DumbService.getInstance(project).withAlternativeResolveEnabled(new Runnable(){
        @Override public void run(){
          generator.generateTest(project,d);
        }
      }
);
    }
  }
,CodeInsightBundle.message("intention.create.test"),this);
}
