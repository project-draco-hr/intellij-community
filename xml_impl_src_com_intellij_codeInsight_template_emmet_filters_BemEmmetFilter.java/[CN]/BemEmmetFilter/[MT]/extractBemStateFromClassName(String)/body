{
  final BemState result=new BemState();
  if (className.contains(ELEMENT_SEPARATOR)) {
    final Iterator<String> elementsIterator=ELEMENTS_SPLITTER.split(className).iterator();
    result.setBlock(elementsIterator.next());
    final Collection<String> elementParts=newLinkedList();
    while (elementsIterator.hasNext()) {
      final String elementPart=elementsIterator.next();
      if (!elementsIterator.hasNext()) {
        final List<String> elementModifiers=newArrayList(MODIFIERS_SPLITTER.split(elementPart));
        elementParts.add(getFirst(elementModifiers,null));
        if (elementModifiers.size() > 1) {
          result.setModifier(getLast(elementModifiers,""));
        }
      }
 else {
        elementParts.add(elementPart);
      }
    }
    result.setElement(ELEMENTS_JOINER.join(elementParts));
  }
 else   if (className.contains(MODIFIER_SEPARATOR)) {
    final Iterable<String> blockModifiers=MODIFIERS_SPLITTER.split(className);
    result.setBlock(getFirst(blockModifiers,""));
    result.setModifier(getLast(blockModifiers,""));
  }
  return result;
}
