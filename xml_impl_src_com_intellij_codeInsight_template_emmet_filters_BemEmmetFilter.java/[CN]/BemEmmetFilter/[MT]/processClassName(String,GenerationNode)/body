{
  className=fillWithBemElements(className,node);
  className=fillWithBemModifiers(className,node);
  BemState nodeBemState=BEM_STATE.get(node);
  BemState bemState=extractBemStateFromClassName(className);
  List<String> result=newLinkedList();
  if (!bemState.isEmpty()) {
    String nodeBlockValue=nodeBemState != null ? nodeBemState.getBlock() : null;
    String block=bemState.getBlock();
    if (StringUtil.isEmpty(block)) {
      block=StringUtil.notNullize(nodeBlockValue);
      bemState.setBlock(block);
    }
    String prefix=block;
    String element=bemState.getElement();
    if (StringUtil.isNotEmpty(element)) {
      prefix+=ELEMENT_SEPARATOR + element;
    }
    result.add(prefix);
    String modifier=bemState.getModifier();
    if (StringUtil.isNotEmpty(modifier)) {
      result.add(prefix + MODIFIER_SEPARATOR + modifier);
    }
    BemState newNodeBemState=bemState.copy();
    if (StringUtil.isNotEmpty(nodeBlockValue) && StringUtil.isEmpty(modifier)) {
      newNodeBemState.setBlock(nodeBlockValue);
    }
    BEM_STATE.set(node,newNodeBemState);
  }
 else {
    result.add(className);
  }
  return result;
}
