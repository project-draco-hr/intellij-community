{
  final SvnVcs vcs=SvnVcs.getInstance(myProject);
  try {
    myBeforeRevisionValue=getBeforeRevisionValue(myChange,vcs);
    myAfterRevision=getAfterRevisionValue(myChange,vcs);
    myBeforeContent=getPropertyList(vcs,myChange.getBeforeRevision(),myBeforeRevisionValue);
    indicator.checkCanceled();
    myAfterContent=getPropertyList(vcs,myChange.getAfterRevision(),myAfterRevision);
  }
 catch (  SVNException exc) {
    myException=exc;
  }
catch (  VcsException exc) {
    myException=exc;
  }
  SwingUtilities.invokeLater(new Runnable(){
    public void run(){
      if (myException != null) {
        Messages.showErrorDialog(myException.getMessage(),myErrorTitle);
        return;
      }
      if (myBeforeContent != null && myAfterContent != null && myBeforeRevisionValue != null && myAfterRevision != null) {
        SvnPropertiesDiffRequest diffRequest;
        if (compareRevisions(myBeforeRevisionValue,myAfterRevision) > 0) {
          diffRequest=new SvnPropertiesDiffRequest(getDiffWindowTitle(myChange),new PropertyContent(myAfterContent),new PropertyContent(myBeforeContent),revisionToString(myAfterRevision),revisionToString(myBeforeRevisionValue));
        }
 else {
          diffRequest=new SvnPropertiesDiffRequest(getDiffWindowTitle(myChange),new PropertyContent(myBeforeContent),new PropertyContent(myAfterContent),revisionToString(myBeforeRevisionValue),revisionToString(myAfterRevision));
        }
        DiffManager.getInstance().showDiff(myProject,diffRequest);
      }
    }
  }
);
}
