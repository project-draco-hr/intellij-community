{
  if (element instanceof PsiComment)   return null;
  PsiFile containingFile=element.getContainingFile();
  List<PsiLanguageInjectionHost> otherHosts=new SmartList<PsiLanguageInjectionHost>();
  boolean commentOrSpaces=false;
  PsiElement prev=element, e=prevOrParent(element,containingFile);
  for (int counter=0; e != null && counter < 100; prev=e, e=prevOrParent(e,containingFile), counter++) {
    if (e instanceof PsiComment) {
      commentOrSpaces=true;
      PsiComment comment=(PsiComment)e;
      if (!checkDepth(otherHosts,element,comment))       continue;
      T value=processor.fun(comment);
      if (value != null)       return value;
    }
 else     if (StringUtil.isEmptyOrSpaces(e.getText())) {
      commentOrSpaces=true;
    }
 else {
      commentOrSpaces=false;
      if (e instanceof PsiLanguageInjectionHost) {
        otherHosts.add((PsiLanguageInjectionHost)e);
      }
    }
  }
  if (commentOrSpaces) {
    for (e=prevOrParent(prev,containingFile); e != null; e=e.getPrevSibling()) {
      if (e instanceof PsiComment) {
        PsiComment comment=(PsiComment)e;
        if (!checkDepth(otherHosts,element,comment))         continue;
        T value=processor.fun(comment);
        if (value != null)         return value;
      }
 else       if (!StringUtil.isEmptyOrSpaces(e.getText())) {
        break;
      }
    }
  }
  return null;
}
