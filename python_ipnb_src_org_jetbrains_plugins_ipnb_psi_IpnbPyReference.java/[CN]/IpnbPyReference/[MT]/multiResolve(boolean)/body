{
  ResolveResult[] results=super.multiResolve(incompleteCode);
  if (results.length == 0) {
    PsiFile file=myElement.getContainingFile();
    if (file instanceof IpnbPyFragment) {
      final IpnbFilePanel panel=((IpnbPyFragment)file).getFilePanel();
      final List<IpnbEditablePanel> panels=panel.getIpnbPanels();
      final String referencedName=myElement.getReferencedName();
      if (referencedName == null)       return ResolveResult.EMPTY_ARRAY;
      for (      IpnbEditablePanel editablePanel : panels) {
        if (!(editablePanel instanceof IpnbCodePanel))         continue;
        final Editor editor=((IpnbCodePanel)editablePanel).getEditor();
        final IpnbPyFragment psiFile=(IpnbPyFragment)PsiDocumentManager.getInstance(myElement.getProject()).getPsiFile(editor.getDocument());
        if (psiFile == null)         continue;
        final PyResolveProcessor processor=new PyResolveProcessor(referencedName);
        PyResolveUtil.scopeCrawlUp(processor,psiFile,referencedName,psiFile);
        final List<RatedResolveResult> resultList=getResultsFromProcessor(referencedName,processor,psiFile,psiFile);
        if (resultList.size() > 0) {
          List<RatedResolveResult> ret=RatedResolveResult.sorted(resultList);
          return ret.toArray(new RatedResolveResult[ret.size()]);
        }
      }
    }
  }
  return results;
}
