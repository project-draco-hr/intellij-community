{
  Rectangle bounds=tree.getPathBounds(tree.getPathForRow(row));
  invalidate();
  myTextRenderer.getTreeCellRendererComponent(tree,value,selected,expanded,leaf,row,hasFocus);
  if (!(value instanceof SingleRepositoryNode)) {
    RepositoryNode node=(RepositoryNode)value;
    myRepositoryCheckbox.setSelected(node.isChecked());
    myRepositoryCheckbox.setVisible(true);
    if (myCheckBoxLoadingIconGapH < 0) {
      myTextRenderer.append("");
      myTextRenderer.appendFixedTextFragmentWidth(calculateRendererShiftH(myTextRenderer));
    }
    myTextRenderer.append(getRepositoryName(),SimpleTextAttributes.GRAY_ATTRIBUTES);
    myTextRenderer.appendFixedTextFragmentWidth(120);
  }
 else {
    SingleRepositoryNode singleRepositoryNode=((SingleRepositoryNode)value);
    myRepositoryCheckbox.setVisible(false);
    myTextRenderer.setIcon(singleRepositoryNode.getEmptyIcon());
    myTextRenderer.setIconOnTheRight(false);
    myTextRenderer.append("");
  }
  myTextRenderer.append(getSourceName(),SimpleTextAttributes.REGULAR_ATTRIBUTES);
  myTextRenderer.append(getArrow(),SimpleTextAttributes.REGULAR_ATTRIBUTES);
  if (bounds != null) {
    setPreferredSize(new Dimension(tree.getVisibleRect().width - bounds.x,bounds.height));
  }
  myDestPushTargetPanelComponent.requestFocus();
  revalidate();
  return this;
}
