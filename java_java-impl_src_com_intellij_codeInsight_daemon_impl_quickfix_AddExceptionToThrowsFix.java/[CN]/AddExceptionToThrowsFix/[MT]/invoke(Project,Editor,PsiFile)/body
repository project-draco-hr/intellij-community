{
  if (!FileModificationService.getInstance().prepareFileForWrite(file))   return;
  PsiDocumentManager.getInstance(project).commitAllDocuments();
  PsiElement targetElement=null;
  PsiMethod targetMethod=null;
  final PsiLambdaExpression lambdaExpression=PsiTreeUtil.getParentOfType(myWrongElement,PsiLambdaExpression.class);
  if (lambdaExpression != null) {
    targetMethod=LambdaUtil.getFunctionalInterfaceMethod(lambdaExpression);
    targetElement=lambdaExpression.getBody();
  }
  if (targetElement == null && targetMethod == null) {
    targetMethod=PsiTreeUtil.getParentOfType(myWrongElement,PsiMethod.class);
    targetElement=targetMethod;
  }
  List<PsiClassType> exceptions=getUnhandledExceptions(myWrongElement,targetElement,targetMethod);
  if (exceptions == null || targetMethod == null)   return;
  Set<PsiClassType> unhandledExceptions=new THashSet<PsiClassType>(exceptions);
  addExceptionsToThrowsList(project,targetMethod,unhandledExceptions);
}
