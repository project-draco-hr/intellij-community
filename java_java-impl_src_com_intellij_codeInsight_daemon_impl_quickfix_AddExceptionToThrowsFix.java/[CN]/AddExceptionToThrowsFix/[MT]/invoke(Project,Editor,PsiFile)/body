{
  if (!FileModificationService.getInstance().prepareFileForWrite(file))   return;
  PsiDocumentManager.getInstance(project).commitAllDocuments();
  PsiElement targetElement=null;
  PsiMethod targetMethod=null;
  final PsiElement psiElement=PsiTreeUtil.getParentOfType(myWrongElement,PsiLambdaExpression.class,PsiMethod.class);
  if (psiElement instanceof PsiLambdaExpression) {
    targetMethod=LambdaUtil.getFunctionalInterfaceMethod(psiElement);
    targetElement=((PsiLambdaExpression)psiElement).getBody();
  }
 else   if (psiElement instanceof PsiMethod) {
    targetMethod=(PsiMethod)psiElement;
    targetElement=targetMethod;
  }
  List<PsiClassType> exceptions=getUnhandledExceptions(myWrongElement,targetElement,targetMethod);
  if (exceptions == null || targetMethod == null)   return;
  Set<PsiClassType> unhandledExceptions=new THashSet<PsiClassType>(exceptions);
  addExceptionsToThrowsList(project,targetMethod,unhandledExceptions);
}
