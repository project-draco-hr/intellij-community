{
  PsiElement targetElement=null;
  PsiMethod targetMethod=null;
  final PsiElement psiElement=myWrongElement instanceof PsiMethodReferenceExpression ? myWrongElement : PsiTreeUtil.getParentOfType(myWrongElement,PsiFunctionalExpression.class,PsiMethod.class);
  if (psiElement instanceof PsiFunctionalExpression) {
    targetMethod=LambdaUtil.getFunctionalInterfaceMethod(psiElement);
    targetElement=psiElement instanceof PsiLambdaExpression ? ((PsiLambdaExpression)psiElement).getBody() : psiElement;
  }
 else   if (psiElement instanceof PsiMethod) {
    targetMethod=(PsiMethod)psiElement;
    targetElement=psiElement;
  }
  if (targetElement == null || targetMethod == null || !targetMethod.getThrowsList().isPhysical())   return null;
  List<PsiClassType> exceptions=getUnhandledExceptions(myWrongElement,targetElement,targetMethod);
  if (exceptions == null || exceptions.isEmpty())   return null;
  unhandled.addAll(exceptions);
  return targetMethod;
}
