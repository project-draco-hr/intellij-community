{
  Dimension pref;
  if (cachedPreferredSize == null) {
    pref=cachedPreferredSize=getPreferredSize();
  }
 else {
    pref=cachedPreferredSize;
  }
  pref.width=Math.max(visibleRect.width,pref.width);
  final Rectangle bounds=getTree().getRowBounds(row);
  int y=bounds == null ? 0 : bounds.y;
  TextRange vis=TextRange.from(Math.max(0,visibleRect.y - pref.height),visibleRect.height + pref.height * 2);
  boolean inside=vis.contains(y);
  if (inside) {
    return RowLocation.INSIDE_VISIBLE_RECT;
  }
  return y < vis.getStartOffset() ? RowLocation.BEFORE_VISIBLE_RECT : RowLocation.AFTER_VISIBLE_RECT;
}
