{
  String valueName=myValue.getName();
  final CCProjectService service=CCProjectService.getInstance(myProject);
  final Course course=service.getCourse();
  if (course == null)   return;
  if (myProject.getBaseDir().equals(myValue.getVirtualFile())) {
    data.clearText();
    data.setIcon(InteractiveLearningIcons.Course);
    data.addText(course.getName(),SimpleTextAttributes.REGULAR_ATTRIBUTES);
    data.addText(" (" + valueName + ")",SimpleTextAttributes.GRAYED_ATTRIBUTES);
    return;
  }
  final Lesson lesson=course.getLesson(valueName);
  if (lesson != null) {
    data.clearText();
    data.setIcon(InteractiveLearningIcons.Lesson);
    data.addText(lesson.getName(),SimpleTextAttributes.REGULAR_ATTRIBUTES);
    return;
  }
 else {
    final PsiDirectory parentDir=myValue.getParentDirectory();
    if (parentDir != null) {
      final Lesson parentLesson=course.getLesson(parentDir.getName());
      if (parentLesson != null) {
        final Task task=parentLesson.getTask(valueName);
        if (task != null) {
          data.clearText();
          data.setIcon(InteractiveLearningIcons.Task);
          data.addText(task.getName(),SimpleTextAttributes.REGULAR_ATTRIBUTES);
          return;
        }
      }
    }
  }
  data.setPresentableText(valueName);
}
