{
  Object obj;
  String className=stub.getClassName();
  try {
    Class<?> aClass=Class.forName(className,true,stub.getLoader());
    obj=ReflectionUtil.newInstance(aClass);
  }
 catch (  ClassNotFoundException e) {
    PluginId pluginId=stub.getPluginId();
    if (pluginId != null) {
      throw new PluginException("class with name \"" + className + "\" not found",e,pluginId);
    }
 else {
      throw new IllegalStateException("class with name \"" + className + "\" not found");
    }
  }
catch (  UnsupportedClassVersionError e) {
    PluginId pluginId=stub.getPluginId();
    if (pluginId != null) {
      throw new PluginException(e,pluginId);
    }
 else {
      throw new IllegalStateException(e);
    }
  }
catch (  Exception e) {
    PluginId pluginId=stub.getPluginId();
    if (pluginId != null) {
      throw new PluginException("cannot create class \"" + className + "\"",e,pluginId);
    }
 else {
      throw new IllegalStateException("cannot create class \"" + className + "\"",e);
    }
  }
  if (!(obj instanceof AnAction)) {
    throw new IllegalStateException("class with name '" + className + "' must be an instance of '"+ AnAction.class.getName()+ "'; got "+ obj);
  }
  AnAction anAction=(AnAction)obj;
  stub.initAction(anAction);
  if (StringUtil.isNotEmpty(stub.getText())) {
    anAction.getTemplatePresentation().setText(stub.getText());
  }
  String iconPath=stub.getIconPath();
  if (iconPath != null) {
    Class<? extends AnAction> actionClass=anAction.getClass();
    setIconFromClass(actionClass,actionClass.getClassLoader(),iconPath,anAction.getTemplatePresentation(),stub.getPluginId());
  }
  return anAction;
}
