{
  final List<String> cmdLine=new LinkedList<String>();
  WarningReceiver warningReceiver=new WarningReceiver();
  SocketServer promptServer=new SocketServer(new PromptReceiver(new HgDeleteModifyPromptHandler()));
  SocketServer warningServer=new SocketServer(warningReceiver);
  try {
    int promptPort=promptServer.start();
    int warningPort=warningServer.start();
    cmdLine.add("--config");
    cmdLine.add("extensions.hg4ideapromptextension=" + myVcs.getPromptHooksExtensionFile().getAbsolutePath());
    cmdLine.add("--config");
    cmdLine.add("hg4ideaprompt.port=" + promptPort);
    cmdLine.add("--config");
    cmdLine.add("hg4ideawarn.port=" + warningPort);
  }
 catch (  IOException e) {
    showError(e);
    LOG.info("IOException during preparing command",e);
    promptServer.stop();
    warningServer.stop();
    return null;
  }
  if (arguments != null && arguments.size() != 0) {
    cmdLine.addAll(arguments);
  }
  HgCommandResult result=super.executeInCurrentThread(repo,operation,cmdLine);
  promptServer.stop();
  warningServer.stop();
  String warnings=warningReceiver.getWarnings();
  result.setWarnings(warnings);
  return result;
}
