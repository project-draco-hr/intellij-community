{
  String[] split=input.split(" ");
  if (split.length != 2) {
    throw new IllegalArgumentException("input have " + split.length + " parts");
  }
  Hash hash=Hash.build(split[0]);
  String longPathRef=split[1];
  if (longPathRef.equals("HEAD")) {
    return new Ref(hash,"HEAD",Ref.Type.LOCAL_BRANCH);
  }
  if (longPathRef.equals("refs/stash")) {
    return new Ref(hash,"stash",Ref.Type.STASH);
  }
  String name;
  if ((name=refName(longPathRef,"refs/heads/")) != null) {
    return new Ref(hash,name,Ref.Type.LOCAL_BRANCH);
  }
  if ((name=refName(longPathRef,"refs/remotes/")) != null) {
    return new Ref(hash,name,Ref.Type.REMOTE_BRANCH);
  }
  if ((name=refName(longPathRef,"refs/tags/")) != null) {
    return new Ref(hash,name,Ref.Type.TAG);
  }
  throw new IllegalArgumentException("Illegal path ref: " + longPathRef);
}
