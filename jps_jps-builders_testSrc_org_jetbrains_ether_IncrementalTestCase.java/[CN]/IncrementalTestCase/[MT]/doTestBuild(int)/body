{
  StringBuilder log=new StringBuilder();
  String rootPath=FileUtil.toSystemIndependentName(workDir.getAbsolutePath()) + "/";
  final ProjectDescriptor pd=createProjectDescriptor(new BuildLoggingManager(new StringProjectBuilderLogger(rootPath,log)));
  try {
    doBuild(pd,CompileScopeTestBuilder.rebuild().allModules()).assertSuccessful();
    BuildResult result=null;
    for (int idx=0; idx < makesCount; idx++) {
      modify(idx);
      result=doBuild(pd,CompileScopeTestBuilder.make().allModules());
    }
    assertNotNull(result);
    File logFile=new File(baseDir.getAbsolutePath() + ".log");
    if (!logFile.exists()) {
      logFile=new File(baseDir,"build.log");
    }
    final String expected=StringUtil.convertLineSeparators(FileUtil.loadFile(logFile));
    final String actual=log.toString();
    assertEquals(expected,actual);
    if (result.isSuccessful()) {
      checkMappingsAreSameAfterRebuild(result);
    }
    return result;
  }
 catch (  IOException e) {
    throw new RuntimeException(e);
  }
 finally {
    pd.release();
  }
}
