{
  XDebugSessionImpl.NOTIFICATION_GROUP.createNotification(DebuggerBundle.message("status.thread.blocked.by",blockedThread.name(),blockingThread.name()),DebuggerBundle.message("status.thread.blocked.by.resume",blockingThread.name()),NotificationType.INFORMATION,new NotificationListener(){
    @Override public void hyperlinkUpdate(    @NotNull Notification notification,    @NotNull HyperlinkEvent event){
      if (event.getEventType() == HyperlinkEvent.EventType.ACTIVATED) {
        notification.expire();
        process.getManagerThread().schedule(new DebuggerCommandImpl(){
          @Override protected void action() throws Exception {
            ThreadReferenceProxyImpl threadProxy=process.getVirtualMachineProxy().getThreadReferenceProxy(blockingThread);
            SuspendContextImpl suspendingContext=SuspendManagerUtil.getSuspendingContext(process.getSuspendManager(),threadProxy);
            process.getManagerThread().invoke(process.createResumeThreadCommand(suspendingContext,threadProxy));
          }
        }
);
      }
    }
  }
).notify(process.getProject());
}
