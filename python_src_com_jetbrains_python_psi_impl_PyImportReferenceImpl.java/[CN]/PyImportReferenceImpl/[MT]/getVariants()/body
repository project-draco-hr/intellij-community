{
  PyImportElement importElement=PsiTreeUtil.getParentOfType(myElement,PyImportElement.class);
  if (importElement != null) {
    PsiErrorElement prevError=PsiTreeUtil.getPrevSiblingOfType(importElement,PsiErrorElement.class);
    if (prevError != null) {
      return ArrayUtil.EMPTY_OBJECT_ARRAY;
    }
  }
  PyExpression qualifier=myElement.getQualifier();
  if (qualifier != null) {
    PyType type=qualifier.getType(TypeEvalContext.fast());
    if (type != null) {
      Object[] variants=getTypeCompletionVariants(myElement,type);
      if (!alreadyHasImportKeyword()) {
        for (int i=0; i < variants.length; i+=1) {
          Object item=variants[i];
          if (item instanceof LookupElementBuilder) {
            variants[i]=((LookupElementBuilder)item).setInsertHandler(ImportKeywordHandler.INSTANCE);
          }
 else           if (item instanceof PsiNamedElement) {
            final PsiNamedElement element=(PsiNamedElement)item;
            variants[i]=LookupElementBuilder.create(element.getName()).setIcon(element.getIcon(0)).setInsertHandler(ImportKeywordHandler.INSTANCE);
          }
        }
      }
      return variants;
    }
 else {
      return ArrayUtil.EMPTY_OBJECT_ARRAY;
    }
  }
 else {
    return new ImportVariantCollector().execute();
  }
}
