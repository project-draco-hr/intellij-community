{
  super.buildFinished(context);
  if (!isEnabled()) {
    return;
  }
  if (JavaBuilderUtil.isForcedRecompilationAllJavaModules(context)) {
    final long ms=System.currentTimeMillis();
    final int[] counter={0};
    iterateProjectClassFiles(new Processor<File>(){
      @SuppressWarnings("ALL") @Override public boolean process(      final File file){
        if (file.getName().endsWith(".class")) {
          counter[0]++;
          final ClassReader inputData;
          FileInputStream is=null;
          try {
            is=new FileInputStream(file);
            inputData=new ClassReader(is);
          }
 catch (          final IOException e) {
            LOG.error("couldn't open file " + file.getAbsolutePath(),e);
            return true;
          }
 finally {
            if (is != null) {
              try {
                is.close();
              }
 catch (              final IOException e) {
                LOG.error("couldn't open file " + file.getAbsolutePath(),e);
                return true;
              }
            }
          }
          context.processMessage(new ProgressMessage(PROGRESS_MESSAGE + file.getName()));
          for (          final ClassFilesIndexWriter index : myNewIndexWriters) {
            index.update(file.getPath(),inputData);
          }
        }
        return true;
      }
    }
,context);
    for (    final ClassFilesIndexWriter index : myNewIndexWriters) {
      index.close(context);
    }
    LOG.info("new indices created on " + counter[0] + " class files in "+ (System.currentTimeMillis() - ms)+ " ms");
  }
  for (  final ClassFilesIndexWriter index : myAlreadyExistIndexWriters) {
    index.close(context);
  }
  LOG.info("class files indexing finished");
}
