{
  final PyExpression qualifier=node.getQualifier();
  if (qualifier != null) {
    final PyType type=myTypeEvalContext.getType(qualifier);
    if (type instanceof PyClassType) {
      final PyClass cls=((PyClassType)type).getPyClass();
      final String name=node.getName();
      if (name != null) {
        final Pair<PyClass,String> key=Pair.create(cls,name);
        final Property property;
        if (myPropertyCache.containsKey(key)) {
          property=myPropertyCache.get(key);
        }
 else {
          property=cls.findProperty(name,true,null);
        }
        myPropertyCache.put(key,property);
        if (property != null) {
          final AccessDirection dir=AccessDirection.of(node);
          checkAccessor(node,name,dir,property);
          if (dir == AccessDirection.READ) {
            final PsiElement parent=node.getParent();
            if (parent instanceof PyAugAssignmentStatement && ((PyAugAssignmentStatement)parent).getTarget() == node) {
              checkAccessor(node,name,AccessDirection.WRITE,property);
            }
          }
        }
      }
    }
  }
}
