{
  UIUtil.invokeAndWaitIfNeeded(new Runnable(){
    @Override public void run(){
      int N=1000;
      for (int i=0; i < N; i++) {
        UsefulTestCase.assertEmpty(LaterInvocator.getCurrentModalEntities());
        LaterInvocator.enterModal(myWindow2);
        TestCase.assertTrue(LaterInvocator.isInModalContext());
        TestCase.assertEquals(1,LaterInvocator.getCurrentModalEntities().length);
        LaterInvocator.invokeLater(new Runnable(){
          @Override public void run(){
            TestCase.assertTrue(!LaterInvocator.isInModalContext());
          }
          public String toString(){
            return "ass2";
          }
        }
,ModalityState.NON_MODAL);
        LaterInvocator.invokeLater(ENTER_MODAL,ModalityState.NON_MODAL);
        LaterInvocator.invokeLater(new MyRunnable("1"),ModalityState.NON_MODAL);
        LaterInvocator.leaveModal(myWindow2);
        flushSwingQueue();
        if (!LaterInvocator.isInModalContext()) {
          TestCase.fail();
        }
        checkOrder(0);
        SwingUtilities.invokeLater(LEAVE_MODAL);
        flushSwingQueue();
        TestCase.assertTrue(!LaterInvocator.isInModalContext());
        checkOrder(1);
        LaterInvocator.leaveAllModals();
        myOrder.clear();
        flushSwingQueue();
      }
    }
  }
);
}
