{
  myOrder.clear();
  final boolean[] inModalState={true};
  ApplicationManager.getApplication().invokeLater(new Runnable(){
    @Override public void run(){
synchronized (inModalState) {
        inModalState[0]=false;
      }
    }
  }
,ModalityState.NON_MODAL);
  flushSwingQueue();
  flushSwingQueue();
  UIUtil.invokeAndWaitIfNeeded(new Runnable(){
    @Override public void run(){
      while (true) {
synchronized (inModalState) {
          if (!inModalState[0])           break;
        }
        flushSwingQueue();
synchronized (inModalState) {
          if (inModalState[0] && LaterInvocator.isInModalContext())           LaterInvocator.leaveAllModals();
        }
      }
    }
  }
);
  final Exception[] exception={null};
  UIUtil.invokeAndWaitIfNeeded(new Runnable(){
    @Override public void run(){
      try {
        LaterInvocatorTest.super.tearDown();
      }
 catch (      Exception e) {
        exception[0]=e;
      }
    }
    public String toString(){
      return "super teardown";
    }
  }
);
  if (exception[0] != null)   throw exception[0];
}
