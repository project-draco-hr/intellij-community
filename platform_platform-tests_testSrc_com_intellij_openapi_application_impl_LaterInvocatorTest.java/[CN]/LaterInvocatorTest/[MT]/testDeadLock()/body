{
  final Object lock=new Object();
  final boolean[] started={false};
  final Thread thread=new Thread("later invokator test"){
    @Override public void run(){
synchronized (lock) {
        started[0]=true;
        ApplicationManager.getApplication().invokeLater(new MyRunnable("1"),ModalityState.NON_MODAL);
        lock.notifyAll();
      }
    }
  }
;
  UIUtil.invokeAndWaitIfNeeded(new Runnable(){
    @Override public void run(){
synchronized (LaterInvocatorTest.this) {
        blockSwingThread();
        ApplicationManager.getApplication().invokeLater(new Runnable(){
          @Override public void run(){
            thread.start();
            while (!started[0]) {
              try {
                Thread.sleep(5);
              }
 catch (              InterruptedException e) {
                TestCase.fail(e.getMessage());
              }
            }
synchronized (lock) {
              checkOrder(0);
            }
          }
        }
,ModalityState.NON_MODAL);
      }
      flushSwingQueue();
      flushSwingQueue();
      checkOrder(1);
    }
  }
);
}
