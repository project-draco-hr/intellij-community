{
  return new LiteLinearGraph(){
    @Override public int nodesCount(){
      return graph.nodesCount();
    }
    @NotNull @Override public List<Integer> getNodes(    final int nodeIndex,    final NodeFilter filter){
      return ContainerUtil.mapNotNull(graph.getAdjacentEdges(nodeIndex),new Function<GraphEdge,Integer>(){
        @Nullable @Override public Integer fun(        GraphEdge edge){
          if (isEdgeToDown(edge,nodeIndex) && filter.down)           return edge.getDownNodeIndex();
          if (isEdgeToUp(edge,nodeIndex) && filter.up)           return edge.getUpNodeIndex();
          return null;
        }
      }
);
    }
  }
;
}
