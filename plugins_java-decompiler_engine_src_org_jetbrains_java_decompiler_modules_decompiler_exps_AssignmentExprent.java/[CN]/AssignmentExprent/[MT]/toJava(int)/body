{
  VarType leftType=left.getExprType();
  VarType rightType=right.getExprType();
  boolean fieldInStatInit=false;
  if (left.type == Exprent.EXPRENT_FIELD) {
    FieldExprent field=(FieldExprent)left;
    ClassNode node=((ClassNode)DecompilerContext.getProperty(DecompilerContext.CURRENT_CLASS_NODE));
    if (node != null) {
      StructClass cl=node.classStruct;
      StructField fd=cl.getField(field.getName(),field.getDescriptor().descriptorString);
      if (fd != null && field.isStatic() && fd.hasModifier(CodeConstants.ACC_FINAL)) {
        fieldInStatInit=true;
      }
    }
  }
  StringBuilder buffer=new StringBuilder();
  if (fieldInStatInit) {
    buffer.append(((FieldExprent)left).getName());
  }
 else {
    buffer.append(left.toJava(indent));
  }
  String res=right.toJava(indent);
  if (condtype == CONDITION_NONE && !leftType.isSuperset(rightType) && (rightType.equals(VarType.VARTYPE_OBJECT) || leftType.type != CodeConstants.TYPE_OBJECT)) {
    if (right.getPrecedence() >= FunctionExprent.getPrecedence(FunctionExprent.FUNCTION_CAST)) {
      res="(" + res + ")";
    }
    res="(" + ExprProcessor.getCastTypeName(leftType) + ")"+ res;
  }
  buffer.append(condtype == CONDITION_NONE ? " = " : funceq[condtype]).append(res);
  return buffer.toString();
}
