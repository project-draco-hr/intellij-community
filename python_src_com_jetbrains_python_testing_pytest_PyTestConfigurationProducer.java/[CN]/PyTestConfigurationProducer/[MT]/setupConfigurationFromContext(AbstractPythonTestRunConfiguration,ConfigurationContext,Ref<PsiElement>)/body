{
  final PsiElement element=sourceElement.get();
  final Module module=ModuleUtilCore.findModuleForPsiElement(element);
  if (!(configuration instanceof PyTestRunConfiguration)) {
    return false;
  }
  if (module == null) {
    return false;
  }
  if (!(TestRunnerService.getInstance(module).getProjectConfiguration().equals(PythonTestConfigurationsModel.PY_TEST_NAME))) {
    return false;
  }
  final PsiFileSystemItem file=element instanceof PsiDirectory ? (PsiDirectory)element : element.getContainingFile();
  if (file == null) {
    return false;
  }
  final VirtualFile virtualFile=file.getVirtualFile();
  if (virtualFile == null) {
    return false;
  }
  if (file instanceof PyFile || file instanceof PsiDirectory) {
    final List<PyStatement> testCases=PyTestUtil.getPyTestCasesFromFile(file,TypeEvalContext.userInitiated(element.getProject(),element.getContainingFile()));
    if (testCases.isEmpty()) {
      return false;
    }
  }
 else {
    return false;
  }
  final Sdk sdk=PythonSdkType.findPythonSdk(context.getModule());
  if (sdk == null) {
    return false;
  }
  configuration.setUseModuleSdk(true);
  configuration.setModule(ModuleUtilCore.findModuleForPsiElement(element));
  ((PyTestRunConfiguration)configuration).setTestToRun(virtualFile.getPath());
  final String keywords=getKeywords(element,sdk);
  if (keywords != null) {
    ((PyTestRunConfiguration)configuration).useKeyword(true);
    ((PyTestRunConfiguration)configuration).setKeywords(keywords);
    configuration.setName("py.test in " + keywords);
  }
 else {
    configuration.setName("py.test in " + file.getName());
  }
  return true;
}
