{
  final PsiClass[] classes=ApplicationManager.getApplication().runReadAction(new Computable<PsiClass[]>(){
    public PsiClass[] compute(){
      return ((PsiClassOwner)sourceFile).getClasses();
    }
  }
);
  final Set<String> qNames=new HashSet<String>();
  for (  final JavaCoverageEngineExtension nameExtension : Extensions.getExtensions(JavaCoverageEngineExtension.EP_NAME)) {
    if (ApplicationManager.getApplication().runReadAction(new Computable<Boolean>(){
      public Boolean compute(){
        return nameExtension.suggestQualifiedName(sourceFile,classes,qNames);
      }
    }
)) {
      return qNames;
    }
  }
  for (  final PsiClass aClass : classes) {
    final String qName=ApplicationManager.getApplication().runReadAction(new Computable<String>(){
      @Nullable public String compute(){
        return aClass.getQualifiedName();
      }
    }
);
    if (qName == null)     continue;
    qNames.add(qName);
  }
  return qNames;
}
