{
  final PsiClass[] classes=ApplicationManager.getApplication().runReadAction(new Computable<PsiClass[]>(){
    public PsiClass[] compute(){
      return ((PsiClassOwner)sourceFile).getClasses();
    }
  }
);
  final Set<String> qNames=new HashSet<String>();
  for (  final PsiClass aClass : classes) {
    final String qName=ApplicationManager.getApplication().runReadAction(new Computable<String>(){
      @Nullable public String compute(){
        return aClass.getQualifiedName();
      }
    }
);
    if (qName == null)     continue;
    qNames.add(qName);
  }
  if (qNames.isEmpty()) {
    final VirtualFile virtualFile=sourceFile.getVirtualFile();
    if (virtualFile != null) {
      qNames.add(getQualifiedName(virtualFile,sourceFile));
    }
  }
  return qNames;
}
