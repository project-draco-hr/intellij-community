{
  if (classes.length <= 1)   return;
  PsiElement leaf=context.getElement().getFirstChild();
  final PsiProximityComparator proximityComparator=new PsiProximityComparator(leaf);
  Arrays.sort(classes,new Comparator<PsiClass>(){
    @Override public int compare(    PsiClass o1,    PsiClass o2){
      boolean deprecated1=o1.isDeprecated();
      boolean deprecated2=o2.isDeprecated();
      if (deprecated1 && !deprecated2)       return 1;
      if (!deprecated1 && deprecated2)       return -1;
      int compare=proximityComparator.compare(o1,o2);
      if (compare != 0)       return compare;
      String qname1=o1.getQualifiedName();
      String qname2=o2.getQualifiedName();
      if (qname1 == null || qname2 == null)       return 0;
      return qname1.compareToIgnoreCase(qname2);
    }
  }
);
}
