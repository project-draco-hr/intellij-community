{
  final RefElementContainer refElementDescriptor=(RefElementContainer)container;
  final RefEntity refElement=refElementDescriptor.getUserObject();
  InspectionToolPresentation presentation=context.getPresentation(toolWrapper);
  if (context.getUIOptions().SHOW_ONLY_DIFF && presentation.getElementStatus(refElement) == FileStatus.NOT_CHANGED)   return;
  if (toolWrapper instanceof LocalInspectionToolWrapper) {
    final CommonProblemDescriptor[] problems=refElementDescriptor.getProblemDescriptors();
    if (problems != null) {
      final RefElementNode elemNode=addNodeToParent(container,presentation,pNode);
      for (      CommonProblemDescriptor problem : problems) {
        if (context.getUIOptions().SHOW_ONLY_DIFF && presentation.getProblemStatus(problem) == FileStatus.NOT_CHANGED) {
          continue;
        }
        elemNode.add(new ProblemDescriptionNode(refElement,problem,toolWrapper));
        if (problems.length == 1) {
          elemNode.setProblem(problems[0]);
        }
      }
    }
  }
 else {
    if (canPackageRepeat) {
      final Set<RefEntity> currentElements=presentation.getContent().get(pNode.getPackageName());
      if (currentElements != null) {
        final Set<RefEntity> currentEntities=new HashSet<RefEntity>(currentElements);
        if (RefUtil.contains(refElement,currentEntities))         return;
      }
    }
    addNodeToParent(container,presentation,pNode);
  }
}
