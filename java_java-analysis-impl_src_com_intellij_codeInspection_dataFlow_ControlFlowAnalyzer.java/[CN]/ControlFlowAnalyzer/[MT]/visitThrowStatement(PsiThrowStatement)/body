{
  startElement(statement);
  PsiExpression exception=statement.getException();
  if (exception != null) {
    exception.accept(this);
    if (myCatchStack.isEmpty()) {
      addInstruction(new ReturnInstruction());
      finishElement(statement);
      return;
    }
    addConditionalRuntimeThrow();
    addInstruction(new DupInstruction());
    addInstruction(new PushInstruction(myFactory.getConstFactory().getNull(),null));
    addInstruction(new BinopInstruction(JavaTokenType.EQEQ,null,statement.getProject()));
    ConditionalGotoInstruction gotoInstruction=new ConditionalGotoInstruction(null,true,null);
    addInstruction(gotoInstruction);
    addInstruction(new PopInstruction());
    addInstruction(new PushInstruction(myExceptionHolder,null));
    addInstruction(new PushInstruction(myFactory.createTypeValue(myNpe,Nullness.NOT_NULL),null));
    addInstruction(new AssignInstruction(null));
    addInstruction(new PopInstruction());
    addThrowCode(false);
    gotoInstruction.setOffset(myCurrentFlow.getInstructionCount());
    addInstruction(new PushInstruction(myExceptionHolder,null));
    addInstruction(new SwapInstruction());
    addInstruction(new AssignInstruction(null));
    addInstruction(new PopInstruction());
    addThrowCode(false);
  }
  finishElement(statement);
}
