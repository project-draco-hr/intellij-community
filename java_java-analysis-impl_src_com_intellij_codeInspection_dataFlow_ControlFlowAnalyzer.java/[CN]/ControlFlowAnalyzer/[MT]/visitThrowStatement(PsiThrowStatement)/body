{
  startElement(statement);
  PsiExpression exception=statement.getException();
  if (exception != null) {
    exception.accept(this);
    CatchDescriptor cd=findNextCatch(false);
    if (cd == null) {
      addInstruction(new ReturnInstruction(true,statement));
      finishElement(statement);
      return;
    }
    addConditionalRuntimeThrow();
    addInstruction(new DupInstruction());
    addInstruction(new PushInstruction(myFactory.getConstFactory().getNull(),null));
    addInstruction(new BinopInstruction(JavaTokenType.EQEQ,null,myProject));
    ConditionalGotoInstruction gotoInstruction=new ConditionalGotoInstruction(null,true,null);
    addInstruction(gotoInstruction);
    addInstruction(new PopInstruction());
    initException(myNpe,cd);
    addThrowCode(cd,statement);
    gotoInstruction.setOffset(myCurrentFlow.getInstructionCount());
    addInstruction(new PushInstruction(getExceptionHolder(cd),null));
    addInstruction(new SwapInstruction());
    addInstruction(new AssignInstruction(null,null));
    addInstruction(new PopInstruction());
    addThrowCode(cd,statement);
  }
  finishElement(statement);
}
