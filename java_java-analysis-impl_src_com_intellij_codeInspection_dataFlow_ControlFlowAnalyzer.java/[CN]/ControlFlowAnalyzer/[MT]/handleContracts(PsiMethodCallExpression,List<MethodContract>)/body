{
  if (_contracts.isEmpty()) {
    return false;
  }
  final PsiExpression[] args=expression.getArgumentList().getExpressions();
  List<MethodContract> contracts=ContainerUtil.findAll(_contracts,new Condition<MethodContract>(){
    @Override public boolean value(    MethodContract contract){
      return args.length == contract.arguments.length;
    }
  }
);
  if (contracts.isEmpty()) {
    return false;
  }
  for (  PsiExpression arg : args) {
    arg.accept(this);
  }
  if (contracts.size() > 1) {
    addInstruction(new DupInstruction(args.length,contracts.size() - 1));
  }
  for (int i=0; i < contracts.size(); i++) {
    handleContract(expression,contracts.get(i),contracts.size() - 1 - i);
  }
  pushUnknownReturnValue(expression);
  return true;
}
