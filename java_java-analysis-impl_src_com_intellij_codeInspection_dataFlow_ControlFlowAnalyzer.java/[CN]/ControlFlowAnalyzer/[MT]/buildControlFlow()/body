{
  myCatchStack=new Stack<CatchDescriptor>();
  myCurrentFlow=new ControlFlow(myFactory);
  try {
    myCodeFragment.accept(this);
  }
 catch (  CannotAnalyzeException e) {
    return null;
  }
  PsiElement parent=myCodeFragment.getParent();
  if (parent instanceof PsiLambdaExpression && myCodeFragment instanceof PsiExpression) {
    generateBoxingUnboxingInstructionFor((PsiExpression)myCodeFragment,LambdaUtil.getFunctionalInterfaceReturnType((PsiLambdaExpression)parent));
    addInstruction(new CheckReturnValueInstruction(myCodeFragment));
  }
  addInstruction(new ReturnInstruction(false,null));
  if (Registry.is("idea.dfa.live.variables.analysis")) {
    new LiveVariablesAnalyzer(myCurrentFlow,myFactory).flushDeadVariablesOnStatementFinish();
  }
  return myCurrentFlow;
}
