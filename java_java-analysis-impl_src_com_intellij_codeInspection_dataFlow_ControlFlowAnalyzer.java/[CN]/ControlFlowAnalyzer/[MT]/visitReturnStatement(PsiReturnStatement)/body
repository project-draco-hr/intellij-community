{
  startElement(statement);
  PsiExpression returnValue=statement.getReturnValue();
  if (returnValue != null) {
    returnValue.accept(this);
    PsiMethod method=PsiTreeUtil.getParentOfType(statement,PsiMethod.class,true,PsiMember.class,PsiLambdaExpression.class);
    if (method != null) {
      generateBoxingUnboxingInstructionFor(returnValue,method.getReturnType());
    }
 else {
      final PsiLambdaExpression lambdaExpression=PsiTreeUtil.getParentOfType(statement,PsiLambdaExpression.class,true,PsiMember.class);
      if (lambdaExpression != null) {
        generateBoxingUnboxingInstructionFor(returnValue,LambdaUtil.getFunctionalInterfaceReturnType(lambdaExpression));
      }
    }
    addInstruction(new CheckReturnValueInstruction(returnValue));
  }
  addInstruction(new ReturnInstruction(myFactory.controlTransfer(ReturnTransfer.INSTANCE,myTrapStack),statement));
  finishElement(statement);
}
