{
  startElement(expression);
  pushUnknown();
  if (expression.getType() instanceof PsiArrayType) {
    final PsiExpression[] dimensions=expression.getArrayDimensions();
    for (    final PsiExpression dimension : dimensions) {
      dimension.accept(this);
    }
    for (    PsiExpression ignored : dimensions) {
      addInstruction(new PopInstruction());
    }
    final PsiArrayInitializerExpression arrayInitializer=expression.getArrayInitializer();
    if (arrayInitializer != null) {
      for (      final PsiExpression initializer : arrayInitializer.getInitializers()) {
        initializer.accept(this);
        addInstruction(new PopInstruction());
      }
    }
    addConditionalRuntimeThrow();
    addInstruction(new MethodCallInstruction(expression,null,Collections.emptyList()));
  }
 else {
    PsiMethod constructor=pushConstructorArguments(expression);
    addConditionalRuntimeThrow();
    addInstruction(new MethodCallInstruction(expression,null,constructor == null ? Collections.emptyList() : getMethodContracts(constructor)));
    if (!myTrapStack.isEmpty()) {
      addMethodThrows(constructor,expression);
    }
  }
  finishElement(expression);
}
