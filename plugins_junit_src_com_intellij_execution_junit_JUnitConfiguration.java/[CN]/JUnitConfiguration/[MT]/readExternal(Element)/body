{
  PathMacroManager.getInstance(getProject()).expandPaths(element);
  super.readExternal(element);
  JavaRunConfigurationExtensionManager.getInstance().readExternal(this,element);
  readModule(element);
  DefaultJDOMExternalizer.readExternal(this,element);
  DefaultJDOMExternalizer.readExternal(getPersistentData(),element);
  EnvironmentVariablesComponent.readExternal(element,getPersistentData().getEnvs());
  final Element patternsElement=element.getChild(PATTERNS_EL_NAME);
  if (patternsElement != null) {
    final LinkedHashSet<String> tests=new LinkedHashSet<>();
    for (    Object o : patternsElement.getChildren(PATTERN_EL_NAME)) {
      Element patternElement=(Element)o;
      tests.add(patternElement.getAttributeValue(TEST_CLASS_ATT_NAME));
    }
    myData.setPatterns(tests);
  }
  final Element forkModeElement=element.getChild("fork_mode");
  if (forkModeElement != null) {
    final String mode=forkModeElement.getAttributeValue("value");
    if (mode != null) {
      setForkMode(mode);
    }
  }
  final String count=element.getAttributeValue("repeat_count");
  if (count != null) {
    try {
      setRepeatCount(Integer.parseInt(count));
    }
 catch (    NumberFormatException e) {
      setRepeatCount(1);
    }
  }
  final String repeatMode=element.getAttributeValue("repeat_mode");
  if (repeatMode != null) {
    setRepeatMode(repeatMode);
  }
  final Element dirNameElement=element.getChild("dir");
  if (dirNameElement != null) {
    final String dirName=dirNameElement.getAttributeValue("value");
    getPersistentData().setDirName(FileUtil.toSystemDependentName(dirName));
  }
  final Element categoryNameElement=element.getChild("category");
  if (categoryNameElement != null) {
    final String categoryName=categoryNameElement.getAttributeValue("value");
    getPersistentData().setCategoryName(categoryName);
  }
}
