{
  RelativeTokenTypesView wsTokens=new RelativeTokenTypesView();
  RelativeTokenTextView tokenTextGetter=new RelativeTokenTextView();
  for (int i=1, size=myProduction.size() - 1; i < size; i++) {
    final ProductionMarker item=myProduction.get(i);
    if (item instanceof StartMarker && ((StartMarker)item).myDoneMarker == null) {
      LOG.error(UNBALANCED_MESSAGE);
    }
    int prevProductionLexIndex=myProduction.get(i - 1).myLexemeIndex;
    int wsStartIndex=item.myLexemeIndex;
    while (wsStartIndex > prevProductionLexIndex && whitespaceOrComment(myLexTypes[wsStartIndex - 1]))     wsStartIndex--;
    int wsEndIndex=item.myLexemeIndex;
    while (wsEndIndex < myLexemeCount && whitespaceOrComment(myLexTypes[wsEndIndex]))     wsEndIndex++;
    wsTokens.configure(wsStartIndex,wsEndIndex);
    tokenTextGetter.configure(wsStartIndex);
    boolean atEnd=wsStartIndex == 0 || wsEndIndex == myLexemeCount;
    item.myLexemeIndex=wsStartIndex + item.myEdgeTokenBinder.getEdgePosition(wsTokens,atEnd,tokenTextGetter);
  }
}
