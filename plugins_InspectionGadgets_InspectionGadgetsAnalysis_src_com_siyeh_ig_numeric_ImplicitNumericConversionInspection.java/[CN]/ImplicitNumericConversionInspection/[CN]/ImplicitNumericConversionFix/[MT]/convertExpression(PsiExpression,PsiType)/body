{
  if (!(expression instanceof PsiLiteralExpression) && !isNegatedLiteral(expression)) {
    return null;
  }
  final PsiType expressionType=expression.getType();
  if (expressionType == null) {
    return null;
  }
  final String text=expression.getText();
  if (expressionType.equals(PsiType.INT) && expectedType.equals(PsiType.LONG)) {
    return text + 'L';
  }
  if (expressionType.equals(PsiType.INT) && expectedType.equals(PsiType.FLOAT)) {
    if (!isDecimalLiteral(text)) {
      return null;
    }
    return text + ".0F";
  }
  if (expressionType.equals(PsiType.INT) && expectedType.equals(PsiType.DOUBLE)) {
    if (!isDecimalLiteral(text)) {
      return null;
    }
    return text + ".0";
  }
  if (expressionType.equals(PsiType.LONG) && expectedType.equals(PsiType.FLOAT)) {
    if (!isDecimalLiteral(text)) {
      return null;
    }
    return text.substring(0,text.length() - 1) + ".0F";
  }
  if (expressionType.equals(PsiType.LONG) && expectedType.equals(PsiType.DOUBLE)) {
    if (!isDecimalLiteral(text)) {
      return null;
    }
    return text.substring(0,text.length() - 1) + ".0";
  }
  if (expressionType.equals(PsiType.DOUBLE) && expectedType.equals(PsiType.FLOAT)) {
    final int length=text.length();
    if (text.charAt(length - 1) == 'd' || text.charAt(length - 1) == 'D') {
      return text.substring(0,length - 1) + 'F';
    }
 else {
      return text + 'F';
    }
  }
  if (expressionType.equals(PsiType.FLOAT) && expectedType.equals(PsiType.DOUBLE)) {
    final int length=text.length();
    return text.substring(0,length - 1);
  }
  return null;
}
