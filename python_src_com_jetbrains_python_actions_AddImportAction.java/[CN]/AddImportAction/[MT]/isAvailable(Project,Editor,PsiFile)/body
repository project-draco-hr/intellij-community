{
  final PsiElement element=myReference.getElement();
  if (PsiTreeUtil.getParentOfType(element,PyImportStatement.class) != null)   return false;
  if (PsiTreeUtil.getParentOfType(element,PyFromImportStatement.class) != null)   return false;
  if (element instanceof PyReferenceExpression) {
    final PyExpression qual=((PyReferenceExpression)element).getQualifier();
    if (qual != null)     return false;
  }
  if (!(element instanceof PyReferenceExpression) || (ResolveImportUtil.resolvePythonImport2((PyReferenceExpression)element,null) == null))   return false;
  final String referenceName=getRefName();
  ImportLookupProcessor ilp=new ImportLookupProcessor(referenceName);
  PyResolveUtil.treeCrawlUp(ilp,element);
  if (ilp.getFound() != null)   return false;
  return (ResolveImportUtil.resolveInRoots(file,referenceName) != null);
}
