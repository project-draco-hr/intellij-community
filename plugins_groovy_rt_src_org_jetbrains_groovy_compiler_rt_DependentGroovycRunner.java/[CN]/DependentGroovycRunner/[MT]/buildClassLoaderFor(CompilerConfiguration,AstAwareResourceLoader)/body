{
  final ClassDependencyLoader checkWellFormed=new ClassDependencyLoader(){
    @Override protected void loadClassDependencies(    Class aClass) throws ClassNotFoundException {
      if (resourceLoader.getSourceFile(aClass.getName()) == null)       return;
      super.loadClassDependencies(aClass);
    }
  }
;
  GroovyClassLoader classLoader=AccessController.doPrivileged(new PrivilegedAction<GroovyClassLoader>(){
    public GroovyClassLoader run(){
      return new GroovyClassLoader(Thread.currentThread().getContextClassLoader(),compilerConfiguration){
        public Class loadClass(        String name,        boolean lookupScriptFiles,        boolean preferClassOverScript) throws ClassNotFoundException, CompilationFailedException {
          Class aClass;
          try {
            aClass=super.loadClass(name,lookupScriptFiles,preferClassOverScript);
          }
 catch (          NoClassDefFoundError e) {
            throw new ClassNotFoundException(name);
          }
catch (          LinkageError e) {
            throw new RuntimeException("Problem loading class " + name,e);
          }
          return checkWellFormed.loadDependencies(aClass);
        }
      }
;
    }
  }
);
  classLoader.setResourceLoader(resourceLoader);
  return classLoader;
}
