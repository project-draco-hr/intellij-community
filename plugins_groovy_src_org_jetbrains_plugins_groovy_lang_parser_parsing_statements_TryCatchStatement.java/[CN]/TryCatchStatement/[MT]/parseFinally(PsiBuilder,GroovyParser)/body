{
  ParserUtils.getToken(builder,mNLS);
  PsiBuilder.Marker finallyMarker=builder.mark();
  ParserUtils.getToken(builder,kFINALLY);
  ParserUtils.getToken(builder,mNLS);
  PsiBuilder.Marker warn=builder.mark();
  if (mLCURLY.equals(builder.getTokenType()) && OpenOrClosableBlock.parseOpenBlock(builder,parser)) {
    warn.drop();
  }
 else {
    warn.rollbackTo();
    builder.error(GroovyBundle.message("lcurly.expected"));
  }
  finallyMarker.done(FINALLY_CLAUSE);
}
