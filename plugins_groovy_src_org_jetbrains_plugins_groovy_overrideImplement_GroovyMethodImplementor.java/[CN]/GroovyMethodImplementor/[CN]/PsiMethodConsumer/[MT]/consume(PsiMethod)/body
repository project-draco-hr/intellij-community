{
  Project project=myTargetClass.getProject();
  if (myToCopyJavaDoc) {
    PsiDocComment baseMethodDocComment=myBaseMethod.getDocComment();
    if (baseMethodDocComment != null) {
      GrDocComment docComment=GroovyPsiElementFactory.getInstance(project).createDocCommentFromText(baseMethodDocComment.getText());
      GrDocCommentUtil.setDocComment(((GrMethod)method),docComment);
    }
  }
 else {
    PsiDocComment docComment=method.getDocComment();
    if (docComment != null) {
      docComment.delete();
    }
  }
  if (myInsertOverrideIfPossible) {
    if (OverrideImplementUtil.canInsertOverride(method,myTargetClass) && JavaPsiFacade.getInstance(project).findClass(CommonClassNames.JAVA_LANG_OVERRIDE,myTargetClass.getResolveScope()) != null && method.getModifierList().findAnnotation(CommonClassNames.JAVA_LANG_OVERRIDE) == null) {
      method.getModifierList().addAnnotation(CommonClassNames.JAVA_LANG_OVERRIDE);
    }
  }
 else {
    PsiAnnotation annotation=method.getModifierList().findAnnotation(CommonClassNames.JAVA_LANG_OVERRIDE);
    if (annotation != null) {
      annotation.delete();
    }
  }
}
