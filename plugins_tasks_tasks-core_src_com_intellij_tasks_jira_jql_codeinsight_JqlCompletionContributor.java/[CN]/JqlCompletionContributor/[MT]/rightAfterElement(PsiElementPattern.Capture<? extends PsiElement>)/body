{
  return new FilterPattern(new ElementFilter(){
    @Override public boolean isAcceptable(    Object element,    @Nullable PsiElement context){
      if (!(element instanceof PsiElement))       return false;
      PsiElement prevLeaf=PsiTreeUtil.prevVisibleLeaf((PsiElement)element);
      if (prevLeaf == null)       return false;
      PsiElement enclosingClause=PsiTreeUtil.findFirstParent(prevLeaf,new Condition<PsiElement>(){
        @Override public boolean value(        PsiElement element){
          return pattern.accepts(element);
        }
      }
);
      if (enclosingClause == null)       return false;
      if (PsiTreeUtil.hasErrorElements(enclosingClause))       return false;
      return prevLeaf.getTextRange().getEndOffset() == enclosingClause.getTextRange().getEndOffset();
    }
    @Override public boolean isClassAcceptable(    Class hintClass){
      return true;
    }
  }
);
}
