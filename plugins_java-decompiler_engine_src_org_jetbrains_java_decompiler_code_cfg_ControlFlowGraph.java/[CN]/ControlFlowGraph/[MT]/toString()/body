{
  String new_line_separator=DecompilerContext.getNewLineSeparator();
  StringBuffer buf=new StringBuffer();
  for (  BasicBlock block : blocks) {
    buf.append("----- Block " + block.id + " -----"+ new_line_separator);
    buf.append(block.toString());
    buf.append("----- Edges -----" + new_line_separator);
    List<BasicBlock> suc=block.getSuccs();
    for (int j=0; j < suc.size(); j++) {
      buf.append(">>>>>>>>(regular) Block " + suc.get(j).id + new_line_separator);
    }
    suc=block.getSuccExceptions();
    for (int j=0; j < suc.size(); j++) {
      BasicBlock handler=suc.get(j);
      ExceptionRangeCFG range=getExceptionRange(handler,block);
      if (range == null) {
        buf.append(">>>>>>>>(exception) Block " + handler.id + "\t"+ "ERROR: range not found!"+ new_line_separator);
      }
 else {
        List<String> exceptionTypes=range.getExceptionTypes();
        if (exceptionTypes == null) {
          buf.append(">>>>>>>>(exception) Block " + handler.id + "\t"+ "NULL"+ new_line_separator);
        }
 else {
          for (          String exceptionType : exceptionTypes) {
            buf.append(">>>>>>>>(exception) Block " + handler.id + "\t"+ exceptionType+ new_line_separator);
          }
        }
      }
    }
    buf.append("----- ----- -----" + new_line_separator);
  }
  return buf.toString();
}
