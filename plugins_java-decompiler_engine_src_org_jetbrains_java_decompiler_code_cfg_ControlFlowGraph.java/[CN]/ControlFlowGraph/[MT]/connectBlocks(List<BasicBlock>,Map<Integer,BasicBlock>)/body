{
  for (int i=0; i < lstbb.size(); i++) {
    BasicBlock block=lstbb.get(i);
    Instruction instr=block.getLastInstruction();
    boolean fallthrough=instr.canFallthrough();
    BasicBlock bTemp;
switch (instr.group) {
case GROUP_JUMP:
      int dest=((JumpInstruction)instr).destination;
    bTemp=mapInstrBlocks.get(dest);
  block.addSuccessor(bTemp);
break;
case GROUP_SWITCH:
SwitchInstruction sinstr=(SwitchInstruction)instr;
int[] dests=sinstr.getDestinations();
bTemp=mapInstrBlocks.get(((SwitchInstruction)instr).getDefaultdest());
block.addSuccessor(bTemp);
for (int j=0; j < dests.length; j++) {
bTemp=mapInstrBlocks.get(dests[j]);
block.addSuccessor(bTemp);
}
}
if (fallthrough && i < lstbb.size() - 1) {
BasicBlock defaultBlock=lstbb.get(i + 1);
block.addSuccessor(defaultBlock);
}
}
}
