{
  final Ref<String> result=Ref.create();
  switchType(new RemoteSdkConnectionAcceptor(){
    @Override public void ssh(    @NotNull RemoteCredentialsHolder cred){
      result.set(constructSshCredentialsFullPath(cred));
    }
    @Override public void vagrant(    @NotNull VagrantBasedCredentialsHolder cred){
      result.set(VAGRANT_PREFIX + cred.getVagrantFolder() + (StringUtil.isNotEmpty(cred.getMachineName()) ? "@" + cred.getMachineName() : ""));
    }
    @Override public void deployment(    @NotNull WebDeploymentCredentialsHolder cred){
      result.set(constructSftpCredentialsFullPath(cred.getSshCredentials()));
    }
    @Override public void docker(    @NotNull DockerCredentialsHolder cred){
      String name;
      if (cred.isDockerComposeCredentials()) {
        name=cred.getComposeFilePath() + ":" + cred.getComposeServiceName();
      }
 else {
        name=StringUtil.isNotEmpty(cred.getContainerName()) ? cred.getContainerName() : cred.getImageName();
      }
      result.set(DOCKER_PREFIX + name + "/");
    }
  }
);
  return result.get();
}
