{
  final Ref<String> result=Ref.create();
  switchType(new RemoteSdkConnectionAcceptor(){
    @Override public void ssh(    @NotNull RemoteCredentialsHolder cred){
      result.set("(" + constructSshCredentialsFullPath(cred) + interpreterPath+ ")");
    }
    @Override public void vagrant(    @NotNull VagrantBasedCredentialsHolder cred){
      String pathRelativeToHome=FileUtil.getLocationRelativeToUserHome(cred.getVagrantFolder());
      result.set("Vagrant VM " + (StringUtil.isNotEmpty(cred.getMachineName()) ? "'" + cred.getMachineName() + "' " : "") + "at "+ (pathRelativeToHome.length() < cred.getVagrantFolder().length() ? pathRelativeToHome : cred.getVagrantFolder())+ " ("+ interpreterPath+ ")");
    }
    @Override public void deployment(    @NotNull WebDeploymentCredentialsHolder cred){
      result.set("(" + constructSftpCredentialsFullPath(cred.getSshCredentials()) + interpreterPath+ ")");
    }
  }
);
  return result.get();
}
