{
  if (!isPythonUsage(usageInfo))   return false;
  if (!(changeInfo instanceof PyChangeInfo))   return false;
  if (!beforeMethodChange)   return false;
  PsiElement element=usageInfo.getElement();
  if (element == null || !(element.getParent() instanceof PyCallExpression)) {
    return false;
  }
  final PyCallExpression call=(PyCallExpression)element.getParent();
  final PyArgumentList argumentList=call.getArgumentList();
  if (argumentList != null) {
    final PyElementGenerator elementGenerator=PyElementGenerator.getInstance(element.getProject());
    StringBuilder builder=getSignature(changeInfo,argumentList);
    final PyExpression newCall=elementGenerator.createExpressionFromText(LanguageLevel.forElement(element),builder.toString());
    call.replace(newCall);
    return true;
  }
  return false;
}
