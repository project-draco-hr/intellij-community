{
  try {
    if (Registry.is("debugger.watch.return.speedup") && Comparing.equal(event.request().getProperty(METHOD_KEY),event.method())) {
      enableEntryWatching(true);
      createExitRequest().enable();
    }
    final Method method=event.method();
    try {
      if (myReturnValueMethod == null) {
        myReturnValueMethod=MethodExitEvent.class.getDeclaredMethod("returnValue",ArrayUtil.EMPTY_CLASS_ARRAY);
      }
      final Value retVal=(Value)myReturnValueMethod.invoke(event);
      if (method == null || !"void".equals(method.returnTypeName())) {
        myLastExecutedMethod=method;
        myLastMethodReturnValue=retVal;
      }
    }
 catch (    NoSuchMethodException ignored) {
    }
catch (    IllegalAccessException ignored) {
    }
catch (    InvocationTargetException ignored) {
    }
  }
 catch (  UnsupportedOperationException ex) {
    LOG.error(ex);
  }
}
