{
  Project project=elt.getProject();
  PsiFile psiFile=getContainingFile(elt);
  final Document doc=PsiDocumentManager.getInstance(project).getDocument(psiFile);
  if (doc == null)   return null;
  if (elt.getTextRange() == null) {
    return null;
  }
  final ImplementationTextSelectioner implementationTextSelectioner=LanguageImplementationTextSelectioner.INSTANCE.forLanguage(elt.getLanguage());
  int start=implementationTextSelectioner.getTextStartOffset(elt);
  int end=implementationTextSelectioner.getTextEndOffset(elt);
  CharSequence rawDefinition=doc.getCharsSequence().subSequence(start,end);
  while (end > start && StringUtil.isLineBreak(rawDefinition.charAt(end - start - 1))) {
    end--;
  }
  final int lineStart=doc.getLineStartOffset(doc.getLineNumber(start));
  final int lineEnd=end < doc.getTextLength() ? doc.getLineEndOffset(doc.getLineNumber(end)) : doc.getTextLength();
  return doc.getCharsSequence().subSequence(lineStart,lineEnd).toString();
}
