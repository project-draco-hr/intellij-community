{
  List<PsiElement> candidates=new ArrayList<PsiElement>(elements.length);
  List<FileDescriptor> files=new ArrayList<FileDescriptor>(elements.length);
  final Set<String> names=new HashSet<String>();
  for (  PsiElement element : elements) {
    if (element instanceof PsiNamedElement) {
      names.add(((PsiNamedElement)element).getName());
    }
    if (names.size() > 1) {
      break;
    }
  }
  for (  PsiElement element : elements) {
    PsiFile file=getContainingFile(element);
    if (file == null)     continue;
    if (names.size() > 1) {
      files.add(new FileDescriptor(file,element));
    }
 else {
      final PsiElement parent=PsiTreeUtil.getStubOrPsiParent(element);
      if (parent == file) {
        files.add(new FileDescriptor(file,element));
      }
 else {
        files.add(new FileDescriptor(file,parent));
      }
    }
    candidates.add(element);
  }
  fun.fun(PsiUtilCore.toPsiElementArray(candidates),files);
}
