{
  final PsiMethod[] handlerSetterCandidates=tagClass.findMethodsByName(PropertyUtil.suggestSetterName(eventName),true);
  for (  PsiMethod handlerSetter : handlerSetterCandidates) {
    if (!handlerSetter.hasModifierProperty(PsiModifier.STATIC) && handlerSetter.hasModifierProperty(PsiModifier.PUBLIC)) {
      final PsiType propertyType=PropertyUtil.getPropertyType(handlerSetter);
      if (InheritanceUtil.isInheritor(propertyType,JavaFxCommonNames.JAVAFX_EVENT_EVENT_HANDLER)) {
        return propertyType;
      }
    }
  }
  final PsiField handlerField=tagClass.findFieldByName(eventName,true);
  final PsiClassType propertyType=getPropertyClassType(handlerField);
  if (InheritanceUtil.isInheritor(propertyType,JavaFxCommonNames.JAVAFX_EVENT_EVENT_HANDLER)) {
    return propertyType;
  }
  return null;
}
