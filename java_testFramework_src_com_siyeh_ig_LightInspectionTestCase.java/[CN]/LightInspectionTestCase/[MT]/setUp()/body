{
  super.setUp();
  for (  String environmentClass : getEnvironmentClasses()) {
    myFixture.addClass(environmentClass);
  }
  final InspectionProfileEntry inspection=getInspection();
  if (inspection != null) {
    myFixture.enableInspections(inspection);
    final Project project=myFixture.getProject();
    final HighlightDisplayKey displayKey=HighlightDisplayKey.find(inspection.getShortName());
    final InspectionProfileImpl currentProfile=ProjectInspectionProfileManager.getInstanceImpl(project).getCurrentProfile();
    final HighlightDisplayLevel errorLevel=currentProfile.getErrorLevel(displayKey,null);
    if (errorLevel == HighlightDisplayLevel.DO_NOT_SHOW) {
      currentProfile.setErrorLevel(displayKey,HighlightDisplayLevel.WARNING,project);
    }
  }
  Sdk sdk=ModuleRootManager.getInstance(ModuleManager.getInstance(getProject()).getModules()[0]).getSdk();
  if (JAVA_1_7.getSdk().getName().equals(sdk == null ? null : sdk.getName())) {
    PsiClass object=JavaPsiFacade.getInstance(getProject()).findClass("java.lang.Object",GlobalSearchScope.allScope(getProject()));
    assertNotNull(object);
    PsiClass component=JavaPsiFacade.getInstance(getProject()).findClass("java.awt.Component",GlobalSearchScope.allScope(getProject()));
    assertNotNull(component);
  }
}
