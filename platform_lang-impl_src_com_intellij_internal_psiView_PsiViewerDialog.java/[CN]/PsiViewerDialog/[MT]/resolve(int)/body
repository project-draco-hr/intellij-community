{
  final PsiElement element=getPsiElement();
  if (element == null)   return null;
  @SuppressWarnings("unchecked") Map<PsiElement,PsiElement[]> map=(Map<PsiElement,PsiElement[]>)myRefs.getClientProperty(REFS_CACHE);
  if (map == null) {
    myRefs.putClientProperty(REFS_CACHE,map=new HashMap<PsiElement,PsiElement[]>());
  }
  PsiElement[] cache=map.get(element);
  if (cache == null) {
    final PsiReference[] references=element.getReferences();
    cache=new PsiElement[references.length];
    for (int i=0; i < references.length; i++) {
      final PsiReference reference=references[i];
      final PsiElement resolveResult;
      if (reference instanceof PsiPolyVariantReference) {
        final ResolveResult[] results=((PsiPolyVariantReference)reference).multiResolve(true);
        resolveResult=results.length == 0 ? null : results[0].getElement();
      }
 else {
        resolveResult=reference.resolve();
      }
      cache[i]=resolveResult;
    }
    map.put(element,cache);
  }
  return index >= cache.length ? null : cache[index];
}
