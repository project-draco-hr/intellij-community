{
  PsiElement element=descriptor.getPsiElement();
  if (element instanceof PyBinaryExpression) {
    PyElementGenerator elementGenerator=PyElementGenerator.getInstance(project);
    PyBinaryExpression binaryExpression=(PyBinaryExpression)element;
    PyExpression resultExpression;
    final PyExpression leftExpression=binaryExpression.getLeftExpression();
    final PyExpression rightExpression=binaryExpression.getRightExpression();
    boolean positiveCondition=!TokenSet.create(PyTokenTypes.NE,PyTokenTypes.NE_OLD).contains(binaryExpression.getOperator());
    positiveCondition^=isFalse(leftExpression) || isFalse(rightExpression);
    if (isTrue(leftExpression) || isFalse(leftExpression)) {
      resultExpression=rightExpression;
    }
 else {
      resultExpression=leftExpression;
    }
    String text=((positiveCondition) ? "" : "not ") + resultExpression.getText();
    binaryExpression.replace(elementGenerator.createExpressionFromText(text));
  }
}
