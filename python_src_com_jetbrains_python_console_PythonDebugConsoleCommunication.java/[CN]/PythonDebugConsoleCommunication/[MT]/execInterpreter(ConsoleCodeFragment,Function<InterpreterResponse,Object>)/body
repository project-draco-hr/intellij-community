{
  if (waitingForInput) {
    final OutputStream processInput=myDebugProcess.getProcessHandler().getProcessInput();
    if (processInput != null) {
      try {
        final Charset defaultCharset=EncodingProjectManager.getInstance(myDebugProcess.getProject()).getDefaultCharset();
        processInput.write((code.getText() + "\n").getBytes(defaultCharset));
        processInput.flush();
      }
 catch (      IOException e) {
        LOG.error(e.getMessage());
      }
    }
    waitingForInput=false;
  }
 else {
    myExpression.append(code.getText());
    exec(new ConsoleCodeFragment(myExpression.toString(),false),new PyDebugCallback<Pair<String,Boolean>>(){
      @Override public void ok(      Pair<String,Boolean> executed){
        boolean more=executed.second;
        if (!more) {
          myExpression.setLength(0);
        }
        callback.fun(new InterpreterResponse(more,isWaitingForInput()));
      }
      @Override public void error(      PyDebuggerException exception){
        myExpression.setLength(0);
        callback.fun(new InterpreterResponse(false,isWaitingForInput()));
      }
    }
);
  }
}
