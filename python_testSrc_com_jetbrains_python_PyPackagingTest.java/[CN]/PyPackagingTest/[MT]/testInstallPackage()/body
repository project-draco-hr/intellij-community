{
  forAllPythonEnvs(new Processor<Sdk>(){
    @Override public boolean process(    final Sdk sdk){
      try {
        final File tempDir=FileUtil.createTempDirectory(getTestName(false),null);
        final String venvSdkHome=PyPackageManager.getInstance(sdk).createVirtualEnv(tempDir.getPath());
        final Sdk venvSdk=createTempSdk(venvSdkHome);
        assertNotNull(venvSdk);
        final PyPackageManager manager=PyPackageManager.getInstance(venvSdk);
        final List<PyPackage> packages1=manager.getPackages();
        manager.install(list(new PyRequirement("Markdown","<","2.2"),new PyRequirement("httplib2")));
        final List<PyPackage> packages2=manager.getPackages();
        final PyPackage markdown2=findPackage("Markdown",packages2);
        assertNotNull(markdown2);
        assertTrue(markdown2.isInstalled());
        final PyPackage pip1=findPackage("pip",packages1);
        assertNotNull(pip1);
        assertEquals("pip",pip1.getName());
        assertEquals("1.0.2",pip1.getVersion());
        manager.uninstall(pip1);
        final List<PyPackage> packages3=manager.getPackages();
        final PyPackage pip2=findPackage("pip",packages3);
        assertNull(pip2);
      }
 catch (      PyExternalProcessException e) {
        fail(String.format("Error for interpreter '%s': %s",sdk.getHomePath(),e.getMessage()));
      }
catch (      IOException e) {
        throw new RuntimeException(e);
      }
      return true;
    }
  }
);
}
