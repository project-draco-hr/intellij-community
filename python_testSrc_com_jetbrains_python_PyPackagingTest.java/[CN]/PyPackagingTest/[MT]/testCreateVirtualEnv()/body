{
  forAllPythonEnvs(new Processor<Sdk>(){
    @Override public boolean process(    Sdk sdk){
      try {
        final File tempDir=FileUtil.createTempDirectory(getTestName(false),null);
        final String venvSdkHome=PyPackageManager.getInstance(sdk).createVirtualEnv(tempDir.toString());
        final Sdk venvSdk=createTempSdk(venvSdkHome);
        assertNotNull(venvSdk);
        assertTrue(PythonSdkType.isVirtualEnv(venvSdk));
        final List<PyPackage> packages=PyPackageManager.getInstance(venvSdk).getPackages();
        final PyPackage distribute=findPackage("distribute",packages);
        assertNotNull(distribute);
        assertEquals("distribute",distribute.getName());
        assertEquals("0.6.24",distribute.getVersion());
        final PyPackage pip=findPackage("pip",packages);
        assertNotNull(pip);
        assertEquals("pip",pip.getName());
        assertEquals("1.0.2",pip.getVersion());
      }
 catch (      IOException e) {
        throw new RuntimeException(e);
      }
catch (      PyExternalProcessException e) {
        fail(String.format("Error for interpreter '%s': %s",sdk.getHomePath(),e.getMessage()));
      }
      return true;
    }
  }
);
}
