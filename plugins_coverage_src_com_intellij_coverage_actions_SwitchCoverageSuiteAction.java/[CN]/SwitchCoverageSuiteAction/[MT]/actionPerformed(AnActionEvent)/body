{
  final Project project=PlatformDataKeys.PROJECT.getData(e.getDataContext());
  final CoverageDataManager coverageManager=CoverageDataManager.getInstance(project);
  final ArrayList<CoverageSuite> model=new ArrayList<CoverageSuite>();
  final List<CoverageSuite> firstInGroup=new ArrayList<CoverageSuite>();
  fillCoverageSuites(model,firstInGroup,coverageManager);
  final ListPopupImpl listPopup=new DeletableItemsListPopup(new CoverageSuitesListPopupStep(model,coverageManager)){
    @Override protected void removeSelectedItem(    final JList list){
      final Object value=list.getSelectedValue();
      if (value != null) {
        final CoverageSuite suite=(CoverageSuite)value;
        JBPopupFactory.getInstance().createConfirmation(CodeInsightBundle.message("prompt.remove.coverage",suite.getPresentableName()),new Runnable(){
          public void run(){
            coverageManager.removeCoverageSuite(suite);
            ((ListPopupModel)list.getModel()).deleteItem(value);
          }
        }
,0).showInCenterOf(list);
      }
    }
    @Override protected ListCellRenderer getListElementRenderer(){
      return new MyCellRenderer(coverageManager){
        @Override protected boolean hasSeparatorAbove(        CoverageSuite suite){
          return suite == null || (suite != model.get(0) && firstInGroup.contains(suite));
        }
      }
;
    }
  }
;
  listPopup.showCenteredInCurrentWindow(project);
}
