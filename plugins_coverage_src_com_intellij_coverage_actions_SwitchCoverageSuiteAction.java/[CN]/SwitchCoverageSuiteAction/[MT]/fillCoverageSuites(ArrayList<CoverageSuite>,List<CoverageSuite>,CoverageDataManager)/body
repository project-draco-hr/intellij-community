{
  final CoverageSuite[] suites=coverageManager.getSuites();
  final Map<String,List<CoverageSuite>> grouped=new TreeMap<String,List<CoverageSuite>>();
  for (  CoverageSuite suite : suites) {
    final CoverageFileProvider coverageFileProvider=suite.getCoverageDataFileProvider();
    if (suite.isValid()) {
      final String sourceProvider=coverageFileProvider instanceof DefaultCoverageFileProvider ? ((DefaultCoverageFileProvider)coverageFileProvider).getSourceProvider() : coverageFileProvider.getClass().getName();
      List<CoverageSuite> coverageSuiteList=grouped.get(sourceProvider);
      if (coverageSuiteList == null) {
        coverageSuiteList=new ArrayList<CoverageSuite>();
        grouped.put(sourceProvider,coverageSuiteList);
      }
      coverageSuiteList.add(suite);
    }
  }
  final List<CoverageSuite> firstInGroup=new ArrayList<CoverageSuite>();
  for (  String provider : grouped.keySet()) {
    final List<CoverageSuite> toSort=grouped.get(provider);
    if (toSort.isEmpty())     continue;
    Collections.sort(toSort,new Comparator<CoverageSuite>(){
      public int compare(      final CoverageSuite s1,      final CoverageSuite s2){
        return s1.getPresentableName().compareToIgnoreCase(s2.getPresentableName());
      }
    }
);
    for (    CoverageSuite suite : toSort) {
      model.addElement(suite);
    }
    firstInGroup.add(toSort.get(0));
  }
  model.add(null);
  final JList list=new JList(model);
  list.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
  list.setCellRenderer(new MyCellRenderer(coverageManager){
    protected boolean hasSeparatorAbove(    final CoverageSuite suite){
      return suite == null || (suite != model.getElementAt(0) && firstInGroup.contains(suite));
    }
  }
);
  final Runnable chosen=new Runnable(){
    public void run(){
      final CoverageSuite suite=(CoverageSuite)list.getSelectedValue();
      coverageManager.chooseSuite(suite);
    }
  }
;
  final JBPopup popup=new PopupChooserBuilder(list).setTitle(CodeInsightBundle.message("title.popup.show.coverage")).setMovable(true).setItemChoosenCallback(chosen).createPopup();
  list.registerKeyboardAction(new RemoveSuiteAction(list,coverageManager,model,popup,chosen),KeyStroke.getKeyStroke(KeyEvent.VK_DELETE,0),JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT);
  popup.showCenteredInCurrentWindow(project);
}
