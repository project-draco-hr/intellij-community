{
  if (LanguageLevel.forElement(node).supportsSetLiterals()) {
    PyExpression callee=node.getCallee();
    if (callee != null) {
      if (isBuiltinSet(callee)) {
        PyExpression[] arguments=node.getArguments();
        if (arguments.length == 1) {
          PyExpression argument=arguments[0];
          String string="";
          PyElement[] elements={};
          if (argument instanceof PyStringLiteralExpression) {
            string=((PyStringLiteralExpression)argument).getStringValue();
          }
          if ((argument instanceof PySequenceExpression || (argument instanceof PyParenthesizedExpression && ((PyParenthesizedExpression)argument).getContainedExpression() instanceof PyTupleExpression))) {
            if (argument instanceof PySequenceExpression)             elements=((PySequenceExpression)argument).getElements();
            if (argument instanceof PyParenthesizedExpression) {
              PyExpression tuple=((PyParenthesizedExpression)argument).getContainedExpression();
              if (tuple instanceof PyTupleExpression)               elements=((PyTupleExpression)(tuple)).getElements();
            }
          }
          if (elements.length != 0 || !string.isEmpty())           registerProblem(node,"Function call can be replaced with set literal",new ReplaceFunctionWithSetLiteralQuickFix(elements,string));
        }
      }
    }
  }
}
