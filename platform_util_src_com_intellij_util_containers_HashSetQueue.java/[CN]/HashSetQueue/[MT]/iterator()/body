{
  return new Iterator<T>(){
    QueueEntry<T> cursor=first;
    @Override public boolean hasNext(){
      return cursor != null;
    }
    @Override public T next(){
      QueueEntry<T> entry=cursor;
      cursor=cursor.next;
      return entry.t;
    }
    @Override public void remove(){
      QueueEntry<T> toDelete=cursor == null ? last : cursor.prev;
      if (toDelete == null)       throw new NoSuchElementException();
      HashSetQueue.this.remove(toDelete.t);
    }
  }
;
}
