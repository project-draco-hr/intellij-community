{
  int[] sizes=calculateSizes(classSymbols,n);
  int[] starts=new int[n];
  int count=0;
  for (int i=0; i < sizes.length; i++) {
    starts[i]=count;
    count+=sizes[i];
  }
  int[] subtypes=new int[count];
  int[] filled=new int[sizes.length];
  for (int subTypeId=0; subTypeId < n; subTypeId++) {
    ClassSymbol subType=classSymbols[subTypeId];
    for (    ClassSymbol superType : subType.getSuperClasses()) {
      int superTypeId=superType.myClassAnchor.myId;
      subtypes[starts[superTypeId] + filled[superTypeId]]=subTypeId;
      filled[superTypeId]+=1;
    }
  }
  this.mySubtypes=subtypes;
  this.mySubtypeStarts=starts;
}
