{
  expression=expression.trim();
  if (expression.isEmpty()) {
    callback.evaluated(NONE);
    return;
  }
  final Project project=myDebugProcess.getSession().getProject();
  final boolean isExpression=PyDebugSupportUtils.isExpression(project,expression);
  try {
    final PyDebugValue value=myDebugProcess.evaluate(expression,!isExpression,doTrunc);
    if (value.isErrorOnEval()) {
      callback.errorOccurred("{" + value.getType() + "}"+ value.getValue());
    }
 else {
      callback.evaluated(value);
    }
  }
 catch (  PyDebuggerException e) {
    callback.errorOccurred(e.getTracebackError());
  }
}
