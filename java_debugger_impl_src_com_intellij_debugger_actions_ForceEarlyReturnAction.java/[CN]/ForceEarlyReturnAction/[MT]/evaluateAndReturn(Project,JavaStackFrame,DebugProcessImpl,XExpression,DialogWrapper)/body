{
  XDebuggerEvaluator evaluator=stackFrame.getEvaluator();
  if (evaluator != null) {
    evaluator.evaluate(expression,new XDebuggerEvaluator.XEvaluationCallback(){
      @Override public void evaluated(      @NotNull XValue result){
        if (result instanceof JavaValue) {
          forceEarlyReturn(((JavaValue)result).getDescriptor().getValue(),stackFrame.getDescriptor().getFrameProxy().threadProxy(),debugProcess,dialog);
        }
      }
      @Override public void errorOccurred(      @NotNull final String errorMessage){
        showError(project,DebuggerBundle.message("error.unable.to.evaluate.expression") + ": " + errorMessage);
      }
    }
,stackFrame.getSourcePosition());
  }
 else {
    showError(project,XDebuggerBundle.message("xdebugger.evaluate.stack.frame.has.not.evaluator"));
  }
}
