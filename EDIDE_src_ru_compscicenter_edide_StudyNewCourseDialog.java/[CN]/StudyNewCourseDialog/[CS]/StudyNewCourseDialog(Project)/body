{
  super(project,true);
  setTitle("Select the Course");
  init();
  ArrayList<String> availableCouseNames=StudyDirectoryProjectGenerator.getCourseFiles();
  for (  String courseName : availableCouseNames) {
    comboBox1.addItem(courseName);
  }
  button=new TextFieldWithBrowseButton();
  button.getButton().setFocusable(true);
  button.addActionListener(new ActionListener(){
    @Override public void actionPerformed(    ActionEvent e){
      final JFileChooser fc=new JFileChooser();
      int returnVal=fc.showOpenDialog(button);
    }
  }
);
  FileChooserDescriptor fcd=FileChooserDescriptorFactory.createSingleFolderDescriptor();
  fcd.setShowFileSystemRoots(true);
  fcd.setTitle(DvcsBundle.getString("clone.destination.directory.title"));
  fcd.setDescription(DvcsBundle.getString("clone.destination.directory.description"));
  fcd.setHideIgnored(false);
  button.addActionListener(new ComponentWithBrowseButton.BrowseFolderActionListener<JTextField>(fcd.getTitle(),fcd.getDescription(),button,project,fcd,TextComponentAccessor.TEXT_FIELD_SELECTED_TEXT){
    @Override protected VirtualFile getInitialFile(){
      String text=getComponentText();
      if (text.length() == 0) {
        VirtualFile file=project.getBaseDir();
        if (file != null) {
          return file;
        }
      }
      return super.getInitialFile();
    }
  }
);
  comboBox1.addActionListener(new ActionListener(){
    @Override public void actionPerformed(    ActionEvent e){
      JComboBox cb=(JComboBox)e.getSource();
      String testString=(String)cb.getSelectedItem();
      StudyDirectoryProjectGenerator.setMyBaseCouseFile(testString);
    }
  }
);
}
