{
  super(project,true);
  setTitle("Select the Course");
  init();
  myErrorLabel.setVisible(false);
  if (availableDefaultCourses.size() == 0) {
    myErrorLabel.setVisible(true);
  }
  for (  String courseName : availableDefaultCourses) {
    myDefaultCoursesComboBox.addItem(courseName);
  }
  final FileChooserDescriptor fileChooser=FileChooserDescriptorFactory.createSingleLocalFileDescriptor();
  myCourseLocationField.addBrowseFolderListener("Select course file",null,project,fileChooser);
  myDefaultCoursesComboBox.addActionListener(new ActionListener(){
    @Override public void actionPerformed(    ActionEvent e){
      JComboBox cb=(JComboBox)e.getSource();
      String testString=(String)cb.getSelectedItem();
      StudyDirectoryProjectGenerator.setMyBaseCourseFile(testString);
    }
  }
);
  myRefreshButton.addActionListener(new ActionListener(){
    @Override public void actionPerformed(    ActionEvent e){
      myDefaultCoursesComboBox.removeAllItems();
      Set<String> newCourses=StudyDirectoryProjectGenerator.updateDefaultCourseList();
      if (newCourses.size() == 0) {
        myErrorLabel.setVisible(true);
        return;
      }
      myErrorLabel.setVisible(false);
      for (      String course : newCourses) {
        myDefaultCoursesComboBox.addItem(course);
      }
    }
  }
);
  myRefreshButton.setVisible(true);
}
