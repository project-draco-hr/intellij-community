{
  final PyStringLiteralExpression pyString=as(context,PyStringLiteralExpression.class);
  if (pyString == null) {
    return;
  }
  for (  ASTNode node : pyString.getStringNodes()) {
    final int relNodeOffset=node.getTextRange().getStartOffset() - pyString.getTextRange().getStartOffset();
    for (    FragmentOffsets offsets : getInjectionRanges(node)) {
      if (offsets.containsNamedUnicodeEscape())       continue;
      registrar.startInjecting(PyDocstringLanguageDialect.getInstance());
      registrar.addPlace(null,null,pyString,offsets.getContentRange().shiftRight(relNodeOffset));
      registrar.doneInjecting();
    }
  }
}
