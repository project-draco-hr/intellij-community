{
  final MyQueue queue=new MyQueue(20);
  queue.showNotify();
  final AtomicInteger count=new AtomicInteger();
  ScheduledThreadPoolExecutor executor=new ScheduledThreadPoolExecutor(100);
  List<Future> futures=ContainerUtil.newArrayList();
  for (int i=0; i < 10; i++) {
    ScheduledFuture<?> future=executor.schedule(new Runnable(){
      @Override public void run(){
        for (int j=0; j < 100; j++) {
          TimeoutUtil.sleep(1);
          queue.queue(new Update(new Object()){
            @Override public void run(){
              count.incrementAndGet();
            }
          }
);
        }
      }
    }
,0,TimeUnit.MILLISECONDS);
    futures.add(future);
  }
  for (  Future future : futures) {
    future.get();
  }
  waitForExecution(queue);
  assertEquals(1000,count.get());
}
