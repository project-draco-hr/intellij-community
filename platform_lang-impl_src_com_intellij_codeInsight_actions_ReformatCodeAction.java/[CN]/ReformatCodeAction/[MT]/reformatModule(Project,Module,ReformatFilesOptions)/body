{
  boolean shouldOptimizeImports=selectedFlags.isOptimizeImports() && !DumbService.getInstance(project).isDumb();
  boolean processOnlyChangedText=selectedFlags.isProcessOnlyChangedText();
  AbstractLayoutCodeProcessor processor;
  if (moduleContext != null)   processor=new ReformatCodeProcessor(project,moduleContext,processOnlyChangedText);
 else   processor=new ReformatCodeProcessor(project,processOnlyChangedText);
  registerScopeFilter(processor,selectedFlags.getSearchScope());
  registerFileMaskFilter(processor,selectedFlags.getFileTypeMask());
  if (shouldOptimizeImports) {
    processor=new OptimizeImportsProcessor(processor);
  }
  if (selectedFlags.isRearrangeEntries()) {
    processor=new RearrangeCodeProcessor(processor);
  }
  processor.run();
}
