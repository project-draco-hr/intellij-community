{
  final CustomActionsSchema schema=new CustomActionsSchema();
  final JTree actionsTree=new Tree();
  Group rootGroup=new Group("root",null,null);
  final DefaultMutableTreeNode root=new DefaultMutableTreeNode(rootGroup);
  DefaultTreeModel model=new DefaultTreeModel(root);
  actionsTree.setModel(model);
  schema.fillActionGroups(root);
  for (int i=0; i < root.getChildCount(); i++) {
    final DefaultMutableTreeNode treeNode=(DefaultMutableTreeNode)root.getChildAt(i);
    if ("Main menu".equals(getItemId(treeNode))) {
      hideActionFromMainMenu(root,schema,treeNode);
    }
    if ("Editor Popup Menu".equals(getItemId(treeNode))) {
      final HashSet<String> items=ContainerUtil.newHashSet("CopyAsPlainText","CopyAsRichText","CopyReference","EditorPasteSimple","Folding","Generate","CompareClipboardWithSelection","ChangeFileEncodingAction");
      hideActions(schema,root,treeNode,items);
    }
    if ("Editor Tab Popup Menu".equals(getItemId(treeNode))) {
      final HashSet<String> items=ContainerUtil.newHashSet("CloseAllUnmodifiedEditors","CloseAllUnpinnedEditors","CloseAllEditorsButActive","CopyReference","MoveTabRight","MoveTabDown","MoveEditorToOppositeTabGroup","OpenEditorInOppositeTabGroup","ChangeSplitOrientation","PinActiveTab","Tabs Placement","TabsAlphabeticalMode","AddNewTabToTheEndMode","NextTab","PreviousTab","Add to Favorites","Add All To Favorites","External Tools","ValidateXml");
      hideActions(schema,root,treeNode,items);
    }
    if ("Project View Popup Menu".equals(getItemId(treeNode))) {
      final HashSet<String> items=ContainerUtil.newHashSet("NewHtmlFile","CopyAsPlainText","CopyAsRichText","CopyReference","CleanPyc","Add to Favorites","Images.ShowThumbnails","CompareTwoFiles","CompareFileWithEditor","SynchronizeCurrentFile","Mark Directory As","ShowFilePath");
      hideActions(schema,root,treeNode,items);
    }
  }
  CustomActionsSchema.getInstance().copyFrom(schema);
}
