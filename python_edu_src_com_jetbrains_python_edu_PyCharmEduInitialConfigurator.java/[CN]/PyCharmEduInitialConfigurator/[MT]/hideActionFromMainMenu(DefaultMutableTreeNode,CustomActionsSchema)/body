{
  final TreeNode mainMenu=root.getFirstChild();
  for (int i=0; i < mainMenu.getChildCount(); i++) {
    final DefaultMutableTreeNode menuItem=(DefaultMutableTreeNode)mainMenu.getChildAt(i);
    if ("File".equals(getItemId(menuItem))) {
      final String[] fileItems={"Print/Export Actions","SaveAll","Export/Import Actions","Synchronize","ChangeFileEncodingAction","Line Separators","ToggleReadOnlyAttribute"};
      for (      String item : fileItems) {
        hideAction(schema,root,menuItem,item);
      }
    }
 else     if ("Edit".equals(getItemId(menuItem))) {
      final String[] fileItems={"CopyAsPlainText","CopyAsReachText","CopyReference","EditorPasteSimple","Macros","EditorToggleCase","TemplateParametersNavigation","EscapeEntities"};
      for (      String item : fileItems) {
        hideAction(schema,root,menuItem,item);
      }
    }
 else     if ("View".equals(getItemId(menuItem))) {
      final String[] fileItems={"QuickDefinition","ExpressionTypeInfo","EditorContextInfo","ShowErrorDescription","RecentChanges","CompareActions","QuickChangeScheme"};
      for (      String item : fileItems) {
        hideAction(schema,root,menuItem,item);
      }
    }
 else     if ("Navigate".equals(getItemId(menuItem))) {
      final String[] fileItems={"GotoCustomRegion","JumpToLastChange","JumpToNextChange","SelectIn","GotoTypeDeclaration","GotoTest","GotoRelated","ShowFilePath","Hierarchy Actions","Goto Error/Bookmark Actions","GoToEditPointGroup","Change Navigation Actions","Method Navigation Actions"};
      for (      String item : fileItems) {
        hideAction(schema,root,menuItem,item);
      }
    }
  }
  final String[] menuItems={"Tools","VCS","Refactor","Code","Window","Run"};
  for (  String item : menuItems) {
    hideAction(schema,root,mainMenu,item);
  }
}
