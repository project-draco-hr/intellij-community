{
  final TreeNode mainMenu=root.getFirstChild();
  for (int i=0; i < mainMenu.getChildCount(); i++) {
    final DefaultMutableTreeNode menuItem=(DefaultMutableTreeNode)mainMenu.getChildAt(i);
    if ("File".equals(getItemId(menuItem))) {
      final HashSet<String> fileItems=ContainerUtil.newHashSet("TemplateProjectProperties","ExportToHTML","SaveAll","Export/Import Actions","Add to Favorites","Synchronize","ChangeFileEncodingAction","Line Separators","ToggleReadOnlyAttribute");
      hideActions(schema,root,menuItem,fileItems);
    }
 else     if ("Edit".equals(getItemId(menuItem))) {
      final HashSet<String> editItems=ContainerUtil.newHashSet("CopyAsPlainText","CopyAsReachText","CopyReference","EditorPasteSimple","Macros","EditorToggleCase","EditorJoinLines","FillParagraph","Convert Indents","TemplateParametersNavigation","EscapeEntities");
      hideActions(schema,root,menuItem,editItems);
    }
 else     if ("View".equals(getItemId(menuItem))) {
      final HashSet<String> viewItems=ContainerUtil.newHashSet("QuickDefinition","ExpressionTypeInfo","EditorContextInfo","ShowErrorDescription","RecentChanges","CompareActions","QuickChangeScheme");
      hideActions(schema,root,menuItem,viewItems);
    }
 else     if ("Navigate".equals(getItemId(menuItem))) {
      final HashSet<String> navigateItems=ContainerUtil.newHashSet("GotoCustomRegion","JumpToLastChange","JumpToNextChange","SelectIn","GotoTypeDeclaration","GotoTest","GotoRelated","ShowFilePath","Hierarchy Actions","Bookmarks","Goto Error/Bookmark Actions","GoToEditPointGroup","Change Navigation Actions","Method Navigation Actions");
      hideActions(schema,root,menuItem,navigateItems);
    }
  }
  final HashSet<String> menuItems=ContainerUtil.newHashSet("Tools","VCS","Refactor","Code","Window","Run");
  hideActions(schema,root,mainMenu,menuItems);
}
