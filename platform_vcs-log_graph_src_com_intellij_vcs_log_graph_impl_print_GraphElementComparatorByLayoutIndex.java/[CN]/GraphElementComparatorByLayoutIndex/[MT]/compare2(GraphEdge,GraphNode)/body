{
  Pair<Integer,Integer> normalEdge=asNormalEdge(edge);
  if (normalEdge == null) {
    return getLayoutIndex(getNotNullNodeIndex(edge)) - getLayoutIndex(node.getNodeIndex());
  }
  int upEdgeLI=getLayoutIndex(normalEdge.first);
  int downEdgeLI=getLayoutIndex(normalEdge.second);
  int nodeLI=getLayoutIndex(node.getNodeIndex());
  if (Math.max(upEdgeLI,downEdgeLI) != nodeLI)   return Math.max(upEdgeLI,downEdgeLI) - nodeLI;
 else   return normalEdge.first - node.getNodeIndex();
}
