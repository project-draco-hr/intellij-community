{
  final List<RepoPackage> result=new ArrayList<>();
  final boolean simpleIndex=url.endsWith("simple/");
  final List<String> packagesList=parsePyPIListFromWeb(url,simpleIndex);
  for (  String pyPackage : packagesList) {
    if (simpleIndex) {
      final Pair<String,String> nameVersion=splitNameVersion(StringUtil.trimTrailing(pyPackage,'/'));
      result.add(new RepoPackage(nameVersion.getFirst(),url,nameVersion.getSecond()));
    }
 else {
      try {
        final Pattern repositoryPattern=Pattern.compile(url + "([^/]*)/([^/]*)$");
        final Matcher matcher=repositoryPattern.matcher(URLDecoder.decode(pyPackage,"UTF-8"));
        if (matcher.find()) {
          final String packageName=matcher.group(1);
          final String packageVersion=matcher.group(2);
          if (!packageName.contains(" ")) {
            result.add(new RepoPackage(packageName,url,packageVersion));
          }
        }
      }
 catch (      UnsupportedEncodingException e) {
        LOG.warn(e.getMessage());
      }
    }
  }
  return result;
}
