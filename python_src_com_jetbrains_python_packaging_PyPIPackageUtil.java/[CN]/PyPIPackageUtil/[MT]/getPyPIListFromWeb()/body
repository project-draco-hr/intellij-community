{
  final List<String> packages=new ArrayList<String>();
  HTMLEditorKit.ParserCallback callback=new HTMLEditorKit.ParserCallback(){
    HTML.Tag myTag;
    boolean inTable=false;
    @Override public void handleStartTag(    HTML.Tag tag,    MutableAttributeSet set,    int i){
      if ("table".equals(tag.toString()))       inTable=!inTable;
      if (inTable && "a".equals(tag.toString())) {
        packages.add(String.valueOf(set.getAttribute(HTML.Attribute.HREF)));
      }
    }
    @Override public void handleEndTag(    HTML.Tag tag,    int i){
      if ("table".equals(tag.toString()))       inTable=!inTable;
    }
  }
;
  TrustManager[] trustAllCerts=new TrustManager[]{new PyPITrustManager()};
  try {
    SSLContext sslContext=SSLContext.getInstance("TLS");
    sslContext.init(null,trustAllCerts,new SecureRandom());
    final HttpConfigurable settings=HttpConfigurable.getInstance();
    final URLConnection connection=settings.openConnection(PYPI_LIST_URL);
    if (connection instanceof HttpsURLConnection) {
      ((HttpsURLConnection)connection).setSSLSocketFactory(sslContext.getSocketFactory());
    }
    connection.setConnectTimeout(5000);
    connection.setReadTimeout(5000);
    InputStream is=connection.getInputStream();
    Reader reader=new InputStreamReader(is);
    try {
      new ParserDelegator().parse(reader,callback,true);
    }
 catch (    IOException e) {
      LOG.warn(e);
    }
 finally {
      reader.close();
    }
  }
 catch (  Exception e) {
    LOG.warn(e);
  }
  return packages;
}
