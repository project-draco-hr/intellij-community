{
  final TreeSet<String> names=new TreeSet<String>();
  HTMLEditorKit.ParserCallback callback=new HTMLEditorKit.ParserCallback(){
    HTML.Tag myTag;
    @Override public void handleStartTag(    HTML.Tag tag,    MutableAttributeSet set,    int i){
      myTag=tag;
    }
    public void handleText(    char[] data,    int pos){
      if (myTag != null && "a".equals(myTag.toString())) {
        names.add(String.valueOf(data));
      }
    }
  }
;
  try {
    URL repositoryUrl=new URL(url);
    InputStream is=repositoryUrl.openStream();
    Reader reader=new InputStreamReader(is);
    try {
      new ParserDelegator().parse(reader,callback,true);
    }
 catch (    IOException e) {
      e.printStackTrace();
    }
 finally {
      reader.close();
    }
  }
 catch (  MalformedURLException e) {
    LOG.warn(e);
    errorMessages.add("Package list from " + url + " was not loaded. "+ e.getMessage());
  }
  return names;
}
