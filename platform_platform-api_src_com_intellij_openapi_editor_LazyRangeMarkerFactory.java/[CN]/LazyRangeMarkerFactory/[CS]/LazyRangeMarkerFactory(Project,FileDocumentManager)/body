{
  myProject=project;
  EditorFactory.getInstance().getEventMulticaster().addDocumentListener(new DocumentAdapter(){
    @Override public void beforeDocumentChange(    DocumentEvent e){
      transformRangeMarkers(e);
    }
    @Override public void documentChanged(    DocumentEvent e){
      transformRangeMarkers(e);
    }
    private void transformRangeMarkers(    @NotNull DocumentEvent e){
      Document document=e.getDocument();
      VirtualFile file=fileDocumentManager.getFile(document);
      if (file == null) {
        return;
      }
      WeakList<LazyMarker> lazyMarkers=file.getUserData(LAZY_MARKERS_KEY);
      if (lazyMarkers == null) {
        return;
      }
      List<LazyMarker> markers=lazyMarkers.toStrongList();
      List<LazyMarker> markersToRemove=null;
      for (      LazyMarker marker : markers) {
        if (file.equals(marker.getFile()) && marker.documentChanged(document) != null) {
          if (markersToRemove == null) {
            markersToRemove=new SmartList<LazyMarker>();
          }
          markersToRemove.add(marker);
        }
      }
      if (markersToRemove != null) {
        lazyMarkers.removeAll(markersToRemove);
      }
    }
  }
,project);
}
