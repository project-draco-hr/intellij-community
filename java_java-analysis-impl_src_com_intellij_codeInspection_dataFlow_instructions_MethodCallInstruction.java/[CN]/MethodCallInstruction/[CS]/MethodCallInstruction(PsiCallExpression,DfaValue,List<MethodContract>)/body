{
  myContext=call;
  myContracts=contracts;
  myMethodType=MethodType.REGULAR_METHOD_CALL;
  myCall=call;
  final PsiExpressionList argList=call.getArgumentList();
  myArgs=argList != null ? argList.getExpressions() : PsiExpression.EMPTY_ARRAY;
  myType=myCall.getType();
  JavaResolveResult result=call.resolveMethodGenerics();
  myTargetMethod=(PsiMethod)result.getElement();
  PsiSubstitutor substitutor=result.getSubstitutor();
  if (argList != null && myTargetMethod != null) {
    PsiParameter[] parameters=myTargetMethod.getParameterList().getParameters();
    myVarArgCall=isVarArgCall(myTargetMethod,substitutor,myArgs,parameters);
    myArgRequiredNullability=calcArgRequiredNullability(substitutor,parameters);
  }
 else {
    myVarArgCall=false;
    myArgRequiredNullability=Collections.emptyMap();
  }
  myShouldFlushFields=!(call instanceof PsiNewExpression && myType != null && myType.getArrayDimensions() > 0) && !isPureCall();
  myPrecalculatedReturnValue=precalculatedReturnValue;
  myOfNullable=call instanceof PsiMethodCallExpression && DfaOptionalSupport.resolveOfNullable((PsiMethodCallExpression)call) != null;
}
