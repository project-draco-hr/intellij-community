{
  PsiMethod[] constructors=inheritor.getConstructors();
  if (constructors.length == 0 && constructorCanBeCalledImplicitly) {
    if (!processImplicitConstructorCall(inheritor,processor,constructor,inheritor))     return false;
  }
  for (  PsiMethod method : constructors) {
    PsiCodeBlock body=method.getBody();
    if (body == null || method == constructor) {
      continue;
    }
    PsiStatement[] statements=body.getStatements();
    if (statements.length != 0) {
      PsiStatement statement=statements[0];
      if (statement instanceof PsiExpressionStatement) {
        PsiExpression expr=((PsiExpressionStatement)statement).getExpression();
        if (expr instanceof PsiMethodCallExpression) {
          PsiReferenceExpression refExpr=((PsiMethodCallExpression)expr).getMethodExpression();
          if (PsiSearchScopeUtil.isInScope(searchScope,refExpr)) {
            if (refExpr.textMatches(superOrThisKeyword)) {
              PsiElement referencedElement=refExpr.resolve();
              if (referencedElement instanceof PsiMethod) {
                PsiMethod constructor1=(PsiMethod)referencedElement;
                boolean match=isStrictSignatureSearch ? myManager.areElementsEquivalent(constructor1,constructor) : myManager.areElementsEquivalent(constructor.getContainingClass(),constructor1.getContainingClass());
                if (match && !processor.process(refExpr))                 return false;
              }
              continue;
            }
          }
        }
      }
    }
    if (constructorCanBeCalledImplicitly) {
      if (!processImplicitConstructorCall(method,processor,constructor,inheritor))       return false;
    }
  }
  return true;
}
