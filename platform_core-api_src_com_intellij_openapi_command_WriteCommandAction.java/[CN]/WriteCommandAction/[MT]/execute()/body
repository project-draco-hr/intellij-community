{
  Application application=ApplicationManager.getApplication();
  final boolean dispatchThread=application.isDispatchThread();
  if (!dispatchThread && application.isReadAccessAllowed()) {
    LOG.error("Must not start write action from within read action in the other thread - deadlock is coming");
    throw new IllegalStateException();
  }
  final RunResult<T> result=new RunResult<T>(this);
  if (dispatchThread) {
    performWriteCommandAction(result);
  }
 else {
    try {
      application.invokeAndWait(new Runnable(){
        @Override public void run(){
          AccessToken token=TransactionGuard.getInstance().startSynchronousTransaction(TransactionKind.ANY_CHANGE);
          try {
            performWriteCommandAction(result);
          }
  finally {
            token.finish();
          }
        }
      }
,ModalityState.defaultModalityState());
    }
 catch (    ProcessCanceledException ignored) {
    }
  }
  return result;
}
