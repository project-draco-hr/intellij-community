{
  final Pair<Substring,Integer> pair=parseSectionHeader(sectionStartLine);
  if (pair.getFirst() == null) {
    return Pair.create(null,sectionStartLine);
  }
  final String normalized=getNormalizedSectionTitle(pair.getFirst().toString());
  if (normalized == null) {
    return Pair.create(null,sectionStartLine);
  }
  int lineNum=skipEmptyLines(pair.getSecond());
  final List<SectionField> fields=new ArrayList<SectionField>();
  final int sectionIndent=getLineIndentSize(sectionStartLine);
  while (!isSectionBreak(lineNum,sectionIndent)) {
    if (!isEmpty(lineNum)) {
      final Pair<SectionField,Integer> result=parseSectionField(lineNum,normalized,sectionIndent);
      if (result.getFirst() != null) {
        fields.add(result.getFirst());
        lineNum=result.getSecond();
        continue;
      }
    }
    lineNum++;
  }
  return Pair.create(new Section(pair.getFirst(),fields),lineNum);
}
