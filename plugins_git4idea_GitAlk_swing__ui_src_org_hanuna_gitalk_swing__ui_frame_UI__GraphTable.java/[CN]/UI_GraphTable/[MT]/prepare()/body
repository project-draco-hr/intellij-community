{
  setTableHeader(null);
  setDefaultRenderer(GraphCommitCell.class,new GraphCommitCellRender(graphPainter));
  setRowHeight(HEIGHT_CELL);
  setShowHorizontalLines(false);
  setIntercellSpacing(new Dimension(0,0));
  setPreferredColumnWidths();
  getSelectionModel().addListSelectionListener(new ListSelectionListener(){
    @Override public void valueChanged(    ListSelectionEvent e){
      if (selectionHistory[0] == null) {
        selectionHistory[0]=getSelectedRows();
      }
 else       if (selectionHistory[1] == null) {
        selectionHistory[1]=getSelectedRows();
      }
 else {
        selectionHistory[0]=selectionHistory[1];
        selectionHistory[1]=getSelectedRows();
      }
      int selectedRow=getSelectedRow();
      if (selectedRow >= 0) {
        ui_controller.click(selectedRow);
      }
    }
  }
);
  addMouseMotionListener(mouseAdapter);
  addMouseListener(mouseAdapter);
  addKeyListener(new KeyAdapter(){
    @Override public void keyPressed(    KeyEvent e){
      if (e.getKeyCode() == KeyEvent.VK_ESCAPE) {
        if (myNodesBeingDragged != null && dragged) {
          ui_controller.getDragDropListener().draggingCanceled(myNodesBeingDragged);
        }
        myNodesBeingDragged=null;
        myRowIndicesBeingDragged=null;
        dragged=false;
      }
    }
  }
);
}
