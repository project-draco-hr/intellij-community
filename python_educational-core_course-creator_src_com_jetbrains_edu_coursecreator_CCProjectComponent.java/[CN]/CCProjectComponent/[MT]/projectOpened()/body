{
  StartupManager.getInstance(myProject).runWhenProjectIsInitialized(new Runnable(){
    @Override public void run(){
      final Course course=CCProjectService.getInstance(myProject).getCourse();
      if (course != null) {
        course.initCourse(true);
        myListener=new CCFileDeletedListener(myProject);
        VirtualFileManager.getInstance().addVirtualFileListener(myListener);
        final CCEditorFactoryListener editorFactoryListener=new CCEditorFactoryListener();
        EditorFactory.getInstance().addEditorFactoryListener(editorFactoryListener,myProject);
        VirtualFile[] files=FileEditorManager.getInstance(myProject).getOpenFiles();
        for (        VirtualFile file : files) {
          if (CCProjectService.getInstance(myProject).isTaskFile(file)) {
            FileEditorManager.getInstance(myProject).closeFile(file);
            continue;
          }
          FileEditor fileEditor=FileEditorManager.getInstance(myProject).getSelectedEditor(file);
          if (fileEditor instanceof PsiAwareTextEditorImpl) {
            Editor editor=((PsiAwareTextEditorImpl)fileEditor).getEditor();
            editorFactoryListener.editorCreated(new EditorFactoryEvent(new EditorFactoryImpl(ProjectManager.getInstance()),editor));
          }
        }
      }
    }
  }
);
}
