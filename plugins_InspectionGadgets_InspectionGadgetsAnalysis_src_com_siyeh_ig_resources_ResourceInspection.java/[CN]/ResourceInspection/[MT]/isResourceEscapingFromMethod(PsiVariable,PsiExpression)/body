{
  final PsiElement parent=ParenthesesUtils.getParentSkipParentheses(resourceCreationExpression);
  if (parent instanceof PsiReturnStatement || parent instanceof PsiResourceVariable) {
    return true;
  }
 else   if (parent instanceof PsiAssignmentExpression) {
    final PsiAssignmentExpression assignmentExpression=(PsiAssignmentExpression)parent;
    if (ParenthesesUtils.stripParentheses(assignmentExpression.getRExpression()) != resourceCreationExpression) {
      return true;
    }
    final PsiExpression lhs=ParenthesesUtils.stripParentheses(assignmentExpression.getLExpression());
    if (lhs instanceof PsiReferenceExpression) {
      final PsiReferenceExpression referenceExpression=(PsiReferenceExpression)lhs;
      final PsiElement target=referenceExpression.resolve();
      if (target instanceof PsiField) {
        return true;
      }
    }
  }
 else   if (parent instanceof PsiExpressionList) {
    PsiElement grandParent=parent.getParent();
    if (grandParent instanceof PsiAnonymousClass) {
      grandParent=grandParent.getParent();
    }
    if (grandParent instanceof PsiCallExpression) {
      return true;
    }
  }
  if (boundVariable == null) {
    return false;
  }
  final PsiCodeBlock codeBlock=PsiTreeUtil.getParentOfType(resourceCreationExpression,PsiCodeBlock.class,true,PsiMember.class);
  if (codeBlock == null) {
    return false;
  }
  final EscapeVisitor visitor=new EscapeVisitor(boundVariable);
  codeBlock.accept(visitor);
  return visitor.isEscaped();
}
