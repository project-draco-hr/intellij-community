{
  if (resourceCreationExpression instanceof PsiMethodCallExpression) {
    final PsiMethodCallExpression methodCallExpression=(PsiMethodCallExpression)resourceCreationExpression;
    final PsiReferenceExpression methodExpression=methodCallExpression.getMethodExpression();
    final PsiExpression qualifierExpression=methodExpression.getQualifierExpression();
    if (qualifierExpression instanceof PsiReferenceExpression) {
      final PsiReferenceExpression referenceExpression=(PsiReferenceExpression)qualifierExpression;
      final PsiElement target=referenceExpression.resolve();
      if (target instanceof PsiField) {
        final PsiField field=(PsiField)target;
        final String fieldName=field.getName();
        if ("out".equals(fieldName) || "err".equals(fieldName)) {
          final PsiClass containingClass=field.getContainingClass();
          if (containingClass != null && "java.lang.System".equals(containingClass.getQualifiedName())) {
            return true;
          }
        }
      }
    }
  }
  PsiElement parent=ParenthesesUtils.getParentSkipParentheses(resourceCreationExpression);
  if (parent instanceof PsiConditionalExpression) {
    parent=ParenthesesUtils.getParentSkipParentheses(parent);
  }
  if (parent instanceof PsiReturnStatement) {
    return true;
  }
 else   if (parent instanceof PsiAssignmentExpression) {
    final PsiAssignmentExpression assignmentExpression=(PsiAssignmentExpression)parent;
    if (ParenthesesUtils.stripParentheses(assignmentExpression.getRExpression()) != resourceCreationExpression) {
      return true;
    }
    final PsiExpression lhs=ParenthesesUtils.stripParentheses(assignmentExpression.getLExpression());
    if (lhs instanceof PsiReferenceExpression) {
      final PsiReferenceExpression referenceExpression=(PsiReferenceExpression)lhs;
      final PsiElement target=referenceExpression.resolve();
      if (target instanceof PsiField) {
        return true;
      }
    }
  }
 else   if (parent instanceof PsiExpressionList) {
    PsiElement grandParent=parent.getParent();
    if (grandParent instanceof PsiAnonymousClass) {
      grandParent=grandParent.getParent();
    }
    if (grandParent instanceof PsiCallExpression) {
      return true;
    }
  }
  if (boundVariable == null) {
    return false;
  }
  final PsiCodeBlock codeBlock=PsiTreeUtil.getParentOfType(resourceCreationExpression,PsiCodeBlock.class,true,PsiMember.class);
  if (codeBlock == null) {
    return false;
  }
  final EscapeVisitor visitor=new EscapeVisitor(boundVariable);
  codeBlock.accept(visitor);
  return visitor.isEscaped();
}
