{
  super.visitReferenceExpression(referenceExpression);
  if (containsClose) {
    return;
  }
  final String text=referenceExpression.getText();
  if (text == null || !text.equals(resourceName)) {
    return;
  }
  final PsiElement parent=referenceExpression.getParent();
  if (!(parent instanceof PsiExpressionList)) {
    return;
  }
  final PsiExpressionList argumentList=(PsiExpressionList)parent;
  final PsiExpression[] arguments=argumentList.getExpressions();
  if (arguments.length != 1) {
    return;
  }
  final PsiElement grandParent=parent.getParent();
  if (!(grandParent instanceof PsiMethodCallExpression)) {
    return;
  }
  final PsiMethodCallExpression methodCallExpression=(PsiMethodCallExpression)grandParent;
  final PsiReferenceExpression methodExpression=methodCallExpression.getMethodExpression();
  final String methodName=methodExpression.getReferenceName();
  if (methodName == null || !methodName.contains(HardcodedMethodConstants.CLOSE)) {
    return;
  }
  final PsiElement target=referenceExpression.resolve();
  if (target == null || !target.equals(resource)) {
    return;
  }
  containsClose=true;
}
