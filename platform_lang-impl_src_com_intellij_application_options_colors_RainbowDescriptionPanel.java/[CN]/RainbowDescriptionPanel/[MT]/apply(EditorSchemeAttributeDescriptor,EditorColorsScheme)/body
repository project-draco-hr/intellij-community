{
  if (!(attributeDescriptor instanceof RainbowAttributeDescriptor))   return;
  RainbowAttributeDescriptor descriptor=(RainbowAttributeDescriptor)attributeDescriptor;
  List<Pair<Boolean,Color>> rainbowCurState=descriptor.getRainbowColorsInSchemaState();
  if (rainbowCurState.size() < myCbStops.length)   return;
  boolean isDefaultLanguage=descriptor.getLanguage() == null;
  myGlobalState.setRainbowOn(descriptor.getLanguage(),isDefaultLanguage ? Boolean.valueOf(myRainbow.isSelected()) : myInheritAttributesBox.isSelected() ? null : Boolean.valueOf(myRainbow.isSelected()));
  for (int i=0; i < myCbStops.length; ++i) {
    boolean isOverride=myCbStops[i].isSelected();
    rainbowCurState.set(i,Pair.create(isOverride,isOverride ? myStops[i].getSelectedColor() : descriptor.getDefaultColor(i)));
  }
  descriptor.apply(scheme);
}
