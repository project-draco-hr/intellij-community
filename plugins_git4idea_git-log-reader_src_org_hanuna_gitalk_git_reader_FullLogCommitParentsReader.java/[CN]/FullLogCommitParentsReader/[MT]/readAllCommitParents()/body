{
  final List<CommitParents> commitParentsList=new ArrayList<CommitParents>();
  Executor<Integer> progressUpdater=new Executor<Integer>(){
    @Override public void execute(    Integer key){
      if (key % 100 == 0) {
        statusUpdater.execute("Read " + key + " commits");
      }
    }
  }
;
  final MyTimer gitThink=new MyTimer("gitThink");
  final MyTimer readTimer=new MyTimer("read commit parents");
  ProcessOutputReader outputReader=new ProcessOutputReader(progressUpdater,new Executor<String>(){
    private boolean wasReadFirstLine=false;
    @Override public void execute(    String key){
      if (!wasReadFirstLine) {
        wasReadFirstLine=true;
        gitThink.print();
        readTimer.clear();
      }
      CommitParents commitParents=CommitParser.parseCommitParents(key);
      commitParentsList.add(commitParents);
    }
  }
);
  statusUpdater.execute("Begin load git repository");
  outputReader.startRead(GitProcessFactory.getInstance(myProject).allLog());
  readTimer.print();
  return commitParentsList;
}
