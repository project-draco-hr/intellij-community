{
  ProjectTemplatesFactory[] factories=ProjectTemplatesFactory.EP_NAME.getExtensions();
  final MultiMap<TemplatesGroup,ProjectTemplate> groups=new MultiMap<TemplatesGroup,ProjectTemplate>();
  for (  ProjectTemplatesFactory factory : factories) {
    if (!includeArchived && (factory instanceof ArchivedTemplatesFactory))     continue;
    for (    String group : factory.getGroups()) {
      ProjectTemplate[] templates=factory.createTemplates(group,context);
      List<ProjectTemplate> values=Arrays.asList(templates);
      if (!values.isEmpty()) {
        Icon icon=factory.getGroupIcon(group);
        TemplatesGroup templatesGroup=new TemplatesGroup(group,null,icon,factory.getGroupWeight(group));
        if (icon != null) {
          Collection<ProjectTemplate> collection=groups.remove(templatesGroup);
          groups.putValues(templatesGroup,values);
          if (collection != null) {
            groups.putValues(templatesGroup,collection);
          }
        }
 else {
          groups.putValues(templatesGroup,values);
        }
      }
    }
  }
  final MultiMap<TemplatesGroup,ProjectTemplate> sorted=new MultiMap<TemplatesGroup,ProjectTemplate>();
  for (  Map.Entry<TemplatesGroup,Collection<ProjectTemplate>> entry : groups.entrySet()) {
    Collection<ProjectTemplate> templates=entry.getValue();
    if (templates.size() == 1 && !ProjectTemplatesFactory.CUSTOM_GROUP.equals(entry.getKey().getName())) {
      if (!(templates.iterator().next() instanceof LocalArchivedTemplate)) {
        sorted.putValues(new TemplatesGroup(ProjectTemplatesFactory.OTHER_GROUP,null,null,-1),templates);
        continue;
      }
    }
    sorted.putValues(entry.getKey(),templates);
  }
  return sorted;
}
