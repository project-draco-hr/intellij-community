{
  final int size=myVertices.size();
  final List<WeightAware<MethodIncompleteSignature>> initedVertexes=new ArrayList<WeightAware<MethodIncompleteSignature>>(size);
  final LinkedHashMap<MethodIncompleteSignature,MethodsChain> initedChains=new LinkedHashMap<MethodIncompleteSignature,MethodsChain>(size);
  final Iterator<Map.Entry<MethodIncompleteSignature,MethodsChain>> chainsIterator=myChains.entrySet().iterator();
  for (  final WeightAware<MethodIncompleteSignature> vertex : myVertices) {
    final Map.Entry<MethodIncompleteSignature,MethodsChain> chainEntry=chainsIterator.next();
    final MethodIncompleteSignature method=vertex.getUnderlying();
    if (!excludedEdgeNames.contains(method.getName())) {
      initedVertexes.add(vertex);
      final MethodsChain methodsChain=chainEntry.getValue();
      initedChains.put(chainEntry.getKey(),methodsChain);
    }
  }
  return new InitResult(initedVertexes,initedChains);
}
