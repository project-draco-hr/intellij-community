{
  PsiDirectory psiDirectory=getPackageDirectory("com/package1");
  assertNotNull(psiDirectory);
  PsiPackage psiPackage=JavaDirectoryService.getInstance().getPackage(psiDirectory);
  assertNotNull(psiPackage);
  PsiClass[] classes=psiPackage.getClasses();
  sortClassesByName(classes);
  PsiFile file=classes[0].getContainingFile();
  AnalysisScope scope=new AnalysisScope(file);
  DependenciesBuilder builder=new ForwardDependenciesBuilder(myProject,scope);
  builder.analyze();
  DependencyUISettings.getInstance().SCOPE_TYPE=PackagePatternProvider.PACKAGES;
  DependenciesPanel dependenciesPanel=new DependenciesPanel(myProject,builder);
  try {
    JTree leftTree=dependenciesPanel.getLeftTree();
    PlatformTestUtil.assertTreeEqual(leftTree,"-Root\n" + " Library Classes\n" + " -Production Classes\n"+ "  -com.package1\n"+ "   [Class1.java]\n"+ " Test Classes\n",true);
    JTree rightTree=dependenciesPanel.getRightTree();
    PlatformTestUtil.assertTreeEqual(rightTree,"-Root\n" + " Library Classes\n" + " -Production Classes\n"+ "  -com.package1\n"+ "   Class2.java\n"+ " Test Classes\n",true);
  }
  finally {
    Disposer.dispose(dependenciesPanel);
  }
}
