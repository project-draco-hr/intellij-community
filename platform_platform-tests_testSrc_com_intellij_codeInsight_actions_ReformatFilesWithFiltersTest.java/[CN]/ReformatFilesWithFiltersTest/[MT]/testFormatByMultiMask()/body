{
  TestFileStructure fileTree=new TestFileStructure(getModule(),myWorkingDirectory);
  PsiFile java1=fileTree.addTestFile("Test.java","empty content");
  PsiFile java2=fileTree.addTestFile("Pair.java","empty content");
  PsiFile java3=fileTree.addTestFile("Pair2.java","empty content");
  PsiFile php1=fileTree.addTestFile("Test.php","empty content");
  PsiFile php2=fileTree.addTestFile("Test2.php","empty content");
  PsiFile js1=fileTree.addTestFile("Test1.js","empty content");
  PsiFile js2=fileTree.addTestFile("Test2.js","empty content");
  PsiFile js3=fileTree.addTestFile("Test3.js","empty content");
  PsiFile py1=fileTree.addTestFile("Test1.py","empty content");
  PsiFile py2=fileTree.addTestFile("Test2.py","empty content");
  PsiFile py3=fileTree.addTestFile("Test3.py","empty content");
  reformatDirectoryWithFileMask(myWorkingDirectory,"*.js, *.java");
  assertWasFormatted(js1,js2,js3,java1,java2,java3);
  assertWasNotFormatted(php1,php2,py1,py2,py3);
  reformatDirectoryWithFileMask(myWorkingDirectory,"*.php, *.js");
  assertWasFormatted(js1,js2,js3,php1,php2);
  assertWasNotFormatted(java1,java2,java3,py1,py2,py3);
  reformatDirectoryWithFileMask(myWorkingDirectory,"*.js, *.php, *.java");
  assertWasFormatted(js1,js2,js3,php1,php2,java1,java2,java3);
  assertWasNotFormatted(py1,py2,py3);
  reformatDirectoryWithFileMask(myWorkingDirectory,"*.js, *.php, *.java, *.py");
  assertWasFormatted(js1,js2,js3,php1,php2,java1,java2,java3,py1,py2,py3);
  reformatDirectoryWithFileMask(myWorkingDirectory,"*.jsp, *.dart");
  assertWasNotFormatted(js1,js2,js3,php1,php2,java1,java2,java3,py1,py2,py3);
}
