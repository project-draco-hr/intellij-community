{
  for (int i=2; i >= 0; i--) {
    ArrayList<Entry<Integer,E>> lstOwn=lstElements.get(i);
    ArrayList<Entry<Integer,E>> lstExtern=map.lstElements.get(i);
    int ownsize=lstOwn.size();
    int externsize=lstExtern.size();
    int minsize=ownsize > externsize ? externsize : ownsize;
    for (int j=minsize - 1; j >= 0; j--) {
      Entry<Integer,E> second=lstExtern.get(j);
      if (second != null) {
        Entry<Integer,E> first=lstOwn.get(j);
        if (first == null) {
          putInternal(second.getKey(),union.copy(second.getValue()),false);
        }
 else {
          first.setValue(union.union(first.getValue(),second.getValue()));
        }
      }
    }
    if (externsize > minsize) {
      for (int j=minsize; j < externsize; j++) {
        Entry<Integer,E> second=lstExtern.get(j);
        if (second != null) {
          putInternal(second.getKey(),union.copy(second.getValue()),false);
        }
      }
    }
  }
}
