{
  String urlToParse;
  if (url.startsWith("jar:file://")) {
    urlToParse=url.substring("jar:".length());
  }
 else {
    urlToParse=url;
  }
  Matcher matcher=URI_PATTERN.matcher(urlToParse);
  if (!matcher.matches()) {
    return null;
  }
  String scheme=matcher.group(1);
  if (urlToParse != url) {
    scheme="jar:" + scheme;
  }
  String authority=StringUtil.nullize(matcher.group(3));
  String path=StringUtil.nullize(matcher.group(4));
  boolean hasUrlSeparator=!StringUtil.isEmpty(matcher.group(2));
  if (authority == null) {
    if (hasUrlSeparator) {
      authority="";
    }
  }
 else   if (StandardFileSystems.FILE_PROTOCOL.equals(scheme) || !hasUrlSeparator) {
    path=path == null ? authority : (authority + path);
    authority=hasUrlSeparator ? "" : null;
  }
  if (path != null && (!StringUtil.isEmpty(authority) || StandardFileSystems.FILE_PROTOCOL.equals(scheme))) {
    path=FileUtil.toCanonicalUriPath(path);
  }
  return new UrlImpl(scheme,authority,path,matcher.group(5));
}
