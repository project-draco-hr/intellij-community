{
  PsiMethod[] constructors=scope.getConstructors();
  if (constructors.length == 0) {
    constructors=new PsiMethod[]{generateConstructor(scope)};
  }
  for (  PsiMethod constructor : constructors) {
    final GrConstructorInvocation invocation=PsiImplUtil.getChainingConstructorInvocation((GrMethod)constructor);
    if (invocation != null && invocation.isThisCall())     continue;
    final GrOpenBlock body=((GrMethod)constructor).getBlock();
    final GrStatement anchor=(GrStatement)findAnchorForAssignment(body,replaced);
    initializeInMethodInner(field,body,anchor,ContainerUtil.getFirstItem(replaced));
  }
}
