{
  List<LookupElement> result=new ArrayList<>();
  final PsiClass psiClass=PsiTreeUtil.getParentOfType(originalPosition,PsiClass.class);
  if (psiClass != null) {
    for (    PsiMethod psiMethod : psiClass.getMethods()) {
      if (!psiMethod.hasModifierProperty(PsiModifier.STATIC) && hasAppropriateReturnType(expectedReturnType,psiMethod) && areParameterTypesAppropriate(psiMethod,params,substitutor,0)) {
        result.add(createMethodRefOnThis(functionalInterfaceType,psiMethod));
      }
    }
  }
  return result;
}
