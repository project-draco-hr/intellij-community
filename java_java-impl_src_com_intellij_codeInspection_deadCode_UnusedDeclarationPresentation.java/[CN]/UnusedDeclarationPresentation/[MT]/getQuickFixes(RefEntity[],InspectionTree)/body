{
  boolean showFixes=false;
  for (  RefEntity element : refElements) {
    if (!getIgnoredRefElements().contains(element) && element.isValid()) {
      showFixes=true;
      break;
    }
  }
  if (showFixes) {
    final TreePath[] paths=tree.getSelectionPaths();
    if (paths != null) {
      int count=0;
      for (      TreePath path : paths) {
        final Object component=path.getLastPathComponent();
        if (component instanceof ProblemDescriptionNode) {
          count++;
        }
      }
      if (count > 0) {
        final QuickFixAction[] fixes=super.getQuickFixes(refElements,tree);
        if (fixes != null) {
          return count == paths.length ? fixes : ArrayUtil.mergeArrays(fixes,myQuickFixActions);
        }
      }
    }
    return myQuickFixActions;
  }
  return QuickFixAction.EMPTY;
}
