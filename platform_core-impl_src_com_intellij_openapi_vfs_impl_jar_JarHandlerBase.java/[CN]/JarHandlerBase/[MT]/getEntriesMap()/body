{
  Map<String,EntryInfo> map=SoftReference.dereference(myRelPathsToEntries);
  if (map == null) {
synchronized (myLock) {
      map=SoftReference.dereference(myRelPathsToEntries);
      if (map == null) {
        if (myCorruptedJar) {
          map=Collections.emptyMap();
        }
 else {
          LogUtil.debug(LOG,"mapping %s",myBasePath);
          map=new THashMap<String,EntryInfo>();
          map.put("",new EntryInfo(null,"",true,DEFAULT_LENGTH,DEFAULT_TIMESTAMP));
          try {
            ZipFile zip=getZipFile();
            try {
              Enumeration<? extends ZipEntry> entries=zip.entries();
              while (entries.hasMoreElements()) {
                getOrCreate(entries.nextElement(),map,zip);
              }
            }
  finally {
              ZipFileCache.release(zip);
            }
          }
 catch (          IOException e) {
            myCorruptedJar=true;
            LOG.warn(e.getMessage() + ": " + myBasePath,e);
            map=Collections.emptyMap();
          }
        }
        myRelPathsToEntries=new SoftReference<Map<String,EntryInfo>>(Collections.unmodifiableMap(map));
      }
    }
  }
  return map;
}
