{
  final PsiExpression expression=forStatement.getCondition();
  final PsiBinaryExpression condition=(PsiBinaryExpression)ParenthesesUtils.stripParentheses(expression);
  if (condition == null) {
    return null;
  }
  final PsiStatement initialization=forStatement.getInitialization();
  if (initialization == null) {
    return null;
  }
  if (!(initialization instanceof PsiDeclarationStatement)) {
    return null;
  }
  final PsiDeclarationStatement declaration=(PsiDeclarationStatement)initialization;
  final PsiElement[] declaredElements=declaration.getDeclaredElements();
  if (declaredElements.length != 1) {
    return null;
  }
  final PsiElement declaredElement=declaredElements[0];
  if (!(declaredElement instanceof PsiLocalVariable)) {
    return null;
  }
  final PsiLocalVariable variable=(PsiLocalVariable)declaredElement;
  final String collectionText=buildCollectionText(forStatement);
  final PsiArrayAccessExpression arrayAccessExpression=getArrayAccessExpression(forStatement);
  if (arrayAccessExpression == null) {
    return null;
  }
  final PsiExpression arrayExpression=arrayAccessExpression.getArrayExpression();
  final String arrayText=arrayExpression.getText();
  final PsiExpression indexExpression=arrayAccessExpression.getIndexExpression();
  final String indexOffset=getIndexOffset(indexExpression,variable);
  if (indexOffset == null) {
    return null;
  }
  final String fromOffsetText=addIndexOffset(variable.getInitializer(),indexOffset,false);
  if (fromOffsetText == null) {
    return null;
  }
  final PsiExpression limit;
  final IElementType tokenType=condition.getOperationTokenType();
  if (tokenType == JavaTokenType.LT || tokenType == JavaTokenType.LE) {
    limit=condition.getROperand();
  }
 else {
    limit=condition.getLOperand();
  }
  final String toOffsetText=addIndexOffset(limit,indexOffset,tokenType == JavaTokenType.LE || tokenType == JavaTokenType.GE);
  if (toOffsetText == null) {
    return null;
  }
  if (fromOffsetText.equals("0") && toOffsetText.equals(arrayText + ".length") && PsiUtil.isLanguageLevel5OrHigher(forStatement)) {
    return "java.util.Collections.addAll(" + collectionText + ','+ arrayText+ ");";
  }
 else {
    @NonNls final StringBuilder buffer=new StringBuilder();
    buffer.append(collectionText);
    buffer.append('.');
    buffer.append("addAll(java.util.Arrays.asList(");
    buffer.append(arrayText);
    buffer.append(')');
    if (!fromOffsetText.equals("0") || !toOffsetText.equals(arrayText + ".length")) {
      buffer.append(".subList(");
      buffer.append(fromOffsetText);
      buffer.append(", ");
      buffer.append(toOffsetText);
      buffer.append(')');
    }
    buffer.append(");");
    return buffer.toString();
  }
}
