{
  if (project.isDefault()) {
    return;
  }
  project.getMessageBus().connect().subscribe(GitRepository.GIT_REPO_CHANGE,new GitRepositoryChangeListener(){
    @Override public void repositoryChanged(    @NotNull GitRepository repository){
      getInstance().repositoryChanged(repository);
    }
  }
);
  RunManagerEx.getInstanceEx(project).addRunManagerListener(new RunManagerAdapter(){
    @Override public void runConfigurationAdded(    @NotNull RunnerAndConfigurationSettings settings){
      getInstance().onRunConfigurationAddedOrChanged(settings);
    }
    @Override public void runConfigurationChanged(    @NotNull RunnerAndConfigurationSettings settings){
      getInstance().onRunConfigurationAddedOrChanged(settings);
    }
  }
);
}
