{
  final FileSaverDialog dialog=FileChooserFactory.getInstance().createSaveFileDialog(new FileSaverDescriptor("Save Patch to",""),myProject);
  final VirtualFile baseDir=myProject.getBaseDir();
  final VirtualFileWrapper save=dialog.save(baseDir,"TheirsChanges.patch");
  if (save != null) {
    final CommitContext commitContext=new CommitContext();
    final VirtualFile baseForPatch=myBaseForPatch == null ? baseDir : myBaseForPatch;
    try {
      final List<FilePatch> textPatches=patchGroupsToOneGroup(patchGroupsToApply,baseForPatch);
      PatchWriter.writePatches(myProject,save.getFile().getPath(),baseForPatch.getPath(),textPatches,commitContext,CharsetToolkit.UTF8_CHARSET);
    }
 catch (    final IOException e) {
      LOG.info(e);
      WaitForProgressToShow.runOrInvokeLaterAboveProgress(new Runnable(){
        @Override public void run(){
          Messages.showErrorDialog(myProject,VcsBundle.message("create.patch.error.title",e.getMessage()),CommonBundle.getErrorTitle());
        }
      }
,null,myProject);
    }
  }
}
