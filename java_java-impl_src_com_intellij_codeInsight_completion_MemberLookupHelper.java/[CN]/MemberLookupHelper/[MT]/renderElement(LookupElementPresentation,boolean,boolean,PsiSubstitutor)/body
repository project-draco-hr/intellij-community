{
  final String className=myContainingClass == null ? "???" : myContainingClass.getName();
  final String memberName=myMember.getName();
  if (showClass && StringUtil.isNotEmpty(className)) {
    presentation.setItemText(className + "." + memberName);
  }
 else {
    presentation.setItemText(memberName);
  }
  final String qname=myContainingClass == null ? "" : myContainingClass.getQualifiedName();
  String pkg=qname == null ? "" : StringUtil.getPackageName(qname);
  String location=showPackage && StringUtil.isNotEmpty(pkg) ? " (" + pkg + ")" : "";
  final String params=myMergedOverloads ? "(...)" : myMember instanceof PsiMethod ? getMethodParameterString((PsiMethod)myMember,substitutor) : "";
  presentation.clearTail();
  presentation.appendTailText(params,false);
  if (myShouldImport && StringUtil.isNotEmpty(className)) {
    presentation.appendTailText(" in " + className + location,true);
  }
 else {
    presentation.appendTailText(location,true);
  }
  final PsiType type=myMember instanceof PsiMethod ? ((PsiMethod)myMember).getReturnType() : ((PsiField)myMember).getType();
  if (type != null) {
    presentation.setTypeText(substitutor.substitute(type).getPresentableText());
  }
}
