{
  LOG.assertTrue(isPopupActive());
  if (e.getID() == WindowEvent.WINDOW_LOST_FOCUS) {
    ApplicationManager.getApplication().invokeLater(new Runnable(){
      public void run(){
        if (!isPopupActive())         return;
        boolean shouldCloseAllPopup=false;
        Window focused=((WindowEvent)e).getOppositeWindow();
        if (focused == null) {
          focused=KeyboardFocusManager.getCurrentKeyboardFocusManager().getFocusedWindow();
        }
        if (focused == null) {
          shouldCloseAllPopup=true;
        }
        Component ultimateParentForFocusedComponent=UIUtil.findUltimateParent(focused);
        Component ultimateParentForEventWindow=UIUtil.findUltimateParent(((WindowEvent)e).getWindow());
        if (!shouldCloseAllPopup && ultimateParentForEventWindow == null || ultimateParentForFocusedComponent == null) {
          shouldCloseAllPopup=true;
        }
        if (!shouldCloseAllPopup && ultimateParentForEventWindow instanceof IdeFrameEx) {
          IdeFrameEx ultimateParentWindowForEvent=((IdeFrameEx)ultimateParentForEventWindow);
          if (ultimateParentWindowForEvent.isInFullScreen() && !ultimateParentForFocusedComponent.equals(ultimateParentForEventWindow)) {
            shouldCloseAllPopup=true;
          }
        }
        if (shouldCloseAllPopup) {
          closeAllPopups();
        }
      }
    }
);
  }
  if (e instanceof KeyEvent || e instanceof MouseEvent) {
    for (int i=myDispatchStack.size() - 1; (i >= 0 && i < myDispatchStack.size()); i--) {
      final boolean dispatched=myDispatchStack.get(i).dispatch(e);
      if (dispatched)       return true;
    }
  }
  return false;
}
