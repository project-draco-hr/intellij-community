{
  final PyExpression qualifier=node.getQualifier();
  if (qualifier == null)   return;
  final String name=node.getName();
  if (name != null && name.startsWith("_")) {
    final PyClass parentClass=PsiTreeUtil.getParentOfType(node,PyClass.class);
    if (parentClass != null) {
      final PsiReference reference=node.getReference();
      final PsiElement resolvedExpression=reference.resolve();
      final PyClass resolvedClass=PsiTreeUtil.getParentOfType(resolvedExpression,PyClass.class);
      if (parentClass.isSubclass(resolvedClass))       return;
    }
    registerProblem(node,PyBundle.message("INSP.protected.member.$0.access",name));
  }
}
