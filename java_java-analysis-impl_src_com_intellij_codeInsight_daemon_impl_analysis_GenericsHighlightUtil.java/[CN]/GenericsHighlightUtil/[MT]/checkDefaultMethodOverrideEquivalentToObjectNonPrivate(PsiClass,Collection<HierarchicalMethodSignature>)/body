{
  if (aClass.isInterface()) {
    for (    HierarchicalMethodSignature sig : withSupers) {
      final PsiMethod method=sig.getMethod();
      if (method.hasModifierProperty(PsiModifier.DEFAULT)) {
        for (        HierarchicalMethodSignature methodSignature : sig.getSuperSignatures()) {
          final PsiClass containingClass=methodSignature.getMethod().getContainingClass();
          if (containingClass != null && CommonClassNames.JAVA_LANG_OBJECT.equals(containingClass.getQualifiedName())) {
            final PsiIdentifier identifier=method.getNameIdentifier();
            LOG.assertTrue(identifier != null);
            return HighlightInfo.newHighlightInfo(HighlightInfoType.ERROR).descriptionAndTooltip("Default method " + sig.getName() + " overrides a member of java.lang.Object").range(identifier).create();
          }
        }
      }
    }
  }
  return null;
}
