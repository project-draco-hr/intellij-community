{
  final PsiClass aClass=PsiUtil.resolveClassInType(superType);
  if (aClass != null && classes.add(aClass)) {
    final String qualifiedName=aClass.getQualifiedName();
    if (qualifiedName != null && factory.findClass(qualifiedName,resolveScope) == null) {
      return "Cannot access " + HighlightUtil.formatClass(aClass);
    }
    if (superType instanceof PsiClassType) {
      for (      PsiType psiType : ((PsiClassType)superType).getParameters()) {
        final String notAccessibleMessage=isSuperTypeAccessible(psiType,classes,resolveScope,factory);
        if (notAccessibleMessage != null) {
          return notAccessibleMessage;
        }
      }
    }
    for (    PsiClassType type : aClass.getSuperTypes()) {
      final String notAccessibleMessage=isSuperTypeAccessible(type,classes,resolveScope,factory);
      if (notAccessibleMessage != null) {
        return notAccessibleMessage;
      }
    }
  }
  return null;
}
