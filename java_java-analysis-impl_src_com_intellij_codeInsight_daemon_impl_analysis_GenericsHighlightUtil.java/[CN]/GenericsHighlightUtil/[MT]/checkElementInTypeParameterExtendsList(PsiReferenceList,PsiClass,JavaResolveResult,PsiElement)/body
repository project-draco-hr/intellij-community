{
  final PsiJavaCodeReferenceElement[] referenceElements=referenceList.getReferenceElements();
  PsiClass extendFrom=(PsiClass)resolveResult.getElement();
  if (extendFrom == null)   return null;
  HighlightInfo errorResult=null;
  if (!extendFrom.isInterface() && referenceElements.length != 0 && element != referenceElements[0]) {
    String description=JavaErrorMessages.message("interface.expected");
    errorResult=HighlightInfo.newHighlightInfo(HighlightInfoType.ERROR).range(element).descriptionAndTooltip(description).create();
    PsiClassType type=JavaPsiFacade.getInstance(aClass.getProject()).getElementFactory().createType(extendFrom,resolveResult.getSubstitutor());
    QuickFixAction.registerQuickFixAction(errorResult,QUICK_FIX_FACTORY.createMoveBoundClassToFrontFix(aClass,type),null);
  }
 else   if (referenceElements.length != 0 && element != referenceElements[0] && referenceElements[0].resolve() instanceof PsiTypeParameter) {
    final String description=JavaErrorMessages.message("type.parameter.cannot.be.followed.by.other.bounds");
    errorResult=HighlightInfo.newHighlightInfo(HighlightInfoType.ERROR).range(element).descriptionAndTooltip(description).create();
    PsiClassType type=JavaPsiFacade.getInstance(aClass.getProject()).getElementFactory().createType(extendFrom,resolveResult.getSubstitutor());
    QuickFixAction.registerQuickFixAction(errorResult,QUICK_FIX_FACTORY.createExtendsListFix(aClass,type,false),null);
  }
  return errorResult;
}
