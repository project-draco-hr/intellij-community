{
  final List<PsiNamedElement> initialElements=Lists.newArrayList();
  for (  PsiElement element : elements) {
    final PsiNamedElement e=PyMoveModuleMembersHelper.extractNamedElement(element);
    if (e == null) {
      return;
    }
    initialElements.add(e);
  }
  String initialPath=null;
  if (targetContainer instanceof PsiFile) {
    final VirtualFile virtualFile=((PsiFile)targetContainer).getVirtualFile();
    if (virtualFile != null) {
      initialPath=FileUtil.toSystemDependentName(virtualFile.getPath());
    }
  }
  if (initialPath == null) {
    initialPath=StringUtil.notNullize(PyPsiUtils.getContainingFilePath(elements[0]));
  }
  final PyMoveModuleMembersDialog dialog=PyMoveModuleMembersDialog.getInstance(project,initialElements,initialPath,initialPath);
  if (!dialog.showAndGet()) {
    return;
  }
  final String destination=dialog.getTargetPath();
  final boolean previewUsages=dialog.isPreviewUsages();
  try {
    final PsiNamedElement[] selectedElements=ContainerUtil.findAllAsArray(dialog.getSelectedTopLevelSymbols(),PsiNamedElement.class);
    final BaseRefactoringProcessor processor=new PyMoveModuleMembersProcessor(project,selectedElements,destination,previewUsages);
    processor.run();
  }
 catch (  IncorrectOperationException e) {
    CommonRefactoringUtil.showErrorMessage(RefactoringBundle.message("error.title"),e.getMessage(),null,project);
  }
}
