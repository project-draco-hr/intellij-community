{
  final PsiNamedElement e=PyMoveModuleMembersHelper.extractNamedElement(element);
  if (e != null && PyMoveModuleMembersHelper.isMovableElement(e)) {
    if (PyUtil.isTopLevel(e)) {
      final ArrayList<PsiNamedElement> elementsToMove=Lists.newArrayList(e);
      PsiElement targetContainer=null;
      if (editor != null) {
        final Document document=editor.getDocument();
        targetContainer=PsiDocumentManager.getInstance(project).getPsiFile(document);
        final PyFile pyFile=as(targetContainer,PyFile.class);
        if (pyFile != null) {
          final SelectionModel selectionModel=editor.getSelectionModel();
          final TextRange selectionRange=new TextRange(selectionModel.getSelectionStart(),selectionModel.getSelectionEnd());
          final List<PyElement> members=PyMoveModuleMembersHelper.getTopLevelModuleMembers(pyFile);
          for (          PyElement member : members) {
            if (member != e && member.getTextRange().intersects(selectionRange)) {
              elementsToMove.add((PsiNamedElement)member);
            }
          }
        }
      }
      doMove(project,ArrayUtil.toObjectArray(elementsToMove,PsiNamedElement.class),targetContainer,null);
    }
 else {
      CommonRefactoringUtil.showErrorHint(project,editor,PyBundle.message("refactoring.move.module.members.error.selection"),RefactoringBundle.message("error.title"),null);
    }
    return true;
  }
  return false;
}
