{
  PyCallExpression expression=PsiTreeUtil.getParentOfType(file.findElementAt(editor.getCaretModel().getOffset()),PyCallExpression.class);
  if (expression != null) {
    String name=expression.getCallee().getText();
    if ("dict".equals(name)) {
      PyType type=expression.getType(TypeEvalContext.fast());
      if (type != null) {
        if (type.isBuiltin()) {
          PyExpression[] argumentList=expression.getArgumentList().getArguments();
          for (          PyExpression argument : argumentList) {
            if (!(argument instanceof PyKeywordArgument))             return false;
          }
          setText(PyBundle.message("INTN.convert.dict.constructor.to.dict.literal"));
          return true;
        }
      }
    }
  }
  PyDictLiteralExpression dictExpression=PsiTreeUtil.getParentOfType(file.findElementAt(editor.getCaretModel().getOffset()),PyDictLiteralExpression.class);
  if (dictExpression != null) {
    PyKeyValueExpression[] elements=dictExpression.getElements();
    if (elements.length != 0) {
      for (      PyKeyValueExpression element : elements) {
        if (!(element.getKey() instanceof PyStringLiteralExpression))         return false;
      }
    }
    setText(PyBundle.message("INTN.convert.dict.literal.to.dict.constructor"));
    return true;
  }
  return false;
}
