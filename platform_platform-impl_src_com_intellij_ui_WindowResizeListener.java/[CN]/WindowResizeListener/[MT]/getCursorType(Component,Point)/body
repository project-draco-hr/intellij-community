{
  if (view instanceof Dialog) {
    Dialog dialog=(Dialog)view;
    if (!dialog.isResizable())     return CUSTOM_CURSOR;
  }
 else   if (view instanceof Frame) {
    Frame frame=(Frame)view;
    if (!frame.isResizable())     return CUSTOM_CURSOR;
    if (isStateSet(frame,Frame.MAXIMIZED_BOTH))     return CUSTOM_CURSOR;
    if (isStateSet(frame,Frame.ICONIFIED))     return CUSTOM_CURSOR;
  }
  Component parent=view instanceof Window ? null : view.getParent();
  if (parent != null) {
    convertPointFromScreen(location,parent);
  }
  Rectangle bounds=view.getBounds();
  JBInsets.removeFrom(bounds,getResizeOffset(view));
  int top=location.y - bounds.y;
  if (top < 0)   return CUSTOM_CURSOR;
  int left=location.x - bounds.x;
  if (left < 0)   return CUSTOM_CURSOR;
  int right=bounds.width - left;
  if (right < 0)   return CUSTOM_CURSOR;
  int bottom=bounds.height - top;
  if (bottom < 0)   return CUSTOM_CURSOR;
  if (myCorner != null && right < myCorner.getIconWidth() && bottom < myCorner.getIconHeight()) {
    return DEFAULT_CURSOR;
  }
  Insets expected=getResizeBorder(view);
  if (expected != null) {
    if (view instanceof Frame) {
      Frame frame=(Frame)view;
      if (isStateSet(frame,Frame.MAXIMIZED_HORIZ)) {
        left=Integer.MAX_VALUE;
        right=Integer.MAX_VALUE;
      }
      if (isStateSet(frame,Frame.MAXIMIZED_VERT)) {
        top=Integer.MAX_VALUE;
        bottom=Integer.MAX_VALUE;
      }
    }
    if (top < expected.top) {
      if (left < expected.left * 2)       return NW_RESIZE_CURSOR;
      if (right < expected.right * 2)       return NE_RESIZE_CURSOR;
      return N_RESIZE_CURSOR;
    }
    if (bottom < expected.bottom) {
      if (left < expected.left * 2)       return SW_RESIZE_CURSOR;
      if (right < expected.right * 2)       return SE_RESIZE_CURSOR;
      return S_RESIZE_CURSOR;
    }
    if (left < expected.left) {
      if (top < expected.top * 2)       return NW_RESIZE_CURSOR;
      if (bottom < expected.bottom * 2)       return SW_RESIZE_CURSOR;
      return W_RESIZE_CURSOR;
    }
    if (right < expected.right) {
      if (top < expected.top * 2)       return NE_RESIZE_CURSOR;
      if (bottom < expected.bottom * 2)       return SE_RESIZE_CURSOR;
      return E_RESIZE_CURSOR;
    }
  }
  return CUSTOM_CURSOR;
}
