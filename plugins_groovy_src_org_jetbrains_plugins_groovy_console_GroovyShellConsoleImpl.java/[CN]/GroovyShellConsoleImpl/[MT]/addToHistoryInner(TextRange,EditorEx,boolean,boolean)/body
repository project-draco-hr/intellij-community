{
  final String result=super.addToHistoryInner(textRange,editor,erase,preserveMarkup);
  GroovyShellCodeFragment codeFragment=(GroovyShellCodeFragment)myFile;
  GrTopStatement[] definitions=codeFragment.getTopStatements();
  for (  GrTopStatement statement : definitions) {
    if (statement instanceof GrImportStatement) {
      codeFragment.addImportsFromString(importToString((GrImportStatement)statement));
    }
 else     if (statement instanceof GrMethod) {
      codeFragment.addVariable(((GrMethod)statement).getName(),generateClosure((GrMethod)statement));
    }
 else     if (statement instanceof GrAssignmentExpression) {
      GrAssignmentExpression assignment=(GrAssignmentExpression)statement;
      GrExpression left=assignment.getLValue();
      if (left instanceof GrReferenceExpression && !((GrReferenceExpression)left).isQualified()) {
        codeFragment.addVariable(((GrReferenceExpression)left).getReferenceName(),assignment.getRValue());
      }
    }
  }
  PsiType scriptType=((GroovyShellCodeFragment)myFile).getInferredScriptReturnType();
  if (scriptType != null) {
    codeFragment.addVariable("_",scriptType);
  }
  return result;
}
