{
  File targetFile=myTempDir.newFile("target");
  File linkFile=createSymLink(targetFile.getPath(),myTempDir.getRoot() + "/link");
  VirtualFile linkVFile=refreshAndFind(linkFile);
  assertTrue("link=" + linkFile + ", vLink="+ linkVFile,linkVFile != null && !linkVFile.isDirectory() && linkVFile.is(VFileProperty.SYMLINK));
  new WriteAction(){
    @Override protected void run(    @NotNull Result result) throws Throwable {
      linkVFile.delete(SymlinkHandlingTest.this);
    }
  }
.execute();
  assertFalse(linkVFile.toString(),linkVFile.isValid());
  assertFalse(linkFile.exists());
  assertTrue(targetFile.exists());
  File targetDir=myTempDir.newFolder("targetDir");
  File childFile=new File(targetDir,"child.txt");
  assertTrue(childFile.getPath(),childFile.exists() || childFile.createNewFile());
  File linkDir=createSymLink(targetDir.getPath(),myTempDir.getRoot() + "/linkDir");
  VirtualFile linkVDir=refreshAndFind(linkDir);
  assertTrue("link=" + linkDir + ", vLink="+ linkVDir,linkVDir != null && linkVDir.isDirectory() && linkVDir.is(VFileProperty.SYMLINK) && linkVDir.getChildren().length == 1);
  new WriteAction(){
    @Override protected void run(    @NotNull Result result) throws Throwable {
      linkVDir.delete(SymlinkHandlingTest.this);
    }
  }
.execute();
  assertFalse(linkVDir.toString(),linkVDir.isValid());
  assertFalse(linkDir.exists());
  assertTrue(targetDir.exists());
  assertTrue(childFile.exists());
}
