{
  File targetDir1=myTempDir.newFolder("target1");
  File targetDir2=myTempDir.newFolder("target2");
  assertTrue(new File(targetDir1,"child1.txt").createNewFile());
  assertTrue(new File(targetDir2,"child11.txt").createNewFile());
  assertTrue(new File(targetDir2,"child12.txt").createNewFile());
  File link=createSymLink(targetDir1.getPath(),myTempDir.getRoot() + "/link");
  VirtualFile vLink1=refreshAndFind(link);
  assertTrue("link=" + link + ", vLink="+ vLink1,vLink1 != null && vLink1.isDirectory() && vLink1.is(VFileProperty.SYMLINK));
  assertEquals(1,vLink1.getChildren().length);
  assertPathsEqual(targetDir1.getPath(),vLink1.getCanonicalPath());
  assertTrue(link.toString(),link.delete());
  createSymLink(targetDir2.getPath(),myTempDir.getRoot() + "/" + link.getName());
  refresh();
  assertTrue(vLink1.isValid());
  VirtualFile vLink2=LocalFileSystem.getInstance().findFileByIoFile(link);
  assertEquals(vLink1,vLink2);
  assertTrue("link=" + link + ", vLink="+ vLink2,vLink2 != null && vLink2.isDirectory() && vLink2.is(VFileProperty.SYMLINK));
  assertEquals(2,vLink2.getChildren().length);
  assertPathsEqual(targetDir2.getPath(),vLink1.getCanonicalPath());
}
