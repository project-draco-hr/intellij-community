{
  final TemplateManager templateManager=TemplateManager.getInstance(project);
  final Template template=templateManager.createTemplate("","");
  template.setToReformat(true);
  SuggestedNameInfo suggestedNameInfo=JavaCodeStyleManager.getInstance(project).suggestVariableName(VariableKind.LOCAL_VARIABLE,null,initializer,type);
  suggestedNameInfo=JavaCodeStyleManager.getInstance(project).suggestUniqueVariableName(suggestedNameInfo,place,true);
  Set<LookupElement> itemSet=new LinkedHashSet<LookupElement>();
  for (  String name : suggestedNameInfo.names) {
    itemSet.add(LookupElementBuilder.create(name));
  }
  final LookupElement[] lookupItems=itemSet.toArray(new LookupElement[itemSet.size()]);
  final Result result=suggestedNameInfo.names.length == 0 ? null : new TextResult(suggestedNameInfo.names[0]);
  Expression expr=new Expression(){
    @Override public LookupElement[] calculateLookupItems(    ExpressionContext context){
      return lookupItems.length > 1 ? lookupItems : null;
    }
    @Override public Result calculateResult(    ExpressionContext context){
      return result;
    }
    @Override public Result calculateQuickResult(    ExpressionContext context){
      return result;
    }
  }
;
  template.addVariable("",expr,expr,true);
  return template;
}
