{
  if (!INLINE_TABS_ENABLED && !myCurrentWhiteSpace.containsLineFeeds()) {
    myCurrentWhiteSpace.setForceSkipTabulationsUsage(true);
  }
  LeafBlockWrapper info=new LeafBlockWrapper(rootBlock,parent,myCurrentWhiteSpace,myModel,myOptions,myPreviousBlock,readOnly);
  if (index == 0) {
    info.arrangeParentTextRange();
  }
  checkInsideFormatterOffTag(rootBlock);
  TextRange textRange=rootBlock.getTextRange();
  checkRange(textRange);
  if (myPreviousBlock != null) {
    myPreviousBlock.setNextBlock(info);
  }
  if (myFirstTokenBlock == null) {
    myFirstTokenBlock=info;
  }
  myLastTokenBlock=info;
  if (currentWhiteSpaceIsReadOnly()) {
    myCurrentWhiteSpace.setReadOnly(true);
  }
  if (myCurrentSpaceProperty != null) {
    myCurrentWhiteSpace.setIsSafe(myCurrentSpaceProperty.isSafe());
    myCurrentWhiteSpace.setKeepFirstColumn(myCurrentSpaceProperty.shouldKeepFirstColumn());
  }
  if (info.isEndOfCodeBlock()) {
    myCurrentWhiteSpace.setBeforeCodeBlockEnd(true);
  }
  info.setSpaceProperty(myCurrentSpaceProperty);
  myCurrentWhiteSpace=new WhiteSpace(textRange.getEndOffset(),false);
  if (myInsideFormatRestrictingTag)   myCurrentWhiteSpace.setReadOnly(true);
  myPreviousBlock=info;
  if (myPositionOfInterest != -1 && (textRange.contains(myPositionOfInterest) || textRange.getEndOffset() == myPositionOfInterest)) {
    myResult.put(info,rootBlock);
    if (parent != null)     myResult.put(parent,parentBlock);
  }
  return info;
}
