{
  Block currentRoot=state.parentBlock;
  List<Block> subBlocks=currentRoot.getSubBlocks();
  int currentBlockIndex=state.getIndexOfChildBlockToProcess();
  final Block currentBlock=subBlocks.get(currentBlockIndex);
  initCurrentWhiteSpace(currentRoot,state.previousBlock,currentBlock);
  boolean childBlockIsRightBlock=state.parentBlockIsRightBlock && currentBlockIndex == subBlocks.size() - 1;
  final AbstractBlockWrapper wrapper=buildFrom(currentBlock,currentBlockIndex,state.wrappedBlock,state.parentBlockWrap,currentRoot,childBlockIsRightBlock);
  registerExpandableIndents(currentBlock,wrapper);
  if (wrapper.getIndent() == null) {
    wrapper.setIndent((IndentImpl)currentBlock.getIndent());
  }
  if (!state.readOnly) {
    try {
      subBlocks.set(currentBlockIndex,null);
    }
 catch (    Throwable ex) {
    }
  }
  if (state.childBlockProcessed(currentBlock,wrapper,myOptions)) {
    while (!myStates.isEmpty() && myStates.peek().isProcessed()) {
      myStates.pop();
    }
  }
}
