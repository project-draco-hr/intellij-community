{
  final PsiElement element1=referenceExpression1.resolve();
  final PsiElement element2=referenceExpression2.resolve();
  if (element1 != null) {
    if (!element1.equals(element2)) {
      return EXACTLY_UN_MATCHES;
    }
  }
 else {
    return EXACTLY_UN_MATCHES;
  }
  if (element1 instanceof PsiMember) {
    final PsiMember member1=(PsiMember)element1;
    if (member1.hasModifierProperty(PsiModifier.STATIC)) {
      return EXACTLY_MATCHES;
    }
    if (member1 instanceof PsiClass) {
      return EXACTLY_MATCHES;
    }
  }
 else {
    return EXACTLY_MATCHES;
  }
  final PsiExpression qualifier1=referenceExpression1.getQualifierExpression();
  final PsiExpression qualifier2=referenceExpression2.getQualifierExpression();
  if (qualifier1 != null && !(qualifier1 instanceof PsiThisExpression || qualifier1 instanceof PsiSuperExpression)) {
    if (qualifier2 == null) {
      return EXACTLY_UN_MATCHES;
    }
    if (!expressionsAreEquivalentDecision(qualifier1,qualifier2).getExactlyMatches()) {
      return EXACTLY_UN_MATCHES;
    }
  }
 else {
    if (qualifier2 != null && !(qualifier2 instanceof PsiThisExpression || qualifier2 instanceof PsiSuperExpression)) {
      return EXACTLY_UN_MATCHES;
    }
  }
  return EXACTLY_MATCHES;
}
