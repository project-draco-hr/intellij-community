{
  if (expressions1 == null && expressions2 == null) {
    return Decision.exact(true);
  }
  if (expressions1 == null || expressions2 == null) {
    return EXACTLY_UN_MATCHES;
  }
  if (expressions1.length != expressions2.length) {
    return EXACTLY_UN_MATCHES;
  }
  Decision oneUnMatchedDecision=null;
  for (int i=0; i < expressions1.length; i++) {
    final Decision currentDecision=expressionsAreEquivalentDecision(expressions1[i],expressions2[i]);
    if (!currentDecision.getExactlyMatches()) {
      if (oneUnMatchedDecision == null) {
        oneUnMatchedDecision=currentDecision.isExactUnMatches() ? new Decision(expressions1[i],expressions2[i]) : currentDecision;
      }
 else {
        return EXACTLY_UN_MATCHES;
      }
    }
  }
  return oneUnMatchedDecision == null ? EXACTLY_MATCHES : oneUnMatchedDecision;
}
