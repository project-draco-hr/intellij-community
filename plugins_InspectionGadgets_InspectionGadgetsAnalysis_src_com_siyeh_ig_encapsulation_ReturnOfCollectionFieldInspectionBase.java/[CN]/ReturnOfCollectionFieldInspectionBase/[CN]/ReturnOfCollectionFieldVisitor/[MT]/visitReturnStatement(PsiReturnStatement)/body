{
  super.visitReturnStatement(statement);
  final PsiExpression returnValue=statement.getReturnValue();
  if (returnValue == null) {
    return;
  }
  final PsiElement element=PsiTreeUtil.getParentOfType(statement,PsiMethod.class,PsiLambdaExpression.class);
  if (element == null) {
    return;
  }
  if (ignorePrivateMethods && element instanceof PsiMethod && ((PsiMethod)element).hasModifierProperty(PsiModifier.PRIVATE)) {
    return;
  }
  final PsiClass returnStatementClass=PsiTreeUtil.getParentOfType(statement,PsiClass.class);
  if (returnStatementClass == null) {
    return;
  }
  if (!(returnValue instanceof PsiReferenceExpression)) {
    return;
  }
  final PsiReferenceExpression referenceExpression=(PsiReferenceExpression)returnValue;
  final PsiElement referent=referenceExpression.resolve();
  if (!(referent instanceof PsiField)) {
    return;
  }
  final PsiField field=(PsiField)referent;
  final PsiClass fieldClass=field.getContainingClass();
  if (!returnStatementClass.equals(fieldClass)) {
    return;
  }
  if (!CollectionUtils.isArrayOrCollectionField(field)) {
    return;
  }
  registerError(returnValue,field,returnValue);
}
