{
  return new MethodCandidateInfo(staticFactoryMethod,PsiSubstitutor.EMPTY,false,false,argumentList,parent,null,null){
    private PsiType[] myExpressionTypes;
    @Override public boolean isVarargs(){
      return varargs;
    }
    @Override protected PsiElement getParent(){
      return parent;
    }
    @Override public PsiType[] getArgumentTypes(){
      if (myExpressionTypes == null) {
        final PsiType[] expressionTypes=argumentList.getExpressionTypes();
        if (MethodCandidateInfo.isOverloadCheck()) {
          return expressionTypes;
        }
        myExpressionTypes=expressionTypes;
      }
      return myExpressionTypes;
    }
    @Override protected PsiElement getMarkerList(){
      return parent instanceof PsiNewExpression ? ((PsiNewExpression)parent).getArgumentList() : super.getMarkerList();
    }
  }
;
}
