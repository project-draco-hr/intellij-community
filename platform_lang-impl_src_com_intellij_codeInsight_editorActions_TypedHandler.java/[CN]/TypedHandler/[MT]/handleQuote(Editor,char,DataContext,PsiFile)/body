{
  if (!CodeInsightSettings.getInstance().AUTOINSERT_PAIR_QUOTE)   return false;
  final QuoteHandler quoteHandler=getQuoteHandler(file,editor);
  if (quoteHandler == null)   return false;
  int offset=editor.getCaretModel().getOffset();
  final Document document=editor.getDocument();
  CharSequence chars=document.getCharsSequence();
  int length=document.getTextLength();
  if (isTypingEscapeQuote(editor,quoteHandler,offset))   return false;
  if (offset < length && chars.charAt(offset) == quote) {
    if (isClosingQuote(editor,quoteHandler,offset)) {
      EditorModificationUtil.moveAllCaretsRelatively(editor,1);
      return true;
    }
  }
  HighlighterIterator iterator=((EditorEx)editor).getHighlighter().createIterator(offset);
  if (!iterator.atEnd()) {
    IElementType tokenType=iterator.getTokenType();
    if (quoteHandler instanceof JavaLikeQuoteHandler) {
      try {
        if (!((JavaLikeQuoteHandler)quoteHandler).isAppropriateElementTypeForLiteral(tokenType))         return false;
      }
 catch (      AbstractMethodError incompatiblePluginErrorThatDoesNotInterestUs) {
      }
    }
  }
  if (myOriginalHandler != null) {
    myOriginalHandler.execute(editor,quote,dataContext);
  }
  offset=editor.getCaretModel().getOffset();
  if (quoteHandler instanceof MultiCharQuoteHandler) {
    CharSequence closingQuote=getClosingQuote(editor,(MultiCharQuoteHandler)quoteHandler,offset);
    if (closingQuote != null && hasNonClosedLiterals(editor,quoteHandler,offset - 1)) {
      if (offset == document.getTextLength() || !Character.isUnicodeIdentifierPart(document.getCharsSequence().charAt(offset))) {
        if (editor.getCaretModel().supportsMultipleCarets()) {
          EditorModificationUtil.typeInStringAtCaretHonorMultipleCarets(editor,closingQuote.toString(),0);
        }
 else {
          document.insertString(offset,closingQuote);
        }
        return true;
      }
    }
  }
  if (isOpeningQuote(editor,quoteHandler,offset - 1) && hasNonClosedLiterals(editor,quoteHandler,offset - 1)) {
    if (offset == document.getTextLength() || !Character.isUnicodeIdentifierPart(document.getCharsSequence().charAt(offset))) {
      if (editor.getCaretModel().supportsMultipleCarets()) {
        EditorModificationUtil.typeInStringAtCaretHonorMultipleCarets(editor,String.valueOf(quote),0);
      }
 else {
        document.insertString(offset,String.valueOf(quote));
      }
    }
  }
  return true;
}
