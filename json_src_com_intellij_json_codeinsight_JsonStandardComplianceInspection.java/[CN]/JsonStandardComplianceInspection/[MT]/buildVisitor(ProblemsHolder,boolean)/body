{
  return new JsonElementVisitor(){
    @Override public void visitComment(    PsiComment comment){
      if (myWarnAboutComments) {
        holder.registerProblem(comment,JsonBundle.message("msg.compliance.problem.comments"),ProblemHighlightType.WEAK_WARNING);
      }
    }
    @Override public void visitStringLiteral(    @NotNull JsonStringLiteral stringLiteral){
      if (stringLiteral.getText().startsWith("'")) {
        holder.registerProblem(stringLiteral,JsonBundle.message("msg.compliance.problem.single.quoted.strings"),new AddDoubleQuotesFix());
      }
      super.visitStringLiteral(stringLiteral);
    }
    @Override public void visitLiteral(    @NotNull JsonLiteral literal){
      if (literal.getParent() instanceof JsonFile) {
        holder.registerProblem(literal,JsonBundle.message("msg.compliance.problem.illegal.top.level.value"));
      }
      if (JsonPsiUtil.isPropertyKey(literal) && !(literal.getText().startsWith("\""))) {
        holder.registerProblem(literal,JsonBundle.message("msg.compliance.problem.illegal.property.key"),new AddDoubleQuotesFix());
      }
    }
    @Override public void visitReferenceExpression(    @NotNull JsonReferenceExpression reference){
      holder.registerProblem(reference,JsonBundle.message("msg.compliance.problem.identifier"),new AddDoubleQuotesFix());
    }
  }
;
}
