{
  while (true) {
    boolean merged=false;
    for (    BasicBlock block : graph.getBlocks()) {
      InstructionSequence seq=block.getSeq();
      if (block.getSuccs().size() == 1) {
        BasicBlock next=block.getSuccs().get(0);
        if (next != graph.getLast() && (seq.isEmpty() || seq.getLastInstr().group != CodeConstants.GROUP_SWITCH)) {
          if (next.getPreds().size() == 1 && next.getPredExceptions().isEmpty() && next != graph.getFirst()) {
            boolean sameRanges=true;
            for (            ExceptionRangeCFG range : graph.getExceptions()) {
              if (range.getProtectedRange().contains(block) ^ range.getProtectedRange().contains(next)) {
                sameRanges=false;
                break;
              }
            }
            if (sameRanges) {
              seq.addSequence(next.getSeq());
              next.getSeq().clear();
              removeEmptyBlock(graph,next,true);
              merged=true;
              break;
            }
          }
        }
      }
    }
    if (!merged) {
      break;
    }
  }
}
