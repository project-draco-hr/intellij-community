{
  final Boolean isAdded=OrderEntryFixProvider.find(new Function<OrderEntryFixProvider,Boolean>(){
    @Override public Boolean fun(    OrderEntryFixProvider provider){
      return provider.addJarsToRoots(jarPaths,libraryName,module,location);
    }
  }
);
  if (Boolean.TRUE.equals(isAdded))   return;
  List<String> urls=ContainerUtil.map(jarPaths,new Function<String,String>(){
    @Override public String fun(    String path){
      return refreshAndConvertToUrl(path);
    }
  }
);
  boolean inTests=false;
  if (location != null) {
    final VirtualFile vFile=location.getContainingFile().getVirtualFile();
    if (vFile != null && ModuleRootManager.getInstance(module).getFileIndex().isInTestSourceContent(vFile)) {
      inTests=true;
    }
  }
  ModuleRootModificationUtil.addModuleLibrary(module,libraryName,urls,Collections.<String>emptyList(),inTests ? DependencyScope.TEST : DependencyScope.COMPILE);
}
