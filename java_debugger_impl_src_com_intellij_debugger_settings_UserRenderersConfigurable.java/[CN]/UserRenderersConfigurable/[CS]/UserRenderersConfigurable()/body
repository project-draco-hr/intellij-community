{
  super(new BorderLayout(4,0));
  myRendererChooser=new ElementsChooser<NodeRenderer>(true);
  setupRenderersList();
  ToolbarDecorator decorator=ToolbarDecorator.createDecorator((JTable)myRendererChooser.getComponent());
  decorator.setToolbarPosition(ActionToolbarPosition.TOP);
  decorator.setPreferredSize(myRendererChooser.getPreferredSize());
  decorator.setAddAction(new AddAction());
  decorator.setRemoveAction(new RemoveAction());
  decorator.setMoveUpAction(new MoveAction(true));
  decorator.setMoveDownAction(new MoveAction(false));
  decorator.addExtraAction(new CopyAction());
  myNameField=new JTextField();
  myNameFieldPanel=new JPanel(new BorderLayout());
  myNameFieldPanel.add(new JLabel(DebuggerBundle.message("label.user.renderers.configurable.renderer.name")),BorderLayout.WEST);
  myNameFieldPanel.add(myNameField,BorderLayout.CENTER);
  myNameFieldPanel.setVisible(false);
  final JPanel center=new JPanel(new BorderLayout(0,4));
  center.add(myNameFieldPanel,BorderLayout.NORTH);
  center.add(myRendererDataConfigurable,BorderLayout.CENTER);
  myNameField.getDocument().addDocumentListener(new DocumentAdapter(){
    @Override protected void textChanged(    DocumentEvent e){
      if (myCurrentRenderer != null) {
        myCurrentRenderer.setName(myNameField.getText());
        myRendererChooser.refresh(myCurrentRenderer);
      }
    }
  }
);
  add(decorator.createPanel(),BorderLayout.WEST);
  add(center,BorderLayout.CENTER);
}
