{
  if (queryParameters instanceof PyClass) {
    final Query<PyClass> query=PyClassInheritorsSearch.search((PyClass)queryParameters,true);
    return query.forEach(new Processor<PyClass>(){
      public boolean process(      final PyClass pyClass){
        return consumer.process(pyClass);
      }
    }
);
  }
 else   if (queryParameters instanceof PyFunction) {
    final Query<PyFunction> query=PyOverridingMethodsSearch.search((PyFunction)queryParameters,true);
    return query.forEach(new Processor<PyFunction>(){
      public boolean process(      final PyFunction pyFunction){
        return consumer.process(pyFunction);
      }
    }
);
  }
 else   if (queryParameters instanceof PyTargetExpression) {
    final PsiElement parent=queryParameters.getParent();
    if (parent instanceof PyAssignmentStatement) {
      return consumer.process(parent);
    }
  }
  return true;
}
