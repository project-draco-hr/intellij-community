{
  final FileTemplate template=FileTemplateManager.getInstance().getInternalTemplate(templateName);
  Project project=directory.getProject();
  Properties properties=new Properties(FileTemplateManager.getInstance().getDefaultProperties(project));
  JavaTemplateUtil.setPackageNameAttribute(properties,directory);
  properties.setProperty(NAME_TEMPLATE_PROPERTY,name);
  properties.setProperty(LOW_CASE_NAME_TEMPLATE_PROPERTY,name.substring(0,1).toLowerCase() + name.substring(1));
  for (int i=0; i < parameters.length; i+=2) {
    properties.setProperty(parameters[i],parameters[i + 1]);
  }
  String text;
  try {
    text=template.getText(properties);
  }
 catch (  Exception e) {
    throw new RuntimeException("Unable to load template for " + FileTemplateManager.getInstance().internalTemplateToSubject(templateName),e);
  }
  final PsiFileFactory factory=PsiFileFactory.getInstance(project);
  PsiFile file=factory.createFileFromText(fileName,GroovyFileType.GROOVY_FILE_TYPE,text);
  file=(PsiFile)directory.add(file);
  if (file != null && template.isReformatCode()) {
    new ReformatCodeProcessor(project,file,null,false).run();
  }
  return file;
}
