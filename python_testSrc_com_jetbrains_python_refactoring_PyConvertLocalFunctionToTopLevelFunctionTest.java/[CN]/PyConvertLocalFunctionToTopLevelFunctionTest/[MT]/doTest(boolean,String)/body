{
  myFixture.configureByFile(getTestName(true) + ".py");
  final PyConvertLocalFunctionToTopLevelFunctionAction action=new PyConvertLocalFunctionToTopLevelFunctionAction();
  final TestActionEvent event=new TestActionEvent(action);
  action.beforeActionPerformedUpdate(event);
  assertEquals(enabled,event.getPresentation().isEnabledAndVisible());
  if (enabled) {
    try {
      action.actionPerformed(event);
      myFixture.checkResultByFile(getTestName(true) + ".after.py");
    }
 catch (    IncorrectOperationException e) {
      if (message == null) {
        fail("Refactoring wasn't expected to fail");
      }
      assertEquals(message,e.getMessage());
    }
  }
}
