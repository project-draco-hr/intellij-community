{
  final Ref<Boolean> shiftPressed=Ref.create(false);
  final ChooseByNamePopup popup=createPopup(project,new GotoTaskPopupModel(project),new TaskItemProvider(project));
  popup.setShowListForEmptyPattern(true);
  popup.setSearchInAnyPlace(true);
  popup.setFixLostTyping(false);
  popup.setAlwaysHasMore(true);
  popup.setAdText("<html>Press SHIFT to merge with current context<br/>" + "Pressing " + KeymapUtil.getFirstKeyboardShortcutText(ActionManager.getInstance().getAction(IdeActions.ACTION_QUICK_JAVADOC)) + " would show task description and comments</html>");
  popup.registerAction("shiftPressed",KeyStroke.getKeyStroke("shift pressed SHIFT"),new AbstractAction(){
    public void actionPerformed(    ActionEvent e){
      shiftPressed.set(true);
    }
  }
);
  popup.registerAction("shiftReleased",KeyStroke.getKeyStroke("released SHIFT"),new AbstractAction(){
    public void actionPerformed(    ActionEvent e){
      shiftPressed.set(false);
    }
  }
);
  final DefaultActionGroup group=new DefaultActionGroup(new ConfigureServersAction(){
    @Override protected void serversChanged(){
      popup.rebuildList(true);
    }
  }
);
  final ActionToolbar actionToolbar=ActionManager.getInstance().createActionToolbar(ActionPlaces.UNKNOWN,group,true);
  actionToolbar.setLayoutPolicy(ActionToolbar.NOWRAP_LAYOUT_POLICY);
  actionToolbar.updateActionsImmediately();
  actionToolbar.getComponent().setFocusable(false);
  actionToolbar.getComponent().setBorder(null);
  popup.setToolArea(actionToolbar.getComponent());
  popup.setMaximumListSizeLimit(PAGE_SIZE);
  popup.setListSizeIncreasing(PAGE_SIZE);
  showNavigationPopup(new GotoActionCallback<Object>(){
    @Override public void elementChosen(    ChooseByNamePopup popup,    Object element){
      TaskManager taskManager=TaskManager.getManager(project);
      if (element instanceof TaskPsiElement) {
        Task task=((TaskPsiElement)element).getTask();
        LocalTask localTask=taskManager.findTask(task.getId());
        if (localTask != null) {
          taskManager.activateTask(localTask,!shiftPressed.get());
        }
 else {
          showOpenTaskDialog(project,task);
        }
      }
 else       if (element == CREATE_NEW_TASK_ACTION) {
        LocalTask localTask=taskManager.createLocalTask(CREATE_NEW_TASK_ACTION.getTaskName());
        showOpenTaskDialog(project,localTask);
      }
    }
  }
,null,popup);
}
