{
  PsiBuilder.Marker marker=builder.mark();
  ParserUtils.getToken(builder,kWHILE);
  if (!ParserUtils.getToken(builder,mLPAREN,GroovyBundle.message("lparen.expected"))) {
    marker.done(GroovyElementTypes.WHILE_STATEMENT);
    return true;
  }
  if (!ExpressionStatement.argParse(builder,this)) {
    builder.error(GroovyBundle.message("expression.expected"));
  }
  ParserUtils.getToken(builder,mNLS);
  if (!ParserUtils.getToken(builder,mRPAREN,GroovyBundle.message("rparen.expected"))) {
    marker.done(GroovyElementTypes.WHILE_STATEMENT);
    return true;
  }
  parseBranch(builder);
  marker.done(GroovyElementTypes.WHILE_STATEMENT);
  return true;
}
