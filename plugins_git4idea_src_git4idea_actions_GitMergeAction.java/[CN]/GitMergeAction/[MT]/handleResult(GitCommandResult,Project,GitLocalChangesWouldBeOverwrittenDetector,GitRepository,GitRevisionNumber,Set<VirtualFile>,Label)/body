{
  GitRepositoryManager repositoryManager=GitUtil.getRepositoryManager(project);
  VirtualFile root=repository.getRoot();
  if (result.success()) {
    root.refresh(false,true);
    List<VcsException> exceptions=new ArrayList<VcsException>();
    GitMergeUtil.showUpdates(this,project,exceptions,root,currentRev,beforeLabel,getActionName(),ActionInfo.UPDATE);
    repositoryManager.updateRepository(root);
    runFinalTasks(project,GitVcs.getInstance(project),affectedRoots,getActionName(),exceptions);
  }
 else   if (localChangesDetector.wasMessageDetected()) {
    LocalChangesWouldBeOverwrittenHelper.showErrorNotification(repository,project,getActionName(),localChangesDetector.getRelativeFilePaths());
  }
 else {
    GitUIUtil.notifyError(project,"Git " + getActionName() + " Failed",result.getErrorOutputAsJoinedString(),true,null);
    repositoryManager.updateRepository(root);
  }
}
