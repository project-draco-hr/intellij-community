{
  PythonPathCache cache=findMyCache();
  if (cache != null) {
    final List<PsiElement> cachedResults=cache.get(myQualifiedName);
    if (cachedResults != null) {
      return cachedResults;
    }
  }
  if (myVisitAllModules) {
    for (    Module mod : ModuleManager.getInstance(myContext.getProject()).getModules()) {
      RootVisitorHost.visitRoots(mod,false,this);
    }
  }
 else   if (myContext.getModule() != null) {
    final boolean otherSdk=withOtherSdk();
    RootVisitorHost.visitRoots(myContext.getModule(),otherSdk,this);
    if (otherSdk) {
      RootVisitorHost.visitSdkRoots(myContext.getSdk(),this);
    }
  }
 else   if (myContext.getFootholdFile() != null) {
    RootVisitorHost.visitSdkRoots(myContext.getFootholdFile(),this);
  }
 else   if (myContext.getSdk() != null) {
    RootVisitorHost.visitSdkRoots(myContext.getSdk(),this);
  }
 else {
    throw new IllegalStateException();
  }
  mySourceResults.addAll(myLibResults);
  myLibResults.clear();
  final ArrayList<PsiElement> resultList=Lists.newArrayList(mySourceResults);
  if (cache != null) {
    cache.put(myQualifiedName,resultList);
  }
  return resultList;
}
