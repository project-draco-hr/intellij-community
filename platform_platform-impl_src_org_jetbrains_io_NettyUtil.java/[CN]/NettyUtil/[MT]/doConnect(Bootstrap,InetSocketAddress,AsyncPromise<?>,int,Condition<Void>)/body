{
  int attemptCount=0;
  if (bootstrap.group() instanceof NioEventLoopGroup) {
    return connectNio(bootstrap,remoteAddress,promise,maxAttemptCount,stopCondition,attemptCount);
  }
  bootstrap.validate();
  Socket socket;
  while (true) {
    try {
      socket=new Socket(remoteAddress.getAddress(),remoteAddress.getPort());
      break;
    }
 catch (    IOException e) {
      if (stopCondition.value(null) || (promise != null && promise.getState() != Promise.State.PENDING)) {
        return null;
      }
 else       if (maxAttemptCount == -1) {
        if (sleep(promise,300)) {
          return null;
        }
        attemptCount++;
      }
 else       if (++attemptCount < maxAttemptCount) {
        if (sleep(promise,attemptCount * MIN_START_TIME)) {
          return null;
        }
      }
 else {
        if (promise != null) {
          promise.setError(e);
        }
        return null;
      }
    }
  }
  OioSocketChannel channel=new OioSocketChannel(socket);
  BootstrapUtil.initAndRegister(channel,bootstrap).sync();
  return channel;
}
