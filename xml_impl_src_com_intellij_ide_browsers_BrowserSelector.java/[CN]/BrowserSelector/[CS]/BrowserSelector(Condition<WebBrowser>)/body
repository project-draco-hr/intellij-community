{
  myModel=createBrowsersComboModel(browserCondition);
  myBrowserComboWithBrowse=new ComboboxWithBrowseButton(new ComboBox(myModel));
  myBrowserComboWithBrowse.addActionListener(new ActionListener(){
    @Override public void actionPerformed(    ActionEvent e){
      WebBrowserManager browserManager=WebBrowserManager.getInstance();
      long modificationCount=browserManager.getModificationCount();
      ShowSettingsUtil.getInstance().editConfigurable(myBrowserComboWithBrowse,new BrowserSettings());
      WebBrowser selectedItem=getSelected();
      if (modificationCount != browserManager.getModificationCount()) {
        myModel=createBrowsersComboModel(browserCondition);
        myBrowserComboWithBrowse.getComboBox().setModel(myModel);
      }
      if (selectedItem != null) {
        setSelected(selectedItem);
      }
    }
  }
);
  myBrowserComboWithBrowse.getComboBox().setRenderer(new ListCellRendererWrapper<WebBrowser>(){
    @Override public void customize(    JList list,    WebBrowser value,    int index,    boolean selected,    boolean hasFocus){
      Icon baseIcon;
      if (value == null) {
        WebBrowser firstBrowser=WebBrowserManager.getInstance().getFirstActiveBrowser();
        baseIcon=firstBrowser == null ? PlatformIcons.WEB_ICON : firstBrowser.getIcon();
      }
 else {
        baseIcon=value.getIcon();
      }
      setIcon(myBrowserComboWithBrowse.isEnabled() ? baseIcon : IconLoader.getDisabledIcon(baseIcon));
      setText(value != null ? value.getName() : "Default");
    }
  }
);
}
