{
  myBrowserComboWithBrowse=new ComboboxWithBrowseButton(new ComboBox(createBrowsersComboModel(allowDefaultBrowser)));
  myBrowserComboWithBrowse.addActionListener(new ActionListener(){
    @Override public void actionPerformed(    ActionEvent e){
      WebBrowserManager browserManager=WebBrowserManager.getInstance();
      long modificationCount=browserManager.getModificationCount();
      ShowSettingsUtil.getInstance().editConfigurable(myBrowserComboWithBrowse,new BrowserSettings());
      WebBrowser selectedItem=getSelected();
      if (modificationCount != browserManager.getModificationCount()) {
        myBrowserComboWithBrowse.getComboBox().setModel(createBrowsersComboModel(allowDefaultBrowser));
      }
      if (selectedItem != null) {
        setSelected(selectedItem);
      }
    }
  }
);
  myBrowserComboWithBrowse.getComboBox().setRenderer(new ListCellRendererWrapper<WebBrowser>(){
    @Override public void customize(    JList list,    WebBrowser value,    int index,    boolean selected,    boolean hasFocus){
      Icon baseIcon=value != null ? value.getIcon() : PlatformIcons.WEB_ICON;
      setIcon(myBrowserComboWithBrowse.isEnabled() ? baseIcon : IconLoader.getDisabledIcon(baseIcon));
      setText(value != null ? value.getName() : "Default");
    }
  }
);
}
