{
  StringBuilder sb=new StringBuilder("lambda");
  PsiType functionalInterfaceType=e.getFunctionalInterfaceType();
  if (functionalInterfaceType != null) {
    String shortClassName=PsiNameHelper.getShortClassName(functionalInterfaceType.getCanonicalText());
    sb.append(" ").append(StringUtil.htmlEmphasize(shortClassName));
  }
  PsiParameter[] parameters=e.getParameterList().getParameters();
  if (parameters.length > 0) {
    sb.append(" (");
    for (int i=0; i < parameters.length; i++) {
      if (i > 0)       sb.append(", ");
      String str=PsiNameHelper.getShortClassName(parameters[i].getType().getCanonicalText());
      if (str.isEmpty())       str=StringUtil.notNullize(parameters[i].getName());
      sb.append(StringUtil.htmlEmphasize(str));
    }
    sb.append(")");
  }
  return sb.toString();
}
