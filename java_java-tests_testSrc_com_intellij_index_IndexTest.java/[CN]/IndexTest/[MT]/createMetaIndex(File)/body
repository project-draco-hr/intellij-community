{
  return new PersistentHashMap<Integer,Collection<String>>(metaIndexFile,new EnumeratorIntegerDescriptor(),new DataExternalizer<Collection<String>>(){
    @Override public void save(    DataOutput out,    Collection<String> value) throws IOException {
      DataInputOutputUtil.writeINT(out,value.size());
      for (      String key : value) {
        out.writeUTF(key);
      }
    }
    @Override public Collection<String> read(    DataInput in) throws IOException {
      final int size=DataInputOutputUtil.readINT(in);
      final List<String> list=new ArrayList<String>();
      for (int idx=0; idx < size; idx++) {
        list.add(in.readUTF());
      }
      return list;
    }
  }
);
}
