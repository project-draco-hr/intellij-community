{
  final ScopeOwner initialScopeOwner=getScopeOwner(element);
  if (!(initialScopeOwner instanceof PyLambdaExpression && PsiTreeUtil.getParentOfType(element,PyDecorator.class) != null) && PsiTreeUtil.getParentOfType(element,PyParameter.class,PyDecorator.class) != null) {
    element=initialScopeOwner;
  }
  final PyClass containingClass=PsiTreeUtil.getParentOfType(element,PyClass.class);
  if (containingClass != null && element != null && PsiTreeUtil.isAncestor(containingClass.getSuperClassExpressionList(),element,false)) {
    element=containingClass;
  }
  return PsiTreeUtil.getParentOfType(element,ScopeOwner.class);
}
