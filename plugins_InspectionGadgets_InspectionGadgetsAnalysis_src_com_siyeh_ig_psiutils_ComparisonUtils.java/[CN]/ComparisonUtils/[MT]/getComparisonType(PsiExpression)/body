{
  if (!(expression instanceof PsiPolyadicExpression))   return null;
  PsiPolyadicExpression operation=(PsiPolyadicExpression)expression;
  IElementType tokenType=operation.getOperationTokenType();
  if (!isComparisonOperation(tokenType))   return null;
  PsiType lType;
  PsiType rType;
  if (operation instanceof PsiBinaryExpression) {
    PsiExpression left=((PsiBinaryExpression)operation).getLOperand();
    PsiExpression right=((PsiBinaryExpression)operation).getROperand();
    lType=left.getType();
    rType=right == null ? null : right.getType();
  }
 else {
    PsiExpression[] operands=operation.getOperands();
    if (operands.length <= 2)     return null;
    lType=PsiType.BOOLEAN;
    rType=operands[operands.length - 1].getType();
  }
  if (lType == null || rType == null)   return null;
  if (lType.equals(rType))   return lType;
  return TypeConversionUtil.unboxAndBalanceTypes(lType,rType);
}
