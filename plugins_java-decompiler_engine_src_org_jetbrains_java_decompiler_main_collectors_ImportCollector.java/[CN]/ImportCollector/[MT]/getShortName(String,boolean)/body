{
  ClassNode node=DecompilerContext.getClassProcessor().getMapRootClasses().get(fullName.replace('.','/'));
  String result=null;
  if (node != null && node.classStruct.isOwn()) {
    result=node.simpleName;
    while (node.parent != null && node.type == ClassNode.CLASS_MEMBER) {
      result=node.parent.simpleName + '.' + result;
      node=node.parent;
    }
    if (node.type == ClassNode.CLASS_ROOT) {
      fullName=node.classStruct.qualifiedName;
      fullName=fullName.replace('/','.');
    }
 else {
      return result;
    }
  }
 else {
    fullName=fullName.replace('$','.');
  }
  String shortName=fullName;
  String packageName="";
  int lastDot=fullName.lastIndexOf('.');
  if (lastDot >= 0) {
    shortName=fullName.substring(lastDot + 1);
    packageName=fullName.substring(0,lastDot);
  }
  StructContext context=DecompilerContext.getStructContext();
  boolean existsDefaultClass=(context.getClass(currentPackageSlash + shortName) != null && !packageName.equals(currentPackagePoint)) || (context.getClass(shortName) != null && !currentPackagePoint.isEmpty());
  if (existsDefaultClass || (mapSimpleNames.containsKey(shortName) && !packageName.equals(mapSimpleNames.get(shortName)))) {
    return result == null ? fullName : (packageName + "." + result);
  }
 else   if (!mapSimpleNames.containsKey(shortName)) {
    mapSimpleNames.put(shortName,packageName);
    if (!imported) {
      setNotImportedNames.add(shortName);
    }
  }
  return result == null ? shortName : result;
}
