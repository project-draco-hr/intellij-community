{
  DerParser parser=new DerParser(keyBytes);
  Asn1Object sequence=parser.read();
  if (sequence.getType() != DerParser.SEQUENCE) {
    throw new IOException("Invalid DER: not a sequence");
  }
  parser=sequence.getParser();
  parser.read();
  BigInteger modulus=parser.read().getInteger();
  BigInteger publicExp=parser.read().getInteger();
  BigInteger privateExp=parser.read().getInteger();
  BigInteger prime1=parser.read().getInteger();
  BigInteger prime2=parser.read().getInteger();
  BigInteger exp1=parser.read().getInteger();
  BigInteger exp2=parser.read().getInteger();
  BigInteger crtCoef=parser.read().getInteger();
  return new RSAPrivateCrtKeySpec(modulus,publicExp,privateExp,prime1,prime2,exp1,exp2,crtCoef);
}
