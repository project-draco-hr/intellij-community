{
  importProject("<groupId>test</groupId>" + "<artifactId>project</artifactId>" + "<version>1</version>\n"+ "<properties>\n"+ "  <ioClassifier>ccc</ioClassifier>"+ "  <ioType>ttt</ioType>"+ "</properties>\n"+ ""+ "<dependencyManagement>\n"+ "  <dependencies>\n"+ "    <dependency>\n"+ "      <groupId>commons-io</groupId>\n"+ "      <artifactId>commons-io</artifactId>\n"+ "      <classifier>${ioClassifier}</classifier>\n"+ "      <type>${ioType}</type>\n"+ "      <version>2.4</version>\n"+ "    </dependency>\n"+ "  </dependencies>\n"+ "</dependencyManagement>\n");
  createProjectPom("<groupId>test</groupId>" + "<artifactId>project</artifactId>" + "<version>1</version>\n"+ "<dependencyManagement>\n"+ "  <dependencies>\n"+ "    <dependency>\n"+ "      <groupId>commons-io</groupId>\n"+ "      <artifactId>commons-io</artifactId>\n"+ "      <classifier>${ioClassifier}</classifier>\n"+ "      <type>${ioType}</type>\n"+ "      <version>2.4</version>\n"+ "    </dependency>\n"+ "  </dependencies>\n"+ "</dependencyManagement>\n"+ "<dependencies>\n"+ "  <dependency>\n"+ "      <groupId>commons-i<caret></groupId>\n"+ "      <artifactId>commons-io</artifactId>\n"+ "  </dependency>\n"+ "</dependencies>\n");
  myFixture.configureFromExistingVirtualFile(myProjectPom);
  LookupElement[] elements=myFixture.complete(CompletionType.SMART);
  assertNull(elements);
  myFixture.checkResult(createPomXml("<groupId>test</groupId>" + "<artifactId>project</artifactId>" + "<version>1</version>\n"+ "<dependencyManagement>\n"+ "  <dependencies>\n"+ "    <dependency>\n"+ "      <groupId>commons-io</groupId>\n"+ "      <artifactId>commons-io</artifactId>\n"+ "      <classifier>${ioClassifier}</classifier>\n"+ "      <type>${ioType}</type>\n"+ "      <version>2.4</version>\n"+ "    </dependency>\n"+ "  </dependencies>\n"+ "</dependencyManagement>\n"+ "<dependencies>\n"+ "  <dependency>\n"+ "      <groupId>commons-io</groupId>\n"+ "      <artifactId>commons-io</artifactId>\n"+ "      <type>${ioType}</type>\n"+ "      <classifier>${ioClassifier}</classifier>\n"+ "  </dependency>\n"+ "</dependencies>\n"));
}
