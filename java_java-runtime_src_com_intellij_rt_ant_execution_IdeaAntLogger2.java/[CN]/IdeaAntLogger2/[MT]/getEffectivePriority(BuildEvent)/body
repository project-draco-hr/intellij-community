{
  final int priority=event.getPriority();
  if (priority == Project.MSG_ERR) {
    final Task task=event.getTask();
    if (task != null) {
      final Class taskClass=task.getClass();
      try {
        final Field field=taskClass.getDeclaredField("failonerror");
        field.setAccessible(true);
        final Object isFailOnError=field.get(task);
        if (Boolean.FALSE.equals(isFailOnError)) {
          return Project.MSG_WARN;
        }
      }
 catch (      Exception ignored) {
      }
    }
  }
  return priority;
}
