{
  Project project=e.getRequiredData(CommonDataKeys.PROJECT);
  VcsLogDataPack dataPack=myFilterModel.getDataPack();
  VcsLogFileFilter filter=myFilterModel.getFilter();
  Collection<VirtualFile> files;
  if (filter == null || filter.getStructureFilter() == null) {
    files=Collections.emptySet();
  }
 else {
    files=ContainerUtil.mapNotNull(filter.getStructureFilter().getFiles(),new Function<FilePath,VirtualFile>(){
      @Override public VirtualFile fun(      FilePath filePath){
        return filePath.getVirtualFile();
      }
    }
);
  }
  VcsStructureChooser chooser=new VcsStructureChooser(project,"Select Files or Folders to Filter by",files,new ArrayList<VirtualFile>(dataPack.getLogProviders().keySet()));
  if (chooser.showAndGet()) {
    VcsLogStructureFilterImpl structureFilter=new VcsLogStructureFilterImpl(new HashSet<VirtualFile>(chooser.getSelectedFiles()));
    myFilterModel.setFilter(new VcsLogFileFilter(structureFilter,null));
    myHistory.add(structureFilter);
  }
}
