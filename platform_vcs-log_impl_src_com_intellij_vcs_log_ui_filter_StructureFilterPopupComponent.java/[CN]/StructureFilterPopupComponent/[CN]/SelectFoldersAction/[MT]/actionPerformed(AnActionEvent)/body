{
  Project project=e.getRequiredData(CommonDataKeys.PROJECT);
  VcsLogDataPack dataPack=myFilterModel.getDataPack();
  VcsLogFileFilter filter=myFilterModel.getFilter();
  Collection<VirtualFile> files=filter == null || filter.getStructureFilter() == null ? Collections.<VirtualFile>emptySet() : ContainerUtil.mapNotNull(filter.getStructureFilter().getFiles(),new Function<FilePath,VirtualFile>(){
    @Override public VirtualFile fun(    FilePath filePath){
      VirtualFile virtualFile=filePath.getVirtualFile();
      if (virtualFile != null)       return virtualFile;
      return ChangesUtil.findValidParentAccurately(filePath);
    }
  }
);
  VcsStructureChooser chooser=new VcsStructureChooser(project,"Select Files or Folders to Filter by",files,new ArrayList<VirtualFile>(dataPack.getLogProviders().keySet()));
  if (chooser.showAndGet()) {
    VcsLogStructureFilterImpl structureFilter=new VcsLogStructureFilterImpl(new HashSet<VirtualFile>(chooser.getSelectedFiles()));
    myFilterModel.setFilter(new VcsLogFileFilter(structureFilter,null));
    myHistory.add(structureFilter);
  }
}
