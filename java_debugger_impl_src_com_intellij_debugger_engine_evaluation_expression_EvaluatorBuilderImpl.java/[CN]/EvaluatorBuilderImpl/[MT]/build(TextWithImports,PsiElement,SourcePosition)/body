{
  if (contextElement == null) {
    throw EvaluateExceptionUtil.CANNOT_FIND_SOURCE_CLASS;
  }
  final Project project=contextElement.getProject();
  CodeFragmentFactory factory=DebuggerUtilsEx.findAppropriateCodeFragmentFactory(text,contextElement);
  PsiCodeFragment codeFragment=factory.createCodeFragment(text,contextElement,project);
  if (codeFragment == null) {
    throw EvaluateExceptionUtil.createEvaluateException(DebuggerBundle.message("evaluation.error.invalid.expression",text.getText()));
  }
  codeFragment.forceResolveScope(GlobalSearchScope.allScope(project));
  DebuggerUtils.checkSyntax(codeFragment);
  return factory.getEvaluatorBuilder().build(codeFragment,position);
}
