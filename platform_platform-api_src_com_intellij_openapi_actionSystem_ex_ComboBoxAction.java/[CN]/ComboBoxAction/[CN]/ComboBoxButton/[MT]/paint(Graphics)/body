{
  final boolean isEmpty=getIcon() == null && StringUtil.isEmpty(getText());
  final Dimension size=getSize();
  if (SystemInfo.isMac && UIUtil.isUnderIntelliJLaF()) {
    super.paint(g);
  }
 else {
    UISettings.setupAntialiasing(g);
    final Color textColor=isEnabled() ? UIManager.getColor("Panel.foreground") : UIUtil.getInactiveTextColor();
    if (myForceTransparent) {
      final Icon icon=getIcon();
      int x=7;
      if (icon != null) {
        icon.paintIcon(this,g,x,(size.height - icon.getIconHeight()) / 2);
        x+=icon.getIconWidth() + 3;
      }
      if (!StringUtil.isEmpty(getText())) {
        final Font font=getFont();
        g.setFont(font);
        g.setColor(textColor);
        UIUtil.drawCenteredString((Graphics2D)g,new Rectangle(x,0,Integer.MAX_VALUE,size.height),getText(),false,true);
      }
    }
 else {
      if (isSmallVariant()) {
        final Graphics2D g2=(Graphics2D)g;
        g2.setColor(UIUtil.getControlColor());
        final int w=getWidth();
        final int h=getHeight();
        if (getModel().isArmed() && getModel().isPressed()) {
          g2.setPaint(UIUtil.getGradientPaint(0,0,UIUtil.getControlColor(),0,h,ColorUtil.shift(UIUtil.getControlColor(),0.8)));
        }
 else {
          if (UIUtil.isUnderDarcula()) {
            g2.setPaint(UIUtil.getGradientPaint(0,0,ColorUtil.shift(UIUtil.getControlColor(),1.1),0,h,ColorUtil.shift(UIUtil.getControlColor(),0.9)));
          }
 else {
            g2.setPaint(UIUtil.getGradientPaint(0,0,new JBColor(SystemInfo.isMac ? Gray._226 : Gray._245,Gray._131),0,h,new JBColor(SystemInfo.isMac ? Gray._198 : Gray._208,Gray._128)));
          }
        }
        g2.fillRoundRect(2,0,w - 2,h,5,5);
        Color borderColor=myMouseInside ? new JBColor(Gray._111,Gray._118) : new JBColor(Gray._151,Gray._95);
        g2.setPaint(borderColor);
        g2.drawRoundRect(2,0,w - 3,h - 1,5,5);
        final Icon icon=getIcon();
        int x=7;
        if (icon != null) {
          icon.paintIcon(this,g,x,(size.height - icon.getIconHeight()) / 2);
          x+=icon.getIconWidth() + 3;
        }
        if (!StringUtil.isEmpty(getText())) {
          final Font font=getFont();
          g2.setFont(font);
          g2.setColor(textColor);
          UIUtil.drawCenteredString(g2,new Rectangle(x,0,Integer.MAX_VALUE,size.height),getText(),false,true);
        }
      }
 else {
        super.paint(g);
      }
    }
  }
  final Insets insets=super.getInsets();
  final Icon icon=isEnabled() ? ARROW_ICON : DISABLED_ARROW_ICON;
  int x;
  if (isEmpty) {
    x=(size.width - icon.getIconWidth()) / 2;
  }
 else {
    if (isSmallVariant()) {
      x=size.width - icon.getIconWidth() - insets.right + 1;
      if (SystemInfo.isMac && UIUtil.isUnderIntelliJLaF()) {
        x-=3;
      }
    }
 else {
      x=size.width - icon.getIconWidth() - insets.right + (UIUtil.isUnderNimbusLookAndFeel() ? -3 : 2);
    }
  }
  icon.paintIcon(null,g,x,(size.height - icon.getIconHeight()) / 2);
  g.setPaintMode();
}
