{
  JComponent button=(JComponent)e.getPresentation().getClientProperty(CUSTOM_COMPONENT_PROPERTY);
  if (button == null) {
    Component contextComponent=e.getData(PlatformDataKeys.CONTEXT_COMPONENT);
    JRootPane rootPane=UIUtil.getParentOfType(JRootPane.class,contextComponent);
    if (rootPane != null) {
      button=(ComboBoxButton)UIUtil.uiTraverser().withRoot(rootPane).bfsTraversal().filter(new Condition<Component>(){
        @Override public boolean value(        Component component){
          return component instanceof ComboBoxButton && ((ComboBoxButton)component).getMyAction() == ComboBoxAction.this;
        }
      }
).first();
    }
    if (button == null)     return;
  }
  if (!button.isShowing())   return;
  if (button instanceof ComboBoxButton) {
    ((ComboBoxButton)button).showPopup();
  }
 else {
    DataContext context=e.getDataContext();
    Project project=e.getProject();
    if (project == null)     return;
    DefaultActionGroup group=createPopupActionGroup(button);
    ListPopup popup=JBPopupFactory.getInstance().createActionGroupPopup(myPopupTitle,group,context,false,shouldShowDisabledActions(),false,null,getMaxRows(),getPreselectCondition());
    popup.setMinimumSize(new Dimension(getMinWidth(),getMinHeight()));
    popup.showCenteredInCurrentWindow(project);
  }
}
