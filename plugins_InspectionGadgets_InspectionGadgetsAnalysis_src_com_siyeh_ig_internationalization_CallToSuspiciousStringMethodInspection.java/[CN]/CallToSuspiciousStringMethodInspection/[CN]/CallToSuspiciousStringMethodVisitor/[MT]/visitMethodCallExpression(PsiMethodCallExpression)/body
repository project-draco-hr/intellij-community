{
  if (!MethodCallUtils.isEqualsCall(expression) && !MethodCallUtils.isEqualsIgnoreCaseCall(expression) && !MethodCallUtils.isCompareToCall(expression)&& !MethodCallUtils.isCompareToIgnoreCaseCall(expression)) {
    return;
  }
  final PsiMethod method=expression.resolveMethod();
  if (method == null) {
    return;
  }
  final PsiClass aClass=method.getContainingClass();
  if (aClass == null) {
    return;
  }
  final String className=aClass.getQualifiedName();
  if (!CommonClassNames.JAVA_LANG_STRING.equals(className)) {
    return;
  }
  final PsiReferenceExpression methodExpression=expression.getMethodExpression();
  final PsiExpression qualifier=methodExpression.getQualifierExpression();
  if (NonNlsUtils.isNonNlsAnnotated(qualifier)) {
    return;
  }
  final PsiExpressionList argumentList=expression.getArgumentList();
  final PsiExpression[] arguments=argumentList.getExpressions();
  if (arguments.length != 1 || NonNlsUtils.isNonNlsAnnotated(arguments[0])) {
    return;
  }
  registerMethodCallError(expression,expression);
}
