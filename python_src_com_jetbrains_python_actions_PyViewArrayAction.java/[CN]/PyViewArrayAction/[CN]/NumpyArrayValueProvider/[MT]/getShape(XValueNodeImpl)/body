{
  final int[] shape={0};
  node.getTree().addTreeListener(new XDebuggerTreeListener(){
    @Override public void nodeLoaded(    @NotNull RestorableStateNode node,    String name){
      System.out.printf(name + " node loaded\n");
    }
    @Override public void childrenLoaded(    @NotNull XDebuggerTreeNode node,    @NotNull List<XValueContainerNode<?>> children,    boolean last){
      System.out.printf(children + "children loaded\n");
      shape[0]=1;
    }
  }
);
  node.getValueContainer().computeChildren(node);
  System.out.printf("Children loaded and thread resumed\n");
  System.out.printf("Size: " + node.getChildren());
  if (node.getChildCount() > 0) {
    node.getValueContainer().computeChildren(node);
    List<? extends TreeNode> children=node.getChildren();
    for (    TreeNode treeNode : children) {
      int x=1;
    }
  }
  return new int[0];
}
