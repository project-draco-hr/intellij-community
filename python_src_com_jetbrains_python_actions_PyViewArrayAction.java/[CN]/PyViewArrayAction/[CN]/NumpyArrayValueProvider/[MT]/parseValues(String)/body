{
  if (rawValues != null && rawValues.startsWith(START_ROW_SEPARATOR)) {
    int dimension=0;
    while (rawValues.charAt(dimension) == START_ROW_SEPARATOR.charAt(0)) {
      dimension+=1;
    }
    String showedValues=dimension > 2 ? rawValues.substring(dimension - 2,rawValues.indexOf(END_ROW_SEPARATOR + END_ROW_SEPARATOR) + 2) : rawValues;
    String[] rows=showedValues.split("\\]\n( )*\\[");
    Object[][] data=null;
    boolean numeric=isNumeric(showedValues);
    for (int i=0; i < rows.length; i++) {
      Object[] row;
      if (numeric) {
        String clearedRow=rows[i].replace(START_ROW_SEPARATOR,"").replace(END_ROW_SEPARATOR,"").replace("  "," ").replace("  "," ").trim();
        row=clearedRow.split(NUMERIC_VALUE_SEPARATOR);
      }
 else {
        String clearedRow=rows[i].replace(START_ROW_SEPARATOR,"").replace(END_ROW_SEPARATOR,"").replace("  "," ").trim();
        Matcher matcher=STR_VALUE_SEPARATOR.matcher(clearedRow);
        List<String> matches=new ArrayList<String>();
        while (matcher.find()) {
          matches.add(matcher.group());
        }
        row=matches.toArray();
      }
      data=data == null ? new String[rows.length][row.length] : data;
      System.arraycopy(row,0,data[i],0,row.length);
    }
    return data;
  }
  return null;
}
