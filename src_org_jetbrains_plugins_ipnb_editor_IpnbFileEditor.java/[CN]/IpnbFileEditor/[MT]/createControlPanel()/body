{
  final JPanel controlPanel=new JPanel();
  controlPanel.setBackground(IpnbEditorUtil.getBackground());
  final JButton button=new JButton();
  button.setBackground(IpnbEditorUtil.getBackground());
  button.setPreferredSize(new Dimension(30,30));
  button.setIcon(AllIcons.General.Run);
  button.addActionListener(new ActionListener(){
    @Override public void actionPerformed(    ActionEvent e){
      final IpnbRunCellAction action=(IpnbRunCellAction)ActionManager.getInstance().getAction("IpnbRunCellAction");
      action.runCell(myIpnbEditorPanel);
    }
  }
);
  controlPanel.add(button);
  myCellTypeCombo=new ComboBox(ourCellTypes);
  myCellTypeCombo.addActionListener(new ActionListener(){
    @Override public void actionPerformed(    ActionEvent e){
      final Object selectedItem=myCellTypeCombo.getSelectedItem();
      final IpnbPanel selectedCell=myIpnbEditorPanel.getSelectedCell();
      if (selectedCell != null && selectedItem instanceof String) {
        if (selectedCell instanceof HeadingPanel && ((String)selectedItem).startsWith(headingCellType)) {
          final char c=((String)selectedItem).charAt(((String)selectedItem).length() - 1);
          final int level=Character.getNumericValue(c);
          final HeadingCell headingCell=((HeadingPanel)selectedCell).getCell();
          if (level != headingCell.getLevel()) {
            headingCell.setLevel(level);
            selectedCell.updateCellView();
          }
        }
      }
    }
  }
);
  final IpnbPanel selectedCell=myIpnbEditorPanel.getSelectedCell();
  updateCellTypeCombo(selectedCell);
  controlPanel.add(myCellTypeCombo);
  final MatteBorder border=BorderFactory.createMatteBorder(0,0,1,0,JBColor.GRAY);
  controlPanel.setBorder(border);
  return controlPanel;
}
