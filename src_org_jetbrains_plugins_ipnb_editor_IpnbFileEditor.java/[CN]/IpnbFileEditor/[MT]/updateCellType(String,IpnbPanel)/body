{
  if (selectedCell instanceof HeadingPanel) {
    final HeadingCell cell=((HeadingPanel)selectedCell).getCell();
    if (selectedItem.startsWith(headingCellType)) {
      final char c=selectedItem.charAt(selectedItem.length() - 1);
      final int level=Character.getNumericValue(c);
      if (level != cell.getLevel()) {
        cell.setLevel(level);
        selectedCell.updateCellView();
      }
    }
 else     if (selectedItem.equals(markdownCellType)) {
      final List<IpnbCell> cells=myIpnbFilePanel.getIpnbFile().getCells();
      final int index=cells.indexOf(((HeadingPanel)selectedCell).getCell());
      final MarkdownCell markdownCell=new MarkdownCell(cell.getSource());
      if (index >= 0)       cells.set(index,markdownCell);
      myIpnbFilePanel.replaceComponent(selectedCell,markdownCell);
    }
 else     if (selectedItem.equals(codeCellType)) {
      final List<IpnbCell> cells=myIpnbFilePanel.getIpnbFile().getCells();
      final int index=cells.indexOf(((HeadingPanel)selectedCell).getCell());
      final CodeCell codeCell=new CodeCell("python",cell.getSource(),null,Lists.<CellOutput>newArrayList());
      if (index >= 0)       cells.set(index,codeCell);
      myIpnbFilePanel.replaceComponent(selectedCell,codeCell);
    }
  }
 else   if (selectedCell instanceof MarkdownPanel) {
    final MarkdownCell cell=((MarkdownPanel)selectedCell).getCell();
    if (selectedItem.startsWith(headingCellType)) {
      final char c=selectedItem.charAt(selectedItem.length() - 1);
      final int level=Character.getNumericValue(c);
      final List<IpnbCell> cells=myIpnbFilePanel.getIpnbFile().getCells();
      final int index=cells.indexOf(((MarkdownPanel)selectedCell).getCell());
      final HeadingCell headingCell=new HeadingCell(cell.getSource(),level);
      if (index >= 0)       cells.set(index,headingCell);
      myIpnbFilePanel.replaceComponent(selectedCell,headingCell);
    }
 else     if (selectedItem.equals(codeCellType)) {
      final List<IpnbCell> cells=myIpnbFilePanel.getIpnbFile().getCells();
      final int index=cells.indexOf(((MarkdownPanel)selectedCell).getCell());
      final CodeCell codeCell=new CodeCell("python",cell.getSource(),null,Lists.<CellOutput>newArrayList());
      if (index >= 0)       cells.set(index,codeCell);
      myIpnbFilePanel.replaceComponent(selectedCell,codeCell);
    }
  }
 else   if (selectedCell instanceof CodePanel) {
    final CodeCell cell=((CodePanel)selectedCell).getCell();
    if (selectedItem.startsWith(headingCellType)) {
      final char c=selectedItem.charAt(selectedItem.length() - 1);
      final int level=Character.getNumericValue(c);
      final List<IpnbCell> cells=myIpnbFilePanel.getIpnbFile().getCells();
      final int index=cells.indexOf(((CodePanel)selectedCell).getCell());
      final HeadingCell headingCell=new HeadingCell(cell.getSource(),level);
      if (index >= 0)       cells.set(index,headingCell);
      myIpnbFilePanel.replaceComponent(selectedCell,headingCell);
    }
 else     if (selectedItem.equals(markdownCellType)) {
      final List<IpnbCell> cells=myIpnbFilePanel.getIpnbFile().getCells();
      final int index=cells.indexOf(((CodePanel)selectedCell).getCell());
      final MarkdownCell markdownCell=new MarkdownCell(cell.getSource());
      if (index >= 0)       cells.set(index,markdownCell);
      myIpnbFilePanel.replaceComponent(selectedCell,markdownCell);
    }
  }
}
