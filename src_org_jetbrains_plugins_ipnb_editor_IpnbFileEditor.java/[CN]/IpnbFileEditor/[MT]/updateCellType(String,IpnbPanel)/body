{
  if (selectedCell instanceof HeadingPanel) {
    final HeadingCell cell=((HeadingPanel)selectedCell).getCell();
    if (selectedItem.startsWith(headingCellType)) {
      final char c=selectedItem.charAt(selectedItem.length() - 1);
      final int level=Character.getNumericValue(c);
      if (level != cell.getLevel()) {
        cell.setLevel(level);
        selectedCell.updateCellView();
      }
    }
 else     if (selectedItem.equals(markdownCellType)) {
      myIpnbFilePanel.replaceComponent(selectedCell,new MarkdownCell(cell.getSource()));
    }
 else     if (selectedItem.equals(codeCellType)) {
      myIpnbFilePanel.replaceComponent(selectedCell,new CodeCell("python",cell.getSource(),1,Lists.<CellOutput>newArrayList()));
    }
  }
 else   if (selectedCell instanceof MarkdownPanel) {
    final MarkdownCell cell=((MarkdownPanel)selectedCell).getCell();
    if (selectedItem.startsWith(headingCellType)) {
      final char c=selectedItem.charAt(selectedItem.length() - 1);
      final int level=Character.getNumericValue(c);
      myIpnbFilePanel.replaceComponent(selectedCell,new HeadingCell(cell.getSource(),level));
    }
 else     if (selectedItem.equals(codeCellType)) {
      myIpnbFilePanel.replaceComponent(selectedCell,new CodeCell("python",cell.getSource(),1,Lists.<CellOutput>newArrayList()));
    }
  }
 else   if (selectedCell instanceof CodePanel) {
    final CodeCell cell=((CodePanel)selectedCell).getCell();
    if (selectedItem.startsWith(headingCellType)) {
      final char c=selectedItem.charAt(selectedItem.length() - 1);
      final int level=Character.getNumericValue(c);
      myIpnbFilePanel.replaceComponent(selectedCell,new HeadingCell(cell.getSource(),level));
    }
 else     if (selectedItem.equals(markdownCellType)) {
      myIpnbFilePanel.replaceComponent(selectedCell,new MarkdownCell(cell.getSource()));
    }
  }
}
