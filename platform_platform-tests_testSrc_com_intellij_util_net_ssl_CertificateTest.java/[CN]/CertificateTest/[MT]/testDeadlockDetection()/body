{
  final Ref<Throwable> throwableRef=new Ref<Throwable>();
  final long interruptionTimeout=CertificateManager.DIALOG_VISIBILITY_TIMEOUT + 1000;
  Thread[] t={null};
  ApplicationManager.getApplication().invokeAndWait(new Runnable(){
    @Override public void run(){
      final Thread thread=new Thread(new Runnable(){
        @Override public void run(){
          try {
            boolean accepted=CertificateManager.showAcceptDialog(new Callable<DialogWrapper>(){
              @Override public DialogWrapper call() throws Exception {
                throw new AssertionError("Deadlock was not detected in time");
              }
            }
);
            assertFalse("Certificate should be rejected",accepted);
          }
 catch (          Throwable e) {
            throwableRef.set(e);
          }
        }
      }
,"Test EDT-blocking thread");
      thread.start();
      try {
        thread.join(interruptionTimeout);
      }
 catch (      InterruptedException ignored) {
      }
 finally {
        if (thread.isAlive()) {
          thread.interrupt();
          fail("Deadlock was not detected in time");
        }
      }
      t[0]=thread;
    }
  }
,ModalityState.any());
  if (!throwableRef.isNull()) {
    throw new AssertionError(throwableRef.get());
  }
  t[0].join();
}
