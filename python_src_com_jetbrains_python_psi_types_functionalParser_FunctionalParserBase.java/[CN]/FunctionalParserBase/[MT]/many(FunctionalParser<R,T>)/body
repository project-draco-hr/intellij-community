{
  return new FunctionalParserBase<List<R>,T>(){
    @NotNull @Override public Pair<List<R>,State> parse(    @NotNull List<Token<T>> tokens,    @NotNull State state) throws ParserException {
      final List<R> list=new ArrayList<R>();
      try {
        while (true) {
          final Pair<R,State> result=parser.parse(tokens,state);
          state=result.getSecond();
          list.add(result.getFirst());
        }
      }
 catch (      ParserException e) {
        return Pair.create(list,new State(state,state.getPos(),e.getState().getMax()));
      }
    }
  }
;
}
