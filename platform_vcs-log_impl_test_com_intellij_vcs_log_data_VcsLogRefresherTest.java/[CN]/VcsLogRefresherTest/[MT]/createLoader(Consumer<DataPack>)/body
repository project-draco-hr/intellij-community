{
  myLogData=new VcsLogData(myProject,myLogProviders,new FatalErrorHandler(){
    @Override public void consume(    @Nullable Object source,    @NotNull Exception exception){
      LOG.error(exception);
    }
    @Override public void displayFatalErrorMessage(    @NotNull String message){
      LOG.error(message);
    }
  }
);
  Disposer.register(myProject,myLogData);
  return new VcsLogRefresherImpl(myProject,myLogData.getHashMap(),myLogProviders,myLogData.getUserRegistry(),myLogData.getIndex(),new VcsLogProgress(),myLogData.getTopCommitsCache(),dataPackConsumer,FAILING_EXCEPTION_HANDLER,RECENT_COMMITS_COUNT){
    @Override protected void startNewBackgroundTask(    @NotNull final Task.Backgroundable refreshTask){
      LOG.debug("Starting a background task...");
      myStartedTasks.add(((ProgressManagerImpl)ProgressManager.getInstance()).runProcessWithProgressAsynchronously(refreshTask));
      LOG.debug(myStartedTasks.size() + " started tasks");
    }
  }
;
}
