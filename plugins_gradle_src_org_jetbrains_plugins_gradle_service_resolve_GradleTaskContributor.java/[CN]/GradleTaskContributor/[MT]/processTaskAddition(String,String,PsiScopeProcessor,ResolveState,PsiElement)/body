{
  GroovyPsiManager psiManager=GroovyPsiManager.getInstance(place.getProject());
  PsiClass psiClass=psiManager.findClassWithCache(handlerClass,place.getResolveScope());
  if (psiClass == null) {
    return;
  }
  GrLightMethodBuilder builder=new GrLightMethodBuilder(place.getManager(),name);
  PsiElementFactory factory=JavaPsiFacade.getElementFactory(place.getManager().getProject());
  PsiType type=new PsiArrayType(factory.createTypeByFQClassName(CommonClassNames.JAVA_LANG_OBJECT,place.getResolveScope()));
  builder.addParameter(new GrLightParameter("taskInfo",type,builder));
  PsiClassType retType=factory.createTypeByFQClassName(CommonClassNames.JAVA_LANG_STRING,place.getResolveScope());
  builder.setReturnType(retType);
  processor.execute(builder,state);
  GrMethodCall call=PsiTreeUtil.getParentOfType(place,GrMethodCall.class);
  if (call == null) {
    return;
  }
  GrArgumentList args=call.getArgumentList();
  if (args == null) {
    return;
  }
  int argsCount=GradleResolverUtil.getGrMethodArumentsCount(args);
  argsCount++;
  for (  PsiMethod method : psiClass.findMethodsByName("create",false)) {
    if (method.getParameterList().getParametersCount() == argsCount) {
      builder.setNavigationElement(method);
    }
  }
}
