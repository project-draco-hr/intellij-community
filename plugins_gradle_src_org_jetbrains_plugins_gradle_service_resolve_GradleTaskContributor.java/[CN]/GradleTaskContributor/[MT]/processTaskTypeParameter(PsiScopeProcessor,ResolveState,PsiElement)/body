{
  final int taskTypeParameterLevel=3;
  PsiElement psiElement=GradleResolverUtil.findParent(place,taskTypeParameterLevel);
  if (psiElement instanceof GrMethodCallExpression) {
    GrMethodCallExpression callExpression=(GrMethodCallExpression)psiElement;
    GrArgumentList argumentList=callExpression.getArgumentList();
    if (argumentList != null && argumentList.getAllArguments().length > 0) {
      for (      GroovyPsiElement argument : argumentList.getAllArguments()) {
        if (argument instanceof GrNamedArgument) {
          GrNamedArgument namedArgument=(GrNamedArgument)argument;
          GrExpression grExpression=namedArgument.getExpression();
          PsiType psiType=null;
          if (grExpression != null) {
            psiType=GradleResolverUtil.getTypeOf(grExpression);
          }
          if (psiType instanceof PsiImmediateClassType) {
            PsiImmediateClassType immediateClassType=(PsiImmediateClassType)psiType;
            for (            PsiType type : immediateClassType.getParameters()) {
              GroovyPsiManager psiManager=GroovyPsiManager.getInstance(place.getProject());
              GradleResolverUtil.processDeclarations(psiManager,processor,state,place,type.getCanonicalText());
            }
          }
        }
      }
    }
 else {
      GroovyPsiManager psiManager=GroovyPsiManager.getInstance(place.getProject());
      GradleResolverUtil.processDeclarations(psiManager,processor,state,place,GradleCommonClassNames.GRADLE_API_TASK);
    }
  }
}
