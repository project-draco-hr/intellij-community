{
  StringBuilder argument=new StringBuilder("-javaagent:");
  final String agentPath=PathUtil.getJarPathForClass(ProjectData.class);
  final String parentPath=handleSpacesInPath(agentPath);
  argument.append(parentPath).append(File.separator).append(new File(agentPath).getName());
  argument.append("=");
  try {
    final File tempFile=createTempFile();
    tempFile.deleteOnExit();
    write2file(tempFile,sessionDataFilePath);
    write2file(tempFile,String.valueOf(collectLineInfo));
    write2file(tempFile,Boolean.FALSE.toString());
    write2file(tempFile,Boolean.FALSE.toString());
    write2file(tempFile,String.valueOf(isSampling));
    if (patterns != null) {
      for (      String coveragePattern : patterns) {
        coveragePattern=coveragePattern.replace("$","\\$").replace(".","\\.").replaceAll("\\*",".*");
        if (!coveragePattern.endsWith(".*")) {
          coveragePattern+="(\\$.*)*";
        }
        write2file(tempFile,coveragePattern);
      }
    }
    argument.append(tempFile.getCanonicalPath());
  }
 catch (  IOException e) {
    LOG.info("Coverage was not enabled",e);
    return;
  }
  javaParameters.getVMParametersList().add(argument.toString());
}
