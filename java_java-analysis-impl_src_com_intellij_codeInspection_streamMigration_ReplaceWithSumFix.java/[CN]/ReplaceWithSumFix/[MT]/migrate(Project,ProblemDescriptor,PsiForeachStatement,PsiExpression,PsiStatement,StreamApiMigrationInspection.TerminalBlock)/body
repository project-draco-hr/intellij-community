{
  PsiAssignmentExpression assignment=tb.getSingleExpression(PsiAssignmentExpression.class);
  if (assignment == null)   return;
  PsiVariable var=StreamApiMigrationInspection.extractAccumulator(assignment);
  if (var == null)   return;
  PsiExpression addend=StreamApiMigrationInspection.extractAddend(assignment);
  if (addend == null)   return;
  PsiType type=var.getType();
  if (!(type instanceof PsiPrimitiveType) || type.equals(PsiType.FLOAT))   return;
  if (!type.equals(PsiType.DOUBLE) && !type.equals(PsiType.LONG)) {
    type=PsiType.INT;
  }
  final StringBuilder builder=generateStream(iteratedValue,new StreamApiMigrationInspection.MapOp(tb.getLastOperation(),addend,tb.getVariable(),type));
  builder.append(".sum()");
  replaceWithNumericAddition(project,foreachStatement,var,builder,type);
}
