{
  super(project);
  myClassDescriptor=classDescriptor;
  myMethod=method;
  myParameterInfos=parameterInfos;
  int[] paramsToMerge=new int[parameterInfos.length];
  for (int i=0; i < paramsToMerge.length; i++) {
    paramsToMerge[i]=parameterInfos[i].getOldIndex();
  }
  List<P> newParams=new ArrayList<>();
  int anchor=-1;
  for (  P param : parameters) {
    final int i=ArrayUtil.find(paramsToMerge,param.getOldIndex());
    if (i > -1) {
      if (anchor == -1) {
        anchor=i;
      }
    }
 else {
      newParams.add(param);
    }
  }
  myDelegate=IntroduceParameterObjectDelegate.findDelegate(method);
  LOG.assertTrue(myDelegate != null);
  myMergedParameterInfo=myDelegate.createMergedParameterInfo(project,classDescriptor,paramsToMerge,method);
  newParams.add(anchor,myMergedParameterInfo);
  myChangeInfo=myDelegate.createChangeSignatureInfo(myMethod,newParams,keepMethodAsDelegate);
  myAccessors=new IntroduceParameterObjectDelegate.Accessor[parameterInfos.length];
}
