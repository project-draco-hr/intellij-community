{
  super(method.getProject());
  myClassDescriptor=classDescriptor;
  myMethod=method;
  final P[] paramsToMerge=classDescriptor.getParamsToMerge();
  List<P> newParams=new ArrayList<>();
  int anchor=-1;
  for (  P param : oldMethodParameters) {
    final P mergedParameterInfo=classDescriptor.getParameterInfo(param.getOldIndex());
    if (mergedParameterInfo != null) {
      if (anchor == -1) {
        anchor=ArrayUtil.find(paramsToMerge,mergedParameterInfo);
      }
    }
 else {
      newParams.add(param);
    }
  }
  myDelegate=IntroduceParameterObjectDelegate.findDelegate(method);
  LOG.assertTrue(myDelegate != null);
  myMergedParameterInfo=myDelegate.createMergedParameterInfo(method.getProject(),classDescriptor,method);
  newParams.add(anchor,myMergedParameterInfo);
  myChangeInfo=myDelegate.createChangeSignatureInfo(myMethod,newParams,keepMethodAsDelegate);
  myAccessors=new IntroduceParameterObjectDelegate.Accessor[paramsToMerge.length];
}
