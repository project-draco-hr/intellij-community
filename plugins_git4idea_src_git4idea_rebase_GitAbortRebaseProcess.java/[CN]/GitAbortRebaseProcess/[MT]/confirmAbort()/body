{
  String title="Abort Rebase";
  if (myRepositoryToAbort != null) {
    if (myRepositoriesToRollback.isEmpty()) {
      String message="Are you sure you want to abort rebase" + GitUtil.mention(myRepositoryToAbort) + "?";
      int choice=DialogManager.showOkCancelDialog(myProject,message,title,"Abort",getCancelButtonText(),getQuestionIcon());
      if (choice == Messages.OK) {
        return AbortChoice.ABORT;
      }
    }
 else {
      String message="Do you want just to abort rebase" + GitUtil.mention(myRepositoryToAbort) + ",\n"+ "or also rollback the successful rebase in "+ mention(myRepositoriesToRollback.keySet())+ "?";
      int choice=DialogManager.showYesNoCancelDialog(myProject,message,title,"Abort & Rollback","Abort",getCancelButtonText(),getQuestionIcon());
      if (choice == Messages.YES) {
        return AbortChoice.ROLLBACK_AND_ABORT;
      }
 else       if (choice == Messages.NO) {
        return AbortChoice.ABORT;
      }
    }
  }
 else {
    if (myRepositoriesToRollback.isEmpty()) {
      LOG.error(new Throwable());
    }
 else {
      String description="Do you want rollback the successful rebase in " + mention(myRepositoriesToRollback.keySet()) + "?";
      int choice=DialogManager.showOkCancelDialog(myProject,description,title,"Rollback",getCancelButtonText(),getQuestionIcon());
      if (choice == Messages.YES) {
        return AbortChoice.ROLLBACK_AND_ABORT;
      }
    }
  }
  return AbortChoice.CANCEL;
}
