{
  LOG.info("update started|" + updateMethod);
  String oldText=myProgressIndicator.getText();
  myProgressIndicator.setText("Updating...");
  for (  GitRepository repository : myRepositories) {
    repository.update();
  }
  if (checkRebaseInProgress() || isMergeInProgress() || areUnmergedFiles()|| !checkTrackedBranchesConfigured()) {
    return GitUpdateResult.NOT_READY;
  }
  if (!fetchAndNotify()) {
    return GitUpdateResult.NOT_READY;
  }
  new GitFreezingProcess(myProject,myPlatformFacade,"update",new Runnable(){
    public void run(){
      AccessToken token=DvcsUtil.workingTreeChangeStarted(myProject);
      try {
        myResult=updateImpl(updateMethod);
      }
  finally {
        DvcsUtil.workingTreeChangeFinished(myProject,token);
      }
    }
  }
).execute();
  myProgressIndicator.setText(oldText);
  return myResult;
}
