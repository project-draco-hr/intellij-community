{
  LOG.info("update started|" + updateMethod);
  String oldText=myProgressIndicator.getText();
  myProgressIndicator.setText("Updating...");
  for (  GitRepository repository : myRepositories) {
    repository.update();
  }
  if (checkRebaseInProgress() || isMergeInProgress() || areUnmergedFiles()|| !checkTrackedBranchesConfigured()) {
    return GitUpdateResult.NOT_READY;
  }
  if (!fetchAndNotify()) {
    return GitUpdateResult.NOT_READY;
  }
  GitComplexProcess.Operation updateOperation=new GitComplexProcess.Operation(){
    @Override public void run(    ContinuationContext continuationContext){
      GitUtil.workingTreeChangeStarted(myProject);
      try {
        myResult=updateImpl(updateMethod,continuationContext);
      }
  finally {
        GitUtil.workingTreeChangeFinished(myProject);
      }
    }
  }
;
  GitComplexProcess.execute(myProject,"update",updateOperation);
  myProgressIndicator.setText(oldText);
  return myResult;
}
