{
  final PsiClass[][] holder=new PsiClass[1][];
  final Runnable process=new Runnable(){
    public void run(){
      final ProgressIndicator indicator=ProgressManager.getInstance().getProgressIndicator();
      final Collection<PsiClass> set=new LinkedHashSet<PsiClass>();
      final PsiManager manager=PsiManager.getInstance(filter.getProject());
      final GlobalSearchScope projectScope=GlobalSearchScope.projectScope(manager.getProject());
      final GlobalSearchScope scope=projectScope.intersectWith(filter.getScope());
      ApplicationManager.getApplication().runReadAction(new Runnable(){
        public void run(){
          for (          final PsiClass psiClass : AllClassesSearch.search(scope,manager.getProject())) {
            if (filter.isAccepted(psiClass)) {
              if (indicator != null) {
                indicator.setText2("Found test class " + psiClass.getQualifiedName());
              }
              set.add(psiClass);
            }
          }
        }
      }
);
      holder[0]=set.toArray(new PsiClass[set.size()]);
    }
  }
;
  if (sync) {
    ProgressManager.getInstance().runProcessWithProgressSynchronously(process,"Searching For Tests...",true,filter.getProject());
  }
 else {
    process.run();
  }
  return holder[0];
}
