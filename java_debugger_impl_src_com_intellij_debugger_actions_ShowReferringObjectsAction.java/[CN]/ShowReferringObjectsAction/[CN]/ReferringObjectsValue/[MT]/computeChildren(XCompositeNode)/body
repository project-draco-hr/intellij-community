{
  getEvaluationContext().getDebugProcess().getManagerThread().schedule(new SuspendContextCommandImpl(getEvaluationContext().getSuspendContext()){
    @Override public Priority getPriority(){
      return Priority.NORMAL;
    }
    @Override public void contextAction() throws Exception {
      final XValueChildrenList children=new XValueChildrenList();
      Value value=getDescriptor().getValue();
      List<ObjectReference> references=((ObjectReference)value).referringObjects(MAX_REFERRING);
      int i=1;
      for (      final ObjectReference reference : references) {
        ValueDescriptorImpl descriptor=new ValueDescriptorImpl(getProject(),reference){
          @Override public Value calcValue(          EvaluationContextImpl evaluationContext) throws EvaluateException {
            return reference;
          }
          @Override public String getName(){
            return "Ref";
          }
          @Override public String calcValueName(){
            return "Ref";
          }
          @Override public PsiExpression getDescriptorEvaluation(          DebuggerContext context) throws EvaluateException {
            return null;
          }
        }
;
        children.add("Referrer " + i++,new ReferringObjectsValue(null,descriptor,getEvaluationContext(),null));
      }
      node.addChildren(children,true);
    }
  }
);
}
