{
  myProject=project;
  myComponent=component;
  myMode=mode;
  if (parent != null) {
    myDialog=new MyDialogWrapper(parent,component,dimensionServiceKey,preferredFocusedComponent);
  }
 else {
    myDialog=new MyDialogWrapper(project,component,dimensionServiceKey,preferredFocusedComponent);
  }
  if (onShowCallback != null) {
    myDialog.getWindow().addWindowListener(new WindowAdapter(){
      @Override public void windowOpened(      WindowEvent e){
        onShowCallback.run();
      }
    }
);
  }
switch (mode) {
case MODAL:
    myDialog.setModal(true);
  break;
case NON_MODAL:
myDialog.setModal(false);
break;
default :
throw new IllegalArgumentException(mode.toString());
}
myDialog.init();
Disposer.register(myDialog.getDisposable(),this);
}
