{
  myProject=builder.project;
  myComponent=builder.component;
  myMode=builder.mode;
  if (builder.parent != null) {
    myDialog=new MyDialogWrapper(builder.parent,builder.component,builder.dimensionServiceKey,builder.preferredFocusedComponent);
  }
 else {
    myDialog=new MyDialogWrapper(builder.project,builder.component,builder.dimensionServiceKey,builder.preferredFocusedComponent);
  }
  final Runnable onShowCallback=builder.onShowCallback;
  if (onShowCallback != null) {
    myDialog.getWindow().addWindowListener(new WindowAdapter(){
      @Override public void windowOpened(      WindowEvent e){
        onShowCallback.run();
      }
    }
);
  }
switch (builder.mode) {
case MODAL:
    myDialog.setModal(true);
  break;
case NON_MODAL:
myDialog.setModal(false);
break;
default :
throw new IllegalArgumentException(builder.mode.toString());
}
myDialog.init();
Disposer.register(myDialog.getDisposable(),this);
}
