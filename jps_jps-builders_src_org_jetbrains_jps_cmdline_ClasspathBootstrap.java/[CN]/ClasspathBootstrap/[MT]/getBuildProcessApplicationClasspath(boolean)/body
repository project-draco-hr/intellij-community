{
  final Set<String> cp=ContainerUtil.newHashSet();
  cp.add(getResourcePath(BuildMain.class));
  cp.addAll(PathManager.getUtilClassPath());
  cp.add(getResourcePath(Message.class));
  cp.add(getResourcePath(NetUtil.class));
  cp.add(getResourcePath(ClassWriter.class));
  cp.add(getResourcePath(ClassVisitor.class));
  cp.add(getResourcePath(JpsModel.class));
  cp.add(getResourcePath(JpsModelImpl.class));
  cp.add(getResourcePath(JpsProjectLoader.class));
  cp.add(getResourcePath(AlienFormFileException.class));
  cp.add(getResourcePath(GridConstraints.class));
  cp.add(getResourcePath(CellConstraints.class));
  cp.addAll(getInstrumentationUtilRoots());
  cp.add(getResourcePath(IXMLBuilder.class));
  cp.add(getJpsPluginSystemClassesPath().getAbsolutePath().replace('\\','/'));
  cp.addAll(getJavac8RefeScannerClasspath());
  if (!isLauncherUsed) {
    appendJavaCompilerClasspath(cp);
  }
  try {
    final Class<?> cmdLineWrapper=Class.forName("com.intellij.rt.execution.CommandLineWrapper");
    cp.add(getResourcePath(cmdLineWrapper));
  }
 catch (  Throwable ignored) {
  }
  return ContainerUtil.newArrayList(cp);
}
