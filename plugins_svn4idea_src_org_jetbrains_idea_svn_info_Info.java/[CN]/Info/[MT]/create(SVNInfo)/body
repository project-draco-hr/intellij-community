{
  Info result;
  if (info.isRemote()) {
    result=new Info(info.getPath(),info.getURL(),info.getRevision(),NodeKind.from(info.getKind()),info.getRepositoryUUID(),info.getRepositoryRootURL(),info.getCommittedRevision().getNumber(),info.getCommittedDate(),info.getAuthor(),Lock.create(info.getLock()),Depth.from(info.getDepth()));
  }
 else {
    result=new Info(info.getFile(),info.getURL(),info.getRepositoryRootURL(),info.getRevision().getNumber(),NodeKind.from(info.getKind()),info.getRepositoryUUID(),info.getCommittedRevision().getNumber(),toString(info.getCommittedDate()),info.getAuthor(),info.getSchedule(),info.getCopyFromURL(),info.getCopyFromRevision().getNumber(),getPath(info.getConflictOldFile()),getPath(info.getConflictNewFile()),getPath(info.getConflictWrkFile()),getPath(info.getPropConflictFile()),Lock.create(info.getLock()),Depth.from(info.getDepth()),TreeConflictDescription.create(info.getTreeConflict()));
  }
  return result;
}
