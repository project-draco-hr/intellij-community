{
  PsiClass containingClass=method.getContainingClass();
  if (!(containingClass instanceof PsiAnonymousClass)) {
    return false;
  }
  if (containingClass.getParent() instanceof PsiNewExpression && containingClass.getParent().getParent() instanceof PsiVariable && !method.getHierarchicalMethodSignature().getSuperSignatures().isEmpty()) {
    return false;
  }
  return MethodReferencesSearch.search(method,new LocalSearchScope(containingClass),false).findFirst() == null;
}
