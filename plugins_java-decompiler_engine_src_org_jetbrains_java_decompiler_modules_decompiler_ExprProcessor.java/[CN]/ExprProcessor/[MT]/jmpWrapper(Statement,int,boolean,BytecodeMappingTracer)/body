{
  TextBuffer buf=stat.toJava(indent,tracer);
  List<StatEdge> lstSuccs=stat.getSuccessorEdges(Statement.STATEDGE_DIRECT_ALL);
  if (lstSuccs.size() == 1) {
    StatEdge edge=lstSuccs.get(0);
    if (edge.getType() != StatEdge.TYPE_REGULAR && edge.explicit && edge.getDestination().type != Statement.TYPE_DUMMYEXIT) {
      buf.appendIndent(indent);
switch (edge.getType()) {
case StatEdge.TYPE_BREAK:
        buf.append("break");
      break;
case StatEdge.TYPE_CONTINUE:
    buf.append("continue");
}
if (edge.labeled) {
  buf.append(" label").append(edge.closure.id.toString());
}
buf.append(";").appendLineSeparator();
tracer.incrementCurrentSourceLine();
}
}
if (buf.length() == 0 && semicolon) {
buf.appendIndent(indent).append(";").appendLineSeparator();
tracer.incrementCurrentSourceLine();
}
return buf;
}
