{
  final List<Module> obsoleteModules=collectObsoleteModules();
  if (obsoleteModules.isEmpty())   return false;
  setMavenizedModules(obsoleteModules,false);
  final int[] result=new int[1];
  MavenUtil.invokeAndWait(myProject,myModelsProvider.getModalityStateForQuestionDialogs(),new Runnable(){
    public void run(){
      result[0]=Messages.showYesNoDialog(myProject,ProjectBundle.message("maven.import.message.delete.obsolete",formatModules(obsoleteModules)),ProjectBundle.message("maven.project.import.title"),Messages.getQuestionIcon());
    }
  }
);
  if (result[0] == Messages.NO)   return false;
  for (  Module each : obsoleteModules) {
    if (!each.isDisposed()) {
      myModuleModel.disposeModule(each);
    }
  }
  return true;
}
