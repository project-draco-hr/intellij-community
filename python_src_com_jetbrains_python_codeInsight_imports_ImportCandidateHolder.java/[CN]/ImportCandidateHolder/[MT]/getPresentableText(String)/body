{
  final StringBuilder sb=new StringBuilder(getQualifiedName(myName,myPath,myImportElement));
  PsiElement parent=null;
  if (myImportElement != null) {
    parent=myImportElement.getParent();
  }
  if (myImportable instanceof PyFunction) {
    sb.append(((PyFunction)myImportable).getParameterList().getPresentableText(false));
  }
 else   if (myImportable instanceof PyClass) {
    final PyClass[] supers=((PyClass)myImportable).getSuperClasses();
    if (supers.length > 0) {
      sb.append("(");
      final String[] superNames=new String[supers.length];
      for (int i=0; i < supers.length; i+=1) {
        superNames[i]=supers[i].getName();
      }
      sb.append(StringUtil.join(superNames,", "));
      sb.append(")");
    }
  }
  if (parent instanceof PyFromImportStatement) {
    sb.append(" from ");
    final PyFromImportStatement fromImportStatement=(PyFromImportStatement)parent;
    sb.append(StringUtil.repeat(".",fromImportStatement.getRelativeLevel()));
    final PyReferenceExpression source=fromImportStatement.getImportSource();
    if (source != null) {
      sb.append(source.getReferencedName());
    }
  }
  return sb.toString();
}
