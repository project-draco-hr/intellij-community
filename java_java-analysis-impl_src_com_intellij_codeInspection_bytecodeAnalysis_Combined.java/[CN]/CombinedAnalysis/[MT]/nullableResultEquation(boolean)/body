{
  final Key key=new Key(method,NullableOut,stable);
  final Result<Key,Value> result;
  if (exception || returnValue instanceof Trackable && interpreter.dereferencedValues[((Trackable)returnValue).getOriginInsnIndex()]) {
    result=new Final<Key,Value>(Value.Bot);
  }
 else   if (returnValue instanceof TrackableCallValue) {
    TrackableCallValue call=(TrackableCallValue)returnValue;
    Key callKey=new Key(call.method,NullableOut,call.stableCall || call.thisCall);
    Set<Key> keys=new SingletonSet<Key>(callKey);
    result=new Pending<Key,Value>(new SingletonSet<Product<Key,Value>>(new Product<Key,Value>(Value.Null,keys)));
  }
 else   if (returnValue instanceof TrackableNullValue) {
    result=new Final<Key,Value>(Value.Null);
  }
 else {
    result=new Final<Key,Value>(Value.Bot);
  }
  return new Equation<Key,Value>(key,result);
}
