{
  final Key key=new Key(method,new In(i,In.NOT_NULL_MASK),stable);
  final Result result;
  if (interpreter.dereferencedParams[i]) {
    result=new Final(Value.NotNull);
  }
 else {
    Set<ParamKey> calls=interpreter.parameterFlow[i];
    if (calls == null || calls.isEmpty()) {
      result=new Final(Value.Top);
    }
 else {
      Set<Key> keys=new HashSet<Key>();
      for (      ParamKey pk : calls) {
        keys.add(new Key(pk.method,new In(pk.i,In.NOT_NULL_MASK),pk.stable));
      }
      result=new Pending(new SingletonSet<Product>(new Product(Value.Top,keys)));
    }
  }
  return new Equation(key,result);
}
