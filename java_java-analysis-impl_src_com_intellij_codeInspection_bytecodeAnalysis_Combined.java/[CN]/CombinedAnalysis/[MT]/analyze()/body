{
  Frame<BasicValue> frame=createStartFrame();
  int insnIndex=0;
  while (true) {
    AbstractInsnNode insnNode=methodNode.instructions.get(insnIndex);
switch (insnNode.getType()) {
case AbstractInsnNode.LABEL:
case AbstractInsnNode.LINE:
case AbstractInsnNode.FRAME:
      insnIndex=controlFlow.transitions[insnIndex][0];
    break;
default :
switch (insnNode.getOpcode()) {
case ATHROW:
    exception=true;
  return;
case ARETURN:
case IRETURN:
case LRETURN:
case FRETURN:
case DRETURN:
returnValue=frame.pop();
return;
case RETURN:
return;
default :
frame.execute(insnNode,interpreter);
insnIndex=controlFlow.transitions[insnIndex][0];
}
}
}
}
