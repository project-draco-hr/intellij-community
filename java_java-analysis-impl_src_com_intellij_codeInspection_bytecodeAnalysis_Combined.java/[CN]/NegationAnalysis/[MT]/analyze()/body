{
  Frame<BasicValue> frame=createStartFrame();
  int insnIndex=0;
  while (true) {
    AbstractInsnNode insnNode=methodNode.instructions.get(insnIndex);
switch (insnNode.getType()) {
case AbstractInsnNode.LABEL:
case AbstractInsnNode.LINE:
case AbstractInsnNode.FRAME:
      insnIndex=controlFlow.transitions[insnIndex][0];
    break;
default :
switch (insnNode.getOpcode()) {
case IFEQ:
case IFNE:
    BasicValue conValue=popValue(frame);
  checkAssertion(conValue instanceof TrackableCallValue);
frame.execute(insnNode,interpreter);
conditionValue=(TrackableCallValue)conValue;
int jumpIndex=methodNode.instructions.indexOf(((JumpInsnNode)insnNode).label);
int nextIndex=insnIndex + 1;
proceedBranch(frame,jumpIndex,IFNE == insnNode.getOpcode());
proceedBranch(frame,nextIndex,IFEQ == insnNode.getOpcode());
checkAssertion(FalseValue == trueBranchValue);
checkAssertion(TrueValue == falseBranchValue);
return;
default :
frame.execute(insnNode,interpreter);
insnIndex=controlFlow.transitions[insnIndex][0];
}
}
}
}
