{
  final Key key=new Key(method,Out,stable);
  final Result<Key,Value> result;
  if (exception) {
    result=new Final<Key,Value>(Value.Bot);
  }
 else   if (FalseValue == returnValue) {
    result=new Final<Key,Value>(Value.False);
  }
 else   if (TrueValue == returnValue) {
    result=new Final<Key,Value>(Value.True);
  }
 else   if (NullValue == returnValue) {
    result=new Final<Key,Value>(Value.Null);
  }
 else   if (returnValue instanceof NotNullValue) {
    result=new Final<Key,Value>(Value.NotNull);
  }
 else   if (returnValue instanceof CombinedCall) {
    CombinedCall call=(CombinedCall)returnValue;
    Key callKey=new Key(call.method,Out,call.stableCall);
    Set<Key> keys=new SingletonSet<Key>(callKey);
    result=new Pending<Key,Value>(new SingletonSet<Product<Key,Value>>(new Product<Key,Value>(Value.Top,keys)));
  }
 else {
    result=new Final<Key,Value>(Value.Top);
  }
  return new Equation<Key,Value>(key,result);
}
