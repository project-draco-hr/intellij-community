{
  final Key key=new Key(method,new In(i,In.NOT_NULL),stable);
  final Result<Key,Value> result;
  if (interpreter.dereferenced[i]) {
    result=new Final<Key,Value>(Value.NotNull);
  }
 else {
    Set<Key> calls=interpreter.callDerefs[i];
    if (calls == null || calls.isEmpty()) {
      result=new Final<Key,Value>(Value.Top);
    }
 else {
      result=new Pending<Key,Value>(new SingletonSet<Product<Key,Value>>(new Product<Key,Value>(Value.Top,calls)));
    }
  }
  return new Equation<Key,Value>(key,result);
}
