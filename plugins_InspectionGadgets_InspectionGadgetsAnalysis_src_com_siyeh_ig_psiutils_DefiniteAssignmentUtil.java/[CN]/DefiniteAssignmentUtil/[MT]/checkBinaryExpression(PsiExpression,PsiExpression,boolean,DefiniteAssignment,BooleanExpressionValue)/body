{
  if (and ? value == BooleanExpressionValue.WHEN_FALSE : value == BooleanExpressionValue.WHEN_TRUE) {
    final boolean da=definiteAssignment.isDefinitelyAssigned();
    final boolean du=definiteAssignment.isDefinitelyUnassigned();
    checkExpression(lhs,definiteAssignment,and ? BooleanExpressionValue.WHEN_FALSE : BooleanExpressionValue.WHEN_TRUE);
    final boolean resultDa=definiteAssignment.isDefinitelyAssigned();
    final boolean resultDu=definiteAssignment.isDefinitelyUnassigned();
    definiteAssignment.set(da,du);
    checkExpression(lhs,definiteAssignment,and ? BooleanExpressionValue.WHEN_TRUE : BooleanExpressionValue.WHEN_FALSE);
    checkExpression(rhs,definiteAssignment,and ? BooleanExpressionValue.WHEN_FALSE : BooleanExpressionValue.WHEN_TRUE);
    definiteAssignment.and(resultDa,resultDu);
  }
 else   if (and ? value == BooleanExpressionValue.WHEN_TRUE : value == BooleanExpressionValue.WHEN_FALSE) {
    checkExpression(lhs,definiteAssignment,and ? BooleanExpressionValue.WHEN_TRUE : BooleanExpressionValue.WHEN_FALSE);
    checkExpression(rhs,definiteAssignment,and ? BooleanExpressionValue.WHEN_TRUE : BooleanExpressionValue.WHEN_FALSE);
  }
 else {
    final boolean da=definiteAssignment.isDefinitelyAssigned();
    final boolean du=definiteAssignment.isDefinitelyUnassigned();
    checkBinaryExpression(lhs,rhs,false,definiteAssignment,BooleanExpressionValue.WHEN_TRUE);
    final boolean resultDa=definiteAssignment.isDefinitelyAssigned();
    final boolean resultDu=definiteAssignment.isDefinitelyUnassigned();
    definiteAssignment.set(da,du);
    checkBinaryExpression(lhs,rhs,false,definiteAssignment,BooleanExpressionValue.WHEN_FALSE);
    definiteAssignment.and(resultDa,resultDu);
  }
}
