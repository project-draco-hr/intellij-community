{
  final boolean da=definiteAssignment.isDefinitelyAssigned();
  final boolean du=definiteAssignment.isDefinitelyUnassigned();
  definiteAssignment.set(false,true);
  final PsiCodeBlock body=constructor.getBody();
  if (body == null) {
    return;
  }
  final PsiStatement[] statements=body.getStatements();
  boolean superCalled=false;
  for (int i=0; i < statements.length; i++) {
    final PsiStatement statement=statements[i];
    if (i == 0) {
      if (isAlternateConstructorInvocation(statement)) {
        checkStatement(statement,definiteAssignment);
        definiteAssignment.set(true,false);
        superCalled=true;
        continue;
      }
 else       if (isSuperClassConstructorInvocation(statement)) {
        checkStatement(statement,definiteAssignment);
        definiteAssignment.set(da,du);
        superCalled=true;
        continue;
      }
    }
    if (!superCalled) {
      definiteAssignment.set(da,du);
      superCalled=true;
    }
    checkStatement(statement,definiteAssignment);
  }
  if (!superCalled) {
    definiteAssignment.set(da,du);
  }
  definiteAssignment.andDefiniteAssignmentBeforeReturn(constructor);
}
