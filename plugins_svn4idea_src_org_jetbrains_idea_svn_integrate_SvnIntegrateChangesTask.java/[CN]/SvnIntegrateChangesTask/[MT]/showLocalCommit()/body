{
  final Collection<FilePath> files=gatherChangedPaths();
  final ChangeListManager changeListManager=ChangeListManager.getInstance(myProject);
  changeListManager.invokeAfterUpdate(new Runnable(){
    public void run(){
      Collection<Change> changes=new ArrayList<Change>();
      for (      FilePath file : files) {
        ContainerUtil.addIfNotNull(changes,changeListManager.getChange(file));
      }
      CommitChangeListDialog.commitChanges(myProject,changes,null,null,myMerger.getComment());
      prepareAndShowResults();
    }
  }
,InvokeAfterUpdateMode.SYNCHRONOUS_CANCELLABLE,myTitle,new Consumer<VcsDirtyScopeManager>(){
    public void consume(    final VcsDirtyScopeManager vcsDirtyScopeManager){
      vcsDirtyScopeManager.filePathsDirty(files,null);
    }
  }
,null);
}
