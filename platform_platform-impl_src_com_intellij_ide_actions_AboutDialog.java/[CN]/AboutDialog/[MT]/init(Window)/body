{
  ApplicationInfoEx appInfo=(ApplicationInfoEx)ApplicationInfo.getInstance();
  JPanel mainPanel=new JPanel(new BorderLayout());
  mainPanel.setFocusable(true);
  final JComponent closeListenerOwner;
  Icon image=IconLoader.getIcon(appInfo.getAboutImageUrl());
  final InfoSurface infoSurface;
  if (appInfo.showLicenseeInfo()) {
    infoSurface=new InfoSurface(image);
    infoSurface.setPreferredSize(new Dimension(image.getIconWidth(),image.getIconHeight()));
    mainPanel.add(infoSurface,BorderLayout.NORTH);
    closeListenerOwner=infoSurface;
  }
 else {
    infoSurface=null;
    mainPanel.add(new JLabel(image),BorderLayout.NORTH);
    closeListenerOwner=mainPanel;
  }
  setUndecorated(true);
  setContentPane(mainPanel);
  final Ref<Long> showTime=Ref.create(System.currentTimeMillis());
  new DumbAwareAction(){
    @Override public void actionPerformed(    AnActionEvent e){
      if (infoSurface != null) {
        copyInfoToClipboard(infoSurface.getText());
      }
    }
  }
.registerCustomShortcutSet(CustomShortcutSet.fromString("meta C","control C"),mainPanel);
  new DumbAwareAction(){
    @Override public void actionPerformed(    AnActionEvent e){
      dispose();
    }
  }
.registerCustomShortcutSet(CustomShortcutSet.fromString("ESCAPE"),mainPanel);
  final long delta=500;
  addWindowFocusListener(new WindowFocusListener(){
    public void windowGainedFocus(    WindowEvent e){
    }
    public void windowLostFocus(    WindowEvent e){
      if (e.getOppositeWindow() == null)       return;
      long eventTime=System.currentTimeMillis();
      if (eventTime - showTime.get() > delta && e.getOppositeWindow() != e.getWindow()) {
        dispose();
      }
 else {
        IdeFocusManager.getGlobalInstance().requestFocus(AboutDialog.this,true);
      }
    }
  }
);
  new ClickListener(){
    @Override public boolean onClick(    @NotNull MouseEvent event,    int clickCount){
      dispose();
      return true;
    }
  }
.installOn(closeListenerOwner);
  pack();
  setLocationRelativeTo(window);
}
