{
  PsiManager manager=PsiManager.getInstance(project);
  PsiElementFactory factory=JavaPsiFacade.getInstance(manager.getProject()).getElementFactory();
  CodeStyleManager codeStyleManager=CodeStyleManager.getInstance(project);
  statements=SurroundWithUtil.moveDeclarationsOut(container,statements,false);
  if (statements.length == 0) {
    return null;
  }
  @NonNls String text="try{\n}finally{\n\n}";
  PsiTryStatement tryStatement=(PsiTryStatement)factory.createStatementFromText(text,null);
  tryStatement=(PsiTryStatement)codeStyleManager.reformat(tryStatement);
  tryStatement=(PsiTryStatement)container.addAfter(tryStatement,statements[statements.length - 1]);
  PsiCodeBlock tryBlock=tryStatement.getTryBlock();
  if (tryBlock == null) {
    return null;
  }
  SurroundWithUtil.indentCommentIfNecessary(tryBlock,statements);
  tryBlock.addRange(statements[0],statements[statements.length - 1]);
  container.deleteChildRange(statements[0],statements[statements.length - 1]);
  PsiCodeBlock finallyBlock=tryStatement.getFinallyBlock();
  if (finallyBlock == null) {
    return null;
  }
  Document document=editor.getDocument();
  PsiDocumentManager.getInstance(project).doPostponedOperationsAndUnblockDocument(document);
  TextRange finallyBlockRange=finallyBlock.getTextRange();
  int newLineOffset=finallyBlockRange.getStartOffset() + 2;
  editor.getCaretModel().moveToOffset(newLineOffset);
  editor.getSelectionModel().removeSelection();
  CodeStyleManager.getInstance(project).adjustLineIndent(document,newLineOffset);
  PsiDocumentManager.getInstance(project).commitDocument(document);
  return new TextRange(editor.getCaretModel().getOffset(),editor.getCaretModel().getOffset());
}
