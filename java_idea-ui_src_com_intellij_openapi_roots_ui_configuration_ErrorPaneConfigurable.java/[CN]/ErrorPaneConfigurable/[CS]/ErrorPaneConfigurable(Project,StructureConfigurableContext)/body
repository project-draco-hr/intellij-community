{
  super(new BorderLayout());
  myContent.setEditorKit(UIUtil.getHTMLEditorKit());
  myContent.setEditable(false);
  myContent.setBackground(UIUtil.getListBackground());
  final JScrollPane pane=ScrollPaneFactory.createScrollPane(myContent,true);
  pane.setHorizontalScrollBarPolicy(ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
  add(pane);
  myProject=project;
  myContext=context;
  myAlarm=new Alarm(this);
  project.getMessageBus().connect(this).subscribe(ConfigurationErrors.TOPIC,this);
  myContent.addHyperlinkListener(new HyperlinkAdapter(){
    @Override public void hyperlinkActivated(    HyperlinkEvent e){
      final URL url=e.getURL();
      final AWTEvent awtEvent=EventQueue.getCurrentEvent();
      if (!(awtEvent instanceof MouseEvent)) {
        return;
      }
      final MouseEvent me=(MouseEvent)awtEvent;
      if (url != null) {
        ConfigurationError error=null;
        Element element=e.getSourceElement();
        while (element != null) {
          if ("li".equals(element.getName())) {
            final Element ol=element.getParentElement();
            for (int i=0; i < ol.getElementCount(); i++) {
              if (ol.getElement(i) == element) {
                error=myErrors.get(i);
              }
            }
            break;
          }
          element=element.getParentElement();
        }
        if (error == null)         return;
        final String host=url.getHost();
        String path=url.getPath();
        if (path != null && path.startsWith("/")) {
          path=StringUtil.unescapeXml(path.substring(1));
        }
        if (path != null) {
          if ("fix".equals(host)) {
            final MouseEvent mouseEvent=new MouseEvent(me.getComponent(),me.getID(),me.getWhen(),me.getModifiers(),me.getX() - 15,me.getY() + 10,me.getClickCount(),me.isPopupTrigger());
            error.fix(myContent,new RelativePoint(mouseEvent));
          }
 else {
            error.navigate();
          }
        }
      }
    }
  }
);
  refresh();
}
