{
  final AtomicReference<T> dataRef=new AtomicReference<T>();
  final AtomicReference<IOException> exceptionRef=new AtomicReference<IOException>();
  ProgressManager.getInstance().run(new Task.Modal(project,caption,true){
    public void run(    @NotNull ProgressIndicator indicator){
      try {
        dataRef.set(task.convert(indicator));
      }
 catch (      IOException e) {
        exceptionRef.set(e);
      }
catch (      Error e) {
        exceptionRef.set(new GithubOperationCanceledException(e));
      }
catch (      RuntimeException e) {
        exceptionRef.set(new GithubOperationCanceledException(e));
      }
    }
  }
);
  if (exceptionRef.get() != null) {
    throw exceptionRef.get();
  }
  return dataRef.get();
}
