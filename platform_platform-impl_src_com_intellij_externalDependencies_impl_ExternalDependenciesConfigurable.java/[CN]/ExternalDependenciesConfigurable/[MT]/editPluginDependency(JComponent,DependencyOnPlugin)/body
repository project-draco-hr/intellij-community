{
  List<String> pluginIds=new ArrayList<String>(getPluginNameByIdMap().keySet());
  if (!original.getPluginId().isEmpty() && !pluginIds.contains(original.getPluginId())) {
    pluginIds.add(original.getPluginId());
  }
  Collections.sort(pluginIds,new Comparator<String>(){
    @Override public int compare(    String o1,    String o2){
      return getPluginNameById(o1).compareToIgnoreCase(getPluginNameById(o2));
    }
  }
);
  final ComboBox pluginChooser=new ComboBox(ArrayUtilRt.toStringArray(pluginIds),250);
  pluginChooser.setRenderer(new ListCellRendererWrapper<String>(){
    @Override public void customize(    JList list,    String value,    int index,    boolean selected,    boolean hasFocus){
      setText(getPluginNameById(value));
    }
  }
);
  new ComboboxSpeedSearch(pluginChooser){
    @Override protected String getElementText(    Object element){
      return getPluginNameById((String)element);
    }
  }
;
  pluginChooser.setSelectedItem(original.getPluginId());
  final JBTextField minVersionField=new JBTextField(StringUtil.notNullize(original.getMinVersion()));
  final JBTextField maxVersionField=new JBTextField(StringUtil.notNullize(original.getMaxVersion()));
  minVersionField.getEmptyText().setText("<any>");
  minVersionField.setColumns(10);
  maxVersionField.getEmptyText().setText("<any>");
  maxVersionField.setColumns(10);
  JPanel panel=FormBuilder.createFormBuilder().addLabeledComponent("Plugin:",pluginChooser).addLabeledComponent("Minimum version:",minVersionField).addLabeledComponent("Maximum version:",maxVersionField).getPanel();
  final DialogBuilder dialogBuilder=new DialogBuilder(parent).title("Required Plugin").centerPanel(panel);
  dialogBuilder.setPreferredFocusComponent(pluginChooser);
  pluginChooser.addActionListener(new ActionListener(){
    @Override public void actionPerformed(    ActionEvent e){
      dialogBuilder.setOkActionEnabled(!StringUtil.isEmpty((String)pluginChooser.getSelectedItem()));
    }
  }
);
  if (dialogBuilder.show() == DialogWrapper.OK_EXIT_CODE) {
    return new DependencyOnPlugin(((String)pluginChooser.getSelectedItem()),StringUtil.nullize(minVersionField.getText().trim()),StringUtil.nullize(maxVersionField.getText().trim()));
  }
  return null;
}
