{
  final Project project=element.getProject();
  final DependencyValidationManager validationManager=DependencyValidationManager.getInstance(project);
  if (myTools != null) {
    for (    ScopeToolState state : myTools) {
      final NamedScope scope=state.getScope(project);
      if (scope != null) {
        final PackageSet packageSet=scope.getValue();
        if (packageSet != null) {
          final PsiFile file=element.getContainingFile();
          if (file != null) {
            if (packageSet.contains(file,validationManager)) {
              state.setEnabled(false);
              return;
            }
          }
 else {
            if (packageSet instanceof PackageSetBase && ((PackageSetBase)packageSet).contains(PsiUtilCore.getVirtualFile(element),project,validationManager)) {
              state.setEnabled(false);
              return;
            }
          }
        }
      }
    }
    myDefaultState.setEnabled(false);
  }
 else {
    myDefaultState.setEnabled(false);
    setEnabled(false);
  }
}
