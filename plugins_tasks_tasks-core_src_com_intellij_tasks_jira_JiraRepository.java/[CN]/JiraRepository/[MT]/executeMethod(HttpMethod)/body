{
  LOG.debug("URI is " + method.getURI());
  int statusCode;
  String entityContent;
  try {
    statusCode=getHttpClient().executeMethod(method);
    LOG.debug("Status code is " + statusCode);
    entityContent=StreamUtil.readText(method.getResponseBodyAsStream(),"utf-8");
    LOG.debug(entityContent);
  }
  finally {
    method.releaseConnection();
  }
  if (statusCode == HttpStatus.SC_OK) {
    return entityContent;
  }
 else   if (method.getResponseHeader("Content-Type") != null) {
    Header header=method.getResponseHeader("Content-Type");
    if (header.getValue().startsWith("application/json")) {
      JsonObject object=JiraUtil.GSON.fromJson(entityContent,JsonObject.class);
      if (object.has("errorMessages")) {
        String reason=StringUtil.join(object.getAsJsonArray("errorMessages")," ");
        LOG.warn(reason);
        throw new Exception("Search failed. Reason: " + reason);
      }
    }
  }
  if (method.getResponseHeader("X-Authentication-Denied-Reason") != null) {
    Header header=method.getResponseHeader("X-Authentication-Denied-Reason");
    if (header.getValue().startsWith("CAPTCHA_CHALLENGE")) {
      throw new Exception("Login failed. Enter captcha in web-interface.");
    }
  }
  if (statusCode == HttpStatus.SC_UNAUTHORIZED) {
    throw new Exception(LOGIN_FAILED_CHECK_YOUR_PERMISSIONS);
  }
  throw new Exception("Request failed with error: " + HttpStatus.getStatusText(method.getStatusCode()));
}
