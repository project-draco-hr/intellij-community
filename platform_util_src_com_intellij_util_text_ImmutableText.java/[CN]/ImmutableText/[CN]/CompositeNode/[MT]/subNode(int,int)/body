{
  final int cesure=_head.nodeLength();
  if (end <= cesure) {
    return _head.subNode(start,end);
  }
  if (start >= cesure) {
    return _tail.subNode(start - cesure,end - cesure);
  }
  if ((start == 0) && (end == _count)) {
    return this;
  }
  return concatNodes(_head.subNode(start,cesure),_tail.subNode(0,end - cesure));
}
