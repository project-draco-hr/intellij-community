{
class RequestImpl implements Request {
    private URLConnection myConnection;
    private InputStream myInputStream;
    @NotNull @Override public URLConnection getConnection() throws IOException {
      if (myConnection == null) {
        myConnection=openConnection(builder);
      }
      return myConnection;
    }
    @NotNull @Override public InputStream getInputStream() throws IOException {
      if (myInputStream == null) {
        myInputStream=getConnection().getInputStream();
        if (builder.myGzip && "gzip".equalsIgnoreCase(getConnection().getContentEncoding())) {
          myInputStream=new GZIPInputStream(myInputStream);
        }
      }
      return myInputStream;
    }
    private void cleanup() throws IOException {
      if (myInputStream != null) {
        myInputStream.close();
      }
      if (myConnection instanceof HttpURLConnection) {
        ((HttpURLConnection)myConnection).disconnect();
      }
    }
  }
  RequestImpl request=new RequestImpl();
  try {
    return processor.process(request);
  }
  finally {
    request.cleanup();
  }
}
