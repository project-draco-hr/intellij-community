{
  if (!settings.getDistributionType().isWrapped())   return;
  if (settings.getDistributionType() == DistributionType.DEFAULT_WRAPPED && GradleUtil.findDefaultWrapperPropertiesFile(projectPath) != null) {
    return;
  }
  final long ttlInMs=settings.getRemoteProcessIdleTtlInMs();
  ProjectConnection connection=getConnection(projectPath,settings);
  try {
    settings.setRemoteProcessIdleTtlInMs(100);
    try {
      final File wrapperPropertyFileLocation=FileUtil.createTempFile("wrap","loc");
      wrapperPropertyFileLocation.deleteOnExit();
      final String[] lines={"gradle.taskGraph.afterTask { Task task ->","    if (task instanceof Wrapper) {","        def wrapperPropertyFileLocation = task.jarFile.getCanonicalPath() - '.jar' + '.properties'","        new File('" + StringUtil.escapeBackSlashes(wrapperPropertyFileLocation.getCanonicalPath()) + "').write wrapperPropertyFileLocation","}}"};
      final File tempFile=writeToFileGradleInitScript(StringUtil.join(lines,SystemProperties.getLineSeparator()));
      BuildLauncher launcher=getBuildLauncher(id,connection,settings,listener,ContainerUtil.<String>newArrayList(),ContainerUtil.newArrayList(GradleConstants.INIT_SCRIPT_CMD_OPTION,tempFile.getAbsolutePath()));
      launcher.forTasks("wrapper");
      launcher.run();
      String wrapperPropertyFile=FileUtil.loadFile(wrapperPropertyFileLocation);
      settings.setWrapperPropertyFile(wrapperPropertyFile);
    }
 catch (    IOException e) {
      LOG.warn("Can't update wrapper",e);
    }
  }
 catch (  Throwable e) {
    LOG.warn("Can't update wrapper",e);
  }
 finally {
    settings.setRemoteProcessIdleTtlInMs(ttlInMs);
    try {
      connection.close();
    }
 catch (    Throwable e) {
    }
  }
}
