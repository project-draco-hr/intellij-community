{
  InputStream stream=Init.class.getResourceAsStream("/org/jetbrains/plugins/gradle/tooling/internal/init/init.gradle");
  try {
    if (stream == null) {
      LOG.warn("Can't get init script template");
      return null;
    }
    final String toolingExtensionsJarPaths=getToolingExtensionsJarPaths(toolingExtensionClasses);
    String script=FileUtil.loadTextAndClose(stream).replaceFirst(Pattern.quote("${EXTENSIONS_JARS_PATH}"),toolingExtensionsJarPaths);
    if (isBuildSrcProject) {
      String buildSrcDefaultInitScript=getBuildSrcDefaultInitScript();
      if (buildSrcDefaultInitScript == null)       return null;
      script+=buildSrcDefaultInitScript;
    }
    return writeToFileGradleInitScript(script);
  }
 catch (  Exception e) {
    LOG.warn("Can't generate IJ gradle init script",e);
    return null;
  }
 finally {
    StreamUtil.closeStream(stream);
  }
}
