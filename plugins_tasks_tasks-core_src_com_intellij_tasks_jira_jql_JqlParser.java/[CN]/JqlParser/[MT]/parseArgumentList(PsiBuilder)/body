{
  PsiBuilder.Marker marker=builder.mark();
  if (!advanceIfMatches(builder,JqlTokenTypes.LPAR)) {
    marker.drop();
    return;
  }
  if (advanceIfMatches(builder,JqlTokenTypes.RPAR)) {
    marker.done(JqlElementTypes.ARGUMENT_LIST);
    return;
  }
  PsiBuilder.Marker argument=builder.mark();
  if (!advanceIfMatches(builder,JqlTokenTypes.VALID_ARGUMENTS)) {
    builder.error("Expecting argument");
    argument.drop();
  }
 else {
    argument.done(JqlElementTypes.LITERAL);
    while (advanceIfMatches(builder,JqlTokenTypes.COMMA)) {
      argument=builder.mark();
      if (!advanceIfMatches(builder,JqlTokenTypes.VALID_ARGUMENTS)) {
        marker.drop();
        builder.error("Expecting argument");
        break;
      }
      argument.done(JqlElementTypes.LITERAL);
    }
  }
  if (!advanceIfMatches(builder,JqlTokenTypes.RPAR)) {
    builder.error("Expecting ')'");
  }
  marker.done(JqlElementTypes.ARGUMENT_LIST);
}
