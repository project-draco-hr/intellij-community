{
  if (myInlineThisOnly) {
    return new UsageInfo[]{new UsageInfo(myCallToInline)};
  }
  Set<UsageInfo> usages=new HashSet<>();
  final GlobalSearchScope searchScope=GlobalSearchScope.projectScope(myProject);
  for (  PsiReference reference : ReferencesSearch.search(myClass,searchScope)) {
    usages.add(new UsageInfo(reference.getElement()));
  }
  final String qName=myClass.getQualifiedName();
  if (qName != null) {
    List<UsageInfo> nonCodeUsages=new ArrayList<>();
    if (mySearchInComments) {
      TextOccurrencesUtil.addUsagesInStringsAndComments(myClass,qName,nonCodeUsages,new NonCodeUsageInfoFactory(myClass,qName));
    }
    if (mySearchInNonJavaFiles) {
      TextOccurrencesUtil.addTextOccurences(myClass,qName,searchScope,nonCodeUsages,new NonCodeUsageInfoFactory(myClass,qName));
    }
    usages.addAll(nonCodeUsages);
  }
  return usages.toArray(new UsageInfo[usages.size()]);
}
