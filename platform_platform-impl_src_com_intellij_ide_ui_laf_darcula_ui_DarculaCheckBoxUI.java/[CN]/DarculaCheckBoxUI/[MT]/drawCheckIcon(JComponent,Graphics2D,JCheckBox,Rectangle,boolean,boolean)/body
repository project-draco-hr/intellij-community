{
  if (selected && b.getSelectedIcon() != null) {
    b.getSelectedIcon().paintIcon(b,g,iconRect.x + JBUI.scale(4),iconRect.y + JBUI.scale(2));
  }
 else   if (!selected && b.getIcon() != null) {
    b.getIcon().paintIcon(b,g,iconRect.x + JBUI.scale(4),iconRect.y + JBUI.scale(2));
  }
 else {
    int off=JBUI.scale(3);
    final int x=iconRect.x + off;
    final int y=iconRect.y + off;
    final int w=iconRect.width - 2 * off;
    final int h=iconRect.height - 2 * off;
    g.translate(x,y);
    final Paint paint=UIUtil.getGradientPaint(w / 2,0,b.getBackground().brighter(),w / 2,h,b.getBackground());
    g.setPaint(paint);
    final int fillOffset=JBUI.scale(1);
    g.fillRect(fillOffset,fillOffset,w - 2 * fillOffset,h - 2 * fillOffset);
    final GraphicsConfig config=new GraphicsConfig(g);
    g.setRenderingHint(RenderingHints.KEY_ANTIALIASING,RenderingHints.VALUE_ANTIALIAS_ON);
    g.setRenderingHint(RenderingHints.KEY_STROKE_CONTROL,RenderingHints.VALUE_STROKE_DEFAULT);
    final boolean armed=b.getModel().isArmed();
    final int R=JBUI.scale(4);
    if (c.hasFocus()) {
      g.setPaint(UIUtil.getGradientPaint(w / 2,1,getFocusedBackgroundColor1(armed,selected),w / 2,h,getFocusedBackgroundColor2(armed,selected)));
      g.fillRoundRect(0,0,w,h,R,R);
      DarculaUIUtil.paintFocusRing(g,1,1,w - 2,h - 2);
    }
 else {
      g.setPaint(UIUtil.getGradientPaint(w / 2,1,getBackgroundColor1(enabled,selected),w / 2,h,getBackgroundColor2(enabled,selected)));
      g.fillRoundRect(0,0,w,h,R,R);
      final Color borderColor1=getBorderColor1(enabled,selected);
      final Color borderColor2=getBorderColor2(enabled,selected);
      g.setPaint(UIUtil.getGradientPaint(w / 2,1,borderColor1,w / 2,h,borderColor2));
      g.drawRoundRect(0,(UIUtil.isUnderDarcula() ? 1 : 0),w,h - 1,R,R);
      g.setPaint(getInactiveFillColor());
      g.drawRoundRect(0,0,w,h - 1,R,R);
    }
    if (b.getModel().isSelected()) {
      paintCheckSign(g,enabled,w,h);
    }
    g.translate(-x,-y);
    config.restore();
  }
}
