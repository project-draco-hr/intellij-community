{
  Class.forName("org.junit.runners.BlockJUnit4ClassRunner");
  return new ClassRequest(clazz){
    public Runner getRunner(){
      try {
        return new AllDefaultPossibilitiesBuilder(true){
          protected IgnoredBuilder ignoredBuilder(){
            return new IgnoredBuilder(){
              public Runner runnerForClass(              Class testClass){
                return null;
              }
            }
;
          }
          protected JUnit4Builder junit4Builder(){
            return new JUnit4Builder(){
              public Runner runnerForClass(              Class testClass) throws Throwable {
                return new BlockJUnit4ClassRunner(testClass){
                  protected boolean isIgnored(                  FrameworkMethod child){
                    return false;
                  }
                }
;
              }
            }
;
          }
        }
.runnerForClass(clazz);
      }
 catch (      Throwable throwable) {
        return super.getRunner();
      }
    }
  }
;
}
