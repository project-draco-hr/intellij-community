{
  final EditorSettingsExternalizable editorSettings=EditorSettingsExternalizable.getInstance();
  if (!editorSettings.getStripTrailingSpaces().equals(EditorSettingsExternalizable.STRIP_TRAILING_SPACES_NONE)) {
    if (problem.myCode.equals("W291") || problem.myCode.equals("W293")) {
      return true;
    }
  }
  final CodeStyleSettings codeStyleSettings=CodeStyleSettingsManager.getSettings(project);
  final CommonCodeStyleSettings commonSettings=codeStyleSettings.getCommonSettings(PythonLanguage.getInstance());
  final PyCodeStyleSettings pySettings=codeStyleSettings.getCustomSettings(PyCodeStyleSettings.class);
  if (element instanceof PsiWhiteSpace) {
    if (problem.myCode.equals("E303")) {
      final Matcher matcher=E303_LINE_COUNT_PATTERN.matcher(problem.myDescription);
      if (matcher.matches()) {
        final int reportedBlanks=Integer.parseInt(matcher.group(1));
        final PsiElement nonWhitespaceAfter=PyPsiUtils.getNextNonWhitespaceSibling(element);
        final PsiElement nonWhitespaceBefore=PyPsiUtils.getPrevNonWhitespaceSibling(element);
        final boolean classNearby=nonWhitespaceBefore instanceof PyClass || nonWhitespaceAfter instanceof PyClass;
        final boolean functionNearby=nonWhitespaceBefore instanceof PyFunction || nonWhitespaceAfter instanceof PyFunction;
        if (functionNearby || classNearby) {
          if (PyUtil.isTopLevel(element)) {
            if (reportedBlanks <= pySettings.BLANK_LINES_AROUND_TOP_LEVEL_CLASSES_FUNCTIONS) {
              return true;
            }
          }
 else {
            if (classNearby && reportedBlanks <= commonSettings.BLANK_LINES_AROUND_CLASS || functionNearby && reportedBlanks <= commonSettings.BLANK_LINES_AROUND_METHOD) {
              return true;
            }
          }
        }
      }
    }
    if (problem.myCode.equals("W191") && codeStyleSettings.useTabCharacter(PythonFileType.INSTANCE)) {
      return true;
    }
    if (problem.myCode.equals("E251") && (element.getParent() instanceof PyParameter && pySettings.SPACE_AROUND_EQ_IN_NAMED_PARAMETER || element.getParent() instanceof PyKeywordArgument && pySettings.SPACE_AROUND_EQ_IN_KEYWORD_ARGUMENT)) {
      return true;
    }
  }
  return false;
}
