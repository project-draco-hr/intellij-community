{
  if (annotationResult == null || !file.isValid())   return;
  final String text=file.getText();
  for (  Problem problem : annotationResult.problems) {
    if (ignoreDueToSettings(file.getProject(),problem))     continue;
    int offset=StringUtil.lineColToOffset(text,problem.myLine - 1,problem.myColumn - 1);
    PsiElement problemElement=file.findElementAt(offset);
    if (!(problemElement instanceof PsiWhiteSpace) && !(problem.myCode.startsWith("E3"))) {
      final PsiElement elementAfter=file.findElementAt(offset + 1);
      if (elementAfter instanceof PsiWhiteSpace) {
        problemElement=elementAfter;
      }
    }
    if (problemElement != null) {
      TextRange problemRange=problemElement.getTextRange();
      if (StringUtil.offsetToLineNumber(text,problemRange.getStartOffset()) != StringUtil.offsetToLineNumber(text,problemRange.getEndOffset())) {
        problemRange=new TextRange(offset,StringUtil.lineColToOffset(text,problem.myLine,0) - 1);
      }
      final Annotation annotation;
      final String message="PEP 8: " + problem.myDescription;
      if (annotationResult.level == HighlightDisplayLevel.ERROR) {
        annotation=holder.createErrorAnnotation(problemRange,message);
      }
 else       if (annotationResult.level == HighlightDisplayLevel.WARNING) {
        annotation=holder.createWarningAnnotation(problemRange,message);
      }
 else {
        annotation=holder.createWeakWarningAnnotation(problemRange,message);
      }
      annotation.registerUniversalFix(new ReformatFix(),null,null);
      annotation.registerFix(new IgnoreErrorFix(problem.myCode));
      annotation.registerFix(new CustomEditInspectionToolsSettingsAction(HighlightDisplayKey.find(PyPep8Inspection.INSPECTION_SHORT_NAME),new Computable<String>(){
        @Override public String compute(){
          return "Edit inspection profile setting";
        }
      }
));
    }
  }
}
