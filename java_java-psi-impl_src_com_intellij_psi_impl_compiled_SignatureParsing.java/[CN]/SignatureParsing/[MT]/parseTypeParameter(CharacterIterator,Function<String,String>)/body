{
  StringBuilder name=new StringBuilder();
  while (signature.current() != ':' && signature.current() != CharacterIterator.DONE) {
    name.append(signature.current());
    signature.next();
  }
  if (signature.current() == CharacterIterator.DONE) {
    throw new ClsFormatException();
  }
  String parameterName=mapping.fun(name.toString());
  List<String> bounds=null;
  boolean jlo=false;
  while (signature.current() == ':') {
    signature.next();
    String bound=parseTopLevelClassRefSignature(signature,mapping);
    if (bound == null)     continue;
    if (bounds == null) {
      if (CommonClassNames.JAVA_LANG_OBJECT.equals(bound)) {
        jlo=true;
        continue;
      }
      bounds=ContainerUtil.newSmartList();
      if (jlo) {
        bounds.add(CommonClassNames.JAVA_LANG_OBJECT);
      }
    }
    bounds.add(bound);
  }
  return pair(parameterName,ArrayUtil.toStringArray(bounds));
}
