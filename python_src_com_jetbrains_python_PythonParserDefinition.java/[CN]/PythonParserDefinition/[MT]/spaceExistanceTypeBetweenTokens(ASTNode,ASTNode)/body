{
  if (left.getElementType() == PyTokenTypes.END_OF_LINE_COMMENT)   return SpaceRequirements.MUST_LINE_BREAK;
  if (right.getElementType() == PyTokenTypes.DEF_KEYWORD || right.getElementType() == PyTokenTypes.CLASS_KEYWORD) {
    return SpaceRequirements.MUST_LINE_BREAK;
  }
  if (left.getElementType() == TokenType.WHITE_SPACE || right.getElementType() == TokenType.WHITE_SPACE) {
    return SpaceRequirements.MAY;
  }
  final PyStatement leftStatement=PsiTreeUtil.getParentOfType(left.getPsi(),PyStatement.class);
  if (leftStatement != null && !PsiTreeUtil.isAncestor(leftStatement,right.getPsi(),false)) {
    return SpaceRequirements.MUST_LINE_BREAK;
  }
  final Lexer lexer=createLexer(left.getPsi().getProject());
  return LanguageUtil.canStickTokensTogetherByLexer(left,right,lexer);
}
