{
  boolean groupPrefixAppended=false;
  for (  String field : fields) {
    for (    FValue value : values) {
      if (value.state == FValue.STATE.SELECTED && value.name.equals(field)) {
        String name=null;
        String valueName=null;
        Pair<String,String> myPair=Pair.create(groupName,field);
        if (map != null) {
          name=map.get(myPair);
          if (name != null) {
            valueName=value.value.toString();
          }
        }
        if (name == null && mapCustom != null) {
          CustomValueToNameContainer container=mapCustom.get(myPair);
          if (container != null) {
            name=container.myName;
            valueName=container.getNameForValue((Integer)value.value);
          }
        }
        String renamed=renamedStandardOptions.get(field);
        if (renamed != null) {
          name=renamed;
        }
        if (name != null && valueName != null) {
          if (!typePrefixPrinted) {
            builder.append(typePrefix);
            typePrefixPrinted=true;
          }
          if (groupName != null && groupPrefix != null && !groupPrefixAppended) {
            builder.append(groupPrefix);
            groupPrefixAppended=true;
          }
          String postNameSign=name.endsWith(":") ? " " : ": ";
          builder.append("<br>").append(groupName == null ? "<b>" + name + "</b>" : name).append(postNameSign).append(valueName);
        }
 else {
          System.err.println("Failed to deduce name for field " + field + " in group "+ groupName);
        }
      }
    }
  }
  return typePrefixPrinted;
}
