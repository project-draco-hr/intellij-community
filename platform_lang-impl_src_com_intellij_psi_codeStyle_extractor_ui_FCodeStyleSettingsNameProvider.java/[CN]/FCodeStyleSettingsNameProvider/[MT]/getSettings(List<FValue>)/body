{
  StringBuilder builder=new StringBuilder();
  for (  SettingsType settingsType : LanguageCodeStyleSettingsProvider.SettingsType.values()) {
    builder.append("<br><b><u>").append(getSettingsTypeName(settingsType)).append("</u></b>");
    Map<SettingsGroup,Set<CodeStyleSettingRepresentation>> groups=mySettings.get(settingsType);
    if (groups != null) {
      for (      Map.Entry<SettingsGroup,Set<CodeStyleSettingRepresentation>> entry : groups.entrySet()) {
        boolean firstSettingGroupTop=entry.getKey().isNull();
        boolean groupReported=false;
        for (        final CodeStyleSettingRepresentation setting : entry.getValue()) {
          FValue myValue=ContainerUtil.find(values,new Condition<FValue>(){
            @Override public boolean value(            FValue value){
              return value.state == FValue.STATE.SELECTED && value.name.equals(setting.getFieldName());
            }
          }
);
          if (myValue == null) {
            continue;
          }
          if (!groupReported) {
            if (firstSettingGroupTop) {
              builder.append("<b>");
            }
 else {
              builder.append("<br><b>").append(entry.getKey().name).append("</b>");
            }
          }
          builder.append("<br>");
          String postNameSign=setting.getUiName().endsWith(":") ? " " : ": ";
          builder.append(setting.getUiName()).append(postNameSign).append(setting.getValueUiName(myValue.value));
          if (!groupReported) {
            if (firstSettingGroupTop) {
              builder.append("</b>");
            }
          }
          groupReported=true;
        }
      }
    }
  }
  return builder.toString();
}
