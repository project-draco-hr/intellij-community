{
  ensureTempDirCreated();
  testDir=new File(ourTempDir,name.getMethodName());
  testDir.mkdirs();
  FileUtil.writeToFile(new File(testDir,GradleConstants.DEFAULT_SCRIPT_NAME),FileUtil.loadTextAndClose(getClass().getResourceAsStream(String.format("/%s/%s",name.getMethodName(),GradleConstants.DEFAULT_SCRIPT_NAME))));
  FileUtil.writeToFile(new File(testDir,GradleConstants.SETTINGS_FILE_NAME),FileUtil.loadTextAndClose(getClass().getResourceAsStream(String.format("/%s/%s",name.getMethodName(),GradleConstants.SETTINGS_FILE_NAME))));
  GradleConnector connector=GradleConnector.newConnector();
  DefaultGradleConnector gradleConnector=(DefaultGradleConnector)connector;
  gradleConnector.forProjectDirectory(testDir);
  ProjectConnection connection=gradleConnector.connect();
  final ProjectImportAction projectImportAction=new ProjectImportAction(true);
  projectImportAction.addExtraProjectModelClasses(getModels());
  BuildActionExecuter<ProjectImportAction.AllModels> buildActionExecutor=connection.action(projectImportAction);
  File initScript=GradleExecutionHelper.generateInitScript(false);
  assertNotNull(initScript);
  buildActionExecutor.withArguments(GradleConstants.INIT_SCRIPT_CMD_OPTION,initScript.getAbsolutePath());
  allModels=buildActionExecutor.run();
  assertNotNull(allModels);
}
