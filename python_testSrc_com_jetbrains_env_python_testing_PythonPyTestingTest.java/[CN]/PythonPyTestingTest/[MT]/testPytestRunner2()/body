{
  runPythonTest(new PyProcessWithConsoleTestTask<PyTestTestProcessRunner>(SdkCreationType.EMPTY_SDK){
    @NotNull @Override protected PyTestTestProcessRunner createProcessRunner() throws Exception {
      return new PyTestTestProcessRunner(getTestDataPath() + "/testRunner/env/pytest","test2.py",1);
    }
    @Override protected void checkTestResults(    @NotNull final PyTestTestProcessRunner runner,    @NotNull final String stdout,    @NotNull final String stderr,    @NotNull final String all){
      if (runner.getCurrentRerunStep() > 0) {
        assertEquals(7,runner.getAllTestsCount());
        assertEquals(3,runner.getPassedTestsCount());
        assertEquals(4,runner.getFailedTestsCount());
        return;
      }
      assertEquals(9,runner.getAllTestsCount());
      assertEquals(5,runner.getPassedTestsCount());
      assertEquals(4,runner.getFailedTestsCount());
      Assert.assertThat("No test stdout",MockPrinter.fillPrinter(runner.findTestByName("testOne")).getStdOut(),Matchers.startsWith("I am test1"));
      final AbstractTestProxy testFail=runner.findTestByName("testFail");
      Assert.assertThat("No stdout for fail",MockPrinter.fillPrinter(testFail).getStdOut(),Matchers.startsWith("I will fail"));
      Assert.assertThat("Wrong duration",testFail.getDuration(),Matchers.greaterThanOrEqualTo(1000L));
    }
  }
);
}
