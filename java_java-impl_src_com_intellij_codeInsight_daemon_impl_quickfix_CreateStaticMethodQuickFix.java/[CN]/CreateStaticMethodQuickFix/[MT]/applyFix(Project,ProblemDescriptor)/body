{
  boolean java8Interface=false;
  if (targetClass.isInterface()) {
    if (PsiUtil.isLanguageLevel8OrHigher(targetClass)) {
      java8Interface=true;
    }
 else {
      return;
    }
  }
  PsiMethod method=CreateMethodFromUsageFix.createMethod(targetClass,null,null,methodName);
  if (method == null) {
    return;
  }
  if (!java8Interface) {
    PsiUtil.setModifierProperty(method,PsiModifier.PUBLIC,true);
  }
  PsiUtil.setModifierProperty(method,PsiModifier.STATIC,true);
  List<Pair<PsiExpression,PsiType>> args=ContainerUtil.map(types,new Function<String,Pair<PsiExpression,PsiType>>(){
    @Override public Pair<PsiExpression,PsiType> fun(    String s){
      return new Pair<PsiExpression,PsiType>(null,PsiType.getTypeByName(s,project,GlobalSearchScope.allScope(project)));
    }
  }
);
  CreateMethodFromUsageFix.doCreate(targetClass,method,false,args,PsiSubstitutor.UNKNOWN,ExpectedTypeInfo.EMPTY_ARRAY,null);
}
