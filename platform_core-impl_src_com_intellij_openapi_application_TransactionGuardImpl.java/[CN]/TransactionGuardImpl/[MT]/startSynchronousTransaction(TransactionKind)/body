{
  ModalityState modality=ModalityState.current();
  if (isInsideTransaction()) {
    if (modality.equals(myTransactionModality)) {
      return AccessToken.EMPTY_ACCESS_TOKEN;
    }
    if (myMergeableKinds.contains(kind)) {
      final ModalityState prev=myTransactionModality;
      myTransactionModality=modality;
      return new AccessToken(){
        @Override public void finish(){
          myTransactionModality=prev;
        }
      }
;
    }
    LOG.error("Nested transactions are not allowed, see FAQ in TransactionGuard class javadoc. Transaction start trace is in attachment. Kind is " + kind,new Attachment("trace.txt",myTransactionStartTrace));
    return AccessToken.EMPTY_ACCESS_TOKEN;
  }
  myTransactionModality=modality;
  myTransactionStartTrace=DebugUtil.currentStackTrace();
  return new AccessToken(){
    @Override public void finish(){
      myTransactionStartTrace=null;
      myTransactionModality=null;
      if (!myQueue.isEmpty()) {
        pollQueueLater();
      }
    }
  }
;
}
