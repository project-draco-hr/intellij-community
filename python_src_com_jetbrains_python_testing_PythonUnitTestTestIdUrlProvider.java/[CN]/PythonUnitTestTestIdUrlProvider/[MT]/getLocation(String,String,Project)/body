{
  if (!PROTOCOL_ID.equals(protocolId)) {
    return Collections.emptyList();
  }
  final List<String> list=StringUtil.split(path,".");
  if (list.isEmpty()) {
    return Collections.emptyList();
  }
  final int listSize=list.size();
  if (listSize < 3) {
    return Collections.emptyList();
  }
  final String className=list.get(listSize - 2);
  final String methodName=list.get(listSize - 1);
  final String fileName=list.get(listSize - 3);
  final List<Location> locations=new ArrayList<Location>();
  for (  PyClass cls : getClassesByName(project,className)) {
    ProgressManager.getInstance().checkCanceled();
    final PyFunction method=cls.findMethodByName(methodName);
    if (method == null) {
      continue;
    }
    final String clsFileName=FileUtil.getNameWithoutExtension(cls.getContainingFile().getName());
    if (!clsFileName.equalsIgnoreCase(fileName)) {
      continue;
    }
    locations.add(new PsiLocation<PyFunction>(project,method));
  }
  return locations;
}
