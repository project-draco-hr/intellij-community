{
  boolean canThrowError=false;
  try {
    Object result=remoteMethod.invoke(remoteObj,args);
    canThrowError=true;
    return handleRemoteResult(result,localMethod.getReturnType(),loader,substituteClassLoader);
  }
 catch (  InvocationTargetException e) {
    Throwable cause=e.getCause();
    if (cause instanceof ServerError)     cause=ObjectUtils.chooseNotNull(cause.getCause(),cause);
    if (cause instanceof RuntimeException)     throw (RuntimeException)cause;
 else     if (canThrowError && cause instanceof Error || cause instanceof LinkageError)     throw (Error)cause;
 else     if (canThrow(cause,localMethod))     throw (Exception)cause;
    throw new RuntimeException(cause);
  }
}
