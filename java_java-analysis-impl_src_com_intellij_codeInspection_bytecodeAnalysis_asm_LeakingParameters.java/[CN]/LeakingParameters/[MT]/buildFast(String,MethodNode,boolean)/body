{
  IParametersUsage parametersUsage=new IParametersUsage(methodNode);
  Frame<?>[] frames=jsr ? new Analyzer<>(parametersUsage).analyze(className,methodNode) : new LiteAnalyzer<>(parametersUsage).analyze(className,methodNode);
  int leakingMask=parametersUsage.leaking;
  int nullableLeakingMask=parametersUsage.nullableLeaking;
  boolean[] notNullParameters=new boolean[parametersUsage.arity];
  boolean[] nullableParameters=new boolean[parametersUsage.arity];
  for (int i=0; i < notNullParameters.length; i++) {
    notNullParameters[i]=(leakingMask & (1 << i)) != 0;
    nullableParameters[i]=((leakingMask | nullableLeakingMask) & (1 << i)) != 0;
  }
  return new LeakingParameters((Frame<Value>[])frames,notNullParameters,nullableParameters);
}
