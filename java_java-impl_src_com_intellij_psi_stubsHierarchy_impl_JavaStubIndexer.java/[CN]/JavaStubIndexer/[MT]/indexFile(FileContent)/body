{
  Stub stubTree=StubTreeBuilder.buildStubTree(content);
  if (!(stubTree instanceof PsiJavaFileStub))   return null;
  PsiJavaFileStub javaFileStub=(PsiJavaFileStub)stubTree;
  new StubTree(javaFileStub,false);
  ArrayList<ClassDecl> classList=new ArrayList<ClassDecl>();
  Set<String> usedNames=new HashSet<String>();
  for (  StubElement<?> el : javaFileStub.getChildrenStubs()) {
    if (el instanceof PsiClassStubImpl) {
      ClassDecl classDecl=processClassDecl((PsiClassStubImpl<?>)el,usedNames);
      if (classDecl != null) {
        classList.add(classDecl);
      }
    }
  }
  ArrayList<Import> importList=new ArrayList<Import>();
  for (  StubElement<?> el : javaFileStub.getChildrenStubs()) {
    if (el instanceof PsiImportListStub) {
      processImport((PsiImportListStub)el,importList,usedNames);
    }
  }
  ClassDecl[] classes=classList.isEmpty() ? ClassDecl.EMPTY_ARRAY : classList.toArray(new ClassDecl[classList.size()]);
  Import[] imports=importList.isEmpty() ? Import.EMPTY_ARRAY : importList.toArray(new Import[importList.size()]);
  byte type=javaFileStub.isCompiled() ? IndexTree.BYTECODE : IndexTree.JAVA;
  return Collections.singletonList(Pair.create(javaFileStub.getPackageName(),new Unit(type,imports,classes)));
}
