{
  if (!myTaskFile.isValid()) {
    return;
  }
  if (e instanceof DocumentEventImpl) {
    DocumentEventImpl event=(DocumentEventImpl)e;
    final Document document=event.getDocument();
    if (event.getNewFragment().equals("")) {
      int start=event.getOffset();
      int end=start + event.getOldLength();
      for (      TaskWindow tw : myTaskFile.getTaskWindows()) {
        int twStart=tw.getRealStartOffset(document);
        int twEnd=twStart + tw.getLength();
        if (isAffected(twStart,twEnd,start,end)) {
          PsiFile psiFile=PsiDocumentManager.getInstance(myProject).getPsiFile(document);
          if (psiFile == null) {
            continue;
          }
          VirtualFile virtualFile=psiFile.getVirtualFile();
          if (virtualFile == null) {
            continue;
          }
          myAffectTaskWindows=true;
          myTaskFile.setValidAndUpdate(false,virtualFile,myProject);
          Editor editor=StudyEditor.getSelectedEditor(myProject);
          if (editor == null) {
            return;
          }
          editor.getMarkupModel().removeAllHighlighters();
          StudyEditor.addFix(myTaskFile,new InvalidTaskFileFix(event.getOldFragment(),event.getOffset(),myProject));
          return;
        }
      }
    }
  }
  int offset=e.getOffset();
  int oldEnd=offset + e.getOldLength();
  Document document=e.getDocument();
  myOldLine=document.getLineNumber(oldEnd);
  myOldLineStartOffset=document.getLineStartOffset(myOldLine);
  int line=document.getLineNumber(offset);
  int offsetInLine=offset - document.getLineStartOffset(line);
  LogicalPosition pos=new LogicalPosition(line,offsetInLine);
  myTaskWindow=myTaskFile.getTaskWindow(document,pos);
}
