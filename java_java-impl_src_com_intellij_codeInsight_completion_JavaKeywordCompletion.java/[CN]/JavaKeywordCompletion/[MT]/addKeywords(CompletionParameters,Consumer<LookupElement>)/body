{
  final PsiElement position=parameters.getPosition();
  if (PsiTreeUtil.getNonStrictParentOfType(position,PsiLiteralExpression.class,PsiComment.class) != null) {
    return;
  }
  PsiElement prevLeaf=PsiTreeUtil.prevVisibleLeaf(position);
  addFinal(result,position,prevLeaf);
  boolean statementPosition=isStatementPosition(position);
  if (statementPosition) {
    addCaseDefault(result,position);
    if (START_SWITCH.accepts(position)) {
      return;
    }
    addBreakContinue(result,position);
    addStatementKeywords(result,position,prevLeaf);
  }
  addThisSuper(result,position);
  addExpressionKeywords(parameters,result,position,prevLeaf,statementPosition);
  addFileHeaderKeywords(result,position,prevLeaf);
  addInstanceof(result,position);
  addClassKeywords(result,position,prevLeaf);
  addMethodHeaderKeywords(result,position,prevLeaf);
  addPrimitiveTypes(result,position);
  addClassLiteral(result,position);
  addUnfinishedMethodTypeParameters(position,result);
  addExtendsSuperImplements(result,position,prevLeaf);
}
