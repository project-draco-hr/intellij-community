{
  PsiLoopStatement loop=PsiTreeUtil.getParentOfType(position,PsiLoopStatement.class,true,PsiLambdaExpression.class,PsiMember.class);
  LookupElement br=createKeyword(position,PsiKeyword.BREAK);
  LookupElement cont=createKeyword(position,PsiKeyword.CONTINUE);
  TailType tailType;
  if (psiElement().insideSequence(true,psiElement(PsiLabeledStatement.class),or(psiElement(PsiFile.class),psiElement(PsiMethod.class),psiElement(PsiClassInitializer.class))).accepts(position)) {
    tailType=TailType.HUMBLE_SPACE_BEFORE_WORD;
  }
 else {
    tailType=TailType.SEMICOLON;
  }
  br=TailTypeDecorator.withTail(br,tailType);
  cont=TailTypeDecorator.withTail(cont,tailType);
  if (loop != null && PsiTreeUtil.isAncestor(loop.getBody(),position,false)) {
    result.consume(br);
    result.consume(cont);
  }
  if (psiElement().inside(PsiSwitchStatement.class).accepts(position)) {
    result.consume(br);
  }
  for (  PsiLabeledStatement labeled : psiApi().parents(position).takeWhile(notInstanceOf(PsiMember.class)).filter(PsiLabeledStatement.class)) {
    result.consume(TailTypeDecorator.withTail(LookupElementBuilder.create("break " + labeled.getName()).bold(),TailType.SEMICOLON));
  }
}
