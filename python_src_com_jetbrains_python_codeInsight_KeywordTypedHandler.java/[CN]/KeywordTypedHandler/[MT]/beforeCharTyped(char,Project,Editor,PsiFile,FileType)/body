{
  if (!(fileType instanceof PythonFileType))   return Result.CONTINUE;
  if (isInteresting(character)) {
    final Document document=editor.getDocument();
    final PsiDocumentManager documentManager=PsiDocumentManager.getInstance(project);
    final int offset=editor.getCaretModel().getOffset();
    PsiElement token=file.findElementAt(offset - 1);
    if (token == null || offset >= document.getTextLength())     return Result.CONTINUE;
    PsiElement here_elt=file.findElementAt(offset);
    if (here_elt == null)     return Result.CONTINUE;
    if (here_elt instanceof PyStringLiteralExpression || here_elt.getParent() instanceof PyStringLiteralExpression)     return Result.CONTINUE;
    if (character == ':') {
      String here_text=here_elt.getText();
      if (":".equals(here_text)) {
        documentManager.commitDocument(document);
        editor.getCaretModel().moveToOffset(offset + 1);
        return Result.STOP;
      }
    }
 else     if (character == '}' || character == ']') {
      String here_text=here_elt.getText();
      if (here_text.length() == 1 && here_text.charAt(0) == character) {
        documentManager.commitDocument(document);
        editor.getCaretModel().moveToOffset(offset + 1);
        return Result.STOP;
      }
    }
 else     if (character == '{' || character == '[') {
      char closing=getReciprocalBracket(character);
      documentManager.commitDocument(document);
      typeInStringAndMoveCaret(editor,offset + 1,new StringBuffer().append(character).append(closing).toString());
      return Result.STOP;
    }
  }
  return Result.CONTINUE;
}
