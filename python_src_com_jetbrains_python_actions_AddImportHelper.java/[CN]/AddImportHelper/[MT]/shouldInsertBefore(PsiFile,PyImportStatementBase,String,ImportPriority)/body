{
  PyQualifiedName relativeToName;
  PsiElement source;
  if (relativeTo instanceof PyFromImportStatement) {
    final PyFromImportStatement fromImportStatement=(PyFromImportStatement)relativeTo;
    relativeToName=fromImportStatement.getImportSourceQName();
    source=ResolveImportUtil.resolveFromImportStatementSource(fromImportStatement);
  }
 else {
    final PyImportElement[] importElements=relativeTo.getImportElements();
    if (importElements.length == 0) {
      return false;
    }
    relativeToName=importElements[0].getImportedQName();
    source=ResolveImportUtil.resolveImportElement(importElements[0]);
  }
  if (relativeToName == null) {
    return false;
  }
  ImportPriority relativeToPriority=source == null ? ImportPriority.BUILTIN : getImportPriority(file,source.getContainingFile());
  final int rc=priority.compareTo(relativeToPriority);
  if (rc < 0) {
    return true;
  }
  if (rc == 0) {
    return nameToImport.compareTo(relativeToName.toString()) < 0;
  }
  return false;
}
