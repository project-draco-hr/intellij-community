{
  final boolean useQualified=!PyCodeInsightSettings.getInstance().PREFER_FROM_IMPORT;
  final PsiFileSystemItem toImport=target instanceof PsiFileSystemItem ? (PsiFileSystemItem)target : target.getContainingFile();
  final ImportPriority priority=getImportPriority(file,toImport);
  final String path=ResolveImportUtil.findShortestImportableName(element,toImport.getVirtualFile());
  if (target instanceof PsiFileSystemItem) {
    addImportStatement(file,path,null,priority);
  }
 else   if (useQualified) {
    addImportStatement(file,path,null,priority);
    final PyElementGenerator elementGenerator=PyElementGenerator.getInstance(file.getProject());
    element.replace(elementGenerator.createExpressionFromText(path + "." + target.getName()));
  }
 else {
    addImportFrom(file,path,target.getName(),priority);
  }
}
