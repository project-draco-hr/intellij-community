{
  final boolean useQualified=!PyCodeInsightSettings.getInstance().PREFER_FROM_IMPORT;
  final String path=ResolveImportUtil.findShortestImportableName(element,target.getContainingFile().getVirtualFile());
  if (useQualified) {
    addImportStatement(file,path,null);
    final PyElementGenerator elementGenerator=PyElementGenerator.getInstance(file.getProject());
    element.replace(elementGenerator.createExpressionFromText(path + "." + target.getName()));
  }
 else {
    addImportFrom(file,path,target.getName());
  }
}
