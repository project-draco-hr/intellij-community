{
  HgRepository repository=getRepositoryManager(project).getRepositoryForFile(file);
  if (repository == null) {
    throw new VcsException("Couldn't find repository for " + file.getName());
  }
  final FilePath filePath=VcsUtil.getFilePath(file);
  final VirtualFile repositoryRoot=repository.getRoot();
  final HgFile hgFile=new HgFile(repositoryRoot,filePath);
  final HgRevisionNumber compareWithRevisionNumber=HgRevisionNumber.getInstance(branchToCompare,getBranchMainHash(repository,branchToCompare).toString());
  List<Change> changes=HgUtil.getDiff(project,repositoryRoot,filePath,compareWithRevisionNumber,null);
  return changes.isEmpty() && !filePath.isDirectory() ? createChangesWithCurrentContentForFile(filePath,HgContentRevision.create(project,hgFile,compareWithRevisionNumber)) : changes;
}
