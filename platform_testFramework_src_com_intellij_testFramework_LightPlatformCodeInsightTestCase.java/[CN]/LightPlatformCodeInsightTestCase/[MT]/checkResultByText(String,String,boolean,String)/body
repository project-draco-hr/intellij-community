{
  bringRealEditorBack();
  PsiDocumentManager.getInstance(getProject()).commitAllDocuments();
  ApplicationManager.getApplication().runWriteAction(new Runnable(){
    @Override public void run(){
      final Document document=EditorFactory.getInstance().createDocument(fileText);
      if (ignoreTrailingSpaces) {
        ((DocumentImpl)document).stripTrailingSpaces(getProject());
      }
      EditorTestUtil.CaretsState carets=EditorTestUtil.extractCaretAndSelectionMarkers(document);
      PostprocessReformattingAspect.getInstance(getProject()).doPostponedFormatting();
      String newFileText=document.getText();
      PsiDocumentManager.getInstance(getProject()).commitAllDocuments();
      String fileText=myFile.getText();
      String failMessage=getMessage("Text mismatch",message);
      if (filePath != null && !newFileText.equals(fileText)) {
        throw new FileComparisonFailure(failMessage,newFileText,fileText,filePath);
      }
      assertEquals(failMessage,newFileText,fileText);
      checkCaretAndSelectionPositions(carets,newFileText,message);
    }
  }
);
}
