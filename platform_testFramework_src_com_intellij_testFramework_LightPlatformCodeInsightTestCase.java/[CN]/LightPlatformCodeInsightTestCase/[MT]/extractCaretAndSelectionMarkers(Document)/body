{
  List<Pair<Integer,TextRange>> carets=new ArrayList<Pair<Integer,TextRange>>();
  int pos=0;
  while (pos < document.getTextLength()) {
    String fileText=document.getText();
    int caretIndex=fileText.indexOf(CARET_MARKER,pos);
    int selStartIndex=fileText.indexOf(SELECTION_START_MARKER,pos);
    int selEndIndex=fileText.indexOf(SELECTION_END_MARKER,pos);
    if (caretIndex < 0 && selStartIndex < 0 && selEndIndex < 0) {
      break;
    }
    if ((selStartIndex ^ selEndIndex) < 0) {
      throw new IllegalArgumentException("Both selection opening and closing tag must be present");
    }
    if (0 <= selEndIndex && selEndIndex < selStartIndex) {
      throw new IllegalArgumentException("Wrong order of selection opening and closing tags");
    }
    if (caretIndex < selStartIndex) {
      selStartIndex=-1;
      selEndIndex=-1;
    }
    if (caretIndex > selEndIndex && selEndIndex >= 0) {
      caretIndex=-1;
    }
    final RangeMarker caretMarker=caretIndex >= 0 ? document.createRangeMarker(caretIndex,caretIndex) : null;
    final RangeMarker selStartMarker=selStartIndex >= 0 ? document.createRangeMarker(selStartIndex,selStartIndex) : null;
    final RangeMarker selEndMarker=selEndIndex >= 0 ? document.createRangeMarker(selEndIndex,selEndIndex) : null;
    if (caretMarker != null) {
      document.deleteString(caretMarker.getStartOffset(),caretMarker.getStartOffset() + CARET_MARKER.length());
    }
    if (selStartMarker != null) {
      document.deleteString(selStartMarker.getStartOffset(),selStartMarker.getStartOffset() + SELECTION_START_MARKER.length());
    }
    if (selEndMarker != null) {
      document.deleteString(selEndMarker.getStartOffset(),selEndMarker.getStartOffset() + SELECTION_END_MARKER.length());
    }
    carets.add(new Pair<Integer,TextRange>(caretMarker == null ? null : caretMarker.getStartOffset(),selStartMarker == null || selEndMarker == null ? null : new TextRange(selStartMarker.getStartOffset(),selEndMarker.getEndOffset())));
    pos=Math.max(caretMarker == null ? -1 : caretMarker.getStartOffset(),selEndMarker == null ? -1 : selEndMarker.getEndOffset()) + 1;
  }
  if (carets.isEmpty()) {
    carets.add(new Pair<Integer,TextRange>(null,null));
  }
  return carets;
}
