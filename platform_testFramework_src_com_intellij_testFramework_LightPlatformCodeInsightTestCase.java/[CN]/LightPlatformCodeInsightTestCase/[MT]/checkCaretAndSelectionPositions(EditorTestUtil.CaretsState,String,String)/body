{
  CaretModel caretModel=myEditor.getCaretModel();
  List<Caret> allCarets=new ArrayList<Caret>(caretModel.getAllCarets());
  assertEquals("Unexpected number of carets",caretState.carets.size(),allCarets.size());
  for (int i=0; i < caretState.carets.size(); i++) {
    String caretDescription=getCaretDescription(i,caretState.carets.size());
    Caret currentCaret=allCarets.get(i);
    LogicalPosition actualCaretPosition=currentCaret.getLogicalPosition();
    EditorTestUtil.Caret expected=caretState.carets.get(i);
    if (expected.offset != null) {
      int caretLine=StringUtil.offsetToLineNumber(newFileText,expected.offset);
      int caretCol=EditorUtil.calcColumnNumber(null,newFileText,StringUtil.lineColToOffset(newFileText,caretLine,0),expected.offset,CodeStyleSettingsManager.getSettings(getProject()).getIndentOptions(StdFileTypes.JAVA).TAB_SIZE);
      assertEquals(getMessage("caretLine" + caretDescription,message),caretLine + 1,actualCaretPosition.line + 1);
      assertEquals(getMessage("caretColumn" + caretDescription,message),caretCol + 1,actualCaretPosition.column + 1);
    }
    if (expected.selection != null) {
      int selStartLine=StringUtil.offsetToLineNumber(newFileText,expected.selection.getStartOffset());
      int selStartCol=expected.selection.getStartOffset() - StringUtil.lineColToOffset(newFileText,selStartLine,0);
      int selEndLine=StringUtil.offsetToLineNumber(newFileText,expected.selection.getEndOffset());
      int selEndCol=expected.selection.getEndOffset() - StringUtil.lineColToOffset(newFileText,selEndLine,0);
      assertEquals(getMessage("selectionStartLine" + caretDescription,message),selStartLine + 1,StringUtil.offsetToLineNumber(newFileText,currentCaret.getSelectionStart()) + 1);
      assertEquals(getMessage("selectionStartCol" + caretDescription,message),selStartCol + 1,currentCaret.getSelectionStart() - StringUtil.lineColToOffset(newFileText,selStartLine,0) + 1);
      assertEquals(getMessage("selectionEndLine" + caretDescription,message),selEndLine + 1,StringUtil.offsetToLineNumber(newFileText,currentCaret.getSelectionEnd()) + 1);
      assertEquals(getMessage("selectionEndCol" + caretDescription,message),selEndCol + 1,currentCaret.getSelectionEnd() - StringUtil.lineColToOffset(newFileText,selEndLine,0) + 1);
    }
 else {
      assertFalse(getMessage("must not have selection" + caretDescription,message),currentCaret.hasSelection());
    }
  }
}
