{
  boolean hasErrors=false;
  if (!checkUnderReadAction(file,context,new Computable<Map<ProblemDescriptor,HighlightDisplayLevel>>(){
    @Override public Map<ProblemDescriptor,HighlightDisplayLevel> compute(){
      return myValidator.checkAdditionally(file);
    }
  }
)) {
    hasErrors=true;
  }
  if (!checkUnderReadAction(file,context,new Computable<Map<ProblemDescriptor,HighlightDisplayLevel>>(){
    @Override public Map<ProblemDescriptor,HighlightDisplayLevel> compute(){
      if (file instanceof XmlFile) {
        return runXmlFileSchemaValidation((XmlFile)file);
      }
      return Collections.emptyMap();
    }
  }
)) {
    hasErrors=true;
  }
  final InspectionProfile inspectionProfile=myProfileManager.getInspectionProfile();
  for (  final LocalInspectionTool inspectionTool : inspections) {
    if (!checkUnderReadAction(file,context,new Computable<Map<ProblemDescriptor,HighlightDisplayLevel>>(){
      @Override public Map<ProblemDescriptor,HighlightDisplayLevel> compute(){
        if (getHighlightDisplayLevel(inspectionTool,inspectionProfile,file) != HighlightDisplayLevel.DO_NOT_SHOW) {
          return runInspectionTool(file,inspectionTool,getHighlightDisplayLevel(inspectionTool,inspectionProfile,file));
        }
        return Collections.emptyMap();
      }
    }
)) {
      hasErrors=true;
    }
  }
  return !hasErrors;
}
