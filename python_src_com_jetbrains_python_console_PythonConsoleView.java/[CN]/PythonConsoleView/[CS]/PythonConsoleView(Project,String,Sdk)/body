{
  super(new BorderLayout());
  LanguageConsoleImpl languageConsole=new LanguageConsoleImpl(project,title,PythonLanguage.getInstance(),false);
  if (languageConsole.getFile().getVirtualFile() != null) {
    languageConsole.getFile().getVirtualFile().putUserData(LanguageLevel.KEY,PythonSdkType.getLanguageLevelForSdk(sdk));
  }
  languageConsole.getConsoleEditor().putUserData(PythonConsoleAutopopupBlockingHandler.REPL_KEY,new Object());
  languageConsole.setShowSeparatorLine(PyConsoleOptions.getInstance(project).isShowSeparatorLine());
  languageConsole.initComponents();
  myLanguageConsoleView=new LanguageConsoleViewImpl(languageConsole);
  Disposer.register(this,myLanguageConsoleView);
  add(myLanguageConsoleView.getComponent(),BorderLayout.CENTER);
  addSaveContentFocusListener(getLanguageConsole().getConsoleEditor().getContentComponent());
  getPythonLanguageConsole().setPrompt(PyConsoleUtil.ORDINARY_PROMPT);
  myLanguageConsoleView.setUpdateFoldingsEnabled(false);
  myProject=project;
  myPyHighlighter=new PyHighlighter(sdk != null && sdk.getVersionString() != null ? LanguageLevel.fromPythonVersion(sdk.getVersionString()) : LanguageLevel.getDefault());
  myScheme=getPythonLanguageConsole().getConsoleEditor().getColorsScheme();
}
