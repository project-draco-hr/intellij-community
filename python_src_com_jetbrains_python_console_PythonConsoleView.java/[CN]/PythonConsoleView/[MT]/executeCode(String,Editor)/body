{
  ProgressManager.getInstance().run(new Task.Backgroundable(null,"Executing code in console...",false){
    public void run(    @NotNull final ProgressIndicator indicator){
      long time=System.currentTimeMillis();
      while (!myExecuteActionHandler.isEnabled() || !myExecuteActionHandler.canExecuteNow()) {
        if (indicator.isCanceled()) {
          break;
        }
        if (System.currentTimeMillis() - time > 1000) {
          if (editor != null) {
            UIUtil.invokeLaterIfNeeded(new Runnable(){
              @Override public void run(){
                HintManager.getInstance().showErrorHint(editor,myExecuteActionHandler.getConsoleIsNotEnabledMessage());
              }
            }
);
          }
          return;
        }
        try {
          Thread.sleep(300);
        }
 catch (        InterruptedException e) {
        }
      }
      if (!indicator.isCanceled()) {
        doExecute(code);
      }
    }
  }
);
}
