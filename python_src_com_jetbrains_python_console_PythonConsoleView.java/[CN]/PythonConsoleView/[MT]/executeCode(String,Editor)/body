{
  showConsole(new Runnable(){
    @Override public void run(){
      ProgressManager.getInstance().run(new Task.Backgroundable(null,"Executing code in console...",false){
        @Override public void run(        @NotNull final ProgressIndicator indicator){
          long time=System.currentTimeMillis();
          while (!myExecuteActionHandler.isEnabled() || !myExecuteActionHandler.canExecuteNow()) {
            if (indicator.isCanceled()) {
              break;
            }
            if (System.currentTimeMillis() - time > 1000) {
              if (editor != null) {
                UIUtil.invokeLaterIfNeeded(new Runnable(){
                  @Override public void run(){
                    HintManager.getInstance().showErrorHint(editor,myExecuteActionHandler.getCantExecuteMessage());
                  }
                }
);
              }
              return;
            }
            try {
              Thread.sleep(300);
            }
 catch (            InterruptedException ignored) {
            }
          }
          if (!indicator.isCanceled()) {
            doExecute(code);
          }
        }
      }
);
    }
  }
);
}
