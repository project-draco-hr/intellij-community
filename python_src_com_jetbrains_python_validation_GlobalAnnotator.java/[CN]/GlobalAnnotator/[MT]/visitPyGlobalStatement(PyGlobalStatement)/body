{
  PyFunction function=node.getContainingElement(PyFunction.class);
  if (function != null) {
    PyParameterList paramList=function.getParameterList();
    PyParameter[] params=paramList.getParameters();
    Set<String> paramNames=new HashSet<String>();
    for (    PyParameter param : params) {
      paramNames.add(param.getName());
    }
    for (    PyReferenceExpression expr : node.getGlobals()) {
      if (paramNames.contains(expr.getReferencedName())) {
        getHolder().createErrorAnnotation(expr.getTextRange(),"name is used as both global and parameter");
      }
      PsiElement resolvedElement=expr.resolve();
      if (resolvedElement != null && PsiTreeUtil.isAncestor(function,resolvedElement,true)) {
        getHolder().createWarningAnnotation(expr.getTextRange(),"name '" + expr.getReferencedName() + "' is assigned to before global declaration");
      }
    }
  }
}
