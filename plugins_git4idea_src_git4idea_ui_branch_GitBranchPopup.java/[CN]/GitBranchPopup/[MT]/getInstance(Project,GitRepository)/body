{
  final GitVcsSettings vcsSettings=GitVcsSettings.getInstance(project);
  Condition<AnAction> preselectActionCondition=new Condition<AnAction>(){
    @Override public boolean value(    AnAction action){
      if (action instanceof GitBranchPopupActions.LocalBranchActions) {
        GitBranchPopupActions.LocalBranchActions branchAction=(GitBranchPopupActions.LocalBranchActions)action;
        String branchName=branchAction.getBranchName();
        String recentBranch;
        List<GitRepository> repositories=branchAction.getRepositories();
        if (repositories.size() == 1) {
          recentBranch=vcsSettings.getRecentBranchesByRepository().get(repositories.iterator().next().getRoot().getPath());
        }
 else {
          recentBranch=vcsSettings.getRecentCommonBranch();
        }
        if (recentBranch != null && recentBranch.equals(branchName)) {
          return true;
        }
      }
      return false;
    }
  }
;
  return new GitBranchPopup(currentRepository,GitUtil.getRepositoryManager(project),vcsSettings,preselectActionCondition);
}
