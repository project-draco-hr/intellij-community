{
  assertEquals("statement search",1,findMatchesCount(s1,s2));
  assertEquals("several constructions match",3,findMatchesCount(s5,s4));
  assertFalse("several constructions 2",(findMatchesCount(s5,s6)) != 0);
  assertEquals("several constructions 3",2,findMatchesCount(s7,s8));
  assertEquals("several constructions 4",2,findMatchesCount(s7,s9));
  final String s1000="{ lastTest = \"search for parameterized pattern\";\n" + "      matches = testMatcher.findMatches(s14_1,s15, options);\n" + "      if (matches.size()!=2 ) return false;\n"+ "lastTest = \"search for parameterized pattern\";\n"+ "      matches = testMatcher.findMatches(s14_1,s15, options);\n"+ "      if (matches.size()!=2 ) return false; }";
  final String s1001="lastTest = '_Descr; " + "      matches = testMatcher.findMatches('_In,'_Pattern, options);\n" + "      if (matches.size()!='_Number ) return false;";
  assertEquals("several operators 5",2,findMatchesCount(s1000,s1001));
  assertEquals("two the same statements search",1,findMatchesCount(s85,s86));
  assertEquals("search for simple call",1,findMatchesCount(s87,s88));
  assertEquals("search for simple call 2",1,findMatchesCount(s87,s88_2));
  assertEquals("search for simple call 3",2,findMatchesCount(s87,s88_3));
  String s10015="DocumentListener[] listeners = getCachedListeners();";
  assertEquals("search for definition with init",1,findMatchesCount(s10015,"'_Type 'Var = '_Call();"));
  String s10017="a = b; b = c; a=a; c=c;";
  assertEquals("search silly assignments",2,findMatchesCount(s10017,"'_a = '_a;"));
  String s10019="a.b(); a.b(null); a.b(null, 1);";
  assertEquals("search parameter",1,findMatchesCount(s10019,"a.b(null);"));
  String s1008="int a, b, c, d; int a,b,c; int c,d; int e;";
  assertEquals("search many declarations",2,findMatchesCount(s1008,"int '_a{3,4};"));
  String s1="super(1,1);  call(1,1); call(2,2);";
  assertEquals("search super",1,findMatchesCount(s1,"super('_t*);"));
  String s10021="short a = 1;\n" + "short b = 2;\n" + "short c = a.b();";
  assertEquals("search def init bug",1,findMatchesCount(s10021,"short '_a = '_b.b();"));
  String s10023="abstract class A { public abstract short getType(); }\n" + "A a;\n" + "switch(a.getType()) {\n"+ "  default:\n"+ "  return 0;\n"+ "}\n"+ "switch(a.getType()) {\n"+ "  case 1:\n"+ "  { return 0; }\n"+ "}";
  assertEquals("finding switch",2,findMatchesCount(s10023,"switch('_a:[exprtype( short )]) { '_statement*; }"));
  String s10025="A[] a;\n" + "A b[];\n" + "A c;";
  assertEquals("array types in dcl",2,findMatchesCount(s10025,"A[] 'a;"));
  assertEquals("array types in dcl 2",2,findMatchesCount(s10025,"A 'a[];"));
  String s10027="try { a(); } catch(Exception ex) {}\n" + "try { a(); } finally {}\n" + "try { a(); } catch(Exception ex) {} finally {} \n";
  assertEquals("finally matching",2,findMatchesCount(s10027,"try { a(); } finally {}\n"));
  String s10029="for(String a:b) { System.out.println(a); }";
  assertEquals("for each matching",1,findMatchesCount(s10029,"for(String a:b) { '_a; }"));
  String s10031="try { a(); } catch(Exception ex) {} catch(Error error) { 1=1; }\n" + "try { a(); } catch(Exception ex) {}";
  assertEquals("finally matching",2,findMatchesCount(s10031,"try { a(); } catch('_Type+ 'Arg+) { '_Statements*; }\n"));
  String s10033="return x;\n" + "return !x;\n" + "return (x);\n"+ "return (x);\n"+ "return !(x);";
  assertEquals("Find statement with parenthesized expr",2,findMatchesCount(s10033,"return ('a);"));
  String in="if (true) {" + "  System.out.println();" + "} else {"+ "  System.out.println();"+ "}"+ "if (true) System.out.println();";
  assertEquals("Find if statement with else",2,findMatchesCount(in,"if ('_exp) { '_statement*; }"));
  assertEquals("Find if statement without else",1,findMatchesCount(in,"if ('_exp) { '_statement*; } else { '_statement2{0,0}; }"));
}
