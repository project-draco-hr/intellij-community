{
  final String s58="/** @'T '_T2 */ class '_ { }";
  assertEquals("java doc comment in class",1,findMatchesCount(s57,s58));
  assertEquals("java doc comment in class in file",1,findMatchesCount(s57_2,s58,true));
  assertEquals("javadoc comment for field",2,findMatchesCount(s57,"class '_ { /** @serializable '_* */ '_ '_; }"));
  assertEquals("javadoc comment for method",2,findMatchesCount(s57,"class '_ { /** @'T 1.4 */ '_ '_() {} }"));
  assertEquals("just javadoc comment search",4,findMatchesCount(s57,"/** @'T '_T2 */"));
  final String s84="    /**\n" + "     * @hibernate.property\n" + "     *  'Property+\n"+ "     */\n";
  assertEquals("XDoclet metadata",2,findMatchesCount(s83,s84));
  final String s84_2="    /**\n" + "     * @hibernate.property\n" + "     *  update=\"fa.se\"\n"+ "     */\n";
  assertEquals("XDoclet metadata 2",1,findMatchesCount(s83,s84_2));
  assertEquals("optional tag value match",6,findMatchesCount(s57,"/** @'T '_T2? */"));
  assertEquals("multiple tags match +",2,findMatchesCount(s75," /** @'_tag+ '_value+ */"));
  assertEquals("multiple tags match *",3,findMatchesCount(s75," /** @'_tag* '_value* */"));
  assertEquals("multiple tags match ?",3,findMatchesCount(s75," /** @'_tag? '_value? */ class 't {}"));
  assertEquals("no infinite loop on javadoc matching",1,findMatchesCount(s57,"/** 'Text */ class '_ { }"));
}
