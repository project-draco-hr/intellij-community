{
  if (value == null) {
    return;
  }
  GraphCommitCell cell=getAssertCommitCell(value);
  myGraphImage=getGraphImage(row);
  int graphPadding;
  if (myGraphImage != null) {
    graphPadding=myGraphImage.getWidth();
    if (graphPadding < 2) {
      LOG.error("Too small image width: " + graphPadding);
    }
  }
 else {
    graphPadding=0;
  }
  setBorder(null);
  append("");
  appendTextPadding(graphPadding);
  myIssueLinkRenderer.appendTextWithLinks(cell.getText(),myGraphTable.applyHighlighters(this,row,column,"",hasFocus,isSelected));
  Collection<VcsRef> refs=cell.getRefsToThisCommit();
  Color foreground=ObjectUtils.assertNotNull(myGraphTable.getBaseStyle(row,column,"",hasFocus,isSelected).getForeground());
  if (refs.isEmpty()) {
    myTextLabelPainter.customizePainter(this,refs,getBackground(),foreground);
  }
 else {
    VirtualFile root=ObjectUtils.assertNotNull(ContainerUtil.getFirstItem(refs)).getRoot();
    myTextLabelPainter.customizePainter(this,ContainerUtil.sorted(refs,myLogData.getLogProvider(root).getReferenceManager().getLabelsOrderComparator()),getBackground(),foreground);
  }
}
