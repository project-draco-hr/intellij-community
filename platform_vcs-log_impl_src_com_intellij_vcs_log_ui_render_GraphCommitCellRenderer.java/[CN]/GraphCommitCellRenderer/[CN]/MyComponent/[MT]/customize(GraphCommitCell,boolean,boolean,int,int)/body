{
  clear();
  setPaintFocusBorder(hasFocus && myGraphTable.getCellSelectionEnabled());
  acquireState(myGraphTable,isSelected,hasFocus,row,column);
  getCellState().updateRenderer(this);
  myGraphImage=getGraphImage(cell.getPrintElements());
  int graphPadding;
  if (myGraphImage != null) {
    graphPadding=myGraphImage.getWidth();
    if (graphPadding < 2) {
      LOG.error("Too small image width: " + graphPadding);
    }
  }
 else {
    graphPadding=0;
  }
  SimpleTextAttributes style=myGraphTable.applyHighlighters(this,row,column,hasFocus,isSelected);
  Collection<VcsRef> refs=cell.getRefsToThisCommit();
  Color foreground=ObjectUtils.assertNotNull(myGraphTable.getBaseStyle(row,column,hasFocus,isSelected).getForeground());
  customizeRefsPainter(myReferencePainter,refs,foreground,myLogData,this);
  setBorder(null);
  append("");
  appendTextPadding(graphPadding + (myReferencePainter.isLeftAligned() ? myReferencePainter.getSize().width : 0));
  myIssueLinkRenderer.appendTextWithLinks(cell.getText(),style);
}
