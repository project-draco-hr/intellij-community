{
  final long prevLastModifiedValue=file.lastModified();
  if (file.exists()) {
    FileUtil.delete(file);
  }
  file.getParentFile().mkdirs();
  final DataOutputStream os=FileUtilRt.doIOOperation(new FileUtilRt.RepeatableIOOperation<DataOutputStream,FileNotFoundException>(){
    @Nullable @Override public DataOutputStream execute(    boolean lastAttempt) throws FileNotFoundException {
      try {
        return new DataOutputStream(new FileOutputStream(file));
      }
 catch (      FileNotFoundException ex) {
        if (lastAttempt)         throw ex;
        return null;
      }
    }
  }
);
  try {
    if (os != null) {
      os.writeInt(version);
      os.writeInt(VERSION);
    }
  }
  finally {
    ourIndexIdToCreationStamp.clear();
    if (os != null)     os.close();
    long max=Math.max(System.currentTimeMillis(),Math.max(prevLastModifiedValue,ourLastStamp) + 2000);
    ourLastStamp=max;
    file.setLastModified(max);
  }
}
