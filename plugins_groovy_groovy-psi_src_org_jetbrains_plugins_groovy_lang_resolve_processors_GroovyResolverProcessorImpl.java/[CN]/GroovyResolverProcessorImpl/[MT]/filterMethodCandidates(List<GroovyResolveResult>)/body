{
  if (candidates.size() <= 1)   return candidates;
  final List<GroovyResolveResult> results=ContainerUtil.newArrayList();
  final Iterator<GroovyResolveResult> itr=candidates.iterator();
  results.add(itr.next());
  Outer:   while (itr.hasNext()) {
    final GroovyResolveResult resolveResult=itr.next();
    if (resolveResult instanceof GroovyMethodResult) {
      for (Iterator<GroovyResolveResult> iterator=results.iterator(); iterator.hasNext(); ) {
        final GroovyResolveResult otherResolveResult=iterator.next();
        if (otherResolveResult instanceof GroovyMethodResult) {
          int res=compareMethods((GroovyMethodResult)resolveResult,(GroovyMethodResult)otherResolveResult);
          if (res > 0) {
            continue Outer;
          }
 else           if (res < 0) {
            iterator.remove();
          }
        }
      }
    }
    results.add(resolveResult);
  }
  return results;
}
