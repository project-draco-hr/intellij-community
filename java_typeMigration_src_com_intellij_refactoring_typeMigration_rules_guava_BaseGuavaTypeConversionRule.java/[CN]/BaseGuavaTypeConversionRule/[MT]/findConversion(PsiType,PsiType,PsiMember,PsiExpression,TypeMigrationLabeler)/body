{
  if (from != null && to != null && !canConvert(from,to,ruleFromClass(),ruleToClass())) {
    return null;
  }
  if (member instanceof PsiMethod) {
    PsiMethod method=(PsiMethod)member;
    final String methodName=method.getName();
    final PsiClass aClass=method.getContainingClass();
    if (isValidMethodQualifierToConvert(aClass)) {
      final TypeConversionDescriptorBase descriptor=mySimpleDescriptors.getValue().get(methodName);
      if (descriptor != null) {
        return descriptor;
      }
    }
    return findConversionForMethod(from,to,method,methodName,context,labeler);
  }
 else   if (context instanceof PsiNewExpression) {
    final PsiAnonymousClass anonymousClass=((PsiNewExpression)context).getAnonymousClass();
    return anonymousClass == null ? null : findConversionForAnonymous(anonymousClass,labeler.getSettings(GuavaConversionSettings.class));
  }
 else   if (context instanceof PsiReferenceExpression) {
    final PsiElement resolvedElement=((PsiReferenceExpression)context).resolve();
    if (resolvedElement instanceof PsiVariable) {
      return findConversionForVariableReference((PsiReferenceExpression)context,(PsiVariable)resolvedElement,context);
    }
  }
  return null;
}
