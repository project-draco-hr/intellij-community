{
  List<String> specs=new ArrayList<String>();
  final String scriptName=FileUtil.toSystemDependentName(myConfig.getScriptName());
switch (myConfig.getTestType()) {
case TEST_SCRIPT:
    specs.add(scriptName);
  break;
case TEST_CLASS:
specs.add(scriptName + "::" + myConfig.getClassName());
break;
case TEST_METHOD:
specs.add(scriptName + "::" + myConfig.getClassName()+ "::"+ myConfig.getMethodName());
break;
case TEST_FOLDER:
final String folderName=FileUtil.toSystemDependentName(myConfig.getFolderName() + "/");
if (!myConfig.getPattern().isEmpty()) {
specs.add(folderName + ";" + myConfig.getPattern());
}
 else specs.add(folderName);
break;
case TEST_FUNCTION:
specs.add(scriptName + "::::" + myConfig.getMethodName());
break;
default :
throw new IllegalArgumentException("Unknown test type: " + myConfig.getTestType());
}
return specs;
}
