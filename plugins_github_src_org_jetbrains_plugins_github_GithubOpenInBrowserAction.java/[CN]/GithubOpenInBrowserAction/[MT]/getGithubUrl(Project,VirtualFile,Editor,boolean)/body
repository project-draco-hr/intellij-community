{
  GitRepositoryManager manager=GitUtil.getRepositoryManager(project);
  final GitRepository repository=manager.getRepositoryForFile(virtualFile);
  if (repository == null) {
    if (!quiet) {
      StringBuilder details=new StringBuilder("file: " + virtualFile.getPresentableUrl() + "; Git repositories: ");
      for (      GitRepository repo : manager.getRepositories()) {
        details.append(repo.getPresentableUrl()).append("; ");
      }
      showError(project,"Can't find git repository",details.toString(),quiet);
    }
    return null;
  }
  final String githubRemoteUrl=GithubUtil.findGithubRemoteUrl(repository);
  if (githubRemoteUrl == null) {
    showError(project,"Can't find github remote",null,quiet);
    return null;
  }
  final String rootPath=repository.getRoot().getPath();
  final String path=virtualFile.getPath();
  if (!path.startsWith(rootPath)) {
    showError(project,"File is not under repository root","Root: " + rootPath + ", file: "+ path,quiet);
    return null;
  }
  String branch=getBranchNameOnRemote(project,repository,quiet);
  if (branch == null) {
    return null;
  }
  String relativePath=path.substring(rootPath.length());
  String urlToOpen=makeUrlToOpen(editor,relativePath,branch,githubRemoteUrl);
  if (urlToOpen == null) {
    showError(project,"Can't create properly url",githubRemoteUrl,quiet);
    return null;
  }
  return urlToOpen;
}
