{
  ApplicationManager.getApplication().invokeLater(new DumbAwareRunnable(){
    @Override public void run(){
      if (isDisposed() || myProject.isDisposed()) {
        updateProgress.cancel();
      }
      if (updateProgress.isCanceled()) {
        log(updateProgress,pass," is canceled during apply, sorry");
        return;
      }
      try {
        if (fileEditor.getComponent().isDisplayable() || ApplicationManager.getApplication().isUnitTestMode()) {
          log(updateProgress,pass," Applied");
          pass.applyInformationToEditor();
        }
      }
 catch (      ProcessCanceledException e) {
        log(updateProgress,pass,"Error " + e);
        throw e;
      }
catch (      RuntimeException e) {
        Document document=pass.getDocument();
        VirtualFile file=document == null ? null : FileDocumentManager.getInstance().getFile(document);
        FileType fileType=file == null ? null : file.getFileType();
        String message="Exception while applying information to " + fileEditor + "("+ fileType+ ")";
        log(updateProgress,pass,message + e);
        throw new RuntimeException(message,e);
      }
      if (threadsToStartCountdown.decrementAndGet() == 0) {
        log(updateProgress,pass,"Stopping ");
        updateProgress.stopIfRunning();
      }
 else {
        log(updateProgress,pass,"Finished but there are passes in the queue: " + threadsToStartCountdown.get());
      }
    }
  }
,ModalityState.stateForComponent(fileEditor.getComponent()));
}
