{
  PyType res=null;
  final PsiReference ref=getReference(PyResolveContext.noImplicits().withTypeEvalContext(context));
  if (ref != null) {
    final PsiElement resolved=ref.resolve();
    if (resolved instanceof Callable) {
      res=((Callable)resolved).getReturnType(context,this);
    }
  }
  if (PyTypeChecker.isUnknown(res) || res instanceof PyNoneType) {
    final PyExpression indexExpression=getIndexExpression();
    if (indexExpression != null) {
      final PyType type=context.getType(getOperand());
      if (type instanceof PySubscriptableType) {
        res=((PySubscriptableType)type).getElementType(indexExpression,context);
      }
 else       if (type instanceof PyCollectionType) {
        res=((PyCollectionType)type).getElementType(context);
      }
    }
  }
  return res;
}
