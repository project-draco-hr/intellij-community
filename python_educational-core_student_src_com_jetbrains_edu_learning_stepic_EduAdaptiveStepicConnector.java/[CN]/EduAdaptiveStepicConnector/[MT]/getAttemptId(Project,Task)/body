{
  final StepicWrappers.AttemptToPostWrapper attemptWrapper=new StepicWrappers.AttemptToPostWrapper(task.getStepicId());
  final HttpPost post=new HttpPost(EduStepicNames.STEPIC_API_URL + EduStepicNames.ATTEMPTS);
  post.setEntity(new StringEntity(new Gson().toJson(attemptWrapper)));
  final CloseableHttpClient client=getHttpClient(project);
  setHeaders(post,EduStepicNames.CONTENT_TYPE_APPL_JSON);
  setTimeout(post);
  final CloseableHttpResponse httpResponse=client.execute(post);
  final int statusCode=httpResponse.getStatusLine().getStatusCode();
  if (statusCode == HttpStatus.SC_CREATED) {
    final String entity=EntityUtils.toString(httpResponse.getEntity());
    final StepicWrappers.AttemptContainer container=new Gson().fromJson(entity,StepicWrappers.AttemptContainer.class);
    return (container.attempts != null && !container.attempts.isEmpty()) ? container.attempts.get(0).id : -1;
  }
 else {
    if ((statusCode == HttpStatus.SC_BAD_REQUEST || statusCode == HttpStatus.SC_UNAUTHORIZED) && login(project)) {
      return getAttemptId(project,task);
    }
  }
  return -1;
}
