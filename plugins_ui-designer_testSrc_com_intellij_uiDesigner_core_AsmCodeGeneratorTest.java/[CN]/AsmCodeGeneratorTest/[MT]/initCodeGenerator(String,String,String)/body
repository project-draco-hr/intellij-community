{
  String tmpPath=FileUtil.getTempDirectory();
  String formPath=testDataPath + formFileName;
  String javaPath=testDataPath + className + ".java";
  final int rc=Main.compile(new String[]{"-d",tmpPath,javaPath});
  assertEquals(0,rc);
  final String classPath=tmpPath + "/" + className+ ".class";
  final File classFile=new File(classPath);
  assertTrue(classFile.exists());
  final LwRootContainer rootContainer=loadFormData(formPath);
  final AsmCodeGenerator codeGenerator=new AsmCodeGenerator(rootContainer,myClassFinder,myNestedFormLoader,false,new ClassWriter(ClassWriter.COMPUTE_FRAMES));
  final FileInputStream classStream=new FileInputStream(classFile);
  try {
    codeGenerator.patchClass(classStream);
  }
  finally {
    classStream.close();
    FileUtil.delete(classFile);
    final File[] inners=new File(tmpPath).listFiles(new FilenameFilter(){
      @Override public boolean accept(      File dir,      String name){
        return name.startsWith(className + "$") && name.endsWith(".class");
      }
    }
);
    if (inners != null) {
      for (      File file : inners)       FileUtil.delete(file);
    }
  }
  return codeGenerator;
}
