{
  PsiAnnotation annotation=PsiImplUtil.getAnnotation(context.getCodeClass(),BUILDER_FQN);
  if (!isApplicable(annotation,EXTERNAL_STRATEGY_NAME))   return;
  final PsiClass constructedClass=GrAnnotationUtil.inferClassAttribute(annotation,"forClass");
  if (constructedClass == null || "groovy.transform.Undefined.CLASS".equals(constructedClass.getQualifiedName()))   return;
  if (constructedClass instanceof GrTypeDefinition) {
    for (    GrField field : ((GrTypeDefinition)constructedClass).getCodeFields()) {
      context.addMethod(DefaultBuilderStrategySupport.createFieldSetter(context.getCodeClass(),field,annotation));
    }
  }
 else {
    for (    PsiMethod setter : PropertyUtil.getAllProperties(constructedClass,true,false).values()) {
      final PsiMethod builderSetter=createFieldSetter(context.getCodeClass(),setter,annotation);
      if (builderSetter != null)       context.addMethod(builderSetter);
    }
  }
  context.addMethod(createBuildMethod(annotation,createType(constructedClass)));
}
