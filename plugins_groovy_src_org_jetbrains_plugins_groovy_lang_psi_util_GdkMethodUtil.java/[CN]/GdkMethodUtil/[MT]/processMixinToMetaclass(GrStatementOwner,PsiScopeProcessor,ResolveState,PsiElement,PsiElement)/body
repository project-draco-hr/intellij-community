{
  GrStatement[] statements=run.getStatements();
  for (  GrStatement statement : statements) {
    if (statement == lastParent)     break;
    final Trinity<PsiClassType,GrReferenceExpression,PsiClass> result=getMixinTypes(statement);
    if (result != null) {
      final PsiClassType subjectType=result.first;
      final GrReferenceExpression qualifier=result.second;
      final PsiClass mixin=result.third;
      final DelegatingScopeProcessor delegate=new MixinMemberContributor.MixinProcessor(processor,subjectType,qualifier);
      mixin.processDeclarations(delegate,state,null,place);
    }
 else {
      Trinity<PsiClassType,GrReferenceExpression,List<GrMethod>> closureResult=getClosureMixins(statement);
      if (closureResult != null) {
        final PsiClassType subjectType=closureResult.first;
        final GrReferenceExpression qualifier=closureResult.second;
        final List<GrMethod> methods=closureResult.third;
        final DelegatingScopeProcessor delegate=new MixinMemberContributor.MixinProcessor(processor,subjectType,qualifier);
        for (        GrMethod method : methods) {
          ResolveUtil.processElement(delegate,method,state);
        }
      }
    }
  }
  return true;
}
