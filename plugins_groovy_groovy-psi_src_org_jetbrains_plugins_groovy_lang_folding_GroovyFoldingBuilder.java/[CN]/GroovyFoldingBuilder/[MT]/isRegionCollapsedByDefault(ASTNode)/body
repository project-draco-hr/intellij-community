{
  final JavaCodeFoldingSettings settings=JavaCodeFoldingSettings.getInstance();
  if (node.getElementType() == GroovyElementTypes.IMPORT_STATEMENT) {
    return settings.isCollapseImports();
  }
  if (node.getElementType() == GroovyDocElementTypes.GROOVY_DOC_COMMENT || node.getElementType() == GroovyTokenTypes.mML_COMMENT) {
    PsiElement element=node.getPsi();
    PsiElement parent=element.getParent();
    if (parent instanceof GroovyFile) {
      PsiElement firstChild=parent.getFirstChild();
      if (firstChild instanceof PsiWhiteSpace) {
        firstChild=firstChild.getNextSibling();
      }
      if (element.equals(firstChild)) {
        return settings.isCollapseFileHeader();
      }
    }
    if (node.getElementType() == GroovyDocElementTypes.GROOVY_DOC_COMMENT) {
      return settings.isCollapseJavadocs();
    }
  }
  if ((node.getElementType() == GroovyElementTypes.OPEN_BLOCK || node.getElementType() == GroovyElementTypes.CONSTRUCTOR_BODY) && node.getTreeParent().getElementType() == GroovyElementTypes.METHOD_DEFINITION) {
    return settings.isCollapseMethods();
  }
  if (node.getElementType() == GroovyElementTypes.CLOSABLE_BLOCK) {
    return settings.isCollapseAnonymousClasses();
  }
  if (node.getElementType() == GroovyElementTypes.CLASS_BODY) {
    final PsiElement parent=node.getPsi().getParent();
    if (parent instanceof PsiClass) {
      if (parent instanceof PsiAnonymousClass) {
        return settings.isCollapseAnonymousClasses();
      }
      if (((PsiClass)parent).getContainingClass() != null) {
        return settings.isCollapseInnerClasses();
      }
    }
  }
  if (node.getElementType() == GroovyTokenTypes.mSL_COMMENT) {
    return settings.isCollapseEndOfLineComments();
  }
  return false;
}
