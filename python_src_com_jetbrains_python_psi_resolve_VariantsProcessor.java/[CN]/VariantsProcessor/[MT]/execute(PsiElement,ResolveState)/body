{
  if (myNodeFilter != null && !myNodeFilter.value(element))   return true;
  if (element instanceof PsiNamedElement) {
    final PsiNamedElement psiNamedElement=(PsiNamedElement)element;
    final String name=psiNamedElement instanceof PyFile ? FileUtil.getNameWithoutExtension(((PyFile)psiNamedElement).getName()) : psiNamedElement.getName();
    if (name != null && nameIsAcceptable(name)) {
      addElement(name,psiNamedElement);
    }
  }
 else   if (element instanceof PyReferenceExpression) {
    PyReferenceExpression expr=(PyReferenceExpression)element;
    String referencedName=expr.getReferencedName();
    if (nameIsAcceptable(referencedName)) {
      addElement(referencedName,expr);
    }
  }
 else   if (element instanceof NameDefiner) {
    boolean handled_as_imported=false;
    if (element instanceof PyImportElement) {
      final PyImportElement importElement=(PyImportElement)element;
      PyReferenceExpression ref=importElement.getImportReference();
      if (ref != null && ref.getQualifier() == null) {
        String name=importElement.getAsName() != null ? importElement.getAsName() : ref.getName();
        if (name != null && nameIsAcceptable(name)) {
          PsiElement resolved=ref.getReference().resolve();
          if (resolved instanceof PsiNamedElement) {
            handled_as_imported=true;
            addElement(name,resolved);
          }
        }
      }
    }
    if (!handled_as_imported) {
      final NameDefiner definer=(NameDefiner)element;
      for (      PyElement expr : definer.iterateNames()) {
        if (expr != null && expr != myContext) {
          String referencedName=expr.getName();
          if (referencedName != null && nameIsAcceptable(referencedName)) {
            addImportedElement(referencedName,definer,expr);
          }
        }
      }
    }
  }
  return true;
}
