{
  if (myNodeFilter != null && !myNodeFilter.value(element))   return true;
  if (element instanceof PsiNamedElement) {
    final PsiNamedElement psiNamedElement=(PsiNamedElement)element;
    final String name=PyUtil.getElementNameWithoutExtension(psiNamedElement);
    if (name != null && nameIsAcceptable(name)) {
      addElement(name,psiNamedElement);
    }
  }
 else   if (element instanceof PyReferenceExpression) {
    PyReferenceExpression expr=(PyReferenceExpression)element;
    String referencedName=expr.getReferencedName();
    if (nameIsAcceptable(referencedName)) {
      addElement(referencedName,expr);
    }
  }
 else   if (element instanceof NameDefiner) {
    boolean handledAsImported=false;
    if (element instanceof PyImportElement) {
      final PyImportElement importElement=(PyImportElement)element;
      handledAsImported=handleImportElement(importElement);
    }
    if (!handledAsImported) {
      final NameDefiner definer=(NameDefiner)element;
      for (      PyElement expr : definer.iterateNames()) {
        if (expr != null && expr != myContext) {
          if (!expr.isValid()) {
            throw new PsiInvalidElementAccessException(expr,"Definer: " + definer);
          }
          String referencedName=expr instanceof PyFile ? FileUtil.getNameWithoutExtension(((PyFile)expr).getName()) : expr.getName();
          if (referencedName != null && nameIsAcceptable(referencedName)) {
            addImportedElement(referencedName,definer,expr);
          }
        }
      }
    }
  }
  return true;
}
