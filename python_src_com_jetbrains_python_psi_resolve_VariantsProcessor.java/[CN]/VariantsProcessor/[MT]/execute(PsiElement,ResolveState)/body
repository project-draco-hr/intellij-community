{
  if (myNodeFilter != null && !myNodeFilter.value(element))   return true;
  if (element instanceof PsiNamedElement) {
    final PsiNamedElement psiNamedElement=(PsiNamedElement)element;
    final String name=psiNamedElement instanceof PyFile ? FileUtil.getNameWithoutExtension(((PyFile)psiNamedElement).getName()) : psiNamedElement.getName();
    if (name != null && nameIsAcceptable(name)) {
      myVariants.put(name,setupItem(LookupElementBuilder.create(psiNamedElement,name).setIcon(element.getIcon(0))));
    }
  }
 else   if (element instanceof PyReferenceExpression) {
    PyReferenceExpression expr=(PyReferenceExpression)element;
    String referencedName=expr.getReferencedName();
    if (nameIsAcceptable(referencedName)) {
      myVariants.put(referencedName,setupItem(LookupElementBuilder.create(expr,referencedName)));
    }
  }
 else   if (element instanceof NameDefiner) {
    boolean handled_as_imported=false;
    if (element instanceof PyImportElement) {
      final PyImportElement importElement=(PyImportElement)element;
      PyReferenceExpression ref=importElement.getImportReference();
      if (ref != null && ref.getQualifier() == null) {
        String name=importElement.getAsName() != null ? importElement.getAsName() : ref.getName();
        if (name != null && nameIsAcceptable(name)) {
          PsiElement resolved=ref.getReference().resolve();
          if (resolved instanceof PsiNamedElement) {
            handled_as_imported=true;
            myVariants.put(name,setupItem(LookupElementBuilder.create(resolved,name).setIcon(resolved.getIcon(0))));
          }
        }
      }
    }
    if (!handled_as_imported) {
      final NameDefiner definer=(NameDefiner)element;
      for (      PyElement expr : definer.iterateNames()) {
        if (expr != null && expr != myContext) {
          String referencedName=expr.getName();
          Icon icon=expr.getIcon(0);
          if (icon == null)           icon=Icons.VARIABLE_ICON;
          if (referencedName != null && nameIsAcceptable(referencedName)) {
            LookupElementBuilder lookupItem=setupItem(LookupElementBuilder.create(expr,referencedName).setIcon(icon));
            if (definer instanceof PyImportElement) {
              PsiElement maybeFromImport=definer.getParent();
              if (maybeFromImport instanceof PyFromImportStatement) {
                final PyFromImportStatement fromImport=(PyFromImportStatement)maybeFromImport;
                PyReferenceExpression src=fromImport.getImportSource();
                if (src != null) {
                  lookupItem=setItemNotice(lookupItem,src.getName());
                }
              }
            }
            if (definer instanceof PyAssignmentStatement) {
              PyExpression value=((PyAssignmentStatement)definer).getAssignedValue();
              if (value != null) {
                PyType type=value.getType(TypeEvalContext.fast());
                if (type != null) {
                  lookupItem=lookupItem.setTypeText(type.getName());
                }
              }
            }
            myVariants.put(referencedName,lookupItem);
          }
        }
      }
    }
  }
  return true;
}
