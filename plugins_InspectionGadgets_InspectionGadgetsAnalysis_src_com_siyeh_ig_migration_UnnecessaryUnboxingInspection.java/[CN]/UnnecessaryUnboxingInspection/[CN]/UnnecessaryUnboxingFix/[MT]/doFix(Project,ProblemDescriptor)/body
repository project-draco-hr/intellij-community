{
  final PsiMethodCallExpression methodCall=(PsiMethodCallExpression)descriptor.getPsiElement();
  final PsiReferenceExpression methodExpression=methodCall.getMethodExpression();
  final PsiExpression qualifier=methodExpression.getQualifierExpression();
  final PsiExpression strippedQualifier=ParenthesesUtils.stripParentheses(qualifier);
  if (strippedQualifier == null) {
    return;
  }
  if (strippedQualifier instanceof PsiReferenceExpression) {
    final PsiReferenceExpression referenceExpression=(PsiReferenceExpression)strippedQualifier;
    final PsiElement element=referenceExpression.resolve();
    if (element instanceof PsiField) {
      final PsiField field=(PsiField)element;
      final PsiClass containingClass=field.getContainingClass();
      if (containingClass == null) {
        return;
      }
      final String classname=containingClass.getQualifiedName();
      if (CommonClassNames.JAVA_LANG_BOOLEAN.equals(classname)) {
        @NonNls final String name=field.getName();
        if ("TRUE".equals(name)) {
          PsiReplacementUtil.replaceExpression(methodCall,"true");
          return;
        }
 else         if ("FALSE".equals(name)) {
          PsiReplacementUtil.replaceExpression(methodCall,"false");
          return;
        }
      }
    }
  }
  final String strippedQualifierText=strippedQualifier.getText();
  PsiReplacementUtil.replaceExpression(methodCall,strippedQualifierText);
}
