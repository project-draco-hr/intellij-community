{
  super.visitMethodCallExpression(expression);
  if (!PsiUtil.isLanguageLevel5OrHigher(expression)) {
    return;
  }
  if (!isUnboxingExpression(expression)) {
    return;
  }
  final PsiExpression containingExpression=getContainingExpression(expression);
  if (isPossibleObjectComparison(expression,containingExpression)) {
    return;
  }
  if (containingExpression instanceof PsiTypeCastExpression) {
    final PsiTypeCastExpression typeCastExpression=(PsiTypeCastExpression)containingExpression;
    final PsiTypeElement typeElement=typeCastExpression.getCastType();
    if (typeElement == null) {
      return;
    }
    final PsiType castType=typeElement.getType();
    final PsiType expressionType=expression.getType();
    if (expressionType == null || !castType.isAssignableFrom(expressionType)) {
      return;
    }
  }
 else   if (containingExpression instanceof PsiConditionalExpression) {
    final PsiConditionalExpression conditionalExpression=(PsiConditionalExpression)containingExpression;
    final PsiExpression thenExpression=conditionalExpression.getThenExpression();
    if (thenExpression == null) {
      return;
    }
    final PsiExpression elseExpression=conditionalExpression.getElseExpression();
    if (elseExpression == null) {
      return;
    }
    if (PsiTreeUtil.isAncestor(thenExpression,expression,false)) {
      final PsiType type=elseExpression.getType();
      if (!(type instanceof PsiPrimitiveType)) {
        return;
      }
    }
 else     if (PsiTreeUtil.isAncestor(elseExpression,expression,false)) {
      final PsiType type=thenExpression.getType();
      if (!(type instanceof PsiPrimitiveType)) {
        return;
      }
    }
  }
 else   if (containingExpression instanceof PsiCallExpression) {
    final PsiCallExpression methodCallExpression=(PsiCallExpression)containingExpression;
    if (!isSameMethodCalledWithoutUnboxing(methodCallExpression,expression)) {
      return;
    }
  }
  if (onlyReportSuperfluouslyUnboxed) {
    final PsiType expectedType=ExpectedTypeUtils.findExpectedType(expression,false,true);
    if (!(expectedType instanceof PsiClassType)) {
      return;
    }
  }
  registerError(expression);
}
