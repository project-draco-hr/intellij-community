{
  if (!(usage.getElement() instanceof GrMethod) || !isGroovyUsage(usage))   return true;
  GrMethod method=(GrMethod)usage.getElement();
  final FieldConflictsResolver fieldConflictsResolver=new FieldConflictsResolver(data.getParameterName(),method.getBlock());
  final MethodJavaDocHelper javaDocHelper=new MethodJavaDocHelper(method);
  final PsiParameter[] parameters=method.getParameterList().getParameters();
  data.getParametersToRemove().forEachDescending(new TIntProcedure(){
    public boolean execute(    final int paramNum){
      try {
        PsiParameter param=parameters[paramNum];
        PsiDocTag tag=javaDocHelper.getTagForParameter(param);
        if (tag != null) {
          tag.delete();
        }
        param.delete();
      }
 catch (      IncorrectOperationException e) {
        LOG.error(e);
      }
      return true;
    }
  }
);
  addParameter(method,javaDocHelper,data.getForcedType(),data.getParameterName(),data.isDeclareFinal(),data.getProject());
  fieldConflictsResolver.fix();
  return false;
}
