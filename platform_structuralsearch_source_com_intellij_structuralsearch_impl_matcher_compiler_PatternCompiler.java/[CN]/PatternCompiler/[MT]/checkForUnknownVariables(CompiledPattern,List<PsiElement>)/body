{
  for (  PsiElement element : elements) {
    element.accept(new PsiRecursiveElementWalkingVisitor(){
      @Override public void visitElement(      PsiElement element){
        if (element instanceof PsiComment) {
          return;
        }
        super.visitElement(element);
        if (!(element instanceof LeafElement) || !pattern.isTypedVar(element)) {
          return;
        }
        final MatchingHandler handler=pattern.getHandler(pattern.getTypedVarString(element));
        if (handler == null) {
          throw new MalformedPatternException();
        }
      }
    }
);
  }
}
