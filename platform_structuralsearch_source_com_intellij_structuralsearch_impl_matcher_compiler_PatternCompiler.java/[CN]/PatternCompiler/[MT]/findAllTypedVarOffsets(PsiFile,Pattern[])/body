{
  final TIntHashSet result=new TIntHashSet();
  file.accept(new PsiRecursiveElementWalkingVisitor(){
    @Override public void visitElement(    PsiElement element){
      super.visitElement(element);
      if (element instanceof LeafElement) {
        final String text=element.getText();
        for (        Pattern pattern : substitutionPatterns) {
          final Matcher matcher=pattern.matcher(text);
          while (matcher.find()) {
            result.add(element.getTextRange().getStartOffset() + matcher.end());
          }
        }
      }
    }
  }
);
  final int[] resultArray=result.toArray();
  Arrays.sort(resultArray);
  return resultArray;
}
