{
  return from(new Iterable<T>(){
    @Override public Iterator<T> iterator(){
      final Iterator<E> iterator=JBIterable.this.iterator();
      return new Iterator<T>(){
        @Override public boolean hasNext(){
          return iterator.hasNext();
        }
        @Override public T next(){
          return function.fun(iterator.next());
        }
        @Override public void remove(){
          iterator.remove();
        }
      }
;
    }
  }
);
}
