{
  final JBIterable<E> it=this;
  return new JBIterable<E>(){
    @Override public Iterator<E> iterator(){
      final Iterator<E> iterator=it.iterator();
      return new Iterator<E>(){
        E cur=(E)ObjectUtils.NULL;
        boolean acquired;
        @Override public boolean hasNext(){
          if (acquired)           return cur != ObjectUtils.NULL;
          boolean b=iterator.hasNext();
          cur=b ? iterator.next() : null;
          acquired=true;
          b&=condition.value(cur);
          cur=b ? cur : (E)ObjectUtils.NULL;
          return b;
        }
        @Override public E next(){
          if (cur == ObjectUtils.NULL)           throw new NoSuchElementException();
          acquired=false;
          return cur;
        }
        @Override public void remove(){
          iterator.remove();
        }
      }
;
    }
  }
;
}
