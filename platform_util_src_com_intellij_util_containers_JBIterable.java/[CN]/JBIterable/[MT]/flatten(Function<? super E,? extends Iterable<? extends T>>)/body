{
  return intercept(new Function<Iterator<E>,Iterator<T>>(){
    @Override public Iterator<T> fun(    final Iterator<E> iterator){
      return new JBIterator<T>(){
        Iterator<? extends T> cur;
        @Override public T nextImpl(){
          while ((cur == null || !cur.hasNext()) && iterator.hasNext()) {
            cur=function.fun(iterator.next()).iterator();
          }
          if (cur == null || !cur.hasNext())           return stop();
          return cur.next();
        }
        @Override public void remove(){
          cur.remove();
        }
      }
;
    }
  }
);
}
