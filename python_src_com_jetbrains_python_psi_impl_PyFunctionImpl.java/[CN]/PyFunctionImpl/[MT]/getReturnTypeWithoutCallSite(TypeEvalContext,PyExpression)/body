{
  PyType type=getGenericReturnType(context,null);
  if (PyTypeChecker.hasGenerics(type,context)) {
    final Map<PyGenericType,PyType> substitutions=PyTypeChecker.unifyGenericCall(receiver,Maps.<PyExpression,PyNamedParameter>newHashMap(),context);
    if (substitutions != null) {
      type=PyTypeChecker.substitute(type,substitutions,context);
    }
 else {
      type=null;
    }
  }
  return replaceSelf(type,receiver,context);
}
