{
  if (PyTypeChecker.hasGenerics(type,context)) {
    final Map<PyGenericType,PyType> substitutions=PyTypeChecker.unifyGenericCall(receiver,parameters,context);
    if (substitutions != null) {
      type=PyTypeChecker.substitute(type,substitutions,context);
    }
 else {
      type=null;
    }
  }
  if (receiver != null) {
    type=replaceSelf(type,receiver,context);
  }
  if (type != null && isDynamicallyEvaluated(parameters.values(),context)) {
    type=PyUnionType.createWeakType(type);
  }
  return type;
}
