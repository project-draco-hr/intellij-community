{
  for (  PyTypeProvider typeProvider : Extensions.getExtensions(PyTypeProvider.EP_NAME)) {
    final PyType type=typeProvider.getCallType(this,callSite,context);
    if (type != null) {
      type.assertValid(typeProvider.toString());
      return type;
    }
  }
  final PyType type=context.getReturnType(this);
  final PyTypeChecker.AnalyzeCallResults results=PyTypeChecker.analyzeCallSite(callSite,context);
  if (results != null) {
    return analyzeCallType(type,results.getReceiver(),results.getArguments(),context);
  }
  return type;
}
