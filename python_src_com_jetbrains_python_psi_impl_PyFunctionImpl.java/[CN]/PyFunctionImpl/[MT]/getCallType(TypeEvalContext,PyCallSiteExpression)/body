{
  for (  PyTypeProvider typeProvider : Extensions.getExtensions(PyTypeProvider.EP_NAME)) {
    final PyType type=typeProvider.getCallType(this,callSite,context);
    if (type != null) {
      type.assertValid(typeProvider.toString());
      return type;
    }
  }
  final PyExpression receiver=PyTypeChecker.getReceiver(callSite,this);
  final Map<PyExpression,PyNamedParameter> mapping=PyCallExpressionHelper.mapArguments(callSite,this,context);
  return getCallType(receiver,mapping,context);
}
