{
  final PyType type=getGenericReturnType(context,callSite);
  if (PyTypeChecker.hasGenerics(type,context)) {
    if (callSite != null) {
      final PsiElement parent=callSite.getParent();
      if (parent instanceof PyCallExpression) {
        final Map<PyGenericType,PyType> substitutions=PyTypeChecker.unifyGenericCall(this,(PyCallExpression)parent,context);
        if (substitutions != null) {
          final Ref<PyType> result=PyTypeChecker.substitute(type,substitutions,context);
          if (result != null) {
            return result.get();
          }
        }
      }
    }
    return null;
  }
  return type;
}
