{
  if (typeEvalContext.maySwitchToAST(this) && LanguageLevel.forElement(this).isAtLeast(LanguageLevel.PYTHON30)) {
    PyAnnotation anno=getAnnotation();
    if (anno != null) {
      PyClass pyClass=anno.resolveToClass();
      if (pyClass != null) {
        return new PyClassTypeImpl(pyClass,false);
      }
    }
  }
  for (  PyTypeProvider typeProvider : Extensions.getExtensions(PyTypeProvider.EP_NAME)) {
    final PyType returnType=typeProvider.getReturnType(this,callSite,typeEvalContext);
    if (returnType != null) {
      returnType.assertValid(typeProvider.toString());
      return returnType;
    }
  }
  final PyType docStringType=getReturnTypeFromDocString();
  if (docStringType != null) {
    docStringType.assertValid("from docstring");
    return docStringType;
  }
  if (typeEvalContext.allowReturnTypes(this)) {
    final PyType yieldType=getYieldStatementType(typeEvalContext);
    if (yieldType != null) {
      return yieldType;
    }
    return getReturnStatementType(typeEvalContext);
  }
  return null;
}
