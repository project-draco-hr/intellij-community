{
  for (  PyTypeProvider provider : Extensions.getExtensions(PyTypeProvider.EP_NAME)) {
    final PyType type=provider.getCallableType(this,context);
    if (type != null) {
      return type;
    }
  }
  final PyFunctionType type=new PyFunctionType(this,calculateReturnType(context));
  if (PyUtil.hasCustomDecorators(this) && !PyUtil.isDecoratedAsAbstract(this) && getProperty() == null) {
    return PyUnionType.createWeakType(type);
  }
  return type;
}
