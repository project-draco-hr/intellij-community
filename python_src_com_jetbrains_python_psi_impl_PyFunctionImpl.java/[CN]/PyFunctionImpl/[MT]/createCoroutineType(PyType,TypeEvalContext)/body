{
  final PyBuiltinCache cache=PyBuiltinCache.getInstance(this);
  if (returnType instanceof PyCollectionType && PyNames.FAKE_GENERATOR.equals(returnType.getName())) {
    final PyClass asyncGenerator=cache.getClass(PyNames.FAKE_ASYNC_GENERATOR);
    final List<PyType> generatorElementTypes=((PyCollectionType)returnType).getElementTypes(context);
    if (asyncGenerator == null || generatorElementTypes.isEmpty()) {
      return null;
    }
    return new PyCollectionTypeImpl(asyncGenerator,false,Arrays.asList(generatorElementTypes.get(0),null));
  }
  final PyClass coroutine=cache.getClass(PyNames.FAKE_COROUTINE);
  return coroutine != null ? new PyCollectionTypeImpl(coroutine,false,Collections.singletonList(returnType)) : null;
}
