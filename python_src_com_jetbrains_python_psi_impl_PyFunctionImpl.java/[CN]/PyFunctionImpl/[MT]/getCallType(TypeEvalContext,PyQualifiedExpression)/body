{
  PyType type=getGenericReturnType(context,callSite);
  if (callSite == null) {
    return type;
  }
  final PyTypeChecker.AnalyzeCallResults results=PyTypeChecker.analyzeCallSite(callSite,context);
  if (PyTypeChecker.hasGenerics(type,context)) {
    if (results != null) {
      final Map<PyGenericType,PyType> substitutions=PyTypeChecker.unifyGenericCall(results.getReceiver(),results.getArguments(),context);
      type=substitutions != null ? PyTypeChecker.substitute(type,substitutions,context) : null;
    }
 else {
      type=null;
    }
  }
  if (results != null) {
    type=replaceSelf(type,results.getReceiver(),context);
  }
  if (results != null && isDynamicallyEvaluated(results.getArguments().values(),context)) {
    return PyUnionType.createWeakType(type);
  }
  return type;
}
