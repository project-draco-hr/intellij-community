{
  for (  final LookupElement item : myBase) {
    addSecondCompletionVariants(myElement,myReference,item,myParameters,myResult);
  }
  if (!psiElement().afterLeaf(".").accepts(myElement)) {
    BasicExpressionCompletionContributor.processDataflowExpressionTypes(myElement,null,TRUE_MATCHER,new Consumer<LookupElement>(){
      @Override public void consume(      LookupElement baseItem){
        addSecondCompletionVariants(myElement,myReference,baseItem,myParameters,myResult);
      }
    }
);
  }
}
