{
  DefaultJDOMExternalizer.writeExternal(this,element);
  if (ADD_PATHS != null) {
    for (    String aADD_PATHS : ADD_PATHS) {
      Element elem=new Element("addpath");
      elem.setAttribute("path",aADD_PATHS);
      element.addContent(elem);
    }
  }
  if (myConfigurationDirectory != null) {
    Element configurationDirectory=new Element("configuration");
    configurationDirectory.setText(myConfigurationDirectory);
    configurationDirectory.setAttribute("useDefault",myIsUseDefaultConfiguration ? "true" : "false");
    element.addContent(configurationDirectory);
  }
  if (myIsKeepLocks) {
    element.addContent(new Element("keepLocks"));
  }
  if (myRemoteStatus) {
    element.addContent(new Element("remoteStatus"));
  }
  if (myUpgradeMode != null) {
    element.addContent(new Element("upgradeMode").setText(myUpgradeMode));
  }
  element.addContent(new Element("myIsUseDefaultProxy").setText(myIsUseDefaultProxy ? "true" : "false"));
  if (mySupportOptions != null) {
    element.addContent(new Element("supportedVersion").setText(String.valueOf(mySupportOptions.myVersion)));
  }
  element.setAttribute("maxAnnotateRevisions",String.valueOf(myMaxAnnotateRevisions));
  element.setAttribute("myUseAcceleration",String.valueOf(myUseAcceleration));
  element.setAttribute("myAutoUpdateAfterCommit",String.valueOf(myAutoUpdateAfterCommit));
  element.setAttribute(CLEANUP_ON_START_RUN,String.valueOf(myCleanupRun));
  element.setAttribute("SSL_PROTOCOLS",SSL_PROTOCOLS.name());
  if (TREE_CONFLICT_MERGE_THEIRS_NEW_INTO_OLD_PLACE != null) {
    element.setAttribute("TREE_CONFLICT_MERGE_THEIRS_NEW_INTO_OLD_PLACE",String.valueOf(TREE_CONFLICT_MERGE_THEIRS_NEW_INTO_OLD_PLACE));
  }
}
