{
  Object instance=myInitializedComponentInstance;
  if (instance != null) {
    return instance;
  }
synchronized (this) {
    instance=myInitializedComponentInstance;
    if (instance != null) {
      return instance;
    }
    ComponentAdapter delegate=getDelegate();
    AccessToken readToken=null;
    AccessToken token=HeavyProcessLatch.INSTANCE.processStarted("Creating component '" + myDescriptor.getImplementation() + "'");
    try {
      readToken=Registry.is("use.read.action.to.init.service",true) ? ReadAction.start() : null;
      instance=delegate.getComponentInstance(container);
      if (instance instanceof Disposable) {
        Disposer.register(myComponentManager,(Disposable)instance);
      }
      myComponentManager.initializeComponent(instance,true);
      myInitializedComponentInstance=instance;
      return instance;
    }
  finally {
      try {
        if (readToken != null) {
          readToken.finish();
        }
      }
  finally {
        token.finish();
      }
    }
  }
}
