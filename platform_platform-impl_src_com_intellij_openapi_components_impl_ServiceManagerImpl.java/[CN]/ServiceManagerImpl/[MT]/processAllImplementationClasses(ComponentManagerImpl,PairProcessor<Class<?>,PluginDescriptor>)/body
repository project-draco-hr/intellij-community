{
  Collection adapters=componentManager.getPicoContainer().getComponentAdapters();
  if (adapters.isEmpty()) {
    return;
  }
  for (  Object o : adapters) {
    Class aClass;
    if (o instanceof MyComponentAdapter) {
      MyComponentAdapter adapter=(MyComponentAdapter)o;
      PluginDescriptor pluginDescriptor=adapter.myPluginDescriptor;
      try {
        ComponentAdapter delegate=adapter.myDelegate;
        if (delegate == null) {
          ClassLoader classLoader=pluginDescriptor == null ? ServiceManagerImpl.class.getClassLoader() : pluginDescriptor.getPluginClassLoader();
          aClass=Class.forName(adapter.myDescriptor.getImplementation(),false,classLoader);
        }
 else {
          aClass=delegate.getComponentImplementation();
        }
      }
 catch (      Throwable e) {
        if (PlatformUtils.isIdeaUltimate()) {
          LOG.error(e);
        }
 else {
          LOG.warn(e);
        }
        continue;
      }
      if (!processor.process(aClass,pluginDescriptor)) {
        break;
      }
    }
 else     if (o instanceof ComponentAdapter && !(o instanceof ExtensionComponentAdapter)) {
      try {
        aClass=((ComponentAdapter)o).getComponentImplementation();
      }
 catch (      Throwable e) {
        LOG.error(e);
        continue;
      }
      PluginId pluginId=componentManager.getConfig(aClass);
      if (pluginId != null) {
        processor.process(aClass,PluginManager.getPlugin(pluginId));
      }
    }
  }
}
