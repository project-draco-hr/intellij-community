{
  if (runnerSettings == null && isApplicableFor(configuration)) {
    final Alarm processTracesAlarm=new Alarm(Alarm.ThreadToUse.POOLED_THREAD,null);
    final MessageBusConnection connection=configuration.getProject().getMessageBus().connect();
    connection.subscribe(SMTRunnerEventsListener.TEST_STATUS,new SMTRunnerEventsAdapter(){
      @Override public void onTestFinished(      @NotNull SMTestProxy test){
        final SMTestProxy.SMRootTestProxy root=test.getRoot();
        if ((root == null || root.getHandler() == handler) && processTracesAlarm.getActiveRequestCount() == 0) {
        }
      }
      @Override public void onTestingFinished(      @NotNull SMTestProxy.SMRootTestProxy testsRoot){
        if (testsRoot.getHandler() == handler) {
          processTracesAlarm.cancelAllRequests();
          processTracesAlarm.addRequest(new Runnable(){
            @Override public void run(){
              processAvailableTraces(configuration);
              Disposer.dispose(processTracesAlarm);
            }
          }
,0);
          connection.disconnect();
        }
      }
    }
);
  }
}
