{
  final List<PyClassLikeType> types=node.getAncestorTypes(myTypeEvalContext);
  for (  PyClassLikeType type : types) {
    if (type == null)     return;
    final String qName=type.getClassQName();
    if (qName != null && qName.contains(PyNames.TEST_CASE))     return;
    if (!(type instanceof PyClassType))     return;
  }
  final PyFunction init=node.findInitOrNew(true);
  if (init == null) {
    registerProblem(node.getNameIdentifier(),PyBundle.message("INSP.class.has.no.init"),new AddMethodQuickFix("__init__",new PyClassTypeImpl(node,false),false));
  }
}
