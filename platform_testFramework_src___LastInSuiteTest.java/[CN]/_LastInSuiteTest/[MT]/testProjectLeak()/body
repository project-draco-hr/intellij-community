{
  UIUtil.invokeAndWaitIfNeeded(new Runnable(){
    @Override public void run(){
      try {
        LightPlatformTestCase.initApplication();
      }
 catch (      RuntimeException e) {
        throw e;
      }
catch (      Exception e) {
        throw new RuntimeException(e);
      }
    }
  }
);
  new WriteCommandAction.Simple(null){
    @Override protected void run() throws Throwable {
      LightPlatformTestCase.closeAndDeleteProject();
    }
  }
.execute().throwException();
  UIUtil.invokeAndWaitIfNeeded(new Runnable(){
    @Override public void run(){
      ApplicationImpl application=(ApplicationImpl)ApplicationManager.getApplication();
      application.setDisposeInProgress(true);
      LightPlatformTestCase.disposeApplication();
      UIUtil.dispatchAllInvocationEvents();
      System.out.println(application.writeActionStatistics());
      System.out.println(ActionUtil.ACTION_UPDATE_PAUSES.statistics());
    }
  }
);
  try {
    LeakHunter.checkProjectLeak();
    Disposer.assertIsEmpty(true);
  }
 catch (  Exception e) {
    captureMemorySnapshot();
    throw e;
  }
}
