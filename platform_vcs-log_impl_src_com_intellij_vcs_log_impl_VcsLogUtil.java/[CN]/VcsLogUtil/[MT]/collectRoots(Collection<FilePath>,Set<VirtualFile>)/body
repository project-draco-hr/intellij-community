{
  Set<VirtualFile> selectedRoots=new HashSet<VirtualFile>();
  for (  FilePath filePath : files) {
    VirtualFile candidateAncestorRoot=null;
    VirtualFile virtualFile=filePath.getVirtualFile();
    if (virtualFile != null) {
      if (roots.contains(virtualFile)) {
        selectedRoots.add(virtualFile);
      }
      for (      VirtualFile root : roots) {
        if (root.equals(virtualFile))         continue;
        if (VfsUtilCore.isAncestor(root,virtualFile,false)) {
          if (candidateAncestorRoot == null || VfsUtilCore.isAncestor(candidateAncestorRoot,root,false)) {
            candidateAncestorRoot=root;
          }
        }
 else         if (VfsUtilCore.isAncestor(virtualFile,root,false)) {
          selectedRoots.add(root);
        }
      }
    }
 else {
      VirtualFile virtualFileParent=ChangesUtil.findValidParentAccurately(filePath);
      if (virtualFileParent != null) {
        for (        VirtualFile root : roots) {
          if (root.equals(virtualFileParent)) {
            candidateAncestorRoot=virtualFileParent;
            break;
          }
          if (VfsUtilCore.isAncestor(root,virtualFileParent,false)) {
            if (candidateAncestorRoot == null || VfsUtilCore.isAncestor(candidateAncestorRoot,root,false)) {
              candidateAncestorRoot=root;
            }
          }
        }
      }
    }
    if (candidateAncestorRoot != null) {
      selectedRoots.add(candidateAncestorRoot);
    }
  }
  return selectedRoots;
}
