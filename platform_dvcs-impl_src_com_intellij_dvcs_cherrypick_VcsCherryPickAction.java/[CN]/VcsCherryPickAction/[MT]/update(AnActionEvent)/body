{
  super.update(e);
  e.getPresentation().setVisible(true);
  final VcsLog log=e.getData(VcsLogDataKeys.VCS_LOG);
  Project project=getEventProject(e);
  if (project == null || log == null || !logHasSupportedCherryPickers(project,log)) {
    e.getPresentation().setEnabledAndVisible(false);
    return;
  }
  final List<VcsFullCommitDetails> details=log.getSelectedDetails();
  final VcsCherryPicker[] cherryPickers=Extensions.getExtensions(VcsCherryPicker.EXTENSION_POINT_NAME,project);
  VcsCherryPicker enabledCherryPicker=ContainerUtil.find(cherryPickers,new Condition<VcsCherryPicker>(){
    @Override public boolean value(    VcsCherryPicker picker){
      return picker.isEnabled(log,details);
    }
  }
);
  e.getPresentation().setEnabled(enabledCherryPicker != null);
  e.getPresentation().setText(enabledCherryPicker == null ? NAME : enabledCherryPicker.getPreferredActionTitle());
}
