{
  final GitRebaseLineListener.Result result=resultListener.getResult();
  String messageId;
  String message=null;
  boolean isError=true;
switch (result.status) {
case CONFLICT:
    messageId="rebase.result.conflict";
  break;
case ERROR:
messageId="rebase.result.error";
message=commandResult.getErrorOutputAsHtmlString();
break;
case CANCELLED:
exceptions.clear();
return;
case EDIT:
isError=false;
messageId="rebase.result.amend";
break;
case FINISHED:
isError=false;
messageId="rebase.result.success";
if (noopSituation) {
message="Current branch was reset to the base branch";
}
break;
default :
throw new IllegalStateException("Unsupported rebase result: " + result.status);
}
String title=GitBundle.message(messageId + ".title");
if (message == null) {
message=GitBundle.message(messageId,result.current,result.total);
}
if (isError) {
VcsNotifier.getInstance(project).notifyError(title,message);
}
 else {
VcsNotifier.getInstance(project).notifySuccess(title,message);
}
}
