{
  final ByteBuf notEmptyContent;
  if (content.isReadable()) {
    content.retain();
    notEmptyContent=content;
    notEmptyContent.touch();
  }
 else {
    notEmptyContent=null;
  }
  try {
    if (getProcessHandler().has()) {
      fastCgiRequest.writeToServerChannel(notEmptyContent,getProcessChannel());
    }
 else {
      getProcessHandler().get().done(new Consumer<OSProcessHandler>(){
        @Override public void consume(        OSProcessHandler osProcessHandler){
          fastCgiRequest.writeToServerChannel(notEmptyContent,getProcessChannel());
        }
      }
).rejected(new Consumer<Throwable>(){
        @Override public void consume(        Throwable error){
          Promise.logError(LOG,error);
          handleError(fastCgiRequest,notEmptyContent);
        }
      }
);
    }
  }
 catch (  Throwable e) {
    LOG.error(e);
    handleError(fastCgiRequest,notEmptyContent);
  }
}
