{
  List<ProcessInfo> result=ContainerUtil.newArrayList();
  String[] lines=StringUtil.splitByLinesDontTrim(output);
  if (lines.length < 1)   return null;
  String header=lines[0];
  int commandLineI=header.indexOf("CommandLine");
  if (commandLineI == -1)   return null;
  int processIdI=header.indexOf("ProcessId");
  if (processIdI == -1)   return null;
  for (int i=1; i < lines.length; i++) {
    String line=lines[i];
    int pid=StringUtil.parseInt(line.substring(processIdI,line.length()).trim(),-1);
    if (pid == -1 || pid == 0)     continue;
    String name=line.substring(0,commandLineI).trim();
    if (name.isEmpty())     continue;
    String commandLine=line.substring(commandLineI,processIdI).trim();
    String args="";
    int nameIndex=StringUtil.indexOfIgnoreCase(commandLine,name,0);
    if (nameIndex != -1) {
      args=commandLine.substring(nameIndex + name.length()).trim();
    }
    result.add(new ProcessInfo(pid,name,args));
  }
  return result.isEmpty() ? ProcessInfo.EMPTY_ARRAY : result.toArray(new ProcessInfo[result.size()]);
}
