{
  assertTrue(EventQueue.isDispatchThread());
  IdeEventQueue ideEventQueue=IdeEventQueue.getInstance();
  EventQueue eventQueue=Toolkit.getDefaultToolkit().getSystemEventQueue();
  assertSame(ideEventQueue,eventQueue);
  PlatformTestUtil.dispatchAllEventsInIdeEventQueue();
  int posted=ideEventQueue.myKeyboardEventsPosted.get();
  int dispatched=ideEventQueue.myKeyboardEventsDispatched.get();
  KeyEvent pressX=new KeyEvent(new JLabel(),KeyEvent.KEY_PRESSED,1,InputEvent.ALT_DOWN_MASK,11,'x');
  eventQueue.postEvent(pressX);
  assertEquals(posted + 1,ideEventQueue.myKeyboardEventsPosted.get());
  assertEquals(dispatched,ideEventQueue.myKeyboardEventsDispatched.get());
  assertEquals(pressX,PlatformTestUtil.dispatchNextEventIfAny(ideEventQueue));
  assertEquals(posted + 1,ideEventQueue.myKeyboardEventsPosted.get());
  assertEquals(dispatched + 1,ideEventQueue.myKeyboardEventsDispatched.get());
  dispatchAllInvocationEventsOnly(ideEventQueue);
  MouseEvent mouseClick=new MouseEvent(new JLabel(),MouseEvent.BUTTON1,1,InputEvent.BUTTON1_DOWN_MASK,12,14,1,true);
  eventQueue.postEvent(mouseClick);
  assertEquals(posted + 1,ideEventQueue.myKeyboardEventsPosted.get());
  assertEquals(dispatched + 1,ideEventQueue.myKeyboardEventsDispatched.get());
  assertEquals(mouseClick,PlatformTestUtil.dispatchNextEventIfAny(ideEventQueue));
  assertEquals(posted + 1,ideEventQueue.myKeyboardEventsPosted.get());
  assertEquals(dispatched + 1,ideEventQueue.myKeyboardEventsDispatched.get());
  dispatchAllInvocationEventsOnly(ideEventQueue);
  KeyEvent keyRelease=new KeyEvent(new JLabel(),KeyEvent.KEY_RELEASED,1,InputEvent.ALT_DOWN_MASK,11,'x');
  eventQueue.postEvent(keyRelease);
  assertEquals(posted + 2,ideEventQueue.myKeyboardEventsPosted.get());
  assertEquals(dispatched + 1,ideEventQueue.myKeyboardEventsDispatched.get());
  assertEquals(keyRelease,PlatformTestUtil.dispatchNextEventIfAny(ideEventQueue));
  assertEquals(posted + 2,ideEventQueue.myKeyboardEventsPosted.get());
  assertEquals(dispatched + 2,ideEventQueue.myKeyboardEventsDispatched.get());
  dispatchAllInvocationEventsOnly(ideEventQueue);
}
