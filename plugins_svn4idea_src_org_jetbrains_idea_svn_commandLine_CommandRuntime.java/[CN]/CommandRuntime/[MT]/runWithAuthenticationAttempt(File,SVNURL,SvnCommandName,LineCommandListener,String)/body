{
  try {
    writeIdeaConfig2SubversionConfig(repositoryUrl);
    File configDir=myAuthCallback.getSpecialConfigDir();
    String[] originalParameters=Arrays.copyOf(parameters,parameters.length);
    while (true) {
      final String exePath=SvnApplicationSettings.getInstance().getCommandLinePath();
      final SvnLineCommand command=runCommand(exePath,commandName,listener,workingDirectory,configDir,parameters,originalParameters);
      final Integer exitCode=command.getExitCodeReference();
      if (exitCode == null || exitCode != 0) {
        logNullExitCode(command,exitCode);
        if (command.getError().length() > 0) {
          final String errText=command.getError().toString().trim();
          final AuthCallbackCase callback=createCallback(errText,repositoryUrl);
          if (callback != null) {
            cleanup(exePath,command,workingDirectory);
            if (callback.getCredentials(errText)) {
              if (myAuthCallback.getSpecialConfigDir() != null) {
                configDir=myAuthCallback.getSpecialConfigDir();
              }
              parameters=updateParameters(callback,parameters);
              continue;
            }
          }
          throw new SvnBindException(errText);
        }
 else {
          if (exitCode != null) {
            throw new SvnBindException("Svn process exited with error code: " + exitCode);
          }
        }
      }
 else       if (command.getError().length() > 0) {
        SvnCommand.LOG.info("Detected warning - " + command.getError());
      }
      return command;
    }
  }
  finally {
    myAuthCallback.reset();
  }
}
