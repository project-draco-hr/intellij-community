{
  HighlightInfo errorResult=null;
  if (aClass != null && aClass.hasModifierProperty(PsiModifier.ABSTRACT) && (!(highlightElement instanceof PsiNewExpression) || !(((PsiNewExpression)highlightElement).getType() instanceof PsiArrayType))) {
    String baseClassName=aClass.getName();
    String message=JavaErrorMessages.message("abstract.cannot.be.instantiated",baseClassName);
    errorResult=HighlightInfo.newHighlightInfo(HighlightInfoType.ERROR).range(highlightElement).descriptionAndTooltip(message).create();
    final PsiMethod anyAbstractMethod=ClassUtil.getAnyAbstractMethod(aClass);
    if (!aClass.isInterface() && anyAbstractMethod == null) {
      QuickFixAction.registerQuickFixAction(errorResult,QUICK_FIX_FACTORY.createModifierListFix(aClass,PsiModifier.ABSTRACT,false,false));
    }
    if (anyAbstractMethod != null && highlightElement instanceof PsiNewExpression && ((PsiNewExpression)highlightElement).getClassReference() != null) {
      QuickFixAction.registerQuickFixAction(errorResult,QUICK_FIX_FACTORY.createImplementAbstractClassMethodsFix(highlightElement));
    }
  }
  return errorResult;
}
