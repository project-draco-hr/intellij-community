{
  if (!super.isInContext(file,offset)) {
    return false;
  }
  final ElementPattern<PsiElement> illegalPattern=or(psiElement().inside(JsonStringLiteral.class),psiElement().inside(psiElement(JsonValue.class).with(new PatternCondition<PsiElement>("insidePropertyKey"){
    @Override public boolean accepts(    @NotNull PsiElement element,    ProcessingContext context){
      return JsonPsiUtil.isPropertyKey(element);
    }
  }
)));
  return !illegalPattern.accepts(file.findElementAt(offset));
}
