{
  Processor<Project> isReallyLeak=new Processor<Project>(){
    @Override public boolean process(    Project project){
      return !project.isDefault() && !((ProjectImpl)project).isLight();
    }
  }
;
  Collection<Object> roots=new ArrayList<Object>(Arrays.asList(ApplicationManager.getApplication(),Extensions.getRootArea()));
  ClassLoader classLoader=LeakHunter.class.getClassLoader();
  Vector<Class> allLoadedClasses=ReflectionUtil.getField(classLoader.getClass(),classLoader,Vector.class,"classes");
  roots.addAll(allLoadedClasses);
  checkLeak(roots,ProjectImpl.class,isReallyLeak);
}
