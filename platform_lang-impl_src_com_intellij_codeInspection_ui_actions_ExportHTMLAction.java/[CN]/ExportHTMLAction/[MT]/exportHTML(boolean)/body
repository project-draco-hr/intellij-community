{
  ExportToHTMLDialog exportToHTMLDialog=new ExportToHTMLDialog(myView.getProject(),exportToHTML);
  final ExportToHTMLSettings exportToHTMLSettings=ExportToHTMLSettings.getInstance(myView.getProject());
  if (exportToHTMLSettings.OUTPUT_DIRECTORY == null) {
    exportToHTMLSettings.OUTPUT_DIRECTORY=PathManager.getHomePath() + File.separator + "inspections";
  }
  exportToHTMLDialog.reset();
  if (!exportToHTMLDialog.showAndGet()) {
    return;
  }
  exportToHTMLDialog.apply();
  final String outputDirectoryName=exportToHTMLSettings.OUTPUT_DIRECTORY;
  ApplicationManager.getApplication().invokeLater(new Runnable(){
    @Override public void run(){
      final Runnable exportRunnable=new Runnable(){
        @Override public void run(){
          ApplicationManager.getApplication().runReadAction(new Runnable(){
            @Override public void run(){
              if (!exportToHTML) {
                dump2xml(outputDirectoryName);
              }
 else {
                try {
                  new InspectionTreeHtmlWriter(myView.getTree(),outputDirectoryName);
                }
 catch (                ProcessCanceledException e) {
                }
              }
            }
          }
);
        }
      }
;
      if (!ProgressManager.getInstance().runProcessWithProgressSynchronously(exportRunnable,InspectionsBundle.message(exportToHTML ? "inspection.generating.html.progress.title" : "inspection.generating.xml.progress.title"),true,myView.getProject())) {
        return;
      }
      if (exportToHTML && exportToHTMLSettings.OPEN_IN_BROWSER) {
        BrowserUtil.browse(new File(exportToHTMLSettings.OUTPUT_DIRECTORY,"index.html"));
      }
    }
  }
);
}
