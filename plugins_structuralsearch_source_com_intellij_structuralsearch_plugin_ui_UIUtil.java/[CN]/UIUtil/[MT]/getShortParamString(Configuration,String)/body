{
  if (config == null)   return "";
  final MatchOptions options=config.getMatchOptions();
  MatchVariableConstraint constraint=options == null ? null : options.getVariableConstraint(varname);
  NamedScriptableDefinition namedScriptableDefinition=constraint;
  ReplacementVariableDefinition replacementVariableDefinition=config instanceof ReplaceConfiguration ? ((ReplaceConfiguration)config).getOptions().getVariableDefinition(varname) : null;
  if (replacementVariableDefinition != null)   namedScriptableDefinition=replacementVariableDefinition;
  if (constraint == null && replacementVariableDefinition == null) {
    return SSRBundle.message("no.constraints.specified.tooltip.message");
  }
  StringBuffer buf=new StringBuffer();
  if (constraint != null) {
    if (constraint.getRegExp() != null && constraint.getRegExp().length() > 0) {
      append(buf,SSRBundle.message("text.tooltip.message",constraint.isInvertRegExp() ? SSRBundle.message("not.tooltip.message") : "",constraint.getRegExp(),constraint.isWithinHierarchy() || constraint.isStrictlyWithinHierarchy() ? SSRBundle.message("within.hierarchy.tooltip.message") : ""));
    }
    if (constraint.getNameOfExprType() != null && constraint.getNameOfExprType().length() > 0) {
      append(buf,SSRBundle.message("exprtype.tooltip.message",constraint.isInvertExprType() ? SSRBundle.message("not.tooltip.message") : "",constraint.getNameOfExprType(),constraint.isExprTypeWithinHierarchy() ? SSRBundle.message("within.hierarchy.tooltip.message") : ""));
    }
    if (constraint.getMinCount() == constraint.getMaxCount()) {
      append(buf,SSRBundle.message("occurs.tooltip.message",constraint.getMinCount()));
    }
 else {
      append(buf,SSRBundle.message("min.occurs.tooltip.message",constraint.getMinCount(),constraint.getMaxCount() == Integer.MAX_VALUE ? StringUtil.decapitalize(SSRBundle.message("editvarcontraints.unlimited")) : constraint.getMaxCount()));
    }
  }
  final String script=namedScriptableDefinition.getScriptCodeConstraint();
  if (script != null && script.length() > 2) {
    final String str=SSRBundle.message("script.tooltip.message",StringUtil.stripQuotesAroundValue(script));
    append(buf,str);
  }
  return buf.toString();
}
