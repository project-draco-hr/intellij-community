{
  if (element != null) {
    String text;
    if (element instanceof PsiMethod || element instanceof PsiVariable || element instanceof PsiClass) {
      final StringBuffer buf=new StringBuffer();
      if (element instanceof PsiMethod) {
        final PsiMethod method=(PsiMethod)element;
        final PsiClass clazz=method.getContainingClass();
        if (method.hasModifierProperty(PsiModifier.STATIC)) {
          buf.append(clazz.getName()).append(".");
        }
 else         if (method.getReturnType() == null) {
          buf.append("new ");
        }
 else {
          buf.append("'instance?:[exprtype( *").append(clazz.getName()).append(" )]").append(".");
        }
        buf.append(method.getName()).append('(');
        final PsiParameter[] params=method.getParameterList().getParameters();
        for (int i=0; i < params.length; ++i) {
          if (i != 0)           buf.append(',');
          buf.append("'param").append(i + 1).append(":[exprtype( *").append(params[i].getType().getPresentableText()).append(" )]");
        }
        buf.append(")");
      }
 else       if (element instanceof PsiVariable) {
        final PsiVariable var=(PsiVariable)element;
        if (var instanceof PsiField) {
          final PsiClass clazz=(PsiClass)var.getParent();
          if (var.hasModifierProperty(PsiModifier.STATIC)) {
            buf.append(clazz.getName());
          }
 else {
            buf.append("'instance?:[exprtype( *").append(clazz.getName()).append(" )]");
          }
          buf.append('.');
        }
        buf.append(var.getName());
      }
 else {
        PsiClass clazz=(PsiClass)element;
        buf.append("'").append(clazz.getName()).append(":").append(clazz.getName());
      }
      text=buf.toString();
    }
 else {
      text=element.getText();
      if (text == null)       return "";
    }
    return text;
  }
  return "";
}
