{
  int headerLength=lineSeparatorIfPrependXmlProlog == null ? 0 : XML_PROLOG.length + lineSeparatorIfPrependXmlProlog.getSeparatorBytes().length;
  if (result.getLength() != (headerLength + content.size())) {
    return false;
  }
  byte[] oldContent=result.contentsToByteArray();
  if (lineSeparatorIfPrependXmlProlog != null && (!ArrayUtil.startsWith(oldContent,XML_PROLOG) || !ArrayUtil.startsWith(oldContent,XML_PROLOG.length,lineSeparatorIfPrependXmlProlog.getSeparatorBytes()))) {
    return false;
  }
  for (int i=headerLength; i < oldContent.length; i++) {
    if (oldContent[i] != content.getInternalBuffer()[i - headerLength]) {
      return false;
    }
  }
  return true;
}
