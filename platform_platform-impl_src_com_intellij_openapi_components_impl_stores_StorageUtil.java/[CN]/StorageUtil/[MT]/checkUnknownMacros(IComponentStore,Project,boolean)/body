{
  List<TrackingPathMacroSubstitutor> substitutors;
  if (store instanceof IProjectStore) {
    substitutors=((IProjectStore)store).getSubstitutors();
  }
 else {
    substitutors=Collections.emptyList();
  }
  Set<String> unknownMacros=new THashSet<String>();
  for (  TrackingPathMacroSubstitutor substitutor : substitutors) {
    unknownMacros.addAll(substitutor.getUnknownMacros(null));
  }
  if (unknownMacros.isEmpty() || showDialog && !ProjectMacrosUtil.checkMacros(project,new THashSet<String>(unknownMacros))) {
    return;
  }
  final PathMacros pathMacros=PathMacros.getInstance();
  final Set<String> macrosToInvalidate=new THashSet<String>(unknownMacros);
  for (Iterator<String> it=macrosToInvalidate.iterator(); it.hasNext(); ) {
    String macro=it.next();
    if (StringUtil.isEmptyOrSpaces(pathMacros.getValue(macro)) && !pathMacros.isIgnoredMacroName(macro)) {
      it.remove();
    }
  }
  if (macrosToInvalidate.isEmpty()) {
    return;
  }
  Set<String> components=new THashSet<String>();
  for (  TrackingPathMacroSubstitutor substitutor : substitutors) {
    components.addAll(substitutor.getComponents(macrosToInvalidate));
  }
  if (store.isReloadPossible(components)) {
    for (    TrackingPathMacroSubstitutor substitutor : substitutors) {
      substitutor.invalidateUnknownMacros(macrosToInvalidate);
    }
    for (    UnknownMacroNotification notification : NotificationsManager.getNotificationsManager().getNotificationsOfType(UnknownMacroNotification.class,project)) {
      if (macrosToInvalidate.containsAll(notification.getMacros())) {
        notification.expire();
      }
    }
    store.reloadStates(components);
  }
 else   if (Messages.showYesNoDialog(project,"Component could not be reloaded. Reload project?","Configuration Changed",Messages.getQuestionIcon()) == Messages.YES) {
    ProjectManagerEx.getInstanceEx().reloadProject(project);
  }
}
