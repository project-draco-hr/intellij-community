{
  final TrackingPathMacroSubstitutor substitutor=store.getStateStorageManager().getMacroSubstitutor();
  if (substitutor == null) {
    return;
  }
  Set<String> immutableMacros=substitutor.getUnknownMacros(componentName);
  if (immutableMacros.isEmpty()) {
    return;
  }
  final Set<String> macros=new LinkedHashSet<String>(immutableMacros);
  AppUIUtil.invokeOnEdt(new Runnable(){
    @Override public void run(){
      List<String> notified=null;
      NotificationsManager manager=NotificationsManager.getNotificationsManager();
      for (      UnknownMacroNotification notification : manager.getNotificationsOfType(UnknownMacroNotification.class,project)) {
        if (notified == null) {
          notified=new SmartList<String>();
        }
        notified.addAll(notification.getMacros());
      }
      if (!ContainerUtil.isEmpty(notified)) {
        macros.removeAll(notified);
      }
      if (macros.isEmpty()) {
        return;
      }
      LOG.debug("Reporting unknown path macros " + macros + " in component "+ componentName);
      doNotify(macros,project,Collections.singletonMap(substitutor,store));
    }
  }
,project.getDisposed());
}
