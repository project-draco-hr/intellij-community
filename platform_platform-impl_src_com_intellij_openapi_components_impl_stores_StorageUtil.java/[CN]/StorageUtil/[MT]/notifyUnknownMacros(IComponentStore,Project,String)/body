{
  TrackingPathMacroSubstitutor substitutor=store.getStateStorageManager().getMacroSubstitutor();
  if (substitutor == null) {
    return;
  }
  final LinkedHashSet<String> macros=new LinkedHashSet<String>(substitutor.getUnknownMacros(componentName));
  if (macros.isEmpty()) {
    return;
  }
  AppUIUtil.invokeOnEdt(new Runnable(){
    @Override public void run(){
      List<String> notified=null;
      NotificationsManager manager=NotificationsManager.getNotificationsManager();
      for (      UnknownMacroNotification notification : manager.getNotificationsOfType(UnknownMacroNotification.class,project)) {
        if (notified == null) {
          notified=new SmartList<String>();
        }
        notified.addAll(notification.getMacros());
      }
      if (!ContainerUtil.isEmpty(notified)) {
        macros.removeAll(notified);
      }
      if (macros.isEmpty()) {
        return;
      }
      LOG.debug("Reporting unknown path macros " + macros + " in component "+ componentName);
      String format="<p><i>%s</i> %s undefined. <a href=\"define\">Fix it</a></p>";
      String productName=ApplicationNamesInfo.getInstance().getProductName();
      String content=String.format(format,StringUtil.join(macros,", "),macros.size() == 1 ? "is" : "are") + "<br>Path variables are used to substitute absolute paths " + "in "+ productName+ " project files "+ "and allow project file sharing in version control systems.<br>"+ "Some of the files describing the current project settings contain unknown path variables "+ "and "+ productName+ " cannot restore those paths.";
      new UnknownMacroNotification("Load Error","Load error: undefined path variables",content,NotificationType.ERROR,new NotificationListener(){
        @Override public void hyperlinkUpdate(        @NotNull Notification notification,        @NotNull HyperlinkEvent event){
          checkUnknownMacros(store,project,true);
        }
      }
,macros).notify(project);
    }
  }
,project.getDisposed());
}
