{
  member.accept(myExplicitSuperDeleter);
  member.accept(myThisSuperAdjuster);
  ChangeContextUtil.decodeContextInfo(member,null,null);
  member.accept(new JavaRecursiveElementWalkingVisitor(){
    @Override public void visitReferenceExpression(    PsiReferenceExpression expression){
      final PsiExpression qualifierExpression=expression.getQualifierExpression();
      if (qualifierExpression != null) {
        final Boolean preserveQualifier=qualifierExpression.getCopyableUserData(PRESERVE_QUALIFIER);
        if (preserveQualifier != null && !preserveQualifier) {
          qualifierExpression.delete();
          return;
        }
      }
      super.visitReferenceExpression(expression);
    }
  }
);
}
