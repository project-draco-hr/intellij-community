{
  final String newName=getInputName();
  if (getLocalVariable() == null && myExpr == null || newName == null || getLocalVariable() != null && !getLocalVariable().isValid() || myExpr != null && !myExpr.isValid()) {
    super.moveOffsetAfter(false);
    return false;
  }
  if (getLocalVariable() != null) {
    new WriteCommandAction(myProject,getCommandName(),getCommandName()){
      @Override protected void run(      Result result) throws Throwable {
        getLocalVariable().setName(myLocalName);
      }
    }
.execute();
  }
  if (!isIdentifier(newName,myExpr != null ? myExpr.getLanguage() : getLocalVariable().getLanguage()))   return false;
  CommandProcessor.getInstance().executeCommand(myProject,new Runnable(){
    @Override public void run(){
      final String refactoringId=getRefactoringId();
      if (refactoringId != null) {
        final RefactoringEventData beforeData=new RefactoringEventData();
        beforeData.addElements(new PsiElement[]{getLocalVariable(),getExpr()});
        myProject.getMessageBus().syncPublisher(RefactoringEventListener.REFACTORING_EVENT_TOPIC).refactoringStarted(refactoringId,beforeData);
      }
      performIntroduce();
    }
  }
,getCommandName(),getCommandName());
  V variable=getVariable();
  if (variable != null) {
    saveSettings(variable);
  }
  return false;
}
