{
  final Collection<PsiReferenceExpression> result=Collections.synchronizedList(new SmartList<PsiReferenceExpression>());
  final SearchScope searchScope=ignoreAccessScope ? GlobalSearchScope.projectScope(myProject) : getSearchScope(psiField.getContainingClass(),fieldAccessFlags);
  processIdentifiers(PsiSearchHelper.SERVICE.getInstance(myProject),new PsiElementProcessor<PsiIdentifier>(){
    @Override public boolean execute(    @NotNull PsiIdentifier identifier){
      final PsiElement parent=identifier.getParent();
      if (parent instanceof PsiReferenceExpression) {
        final PsiReferenceExpression refExpression=(PsiReferenceExpression)parent;
        if (refExpression.isReferenceTo(psiField)) {
          result.add(refExpression);
        }
      }
      return true;
    }
  }
,psiField.getName(),searchScope,UsageSearchContext.IN_CODE);
  return result;
}
