{
  ProgressIndicatorUtils.scheduleWithWriteActionPriority(new ProgressIndicatorBase(),myTaskExecutor,new ReadTask(){
    @Override public void computeInReadAction(    @NotNull ProgressIndicator indicator){
      if (DumbService.isDumb(myProject)) {
        onCanceled(indicator);
      }
 else {
        doHandleConstantSearchTask(channel,sessionId,task);
      }
    }
    @Override public void onCanceled(    @NotNull ProgressIndicator indicator){
      DumbService.getInstance(myProject).runWhenSmart(new Runnable(){
        @Override public void run(){
          handleConstantSearchTask(channel,sessionId,task);
        }
      }
);
    }
  }
);
}
