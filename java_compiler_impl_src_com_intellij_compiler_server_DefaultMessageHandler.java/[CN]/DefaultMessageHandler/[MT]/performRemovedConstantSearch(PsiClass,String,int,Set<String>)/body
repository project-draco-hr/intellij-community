{
  final PsiSearchHelper psiSearchHelper=PsiSearchHelper.SERVICE.getInstance(myProject);
  final Ref<Boolean> result=new Ref<Boolean>(Boolean.TRUE);
  processIdentifiers(psiSearchHelper,new PsiElementProcessor<PsiIdentifier>(){
    @Override public boolean execute(    @NotNull PsiIdentifier identifier){
      try {
        final PsiElement parent=identifier.getParent();
        if (parent instanceof PsiReferenceExpression) {
          final PsiClass ownerClass=getOwnerClass(parent);
          if (ownerClass != null) {
            if (ownerClass.getQualifiedName() != null) {
              affect(ownerClass,affectedPaths);
            }
          }
        }
        return true;
      }
 catch (      PsiInvalidElementAccessException ignored) {
        result.set(Boolean.FALSE);
        LOG.debug("Constant search task: PIEAE thrown while searching of usages of removed constant");
        return false;
      }
    }
  }
,fieldName,getSearchScope(aClass,fieldAccessFlags),UsageSearchContext.IN_CODE);
  return result.get();
}
