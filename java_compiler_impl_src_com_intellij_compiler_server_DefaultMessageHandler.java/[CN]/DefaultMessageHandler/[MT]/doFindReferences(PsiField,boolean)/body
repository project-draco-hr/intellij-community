{
  final SmartList<PsiReferenceExpression> result=new SmartList<>();
  final SearchScope searchScope=(ignoreAccessScope ? psiField.getContainingFile() : psiField).getUseScope();
  processIdentifiers(PsiSearchHelper.SERVICE.getInstance(myProject),new PsiElementProcessor<PsiIdentifier>(){
    @Override public boolean execute(    @NotNull PsiIdentifier identifier){
      final PsiElement parent=identifier.getParent();
      if (parent instanceof PsiReferenceExpression) {
        final PsiReferenceExpression refExpression=(PsiReferenceExpression)parent;
        if (refExpression.isReferenceTo(psiField)) {
synchronized (result) {
            result.add(refExpression);
          }
        }
      }
      return true;
    }
  }
,psiField.getName(),searchScope,UsageSearchContext.IN_CODE);
  return result;
}
