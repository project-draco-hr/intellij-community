{
  final PythonConsoleToolWindow toolWindow=PythonConsoleToolWindow.getInstance(project);
  if (toolWindow != null) {
    toolWindow.activate(new Runnable(){
      @Override public void run(){
        List<RunContentDescriptor> descs=toolWindow.getConsoleContentDescriptors();
        RunContentDescriptor descriptor=descs.get(0);
        if (descriptor != null && descriptor.getExecutionConsole() instanceof PyCodeExecutor) {
          consumer.consume((PyCodeExecutor)descriptor.getExecutionConsole());
        }
      }
    }
);
  }
 else {
    PythonConsoleRunnerFactory consoleRunnerFactory=PythonConsoleRunnerFactory.getInstance();
    PydevConsoleRunner runner=consoleRunnerFactory.createConsoleRunner(project,null);
    runner.addConsoleListener(new PydevConsoleRunner.ConsoleListener(){
      @Override public void handleConsoleInitialized(      LanguageConsoleView consoleView){
        if (consoleView instanceof PyCodeExecutor) {
          consumer.consume((PyCodeExecutor)consoleView);
        }
      }
    }
);
    runner.run();
  }
}
