{
  StringBuilder stringBuilder=new StringBuilder("\"");
  final String[] sections=stringLiteralExpression.getStringValue().split("%");
  for (int pos=1; pos < sections.length; ++pos) {
    String s=sections[pos];
    int index=0;
    char c=s.charAt(index);
    if (c == '%') {
      stringBuilder.append('%');
      break;
    }
    stringBuilder.append("{");
    final int length=s.length();
    if (c == '(') {
      index=s.indexOf(')');
      stringBuilder.append(s.substring(1,index));
      ++index;
    }
 else {
      stringBuilder.append(pos - 1);
    }
    StringBuilder standartFormat=new StringBuilder();
    while (FORMAT_FLAGS.indexOf(s.charAt(index)) >= 0) {
      standartFormat.append(s.charAt(index));
      ++index;
    }
    if (Character.isDigit(s.charAt(index)) || c == '*') {
      int tmp=index;
      while (index < length && Character.isDigit(s.charAt(index))) {
        ++index;
      }
      standartFormat.append(s.substring(tmp,index));
    }
    if (s.charAt(index) == '.') {
      int tmp=index;
      ++index;
      while (index < length && Character.isDigit(s.charAt(index))) {
        ++index;
      }
      standartFormat.append(s.substring(tmp,index));
    }
    if (index < length && FORMAT_LENGTH.indexOf(s.charAt(index)) != -1) {
      ++index;
    }
    if (FORMAT_CONVERSIONS.contains(s.charAt(index))) {
      c=s.charAt(index);
      if (c == 'r' || c == 's') {
        stringBuilder.append("!").append(c);
      }
 else {
        if (c == 'i' || c == 'u') {
          standartFormat.append('d');
        }
 else {
          standartFormat.append(c);
        }
      }
      ++index;
    }
    if (standartFormat.length() != 0) {
      stringBuilder.append(":").append(standartFormat);
    }
    stringBuilder.append("}");
    if (s.length() >= index) {
      final String substring=s.substring(index).replace("{","{{").replace("}","}}");
      stringBuilder.append(StringUtil.escapeStringCharacters(substring));
    }
  }
  stringBuilder.append("\"");
  return stringBuilder.toString();
}
