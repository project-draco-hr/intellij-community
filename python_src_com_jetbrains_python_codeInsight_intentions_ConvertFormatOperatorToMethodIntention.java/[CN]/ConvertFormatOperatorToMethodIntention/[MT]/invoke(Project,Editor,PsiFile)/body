{
  PyBinaryExpression element=PsiTreeUtil.getParentOfType(file.findElementAt(editor.getCaretModel().getOffset()),PyBinaryExpression.class,false);
  PyElementGenerator elementGenerator=PyElementGenerator.getInstance(project);
  final PyExpression rightExpression=element.getRightExpression();
  if (rightExpression == null) {
    return;
  }
  String text="";
  if (rightExpression instanceof PyParenthesizedExpression) {
    final PyExpression containedExpression=((PyParenthesizedExpression)rightExpression).getContainedExpression();
    if (containedExpression != null) {
      text=containedExpression.getText();
    }
  }
 else {
    text=rightExpression.getText();
  }
  String targetText=convertFormat((PyStringLiteralExpression)element.getLeftExpression()) + ".format(" + text+ ")";
  element.replace(elementGenerator.createExpressionFromText(targetText));
}
