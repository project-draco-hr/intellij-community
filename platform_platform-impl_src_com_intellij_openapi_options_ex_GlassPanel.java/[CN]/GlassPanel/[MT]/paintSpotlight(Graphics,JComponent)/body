{
  Dimension size=surfaceComponent.getSize();
  if (myLightComponents.size() > 0) {
    int width=size.width - 1;
    int height=size.height - 1;
    Rectangle2D screen=new Rectangle2D.Double(0,0,width,height);
    final Rectangle visibleRect=myPanel.getVisibleRect();
    final Point leftPoint=SwingUtilities.convertPoint(myPanel,new Point(visibleRect.x,visibleRect.y),surfaceComponent);
    Area innerPanel=new Area(new Rectangle2D.Double(leftPoint.x,leftPoint.y,visibleRect.width,visibleRect.height));
    Area mask=new Area(screen);
    ArrayList<JComponent> components=new ArrayList<JComponent>();
    for (    JComponent lightComponent : myLightComponents) {
      final Area area=getComponentArea(surfaceComponent,lightComponent,1);
      if (area == null)       continue;
      components.add(lightComponent);
      if (lightComponent instanceof JLabel) {
        final JLabel label=(JLabel)lightComponent;
        final Component labelFor=label.getLabelFor();
        if (labelFor instanceof JComponent) {
          final Area labelForArea=getComponentArea(surfaceComponent,(JComponent)labelFor,1);
          if (labelForArea != null) {
            components.add((JComponent)labelFor);
            area.add(labelForArea);
          }
        }
      }
      area.intersect(innerPanel);
      mask.subtract(area);
    }
    Graphics2D g2=(Graphics2D)g;
    Color shieldColor=new Color(0.0f,0.0f,0.0f,0.20f);
    Color boundsColor=Color.gray;
    g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING,RenderingHints.VALUE_ANTIALIAS_ON);
    g2.setColor(shieldColor);
    g2.fill(mask);
    g2.setColor(ColorUtil.toAlpha(Color.orange,25));
    GraphicsConfig config=GraphicsUtil.setupAAPainting(g2);
    for (int i=2; i > 0; i--) {
      g2.setStroke(new BasicStroke(i));
      Area arrr=new Area();
      for (      JComponent component : components) {
        Area area=getComponentArea(surfaceComponent,component,i - 1);
        if (area != null) {
          arrr.add(area);
        }
      }
      g2.draw(arrr);
    }
    config.restore();
  }
}
