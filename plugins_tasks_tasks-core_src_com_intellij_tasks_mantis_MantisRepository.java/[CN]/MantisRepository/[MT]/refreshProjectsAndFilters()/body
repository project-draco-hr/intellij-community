{
  MantisConnectPortType soap=createSoap();
  myAllProjectsAvailable=checkAllProjectsAvailable(soap);
  myProjects=new ArrayList<MantisProject>();
  ProjectData[] projectDatas=soap.mc_projects_get_user_accessible(getUsername(),getPassword());
  List<MantisProject> projects=new ArrayList<MantisProject>(ContainerUtil.map(projectDatas,new Function<ProjectData,MantisProject>(){
    @Override public MantisProject fun(    final ProjectData data){
      return new MantisProject(data.getId().intValue(),data.getName());
    }
  }
));
  List<MantisFilter> commonFilters=new LinkedList<MantisFilter>();
  for (  MantisProject project : projects) {
    FilterData[] filterDatas=soap.mc_filter_get(getUsername(),getPassword(),bigInteger(project.getId()));
    List<MantisFilter> projectFilters=new LinkedList<MantisFilter>();
    for (    FilterData data : filterDatas) {
      MantisFilter filter=new MantisFilter(data.getId().intValue(),data.getName());
      if (data.getProject_id().intValue() == 0) {
        commonFilters.add(filter);
      }
      projectFilters.add(filter);
    }
    projectFilters.add(0,MantisFilter.newUndefined());
    project.setFilters(projectFilters);
    myProjects.add(project);
  }
  Collections.sort(commonFilters);
  commonFilters.add(0,MantisFilter.newUndefined());
  MantisProject undefined=MantisProject.newUndefined();
  undefined.setFilters(commonFilters);
  myProjects.add(0,undefined);
}
