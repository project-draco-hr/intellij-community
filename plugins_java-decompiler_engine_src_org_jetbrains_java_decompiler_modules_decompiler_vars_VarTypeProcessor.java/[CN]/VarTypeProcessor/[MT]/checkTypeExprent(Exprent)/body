{
  for (  Exprent expr : exprent.getAllExprents()) {
    if (!checkTypeExprent(expr)) {
      return false;
    }
  }
  if (exprent.type == Exprent.EXPRENT_CONST) {
    ConstExprent cexpr=(ConstExprent)exprent;
    if (cexpr.getConsttype().type_family <= CodeConstants.TYPE_FAMILY_INTEGER) {
      VarVersionPaar cpaar=new VarVersionPaar(cexpr.id,-1);
      if (!mapExprentMinTypes.containsKey(cpaar)) {
        mapExprentMinTypes.put(cpaar,cexpr.getConsttype());
      }
    }
  }
  CheckTypesResult result=exprent.checkExprTypeBounds();
  for (  CheckTypesResult.ExprentTypePair entry : result.getLstMaxTypeExprents()) {
    if (entry.type.type_family != CodeConstants.TYPE_FAMILY_OBJECT) {
      changeExprentType(entry.exprent,entry.type,1);
    }
  }
  boolean res=true;
  for (  CheckTypesResult.ExprentTypePair entry : result.getLstMinTypeExprents()) {
    res&=changeExprentType(entry.exprent,entry.type,0);
  }
  return res;
}
