{
  if (isDisposed() || changes.isEmpty()) {
    return;
  }
  if (changes.size() > 1) {
    ContainerUtil.sort(changes,new Comparator<TemplateDocumentChange>(){
      @Override public int compare(      TemplateDocumentChange o1,      TemplateDocumentChange o2){
        int startDiff=o2.startOffset - o1.startOffset;
        return startDiff != 0 ? startDiff : o2.endOffset - o1.endOffset;
      }
    }
);
  }
  Ref<Integer> minimumSegmentNumber=Ref.create(null);
  DocumentUtil.executeInBulk(myDocument,true,new Runnable(){
    @Override public void run(){
      for (      TemplateDocumentChange change : changes) {
        minimumSegmentNumber.set(minimumSegmentNumber.isNull() ? change.segmentNumber : Math.min(change.segmentNumber,minimumSegmentNumber.get()));
        replaceString(change.newValue,change.startOffset,change.endOffset,change.segmentNumber);
      }
    }
  }
);
  if (!minimumSegmentNumber.isNull()) {
    fixOverlappedSegments(minimumSegmentNumber.get());
  }
}
