{
  Set<String> namesAlready=context.get(CTX_NAMES);
  if (namesAlready == null) {
    namesAlready=new HashSet<String>();
  }
  List<Object> ret=new ArrayList<Object>();
  Condition<String> underscoreFilter=new PyUtil.UnderscoreFilter(PyUtil.getInitialUnderscores(referenceExpression.getName()));
  for (  PyClassMembersProvider provider : Extensions.getExtensions(PyClassMembersProvider.EP_NAME)) {
    for (    PyDynamicMember member : provider.getMembers(myClass)) {
      final String name=member.getName();
      if (underscoreFilter.value(name) || provider.hasUnderscoreWildCard(name)) {
        ret.add(LookupElementBuilder.create(name).setIcon(member.getIcon()).setTypeText(member.getShortType()));
      }
    }
  }
  addOwnClassMembers(referenceExpression,namesAlready,ret,underscoreFilter);
  addInheritedMembers(referenceExpression,context,ret);
  return ret.toArray();
}
