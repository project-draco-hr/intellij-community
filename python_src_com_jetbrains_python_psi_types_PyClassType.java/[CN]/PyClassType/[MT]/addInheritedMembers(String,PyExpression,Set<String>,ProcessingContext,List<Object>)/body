{
  if (myClass == null) {
    return;
  }
  for (  PyClass ancestor : myClass.getSuperClasses()) {
    Object[] ancestry=(new PyClassType(ancestor,myIsDefinition)).getCompletionVariants(name,expressionHook,context);
    for (    Object ob : ancestry) {
      String inheritedName=ob.toString();
      if (!namesAlready.contains(inheritedName) && !isClassPrivate(inheritedName)) {
        ret.add(ob);
        namesAlready.add(inheritedName);
      }
    }
    ContainerUtil.addAll(ret,ancestry);
  }
}
