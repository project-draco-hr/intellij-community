{
  final PyResolveUtil.VariantsProcessor processor=new PyResolveUtil.VariantsProcessor(new PyResolveUtil.FilterNotInstance(myClass));
  myClass.processDeclarations(processor,ResolveState.initial(),null,referenceExpression);
  List<Object> ret=new ArrayList<Object>();
  ret.addAll(processor.getResultList());
  for (  PyClass ancestor : myClass.getSuperClasses()) {
    ret.addAll(Arrays.asList((new PyClassType(ancestor,true)).getCompletionVariants(referenceExpression)));
  }
  return ret.toArray();
}
