{
  for (  PyClass ancestor : myClass.getSuperClasses()) {
    Object[] ancestry=(new PyClassType(ancestor,true)).getCompletionVariants(name,expressionHook,context);
    for (    Object ob : ancestry) {
      if (!isClassPrivate(ob.toString()))       ret.add(ob);
    }
    ContainerUtil.addAll(ret,ancestry);
  }
}
