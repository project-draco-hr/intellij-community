{
  if (!PROTOCOL_ID.equals(protocolId)) {
    return Collections.emptyList();
  }
  final List<String> list=StringUtil.split(path,".");
  if (list.isEmpty()) {
    return Collections.emptyList();
  }
  final int listSize=list.size();
  if (listSize == 2) {
    final List<Location> classes=PythonUnitTestUtil.findLocations(project,list.get(0),list.get(1),null);
    if (classes.size() > 0)     return classes;
    final List<Location> functions=PythonUnitTestUtil.findLocations(project,list.get(0),null,list.get(1));
    if (functions.size() > 0)     return functions;
  }
  if (listSize > 2) {
    final String className=list.get(listSize - 2);
    final String methodName=list.get(listSize - 1);
    String fileName=list.get(listSize - 3);
    List<Location> locations=PythonUnitTestUtil.findLocations(project,fileName,className,methodName);
    if (locations.size() > 0) {
      return locations;
    }
    locations=PythonUnitTestUtil.findLocations(project,list.get(listSize - 2),list.get(listSize - 1),null);
    if (locations.size() > 0) {
      return locations;
    }
    final List<Location> functions=PythonUnitTestUtil.findLocations(project,list.get(listSize - 2),null,list.get(listSize - 1));
    if (functions.size() > 0)     return functions;
  }
  return PythonUnitTestUtil.findLocations(project,project.getBasePath() + "/" + StringUtil.join(list,"/")+ ".py",null,null);
}
