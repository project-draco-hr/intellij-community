{
  final PsiMethod psiMethod=((MethodCandidateInfo)conflict).getElement();
  final PsiSubstitutor substitutor=((MethodCandidateInfo)conflict).getSubstitutor(false);
  final PsiType[] parameterTypes=psiMethod.getSignature(substitutor).getParameterTypes();
  final boolean varargs=((MethodCandidateInfo)conflict).isVarargs();
  if (varargs && (!psiMethod.isVarArgs() || functionalMethodVarArgs)) {
    return null;
  }
  if ((varargs || argTypes.length == parameterTypes.length) && PsiMethodReferenceUtil.isCorrectAssignment(parameterTypes,argTypes,varargs,0)) {
    return true;
  }
  if (hasReceiver && (varargs || argTypes.length == parameterTypes.length + 1) && PsiMethodReferenceUtil.isCorrectAssignment(parameterTypes,argTypes,varargs,1)) {
    return false;
  }
  return null;
}
