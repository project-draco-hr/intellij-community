{
  if (member == null && to instanceof PsiArrayType && TypeConversionUtil.isAssignable(((PsiArrayType)to).getComponentType(),from)) {
    TypeConversionDescriptor wrapDescription=new TypeConversionDescriptor("$qualifier$","new " + from.getCanonicalText() + "[]{$qualifier$}",context);
    if (((PsiArrayType)to).getComponentType() instanceof PsiClassType && from instanceof PsiPrimitiveType) {
      final String boxedTypeName=((PsiPrimitiveType)from).getBoxedTypeName();
      final String normalizedArrayInitializer=PsiUtil.getLanguageLevel(context).hasEnumKeywordAndAutoboxing() ? "$qualifier$" : boxedTypeName + ".valueOf($qualifier$)";
      wrapDescription=new TypeConversionDescriptor("$qualifier$","new " + boxedTypeName + "[]{"+ normalizedArrayInitializer+ "}",context);
    }
    final PsiElement parent=context.getParent();
    if ((context instanceof PsiLiteralExpression || context instanceof PsiReferenceExpression) && parent instanceof PsiStatement) {
      return wrapDescription;
    }
    if (parent instanceof PsiAssignmentExpression && ((PsiAssignmentExpression)parent).getRExpression() == context) {
      return wrapDescription;
    }
  }
  return null;
}
