{
  if (assignment.getOperationTokenType() != JavaTokenType.EQ)   return;
  PsiExpression lExpression=assignment.getLExpression();
  PsiExpression rExpression=assignment.getRExpression();
  if (rExpression == null)   return;
  lExpression=PsiUtil.deparenthesizeExpression(lExpression);
  if (!(lExpression instanceof PsiReferenceExpression))   return;
  PsiReferenceExpression lRef=(PsiReferenceExpression)lExpression;
  final PsiVariable variable=(PsiVariable)lRef.resolve();
  if (variable == null)   return;
  rExpression=deparenthesizeRExpr(rExpression,variable);
  PsiReferenceExpression rRef;
  if (!(rExpression instanceof PsiReferenceExpression)) {
    if (!(rExpression instanceof PsiAssignmentExpression))     return;
    final PsiAssignmentExpression rAssignmentExpression=(PsiAssignmentExpression)rExpression;
    final PsiExpression assignee=deparenthesizeRExpr(rAssignmentExpression.getLExpression(),variable);
    if (!(assignee instanceof PsiReferenceExpression))     return;
    rRef=(PsiReferenceExpression)assignee;
  }
 else {
    rRef=(PsiReferenceExpression)rExpression;
  }
  PsiManager manager=assignment.getManager();
  if (!sameInstanceReferences(lRef,rRef,manager))   return;
  holder.registerProblem(assignment,InspectionsBundle.message("assignment.to.itself.problem.descriptor",variable.getName()),ProblemHighlightType.LIKE_UNUSED_SYMBOL,createRemoveAssignmentFix());
}
