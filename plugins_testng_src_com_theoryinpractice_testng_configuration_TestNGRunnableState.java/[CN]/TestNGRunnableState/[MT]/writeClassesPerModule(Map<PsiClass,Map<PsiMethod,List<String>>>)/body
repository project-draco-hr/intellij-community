{
  if (forkPerModule()) {
    final Map<Module,List<String>> perModule=new TreeMap<Module,List<String>>(new Comparator<Module>(){
      @Override public int compare(      Module o1,      Module o2){
        return StringUtil.compare(o1.getName(),o2.getName(),true);
      }
    }
);
    for (    final PsiClass psiClass : classes.keySet()) {
      final Module module=ModuleUtilCore.findModuleForPsiElement(psiClass);
      if (module != null) {
        List<String> list=perModule.get(module);
        if (list == null) {
          list=new ArrayList<String>();
          perModule.put(module,list);
        }
        list.add(psiClass.getQualifiedName());
      }
    }
    try {
      writeClassesPerModule(getConfiguration().getPackage(),getJavaParameters(),perModule);
    }
 catch (    Exception e) {
      LOG.error(e);
    }
  }
}
