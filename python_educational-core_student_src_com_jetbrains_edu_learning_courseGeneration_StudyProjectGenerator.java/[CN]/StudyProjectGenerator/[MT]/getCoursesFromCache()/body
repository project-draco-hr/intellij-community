{
  List<CourseInfo> courses=new ArrayList<CourseInfo>();
  final File cacheFile=new File(ourCoursesDir,CACHE_NAME);
  if (!cacheFile.exists()) {
    return courses;
  }
  try {
    final FileInputStream inputStream=new FileInputStream(cacheFile);
    try {
      BufferedReader reader=new BufferedReader(new InputStreamReader(inputStream));
      try {
        String line;
        while ((line=reader.readLine()) != null) {
          Gson gson=new GsonBuilder().setFieldNamingPolicy(FieldNamingPolicy.LOWER_CASE_WITH_UNDERSCORES).create();
          final CourseInfo courseInfo=gson.fromJson(line,CourseInfo.class);
          courses.add(courseInfo);
        }
      }
 catch (      IOException e) {
        LOG.error(e.getMessage());
      }
catch (      JsonSyntaxException e) {
        LOG.error(e.getMessage());
      }
 finally {
        StudyUtils.closeSilently(reader);
      }
    }
  finally {
      StudyUtils.closeSilently(inputStream);
    }
  }
 catch (  FileNotFoundException e) {
    LOG.error(e.getMessage());
  }
  return courses;
}
