{
  myVcs=vcs;
  myLocation=location;
  setRevision(logEntry.getRevision());
  myAuthor=StringUtil.notNullize(logEntry.getAuthor());
  myDate=logEntry.getDate();
  myMessage=StringUtil.notNullize(logEntry.getMessage());
  myRepositoryRoot=UriUtil.trimTrailingSlashes(repositoryRoot);
  myCommonPathSearcher=new CommonPathSearcher();
  myKnownAsDirectories=new HashSet<>(0);
  for (  LogEntryPath entry : logEntry.getChangedPaths().values()) {
    final String path=entry.getPath();
    if (entry.isDirectory()) {
      myKnownAsDirectories.add(path);
    }
    myCommonPathSearcher.next(path);
    if (entry.getType() == 'A') {
      if (entry.getCopyPath() != null) {
        myCopiedAddedPaths.put(path,entry.getCopyPath());
      }
      myAddedPaths.add(path);
    }
 else     if (entry.getType() == 'D') {
      myDeletedPaths.add(path);
    }
 else {
      if (entry.getType() == 'R') {
        myReplacedPaths.add(path);
      }
      myChangedPaths.add(path);
    }
  }
}
