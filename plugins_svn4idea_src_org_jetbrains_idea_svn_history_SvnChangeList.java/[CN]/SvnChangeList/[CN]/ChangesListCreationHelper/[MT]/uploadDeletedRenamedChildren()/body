{
  final List<Change> detailsOnly=new ArrayList<Change>();
  final Set<Pair<Boolean,String>> duplicateControl=new HashSet<Pair<Boolean,String>>();
  for (  Change change : myDetailedList) {
    if (change.getBeforeRevision() != null) {
      duplicateControl.add(Pair.create(Boolean.TRUE,((SvnRepositoryContentRevision)change.getBeforeRevision()).getRelativePath(myRepositoryRoot)));
    }
    if (change.getAfterRevision() != null) {
      duplicateControl.add(Pair.create(Boolean.FALSE,((SvnRepositoryContentRevision)change.getAfterRevision()).getRelativePath(myRepositoryRoot)));
    }
  }
  final List<Change> preprocessed=ChangesPreprocess.preprocessChangesRemoveDeletedForDuplicateMoved(myDetailedList);
  for (  Change change : preprocessed) {
    if ((change.getAfterRevision() == null) && (change.getBeforeRevision().getFile().isDirectory())) {
      final SvnRepositoryContentRevision revision=(SvnRepositoryContentRevision)change.getBeforeRevision();
      detailsOnly.addAll(getChildrenAsChanges(revision.getRelativePath(myRepositoryRoot),true,duplicateControl));
    }
 else     if ((change.getBeforeRevision() == null) && (change.getAfterRevision().getFile().isDirectory())) {
      final SvnRepositoryContentRevision revision=(SvnRepositoryContentRevision)change.getAfterRevision();
      if (myCopiedAddedPaths.containsKey(revision.getRelativePath(myRepositoryRoot))) {
        detailsOnly.addAll(getChildrenAsChanges(revision.getRelativePath(myRepositoryRoot),false,duplicateControl));
      }
    }
 else     if ((change.isIsReplaced() || change.isMoved() || change.isRenamed()) && change.getAfterRevision().getFile().isDirectory()) {
      final SvnRepositoryContentRevision beforeRevision=(SvnRepositoryContentRevision)change.getBeforeRevision();
      detailsOnly.addAll(getChildrenAsChanges(beforeRevision.getRelativePath(myRepositoryRoot),true,duplicateControl));
      final SvnRepositoryContentRevision revision=(SvnRepositoryContentRevision)change.getAfterRevision();
      detailsOnly.addAll(getChildrenAsChanges(revision.getRelativePath(myRepositoryRoot),false,duplicateControl));
    }
  }
  myDetailedList.addAll(detailsOnly);
}
