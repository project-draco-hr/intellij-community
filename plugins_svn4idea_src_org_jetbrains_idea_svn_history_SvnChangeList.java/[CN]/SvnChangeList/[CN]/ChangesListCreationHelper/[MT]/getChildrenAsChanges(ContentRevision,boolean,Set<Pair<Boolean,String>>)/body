{
  final List<Change> result=new ArrayList<Change>();
  final String path=getRelativePath(contentRevision);
  SVNURL fullPath=SvnUtil.createUrl(((SvnRepositoryContentRevision)contentRevision).getFullPath());
  SVNRevision revisionNumber=SVNRevision.create(getRevision(isBefore));
  SvnTarget target=SvnTarget.fromURL(fullPath,revisionNumber);
  myVcs.getFactory(target).createBrowseClient().list(target,revisionNumber,SVNDepth.INFINITY,new ISVNDirEntryHandler(){
    public void handleDirEntry(    final SVNDirEntry dirEntry) throws SVNException {
      final String childPath=path + '/' + dirEntry.getRelativePath();
      if (!duplicates.contains(Pair.create(isBefore,childPath))) {
        final ContentRevision contentRevision=createRevision(childPath,isBefore,SVNNodeKind.DIR.equals(dirEntry.getKind()));
        result.add(new Change(isBefore ? contentRevision : null,isBefore ? null : contentRevision));
      }
    }
  }
);
  return result;
}
