{
  final Pair<PsiFile,HighlightInfo> pair=myResults.get(myCount++);
  final ProgressIndicator indicator=myProgressTask.getIndicator();
  if (indicator != null) {
    indicator.setFraction((double)myCount / myResults.size());
    indicator.setText("Processing " + pair.first.getName());
  }
  for (  final Pair<HighlightInfo.IntentionActionDescriptor,TextRange> actionRange : pair.second.quickFixActionRanges) {
    final AccessToken token=WriteAction.start();
    try {
      actionRange.getFirst().getAction().invoke(myProject,null,pair.first);
    }
 catch (    ProcessCanceledException e) {
      throw e;
    }
catch (    Exception e) {
      LOG.error(e);
    }
 finally {
      token.finish();
    }
  }
  return true;
}
