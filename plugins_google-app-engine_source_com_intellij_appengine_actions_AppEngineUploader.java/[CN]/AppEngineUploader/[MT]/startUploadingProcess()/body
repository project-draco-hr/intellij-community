{
  final ProcessHandler processHandler;
  try {
    JavaParameters parameters=new JavaParameters();
    parameters.configureByModule(myAppEngineFacet.getModule(),JavaParameters.JDK_ONLY);
    parameters.setMainClass("com.google.appengine.tools.admin.AppCfg");
    parameters.getClassPath().add(mySdk.getToolsApiJarFile().getAbsolutePath());
    final List<KeyValue<String,String>> list=HttpConfigurable.getJvmPropertiesList(false,null);
    if (!list.isEmpty()) {
      final ParametersList parametersList=parameters.getVMParametersList();
      for (      KeyValue<String,String> value : list) {
        parametersList.defineProperty(value.getKey(),value.getValue());
      }
    }
    final ParametersList programParameters=parameters.getProgramParametersList();
    if (myAuthData.isOAuth2()) {
      programParameters.add("--oauth2");
    }
 else {
      programParameters.add("--email=" + myAuthData.getEmail());
      programParameters.add("--passin");
      programParameters.add("--no_cookies");
    }
    programParameters.add("update");
    programParameters.add(FileUtil.toSystemDependentName(myArtifact.getOutputPath()));
    final GeneralCommandLine commandLine=CommandLineBuilder.createFromJavaParameters(parameters);
    processHandler=new OSProcessHandler(commandLine);
  }
 catch (  ExecutionException e) {
    myCallback.errorOccurred("Cannot start uploading: " + e.getMessage());
    return;
  }
  processHandler.addProcessListener(new MyProcessListener(processHandler,null,myLoggingHandler));
  myLoggingHandler.attachToProcess(processHandler);
  processHandler.startNotify();
}
