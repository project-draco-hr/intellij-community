{
  ApplicationManager.getApplication().assertIsDispatchThread();
  final Ref<Exception> exceptionRef=new Ref<Exception>();
  cancelAndDisableAutoCommit();
  try {
    ApplicationManager.getApplication().saveSettings();
    writeAndDeleteProhibited=true;
    ProgressManager.getInstance().run(new Task.Modal(project,IcsBundle.message("task.sync.title"),true){
      @Override public void run(      @NotNull ProgressIndicator indicator){
        indicator.setIndeterminate(true);
        try {
          repositoryManager.commit(indicator);
          if (syncType == SyncType.MERGE) {
            repositoryManager.pull(indicator);
            repositoryManager.push(indicator);
          }
 else {
            throw new UnsupportedOperationException(syncType.toString());
          }
        }
 catch (        Exception e) {
          if (!(e instanceof AuthenticationException)) {
            BaseRepositoryManager.LOG.error(e);
          }
          exceptionRef.set(e);
        }
      }
    }
);
  }
  finally {
    autoCommitEnabled=true;
    writeAndDeleteProhibited=false;
  }
  if (!exceptionRef.isNull()) {
    throw exceptionRef.get();
  }
}
