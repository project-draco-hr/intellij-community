{
  final TypeEvalContext typeEvalContext=TypeEvalContext.userInitiated(element.getContainingFile());
  final List<PsiNamedElement> components=new ArrayList<PsiNamedElement>();
  for (  PsiNamedElement namedElement : getVisibleNamedElements(element)) {
    if (namedElement instanceof PyTypedElement) {
      final PyType type=typeEvalContext.getType((PyTypedElement)namedElement);
      if (type != null && PyABCUtil.isSubtype(type,PyNames.ITERABLE,typeEvalContext)) {
        components.add(namedElement);
      }
    }
  }
  return components;
}
