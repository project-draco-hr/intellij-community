{
  return new JavaElementVisitor(){
    @Override public void visitNewExpression(    PsiNewExpression expression){
      if (PsiDiamondTypeUtil.canCollapseToDiamond(expression,expression,null)) {
        final PsiJavaCodeReferenceElement classReference=expression.getClassOrAnonymousClassReference();
        LOG.assertTrue(classReference != null);
        final PsiReferenceParameterList parameterList=classReference.getParameterList();
        LOG.assertTrue(parameterList != null);
        final PsiElement firstChild=parameterList.getFirstChild();
        final PsiElement lastChild=parameterList.getLastChild();
        final TextRange range=new TextRange(firstChild != null && firstChild.getNode().getElementType() == JavaTokenType.LT ? 1 : 0,parameterList.getTextLength() - (lastChild != null && lastChild.getNode().getElementType() == JavaTokenType.GT ? 1 : 0));
        holder.registerProblem(parameterList,"Explicit type argument #ref #loc can be replaced with <>",ProblemHighlightType.LIKE_UNUSED_SYMBOL,range,new ReplaceWithDiamondFix());
      }
    }
  }
;
}
