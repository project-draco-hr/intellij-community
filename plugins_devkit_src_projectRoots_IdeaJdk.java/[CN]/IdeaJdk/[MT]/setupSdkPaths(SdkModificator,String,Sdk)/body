{
  addClasses(sdkModificator,internalJava);
  addDocs(sdkModificator,internalJava);
  addSources(sdkModificator,internalJava);
  if (isFromIDEAProject(sdkHome)) {
    LocalFileSystem fileSystem=LocalFileSystem.getInstance();
    for (    String prefix : new String[]{"community",""}) {
      for (      String path : new String[]{"lib","build/kotlinc/lib/kotlin-runtime.jar"}) {
        VirtualFile libDir=fileSystem.refreshAndFindFileByPath(sdkHome + "/" + prefix+ "/"+ path);
        if (libDir == null)         continue;
        for (        VirtualFile file : libDir.isDirectory() ? libDir.getChildren() : new VirtualFile[]{libDir}) {
          if (file.isDirectory())           continue;
          if (!StringUtil.equalsIgnoreCase(file.getExtension(),"jar"))           continue;
          sdkModificator.addRoot(file,OrderRootType.CLASSES);
        }
      }
    }
    VirtualFile out=fileSystem.refreshAndFindFileByPath(sdkHome + "/out/classes/production");
    if (out != null) {
      for (      VirtualFile dir : out.getChildren()) {
        if (!dir.isDirectory())         continue;
        sdkModificator.addRoot(dir,OrderRootType.CLASSES);
      }
    }
  }
 else {
    VirtualFile[] ideaLib=getIdeaLibrary(sdkHome);
    for (    VirtualFile aIdeaLib : ideaLib) {
      sdkModificator.addRoot(aIdeaLib,OrderRootType.CLASSES);
    }
    addSources(new File(sdkHome),sdkModificator);
  }
}
