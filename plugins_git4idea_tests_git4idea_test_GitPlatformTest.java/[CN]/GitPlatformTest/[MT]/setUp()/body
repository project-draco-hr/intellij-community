{
  myTestRoot=new File(FileUtil.getTempDirectory(),"testRoot");
  myFilesToDelete.add(myTestRoot);
  checkTestRootIsEmpty(myTestRoot);
  EdtTestUtil.runInEdtAndWait(new ThrowableRunnable<Throwable>(){
    @Override public void run() throws Exception {
      GitPlatformTest.super.setUp();
    }
  }
);
  enableDebugLogging();
  myProjectRoot=myProject.getBaseDir();
  myProjectPath=myProjectRoot.getPath();
  myGitSettings=GitVcsSettings.getInstance(myProject);
  myGitSettings.getAppSettings().setPathToGit(GitExecutor.PathHolder.GIT_EXECUTABLE);
  myDialogManager=(TestDialogManager)ServiceManager.getService(DialogManager.class);
  myVcsNotifier=(TestVcsNotifier)ServiceManager.getService(myProject,VcsNotifier.class);
  myGitRepositoryManager=GitUtil.getRepositoryManager(myProject);
  myPlatformFacade=ServiceManager.getService(myProject,GitPlatformFacade.class);
  myGit=GitTestUtil.overrideService(Git.class,TestGitImpl.class);
  myVcs=ObjectUtils.assertNotNull(GitVcs.getInstance(myProject));
  myVcs.doActivate();
  GitTestUtil.assumeSupportedGitVersion(myVcs);
  addSilently();
  removeSilently();
}
