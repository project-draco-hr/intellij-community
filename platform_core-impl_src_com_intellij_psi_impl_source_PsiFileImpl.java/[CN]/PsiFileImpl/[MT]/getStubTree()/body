{
  ApplicationManager.getApplication().assertReadAccessAllowed();
  if (Boolean.TRUE.equals(getUserData(BUILDING_STUB)))   return null;
  final StubTree derefd=derefStub();
  if (derefd != null)   return derefd;
  if (getTreeElement() != null)   return null;
  if (!(getContentElementType() instanceof IStubFileElementType))   return null;
  final VirtualFile vFile=getVirtualFile();
  if (!(vFile instanceof VirtualFileWithId))   return null;
  ObjectStubTree tree=StubTreeLoader.getInstance().readOrBuild(getProject(),vFile,this);
  if (!(tree instanceof StubTree))   return null;
  StubTree stubHolder=(StubTree)tree;
  tree.setDebugInfo(tree.getDebugInfo() + "\n  loaded at " + vFile.getTimeStamp()+ "; mod stamp"+ getModificationStamp()+ "; viewProvider="+ getViewProvider());
synchronized (PsiLock.LOCK) {
    if (getTreeElement() != null)     return null;
    final StubTree derefdOnLock=derefStub();
    if (derefdOnLock != null)     return derefdOnLock;
    myStub=new SoftReference<StubTree>(stubHolder);
    StubBase<PsiFile> base=(StubBase)stubHolder.getRoot();
    base.setPsi(this);
    return stubHolder;
  }
}
