{
  final URI url;
  try {
    url=new URIBuilder(EduStepicNames.COURSES).addParameter("is_idea_compatible","true").addParameter("page",String.valueOf(pageNumber)).build();
  }
 catch (  URISyntaxException e) {
    LOG.error(e.getMessage());
    return false;
  }
  final StepicWrappers.CoursesContainer coursesContainer=getFromStepic(url.toString(),StepicWrappers.CoursesContainer.class);
  final List<CourseInfo> courseInfos=coursesContainer.courses;
  for (  CourseInfo info : courseInfos) {
    final String courseType=info.getType();
    if (!info.isAdaptive() && StringUtil.isEmptyOrSpaces(courseType))     continue;
    final List<String> typeLanguage=StringUtil.split(courseType," ");
    if (info.isAdaptive() || (typeLanguage.size() == 2 && PYCHARM_PREFIX.equals(typeLanguage.get(0)))) {
      for (      Integer instructor : info.instructors) {
        final StepicUser author=getFromStepic(EduStepicNames.USERS + "/" + String.valueOf(instructor),StepicWrappers.AuthorWrapper.class).users.get(0);
        info.addAuthor(author);
      }
      if (info.isAdaptive()) {
        info.setDescription("This is a Stepik Adaptive course.\n\n" + info.getDescription() + ADAPTIVE_NOTE);
      }
      result.add(info);
    }
  }
  return coursesContainer.meta.containsKey("has_next") && coursesContainer.meta.get("has_next") == Boolean.TRUE;
}
