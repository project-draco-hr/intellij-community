{
  GitHeavyCommit heavyCommit=e.getData(GitVcs.GIT_COMMIT);
  if (heavyCommit != null) {
    final VcsLogObjectsFactory factory=ServiceManager.getService(e.getProject(),VcsLogObjectsFactory.class);
    List<Hash> parents=ContainerUtil.map(heavyCommit.getParentsHashes(),new Function<String,Hash>(){
      @Override public Hash fun(      String s){
        return factory.createHash(s);
      }
    }
);
    return factory.createShortDetails(factory.createHash(heavyCommit.getHash().getValue()),parents,heavyCommit.getAuthorTime(),heavyCommit.getRoot(),heavyCommit.getSubject(),heavyCommit.getAuthor());
  }
  VcsLog log=e.getData(VcsLogDataKeys.VSC_LOG);
  if (log == null) {
    return null;
  }
  List<Hash> selectedCommits=log.getSelectedCommits();
  if (selectedCommits.size() == 1) {
    return log.getDetailsIfAvailable(selectedCommits.get(0));
  }
  return null;
}
