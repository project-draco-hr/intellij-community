{
  model.setCaseSensitive(myCbCaseSensitive.isSelected());
  if (model.isReplaceState()) {
    model.setPreserveCase(myCbPreserveCase.isSelected());
  }
  model.setWholeWordsOnly(myCbWholeWordsOnly.isSelected());
  String selectedSearchContextInUi=mySelectedContextName;
  FindModel.SearchContext searchContext=FindDialog.parseSearchContext(selectedSearchContextInUi);
  model.setSearchContext(searchContext);
  model.setRegularExpressions(myCbRegularExpressions.isSelected());
  String stringToFind=getStringToFind();
  model.setStringToFind(stringToFind);
  if (model.isReplaceState()) {
    model.setPromptOnReplace(true);
    model.setReplaceAll(false);
    String stringToReplace=getStringToReplace();
    model.setStringToReplace(StringUtil.convertLineSeparators(stringToReplace));
  }
  model.setProjectScope(mySelectedScope == Scope.PROJECT);
  model.setDirectoryName(null);
  model.setModuleName(null);
  model.setCustomScopeName(null);
  model.setCustomScope(null);
  model.setCustomScope(false);
  if (mySelectedScope == Scope.DIRECTORY) {
    String directory=getDirectory();
    model.setDirectoryName(directory == null ? "" : directory);
    model.setWithSubdirectories(myRecursiveDirectoryButton.isSelected());
  }
 else   if (mySelectedScope == Scope.MODULE) {
    model.setModuleName((String)myModuleComboBox.getSelectedItem());
  }
 else   if (mySelectedScope == Scope.SCOPE) {
    SearchScope selectedScope=myScopeCombo.getSelectedScope();
    String customScopeName=selectedScope == null ? null : selectedScope.getDisplayName();
    model.setCustomScopeName(customScopeName);
    model.setCustomScope(selectedScope == null ? null : selectedScope);
    model.setCustomScope(true);
  }
  model.setFindAll(findAll);
  String mask=getFileTypeMask();
  model.setFileFilter(mask);
}
