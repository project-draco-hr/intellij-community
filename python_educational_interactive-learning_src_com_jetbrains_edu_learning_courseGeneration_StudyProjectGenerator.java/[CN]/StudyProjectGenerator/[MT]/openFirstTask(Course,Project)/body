{
  LocalFileSystem.getInstance().refresh(false);
  final Lesson firstLesson=StudyUtils.getFirst(course.getLessons());
  final Task firstTask=StudyUtils.getFirst(firstLesson.getTaskList());
  final VirtualFile taskDir=firstTask.getTaskDir(project);
  if (taskDir == null)   return;
  final Map<String,TaskFile> taskFiles=firstTask.getTaskFiles();
  VirtualFile activeVirtualFile=null;
  for (  Map.Entry<String,TaskFile> entry : taskFiles.entrySet()) {
    final String name=entry.getKey();
    final TaskFile taskFile=entry.getValue();
    final VirtualFile virtualFile=((VirtualDirectoryImpl)taskDir).refreshAndFindChild(name);
    if (virtualFile != null) {
      FileEditorManager.getInstance(project).openFile(virtualFile,true);
      if (!taskFile.getAnswerPlaceholders().isEmpty()) {
        activeVirtualFile=virtualFile;
      }
    }
  }
  if (activeVirtualFile != null) {
    final PsiFile file=PsiManager.getInstance(project).findFile(activeVirtualFile);
    ProjectView.getInstance(project).select(file,activeVirtualFile,true);
  }
 else {
    String first=StudyUtils.getFirst(taskFiles.keySet());
    if (first != null) {
      NewVirtualFile firstFile=((VirtualDirectoryImpl)taskDir).refreshAndFindChild(first);
      if (firstFile != null) {
        FileEditorManager.getInstance(project).openFile(firstFile,true);
      }
    }
  }
}
