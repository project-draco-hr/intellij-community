{
  List<CourseInfo> courses=new ArrayList<CourseInfo>();
  try {
    final FileInputStream inputStream=new FileInputStream(cacheFile);
    try {
      BufferedReader reader=new BufferedReader(new InputStreamReader(inputStream));
      try {
        String line;
        while ((line=reader.readLine()) != null) {
          Matcher matcher=CACHE_PATTERN.matcher(line);
          if (matcher.matches()) {
            String courseName=matcher.group(1);
            final CourseInfo courseInfo=new CourseInfo();
            courseInfo.setName(courseName);
            courseInfo.setDescription(matcher.group(2));
            courses.add(courseInfo);
            final int groupCount=matcher.groupCount();
            final ArrayList<CourseInfo.Instructor> instructors=new ArrayList<CourseInfo.Instructor>();
            for (int i=4; i <= groupCount; i++) {
              instructors.add(new CourseInfo.Instructor(matcher.group(i)));
            }
            courseInfo.setInstructors(instructors);
          }
        }
      }
 catch (      IOException e) {
        LOG.error(e.getMessage());
      }
 finally {
        StudyUtils.closeSilently(reader);
      }
    }
  finally {
      StudyUtils.closeSilently(inputStream);
    }
  }
 catch (  FileNotFoundException e) {
    LOG.error(e.getMessage());
  }
  return courses;
}
