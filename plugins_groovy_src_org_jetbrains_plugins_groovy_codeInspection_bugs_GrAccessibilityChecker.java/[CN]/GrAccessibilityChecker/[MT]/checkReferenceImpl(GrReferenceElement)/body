{
  boolean isCompileStatic=PsiUtil.isCompileStatic(ref);
  if (!needToCheck(ref,isCompileStatic))   return null;
  PsiElement parent=ref.getParent();
  if (parent instanceof GrConstructorCall) {
    String constructorError=checkConstructorCall((GrConstructorCall)parent,ref);
    if (constructorError != null) {
      return createAnnotationForRef(ref,isCompileStatic,constructorError);
    }
  }
  GroovyResolveResult result=ref.advancedResolve();
  String error=checkResolveResult(ref,result) ? GroovyBundle.message("cannot.access",ref.getReferenceName()) : null;
  if (error != null) {
    HighlightInfo info=createAnnotationForRef(ref,isCompileStatic,error);
    registerFixes(ref,result,info);
    return info;
  }
  return null;
}
