{
  final GradleProjectImportProvider projectImportProvider=new GradleProjectImportProvider(getBuilder());
  getBuilder().setFileToImport(file.getPath());
  getBuilder().prepare(wizardContext);
  getBuilder().getControl(null).setLinkedProjectPath(file.getPath());
  final boolean result;
  if (ApplicationManager.getApplication().isHeadlessEnvironment()) {
    result=setupGradleProjectSettingsInHeadlessMode(file,projectImportProvider,wizardContext);
  }
 else {
    AddModuleWizard dialog=new AddModuleWizard(null,file.getPath(),projectImportProvider);
    dialog.getWizardContext().setProjectBuilder(getBuilder());
    dialog.navigateToStep(new Function<Step,Boolean>(){
      @Override public Boolean fun(      Step step){
        return step instanceof SelectExternalProjectStep;
      }
    }
);
    result=dialog.showAndGet();
  }
  if (result && getBuilder().getExternalProjectNode() != null) {
    wizardContext.setProjectName(getBuilder().getExternalProjectNode().getData().getInternalName());
  }
  return result;
}
