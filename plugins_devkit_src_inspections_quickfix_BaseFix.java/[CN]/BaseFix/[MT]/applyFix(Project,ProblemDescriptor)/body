{
  PsiElement element=myPointer.getElement();
  if (element == null || !element.isValid())   return;
  boolean external=descriptor.getPsiElement().getContainingFile() != element.getContainingFile();
  if (external) {
    PsiClass clazz=PsiTreeUtil.getParentOfType(element,PsiClass.class,false);
    ReadonlyStatusHandler readonlyStatusHandler=ReadonlyStatusHandler.getInstance(project);
    VirtualFile[] files=new VirtualFile[]{element.getContainingFile().getVirtualFile()};
    ReadonlyStatusHandler.OperationStatus status=readonlyStatusHandler.ensureFilesWritable(files);
    if (status.hasReadonlyFiles()) {
      String className=clazz != null ? clazz.getQualifiedName() : element.getContainingFile().getName();
      Messages.showMessageDialog(project,DevKitBundle.message("inspections.registration.problems.quickfix.read-only",className),getName(),Messages.getErrorIcon());
      return;
    }
  }
  try {
    doFix(project,descriptor,external);
  }
 catch (  IncorrectOperationException e) {
    Logger.getInstance("#" + getClass().getName()).error(e);
  }
}
