{
  if (method.hasModifierProperty(PsiModifier.PRIVATE)) {
    if (unusedMethods.contains(method)) {
      return;
    }
  }
  final boolean methodIsSynchronized=method.hasModifierProperty(PsiModifier.SYNCHRONIZED) || methodIsAlwaysUsedSynchronized(method);
  if (methodIsSynchronized) {
    m_inSynchronizedContextCount++;
  }
  final boolean isConstructor=method.isConstructor();
  if (isConstructor) {
    m_inInitializer=true;
  }
  super.visitMethod(method);
}
