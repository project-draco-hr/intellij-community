{
  Collection<PsiMethod> result=RecursionManager.doPreventingRecursion(clazz,true,new Computable<Collection<PsiMethod>>(){
    @Override public Collection<PsiMethod> compute(){
      final Collection<PsiMethod> collector=new ArrayList<PsiMethod>();
      for (      final AstTransformContributor contributor : EP_NAME.getExtensions()) {
        contributor.collectMethods(clazz,new Consumer<PsiMethod>(){
          @Override public void consume(          PsiMethod method){
            collector.add(method);
          }
        }
);
      }
      return collector;
    }
  }
);
  return result == null ? Collections.<PsiMethod>emptyList() : result;
}
