{
  ColumnInfo[] columns={new ColumnInfo<WebBrowserSettings,Boolean>(""){
    @Override public Class getColumnClass(){
      return Boolean.class;
    }
    @Override public Boolean valueOf(    WebBrowserSettings info){
      return getEffective(info).isActive();
    }
    @Override public boolean isCellEditable(    WebBrowserSettings info){
      return true;
    }
    @Override public void setValue(    WebBrowserSettings info,    Boolean value){
      getMutable(info).setActive(value);
    }
  }
,new ColumnInfo<WebBrowserSettings,String>("Name"){
    @Override public String valueOf(    WebBrowserSettings info){
      return getEffective(info).getName();
    }
    @Override public boolean isCellEditable(    WebBrowserSettings info){
      return true;
    }
    @Override public void setValue(    WebBrowserSettings info,    String value){
      getMutable(info).setName(value);
    }
  }
,new ColumnInfo<WebBrowserSettings,String>("Path"){
    @Override public String valueOf(    WebBrowserSettings info){
      return getEffective(info).getPath();
    }
    @Override public boolean isCellEditable(    WebBrowserSettings info){
      return true;
    }
    @Override public void setValue(    WebBrowserSettings info,    String value){
      getMutable(info).setPath(value);
    }
  }
};
  ListTableModel<WebBrowserSettings> tableModel=new ListTableModel<WebBrowserSettings>(columns,WebBrowserManager.getInstance().getInfos());
  TableView<WebBrowserSettings> table=new TableView<WebBrowserSettings>(tableModel);
  TableUtil.setupCheckboxColumn(table.getColumnModel().getColumn(0));
  table.getColumnModel().getColumn(2).setCellRenderer(new TableCellRenderer(){
    @Override public Component getTableCellRendererComponent(    JTable table,    Object value,    boolean isSelected,    boolean hasFocus,    int row,    int column){
      return null;
    }
  }
);
  browsersTable=ToolbarDecorator.createDecorator(table).createPanel();
}
