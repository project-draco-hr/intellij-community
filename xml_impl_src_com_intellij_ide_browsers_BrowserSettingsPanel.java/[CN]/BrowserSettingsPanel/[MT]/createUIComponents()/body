{
  ColumnInfo[] columns={new ColumnInfo<WebBrowserSettings,Boolean>(""){
    @Override public Class getColumnClass(){
      return Boolean.class;
    }
    @Override public Boolean valueOf(    WebBrowserSettings info){
      return getEffective(info).isActive();
    }
    @Override public boolean isCellEditable(    WebBrowserSettings info){
      return true;
    }
    @Override public void setValue(    WebBrowserSettings info,    Boolean value){
      if (value != info.active) {
        getMutable(info).setActive(value);
      }
    }
  }
,new ColumnInfo<WebBrowserSettings,String>("Name"){
    @Override public String valueOf(    WebBrowserSettings info){
      return getEffective(info).getName();
    }
    @Override public boolean isCellEditable(    WebBrowserSettings info){
      return true;
    }
    @Override public void setValue(    WebBrowserSettings info,    String value){
      if (!value.equals(info.getName())) {
        getMutable(info).setName(value);
      }
    }
  }
,new ColumnInfo<WebBrowserSettings,BrowserFamily>("Family"){
    @Override public Class getColumnClass(){
      return BrowserFamily.class;
    }
    @Override public BrowserFamily valueOf(    WebBrowserSettings info){
      return getEffective(info).getFamily();
    }
    @Override public boolean isCellEditable(    WebBrowserSettings info){
      return true;
    }
    @Override public void setValue(    WebBrowserSettings info,    BrowserFamily value){
      if (value != info.getFamily()) {
        getMutable(info).setFamily(value);
      }
    }
    @Nullable @Override public TableCellRenderer getRenderer(    WebBrowserSettings info){
      return IconTableCellRenderer.ICONABLE;
    }
    @Nullable @Override public TableCellEditor getEditor(    WebBrowserSettings o){
      return ComboBoxTableCellEditor.INSTANCE;
    }
  }
,new ColumnInfo<WebBrowserSettings,String>("Path"){
    @Override public String valueOf(    WebBrowserSettings info){
      return getEffective(info).getPath();
    }
    @Override public boolean isCellEditable(    WebBrowserSettings info){
      return true;
    }
    @Override public void setValue(    WebBrowserSettings info,    String value){
      if (!value.equals(info.getPath())) {
        getMutable(info).setPath(value);
      }
    }
    @Nullable @Override public TableCellEditor getEditor(    WebBrowserSettings info){
      return new LocalPathCellEditor(null).fileChooserDescriptor(appFileChooserDescriptor);
    }
  }
};
  ListTableModel<WebBrowserSettings> tableModel=new ListTableModel<WebBrowserSettings>(columns,WebBrowserManager.getInstance().getInfos());
  TableView<WebBrowserSettings> table=new TableView<WebBrowserSettings>(tableModel);
  table.setStriped(true);
  TableUtil.setupCheckboxColumn(table.getColumnModel().getColumn(0));
  browsersTable=ToolbarDecorator.createDecorator(table).createPanel();
}
