{
  defaultBrowserPanel.setBorder(IdeBorderFactory.createTitledBorder("Default Browser",true));
  FileChooserDescriptor descriptor=SystemInfo.isMac ? new FileChooserDescriptor(false,true,false,false,false,false){
    @Override public boolean isFileSelectable(    VirtualFile file){
      return file.getName().endsWith(".app");
    }
  }
 : FileChooserDescriptorFactory.createSingleFileNoJarsDescriptor();
  alternativeBrowserPathField.addBrowseFolderListener(IdeBundle.message("title.select.path.to.browser"),null,null,descriptor);
  if (BrowserUtil.canStartDefaultBrowser()) {
    ActionListener actionListener=new ActionListener(){
      @Override public void actionPerformed(      ActionEvent e){
        updateBrowserField();
      }
    }
;
    useSystemDefaultBrowser.addActionListener(actionListener);
    useAlternativeBrowser.addActionListener(actionListener);
  }
 else {
    useSystemDefaultBrowser.setVisible(false);
    useAlternativeBrowser.setVisible(false);
  }
  clearExtractedFiles.addActionListener(new ActionListener(){
    @Override public void actionPerformed(    ActionEvent e){
      BrowserUtil.clearExtractedFiles();
    }
  }
);
}
