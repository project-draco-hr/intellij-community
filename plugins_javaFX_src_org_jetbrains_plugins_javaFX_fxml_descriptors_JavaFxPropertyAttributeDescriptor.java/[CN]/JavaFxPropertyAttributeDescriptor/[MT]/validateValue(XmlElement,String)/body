{
  if (context instanceof XmlAttributeValue) {
    final XmlAttributeValue xmlAttributeValue=(XmlAttributeValue)context;
    final PsiElement parent=xmlAttributeValue.getParent();
    if (parent instanceof XmlAttribute) {
      if (JavaFxPsiUtil.checkIfAttributeHandler((XmlAttribute)parent)) {
        if (value.startsWith("#")) {
          if (JavaFxPsiUtil.getControllerClass(context.getContainingFile()) == null) {
            return "No controller specified for top level element";
          }
        }
 else {
          if (JavaFxPsiUtil.parseInjectedLanguages((XmlFile)context.getContainingFile()).isEmpty()) {
            return "Page language not specified.";
          }
        }
      }
 else       if (FxmlConstants.FX_ID.equals(((XmlAttribute)parent).getName())) {
        final PsiClass controllerClass=JavaFxPsiUtil.getControllerClass(context.getContainingFile());
        if (controllerClass != null) {
          final XmlTag xmlTag=((XmlAttribute)parent).getParent();
          if (xmlTag != null) {
            final XmlElementDescriptor descriptor=xmlTag.getDescriptor();
            if (descriptor instanceof JavaFxClassBackedElementDescriptor) {
              final PsiElement declaration=descriptor.getDeclaration();
              if (declaration instanceof PsiClass) {
                final PsiField fieldByName=controllerClass.findFieldByName(xmlAttributeValue.getValue(),false);
                if (fieldByName != null && !InheritanceUtil.isInheritorOrSelf((PsiClass)declaration,PsiUtil.resolveClassInType(fieldByName.getType()),true)) {
                  return "Cannot set " + ((PsiClass)declaration).getQualifiedName() + " to field \'"+ fieldByName.getName()+ "\'";
                }
              }
            }
          }
        }
      }
 else {
        final XmlAttributeDescriptor attributeDescriptor=((XmlAttribute)parent).getDescriptor();
        if (attributeDescriptor != null) {
          final PsiElement declaration=attributeDescriptor.getDeclaration();
          final String boxedQName;
          if (declaration != null) {
            boxedQName=getBoxedPropertyType(declaration);
          }
 else {
            final PsiClass tagClass=JavaFxPsiUtil.getTagClass((XmlAttributeValue)context);
            if (tagClass != null && !InheritanceUtil.isInheritor(tagClass,false,JavaFxCommonClassNames.JAVAFX_SCENE_NODE)) {
              boxedQName=tagClass.getQualifiedName();
            }
 else {
              boxedQName=null;
            }
          }
          if (boxedQName != null) {
            try {
              final Class<?> aClass=Class.forName(boxedQName);
              final Method method=aClass.getMethod(JavaFxCommonClassNames.VALUE_OF,String.class);
              method.invoke(aClass,((XmlAttributeValue)context).getValue());
            }
 catch (            InvocationTargetException e) {
              final Throwable cause=e.getCause();
              if (cause instanceof NumberFormatException) {
                final PsiReference reference=context.getReference();
                if (reference != null) {
                  final PsiElement resolve=reference.resolve();
                  if (resolve instanceof XmlAttributeValue) {
                    final PsiClass tagClass=JavaFxPsiUtil.getTagClass((XmlAttributeValue)resolve);
                    if (tagClass != null && boxedQName.equals(tagClass.getQualifiedName())) {
                      return null;
                    }
                  }
                }
                return "Invalid value: unable to coerce to " + boxedQName;
              }
            }
catch (            Throwable ignore) {
            }
          }
        }
      }
    }
  }
  return null;
}
