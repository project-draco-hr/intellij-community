{
  if (value == null) {
    value=new AtomicNotNullLazyValue<Object>(){
      @NotNull @Override protected Object compute(){
        try {
          if (service == null) {
            Class<Object> aClass=findClass(implementation);
            return asInstance ? instantiate(aClass,ApplicationManager.getApplication().getPicoContainer(),true) : aClass;
          }
 else {
            return ServiceManager.getService(findClass(service));
          }
        }
 catch (        ClassNotFoundException e) {
          throw new RuntimeException(e);
        }
      }
    }
;
  }
  return value;
}
