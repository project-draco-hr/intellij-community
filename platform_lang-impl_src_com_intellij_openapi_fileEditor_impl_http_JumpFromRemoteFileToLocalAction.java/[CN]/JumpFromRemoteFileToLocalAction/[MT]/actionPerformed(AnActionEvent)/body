{
  Collection<VirtualFile> files=findLocalFiles(myProject,Urls.newFromVirtualFile(myFile),myFile.getName());
  if (files.isEmpty()) {
    Messages.showErrorDialog(myProject,"Cannot find local file for '" + myFile.getUrl() + "'",CommonBundle.getErrorTitle());
    return;
  }
  if (files.size() == 1) {
    navigateToFile(myProject,ContainerUtil.getFirstItem(files,null));
  }
 else {
    final JList list=new JBList(files);
    list.setCellRenderer(new ColoredListCellRenderer(){
      @Override protected void customizeCellRenderer(      @NotNull JList list,      Object value,      int index,      boolean selected,      boolean hasFocus){
        FileAppearanceService.getInstance().forVirtualFile((VirtualFile)value).customize(this);
      }
    }
);
    new PopupChooserBuilder(list).setTitle("Select Target File").setMovable(true).setItemChoosenCallback(new Runnable(){
      @Override public void run(){
        for (        Object value : list.getSelectedValues()) {
          navigateToFile(myProject,(VirtualFile)value);
        }
      }
    }
).createPopup().showUnderneathOf(e.getInputEvent().getComponent());
  }
}
