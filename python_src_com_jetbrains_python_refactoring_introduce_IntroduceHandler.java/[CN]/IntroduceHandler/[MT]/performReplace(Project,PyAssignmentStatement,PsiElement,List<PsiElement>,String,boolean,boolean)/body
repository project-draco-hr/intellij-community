{
  new WriteCommandAction(project,expression.getContainingFile()){
    protected void run(    final Result result) throws Throwable {
      final Pair<PsiElement,TextRange> data=expression.getUserData(PyPsiUtils.SELECTION_BREAKS_AST_NODE);
      if (data == null) {
        addDeclaration(expression,declaration,occurrences,replaceAll,initInConstructor);
      }
 else {
        addDeclaration(data.first,declaration,occurrences,replaceAll,initInConstructor);
      }
      PyExpressionStatement newExpression=createExpression(project,name,declaration);
      if (replaceAll) {
        for (        PsiElement occurrence : occurrences) {
          PyPsiUtils.replaceExpression(project,occurrence,newExpression);
        }
      }
 else {
        PyPsiUtils.replaceExpression(project,expression,newExpression);
      }
    }
  }
.execute();
}
