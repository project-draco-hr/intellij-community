{
  final PyExpression expression=operation.getInitializer();
  final Project project=operation.getProject();
  return new WriteCommandAction<PyAssignmentStatement>(project,expression.getContainingFile()){
    protected void run(    final Result<PyAssignmentStatement> result) throws Throwable {
      result.setResult(addDeclaration(operation,declaration));
      PyExpression newExpression=createExpression(project,operation.getName(),declaration);
      if (operation.isReplaceAll()) {
        List<PsiElement> newOccurrences=new ArrayList<PsiElement>();
        for (        PsiElement occurrence : operation.getOccurrences()) {
          final PsiElement replaced=replaceExpression(occurrence,newExpression,operation);
          if (replaced != null) {
            newOccurrences.add(replaced);
          }
        }
        operation.setOccurrences(newOccurrences);
      }
 else {
        replaceExpression(expression,newExpression,operation);
      }
      postRefactoring(operation.getElement());
    }
  }
.execute().getResultObject();
}
