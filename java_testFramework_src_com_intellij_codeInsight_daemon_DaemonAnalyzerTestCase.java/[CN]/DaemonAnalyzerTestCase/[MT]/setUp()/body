{
  super.setUp();
  final LocalInspectionTool[] tools=configureLocalInspectionTools();
  InspectionsKt.configureInspections(tools,getProject(),Collections.emptyList(),getTestRootDisposable());
  DaemonCodeAnalyzerImpl daemonCodeAnalyzer=(DaemonCodeAnalyzerImpl)DaemonCodeAnalyzer.getInstance(getProject());
  daemonCodeAnalyzer.prepareForTest();
  final StartupManagerImpl startupManager=(StartupManagerImpl)StartupManagerEx.getInstanceEx(getProject());
  startupManager.runStartupActivities();
  startupManager.startCacheUpdate();
  startupManager.runPostStartupActivities();
  DaemonCodeAnalyzerSettings.getInstance().setImportHintEnabled(false);
  if (isPerformanceTest()) {
    IntentionManager.getInstance().getAvailableIntentionActions();
    PathManagerEx.getTestDataPath();
    ReferenceProvidersRegistry.getInstance();
    InjectedLanguageManager.getInstance(getProject());
    LanguageAnnotators.INSTANCE.allForLanguage(JavaLanguage.INSTANCE);
    LanguageAnnotators.INSTANCE.allForLanguage(StdLanguages.XML);
    ProblemHighlightFilter.EP_NAME.getExtensions();
    Extensions.getExtensions(ImplicitUsageProvider.EP_NAME);
    Extensions.getExtensions(XmlSchemaProvider.EP_NAME);
    Extensions.getExtensions(XmlFileNSInfoProvider.EP_NAME);
    Extensions.getExtensions(ExternalAnnotatorsFilter.EXTENSION_POINT_NAME);
    Extensions.getExtensions(IndexPatternBuilder.EP_NAME);
  }
}
