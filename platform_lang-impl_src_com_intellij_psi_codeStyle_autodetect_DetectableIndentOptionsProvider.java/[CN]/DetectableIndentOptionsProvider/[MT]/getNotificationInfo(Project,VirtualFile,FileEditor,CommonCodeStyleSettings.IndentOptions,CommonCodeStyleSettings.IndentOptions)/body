{
  NotificationLabels labels=getNotificationLabels(userOptions,detectedOptions);
  final Editor editor=fileEditor instanceof TextEditor ? ((TextEditor)fileEditor).getEditor() : null;
  if (labels == null || editor == null)   return null;
  LabelWithAction okAction=new LabelWithAction(ApplicationBundle.message("code.style.indents.detector.accept"),new Runnable(){
    @Override public void run(){
      setAccepted(file);
      EditorNotifications.getInstance(project).updateAllNotifications();
    }
  }
);
  LabelWithAction disableForSingleFile=new LabelWithAction(labels.revertToOldSettingsLabel,new Runnable(){
    @Override public void run(){
      disableForFile(file);
      if (editor instanceof EditorEx) {
        ((EditorEx)editor).reinitSettings();
      }
      EditorNotifications.getInstance(project).updateAllNotifications();
    }
  }
);
  LabelWithAction showSettings=new LabelWithAction(ApplicationBundle.message("code.style.indents.detector.show.settings"),new Runnable(){
    @Override public void run(){
      ShowSettingsUtilImpl.showSettingsDialog(project,"preferences.sourceCode",ApplicationBundle.message("settings.code.style.general.autodetect.indents"));
      EditorNotifications.getInstance(project).updateAllNotifications();
    }
  }
);
  return new EditorNotificationInfo(labels.title,okAction,disableForSingleFile,showSettings);
}
