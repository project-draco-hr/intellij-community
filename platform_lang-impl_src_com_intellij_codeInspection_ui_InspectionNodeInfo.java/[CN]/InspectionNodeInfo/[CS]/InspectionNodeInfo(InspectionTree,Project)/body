{
  myTree=tree;
  setLayout(new GridBagLayout());
  setBorder(IdeBorderFactory.createEmptyBorder(11,0,0,0));
  final InspectionToolWrapper toolWrapper=tree.getSelectedToolWrapper();
  LOG.assertTrue(toolWrapper != null);
  myProject=project;
  myCurrentProfile=(InspectionProfileImpl)InspectionProjectProfileManager.getInstance(project).getProjectProfileImpl();
  myKey=HighlightDisplayKey.find(toolWrapper.getShortName());
  myButton=new JButton();
  JPanel titlePanel=new JPanel();
  titlePanel.setLayout(new BoxLayout(titlePanel,BoxLayout.LINE_AXIS));
  JBLabelDecorator label=JBLabelDecorator.createJBLabelDecorator().setBold(true);
  label.setText(toolWrapper.getDisplayName() + " inspection");
  titlePanel.add(label);
  titlePanel.add(Box.createHorizontalStrut(JBUI.scale(16)));
  myEnabledLabel=new JBLabel();
  myEnabledLabel.setForeground(JBColor.GRAY);
  titlePanel.add(myEnabledLabel);
  add(titlePanel,new GridBagConstraints(0,0,1,1,0,0,GridBagConstraints.NORTHWEST,GridBagConstraints.NONE,new JBInsets(0,12,5,16),0,0));
  JEditorPane description=new JEditorPane();
  description.setContentType(UIUtil.HTML_MIME);
  description.setEditable(false);
  description.setOpaque(false);
  if (Registry.is("ide.scroll.background.auto")) {
    description.setBackground(UIUtil.getLabelBackground());
    description.setForeground(UIUtil.getLabelForeground());
  }
  description.addHyperlinkListener(BrowserHyperlinkListener.INSTANCE);
  final String toolDescription=toolWrapper.loadDescription();
  SingleInspectionProfilePanel.readHTML(description,SingleInspectionProfilePanel.toHTML(description,toolDescription == null ? "" : toolDescription,false));
  JScrollPane pane=ScrollPaneFactory.createScrollPane(description,true);
  add(pane,new GridBagConstraints(0,1,1,1,1.0,1.0,GridBagConstraints.NORTHWEST,GridBagConstraints.VERTICAL,new JBInsets(0,10,0,0),getFontMetrics(UIUtil.getLabelFont()).charWidth('f') * 110 - pane.getMinimumSize().width,0));
  add(myButton,new GridBagConstraints(0,2,1,1,1.0,0.0,GridBagConstraints.NORTHWEST,GridBagConstraints.NONE,new JBInsets(15,9,9,0),0,0));
  updateEnableButtonText(false);
  new ClickListener(){
    @Override public boolean onClick(    @NotNull MouseEvent event,    int clickCount){
      updateEnableButtonText(true);
      tree.revalidate();
      tree.repaint();
      return true;
    }
  }
.installOn(myButton);
}
