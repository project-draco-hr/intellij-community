{
  setLayout(new GridBagLayout());
  setBorder(IdeBorderFactory.createEmptyBorder(0,3,0,0));
  myProject=project;
  myTitle=new SimpleColoredComponent();
  myCurrentProfile=(InspectionProfileImpl)InspectionProjectProfileManager.getInstance(project).getProjectProfileImpl();
  myKey=HighlightDisplayKey.find(toolWrapper.getID());
  myName=toolWrapper.getDisplayName();
  myButton=new JButton();
  add(myTitle,new GridBagConstraints(0,0,1,1,0,0,GridBagConstraints.NORTHWEST,GridBagConstraints.NONE,new JBInsets(0,2,0,0),0,0));
  JEditorPane description=new JEditorPane();
  description.setContentType(UIUtil.HTML_MIME);
  description.setEditable(false);
  description.setOpaque(false);
  description.addHyperlinkListener(BrowserHyperlinkListener.INSTANCE);
  final String toolDescription=toolWrapper.loadDescription();
  SingleInspectionProfilePanel.readHTML(description,SingleInspectionProfilePanel.toHTML(description,toolDescription == null ? "" : toolDescription,true));
  add(ScrollPaneFactory.createScrollPane(description,true),new GridBagConstraints(0,1,1,1,0,1.0,GridBagConstraints.NORTHWEST,GridBagConstraints.BOTH,new JBInsets(5,5,0,0),0,0));
  add(myButton,new GridBagConstraints(0,2,1,1,1.0,0.0,GridBagConstraints.NORTHWEST,GridBagConstraints.NONE,new JBInsets(15,0,0,0),0,0));
  updateEnableButtonText(false);
  new ClickListener(){
    @Override public boolean onClick(    @NotNull MouseEvent event,    int clickCount){
      updateEnableButtonText(true);
      return true;
    }
  }
.installOn(myButton);
}
