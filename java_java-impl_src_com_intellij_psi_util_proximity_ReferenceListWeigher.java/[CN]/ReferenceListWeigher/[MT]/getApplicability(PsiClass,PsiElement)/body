{
  Preference condition=getPreferredCondition(position);
  if (condition == Preference.Interfaces)   return aClass.isInterface() ? applicableByKind : inapplicable;
  if (condition == Preference.Classes) {
    if (aClass.isInterface())     return inapplicable;
    String name=aClass.getName();
    if (name != null && name.endsWith("TestCase")) {
      VirtualFile vFile=aClass.getContainingFile().getVirtualFile();
      if (vFile != null && ProjectFileIndex.SERVICE.getInstance(aClass.getProject()).isInTestSourceContent(vFile)) {
        return applicableByName;
      }
    }
    return applicableByKind;
  }
  if (condition == Preference.Exceptions) {
    return InheritanceUtil.isInheritor(aClass,CommonClassNames.JAVA_LANG_THROWABLE) ? applicableByKind : inapplicable;
  }
  return unknown;
}
