{
  ArrayList<UsageInfo> usages=new ArrayList<>();
  final PsiClass[] inheritors=ClassInheritorsSearch.search(myClass).toArray(PsiClass.EMPTY_ARRAY);
  myClassInheritors=new HashSet<>();
  myClassInheritors.add(myClass);
  addAll(myClassInheritors,inheritors);
{
    ClassReferenceScanner scanner=new ClassReferenceSearchingScanner(myClass);
    final MyClassInstanceReferenceVisitor instanceReferenceVisitor=new MyClassInstanceReferenceVisitor(myClass,usages);
    scanner.processReferences(new ClassInstanceScanner(myClass,instanceReferenceVisitor));
    MyClassMemberReferencesVisitor visitor=new MyClassMemberReferencesVisitor(usages,instanceReferenceVisitor);
    myClass.accept(visitor);
    myClassImplementedInterfaces=instanceReferenceVisitor.getImplementedInterfaces();
  }
  for (  PsiClass inheritor : inheritors) {
    processClass(inheritor,usages);
  }
  return usages.toArray(new UsageInfo[usages.size()]);
}
