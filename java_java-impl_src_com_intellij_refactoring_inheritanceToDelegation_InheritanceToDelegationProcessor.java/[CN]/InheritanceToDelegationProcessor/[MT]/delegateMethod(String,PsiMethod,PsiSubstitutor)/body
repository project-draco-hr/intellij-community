{
  substitutor=OverrideImplementExploreUtil.correctSubstitutor(method,substitutor);
  PsiMethod methodToAdd=GenerateMembersUtil.substituteGenericMethod(method,substitutor);
  methodToAdd.getModifierList().setModifierProperty(PsiModifier.ABSTRACT,false);
  NullableNotNullManager.getInstance(myProject).copyNullableOrNotNullAnnotation(method,methodToAdd);
  final String delegationBody=getDelegationBody(methodToAdd,delegationTarget);
  PsiCodeBlock newBody=myFactory.createCodeBlockFromText(delegationBody,method);
  PsiCodeBlock oldBody=methodToAdd.getBody();
  if (oldBody != null) {
    oldBody.replace(newBody);
  }
 else {
    methodToAdd.addBefore(newBody,null);
  }
  if (methodToAdd.getDocComment() != null)   methodToAdd.getDocComment().delete();
  methodToAdd=(PsiMethod)CodeStyleManager.getInstance(myProject).reformat(methodToAdd);
  methodToAdd=(PsiMethod)JavaCodeStyleManager.getInstance(myProject).shortenClassReferences(methodToAdd);
  return methodToAdd;
}
