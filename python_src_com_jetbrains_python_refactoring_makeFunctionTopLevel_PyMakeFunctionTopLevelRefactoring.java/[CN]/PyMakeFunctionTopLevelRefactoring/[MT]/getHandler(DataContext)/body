{
  return new RefactoringActionHandler(){
    @Override public void invoke(    @NotNull Project project,    Editor editor,    PsiFile file,    DataContext dataContext){
      final PsiElement element=CommonDataKeys.PSI_ELEMENT.getData(dataContext);
      if (element != null) {
        final PyFunction function=findTargetFunction(element);
        if (function != null) {
          final PyBaseMakeFunctionTopLevelProcessor processor;
          if (isInstanceMethod(function)) {
            processor=new PyMakeMethodTopLevelProcessor(function,editor);
          }
 else {
            processor=new PyMakeLocalFunctionTopLevelProcessor(function,editor);
          }
          try {
            processor.run();
          }
 catch (          IncorrectOperationException e) {
            if (ApplicationManager.getApplication().isUnitTestMode()) {
              throw e;
            }
            CommonRefactoringUtil.showErrorMessage(RefactoringBundle.message("error.title"),e.getMessage(),ID,project);
          }
        }
      }
    }
    @Override public void invoke(    @NotNull Project project,    @NotNull PsiElement[] elements,    DataContext dataContext){
    }
  }
;
}
