{
  ArrayList<String> superList=new ArrayList<String>();
  ArrayList<Decl> innerList=new ArrayList<Decl>();
  if (classStub.isAnonymous()) {
    String name=classStub.getBaseClassName();
    if (name != null) {
      superList.add(id(name,true,namesCache));
    }
  }
  for (  StubElement el : classStub.getChildrenStubs()) {
    if (el instanceof GrReferenceListStub) {
      GrReferenceListStub refList=(GrReferenceListStub)el;
      if (el.getStubType() == GroovyElementTypes.IMPLEMENTS_CLAUSE || el.getStubType() == GroovyElementTypes.EXTENDS_CLAUSE) {
        for (        String extName : refList.getBaseClasses()) {
          superList.add(id(extName,true,namesCache));
        }
      }
    }
    Decl member=processMember(el,namesCache);
    if (member != null) {
      innerList.add(member);
    }
  }
  int flags=translateFlags(classStub);
  String[] supers=superList.isEmpty() ? ArrayUtil.EMPTY_STRING_ARRAY : ArrayUtil.toStringArray(superList);
  Decl[] inners=innerList.isEmpty() ? Decl.EMPTY_ARRAY : innerList.toArray(new Decl[innerList.size()]);
  return new ClassDecl(classStub.id,flags,classStub.getName(),supers,inners);
}
