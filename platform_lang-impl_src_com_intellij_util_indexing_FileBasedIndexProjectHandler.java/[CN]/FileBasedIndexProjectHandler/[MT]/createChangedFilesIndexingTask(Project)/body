{
  final FileBasedIndexImpl index=(FileBasedIndexImpl)FileBasedIndex.getInstance();
  if (index.getChangedFileCount() + index.getNumberOfPendingInvalidations() < 20 && !DumbService.isDumb(project)) {
    try {
      HeavyProcessLatch.INSTANCE.processStarted();
      final Collection<VirtualFile> files=index.getFilesToUpdate(project);
      reindexRefreshedFiles(new EmptyProgressIndicator(),files,project,index);
    }
  finally {
      HeavyProcessLatch.INSTANCE.processFinished();
    }
    return null;
  }
  return new DumbModeTask(){
    @Override public void performInDumbMode(    @NotNull ProgressIndicator indicator){
      final Collection<VirtualFile> files=index.getFilesToUpdate(project);
      indicator.setIndeterminate(false);
      indicator.setText(IdeBundle.message("progress.indexing.updating"));
      reindexRefreshedFiles(indicator,files,project,index);
    }
  }
;
}
