{
  return new Comparator<IdeaPluginDescriptor>(){
    public int compare(    IdeaPluginDescriptor o1,    IdeaPluginDescriptor o2){
      if (myModel.isSortByRating()) {
        final String rating1=((PluginNode)o1).getRating();
        final String rating2=((PluginNode)o2).getRating();
        final int compare=Comparing.compare(rating2,rating1);
        if (compare != 0) {
          return compare;
        }
      }
      if (isSortByDate()) {
        long date1=(o1 instanceof PluginNode) ? ((PluginNode)o1).getDate() : ((IdeaPluginDescriptorImpl)o1).getDate();
        long date2=(o2 instanceof PluginNode) ? ((PluginNode)o2).getDate() : ((IdeaPluginDescriptorImpl)o2).getDate();
        date1/=60 * 1000;
        date2/=60 * 1000;
        if (date2 != date1) {
          return date2 - date1 > 0L ? 1 : -1;
        }
      }
      if (isSortByDownloads()) {
        String count1=o1.getDownloads();
        String count2=o2.getDownloads();
        if (count1 != null && count2 != null) {
          final Long result=Long.valueOf(count2);
          if (result != 0) {
            return result.compareTo(Long.valueOf(count1));
          }
        }
 else {
          return count1 != null ? -1 : 1;
        }
      }
      return StringUtil.compare(o1.getName(),o2.getName(),true);
    }
  }
;
}
