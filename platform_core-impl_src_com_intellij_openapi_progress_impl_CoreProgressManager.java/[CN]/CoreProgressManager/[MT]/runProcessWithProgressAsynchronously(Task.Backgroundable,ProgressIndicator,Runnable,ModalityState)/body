{
  if (progressIndicator instanceof Disposable) {
    Disposer.register(ApplicationManager.getApplication(),(Disposable)progressIndicator);
  }
  final Runnable process=new TaskRunnable(task,progressIndicator,continuation);
  TaskContainer action=new TaskContainer(task){
    @Override public void run(){
      boolean canceled=false;
      try {
        ProgressManager.getInstance().runProcess(process,progressIndicator);
      }
 catch (      ProcessCanceledException e) {
        canceled=true;
      }
      if (canceled || progressIndicator.isCanceled()) {
        ApplicationManager.getApplication().invokeLater(new Runnable(){
          @Override public void run(){
            task.onCancel();
          }
        }
,modalityState);
      }
 else {
        ApplicationManager.getApplication().invokeLater(new Runnable(){
          @Override public void run(){
            task.onSuccess();
          }
        }
,modalityState);
      }
    }
  }
;
  return ApplicationManager.getApplication().executeOnPooledThread(action);
}
