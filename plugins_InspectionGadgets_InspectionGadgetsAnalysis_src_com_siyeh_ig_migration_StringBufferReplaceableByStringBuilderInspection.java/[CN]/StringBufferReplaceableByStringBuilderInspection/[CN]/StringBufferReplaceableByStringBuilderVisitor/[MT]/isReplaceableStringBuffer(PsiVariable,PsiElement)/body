{
  if (context == null) {
    return false;
  }
  final PsiType type=variable.getType();
  if (!TypeUtils.typeEquals(CommonClassNames.JAVA_LANG_STRING_BUFFER,type)) {
    return false;
  }
  final PsiExpression initializer=variable.getInitializer();
  if (initializer == null) {
    return false;
  }
  if (getNewStringBuffer(initializer) == null) {
    return false;
  }
  if (VariableAccessUtils.variableIsAssigned(variable,context)) {
    return false;
  }
  if (VariableAccessUtils.variableIsAssignedFrom(variable,context)) {
    return false;
  }
  if (VariableAccessUtils.variableIsReturned(variable,context,true)) {
    return false;
  }
  if (VariableAccessUtils.variableIsUsedInInnerClass(variable,context)) {
    return false;
  }
  if (VariableAccessUtils.variableIsPassedAsMethodArgument(variable,context,true,new Processor<PsiCall>(){
    @Override public boolean process(    PsiCall call){
      final PsiMethod method=call.resolveMethod();
      if (method == null) {
        return false;
      }
      final PsiClass aClass=method.getContainingClass();
      return aClass != null && excludes.contains(aClass.getQualifiedName());
    }
  }
)) {
    return false;
  }
  return true;
}
