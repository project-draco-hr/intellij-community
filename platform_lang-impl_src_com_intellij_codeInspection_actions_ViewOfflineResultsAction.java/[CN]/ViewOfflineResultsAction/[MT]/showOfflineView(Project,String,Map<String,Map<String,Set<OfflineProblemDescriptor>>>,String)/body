{
  Profile profile;
  if (profileName != null) {
    profile=InspectionProjectProfileManager.getInstance(project).getProfile(profileName,false);
    if (profile == null) {
      profile=InspectionProfileManager.getInstance().getProfile(profileName,false);
    }
  }
 else {
    profile=null;
  }
  final InspectionProfileImpl inspectionProfile;
  if (profile != null) {
    inspectionProfile=(InspectionProfileImpl)profile;
  }
 else {
    inspectionProfile=new InspectionProfileImpl(profileName != null ? profileName : "Server Side"){
      @Override public HighlightDisplayLevel getErrorLevel(      @NotNull final HighlightDisplayKey key,      PsiElement element){
        return ((InspectionProfile)InspectionProfileManager.getInstance().getRootProfile()).getErrorLevel(key,element);
      }
    }
;
    final Set<String> alreadyEnabledTools=new THashSet<>();
    for (    Tools tools : inspectionProfile.getAllEnabledInspectionTools(project)) {
      final String shortName=tools.getShortName();
      if (resMap.containsKey(shortName)) {
        alreadyEnabledTools.add(shortName);
      }
 else {
        inspectionProfile.disableTool(shortName,project);
      }
    }
    if (alreadyEnabledTools.size() != resMap.size()) {
      for (      String id : resMap.keySet()) {
        if (!alreadyEnabledTools.contains(id)) {
          inspectionProfile.enableTool(id,project);
        }
      }
    }
  }
  return showOfflineView(project,resMap,inspectionProfile,title);
}
