{
  final PsiBinaryExpression binaryExpression=PsiTreeUtil.getParentOfType(element,PsiBinaryExpression.class);
  if (binaryExpression == null) {
    return null;
  }
  final PsiJavaToken operationSign=binaryExpression.getOperationSign();
  boolean isEqEq;
  if (JavaTokenType.NE.equals(operationSign.getTokenType())) {
    isEqEq=false;
  }
 else   if (JavaTokenType.EQEQ.equals(operationSign.getTokenType())) {
    isEqEq=true;
  }
 else {
    return null;
  }
  PsiMethodCallExpression compareToExpression=null;
  boolean hasZero=false;
  for (  PsiExpression psiExpression : binaryExpression.getOperands()) {
    if (compareToExpression == null && MethodUtils.isCompareToCall(psiExpression)) {
      compareToExpression=(PsiMethodCallExpression)psiExpression;
      continue;
    }
    if (!hasZero && detectZero(psiExpression)) {
      hasZero=true;
    }
  }
  if (!hasZero || compareToExpression == null) {
    return null;
  }
  getQualifierAndParameter(compareToExpression);
  return new ResolveResult(binaryExpression,compareToExpression,isEqEq);
}
