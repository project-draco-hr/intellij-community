{
  PsiElement element=CommonDataKeys.PSI_ELEMENT.getData(dataContext);
  if (element == null && editor != null && file != null) {
    element=file.findElementAt(editor.getCaretModel().getOffset());
  }
  final PyAssignmentStatement assignmentStatement=PsiTreeUtil.getParentOfType(element,PyAssignmentStatement.class);
  if (assignmentStatement != null) {
    invoke(assignmentStatement.getTargets()[0]);
  }
 else   if (element instanceof PyNamedParameter) {
    invoke(element);
  }
 else {
    CommonRefactoringUtil.showErrorHint(project,editor,RefactoringBundle.getCannotRefactorMessage(RefactoringBundle.message("error.wrong.caret.position.local.or.expression.name")),REFACTORING_NAME,"refactoring.invertBoolean");
  }
}
