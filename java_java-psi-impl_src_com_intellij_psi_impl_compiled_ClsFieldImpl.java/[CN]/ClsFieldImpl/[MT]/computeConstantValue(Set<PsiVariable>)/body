{
  if (!hasModifierProperty(PsiModifier.FINAL))   return null;
  PsiExpression initializer=getInitializer();
  if (initializer == null)   return null;
  final PsiClass containingClass=getContainingClass();
  final String qName=containingClass != null ? containingClass.getQualifiedName() : null;
  if ("java.lang.Float".equals(qName)) {
    String name=getName();
    if ("POSITIVE_INFINITY".equals(name))     return Float.POSITIVE_INFINITY;
    if ("NEGATIVE_INFINITY".equals(name))     return Float.NEGATIVE_INFINITY;
    if ("NaN".equals(name))     return Float.NaN;
  }
 else   if ("java.lang.Double".equals(qName)) {
    String name=getName();
    if ("POSITIVE_INFINITY".equals(name))     return Double.POSITIVE_INFINITY;
    if ("NEGATIVE_INFINITY".equals(name))     return Double.NEGATIVE_INFINITY;
    if ("NaN".equals(name))     return Double.NaN;
  }
  return PsiConstantEvaluationHelperImpl.computeCastTo(initializer,getType(),visitedVars);
}
