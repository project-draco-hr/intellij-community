{
  selectedMemberInfos=new ArrayList<PyMemberInfo<PyElement>>(selectedMemberInfos);
  final PyMemberInfo<PyElement> objectMember=MembersManager.findMember(selectedMemberInfos,ALLOW_OBJECT);
  if (LanguageLevel.forElement(clazz).isPy3K()) {
    if (objectMember != null) {
      selectedMemberInfos.remove(objectMember);
    }
  }
 else {
    if (objectMember == null) {
      final PyMemberInfo<PyElement> object=MembersManager.findMember(clazz,ALLOW_OBJECT);
      if (object != null) {
        selectedMemberInfos.add(object);
      }
    }
  }
  final Project project=clazz.getProject();
  final String text="class " + superBaseName + ":\n  pass"+ "\n";
  PyClass newClass=PyElementGenerator.getInstance(project).createFromText(LanguageLevel.getDefault(),PyClass.class,text);
  newClass=placeNewClass(project,newClass,clazz,targetFile);
  MembersManager.moveAllMembers(selectedMemberInfos,clazz,newClass);
  if (!newClass.getContainingFile().equals(clazz.getContainingFile())) {
    PyClassRefactoringUtil.optimizeImports(clazz.getContainingFile());
  }
  PyClassRefactoringUtil.addSuperclasses(project,clazz,null,newClass);
}
