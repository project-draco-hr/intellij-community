{
  VirtualFile file=VirtualFileManager.getInstance().findFileByUrl(ApplicationManagerEx.getApplicationEx().isUnitTestMode() ? targetFile : VfsUtil.pathToUrl(targetFile));
  if (file == clazz.getContainingFile().getVirtualFile()) {
    return (PyClass)clazz.getParent().addBefore(newClass,clazz);
  }
  PsiFile psiFile=null;
  try {
    if (file == null) {
      final String filename;
      final String path;
      if (targetFile.endsWith(PythonFileType.INSTANCE.getDefaultExtension())) {
        path=PathUtil.getParentPath(targetFile);
        filename=PathUtil.getFileName(targetFile);
      }
 else {
        path=targetFile;
        filename=PyNames.INIT_DOT_PY;
      }
      psiFile=placeFile(project,path,filename);
    }
 else     if (file.isDirectory()) {
      psiFile=placeFile(project,file.getPath(),PyNames.INIT_DOT_PY);
    }
 else {
      psiFile=PsiManager.getInstance(project).findFile(file);
    }
  }
 catch (  IOException e) {
    LOG.error(e);
  }
  LOG.assertTrue(psiFile != null);
  if (psiFile.getLastChild() != null) {
    psiFile.add(PyElementGenerator.getInstance(project).createFromText(LanguageLevel.PYTHON24,PsiWhiteSpace.class,"\n\n"));
  }
  newClass=(PyClass)psiFile.add(newClass);
  PyClassRefactoringUtil.insertImport(clazz,Collections.singleton((PsiNamedElement)newClass));
  return newClass;
}
