{
  if (!CodeInsightSettings.getInstance().OPTIMIZE_IMPORTS_ON_THE_FLY)   return false;
  if (onTheFly && editor != null) {
    final VirtualFile vfile=myFile.getVirtualFile();
    if (vfile != null && ProjectRootManager.getInstance(myFile.getProject()).getFileIndex().isInSource(vfile)) {
      final GrImportStatement[] imports=myFile.getImportStatements();
      if (imports.length > 0) {
        final int offset=editor.getCaretModel().getOffset();
        if (imports[0].getTextRange().getStartOffset() <= offset && offset <= imports[imports.length - 1].getTextRange().getEndOffset()) {
          return false;
        }
      }
    }
  }
  DaemonCodeAnalyzerImpl codeAnalyzer=(DaemonCodeAnalyzerImpl)DaemonCodeAnalyzer.getInstance(myFile.getProject());
  if (!codeAnalyzer.isHighlightingAvailable(myFile))   return false;
  if (!codeAnalyzer.isErrorAnalyzingFinished(myFile))   return false;
  Document myDocument=PsiDocumentManager.getInstance(myFile.getProject()).getDocument(myFile);
  boolean errors=containsErrorsPreventingOptimize(myFile,myDocument);
  return !errors && DaemonListeners.canChangeFileSilently(myFile);
}
