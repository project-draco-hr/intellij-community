{
  assertNotNull(gutterMark);
  assertEquals(tooltip,gutterMark.getTooltipText());
  assertEquals(icon,gutterMark.getIcon());
  final LineMarkerInfo.LineMarkerGutterIconRenderer renderer=assertInstanceOf(gutterMark,LineMarkerInfo.LineMarkerGutterIconRenderer.class);
  final LineMarkerInfo lineMarkerInfo=renderer.getLineMarkerInfo();
  final DefaultGutterIconNavigationHandler navigationGutterIconRenderer=assertInstanceOf(lineMarkerInfo.getNavigationHandler(),DefaultGutterIconNavigationHandler.class);
  @SuppressWarnings("unchecked") final Collection<NavigatablePsiElement> targetElements=navigationGutterIconRenderer.getReferences();
  assertSameElements(ContainerUtil.map(targetElements,new Function<PsiElement,String>(){
    @Override public String fun(    PsiElement element){
      return SymbolPresentationUtil.getSymbolPresentableText(element);
    }
  }
),expectedTargets);
}
