{
  MyOrderProvider provider=new MyOrderProvider(myProject);
  provider.setOrder("b_ordered.java","a_folder_ordered","b_ordered.txt","a_ordered.txt","b_folder_ordered","a_ordered.java");
  getProjectTreeStructure().setProviders(provider);
  myProjectView.setManualOrder(myPane.getId(),true);
  ((ProjectViewImpl)myProjectView).setFoldersAlwaysOnTop(true);
  myProjectView.setSortByType(myPane.getId(),false);
  assertTree("-manualOrder\n" + " b_ordered.java\n" + " +a_folder_ordered\n"+ " b_ordered.txt\n"+ " a_ordered.txt\n"+ " +b_folder_ordered\n"+ " a_ordered.java\n"+ " +a_folder_unordered\n"+ " +b_folder_unordered\n"+ " a_unordered.java\n"+ " a_unordered.txt\n"+ " b_unordered.java\n"+ " b_unordered.txt\n");
  myProjectView.setSortByType(myPane.getId(),true);
  assertTree("-manualOrder\n" + " b_ordered.java\n" + " +a_folder_ordered\n"+ " b_ordered.txt\n"+ " a_ordered.txt\n"+ " +b_folder_ordered\n"+ " a_ordered.java\n"+ " +a_folder_unordered\n"+ " +b_folder_unordered\n"+ " a_unordered.java\n"+ " b_unordered.java\n"+ " a_unordered.txt\n"+ " b_unordered.txt\n");
  ((ProjectViewImpl)myProjectView).setFoldersAlwaysOnTop(false);
  myProjectView.setSortByType(myPane.getId(),false);
  assertTree("-manualOrder\n" + " b_ordered.java\n" + " +a_folder_ordered\n"+ " b_ordered.txt\n"+ " a_ordered.txt\n"+ " +b_folder_ordered\n"+ " a_ordered.java\n"+ " +a_folder_unordered\n"+ " a_unordered.java\n"+ " a_unordered.txt\n"+ " +b_folder_unordered\n"+ " b_unordered.java\n"+ " b_unordered.txt\n");
  myProjectView.setSortByType(myPane.getId(),true);
  assertTree("-manualOrder\n" + " b_ordered.java\n" + " +a_folder_ordered\n"+ " b_ordered.txt\n"+ " a_ordered.txt\n"+ " +b_folder_ordered\n"+ " a_ordered.java\n"+ " a_unordered.java\n"+ " b_unordered.java\n"+ " a_unordered.txt\n"+ " b_unordered.txt\n"+ " +a_folder_unordered\n"+ " +b_folder_unordered\n");
}
