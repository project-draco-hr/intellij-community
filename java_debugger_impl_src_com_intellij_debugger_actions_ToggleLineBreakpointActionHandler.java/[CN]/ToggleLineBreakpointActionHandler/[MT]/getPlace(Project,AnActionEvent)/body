{
  Editor editor=event.getData(CommonDataKeys.EDITOR);
  if (editor == null) {
    editor=FileEditorManager.getInstance(project).getSelectedTextEditor();
  }
  if (editor == null) {
    return null;
  }
  final Document document=editor.getDocument();
  PsiDocumentManager.getInstance(project).commitDocument(document);
  PsiFile file=PsiDocumentManager.getInstance(project).getPsiFile(document);
  if (file == null) {
    return null;
  }
  int visualLine=editor.getCaretModel().getVisualPosition().getLine();
  int visibleOffset=editor.getCaretModel().getOffset();
  while (editor.offsetToVisualPosition(visibleOffset).line == visualLine) {
    int line=document.getLineNumber(visibleOffset);
    if (!containsOnlyDeclarations(line,document,file)) {
      return new PlaceInDocument(document,visibleOffset);
    }
    int lineEndOffset=document.getLineEndOffset(line);
    FoldRegion region=editor.getFoldingModel().getCollapsedRegionAtOffset(lineEndOffset);
    if (region != null) {
      int foldEnd=region.getEndOffset();
      if (foldEnd > lineEndOffset) {
        visibleOffset=foldEnd;
        continue;
      }
    }
    visibleOffset=lineEndOffset + 1;
  }
  return new PlaceInDocument(document,editor.getCaretModel().getOffset());
}
