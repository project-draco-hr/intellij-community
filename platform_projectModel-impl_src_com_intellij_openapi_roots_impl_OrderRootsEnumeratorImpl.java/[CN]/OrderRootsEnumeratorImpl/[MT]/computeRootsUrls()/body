{
  final Collection<String> result=new LinkedHashSet<String>();
  myOrderEnumerator.forEach(new PairProcessor<OrderEntry,List<OrderEnumerationHandler>>(){
    @Override public boolean process(    OrderEntry orderEntry,    List<OrderEnumerationHandler> customHandlers){
      OrderRootType type=getRootType(orderEntry);
      if (orderEntry instanceof ModuleSourceOrderEntry) {
        collectModuleRootsUrls(type,((ModuleSourceOrderEntry)orderEntry).getRootModel(),result,true,!myOrderEnumerator.isProductionOnly());
      }
 else       if (orderEntry instanceof ModuleOrderEntry) {
        ModuleOrderEntry moduleOrderEntry=(ModuleOrderEntry)orderEntry;
        final Module module=moduleOrderEntry.getModule();
        if (module != null) {
          ModuleRootModel rootModel=myOrderEnumerator.getRootModel(module);
          boolean productionOnTests=orderEntry instanceof ModuleOrderEntryImpl && ((ModuleOrderEntryImpl)orderEntry).isProductionOnTestDependency();
          boolean includeTests=!myOrderEnumerator.isProductionOnly() && myOrderEnumerator.shouldIncludeTestsFromDependentModulesToTestClasspath(customHandlers) || productionOnTests;
          collectModuleRootsUrls(type,rootModel,result,!productionOnTests,includeTests);
        }
      }
 else {
        if (myOrderEnumerator.addCustomRootUrlsForLibrary(orderEntry,type,result,customHandlers)) {
          return true;
        }
        Collections.addAll(result,orderEntry.getUrls(type));
      }
      return true;
    }
  }
);
  return result;
}
