{
  String fileName=file.getName();
  Collection<VirtualFile> filesWithSameName=skipNonOpenedFiles ? Collections.<VirtualFile>emptySet() : FilenameIndex.getVirtualFilesByName(project,fileName,ProjectScope.getProjectScope(project));
  THashSet<VirtualFile> setOfFilesWithTheSameName=new THashSet<VirtualFile>(filesWithSameName);
  for (  VirtualFile openFile : FileEditorManager.getInstance(project).getOpenFiles()) {
    if (openFile.getName().equals(fileName)) {
      setOfFilesWithTheSameName.add(openFile);
    }
  }
  filesWithSameName=setOfFilesWithTheSameName;
  if (filesWithSameName.size() > 1 && filesWithSameName.contains(file)) {
    if (file instanceof VirtualFilePathWrapper) {
      return ((VirtualFilePathWrapper)file).getPresentablePath();
    }
    String path=project.getBasePath();
    path=path == null ? "" : FileUtil.toSystemIndependentName(path);
    UniqueNameBuilder<VirtualFile> builder=new UniqueNameBuilder<VirtualFile>(path,File.separator,25);
    for (    VirtualFile virtualFile : filesWithSameName) {
      builder.addPath(virtualFile,virtualFile.getPath());
    }
    return getEditorTabText(file,builder,UISettings.getInstance().HIDE_KNOWN_EXTENSION_IN_TABS);
  }
  return file.getPresentableName();
}
