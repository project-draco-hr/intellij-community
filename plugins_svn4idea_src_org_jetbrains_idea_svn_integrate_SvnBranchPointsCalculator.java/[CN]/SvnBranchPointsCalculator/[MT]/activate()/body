{
synchronized (myPersistenceLock) {
    myPersistentMap=new SmallMapSerializer<>(myFile,EnumeratorStringDescriptor.INSTANCE,new BranchDataExternalizer());
  }
  myCache=new ValueHolder<WrapperInvertor,KeyData>(){
    public WrapperInvertor getValue(    KeyData dataHolder){
      WrapperInvertor result=getBestHit(dataHolder.getRepoUrl(),dataHolder.getSourceUrl(),dataHolder.getTargetUrl());
      if (LOG.isDebugEnabled()) {
        LOG.debug("Persistent for: " + dataHolder.toString() + " returned: "+ (result == null ? null : result.toString()));
      }
      return result;
    }
    public void setValue(    WrapperInvertor value,    KeyData dataHolder){
      if (LOG.isDebugEnabled()) {
        LOG.debug("Put into persistent: key: " + dataHolder.toString() + " value: "+ value.toString());
      }
      persist(dataHolder.getRepoUrl(),value.getWrapped().getTarget(),value.getWrapped());
    }
  }
;
}
