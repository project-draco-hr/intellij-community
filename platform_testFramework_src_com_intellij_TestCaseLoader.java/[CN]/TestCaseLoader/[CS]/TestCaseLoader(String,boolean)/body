{
  myIsPerformanceTestsRun=isPerformanceTestsRun;
  String patterns=System.getProperty(TARGET_TEST_PATTERNS);
  if (patterns != null) {
    myTestClassesFilter=new PatternListTestClassFilter(StringUtil.split(patterns,";"));
    System.out.println("Using patterns: [" + patterns + "]");
  }
 else {
    URL excludedStream=StringUtil.isEmpty(classFilterName) ? null : getClass().getClassLoader().getResource(classFilterName);
    if (excludedStream != null) {
      TestClassesFilter filter;
      try {
        List<String> testGroupNames=StringUtil.split(System.getProperty(TARGET_TEST_GROUP,"").trim(),";");
        InputStreamReader reader=new InputStreamReader(excludedStream.openStream());
        try {
          filter=GroupBasedTestClassFilter.createOn(reader,testGroupNames);
          System.out.println("Using test groups: " + testGroupNames);
        }
  finally {
          reader.close();
        }
      }
 catch (      IOException e) {
        e.printStackTrace();
        filter=TestClassesFilter.ALL_CLASSES;
        System.out.println("Using all classes");
      }
      myTestClassesFilter=filter;
    }
 else {
      myTestClassesFilter=TestClassesFilter.ALL_CLASSES;
      System.out.println("Using all classes");
    }
  }
}
