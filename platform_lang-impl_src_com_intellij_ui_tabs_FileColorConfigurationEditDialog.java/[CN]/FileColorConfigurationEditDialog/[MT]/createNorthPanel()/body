{
  final List<NamedScope> scopeList=new ArrayList<>();
  final Project project=myManager.getProject();
  final NamedScopesHolder[] scopeHolders=NamedScopeManager.getAllNamedScopeHolders(project);
  for (  final NamedScopesHolder scopeHolder : scopeHolders) {
    final NamedScope[] scopes=scopeHolder.getScopes();
    Collections.addAll(scopeList,scopes);
  }
  CustomScopesProviderEx.filterNoSettingsScopes(project,scopeList);
  for (  final NamedScope scope : scopeList) {
    myScopeNames.put(scope.getName(),scope);
  }
  myScopeComboBox=new JComboBox(ArrayUtil.toStringArray(myScopeNames.keySet()));
  myScopeComboBox.addActionListener(new ActionListener(){
    @Override public void actionPerformed(    ActionEvent e){
      updateCustomButton();
      updateOKButton();
    }
  }
);
  new ComboboxSpeedSearch(myScopeComboBox);
  final JLabel pathLabel=new JLabel("Scope:");
  pathLabel.setDisplayedMnemonic('S');
  pathLabel.setLabelFor(myScopeComboBox);
  final JLabel colorLabel=new JLabel("Color:");
  JPanel result=new JPanel(new GridBagLayout());
  GridBagConstraints gbc=new GridBagConstraints();
  gbc.fill=GridBagConstraints.BOTH;
  gbc.insets=JBUI.insets(5);
  gbc.gridx=0;
  result.add(pathLabel,gbc);
  result.add(colorLabel,gbc);
  gbc.gridx=1;
  gbc.weightx=1;
  result.add(myScopeComboBox,gbc);
  result.add(myColorSelectionComponent,gbc);
  return result;
}
