{
  myIndexId=extension.getName();
  myExtension=extension;
  myIndexer=extension.getIndexer();
  myStorage=storage;
  myHasSnapshotMapping=extension instanceof FileBasedIndexExtension && ((FileBasedIndexExtension<Key,Value>)extension).hasSnapshotMapping() && IdIndex.ourSnapshotMappingsEnabled;
  mySnapshotIndexExternalizer=createInputsIndexExternalizer(extension,myIndexId,extension.getKeyDescriptor());
  myValueExternalizer=extension.getValueExternalizer();
  myContents=createContentsIndex();
  myIsPsiBackedIndex=extension instanceof PsiDependentIndex;
  if (myHasSnapshotMapping) {
    myInputsSnapshotMapping=createInputSnapshotMapping();
  }
  myInputsIndex=createInputsIndex();
  if (DebugAssertions.EXTRA_SANITY_CHECKS && myHasSnapshotMapping && myIndexId != null) {
    myIndexingTrace=createIndexingTrace();
  }
  if (storage instanceof MemoryIndexStorage) {
    ((MemoryIndexStorage)storage).addBufferingStateListener(new MemoryIndexStorage.BufferingStateListener(){
      @Override public void bufferingStateChanged(      boolean newState){
        myIsBufferingMode.set(newState);
      }
      @Override public void memoryStorageCleared(){
synchronized (myInMemoryKeys) {
          myInMemoryKeys.clear();
        }
      }
    }
);
  }
}
