{
  FileASTNode fileElement=SharedImplUtil.findFileElement(element.getNode());
  if (fileElement == null) {
    PsiUtilCore.ensureValid(element);
    LOG.error("fileElement == null!");
    return JavaResolveResult.EMPTY_ARRAY;
  }
  PsiFile psiFile=SharedImplUtil.getContainingFile(fileElement);
  PsiManager manager=psiFile == null ? null : psiFile.getManager();
  if (manager == null) {
    PsiUtilCore.ensureValid(element);
    LOG.error("getManager() == null!");
    return JavaResolveResult.EMPTY_ARRAY;
  }
  boolean valid=psiFile.isValid();
  if (!valid) {
    PsiUtilCore.ensureValid(element);
    LOG.error("psiFile.isValid() == false!");
    return JavaResolveResult.EMPTY_ARRAY;
  }
  if (element instanceof PsiMethodReferenceExpression) {
    final Map<PsiMethodReferenceExpression,PsiType> map=PsiMethodReferenceUtil.ourRefs.get();
    if (map != null && map.containsKey(element)) {
      return (JavaResolveResult[])resolver.resolve(element,psiFile,incompleteCode);
    }
  }
  return multiResolveImpl(manager.getProject(),psiFile,element,incompleteCode,resolver);
}
