{
  if (type instanceof PsiCapturedWildcardType) {
    final PsiWildcardType wildcardType=((PsiCapturedWildcardType)type).getWildcard();
    if (expression instanceof PsiReferenceExpression && LambdaUtil.isLambdaReturnExpression(expression)) {
      return type;
    }
    if (PsiUtil.isAccessedForWriting(topLevel)) {
      return wildcardType.isSuper() ? wildcardType.getBound() : PsiCapturedWildcardType.create(wildcardType,expression);
    }
 else {
      final PsiType upperBound=((PsiCapturedWildcardType)type).getUpperBound();
      return upperBound instanceof PsiWildcardType ? doNormalizeWildcardByPosition(upperBound,expression,topLevel) : upperBound;
    }
  }
  if (type instanceof PsiWildcardType) {
    final PsiWildcardType wildcardType=(PsiWildcardType)type;
    if (PsiUtil.isAccessedForWriting(topLevel)) {
      return wildcardType.isSuper() ? wildcardType.getBound() : PsiCapturedWildcardType.create(wildcardType,expression);
    }
 else {
      if (wildcardType.isExtends()) {
        return wildcardType.getBound();
      }
 else {
        return PsiType.getJavaLangObject(expression.getManager(),expression.getResolveScope());
      }
    }
  }
 else   if (type instanceof PsiArrayType) {
    final PsiType componentType=((PsiArrayType)type).getComponentType();
    final PsiType normalizedComponentType=doNormalizeWildcardByPosition(componentType,expression,topLevel);
    if (normalizedComponentType != componentType) {
      return normalizedComponentType.createArrayType();
    }
  }
  return type;
}
