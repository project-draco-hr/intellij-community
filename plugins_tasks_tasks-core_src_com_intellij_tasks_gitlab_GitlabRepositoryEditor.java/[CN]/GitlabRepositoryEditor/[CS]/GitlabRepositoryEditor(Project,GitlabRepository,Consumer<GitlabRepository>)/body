{
  super(project,repository,changeListener);
  myPasswordLabel.setText("Token:");
  myUsernameLabel.setVisible(false);
  myUserNameText.setVisible(false);
  myTestButton.setEnabled(myRepository.isConfigured());
  myProjectComboBox.setRenderer(new ListCellRendererWrapper<GitlabProject>(){
    @Override public void customize(    JList list,    GitlabProject project,    int index,    boolean selected,    boolean hasFocus){
      setText(project == null ? "Set server URL and token first" : project.getName());
    }
  }
);
  myPasswordText.getDocument().addDocumentListener(new DocumentAdapter(){
    @Override protected void textChanged(    DocumentEvent e){
      if (myPasswordText.getPassword().length != 0) {
        new FetchProjectsTask().queue();
      }
    }
  }
);
  installListener(myProjectComboBox);
  myProjectComboBox.addItemListener(new ItemListener(){
    @Override public void itemStateChanged(    ItemEvent e){
      if (e.getStateChange() == ItemEvent.SELECTED) {
        myRepository.setCurrentProject((GitlabProject)e.getItem());
      }
    }
  }
);
  UIUtil.invokeLaterIfNeeded(new Runnable(){
    @Override public void run(){
      initialize();
    }
  }
);
}
