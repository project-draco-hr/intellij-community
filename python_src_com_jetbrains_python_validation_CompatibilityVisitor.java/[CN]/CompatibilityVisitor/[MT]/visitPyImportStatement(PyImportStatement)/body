{
  super.visitPyImportStatement(node);
  if (PydevConsoleRunner.isInPydevConsole(node))   return;
  PyIfStatement ifParent=PsiTreeUtil.getParentOfType(node,PyIfStatement.class);
  if (ifParent != null)   return;
  PyImportElement[] importElements=node.getImportElements();
  int len=0;
  String moduleName="";
  StringBuilder message=new StringBuilder(myCommonMessage);
  for (int i=0; i != myVersionsToProcess.size(); ++i) {
    LanguageLevel languageLevel=myVersionsToProcess.get(i);
    for (    PyImportElement importElement : importElements) {
      final PyQualifiedName qName=importElement.getImportedQName();
      if (qName != null) {
        if (!languageLevel.isPy3K()) {
          if (qName.matches("builtins")) {
            len=appendLanguageLevel(message,len,languageLevel);
            moduleName="builtins";
          }
        }
 else {
          if (qName.matches("__builtin__")) {
            len=appendLanguageLevel(message,len,languageLevel);
            moduleName="__builtin__";
          }
        }
      }
    }
  }
  commonRegisterProblem(message," not have module " + moduleName,len,node,new ReplaceBuiltinsQuickFix());
}
