{
  super.visitPyRaiseStatement(node);
  int len=0;
  StringBuilder message=new StringBuilder(myCommonMessage);
  for (int i=0; i != myVersionsToProcess.size(); ++i) {
    LanguageLevel languageLevel=myVersionsToProcess.get(i);
    boolean hasNoArgs=UnsupportedFeaturesUtil.raiseHasNoArgs(node,languageLevel);
    if (hasNoArgs) {
      len=appendLanguageLevel(message,len,languageLevel);
    }
  }
  commonRegisterProblem(message," not support this syntax. Raise with no arguments can only be used in an except block",len,node,null);
  len=0;
  message=new StringBuilder(myCommonMessage);
  for (int i=0; i != myVersionsToProcess.size(); ++i) {
    LanguageLevel languageLevel=myVersionsToProcess.get(i);
    boolean hasTwoArgs=UnsupportedFeaturesUtil.raiseHasMoreThenOneArg(node,languageLevel);
    if (hasTwoArgs) {
      len=appendLanguageLevel(message,len,languageLevel);
    }
  }
  commonRegisterProblem(message," not support this syntax.",len,node,new ReplaceRaiseStatementQuickFix());
  len=0;
  message=new StringBuilder(myCommonMessage);
  for (int i=0; i != myVersionsToProcess.size(); ++i) {
    final LanguageLevel languageLevel=myVersionsToProcess.get(i);
    final boolean hasFrom=UnsupportedFeaturesUtil.raiseHasFromKeyword(node,languageLevel);
    if (hasFrom) {
      len=appendLanguageLevel(message,len,languageLevel);
    }
  }
  commonRegisterProblem(message," not support this syntax.",len,node,new ReplaceRaiseStatementQuickFix());
}
