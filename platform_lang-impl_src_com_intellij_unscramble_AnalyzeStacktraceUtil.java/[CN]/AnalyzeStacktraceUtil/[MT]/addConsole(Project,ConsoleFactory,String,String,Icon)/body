{
  final TextConsoleBuilder builder=TextConsoleBuilderFactory.getInstance().createBuilder(project);
  builder.filters(Extensions.getExtensions(EP_NAME,project));
  final ConsoleView consoleView=builder.getConsole();
  final DefaultActionGroup toolbarActions=new DefaultActionGroup();
  JComponent consoleComponent=consoleFactory != null ? consoleFactory.createConsoleComponent(consoleView,toolbarActions) : new MyConsolePanel(consoleView,toolbarActions);
  final RunContentDescriptor descriptor=new RunContentDescriptor(consoleView,null,consoleComponent,tabTitle,icon){
    @Override public boolean isContentReuseProhibited(){
      return true;
    }
  }
;
  final Executor executor=DefaultRunExecutor.getRunExecutorInstance();
  for (  AnAction action : consoleView.createConsoleActions()) {
    toolbarActions.add(action);
  }
  final ConsoleViewImpl console=(ConsoleViewImpl)consoleView;
  ConsoleViewUtil.enableReplaceActionForConsoleViewEditor(console.getEditor());
  console.getEditor().getSettings().setCaretRowShown(true);
  toolbarActions.add(new AnnotateStackTraceAction(console.getEditor(),console.getHyperlinks()));
  toolbarActions.add(new CloseAction(executor,descriptor,project));
  ExecutionManager.getInstance(project).getContentManager().showRunContent(executor,descriptor);
  consoleView.allowHeavyFilters();
  if (consoleFactory == null) {
    printStacktrace(consoleView,text);
  }
  return descriptor;
}
