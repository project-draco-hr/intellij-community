{
  this.token.setText(token);
  this.password.setText(password);
  if (note == null) {
    this.note.setVisible(false);
  }
 else {
    Matcher matcher=HREF_PATTERN.matcher(note);
    int prev=0;
    if (matcher.find()) {
      do {
        if (matcher.start() != prev) {
          this.note.append(note.substring(prev,matcher.start()),new SimpleTextAttributes(SimpleTextAttributes.STYLE_SMALLER,null));
        }
        this.note.append(matcher.group(2),new SimpleTextAttributes(SimpleTextAttributes.STYLE_SMALLER,JBColor.blue),new SimpleColoredComponent.BrowserLauncherTag(matcher.group(1)));
        prev=matcher.end();
      }
 while (matcher.find());
      LinkMouseListenerBase.installSingleTagOn(this.note);
    }
    if (prev < note.length()) {
      this.note.append(note.substring(prev),new SimpleTextAttributes(SimpleTextAttributes.STYLE_SMALLER,null));
    }
  }
}
