{
  if (!parameters.isAutoPopup()) {
    return;
  }
  PsiFile file=parameters.getPosition().getContainingFile();
  int offset=parameters.getOffset();
  Editor editor=parameters.getEditor();
  ZenCodingGenerator generator=findApplicableDefaultGenerator(CustomTemplateCallback.getContext(file,offset),false);
  if (generator != null && generator.hasCompletionItem()) {
    final Ref<TemplateImpl> generatedTemplate=new Ref<TemplateImpl>();
    final CustomTemplateCallback callback=new CustomTemplateCallback(editor,file){
      @Override public void deleteTemplateKey(      @NotNull String key){
      }
      @Override public void startTemplate(      @NotNull Template template,      Map<String,String> predefinedValues,      TemplateEditingListener listener){
        if (template instanceof TemplateImpl && !((TemplateImpl)template).isDeactivated()) {
          generatedTemplate.set((TemplateImpl)template);
        }
      }
    }
;
    final String templatePrefix=computeTemplateKeyWithoutContextChecking(callback);
    if (templatePrefix != null) {
      List<TemplateImpl> regularTemplates=TemplateManagerImpl.listApplicableTemplates(file,offset,false);
      boolean regularTemplateWithSamePrefixExists=!ContainerUtil.filter(regularTemplates,new Condition<TemplateImpl>(){
        @Override public boolean value(        TemplateImpl template){
          return templatePrefix.equals(template.getKey());
        }
      }
).isEmpty();
      CompletionResultSet resultSet=result.withPrefixMatcher(result.getPrefixMatcher().cloneWithPrefix(templatePrefix));
      resultSet.restartCompletionOnPrefixChange(StandardPatterns.string().startsWith(templatePrefix));
      if (!regularTemplateWithSamePrefixExists) {
        final Collection<SingleLineEmmetFilter> extraFilters=ContainerUtil.newLinkedList(new SingleLineEmmetFilter());
        try {
          expand(templatePrefix,callback,generator,extraFilters,false,0);
        }
 catch (        EmmetException e) {
          generatedTemplate.set(null);
        }
        if (!generatedTemplate.isNull()) {
          final TemplateImpl template=generatedTemplate.get();
          template.setKey(templatePrefix);
          template.setDescription(template.getTemplateText());
          resultSet.addElement(new CustomLiveTemplateLookupElement(this,template.getKey(),template.getKey(),template.getDescription(),!LiveTemplateCompletionContributor.shouldShowAllTemplates(),true));
        }
      }
    }
 else     if (result.getPrefixMatcher().getPrefix().isEmpty()) {
      result.restartCompletionOnPrefixChange(StandardPatterns.string().longerThan(0));
    }
  }
}
