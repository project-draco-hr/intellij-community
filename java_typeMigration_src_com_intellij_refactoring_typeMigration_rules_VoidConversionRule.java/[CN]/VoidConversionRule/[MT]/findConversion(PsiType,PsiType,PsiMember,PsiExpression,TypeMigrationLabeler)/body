{
  if (PsiType.VOID.equals(to) && context.getParent() instanceof PsiReturnStatement && !SideEffectChecker.mayHaveSideEffects(context)) {
    return new TypeConversionDescriptorBase(){
      @Override public PsiExpression replace(      PsiExpression expression,      @NotNull TypeEvaluator evaluator) throws IncorrectOperationException {
        final PsiElement parent=expression.getParent();
        if (parent instanceof PsiReturnStatement) {
          expression.delete();
          if (UnnecessaryReturnInspection.isReturnRedundant((PsiReturnStatement)parent,false,null)) {
            parent.delete();
          }
        }
        return null;
      }
    }
;
  }
  return null;
}
