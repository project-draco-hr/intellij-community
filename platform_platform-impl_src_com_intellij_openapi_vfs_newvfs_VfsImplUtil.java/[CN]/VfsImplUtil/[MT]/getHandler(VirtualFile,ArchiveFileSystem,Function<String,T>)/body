{
  checkSubscription();
  String rootPath=vfs.extractRootPath(entryFile.getPath());
  rootPath=vfs.extractLocalPath(rootPath);
  ArchiveHandler handler;
  boolean refresh=false;
synchronized (ourLock) {
    Pair<ArchiveFileSystem,ArchiveHandler> record=ourHandlers.get(rootPath);
    if (record == null) {
      handler=producer.fun(rootPath);
      record=Pair.create(vfs,handler);
      ourHandlers.put(rootPath,record);
      final String finalRootPath=rootPath;
      forEachDirectoryComponent(rootPath,new Processor<String>(){
        @Override public boolean process(        String containingDirectoryPath){
          Set<String> handlers=ourDominatorsMap.get(containingDirectoryPath);
          if (handlers == null) {
            ourDominatorsMap.put(containingDirectoryPath,handlers=new THashSet<String>());
          }
          handlers.add(finalRootPath);
          return true;
        }
      }
);
      refresh=true;
    }
    handler=record.second;
  }
  if (refresh) {
    final File file=handler.getFile();
    ApplicationManager.getApplication().invokeLater(new Runnable(){
      @Override public void run(){
        LocalFileSystem.getInstance().refreshAndFindFileByIoFile(file);
      }
    }
,ModalityState.defaultModalityState());
  }
  @SuppressWarnings("unchecked") T t=(T)handler;
  return t;
}
