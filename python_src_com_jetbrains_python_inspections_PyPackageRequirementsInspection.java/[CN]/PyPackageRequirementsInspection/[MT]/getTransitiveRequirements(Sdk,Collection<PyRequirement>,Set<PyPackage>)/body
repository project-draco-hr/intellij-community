{
  if (requirements.isEmpty()) {
    return Collections.emptySet();
  }
  final Set<PyRequirement> results=new HashSet<>(requirements);
  final List<PyPackage> packages=PyPackageManager.getInstance(sdk).getPackages();
  if (packages == null)   return null;
  for (  PyRequirement req : requirements) {
    final PyPackage pkg=req.match(packages);
    if (pkg != null && !visited.contains(pkg)) {
      visited.add(pkg);
      final Set<PyRequirement> transitive=getTransitiveRequirements(sdk,pkg.getRequirements(),visited);
      if (transitive == null)       return null;
      results.addAll(transitive);
    }
  }
  return results;
}
