{
  final VirtualFile requirementsTxt=PyPackageUtil.findRequirementsTxt(myModule);
  final PyListLiteralExpression setupPyRequires=PyPackageUtil.findSetupPyRequires(myModule);
  CommandProcessor.getInstance().executeCommand(project,new Runnable(){
    @Override public void run(){
      ApplicationManager.getApplication().runWriteAction(new Runnable(){
        @Override public void run(){
          if (requirementsTxt != null) {
            if (requirementsTxt.isWritable()) {
              final Document document=FileDocumentManager.getInstance().getDocument(requirementsTxt);
              if (document != null) {
                document.insertString(0,myPackageName + "\n");
              }
            }
          }
 else {
            final PyElementGenerator generator=PyElementGenerator.getInstance(project);
            final PyArgumentList argumentList=findSetupArgumentList();
            if (setupPyRequires != null) {
              if (setupPyRequires.getContainingFile().isWritable()) {
                final String text=String.format("'%s'",myPackageName);
                final PyExpression generated=generator.createExpressionFromText(myLanguageLevel,text);
                setupPyRequires.add(generated);
              }
            }
 else             if (argumentList != null) {
              final PyKeywordArgument requiresArg=generateRequiresKwarg(generator);
              if (requiresArg != null) {
                argumentList.addArgument(requiresArg);
              }
            }
          }
        }
        @Nullable private PyKeywordArgument generateRequiresKwarg(        PyElementGenerator generator){
          final String text=String.format("foo(requires=['%s'])",myPackageName);
          final PyExpression generated=generator.createExpressionFromText(myLanguageLevel,text);
          PyKeywordArgument installRequiresArg=null;
          if (generated instanceof PyCallExpression) {
            final PyCallExpression foo=(PyCallExpression)generated;
            for (            PyExpression arg : foo.getArguments()) {
              if (arg instanceof PyKeywordArgument) {
                final PyKeywordArgument kwarg=(PyKeywordArgument)arg;
                if ("requires".equals(kwarg.getKeyword())) {
                  installRequiresArg=kwarg;
                }
              }
            }
          }
          return installRequiresArg;
        }
      }
);
    }
  }
,getName(),null);
}
