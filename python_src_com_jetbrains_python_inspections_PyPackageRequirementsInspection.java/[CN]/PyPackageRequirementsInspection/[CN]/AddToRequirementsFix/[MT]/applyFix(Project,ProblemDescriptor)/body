{
  CommandProcessor.getInstance().executeCommand(project,new Runnable(){
    @Override public void run(){
      ApplicationManager.getApplication().runWriteAction(new Runnable(){
        @Override public void run(){
          if (myRequirementsTxt != null) {
            if (myRequirementsTxt.isWritable()) {
              myRequirementsTxt.insertString(0,myPackageName + "\n");
            }
          }
 else {
            final PyElementGenerator generator=PyElementGenerator.getInstance(project);
            if (myInstallRequires != null) {
              if (myInstallRequires.getContainingFile().isWritable()) {
                final PyStringLiteralExpression literal=generator.createStringLiteralFromString(myPackageName);
                myInstallRequires.add(literal);
              }
            }
 else             if (mySetupArgumentList != null) {
              final PyKeywordArgument installRequiresArg=generateInstallRequiresKwarg(generator);
              if (installRequiresArg != null) {
                mySetupArgumentList.addArgument(installRequiresArg);
              }
            }
          }
        }
        @Nullable private PyKeywordArgument generateInstallRequiresKwarg(        PyElementGenerator generator){
          final String text=String.format("foo(install_requires=[\"%s\"])",myPackageName);
          final PyExpression generated=generator.createExpressionFromText(myLanguageLevel,text);
          PyKeywordArgument installRequiresArg=null;
          if (generated instanceof PyCallExpression) {
            final PyCallExpression foo=(PyCallExpression)generated;
            for (            PyExpression arg : foo.getArguments()) {
              if (arg instanceof PyKeywordArgument) {
                final PyKeywordArgument kwarg=(PyKeywordArgument)arg;
                if ("install_requires".equals(kwarg.getKeyword())) {
                  installRequiresArg=kwarg;
                }
              }
            }
          }
          return installRequiresArg;
        }
      }
);
    }
  }
,getName(),null);
}
