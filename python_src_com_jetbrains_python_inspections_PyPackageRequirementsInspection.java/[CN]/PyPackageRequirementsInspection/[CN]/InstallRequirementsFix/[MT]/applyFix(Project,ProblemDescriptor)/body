{
  final List<PyRequirement> chosen;
  if (myUnsatisfied.size() > 1) {
    final PyChooseRequirementsDialog dialog=new PyChooseRequirementsDialog(project,myUnsatisfied);
    chosen=dialog.showAndGetResult();
  }
 else {
    chosen=myUnsatisfied;
  }
  if (chosen.isEmpty()) {
    return;
  }
  final PyPackageManager.UI ui=new PyPackageManager.UI(project,mySdk,new PyPackageManager.UI.Listener(){
    @Override public void started(){
      setRunningPackagingTasks(myModule,true);
    }
    @Override public void finished(    List<PyExternalProcessException> exceptions){
      setRunningPackagingTasks(myModule,false);
    }
  }
);
  ui.install(chosen,Collections.<String>emptyList());
}
