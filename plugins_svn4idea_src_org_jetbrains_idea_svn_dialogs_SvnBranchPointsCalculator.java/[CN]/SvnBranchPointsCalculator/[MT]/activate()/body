{
  ValueHolder<WrapperInvertor,KeyData> cache=null;
  myPersistentHolder=new PersistentHolder(myFile);
  cache=new ValueHolder<WrapperInvertor,KeyData>(){
    public WrapperInvertor getValue(    KeyData dataHolder){
      final WrapperInvertor result=myPersistentHolder.getBestHit(dataHolder.getRepoUrl(),dataHolder.getSourceUrl(),dataHolder.getTargetUrl());
      if (LOG.isDebugEnabled()) {
        LOG.debug("Persistent for: " + dataHolder.toString() + " returned: "+ (result == null ? null : result.toString()));
      }
      return result;
    }
    public void setValue(    WrapperInvertor value,    KeyData dataHolder){
      if (LOG.isDebugEnabled()) {
        LOG.debug("Put into persistent: key: " + dataHolder.toString() + " value: "+ value.toString());
      }
      myPersistentHolder.put(dataHolder.getRepoUrl(),value.getWrapped().getTarget(),value.getWrapped());
    }
  }
;
  myCalculator=new FactsCalculator<KeyData,WrapperInvertor,VcsException>(myProject,"Looking for branch origin",cache,new Loader(myProject));
}
