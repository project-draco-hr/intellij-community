{
  doTest("class Foo:\n" + " print <caret>123","class Foo:\n" + "    print <caret>123");
  doTest("def test(value):\n" + "  print <caret>value","def test(value):\n" + "    print <caret>value");
  doTest("def test(value):\n" + "    if value == 123:\n" + "   print <caret>value","def test(value):\n" + "    if value == 123:\n" + "        print <caret>value");
  doTest("def test(value):\n" + "    if value == 123:\n" + "        pass\n"+ "    elif value == 124:\n"+ "   print <caret>value","def test(value):\n" + "    if value == 123:\n" + "        pass\n"+ "    elif value == 124:\n"+ "        print <caret>value");
  doTest("def test(value):\n" + "    if value == 123:\n" + "        pass\n"+ "    else:\n"+ "   print <caret>value","def test(value):\n" + "    if value == 123:\n" + "        pass\n"+ "    else:\n"+ "        print <caret>value");
  doTest("def test(value):\n" + "    while value == 123:\n" + "   print <caret>value","def test(value):\n" + "    while value == 123:\n" + "        print <caret>value");
  doTest("def test(value):\n" + "    while value == 123:\n" + "        pass\n"+ "    else:\n"+ "   print <caret>value","def test(value):\n" + "    while value == 123:\n" + "        pass\n"+ "    else:\n"+ "        print <caret>value");
  doTest("def test(value):\n" + "    for i in value:\n" + "   print <caret>value","def test(value):\n" + "    for i in value:\n" + "        print <caret>value");
  doTest("def test(value):\n" + "    for i in value:\n" + "        pass\n"+ "    else\n"+ "   print <caret>value","def test(value):\n" + "    for i in value:\n" + "        pass\n"+ "    else\n"+ "        print <caret>value");
  doTest("def test(value):\n" + "    try:\n" + "   open()<caret>\n"+ "    except:\n"+ "        pass","def test(value):\n" + "    try:\n" + "        open()<caret>\n"+ "    except:\n"+ "        pass");
  doTest("def test(value):\n" + "    try:\n" + "        open()\n"+ "    except:\n"+ "   print <caret>123","def test(value):\n" + "    try:\n" + "        open()\n"+ "    except:\n"+ "        print <caret>123");
  doTest("def test(value):\n" + "    try:\n" + "        open()\n"+ "    finally:\n"+ "   print <caret>123","def test(value):\n" + "    try:\n" + "        open()\n"+ "    finally:\n"+ "        print <caret>123");
  setLanguageLevel(LanguageLevel.PYTHON26);
  try {
    doTest("def test(value):\n" + "    with 1 + 1 as a:\n" + "   print <caret>a","def test(value):\n" + "    with 1 + 1 as a:\n" + "        print <caret>a");
  }
  finally {
    setLanguageLevel(null);
  }
}
