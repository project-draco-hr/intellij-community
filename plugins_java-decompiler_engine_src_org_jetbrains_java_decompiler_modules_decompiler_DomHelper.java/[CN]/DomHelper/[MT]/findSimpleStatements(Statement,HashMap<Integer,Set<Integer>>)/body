{
  boolean found, success=false;
  do {
    found=false;
    List<Statement> lstStats=stat.getPostReversePostOrderList();
    for (    Statement st : lstStats) {
      Statement result=detectStatement(st);
      if (result != null) {
        if (stat.type == Statement.TYPE_GENERAL && result.getFirst() == stat.getFirst() && stat.getStats().size() == result.getStats().size()) {
          stat.type=Statement.TYPE_PLACEHOLDER;
        }
        stat.collapseNodesToStatement(result);
        if (!mapExtPost.isEmpty()) {
          HashSet<Integer> setOldNodes=new HashSet<>();
          for (          Statement old : result.getStats()) {
            setOldNodes.add(old.id);
          }
          Integer newid=result.id;
          for (          Integer key : new ArrayList<>(mapExtPost.keySet())) {
            Set<Integer> set=mapExtPost.get(key);
            int oldsize=set.size();
            set.removeAll(setOldNodes);
            if (setOldNodes.contains(key)) {
              Set<Integer> setNew=mapExtPost.get(newid);
              if (setNew == null) {
                mapExtPost.put(newid,setNew=new HashSet<>());
              }
              setNew.addAll(set);
              mapExtPost.remove(key);
            }
 else {
              if (set.size() < oldsize) {
                set.add(newid);
              }
            }
          }
        }
        found=true;
        break;
      }
    }
    if (found) {
      success=true;
    }
  }
 while (found);
  return success;
}
