{
  Editor selectedEditor=StudyEditor.getSelectedEditor(project);
  FileDocumentManager fileDocumentManager=FileDocumentManager.getInstance();
  VirtualFile openedFile=fileDocumentManager.getFile(selectedEditor.getDocument());
  StudyTaskManager taskManager=StudyTaskManager.getInstance(selectedEditor.getProject());
  TaskFile selectedTaskFile=taskManager.getTaskFile(openedFile);
  Window selectedWindow=selectedTaskFile.getSelectedWindow();
  if (selectedWindow != null)   selectedWindow.setResolveStatus(true);
  selectedTaskFile.setSelectedWindow(null);
  FileDocumentManager.getInstance().saveAllDocuments();
  if (!(project != null && project.isOpen())) {
    return;
  }
  String basePath=project.getBasePath();
  if (basePath == null)   return;
  if (selectedEditor == null) {
    return;
  }
  File testFile=new File(openedFile.getParent().getCanonicalPath(),selectedTaskFile.getTask().getTestFile());
  String testPath=testFile.getAbsolutePath();
  GeneralCommandLine cmd=new GeneralCommandLine();
  cmd.setWorkDirectory(openedFile.getParent().getCanonicalPath());
  cmd.setExePath("python");
  cmd.addParameter(testPath);
  try {
    Process p=cmd.createProcess();
    InputStream is_err=p.getErrorStream();
    InputStream is=p.getInputStream();
    BufferedReader bf=new BufferedReader(new InputStreamReader(is));
    BufferedReader bf_err=new BufferedReader(new InputStreamReader(is_err));
    String line;
    String testResult="test failed";
    while ((line=bf.readLine()) != null) {
      if (line.equals("OK")) {
        testResult="test passed";
        ProjectView.getInstance(project).refresh();
        selectedTaskFile.getTask().setSolved(true);
      }
      System.out.println(line);
    }
    while ((line=bf_err.readLine()) != null) {
      if (line.equals("OK")) {
        testResult="test passed";
        ProjectView.getInstance(project).refresh();
        selectedTaskFile.getTask().setSolved(true);
      }
      System.out.println(line);
    }
    Color myColor=JBColor.RED;
    if (testResult.equals("test passed")) {
      myColor=JBColor.GREEN;
    }
    BalloonBuilder balloonBuilder=JBPopupFactory.getInstance().createHtmlTextBalloonBuilder(testResult,null,myColor,null);
    Balloon balloon=balloonBuilder.createBalloon();
    StudyEditor selectedStudyEditor=StudyEditor.getSelectedStudyEditor(project);
    balloon.showInCenterOf(selectedStudyEditor.getCheckButton());
    SaveAndSyncHandlerImpl.refreshOpenFiles();
  }
 catch (  ExecutionException e1) {
    e1.printStackTrace();
  }
catch (  IOException e1) {
    e1.printStackTrace();
  }
}
