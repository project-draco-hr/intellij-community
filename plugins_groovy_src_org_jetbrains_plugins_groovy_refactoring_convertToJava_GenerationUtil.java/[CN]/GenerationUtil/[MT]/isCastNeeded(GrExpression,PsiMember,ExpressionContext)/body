{
  PsiType declared=getDeclaredType(qualifier,context);
  if (declared == null)   return false;
  final CheckProcessElement checker=new CheckProcessElement(member);
  final BaseScopeProcessor processor=new BaseScopeProcessor(){
    @Override public boolean execute(    @NotNull PsiElement element,    @NotNull ResolveState state){
      return false;
    }
  }
;
  if (ResolveUtil.resolvesToClass(qualifier)) {
    PsiType type=ResolveUtil.unwrapClassType(declared);
    if (type != null) {
      ResolveUtil.processAllDeclarationsSeparately(type,checker,processor,ResolveState.initial(),qualifier);
      if (checker.isFound()) {
        return false;
      }
    }
  }
  ResolveUtil.processAllDeclarationsSeparately(declared,checker,processor,ResolveState.initial(),qualifier);
  return !checker.isFound();
}
