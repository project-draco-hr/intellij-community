{
  super.visitMethodCallExpression(expression);
  final AssertHint assertHint=AssertHint.createAssertEqualsHint(expression,false);
  if (assertHint == null) {
    return;
  }
  final PsiExpressionList argumentList=expression.getArgumentList();
  final PsiExpression[] arguments=argumentList.getExpressions();
  final int argIndex=assertHint.getArgIndex();
  final PsiType type1=arguments[argIndex].getType();
  final PsiType type2=arguments[argIndex + 1].getType();
  if (!(type1 instanceof PsiArrayType) || !(type2 instanceof PsiArrayType)) {
    return;
  }
  registerMethodCallError(expression);
}
