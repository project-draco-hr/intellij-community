{
  List<SpecialCell> specialCells=new ArrayList<SpecialCell>();
  for (int i=0; i < visibleCells.size(); i++) {
    Cell cell=visibleCells.get(i);
    if (cell.getClass() == NodeCell.class) {
      if (((NodeCell)cell).getNode().getType() == Node.Type.commitNode) {
        specialCells.add(new SpecialCell(cell,i,SpecialCell.Type.commitNode));
      }
    }
 else {
      if (cell.getClass() != EdgeCell.class) {
        throw new IllegalStateException();
      }
      Edge edge=((EdgeCell)cell).getEdge();
switch (visibleEdge(edge,rowIndex)) {
case -1:
        break;
case 0:
      break;
case 1:
    specialCells.add(new SpecialCell(cell,i,SpecialCell.Type.hideEdge));
  break;
case 2:
specialCells.add(new SpecialCell(cell,i,SpecialCell.Type.showEdge));
break;
default :
throw new IllegalStateException();
}
}
}
return ReadOnlyList.newReadOnlyList(specialCells);
}
