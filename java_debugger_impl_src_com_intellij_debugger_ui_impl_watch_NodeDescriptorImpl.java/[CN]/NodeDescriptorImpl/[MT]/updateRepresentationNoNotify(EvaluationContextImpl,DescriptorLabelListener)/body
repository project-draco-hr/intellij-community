{
  try {
    try {
      myEvaluateException=null;
      myLabel=calcRepresentation(context,labelListener);
    }
 catch (    InconsistentDebugInfoException e) {
      throw new EvaluateException(DebuggerBundle.message("error.inconsistent.debug.info"));
    }
catch (    InvalidStackFrameException e) {
      throw new EvaluateException(DebuggerBundle.message("error.invalid.stackframe"));
    }
catch (    VMDisconnectedException e) {
      throw e;
    }
catch (    RuntimeException e) {
      if (e.getCause() instanceof InterruptedException) {
        throw e;
      }
      LOG.error(e);
      throw new EvaluateException("Internal error, see logs for more details");
    }
  }
 catch (  EvaluateException e) {
    setFailed(e);
  }
}
