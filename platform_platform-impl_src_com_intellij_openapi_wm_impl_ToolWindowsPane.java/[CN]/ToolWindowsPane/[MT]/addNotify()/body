{
  super.addNotify();
  if (ScreenUtil.isStandardAddRemoveNotify(this)) {
    UISettings.getInstance().addUISettingsListener(myUISettingsListener,myDisposable);
    IdeGlassPaneUtil.find(this).addMousePreprocessor(new MouseAdapter(){
      @Override public void mouseClicked(      MouseEvent e){
        if (SwingUtilities.isLeftMouseButton(e) && e.getClickCount() == 2 && e.getModifiersEx() == 0) {
          e=SwingUtilities.convertMouseEvent(e.getComponent(),e,ToolWindowsPane.this);
          Component component=SwingUtilities.getDeepestComponentAt(ToolWindowsPane.this,e.getX(),e.getY());
          Component header=component == null ? null : UIUtil.findParentByCondition((JComponent)component,new Condition<Component>(){
            @Override public boolean value(            Component component){
              return component instanceof ToolWindowHeader;
            }
          }
);
          if (header instanceof ToolWindowHeader) {
            ((ToolWindowHeader)header).switchMaximizedState(myFrame.getProject());
          }
        }
      }
    }
,this);
  }
}
