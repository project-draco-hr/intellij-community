{
  StartupManager.getInstance(myProject).runWhenProjectIsInitialized(new Runnable(){
    @Override public void run(){
      Course course=CCProjectService.getInstance(myProject).getCourse();
      if (course != null) {
        myProject.getMessageBus().connect(myProject).subscribe(FileEditorManagerListener.FILE_EDITOR_MANAGER,new FileEditorManagerAdapter(){
          @Override public void selectionChanged(          @NotNull FileEditorManagerEvent event){
            final VirtualFile oldFile=event.getOldFile();
            if (oldFile == null) {
              return;
            }
            if (CCProjectService.getInstance(myProject).isTaskFile(oldFile)) {
              FileEditorManager.getInstance(myProject).closeFile(oldFile);
              ApplicationManager.getApplication().runWriteAction(new Runnable(){
                @Override public void run(){
                  try {
                    oldFile.delete(myProject);
                  }
 catch (                  IOException e) {
                    LOG.error(e);
                  }
                }
              }
);
            }
          }
        }
);
        final CCEditorFactoryListener editorFactoryListener=new CCEditorFactoryListener();
        EditorFactory.getInstance().addEditorFactoryListener(editorFactoryListener,myProject);
        VirtualFile[] files=FileEditorManager.getInstance(myProject).getOpenFiles();
        for (        VirtualFile file : files) {
          if (CCProjectService.getInstance(myProject).isTaskFile(file)) {
            FileEditorManager.getInstance(myProject).closeFile(file);
            continue;
          }
          FileEditor fileEditor=FileEditorManager.getInstance(myProject).getSelectedEditor(file);
          if (fileEditor instanceof PsiAwareTextEditorImpl) {
            Editor editor=((PsiAwareTextEditorImpl)fileEditor).getEditor();
            editorFactoryListener.editorCreated(new EditorFactoryEvent(new EditorFactoryImpl(ProjectManager.getInstance()),editor));
          }
        }
      }
    }
  }
);
}
