{
  if (myEditor != null && myEditor.isModified()) {
    myModified=true;
    myEditor.apply();
  }
  for (  FileTemplateTab list : myTabs) {
    checkCanApply(list);
  }
  updateCache();
  for (  Map.Entry<FileTemplatesScheme,Map<String,FileTemplate[]>> entry : myChangesCache.entrySet()) {
    myManager.setCurrentScheme(entry.getKey());
    myManager.setTemplates(DEFAULT_TEMPLATES_CATEGORY,Arrays.asList(entry.getValue().get(DEFAULT_TEMPLATES_CATEGORY)));
    myManager.setTemplates(INTERNAL_TEMPLATES_CATEGORY,Arrays.asList(entry.getValue().get(INTERNAL_TEMPLATES_CATEGORY)));
    myManager.setTemplates(INCLUDES_TEMPLATES_CATEGORY,Arrays.asList(entry.getValue().get(INCLUDES_TEMPLATES_CATEGORY)));
    myManager.setTemplates(CODE_TEMPLATES_CATEGORY,Arrays.asList(entry.getValue().get(CODE_TEMPLATES_CATEGORY)));
    myManager.setTemplates(J2EE_TEMPLATES_CATEGORY,Arrays.asList(entry.getValue().get(J2EE_TEMPLATES_CATEGORY)));
  }
  myChangesCache.clear();
  myManager.setCurrentScheme(myScheme);
  if (myEditor != null) {
    myModified=false;
    fireListChanged();
  }
}
