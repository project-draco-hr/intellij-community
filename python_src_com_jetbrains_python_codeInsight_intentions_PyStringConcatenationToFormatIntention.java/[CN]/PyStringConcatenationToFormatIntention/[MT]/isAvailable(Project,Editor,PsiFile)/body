{
  PsiElement element=PsiTreeUtil.getParentOfType(file.findElementAt(editor.getCaretModel().getOffset()),PyBinaryExpression.class,false);
  if (element == null) {
    return false;
  }
  while (element.getParent() instanceof PyBinaryExpression) {
    element=element.getParent();
  }
  if (((PyBinaryExpression)element).getOperator() != PyTokenTypes.PLUS) {
    return false;
  }
  for (  PyExpression expression : getSimpleExpressions((PyBinaryExpression)element)) {
    if (!(expression instanceof PyStringLiteralExpression || expression instanceof PyReferenceExpression || expression instanceof PyCallExpression)) {
      return false;
    }
  }
  setText(PyBundle.message("INTN.replace.plus.with.format.operator"));
  return true;
}
