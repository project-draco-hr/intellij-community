{
  PsiElement element=PsiTreeUtil.getParentOfType(file.findElementAt(editor.getCaretModel().getOffset()),PyBinaryExpression.class,false);
  while (element.getParent() instanceof PyBinaryExpression) {
    element=element.getParent();
  }
  StringBuilder stringLiteral=new StringBuilder();
  StringBuilder parameters=new StringBuilder();
  NotNullFunction<String,String> escaper=StringUtil.escaper(false,null);
  int addParens=0;
  for (  PyExpression expression : getSimpleExpressions((PyBinaryExpression)element)) {
    if (expression instanceof PyStringLiteralExpression) {
      stringLiteral.append(escaper.fun(((PyStringLiteralExpression)expression).getStringValue()));
    }
 else {
      ++addParens;
      stringLiteral.append("%s");
      parameters.append(expression.getText()).append(", ");
    }
  }
  PyElementGenerator elementGenerator=PyElementGenerator.getInstance(project);
  PyStringLiteralExpression stringLiteralExpression=elementGenerator.createStringLiteralAlreadyEscaped("\"" + stringLiteral.toString() + "\"");
  String paramString=addParens > 1 ? "(" + parameters.substring(0,parameters.length() - 2) + ")" : parameters.substring(0,parameters.length() - 2);
  PyExpression expression=elementGenerator.createFromText(LanguageLevel.getDefault(),PyExpressionStatement.class,paramString).getExpression();
  element.replace(elementGenerator.createBinaryExpression("%",stringLiteralExpression,expression));
}
