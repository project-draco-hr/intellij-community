{
  PsiType oldSubstituted=substituted;
  PsiElement captureContext=null;
  if (substituted instanceof PsiCapturedWildcardType) {
    final PsiCapturedWildcardType captured=(PsiCapturedWildcardType)substituted;
    substituted=captured.getWildcard();
    captureContext=captured.getContext();
  }
  if (substituted instanceof PsiWildcardType && !((PsiWildcardType)substituted).isSuper()) {
    PsiType originalBound=((PsiWildcardType)substituted).getBound();
    PsiManager manager=typeParameter.getManager();
    final PsiType[] boundTypes=typeParameter.getExtendsListTypes();
    for (    PsiType boundType : boundTypes) {
      PsiType substitutedBoundType=boundType.accept(mySimpleSubstitutionVisitor);
      PsiWildcardType wildcardType=(PsiWildcardType)substituted;
      if (substitutedBoundType != null && !(substitutedBoundType instanceof PsiWildcardType) && !substitutedBoundType.equalsToText(CommonClassNames.JAVA_LANG_OBJECT)) {
        if (originalBound == null || !TypeConversionUtil.erasure(substitutedBoundType).isAssignableFrom(TypeConversionUtil.erasure(originalBound)) && !TypeConversionUtil.erasure(substitutedBoundType).isAssignableFrom(originalBound)) {
          if (wildcardType.isExtends()) {
            final PsiType bound=wildcardType.getBound();
            if (bound instanceof PsiArrayType && substitutedBoundType instanceof PsiArrayType && !bound.isAssignableFrom(substitutedBoundType)&& !substitutedBoundType.isAssignableFrom(bound)) {
              continue;
            }
            final PsiType glb=GenericsUtil.getGreatestLowerBound(bound,substitutedBoundType);
            if (glb != null) {
              substituted=PsiWildcardType.createExtends(manager,glb);
            }
          }
 else {
            substituted=PsiWildcardType.createExtends(manager,substitutedBoundType);
          }
        }
      }
    }
  }
 else   if (substituted instanceof PsiWildcardType && ((PsiWildcardType)substituted).isSuper()) {
    final PsiType erasure=TypeConversionUtil.erasure(((PsiWildcardType)substituted).getBound());
    if (erasure != null) {
      final PsiType[] boundTypes=typeParameter.getExtendsListTypes();
      for (      PsiType boundType : boundTypes) {
        if (TypeConversionUtil.isAssignable(erasure,boundType)) {
          return boundType.accept(mySimpleSubstitutionVisitor);
        }
      }
    }
  }
  if (captureContext != null) {
    substituted=oldSubstituted instanceof PsiCapturedWildcardType && substituted == ((PsiCapturedWildcardType)oldSubstituted).getWildcard() ? oldSubstituted : PsiCapturedWildcardType.create((PsiWildcardType)substituted,captureContext,typeParameter);
  }
  return substituted;
}
