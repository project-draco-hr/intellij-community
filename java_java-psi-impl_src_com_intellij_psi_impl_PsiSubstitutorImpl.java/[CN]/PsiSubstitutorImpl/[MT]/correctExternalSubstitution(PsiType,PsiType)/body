{
  if (substituted != null) {
    return substituted;
  }
  return original.accept(new PsiTypeVisitor<PsiType>(){
    @Override public PsiType visitArrayType(    PsiArrayType arrayType){
      return new PsiArrayType(arrayType.getComponentType().accept(this));
    }
    @Override public PsiType visitEllipsisType(    PsiEllipsisType ellipsisType){
      return new PsiEllipsisType(ellipsisType.getComponentType().accept(this));
    }
    @Override public PsiType visitClassType(    PsiClassType classType){
      PsiClass aClass=classType.resolve();
      if (aClass == null) {
        return classType;
      }
      if (aClass instanceof PsiTypeParameter) {
        return rawTypeForTypeParameter((PsiTypeParameter)aClass);
      }
      return JavaPsiFacade.getInstance(aClass.getProject()).getElementFactory().createType(aClass);
    }
    @Override public PsiType visitType(    PsiType type){
      return null;
    }
  }
);
}
