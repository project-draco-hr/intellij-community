{
  final PsiTypeParameter[] params=resolve.getTypeParameters();
  for (  final PsiTypeParameter param : params) {
    final PsiType original=originalSubstitutor.substitute(param);
    if (original == null) {
      substMap.put(param,null);
    }
 else {
      PsiType substituted;
      if (original instanceof PsiWildcardType) {
        substituted=substituteInternal(original);
        if (substituted instanceof PsiCapturedWildcardType) {
          substituted=PsiCapturedWildcardType.create(((PsiCapturedWildcardType)substituted).getWildcard(),((PsiCapturedWildcardType)substituted).getContext(),param);
        }
 else         if (substituted instanceof PsiWildcardType) {
          PsiType bound=((PsiWildcardType)substituted).getBound();
          if (bound instanceof PsiCapturedWildcardType) {
            bound=PsiCapturedWildcardType.create(((PsiCapturedWildcardType)bound).getWildcard(),((PsiCapturedWildcardType)bound).getContext(),param);
            substituted=((PsiWildcardType)substituted).isExtends() ? PsiWildcardType.createExtends(((PsiWildcardType)substituted).getManager(),bound) : PsiWildcardType.createSuper(((PsiWildcardType)substituted).getManager(),bound);
          }
        }
      }
 else {
        substituted=substituteInternal(original);
      }
      substMap.put(param,substituted);
    }
  }
  if (resolve.hasModifierProperty(PsiModifier.STATIC))   return true;
  final PsiClass containingClass=resolve.getContainingClass();
  return containingClass == null || processClass(containingClass,originalSubstitutor,substMap);
}
