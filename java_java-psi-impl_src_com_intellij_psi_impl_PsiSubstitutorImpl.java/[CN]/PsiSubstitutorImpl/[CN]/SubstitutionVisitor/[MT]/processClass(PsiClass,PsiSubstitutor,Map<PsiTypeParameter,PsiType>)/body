{
  final PsiTypeParameter[] params=resolve.getTypeParameters();
  for (  final PsiTypeParameter param : params) {
    final PsiType original=originalSubstitutor.substitute(param);
    if (original == null) {
      substMap.put(param,null);
    }
 else {
      PsiType substituted=substituteInternal(original);
      if (original instanceof PsiWildcardType && substituted instanceof PsiCapturedWildcardType) {
        substituted=PsiCapturedWildcardType.create(((PsiCapturedWildcardType)substituted).getWildcard(),((PsiCapturedWildcardType)substituted).getContext(),param);
      }
      substMap.put(param,substituted);
    }
  }
  if (resolve.hasModifierProperty(PsiModifier.STATIC))   return true;
  final PsiClass containingClass=resolve.getContainingClass();
  return containingClass == null || processClass(containingClass,originalSubstitutor,substMap);
}
