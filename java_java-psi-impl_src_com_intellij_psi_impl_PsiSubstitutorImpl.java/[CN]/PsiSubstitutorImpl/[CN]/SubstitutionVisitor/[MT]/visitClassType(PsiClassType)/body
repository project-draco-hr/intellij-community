{
  final PsiClassType.ClassResolveResult resolveResult=classType.resolveGenerics();
  final PsiClass aClass=resolveResult.getElement();
  if (aClass == null)   return classType;
  PsiUtilCore.ensureValid(aClass);
  if (aClass instanceof PsiTypeParameter) {
    final PsiTypeParameter typeParameter=(PsiTypeParameter)aClass;
    if (containsInMap(typeParameter)) {
      PsiType result=substituteTypeParameter(typeParameter);
      if (result != null) {
        PsiUtil.ensureValidType(result);
      }
      return result;
    }
    return classType;
  }
  final Map<PsiTypeParameter,PsiType> hashMap=new HashMap<PsiTypeParameter,PsiType>(2);
  if (!processClass(aClass,resolveResult.getSubstitutor(),hashMap)) {
    return null;
  }
  PsiClassType result=JavaPsiFacade.getElementFactory(aClass.getProject()).createType(aClass,createSubstitutor(hashMap),classType.getLanguageLevel());
  PsiUtil.ensureValidType(result);
  return result;
}
