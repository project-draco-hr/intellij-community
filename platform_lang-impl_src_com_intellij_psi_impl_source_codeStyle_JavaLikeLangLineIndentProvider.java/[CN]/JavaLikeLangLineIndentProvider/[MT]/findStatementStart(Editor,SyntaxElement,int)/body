{
  SemanticEditorPosition position=getPosition(editor,offset);
  position.beforeOptional(JavaLikeElement.Whitespace).beforeOptional(afterElement).beforeOptional(JavaLikeElement.Whitespace);
  if (position.isAt(JavaLikeElement.RightParenthesis)) {
    position.beforeParentheses(JavaLikeElement.LeftParenthesis,JavaLikeElement.RightParenthesis);
  }
  while (!position.isAtEnd()) {
    if (position.isAt(JavaLikeElement.Whitespace) && position.isAtMultiline()) {
      return position.after().getStartOffset();
    }
    position.before();
  }
  return -1;
}
