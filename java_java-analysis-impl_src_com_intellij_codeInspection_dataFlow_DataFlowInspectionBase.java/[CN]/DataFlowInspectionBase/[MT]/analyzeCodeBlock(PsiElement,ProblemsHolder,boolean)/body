{
  if (scope == null)   return;
  PsiClass containingClass=PsiTreeUtil.getParentOfType(scope,PsiClass.class);
  if (containingClass != null && PsiUtil.isLocalOrAnonymousClass(containingClass) && !(containingClass instanceof PsiEnumConstantInitializer))   return;
  final StandardDataFlowRunner dfaRunner=new StandardDataFlowRunner(TREAT_UNKNOWN_MEMBERS_AS_NULLABLE,!isInsideConstructorOrInitializer(scope)){
    @Override protected boolean shouldCheckTimeLimit(){
      if (!onTheFly)       return false;
      return super.shouldCheckTimeLimit();
    }
  }
;
  analyzeDfaWithNestedClosures(scope,holder,dfaRunner,Collections.singletonList(dfaRunner.createMemoryState()),onTheFly);
}
