{
  for (  PsiElement expr : visitor.getProblems(NullabilityProblem.passingNullableArgumentToNonAnnotatedParameter)) {
    if (reportedAnchors.contains(expr))     continue;
    final String text=isNullLiteralExpression(expr) ? "Passing <code>null</code> argument to non annotated parameter" : "Argument <code>#ref</code> #loc might be null but passed to non annotated parameter";
    List<LocalQuickFix> fixes=createNPEFixes((PsiExpression)expr,(PsiExpression)expr,holder.isOnTheFly());
    final PsiElement parent=expr.getParent();
    if (parent instanceof PsiExpressionList) {
      final int idx=ArrayUtilRt.find(((PsiExpressionList)parent).getExpressions(),expr);
      if (idx > -1) {
        final PsiElement gParent=parent.getParent();
        if (gParent instanceof PsiCallExpression) {
          final PsiMethod psiMethod=((PsiCallExpression)gParent).resolveMethod();
          if (psiMethod != null && psiMethod.getManager().isInProject(psiMethod) && AnnotationUtil.isAnnotatingApplicable(psiMethod)) {
            final PsiParameter[] parameters=psiMethod.getParameterList().getParameters();
            if (idx < parameters.length) {
              fixes.add(new AddNullableAnnotationFix(parameters[idx]));
              holder.registerProblem(expr,text,fixes.toArray(LocalQuickFix.EMPTY_ARRAY));
              reportedAnchors.add(expr);
            }
          }
        }
      }
    }
  }
}
