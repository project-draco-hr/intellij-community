{
  return new JavaElementVisitor(){
    @Override public void visitField(    PsiField field){
      analyzeCodeBlock(field,holder,isOnTheFly);
    }
    @Override public void visitMethod(    PsiMethod method){
      analyzeCodeBlock(method.getBody(),holder,isOnTheFly);
    }
    @Override public void visitClassInitializer(    PsiClassInitializer initializer){
      analyzeCodeBlock(initializer.getBody(),holder,isOnTheFly);
    }
    @Override public void visitIfStatement(    PsiIfStatement statement){
      PsiExpression condition=statement.getCondition();
      if (BranchingInstruction.isBoolConst(condition)) {
        LocalQuickFix fix=createSimplifyBooleanExpressionFix(condition,condition.textMatches(PsiKeyword.TRUE));
        holder.registerProblem(condition,"Condition is always " + condition.getText(),fix);
      }
    }
  }
;
}
