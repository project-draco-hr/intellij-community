{
  for (  PsiMethod constructor : aClass.getConstructors()) {
    if (!constructor.getLanguage().isKindOf(JavaLanguage.INSTANCE))     return true;
    PsiCodeBlock body=constructor.getBody();
    if (body == null)     continue;
    for (    PsiMethodCallExpression call : SyntaxTraverser.psiTraverser().withRoot(body).filter(PsiMethodCallExpression.class)) {
      PsiReferenceExpression methodExpression=call.getMethodExpression();
      if (methodExpression.textMatches(PsiKeyword.THIS) || methodExpression.textMatches(PsiKeyword.SUPER))       continue;
      if (!virtual)       return true;
      PsiMethod target=call.resolveMethod();
      if (target != null && PsiUtil.canBeOverriden(target))       return true;
    }
  }
  return false;
}
