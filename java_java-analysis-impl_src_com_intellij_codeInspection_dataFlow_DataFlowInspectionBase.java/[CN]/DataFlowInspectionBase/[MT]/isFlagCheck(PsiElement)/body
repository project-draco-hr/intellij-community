{
  PsiStatement statement=PsiTreeUtil.getParentOfType(element,PsiStatement.class);
  if (!(statement instanceof PsiIfStatement))   return false;
  PsiExpression condition=((PsiIfStatement)statement).getCondition();
  if (!PsiTreeUtil.isAncestor(condition,element,false))   return false;
  if (isCompileTimeFlagReference(condition))   return true;
  Collection<PsiReferenceExpression> refs=PsiTreeUtil.findChildrenOfType(condition,PsiReferenceExpression.class);
  return ContainerUtil.or(refs,new Condition<PsiReferenceExpression>(){
    @Override public boolean value(    PsiReferenceExpression ref){
      return isCompileTimeFlagReference(ref);
    }
  }
);
}
