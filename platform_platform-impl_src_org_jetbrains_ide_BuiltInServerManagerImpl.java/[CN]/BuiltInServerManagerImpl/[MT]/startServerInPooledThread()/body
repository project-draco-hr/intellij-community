{
  Application application=ApplicationManager.getApplication();
  if (application.isUnitTestMode() && !myEnabledInUnitTestMode) {
    return null;
  }
  if (!started.compareAndSet(false,true)) {
    return null;
  }
  return application.executeOnPooledThread(new Runnable(){
    @Override public void run(){
      try {
        server=new BuiltInServer();
      }
 catch (      ChannelException e) {
        LOG.info(e);
        String groupDisplayId="Built-in Server";
        Notifications.Bus.register(groupDisplayId,NotificationDisplayType.STICKY_BALLOON);
        new Notification(groupDisplayId,"Internal HTTP server disabled","Cannot start internal HTTP server. Git integration, JavaScript debugger and LiveEdit may operate with errors. " + "Please check your firewall settings and restart " + ApplicationNamesInfo.getInstance().getFullProductName(),NotificationType.ERROR).notify(null);
        return;
      }
      Disposer.register(ApplicationManager.getApplication(),server);
      ShutDownTracker.getInstance().registerShutdownTask(new Runnable(){
        @Override public void run(){
          if (!Disposer.isDisposed(server)) {
            Disposer.dispose(server);
          }
        }
      }
);
      detectedPortNumber=server.start(getDefaultPort(),PORTS_COUNT,true);
      if (detectedPortNumber == -1) {
        LOG.info("built-in server cannot be started, cannot bind to port");
      }
 else {
        LOG.info("built-in server started, port " + detectedPortNumber);
      }
    }
  }
);
}
