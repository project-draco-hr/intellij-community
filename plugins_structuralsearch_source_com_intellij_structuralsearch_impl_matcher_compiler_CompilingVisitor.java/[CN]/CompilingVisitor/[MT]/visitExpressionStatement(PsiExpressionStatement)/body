{
  handle(expr);
  if (!(expr.getLastChild() instanceof PsiJavaToken)) {
    final PsiElement reference=expr.getFirstChild();
    if ((context.pattern.isRealTypedVar(expr)) && (reference instanceof PsiReferenceExpression) && ((PsiReferenceExpression)reference).getQualifierExpression() == null) {
      handle(reference);
      Handler handler=context.pattern.getHandler(reference);
      if (handler instanceof SubstitutionHandler) {
        handler.setFilter(SymbolNodeFilter.getInstance());
        setHandler(expr,new SymbolHandler((SubstitutionHandler)handler));
      }
    }
 else     if (reference instanceof PsiLiteralExpression) {
      Handler handler=(Handler)reference.getUserData(CompiledPattern.HANDLER_KEY);
      setHandler(expr,(handler != null) ? handler : (handler=new ExpressionHandler()));
      handler.setFilter(ConstantFilter.getInstance());
    }
 else {
      Handler handler;
      setHandler(expr,handler=new ExpressionHandler());
      handler.setFilter(ExpressionFilter.getInstance());
    }
  }
 else   if (expr.getExpression() instanceof PsiReferenceExpression && (context.pattern.isRealTypedVar(expr.getExpression()))) {
    final Handler exprHandler=context.pattern.getHandler(expr);
    if (exprHandler instanceof SubstitutionHandler) {
      SubstitutionHandler handler=(SubstitutionHandler)exprHandler;
      handler.setFilter(new StatementFilter());
      handler.setMatchHandler(new StatementHandler());
    }
  }
  super.visitExpressionStatement(expr);
}
