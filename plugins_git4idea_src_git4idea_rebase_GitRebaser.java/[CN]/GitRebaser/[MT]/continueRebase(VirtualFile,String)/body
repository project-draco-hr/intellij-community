{
  LOG.info("continueRebase " + root + " "+ startOperation);
  final GitLineHandler rh=new GitLineHandler(myProject,root,GitCommand.REBASE);
  rh.addParameters(startOperation);
  final GitRebaseProblemDetector rebaseConflictDetector=new GitRebaseProblemDetector();
  rh.addLineListener(rebaseConflictDetector);
  GitRebaseEditorService rebaseEditorService=GitRebaseEditorService.getInstance();
  GitRebaser.TrivialEditor editor=new GitRebaser.TrivialEditor(rebaseEditorService,myProject,root,rh);
  Integer rebaseEditorNo=editor.getHandlerNo();
  rebaseEditorService.configureHandler(rh,rebaseEditorNo);
  final GitTask rebaseTask=new GitTask(myProject,rh,"git rebase " + startOperation);
  rebaseTask.setProgressAnalyzer(new GitStandardProgressAnalyzer());
  rebaseTask.setProgressIndicator(myProgressIndicator);
  return executeRebaseTaskInBackground(root,rh,rebaseConflictDetector,rebaseTask);
}
