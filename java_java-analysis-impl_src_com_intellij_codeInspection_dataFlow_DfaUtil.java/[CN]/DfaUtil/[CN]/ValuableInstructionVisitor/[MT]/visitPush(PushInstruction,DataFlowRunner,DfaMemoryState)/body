{
  PsiExpression place=instruction.getPlace();
  if (place != null) {
    PlaceResult result=myResults.get(place);
    if (result == null) {
      myResults.put(place,result=new PlaceResult());
    }
    final Map<DfaVariableValue,DfaVariableState> map=((ValuableDataFlowRunner.MyDfaMemoryState)memState).getVariableStates();
    for (    Map.Entry<DfaVariableValue,DfaVariableState> entry : map.entrySet()) {
      ValuableDataFlowRunner.ValuableDfaVariableState state=(ValuableDataFlowRunner.ValuableDfaVariableState)entry.getValue();
      DfaVariableValue variableValue=entry.getKey();
      final FList<PsiExpression> concatenation=state.myConcatenation;
      if (!concatenation.isEmpty() && variableValue.getQualifier() == null) {
        PsiModifierListOwner element=variableValue.getPsiVariable();
        if (element instanceof PsiVariable) {
          result.myValues.put((PsiVariable)element,concatenation);
        }
      }
    }
    DfaValue value=instruction.getValue();
    if (value instanceof DfaVariableValue && ((DfaVariableValue)value).getQualifier() == null) {
      PsiModifierListOwner element=((DfaVariableValue)value).getPsiVariable();
      if (element instanceof PsiVariable) {
        if (memState.isNotNull(value)) {
          result.myNotNulls.add((PsiVariable)element);
        }
        if (memState.isNull(value)) {
          result.myNulls.add((PsiVariable)element);
        }
      }
    }
  }
  return super.visitPush(instruction,runner,memState);
}
