{
  Module module1=getModule1();
  GlobalSearchScope module1AndLibraries=GlobalSearchScope.moduleWithLibrariesScope(module1);
  PsiClass testCase=findClass(TestCase.class.getName(),module1AndLibraries);
  PsiClass psiClass=findTestA(module1);
  PsiClass psiClass2=findTestA(getModule2());
  PsiClass derivedTest=findClass(module1,"test1.DerivedTest");
  PsiClass baseTestCase=findClass("junit.framework.ThirdPartyClass",module1AndLibraries);
  PsiClass testB=findClass(getModule3(),"test1.TestB");
  assertNotNull(testCase);
  assertNotNull(derivedTest);
  assertNotNull(psiClass);
  assertTrue(psiClass.isInheritor(testCase,false));
  assertEquals(baseTestCase,derivedTest.getSuperClass());
  assertTrue(baseTestCase.isInheritor(testCase,true));
  assertTrue(derivedTest.isInheritor(testCase,true));
  PsiPackage psiPackage=JUnitUtil.getContainingPackage(psiClass);
  JUnitConfiguration configuration=createConfiguration(psiPackage,module1);
  JavaParameters parameters=checkCanRun(configuration);
  List<String> lines=extractAllInPackageTests(parameters,psiPackage);
  CHECK.compareUnordered(new Object[]{psiClass.getQualifiedName(),psiClass2.getQualifiedName(),derivedTest.getQualifiedName(),RT_INNER_TEST_NAME,testB.getQualifiedName()},lines);
}
