{
  final TaskManagerImpl taskManager=(TaskManagerImpl)TaskManager.getManager(myProject);
  taskManager.getState().createChangelist=myCreateChangelist.isSelected();
  taskManager.getState().createBranch=myCreateBranch.isSelected();
  TaskRepository repository=myTask.getRepository();
  final CustomTaskState selectedItem=(CustomTaskState)myStateComboBox.getSelectedItem();
  if (repository != null && selectedItem != null && selectedItem != DO_NOT_UPDATE_STATE) {
    try {
      repository.setTaskState(myTask,selectedItem);
    }
 catch (    Exception ex) {
      Messages.showErrorDialog(myProject,ex.getMessage(),"Cannot Set State For Issue");
      LOG.warn(ex);
    }
  }
  final LocalTask activeTask=taskManager.getActiveTask();
  final LocalTask localTask=taskManager.activateTask(myTask,isClearContext());
  if (myCreateChangelist.isSelected()) {
    taskManager.createChangeList(localTask,myChangelistName.getText());
  }
  if (myCreateBranch.isSelected()) {
    VcsTaskHandler.TaskInfo item=(VcsTaskHandler.TaskInfo)myBranchFrom.getSelectedItem();
    Runnable createBranch=new Runnable(){
      @Override public void run(){
        taskManager.createBranch(localTask,activeTask,myBranchName.getText());
      }
    }
;
    if (item != null && !item.equals(myVcsTaskHandler.getActiveTask())) {
      myVcsTaskHandler.switchToTask(item,createBranch);
    }
 else {
      createBranch.run();
    }
  }
  if (myTask.getType() == TaskType.EXCEPTION && AnalyzeTaskStacktraceAction.hasTexts(myTask)) {
    AnalyzeTaskStacktraceAction.analyzeStacktrace(myTask,myProject);
  }
}
