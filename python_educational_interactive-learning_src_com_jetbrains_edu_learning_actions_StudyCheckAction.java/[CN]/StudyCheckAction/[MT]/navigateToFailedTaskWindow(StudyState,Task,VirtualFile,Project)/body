{
  TaskFile selectedTaskFile=studyState.getTaskFile();
  Editor editor=studyState.getEditor();
  TaskFile taskFileToNavigate=selectedTaskFile;
  VirtualFile fileToNavigate=studyState.getVirtualFile();
  final StudyTaskManager taskManager=StudyTaskManager.getInstance(project);
  if (!taskManager.hasFailedTaskWindows(selectedTaskFile)) {
    for (    Map.Entry<String,TaskFile> entry : task.getTaskFiles().entrySet()) {
      String name=entry.getKey();
      TaskFile taskFile=entry.getValue();
      if (taskManager.hasFailedTaskWindows(taskFile)) {
        taskFileToNavigate=taskFile;
        VirtualFile virtualFile=taskDir.findChild(name);
        if (virtualFile == null) {
          continue;
        }
        FileEditor fileEditor=FileEditorManager.getInstance(project).getSelectedEditor(virtualFile);
        if (fileEditor instanceof StudyEditor) {
          StudyEditor studyEditor=(StudyEditor)fileEditor;
          editor=studyEditor.getEditor();
        }
        fileToNavigate=virtualFile;
        break;
      }
    }
  }
  if (fileToNavigate != null) {
    FileEditorManager.getInstance(project).openFile(fileToNavigate,true);
  }
  final Editor editorToNavigate=editor;
  ApplicationManager.getApplication().invokeLater(new Runnable(){
    @Override public void run(){
      IdeFocusManager.getInstance(project).requestFocus(editorToNavigate.getContentComponent(),true);
    }
  }
);
  StudyNavigator.navigateToFirstFailedTaskWindow(editor,taskFileToNavigate);
}
