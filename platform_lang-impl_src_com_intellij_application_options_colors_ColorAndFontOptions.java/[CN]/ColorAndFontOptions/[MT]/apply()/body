{
  if (myApplyCompleted) {
    return;
  }
  try {
    EditorColorsManager myColorsManager=EditorColorsManager.getInstance();
    SchemeManager<EditorColorsScheme> schemeManager=((EditorColorsManagerImpl)myColorsManager).getSchemeManager();
    List<EditorColorsScheme> result=new ArrayList<>(mySchemes.values().size());
    boolean activeSchemeModified=false;
    EditorColorsScheme activeOriginalScheme=mySelectedScheme.getOriginalScheme();
    for (    MyColorScheme scheme : mySchemes.values()) {
      boolean isModified=scheme.apply();
      if (isModified && !activeSchemeModified && activeOriginalScheme == scheme.getOriginalScheme()) {
        activeSchemeModified=true;
      }
      result.add(scheme.getOriginalScheme());
    }
    boolean refreshEditors=activeSchemeModified && schemeManager.getCurrentScheme() == activeOriginalScheme;
    schemeManager.setSchemes(includingInvisible(result,schemeManager),activeOriginalScheme);
    if (refreshEditors) {
      ((EditorColorsManagerImpl)EditorColorsManager.getInstance()).schemeChangedOrSwitched(null);
    }
    final boolean isEditorThemeDark=ColorUtil.isDark(activeOriginalScheme.getDefaultBackground());
    changeLafIfNecessary(isEditorThemeDark);
    reset();
  }
  finally {
    myApplyCompleted=true;
  }
}
