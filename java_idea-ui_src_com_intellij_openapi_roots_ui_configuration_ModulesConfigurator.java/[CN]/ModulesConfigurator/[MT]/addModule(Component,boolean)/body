{
  if (myProject.isDefault())   return null;
  final ProjectBuilder builder=runModuleWizard(parent,anImport);
  if (builder != null) {
    final List<Module> modules=new ArrayList<Module>();
    DumbService.allowStartingDumbModeInside(DumbModePermission.MAY_START_BACKGROUND,new Runnable(){
      @Override public void run(){
        final List<Module> committedModules;
        if (builder instanceof ProjectImportBuilder<?>) {
          final ModifiableArtifactModel artifactModel=ProjectStructureConfigurable.getInstance(myProject).getArtifactsStructureConfigurable().getModifiableArtifactModel();
          committedModules=((ProjectImportBuilder<?>)builder).commit(myProject,myModuleModel,ModulesConfigurator.this,artifactModel);
        }
 else {
          committedModules=builder.commit(myProject,myModuleModel,ModulesConfigurator.this);
        }
        if (committedModules != null) {
          modules.addAll(committedModules);
        }
        ApplicationManager.getApplication().runWriteAction(new Runnable(){
          @Override public void run(){
            for (            Module module : modules) {
              getOrCreateModuleEditor(module);
            }
          }
        }
);
      }
    }
);
    return modules;
  }
  return null;
}
