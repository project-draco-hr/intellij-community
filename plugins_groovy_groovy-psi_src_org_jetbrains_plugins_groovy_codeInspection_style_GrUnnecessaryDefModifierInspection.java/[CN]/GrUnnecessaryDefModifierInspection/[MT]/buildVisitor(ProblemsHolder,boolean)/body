{
  return new PsiElementVisitor(){
    @Override public void visitElement(    PsiElement modifier){
      if (modifier.getNode().getElementType() != GroovyTokenTypes.kDEF)       return;
      PsiElement list=modifier.getParent();
      if (!(list instanceof GrModifierList))       return;
      PsiElement parent=list.getParent();
      if (!(parent instanceof GrMethod) && !(parent instanceof GrParameter) && !(parent instanceof GrVariableDeclaration))       return;
      if (parent instanceof GrMethod && ((GrMethod)parent).getReturnTypeElementGroovy() != null || parent instanceof GrVariable && ((GrVariable)parent).getTypeElementGroovy() != null || parent instanceof GrVariableDeclaration && ((GrVariableDeclaration)parent).getTypeElementGroovy() != null) {
        holder.registerProblem(modifier,GroovyInspectionBundle.message("unnecessary.modifier.description",GrModifier.DEF),ProblemHighlightType.LIKE_UNUSED_SYMBOL,FIX);
      }
    }
  }
;
}
