{
  final List<ASTNode> nodes=getStringNodes();
  if (nodes.size() > 0) {
    String text=getStringNodes().get(0).getText();
    PyFile file=PsiTreeUtil.getParentOfType(this,PyFile.class);
    if (file != null) {
      IElementType type=PythonHighlightingLexer.convertStringType(getStringNodes().get(0).getElementType(),text,LanguageLevel.forElement(this),file.hasImportFromFuture(FutureFeature.UNICODE_LITERALS));
      if (PyTokenTypes.UNICODE_NODES.contains(type)) {
        return PyBuiltinCache.getInstance(this).getUnicodeType(LanguageLevel.forElement(this));
      }
    }
  }
  return PyBuiltinCache.getInstance(this).getBytesType(LanguageLevel.forElement(this));
}
