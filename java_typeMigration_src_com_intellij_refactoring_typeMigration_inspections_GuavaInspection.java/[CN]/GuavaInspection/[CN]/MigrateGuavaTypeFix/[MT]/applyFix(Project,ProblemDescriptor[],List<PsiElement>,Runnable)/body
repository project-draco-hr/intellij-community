{
  final List<PsiElement> elementsToFix=new ArrayList<PsiElement>();
  final List<PsiType> migrationTypes=new ArrayList<PsiType>();
  final List<PsiElement> chainsToFix=new ArrayList<PsiElement>();
  final List<PsiType> chainsMigrationTypes=new ArrayList<PsiType>();
  final List<PsiType> chainsInitialTypes=new ArrayList<PsiType>();
  for (  ProblemDescriptor descriptor : descriptors) {
    final MigrateGuavaTypeFix fix=getFix(descriptor);
    if (fix.myInitialType == null) {
      elementsToFix.add(fix.getStartElement());
      migrationTypes.add(fix.myTargetType);
    }
 else {
      chainsToFix.add(fix.getStartElement());
      chainsMigrationTypes.add(fix.myTargetType);
      chainsInitialTypes.add(fix.myInitialType);
    }
  }
  if (!elementsToFix.isEmpty() && !performTypeMigration(elementsToFix,migrationTypes))   return;
  if (!chainsToFix.isEmpty()) {
    performChainTypeMigration(project,chainsToFix,chainsInitialTypes,chainsMigrationTypes);
  }
}
