{
  final List<PsiElement> elementsToFix=new ArrayList<PsiElement>();
  final List<PsiType> migrationTypes=new ArrayList<PsiType>();
  final List<ChainFixInfo> chainFixInfos=new ArrayList<ChainFixInfo>();
  for (  ProblemDescriptor descriptor : descriptors) {
    final MigrateGuavaTypeFix fix=getFix(descriptor);
    if (fix.myInitialType == null) {
      elementsToFix.add(fix.getStartElement());
      migrationTypes.add(fix.myTargetType);
    }
 else {
      chainFixInfos.add(new ChainFixInfo(fix.getStartElement(),fix.myInitialType,fix.myTargetType));
    }
  }
  if (!chainFixInfos.isEmpty())   performMethodCallTypeMigration(project,chainFixInfos);
  if (!elementsToFix.isEmpty())   performTypeMigration(elementsToFix,migrationTypes);
}
