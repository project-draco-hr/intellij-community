{
  if (!FileModificationService.getInstance().prepareFileForWrite(file))   return;
  try {
    final PsiMethodCallExpression expr=(PsiMethodCallExpression)startElement;
    final TypeMigrationRules rules=new TypeMigrationRules(myInitialType);
    rules.setMigrationRootType(myTargetType);
    rules.setBoundScope(GlobalSearchScope.fileScope(file));
    final TypeConversionDescriptorBase conversion=rules.findConversion(myInitialType,myTargetType,expr.resolveMethod(),expr,new TypeMigrationLabeler(rules));
    LOG.assertTrue(conversion != null);
    final PsiElement replacedExpression=TypeMigrationReplacementUtil.replaceExpression(expr,project,conversion);
    JavaCodeStyleManager.getInstance(project).shortenClassReferences(replacedExpression);
    UndoUtil.markPsiFileForUndo(file);
  }
 catch (  IncorrectOperationException e) {
    LOG.error(e);
  }
}
