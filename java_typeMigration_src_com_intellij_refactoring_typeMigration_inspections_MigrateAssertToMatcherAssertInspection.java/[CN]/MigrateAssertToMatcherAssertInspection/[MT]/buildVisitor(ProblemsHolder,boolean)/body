{
  if (JavaPsiFacade.getInstance(holder.getProject()).findClass("org.hamcrest.CoreMatchers",holder.getFile().getResolveScope()) == null) {
    return PsiElementVisitor.EMPTY_VISITOR;
  }
  return new JavaElementVisitor(){
    @Override public void visitMethodCallExpression(    PsiMethodCallExpression expression){
      final String methodName=expression.getMethodExpression().getReferenceName();
      if (!ASSERT_METHODS.containsKey(methodName))       return;
      final PsiClass assertClass;
      final PsiMethod assertMethod=expression.resolveMethod();
      if (assertMethod == null || (assertClass=assertMethod.getContainingClass()) == null) {
        return;
      }
      if (!"junit.framework.Assert".equals(assertClass.getQualifiedName()) && !"org.junit.Assert".equals(assertClass.getQualifiedName())) {
        return;
      }
      holder.registerProblem(expression.getMethodExpression(),"Assert expression <code>#ref</code> can be replaced with 'assertThat' call #loc",new MyQuickFix());
    }
  }
;
}
