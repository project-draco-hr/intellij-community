{
  if (isOpenCommandUsed(commandLine)) {
    final Future<?> future=ApplicationManager.getApplication().executeOnPooledThread(new Runnable(){
      @Override public void run(){
        try {
          if (process.waitFor() == 1) {
            doShowError(ExecUtil.readFirstLine(process.getErrorStream(),null),browser,project,null,launchTask);
          }
        }
 catch (        InterruptedException ignored) {
        }
      }
    }
);
    JobScheduler.getScheduler().schedule(new Runnable(){
      @Override public void run(){
        future.cancel(true);
      }
    }
,10,TimeUnit.SECONDS);
  }
}
