{
  final PsiClassType.ClassResolveResult resolveResult=PsiUtil.resolveGenericsClassInType(conjunct);
  if (resolveResult != null) {
    final PsiMethod method=LambdaUtil.getFunctionalInterfaceMethod(conjunct);
    if (method != null) {
      final PsiParameter[] parameters=method.getParameterList().getParameters();
      if (parameterIndex < parameters.length) {
        final PsiType psiType=LambdaUtil.getSubstitutor(method,resolveResult).substitute(parameters[parameterIndex].getType());
        if (!LambdaUtil.dependsOnTypeParams(psiType,conjunct,lambdaExpression)) {
          return psiType;
        }
      }
    }
  }
  return null;
}
