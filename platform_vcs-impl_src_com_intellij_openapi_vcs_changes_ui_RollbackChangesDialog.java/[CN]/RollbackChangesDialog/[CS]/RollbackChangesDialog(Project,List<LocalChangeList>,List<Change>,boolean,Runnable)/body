{
  super(project,true);
  myProject=project;
  myRefreshSynchronously=refreshSynchronously;
  myAfterVcsRefreshInAwt=afterVcsRefreshInAwt;
  myInvokedFromModalContext=LaterInvocator.isInModalContext();
  myInfoCalculator=new ChangeInfoCalculator();
  myCommitLegendPanel=new CommitLegendPanel(myInfoCalculator);
  myListChangeListener=new Runnable(){
    @Override public void run(){
      if (myBrowser != null) {
        myInfoCalculator.update(new ArrayList<Change>(myBrowser.getAllChanges()),new ArrayList<Change>(myBrowser.getChangesIncludedInAllLists()));
        myCommitLegendPanel.update();
        Collection<Change> selected=myBrowser.getChangesIncludedInAllLists();
        List<Change> visibleSelected=myBrowser.getCurrentIncludedChanges();
        if (selected.size() != visibleSelected.size()) {
          setErrorText("Selection contains changes from other changelist");
        }
 else {
          setErrorText(null);
        }
        boolean hasNewFiles=ContainerUtil.exists(selected,new Condition<Change>(){
          @Override public boolean value(          Change change){
            return change.getType() == Change.Type.NEW;
          }
        }
);
        myDeleteLocallyAddedFiles.setEnabled(hasNewFiles);
      }
    }
  }
;
  myBrowser=new MultipleChangeListBrowser(project,changeLists,changes,getDisposable(),null,true,true,myListChangeListener,myListChangeListener);
  myOperationName=operationNameByChanges(project,myBrowser.getAllChanges());
  setOKButtonText(myOperationName);
  myOperationName=UIUtil.removeMnemonic(myOperationName);
  setTitle(VcsBundle.message("changes.action.rollback.custom.title",myOperationName));
  setCancelButtonText(CommonBundle.getCloseButtonText());
  myBrowser.setToggleActionTitle("&Include in " + myOperationName.toLowerCase());
  myDeleteLocallyAddedFiles=new JCheckBox(VcsBundle.message("changes.checkbox.delete.locally.added.files"));
  myDeleteLocallyAddedFiles.setSelected(PropertiesComponent.getInstance().isTrueValue(DELETE_LOCALLY_ADDED_FILES_KEY));
  myDeleteLocallyAddedFiles.addActionListener(new ActionListener(){
    @Override public void actionPerformed(    ActionEvent e){
      PropertiesComponent.getInstance().setValue(DELETE_LOCALLY_ADDED_FILES_KEY,myDeleteLocallyAddedFiles.isSelected());
    }
  }
);
  init();
  myListChangeListener.run();
}
