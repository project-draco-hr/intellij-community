{
  myRoot=new DefaultMutableTreeNode(ROOT);
  myTree=new Tree(new MyModel(myRoot)){
    @Override public void paint(    Graphics g){
      super.paint(g);
      Rectangle visibleRect=getVisibleRect();
      Rectangle clip=g.getClipBounds();
      for (int row=0; row < getRowCount(); row++) {
        Rectangle rowBounds=getRowBounds(row);
        rowBounds.x=0;
        rowBounds.width=Integer.MAX_VALUE;
        if (rowBounds.intersects(clip)) {
          Object node=getPathForRow(row).getLastPathComponent();
          if (node instanceof DefaultMutableTreeNode) {
            Object data=((DefaultMutableTreeNode)node).getUserObject();
            Rectangle fullRowRect=new Rectangle(visibleRect.x,rowBounds.y,visibleRect.width,rowBounds.height);
            paintRowData(this,data,fullRowRect,(Graphics2D)g);
          }
        }
      }
    }
  }
;
  myTree.setRootVisible(false);
  myTree.setShowsRootHandles(true);
  myTree.putClientProperty(WideSelectionTreeUI.STRIPED_CLIENT_PROPERTY,Boolean.TRUE);
  myTree.setCellRenderer(new KeymapsRenderer());
  myTree.addMouseMotionListener(new MouseMotionAdapter(){
    @Override public void mouseMoved(    MouseEvent e){
      String description=getDescription(e);
      if (description != null) {
        ActionMenu.showDescriptionInStatusBar(true,myTree,description);
      }
 else {
        ActionMenu.showDescriptionInStatusBar(false,myTree,null);
      }
    }
    @Nullable private String getDescription(    @NotNull MouseEvent e){
      TreePath path=myTree.getPathForLocation(e.getX(),e.getY());
      if (path == null)       return null;
      DefaultMutableTreeNode node=(DefaultMutableTreeNode)path.getLastPathComponent();
      if (node == null)       return null;
      Object userObject=node.getUserObject();
      if (!(userObject instanceof String))       return null;
      String actionId=(String)userObject;
      AnAction action=ActionManager.getInstance().getActionOrStub(actionId);
      if (action == null)       return null;
      return action.getTemplatePresentation().getDescription();
    }
  }
);
  myTree.getSelectionModel().setSelectionMode(TreeSelectionModel.SINGLE_TREE_SELECTION);
  myComponent=ScrollPaneFactory.createScrollPane(myTree,ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS,ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
}
