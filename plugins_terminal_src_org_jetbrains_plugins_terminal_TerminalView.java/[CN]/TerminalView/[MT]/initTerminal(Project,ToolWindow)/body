{
  myProject=project;
  LocalTerminalDirectRunner terminalRunner=OpenLocalTerminalAction.createTerminalRunner(project);
  toolWindow.setToHideOnEmptyContent(true);
  if (terminalRunner != null) {
    myTerminalWidget=terminalRunner.createTerminalWidget();
    myTerminalWidget.addTabListener(new TabbedTerminalWidget.TabListener(){
      @Override public void tabClosed(      JediTermWidget terminal){
        UIUtil.invokeLaterIfNeeded(new Runnable(){
          @Override public void run(){
            hideIfNoActiveSessions(toolWindow,myTerminalWidget);
          }
        }
);
      }
    }
);
  }
  Content content=createToolWindowContentPanel(terminalRunner,myTerminalWidget,toolWindow);
  toolWindow.getContentManager().addContent(content);
  ((ToolWindowManagerEx)ToolWindowManager.getInstance(myProject)).addToolWindowManagerListener(new ToolWindowManagerListener(){
    @Override public void toolWindowRegistered(    @NotNull String id){
    }
    @Override public void stateChanged(){
      ToolWindow window=ToolWindowManager.getInstance(project).getToolWindow(TerminalToolWindowFactory.TOOL_WINDOW_ID);
      if (window != null) {
        boolean visible=window.isVisible();
        if (visible && toolWindow.getContentManager().getContentCount() == 0) {
          initTerminal(project,window);
        }
      }
    }
  }
);
}
