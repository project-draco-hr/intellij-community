{
  if (ResourceBundleManager.getInstance(getProject()).isDefaultDissociated(myDefaultPropertiesFile.getVirtualFile())) {
    return Collections.singletonList(myDefaultPropertiesFile);
  }
  PsiFile[] children=ApplicationManager.getApplication().runReadAction(new Computable<PsiFile[]>(){
    @Override public PsiFile[] compute(){
      return myDefaultPropertiesFile.getParent().getFiles();
    }
  }
);
  final String baseName=getBaseName();
  List<PropertiesFile> result=new SmartList<PropertiesFile>();
  final String defaultNameWithoutExtension=FileUtil.getNameWithoutExtension(myDefaultPropertiesFile.getName());
  for (  PsiFile file : children) {
    if (!file.isValid() || file.getVirtualFile().getExtension() == null)     continue;
    if (Comparing.strEqual(PropertiesUtil.getDefaultBaseName(file.getVirtualFile()),baseName)) {
      PropertiesFile propertiesFile=PropertiesImplUtil.getPropertiesFile(file);
      if (propertiesFile != null) {
        result.add(propertiesFile);
        if (propertiesFile != myDefaultPropertiesFile && FileUtil.getNameWithoutExtension(propertiesFile.getName()).compareTo(defaultNameWithoutExtension) == 0) {
          return Collections.singletonList(myDefaultPropertiesFile);
        }
      }
    }
  }
  return result;
}
