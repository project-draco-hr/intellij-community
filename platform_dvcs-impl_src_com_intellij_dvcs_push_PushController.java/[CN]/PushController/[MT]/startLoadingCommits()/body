{
  Map<RepositoryNode,MyRepoModel> priorityLoading=ContainerUtil.newLinkedHashMap();
  Map<RepositoryNode,MyRepoModel> others=ContainerUtil.newLinkedHashMap();
  Map.Entry<RepositoryNode,MyRepoModel> repositoryForCurrentEditor=findRepositoryForCurrentEditor();
  for (  Map.Entry<RepositoryNode,MyRepoModel> entry : myView2Model.entrySet()) {
    MyRepoModel model=entry.getValue();
    Repository repository=model.getRepository();
    if (preselectByUser(repository)) {
      priorityLoading.put(entry.getKey(),model);
    }
 else     if (model.getSupport().shouldRequestIncomingChangesForNotCheckedRepositories() && !entry.equals(repositoryForCurrentEditor)) {
      others.put(entry.getKey(),model);
    }
  }
  if (repositoryForCurrentEditor != null) {
    priorityLoading.put(repositoryForCurrentEditor.getKey(),repositoryForCurrentEditor.getValue());
  }
  loadCommitsFromMap(priorityLoading);
  loadCommitsFromMap(others);
}
