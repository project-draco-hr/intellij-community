{
  PushTarget target=support.getDefaultTarget(repository);
  final MyRepoModel model=new MyRepoModel(repository,support,isSelected,new PushSpec(support.getSource(repository),target),DEFAULT_CHILDREN_PRESENTATION_NUMBER);
  RepositoryWithBranchPanel repoPanel=new RepositoryWithBranchPanel(myProject,DvcsUtil.getShortRepositoryName(repository),support.getSource(repository).getPresentation(),target == null ? "" : target.getPresentation(),support.getTargetNames(repository));
  final RepositoryNode repoNode=isSingleRepositoryProject ? new SingleRepositoryNode(repoPanel) : new RepositoryNode(repoPanel);
  myView2Model.put(repoNode,model);
  repoNode.setChecked(model.isSelected());
  repoPanel.addRepoNodeListener(new RepositoryNodeListener(){
    @Override public void onTargetChanged(    String newValue){
      VcsError validationError=support.validate(model.getRepository(),newValue);
      if (validationError == null) {
        myView2Model.get(repoNode).setSpec(new PushSpec(model.getSpec().getSource(),support.createTarget(repository,newValue)));
        loadCommits(model,repoNode,false);
      }
 else {
        myView2Model.get(repoNode).setSpec(new PushSpec(model.getSpec().getSource(),null));
      }
      myDialog.updateButtons();
    }
    @Override public void onSelectionChanged(    boolean isSelected){
      myView2Model.get(repoNode).setSelected(isSelected);
      repoNode.setChecked(isSelected);
      myDialog.updateButtons();
    }
  }
);
  rootNode.add(repoNode);
}
