{
  final SelectionModel selectionModel=editor.getSelectionModel();
  if (selectionModel.hasBlockSelection()) {
    final int[] starts=selectionModel.getBlockSelectionStarts();
    final int[] ends=selectionModel.getBlockSelectionEnds();
    LogicalPosition blockStart=selectionModel.getBlockStart();
    LogicalPosition blockEnd=selectionModel.getBlockEnd();
    selectionModel.removeBlockSelection();
    selectionModel.removeSelection();
    for (int i=0; i < starts.length; i++) {
      int startOffset=starts[i];
      int endOffset=ends[i];
      final String text=editor.getDocument().getCharsSequence().subSequence(startOffset,endOffset).toString();
      String converted=toCase(text,true);
      if (text.equals(converted)) {
        converted=toCase(text,false);
      }
      editor.getDocument().replaceString(startOffset,endOffset,converted);
    }
    if (blockStart != null && blockEnd != null) {
      selectionModel.setBlockSelection(blockStart,blockEnd);
    }
  }
 else {
    final Ref<Boolean> toLowerCase=new Ref<Boolean>(Boolean.FALSE);
    runForCaret(editor,caret,new CaretAction(){
      @Override public void perform(      Caret caret){
        if (!caret.hasSelection()) {
          caret.selectWordAtCaret(true);
        }
        String selectedText=caret.getSelectedText();
        if (selectedText != null && !selectedText.equals(toCase(selectedText,true))) {
          toLowerCase.set(Boolean.TRUE);
        }
      }
    }
);
    runForCaret(editor,caret,new CaretAction(){
      @Override public void perform(      Caret caret){
        VisualPosition caretPosition=caret.getVisualPosition();
        int selectionStartOffset=caret.getSelectionStart();
        int selectionEndOffset=caret.getSelectionEnd();
        VisualPosition selectionStartPosition=caret.getSelectionStartPosition();
        VisualPosition selectionEndPosition=caret.getSelectionEndPosition();
        caret.removeSelection();
        String text=editor.getDocument().getText(new TextRange(selectionStartOffset,selectionEndOffset));
        editor.getDocument().replaceString(selectionStartOffset,selectionEndOffset,toCase(text,toLowerCase.get()));
        caret.moveToVisualPosition(caretPosition);
        caret.setSelection(selectionStartPosition,selectionStartOffset,selectionEndPosition,selectionEndOffset);
      }
    }
);
  }
}
