{
  final Ref<Boolean> toLowerCase=new Ref<Boolean>(Boolean.FALSE);
  runForCaret(editor,caret,new CaretAction(){
    @Override public void perform(    Caret caret){
      if (!caret.hasSelection()) {
        caret.selectWordAtCaret(true);
      }
      String selectedText=caret.getSelectedText();
      if (selectedText != null && !selectedText.equals(toCase(selectedText,true))) {
        toLowerCase.set(Boolean.TRUE);
      }
    }
  }
);
  runForCaret(editor,caret,new CaretAction(){
    @Override public void perform(    Caret caret){
      VisualPosition caretPosition=caret.getVisualPosition();
      int selectionStartOffset=caret.getSelectionStart();
      int selectionEndOffset=caret.getSelectionEnd();
      VisualPosition selectionStartPosition=caret.getSelectionStartPosition();
      VisualPosition selectionEndPosition=caret.getSelectionEndPosition();
      caret.removeSelection();
      String text=editor.getDocument().getText(new TextRange(selectionStartOffset,selectionEndOffset));
      editor.getDocument().replaceString(selectionStartOffset,selectionEndOffset,toCase(text,toLowerCase.get()));
      caret.moveToVisualPosition(caretPosition);
      caret.setSelection(selectionStartPosition,selectionStartOffset,selectionEndPosition,selectionEndOffset);
    }
  }
);
}
