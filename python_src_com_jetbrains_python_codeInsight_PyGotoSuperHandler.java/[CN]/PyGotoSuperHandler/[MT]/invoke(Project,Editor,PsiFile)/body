{
  PsiElement element=file.findElementAt(editor.getCaretModel().getOffset());
  if (element == null) {
    return;
  }
  PyFunction function=PsiTreeUtil.getParentOfType(element,PyFunction.class);
  if (function != null) {
    final Collection<PyFunction> superFunctions=getAllSuperMethodsByName(function);
    if (!superFunctions.isEmpty()) {
      PyFunction[] superFunctionsArray=superFunctions.toArray(new PyFunction[superFunctions.size()]);
      if (superFunctionsArray.length == 1) {
        superFunctionsArray[0].navigate(true);
      }
 else {
        NavigationUtil.getPsiElementPopup(superFunctionsArray,CodeInsightBundle.message("goto.super.method.chooser.title")).showInBestPositionFor(editor);
      }
    }
  }
 else {
    PyClass pyClass=PsiTreeUtil.getParentOfType(element,PyClass.class);
    if (pyClass != null) {
      List<PyClass> superClasses=PyUtil.getAllSuperClasses(pyClass);
      if (superClasses.size() != 0) {
        if (superClasses.size() == 1) {
          superClasses.get(0).navigate(true);
        }
 else {
          NavigationUtil.getPsiElementPopup(superClasses.toArray(new PyClass[superClasses.size()]),"Choose superclass").showInBestPositionFor(editor);
        }
      }
    }
  }
}
