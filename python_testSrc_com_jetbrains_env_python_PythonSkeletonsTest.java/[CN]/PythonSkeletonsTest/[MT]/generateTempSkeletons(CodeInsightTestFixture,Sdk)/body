{
  final Project project=fixture.getProject();
  ModuleRootModificationUtil.setModuleSdk(fixture.getModule(),sdk);
  edt(new Runnable(){
    @Override public void run(){
      ApplicationManager.getApplication().runWriteAction(new Runnable(){
        @Override public void run(){
          ProjectRootManager.getInstance(project).setProjectSdk(sdk);
        }
      }
);
    }
  }
);
  final SdkModificator modificator=sdk.getSdkModificator();
  modificator.removeRoots(OrderRootType.CLASSES);
  for (  String path : PythonSdkType.getSysPathsFromScript(sdk.getHomePath())) {
    PythonSdkType.addSdkRoot(modificator,path);
  }
  final File tempDir=FileUtil.createTempDirectory(getTestName(false),null);
  final File skeletonsDir=new File(tempDir,PythonSdkType.SKELETON_DIR_NAME);
  FileUtil.createDirectory(skeletonsDir);
  final String skeletonsPath=skeletonsDir.toString();
  PythonSdkType.addSdkRoot(modificator,skeletonsPath);
  edt(new Runnable(){
    @Override public void run(){
      modificator.commitChanges();
    }
  }
);
  final SkeletonVersionChecker checker=new SkeletonVersionChecker(0);
  final PySkeletonRefresher refresher=new PySkeletonRefresher(project,null,sdk,skeletonsPath,null,null);
  final List<String> errors=refresher.regenerateSkeletons(checker,null);
  assertEmpty(errors);
}
