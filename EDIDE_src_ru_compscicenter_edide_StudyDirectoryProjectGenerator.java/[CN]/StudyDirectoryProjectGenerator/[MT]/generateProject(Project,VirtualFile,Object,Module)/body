{
  try {
    InputStream metaIS=StudyDirectoryProjectGenerator.class.getResourceAsStream("tasks.meta");
    BufferedReader reader=new BufferedReader(new InputStreamReader(metaIS));
    final int tasksNumber=Integer.parseInt(reader.readLine());
    taskManager=TaskManager.getInstance();
    for (int task=0; task < tasksNumber; task++) {
      int n=Integer.parseInt(reader.readLine());
      taskManager.addTask(n);
      for (int h=0; h < n; h++) {
        taskManager.setFileName(task,reader.readLine());
      }
      String taskTextFileName=Integer.toString(task + 1) + ".meta";
      System.out.println(taskTextFileName);
      InputStream taskTextIS=StudyDirectoryProjectGenerator.class.getResourceAsStream(taskTextFileName);
      System.out.println((taskTextIS == null));
      BufferedReader taskTextReader=new BufferedReader(new InputStreamReader(taskTextIS));
      System.out.println((taskTextReader == null));
      while (taskTextReader.ready()) {
        taskManager.addTaskTextLine(task,taskTextReader.readLine());
      }
    }
    reader.close();
    ApplicationManager.getApplication().runWriteAction(new Runnable(){
      @Override public void run(){
        try {
          for (int task=0; task < tasksNumber; task++) {
            VirtualFile taskDirectory=baseDir.createChildDirectory(this,"task" + (task + 1));
            for (int file=0; file < taskManager.getTaskFileNum(task); file++) {
              final String curFileName=taskManager.getFileName(task,file);
              createFile(curFileName,taskDirectory);
            }
            createFile("task1_tests.py",baseDir.findChild("task1"));
          }
        }
 catch (        IOException e) {
          Log.print("Problems with creating files");
          Log.print(e.toString());
          Log.flush();
        }
      }
    }
);
    makeRunConfiguration(project,baseDir);
  }
 catch (  IOException e) {
    Log.print("Problems with metadata file");
    Log.print(e.toString());
    Log.flush();
  }
}
