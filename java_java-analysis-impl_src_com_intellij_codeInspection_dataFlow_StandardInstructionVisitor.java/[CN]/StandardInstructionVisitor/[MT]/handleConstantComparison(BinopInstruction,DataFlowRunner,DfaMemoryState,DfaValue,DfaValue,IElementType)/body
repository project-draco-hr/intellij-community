{
  if (dfaRight instanceof DfaConstValue && dfaLeft instanceof DfaVariableValue) {
    PsiType varType=((DfaVariableValue)dfaLeft).getVariableType();
    Object value=((DfaConstValue)dfaRight).getValue();
    if (varType instanceof PsiPrimitiveType && value instanceof Number) {
      DfaInstructionState[] result=checkTypeRanges(instruction,runner,memState,opSign,varType,((Number)value).longValue());
      if (result != null) {
        return result;
      }
    }
  }
  if (dfaRight instanceof DfaVariableValue && dfaLeft instanceof DfaConstValue) {
    return handleConstantComparison(instruction,runner,memState,dfaLeft,dfaRight,DfaRelationValue.getSymmetricOperation(opSign));
  }
  if (EQEQ != opSign && NE != opSign || !(dfaLeft instanceof DfaConstValue) || !(dfaRight instanceof DfaConstValue)) {
    return null;
  }
  boolean negated=(NE == opSign) ^ (DfaMemoryStateImpl.isNaN(dfaLeft) || DfaMemoryStateImpl.isNaN(dfaRight));
  if (dfaLeft == dfaRight ^ negated) {
    return alwaysTrue(instruction,runner,memState);
  }
  return alwaysFalse(instruction,runner,memState);
}
