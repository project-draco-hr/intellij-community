{
  FilteredTraverser<Integer> t=filteredTraverser();
class F extends JBIterable.StatefulFilter<Integer> {
    int count;
    boolean value;
    F(    boolean initialVal){
      value=initialVal;
    }
    public boolean value(    Integer integer){
      return count++ > 0 == value;
    }
  }
  JBIterable<Integer> it=t.regard(new F(true)).withRoot(1).traverse();
  assertEquals(Arrays.asList(1,5,6,7,3,9,10,4,12,13),it.toList());
  assertEquals(Arrays.asList(1,5,6,7,3,9,10,4,12,13),it.toList());
  assertEquals(it.toList(),t.forceDisregard(new F(false)).withRoot(1).reset().traverse().toList());
}
