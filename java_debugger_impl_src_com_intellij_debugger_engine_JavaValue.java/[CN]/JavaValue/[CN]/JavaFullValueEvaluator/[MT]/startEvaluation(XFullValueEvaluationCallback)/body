{
  if (callback.isObsolete())   return;
  myEvaluationContext.getManagerThread().schedule(new SuspendContextCommandImpl(myEvaluationContext.getSuspendContext()){
    @Override public Priority getPriority(){
      return Priority.NORMAL;
    }
    @Override protected void commandCancelled(){
      callback.errorOccurred(DebuggerBundle.message("error.context.has.changed"));
    }
    @Override public void contextAction() throws Exception {
      if (callback.isObsolete())       return;
      evaluate(callback);
    }
  }
);
}
