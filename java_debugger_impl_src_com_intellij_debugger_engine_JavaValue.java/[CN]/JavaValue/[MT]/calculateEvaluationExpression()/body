{
  if (evaluationExpression != null) {
    return Promise.resolve(evaluationExpression);
  }
 else {
    final AsyncPromise<XExpression> res=new AsyncPromise<XExpression>();
    myEvaluationContext.getManagerThread().schedule(new SuspendContextCommandImpl(myEvaluationContext.getSuspendContext()){
      @Override public Priority getPriority(){
        return Priority.HIGH;
      }
      @Override public void contextAction() throws Exception {
        evaluationExpression=ApplicationManager.getApplication().runReadAction(new Computable<XExpression>(){
          @Override public XExpression compute(){
            try {
              PsiExpression psiExpression=getDescriptor().getTreeEvaluation(JavaValue.this,getDebuggerContext());
              if (psiExpression != null) {
                return TextWithImportsImpl.toXExpression(new TextWithImportsImpl(psiExpression));
              }
            }
 catch (            EvaluateException e) {
              LOG.info(e);
            }
            return null;
          }
        }
);
        res.setResult(evaluationExpression);
      }
    }
);
    return res;
  }
}
