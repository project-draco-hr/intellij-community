{
  myEvaluationContext.getDebugProcess().getManagerThread().schedule(new DebuggerCommandImpl(){
    @Override protected void action() throws Exception {
      final XValueChildrenList children=new XValueChildrenList();
      final NodeRenderer renderer=myValueDescriptor.getRenderer(myEvaluationContext.getDebugProcess());
      renderer.buildChildren(myValueDescriptor.getValue(),new ChildrenBuilder(){
        @Override public NodeDescriptorFactory getDescriptorManager(){
          return myNodeManager;
        }
        @Override public NodeManager getNodeManager(){
          return myNodeManager;
        }
        @Override public ValueDescriptor getParentDescriptor(){
          return myValueDescriptor;
        }
        @Override public void setChildren(        List<DebuggerTreeNode> nodes){
          for (          DebuggerTreeNode node : nodes) {
            NodeDescriptor descriptor=node.getDescriptor();
            if (descriptor instanceof ValueDescriptorImpl) {
              children.add(new JavaValue(JavaValue.this,(ValueDescriptorImpl)descriptor,myEvaluationContext,myNodeManager));
            }
          }
        }
      }
,myEvaluationContext);
      node.addChildren(children,true);
    }
  }
);
}
