{
  return execute(new ThrowableConsumer<ProgressIndicator,Exception>(){
    @Override public void consume(    @NotNull ProgressIndicator indicator) throws Exception {
      IndexDiff index=new IndexDiff(git.getRepository(),Constants.HEAD,new FileTreeIterator(git.getRepository()));
      if (!index.diff() || (index.getAdded().isEmpty() && index.getChanged().isEmpty() && index.getRemoved().isEmpty())) {
        if (index.getModified().isEmpty()) {
          LOG.debug("skip scheduled commit, nothing to commit");
          return;
        }
        AddCommand addCommand=git.add();
        for (        String path : index.getModified()) {
          addCommand.addFilepattern(path);
        }
        addCommand.call();
      }
      PersonIdent author=new PersonIdent(git.getRepository());
      PersonIdent committer=new PersonIdent(ApplicationInfoEx.getInstanceEx().getFullApplicationName(),author.getEmailAddress());
      git.commit().setAuthor(author).setCommitter(committer).setMessage("").call();
    }
  }
,new EmptyProgressIndicator());
}
