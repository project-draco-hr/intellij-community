{
  myLastUsedHandler=myDelegate;
  if (myDelegate.matchSequentially(nodes,nodes2,context)) {
    return true;
  }
  if (nodes.hasNext()) {
    final PsiElement first=nodes.current();
    final List<PsiElement> alternativeElements=first.getUserData(PatternCompiler.ALTERNATIVE_PATTERN_ROOTS);
    if (alternativeElements != null) {
      for (      PsiElement alternativeNode : alternativeElements) {
        myLastUsedHandler=context.getPattern().getHandler(alternativeNode);
        if (myLastUsedHandler.matchSequentially(nodes,nodes2,context)) {
          return true;
        }
      }
    }
  }
  return false;
}
