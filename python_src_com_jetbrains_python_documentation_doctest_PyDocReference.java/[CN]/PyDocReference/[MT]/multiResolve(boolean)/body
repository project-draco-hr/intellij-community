{
  ResolveResult[] results=super.multiResolve(incompleteCode);
  if (results.length == 0) {
    final ResolveResultList ret=new ResolveResultList();
    PsiFile file=myElement.getContainingFile();
    final InjectedLanguageManager languageManager=InjectedLanguageManager.getInstance(myElement.getProject());
    final PsiLanguageInjectionHost host=languageManager.getInjectionHost(myElement);
    if (host != null)     file=host.getContainingFile();
    final String referencedName=myElement.getReferencedName();
    if (referencedName == null)     return ResolveResult.EMPTY_ARRAY;
    ResolveProcessor processor=new ResolveProcessor(referencedName);
    PyResolveUtil.scopeCrawlUp(processor,(ScopeOwner)file,referencedName,file);
    PsiElement uexpr=processor.getResult();
    if (uexpr != null)     ret.add(new RatedResolveResult(RatedResolveResult.RATE_NORMAL,uexpr));
    if (ret.size() > 0) {
      return ret.toArray(new RatedResolveResult[ret.size()]);
    }
    return new ResolveResult[]{new PsiElementResolveResult(myElement)};
  }
  return results;
}
