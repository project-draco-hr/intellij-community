{
  final PsiExpressionList thenArgsList=((PsiCallExpression)thenExpression).getArgumentList();
  if (thenArgsList == null)   return;
  final PsiExpression[] thenExpressions=thenArgsList.getExpressions();
  final PsiExpressionList elseArgsList=((PsiCallExpression)elseExpression).getArgumentList();
  if (elseArgsList == null)   return;
  final PsiExpression[] elseExpressions=elseArgsList.getExpressions();
  final Pair<PsiExpression,PsiExpression> qualifiers=getQualifiers(thenExpression,elseExpression);
  if (qualifiers != null) {
    if (isSameCall(thenExpressions,elseExpressions)) {
      replaceRecursively(project,conditionalExpression,qualifiers.first,qualifiers.second);
    }
 else {
      pushConditional(project,conditionalExpression,thenExpression,elseExpression);
    }
  }
 else {
    for (int i=0; i < thenExpressions.length; i++) {
      PsiExpression lExpr=thenExpressions[i];
      PsiExpression rExpr=elseExpressions[i];
      if (pushConditional(project,conditionalExpression,lExpr,rExpr)) {
        break;
      }
    }
  }
}
