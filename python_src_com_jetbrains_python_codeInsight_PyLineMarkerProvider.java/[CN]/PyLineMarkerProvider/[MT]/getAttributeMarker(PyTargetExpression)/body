{
  final String name=element.getReferencedName();
  if (name == null) {
    return null;
  }
  PyClass containingClass=PsiTreeUtil.getParentOfType(element,PyClass.class);
  if (containingClass == null)   return null;
  for (  PyClass ancestor : containingClass.iterateAncestorClasses()) {
    final PyTargetExpression ancestorAttr=ancestor.findClassAttribute(name,false);
    if (ancestorAttr != null) {
      return new LineMarkerInfo<PsiElement>(element,element.getTextRange().getStartOffset(),AllIcons.Gutter.OverridingMethod,Pass.UPDATE_ALL,new TooltipProvider("Overrides attribute in " + ancestor.getName()),ourSuperAttributeNavigator);
    }
  }
  return null;
}
