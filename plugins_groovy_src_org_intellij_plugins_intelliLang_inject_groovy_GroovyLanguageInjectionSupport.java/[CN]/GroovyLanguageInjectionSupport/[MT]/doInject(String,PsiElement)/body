{
  final PsiElement target=getTopLevelInjectionTarget(host);
  final PsiElement parent=target.getParent();
  final Project project=host.getProject();
  if (parent instanceof GrReturnStatement) {
    final GrControlFlowOwner owner=ControlFlowUtils.findControlFlowOwner(parent);
    if (owner instanceof GrOpenBlock && owner.getParent() instanceof GrMethod) {
      return JavaLanguageInjectionSupport.doInjectInJavaMethod(project,(PsiMethod)owner.getParent(),-1,languageId);
    }
  }
 else   if (parent instanceof GrMethod) {
    return JavaLanguageInjectionSupport.doInjectInJavaMethod(project,(GrMethod)parent,-1,languageId);
  }
 else   if (parent instanceof GrAnnotationNameValuePair) {
    final PsiReference ref=parent.getReference();
    if (ref != null) {
      final PsiElement resolved=ref.resolve();
      if (resolved instanceof PsiMethod) {
        return JavaLanguageInjectionSupport.doInjectInJavaMethod(project,(PsiMethod)resolved,-1,languageId);
      }
    }
  }
 else   if (parent instanceof GrArgumentList && parent.getParent() instanceof GrMethodCall) {
    final PsiMethod method=((GrMethodCall)parent.getParent()).resolveMethod();
    if (method != null) {
      final int index=findParameterIndex(target,((GrMethodCall)parent.getParent()));
      if (index >= 0) {
        return JavaLanguageInjectionSupport.doInjectInJavaMethod(project,method,index,languageId);
      }
    }
  }
 else   if (parent instanceof GrAssignmentExpression) {
    final GrExpression expr=((GrAssignmentExpression)parent).getLValue();
    if (expr instanceof GrReferenceExpression) {
      final PsiElement element=((GrReferenceExpression)expr).resolve();
      if (element != null) {
        return doInject(languageId,element);
      }
    }
  }
 else {
    if (parent instanceof PsiVariable) {
      if (JavaLanguageInjectionSupport.doAddLanguageAnnotation(project,(PsiModifierListOwner)parent,languageId))       return true;
    }
 else     if (target instanceof PsiVariable && !(target instanceof LightElement)) {
      if (JavaLanguageInjectionSupport.doAddLanguageAnnotation(project,(PsiModifierListOwner)target,languageId))       return true;
    }
  }
  return false;
}
