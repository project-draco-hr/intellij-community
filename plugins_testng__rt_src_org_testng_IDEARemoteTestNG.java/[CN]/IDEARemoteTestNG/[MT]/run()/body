{
  try {
    initializeSuitesAndJarFile();
    List<XmlSuite> suites=Lists.newArrayList();
    calculateAllSuites(m_suites,suites);
    if (suites.size() > 0) {
      int testCount=0;
      for (      XmlSuite suite : suites) {
        System.out.println("##teamcity[suiteTreeStarted name=\'" + suite.getName() + "\' locationHint=\'java:suite://"+ suite.getName()+ "\']");
        final List<XmlTest> tests=suite.getTests();
        for (        XmlTest test : tests) {
          for (          XmlClass aClass : test.getXmlClasses()) {
            final String shortName=IDEATestNGRemoteListener.getShortName(aClass.getName());
            System.out.println("##teamcity[suiteTreeStarted name=\'" + shortName + "\' locationHint=\'java:suite://"+ aClass.getName()+ "\']");
            if (myParam != null) {
              for (              XmlInclude include : aClass.getIncludedMethods()) {
                aClass.setIncludedMethods(Arrays.asList(new XmlInclude(include.getName(),Arrays.asList(Integer.parseInt(myParam)),0)));
              }
            }
            System.out.println("##teamcity[suiteTreeEnded name=\'" + shortName + "\']");
          }
          testCount+=test.getClasses().size();
        }
        System.out.println("##teamcity[suiteTreeEnded name=\'" + suite.getName() + "\']");
      }
      final HashMap<String,String> map=new HashMap<String,String>();
      map.put("count",String.valueOf(testCount));
      System.out.println(ServiceMessage.asString("testCount",map));
      addListener((ISuiteListener)new IDEATestNGRemoteListener());
      addListener((ITestListener)new IDEATestNGRemoteListener());
      super.run();
      System.exit(0);
    }
 else {
      System.err.println("Nothing found to run");
    }
  }
 catch (  Throwable cause) {
    cause.printStackTrace(System.err);
  }
}
