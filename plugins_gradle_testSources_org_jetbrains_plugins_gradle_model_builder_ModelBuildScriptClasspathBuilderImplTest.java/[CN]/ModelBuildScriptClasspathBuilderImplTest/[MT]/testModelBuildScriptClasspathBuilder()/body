{
  ModelBuildScriptClasspathBuilderImpl buildScriptClasspathBuilder=new ModelBuildScriptClasspathBuilderImpl();
  assertTrue(buildScriptClasspathBuilder.canBuild("org.jetbrains.plugins.gradle.model.BuildScriptClasspathModel"));
  DomainObjectSet<? extends IdeaModule> ideaModules=allModels.getIdeaProject().getModules();
  List<BuildScriptClasspathModel> ideaModule=ContainerUtil.mapNotNull(ideaModules,new Function<IdeaModule,BuildScriptClasspathModel>(){
    @Override public BuildScriptClasspathModel fun(    IdeaModule module){
      BuildScriptClasspathModel classpathModel=allModels.getExtraProject(module,BuildScriptClasspathModel.class);
      if (module.getName().equals("moduleWithAdditionalClasspath")) {
        assertNotNull(classpathModel);
        assertEquals(1,classpathModel.getClasspath().size());
        ClasspathEntryModel classpathEntry=classpathModel.getClasspath().getAt(0);
        assertEquals("someDep.jar",classpathEntry.getClassesFile().getName());
      }
 else       if (module.getName().equals("moduleWithoutAdditionalClasspath") || module.getName().equals("testModelBuildScriptClasspathBuilder")) {
        assertNotNull(classpathModel);
        assertTrue(classpathModel.getClasspath().isEmpty());
      }
 else {
        fail();
      }
      return classpathModel;
    }
  }
);
  assertEquals(3,ideaModule.size());
}
