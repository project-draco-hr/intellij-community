{
  final Project project=psiPackage.getProject();
  final ProjectFileIndex index=ProjectRootManager.getInstance(project).getFileIndex();
  final PsiDirectory[] directories=psiPackage.getDirectories();
  return new MoveDirectoryWithClassesProcessor(project,directories,null,searchInComments,searchInNonJavaFiles,false,null){
    @Override public TargetDirectoryWrapper getTargetDirectory(    final PsiDirectory dir){
      final VirtualFile sourceRoot=index.getSourceRootForFile(dir.getVirtualFile());
      LOG.assertTrue(sourceRoot != null);
      return new TargetDirectoryWrapper(dir.getManager().findDirectory(sourceRoot),newName.replaceAll("\\.","\\/"));
    }
    @Override protected String getTargetName(){
      return newName;
    }
    @Override protected String getCommandName(){
      return "Rename package";
    }
  }
;
}
