{
  PsiBuilder.Marker expr=myBuilder.mark();
  if (!parseANDTestExpression(stopOnIn,isTargetExpression)) {
    expr.drop();
    return false;
  }
  while (myBuilder.getTokenType() == PyTokenTypes.OR_KEYWORD) {
    myBuilder.advanceLexer();
    if (!parseANDTestExpression(stopOnIn,isTargetExpression)) {
      myBuilder.error(message("PARSE.expected.expression"));
    }
    expr.done(PyElementTypes.BINARY_EXPRESSION);
    expr=expr.precede();
  }
  expr.drop();
  return true;
}
