{
  builder.advanceLexer();
  if (builder.getTokenType() == PyTokenTypes.RBRACKET) {
    PsiBuilder.Marker sliceMarker=builder.mark();
    sliceMarker.done(PyElementTypes.EMPTY_EXPRESSION);
    builder.advanceLexer();
  }
 else {
    if (builder.getTokenType() == PyTokenTypes.COLON) {
      PsiBuilder.Marker sliceMarker=builder.mark();
      sliceMarker.done(PyElementTypes.EMPTY_EXPRESSION);
    }
 else {
      parseExpression();
    }
    if (builder.getTokenType() != PyTokenTypes.RBRACKET && builder.getTokenType() != PyTokenTypes.COLON) {
      builder.error(": or ] expected");
    }
    if (builder.getTokenType() == PyTokenTypes.COLON) {
      builder.advanceLexer();
      parseExpressionOptional();
    }
    checkMatches(PyTokenTypes.RBRACKET,"] expected");
  }
  expr.done(PyElementTypes.SLICE_EXPRESSION);
}
