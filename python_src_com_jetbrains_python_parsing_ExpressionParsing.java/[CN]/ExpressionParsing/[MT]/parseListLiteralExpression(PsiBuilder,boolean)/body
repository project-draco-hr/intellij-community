{
  LOG.assertTrue(builder.getTokenType() == PyTokenTypes.LBRACKET);
  final PsiBuilder.Marker expr=builder.mark();
  builder.advanceLexer();
  if (builder.getTokenType() == PyTokenTypes.RBRACKET) {
    builder.advanceLexer();
    expr.done(PyElementTypes.LIST_LITERAL_EXPRESSION);
    return;
  }
  if (!parseSingleExpression(isTargetExpression)) {
    builder.error("expression expected");
  }
  if (builder.getTokenType() == PyTokenTypes.FOR_KEYWORD) {
    parseListCompExpression(builder,expr,PyTokenTypes.RBRACKET,PyElementTypes.LIST_COMP_EXPRESSION);
  }
 else {
    while (builder.getTokenType() != PyTokenTypes.RBRACKET) {
      if (builder.getTokenType() == PyTokenTypes.COMMA) {
        builder.advanceLexer();
      }
 else       if (!parseSingleExpression(isTargetExpression)) {
        builder.error("expression or , or ] expected");
        break;
      }
    }
    checkMatches(PyTokenTypes.RBRACKET,"] expected");
    expr.done(PyElementTypes.LIST_LITERAL_EXPRESSION);
  }
}
