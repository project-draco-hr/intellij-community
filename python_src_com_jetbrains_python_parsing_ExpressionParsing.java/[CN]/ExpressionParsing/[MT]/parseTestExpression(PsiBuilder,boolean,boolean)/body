{
  if (builder.getTokenType() == PyTokenTypes.LAMBDA_KEYWORD) {
    return parseLambdaExpression(builder,false);
  }
  PsiBuilder.Marker condExpr=builder.mark();
  if (!parseORTestExpression(builder,stopOnIn,isTargetExpression)) {
    condExpr.drop();
    return false;
  }
  if (builder.getTokenType() == PyTokenTypes.IF_KEYWORD) {
    builder.advanceLexer();
    if (!parseORTestExpression(builder,stopOnIn,isTargetExpression)) {
      builder.error("expression expected");
    }
 else {
      if (builder.getTokenType() != PyTokenTypes.ELSE_KEYWORD) {
        builder.error("'else' expected");
      }
 else {
        builder.advanceLexer();
        if (!parseTestExpression(builder,stopOnIn,isTargetExpression)) {
          builder.error("expression expected");
        }
      }
    }
    condExpr.done(PyElementTypes.CONDITIONAL_EXPRESSION);
  }
 else {
    condExpr.drop();
  }
  return true;
}
