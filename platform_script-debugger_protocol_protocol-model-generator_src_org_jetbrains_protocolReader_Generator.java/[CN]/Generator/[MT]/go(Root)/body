{
  initializeKnownTypes();
  List<Domain> domainList=metamodel.domains();
  Map<String,DomainGenerator> domainGeneratorMap=new HashMap<>();
  for (  Domain domain : domainList) {
    if (isDomainSkipped(domain)) {
      System.out.println("Domain skipped: " + domain.domain());
      continue;
    }
    DomainGenerator domainGenerator=new DomainGenerator(this,domain);
    domainGeneratorMap.put(domain.domain(),domainGenerator);
    domainGenerator.registerTypes();
  }
  for (  Domain domain : domainList) {
    if (!isDomainSkipped(domain)) {
      System.out.println("Domain generated: " + domain.domain());
    }
  }
  typeMap.setDomainGeneratorMap(domainGeneratorMap);
  for (  DomainGenerator domainGenerator : domainGeneratorMap.values()) {
    domainGenerator.generateCommandsAndEvents();
  }
  typeMap.generateRequestedTypes();
  generateParserInterfaceList();
  generateParserRoot(parserRootInterfaceItems);
  fileSet.deleteOtherFiles();
}
