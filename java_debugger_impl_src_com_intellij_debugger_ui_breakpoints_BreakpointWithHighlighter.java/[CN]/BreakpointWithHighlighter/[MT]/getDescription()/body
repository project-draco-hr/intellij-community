{
  final StringBuilder buf=StringBuilderSpinAllocator.alloc();
  try {
    buf.append("<html><body>");
    buf.append(getDisplayName());
    if (myInvalidMessage != null && !myInvalidMessage.isEmpty()) {
      buf.append("<br><font color='red'>");
      buf.append(DebuggerBundle.message("breakpoint.warning",myInvalidMessage));
      buf.append("</font>");
    }
    buf.append("&nbsp;<br>&nbsp;");
    buf.append(DebuggerBundle.message("breakpoint.property.name.suspend.policy")).append(" : ");
    if (DebuggerSettings.SUSPEND_NONE.equals(getSuspendPolicy()) || !isSuspend()) {
      buf.append(DebuggerBundle.message("breakpoint.properties.panel.option.suspend.none"));
    }
 else     if (DebuggerSettings.SUSPEND_ALL.equals(getSuspendPolicy())) {
      buf.append(DebuggerBundle.message("breakpoint.properties.panel.option.suspend.all"));
    }
 else     if (DebuggerSettings.SUSPEND_THREAD.equals(getSuspendPolicy())) {
      buf.append(DebuggerBundle.message("breakpoint.properties.panel.option.suspend.thread"));
    }
    buf.append("&nbsp;<br>&nbsp;");
    buf.append(DebuggerBundle.message("breakpoint.property.name.log.message")).append(": ");
    buf.append(isLogEnabled() ? CommonBundle.getYesButtonText() : CommonBundle.getNoButtonText());
    if (isLogExpressionEnabled()) {
      buf.append("&nbsp;<br>&nbsp;");
      buf.append(DebuggerBundle.message("breakpoint.property.name.log.expression")).append(": ");
      buf.append(XmlStringUtil.escapeString(getLogMessage().getText()));
    }
    if (isConditionEnabled() && getCondition() != null && getCondition().getText() != null && !getCondition().getText().isEmpty()) {
      buf.append("&nbsp;<br>&nbsp;");
      buf.append(DebuggerBundle.message("breakpoint.property.name.condition")).append(": ");
      buf.append(XmlStringUtil.escapeString(getCondition().getText()));
    }
    if (isCountFilterEnabled()) {
      buf.append("&nbsp;<br>&nbsp;");
      buf.append(DebuggerBundle.message("breakpoint.property.name.pass.count")).append(": ");
      buf.append(getCountFilter());
    }
    if (isClassFiltersEnabled()) {
      buf.append("&nbsp;<br>&nbsp;");
      buf.append(DebuggerBundle.message("breakpoint.property.name.class.filters")).append(": ");
      ClassFilter[] classFilters=getClassFilters();
      for (      ClassFilter classFilter : classFilters) {
        buf.append(classFilter.getPattern()).append(" ");
      }
    }
    if (isInstanceFiltersEnabled()) {
      buf.append("&nbsp;<br>&nbsp;");
      buf.append(DebuggerBundle.message("breakpoint.property.name.instance.filters"));
      InstanceFilter[] instanceFilters=getInstanceFilters();
      for (      InstanceFilter instanceFilter : instanceFilters) {
        buf.append(Long.toString(instanceFilter.getId())).append(" ");
      }
    }
    buf.append("</body></html>");
    return buf.toString();
  }
  finally {
    StringBuilderSpinAllocator.dispose(buf);
  }
}
