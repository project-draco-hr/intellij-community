{
  myPushSupport=support;
  myRepository=repository;
  myGit=ServiceManager.getService(Git.class);
  myProject=myRepository.getProject();
  myTargetRenderer=new VcsEditableTextComponent("",null);
  myTargetEditor=new PushTargetTextField(repository.getProject(),getTargetNames(myRepository),"");
  myRemoteRenderer=new VcsLinkedTextComponent("",new VcsLinkListener(){
    @Override public void hyperlinkActivated(    @NotNull DefaultMutableTreeNode sourceNode,    @NotNull MouseEvent event){
      if (myRepository.getRemotes().isEmpty()) {
        showDefineRemoteDialog();
      }
 else {
        Component eventComponent=event.getComponent();
        if (eventComponent != null) {
          showRemoteSelector(eventComponent,event.getPoint());
        }
      }
    }
  }
);
  setLayout(new BorderLayout());
  setOpaque(false);
  JPanel remoteAndSeparator=new JPanel(new BorderLayout());
  remoteAndSeparator.setOpaque(false);
  remoteAndSeparator.add(myRemoteRenderer,BorderLayout.CENTER);
  remoteAndSeparator.add(new JBLabel(SEPARATOR),BorderLayout.EAST);
  add(remoteAndSeparator,BorderLayout.WEST);
  add(myTargetEditor,BorderLayout.CENTER);
  updateComponents(defaultTarget);
  setFocusCycleRoot(true);
  setFocusTraversalPolicyProvider(true);
  myRemoteRenderer.setFocusable(true);
  myTargetEditor.setFocusable(true);
  setFocusTraversalPolicy(new MyGitTargetFocusTraversalPolicy());
  myRemoteRenderer.addFocusListener(new FocusAdapter(){
    @Override public void focusGained(    FocusEvent e){
      if (myTargetEditor.isShowing()) {
        showRemoteSelector(myRemoteRenderer,new Point(myRemoteRenderer.getLocation()));
      }
    }
  }
);
}
