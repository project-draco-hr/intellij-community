{
  myRepository=repository;
  myCurrentTarget=defaultTarget;
  String initialBranch="";
  String initialRemote="";
  if (defaultTarget == null) {
    if (repository.getCurrentBranch() == null) {
      myError="Detached HEAD";
    }
 else     if (repository.getRemotes().isEmpty()) {
      myError="No remotes";
    }
 else     if (repository.isFresh()) {
      myError="Empty repository";
    }
 else {
      myError="Can't push";
    }
  }
 else {
    initialBranch=getTextFieldText(defaultTarget);
    initialRemote=defaultTarget.getBranch().getRemote().getName();
  }
  myTargetRenderedComponent=new VcsEditableTextComponent("<a href=''>" + initialBranch + "</a>",null);
  myTargetTextField=new PushTargetTextField(repository.getProject(),getTargetNames(myRepository),initialBranch);
  myRemoteRenderedComponent=new VcsLinkedText("<a href=''>" + initialRemote + "</a>",new VcsLinkListener(){
    @Override public void hyperlinkActivated(    @NotNull DefaultMutableTreeNode sourceNode,    @NotNull MouseEvent event){
      showRemoteSelector(event);
    }
  }
);
  setLayout(new BorderLayout());
  setOpaque(false);
  JPanel remoteAndSeparator=new JPanel(new BorderLayout());
  remoteAndSeparator.setOpaque(false);
  remoteAndSeparator.add(new JBLabel(myRemoteRenderedComponent.getText()),BorderLayout.CENTER);
  remoteAndSeparator.add(new JBLabel(SEPARATOR),BorderLayout.EAST);
  add(remoteAndSeparator,BorderLayout.WEST);
  add(myTargetTextField,BorderLayout.CENTER);
  updateTextField();
}
