{
  if (url.isEmpty()) {
    return "URL can't be empty";
  }
  if (!GitRefNameValidator.getInstance().checkInput(name)) {
    return "Remote name is invalid";
  }
  final Ref<String> error=Ref.create();
  ProgressManager.getInstance().run(new Task.Modal(myRepository.getProject(),"Checking URL...",false){
    @Override public void run(    @NotNull ProgressIndicator indicator){
      indicator.setIndeterminate(true);
      final GitCommandResult result=myGit.lsRemote(myRepository.getProject(),VfsUtilCore.virtualToIoFile(myRepository.getRoot()),url);
      if (!result.success()) {
        error.set("Remote URL is invalid: " + result.getErrorOutputAsHtmlString());
      }
    }
  }
);
  return error.get();
}
