{
  final List<String> remotes=getRemotes();
  if (remotes.size() <= 1) {
    return;
  }
  ListPopup popup=new ListPopupImpl(new BaseListPopupStep<String>(null,remotes){
    @Override public PopupStep onChosen(    String selectedValue,    boolean finalChoice){
      myRemoteRenderer.updateLinkText(selectedValue);
      if (myFireOnChangeAction != null && !myTargetEditor.isShowing()) {
        myFireOnChangeAction.run();
      }
      return super.onChosen(selectedValue,finalChoice);
    }
  }
){
    @Override public void cancel(    InputEvent e){
      super.cancel(e);
      if (myTargetEditor.isShowing()) {
        GitPushTargetPanel.this.repaint();
        IdeFocusManager.getInstance(myProject).requestFocus(myTargetEditor,true);
      }
    }
  }
;
  popup.show(new RelativePoint(component,point));
}
