{
  SimpleTextAttributes targetTextAttributes=PushLogTreeUtil.addTransparencyIfNeeded(SimpleTextAttributes.REGULAR_ATTRIBUTES,isActive);
  if (myError != null) {
    renderer.append(myError,PushLogTreeUtil.addTransparencyIfNeeded(SimpleTextAttributes.ERROR_ATTRIBUTES,isActive));
  }
 else {
    String currentRemote=myRemoteRenderer.getText();
    List<String> remotes=getRemotes();
    if (remotes.isEmpty() || remotes.size() > 1) {
      myRemoteRenderer.setSelected(isSelected);
      myRemoteRenderer.setTransparent(!remotes.isEmpty() && !isActive);
      myRemoteRenderer.render(renderer);
    }
 else {
      renderer.append(currentRemote,targetTextAttributes);
    }
    if (!remotes.isEmpty()) {
      renderer.append(SEPARATOR,targetTextAttributes);
      if (forceRenderedText != null) {
        myTargetEditor.setText(forceRenderedText);
        renderer.append(forceRenderedText);
        return;
      }
      GitPushTarget target=getValue();
      if (target != null && target.isNewBranchCreated()) {
        renderer.append("+",PushLogTreeUtil.addTransparencyIfNeeded(SimpleTextAttributes.SYNTHETIC_ATTRIBUTES,isActive),this);
      }
      myTargetRenderer.setSelected(isSelected);
      myTargetRenderer.setTransparent(!isActive);
      myTargetRenderer.render(renderer);
    }
  }
}
