{
  PsiReturnStatement returnStatement=(PsiReturnStatement)tb.getSingleStatement();
  PsiExpression value=returnStatement.getReturnValue();
  PsiReturnStatement nextReturnStatement=getNextReturnStatement(statement);
  if (nextReturnStatement != null && (ExpressionUtils.isLiteral(value,Boolean.TRUE) || ExpressionUtils.isLiteral(value,Boolean.FALSE))) {
    boolean foundResult=(boolean)((PsiLiteralExpression)value).getValue();
    if (ExpressionUtils.isLiteral(nextReturnStatement.getReturnValue(),!foundResult)) {
      String methodName;
      if (foundResult) {
        methodName="anyMatch";
      }
 else {
        methodName="noneMatch";
        if (!operations.isEmpty()) {
          Operation lastOp=operations.get(operations.size() - 1);
          if (lastOp instanceof FilterOp && (((FilterOp)lastOp).isNegated() ^ BoolUtils.isNegation(lastOp.getExpression()))) {
            methodName="allMatch";
          }
        }
      }
      registerProblem(statement,methodName,new ReplaceWithMatchFix(methodName));
      return;
    }
  }
  if (!isVariableReferenced(tb.getVariable(),value)) {
    if (!REPLACE_TRIVIAL_FOREACH && operations.isEmpty() || (operations.size() == 1 && operations.get(0) instanceof FilterOp)) {
      return;
    }
    registerProblem(statement,"anyMatch",new ReplaceWithMatchFix("anyMatch"));
  }
  if (nextReturnStatement != null && ExpressionUtils.isSimpleExpression(nextReturnStatement.getReturnValue()) && (!(tb.getVariable().getType() instanceof PsiPrimitiveType) || isIdentityMapping(tb.getVariable(),value))) {
    registerProblem(statement,"findFirst",new ReplaceWithFindFirstFix());
  }
}
