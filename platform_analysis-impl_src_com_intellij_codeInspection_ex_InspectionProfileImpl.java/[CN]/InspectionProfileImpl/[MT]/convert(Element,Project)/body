{
  initInspectionTools(project);
  final Element scopes=element.getChild(DefaultProjectProfileManager.SCOPES);
  if (scopes == null) {
    return;
  }
  final List children=scopes.getChildren(SCOPE);
  for (  Object s : children) {
    Element scopeElement=(Element)s;
    final String profile=scopeElement.getAttributeValue(DefaultProjectProfileManager.PROFILE);
    if (profile != null) {
      final InspectionProfileImpl inspectionProfile=(InspectionProfileImpl)getProfileManager().getProfile(profile);
      if (inspectionProfile != null) {
        final NamedScope scope=getProfileManager().getScopesManager().getScope(scopeElement.getAttributeValue(NAME));
        if (scope != null) {
          for (          InspectionToolWrapper wrapper : inspectionProfile.getInspectionTools(null)) {
            final HighlightDisplayKey key=HighlightDisplayKey.find(wrapper.getShortName());
            try {
              InspectionToolWrapper toolWrapper=copyToolSettings(wrapper);
              HighlightDisplayLevel errorLevel=inspectionProfile.getErrorLevel(key,null,project);
              getTools(wrapper.getShortName(),project).addTool(scope,toolWrapper,inspectionProfile.isToolEnabled(key),errorLevel);
            }
 catch (            Exception e) {
              LOG.error(e);
            }
          }
        }
      }
    }
  }
  reduceConvertedScopes();
}
