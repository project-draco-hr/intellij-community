{
  super.writeExternal(element);
  element.setAttribute(VERSION_TAG,VALID_VERSION);
  element.setAttribute(IS_LOCKED,String.valueOf(myLockedProfile));
  if (myDescription != null) {
    element.addContent(new Element(DESCRIPTION).addContent(myDescription));
  }
synchronized (myExternalInfo) {
    if (!myInitialized) {
      for (      Element el : myUninstalledInspectionsSettings.values()) {
        element.addContent(el.clone());
      }
      return;
    }
  }
  Map<String,Boolean> diffMap=getDisplayLevelMap();
  if (diffMap != null) {
    diffMap=new TreeMap<String,Boolean>(diffMap);
    for (    String toolName : myUninstalledInspectionsSettings.keySet()) {
      diffMap.put(toolName,false);
    }
    for (    final String toolName : diffMap.keySet()) {
      if (!myLockedProfile && diffMap.get(toolName).booleanValue()) {
        markSettingsMerged(toolName,element);
        continue;
      }
      final Element toolElement=myUninstalledInspectionsSettings.get(toolName);
      if (toolElement == null) {
        final ToolsImpl toolList=myTools.get(toolName);
        LOG.assertTrue(toolList != null);
        final Element inspectionElement=new Element(INSPECTION_TOOL_TAG);
        inspectionElement.setAttribute(CLASS_TAG,toolName);
        toolList.writeExternal(inspectionElement);
        if (!areSettingsMerged(toolName,inspectionElement)) {
          element.addContent(inspectionElement);
        }
      }
 else {
        element.addContent(toolElement.clone());
      }
    }
  }
}
