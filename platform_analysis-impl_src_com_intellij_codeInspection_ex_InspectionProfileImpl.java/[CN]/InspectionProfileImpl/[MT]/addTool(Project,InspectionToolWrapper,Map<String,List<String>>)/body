{
  final String shortName=toolWrapper.getShortName();
  HighlightDisplayKey key=HighlightDisplayKey.find(shortName);
  if (key == null) {
    final InspectionEP extension=toolWrapper.getExtension();
    Computable<String> computable=extension == null ? new Computable.PredefinedValueComputable<String>(toolWrapper.getDisplayName()) : new Computable<String>(){
      @Override public String compute(){
        return extension.getDisplayName();
      }
    }
;
    if (toolWrapper instanceof LocalInspectionToolWrapper) {
      key=HighlightDisplayKey.register(shortName,computable,toolWrapper.getID(),((LocalInspectionToolWrapper)toolWrapper).getAlternativeID());
    }
 else {
      key=HighlightDisplayKey.register(shortName,computable);
    }
  }
  LOG.assertTrue(key != null,shortName + " ; number of initialized tools: " + myTools.size());
  HighlightDisplayLevel baseLevel=myBaseProfile != null && myBaseProfile.getTools(shortName,project) != null ? myBaseProfile.getErrorLevel(key,project) : HighlightDisplayLevel.DO_NOT_SHOW;
  HighlightDisplayLevel defaultLevel=toolWrapper.getDefaultLevel();
  HighlightDisplayLevel level=baseLevel.getSeverity().compareTo(defaultLevel.getSeverity()) > 0 ? baseLevel : defaultLevel;
  boolean enabled=myBaseProfile != null ? myBaseProfile.isToolEnabled(key) : toolWrapper.isEnabledByDefault();
  final ToolsImpl toolsList=new ToolsImpl(toolWrapper,level,!myLockedProfile && enabled,enabled);
  final Element element=myUninstalledInspectionsSettings.remove(shortName);
  try {
    if (element != null) {
      toolsList.readExternal(element,this,dependencies);
    }
 else     if (!myUninstalledInspectionsSettings.containsKey(InspectionElementsMerger.getMergedMarkerName(shortName))) {
      final InspectionElementsMerger merger=getMergers().get(shortName);
      if (merger != null) {
        final Element merged=merger.merge(myUninstalledInspectionsSettings);
        if (merged != null) {
          toolsList.readExternal(merged,this,dependencies);
        }
      }
    }
  }
 catch (  InvalidDataException e) {
    LOG.error("Can't read settings for " + toolWrapper,e);
  }
  myTools.put(shortName,toolsList);
}
