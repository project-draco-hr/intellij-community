{
  if (host instanceof PyStringLiteralExpression) {
    final PyDocStringOwner docStringOwner=PsiTreeUtil.getParentOfType(host,PyDocStringOwner.class);
    if (docStringOwner != null) {
      if (docStringOwner.getDocStringExpression() == host) {
        int start=0;
        int end=host.getTextLength() - 1;
        final String text=host.getText();
        final List<String> strings=StringUtil.split(text,"\n",false);
        boolean gotExample=false;
        int currentPosition=0;
        for (        String string : strings) {
          final String trimmedString=string.trim();
          if (!trimmedString.startsWith(">>>") && !trimmedString.startsWith("...") && gotExample&& start < end) {
            gotExample=false;
            injectionPlacesRegistrar.addPlace(PyDocstringLanguageDialect.getInstance(),TextRange.create(start,end - 1),null,null);
          }
          if (trimmedString.startsWith(">>>")) {
            if (!gotExample)             start=currentPosition;
            gotExample=true;
            end=getEndOffset(currentPosition,string);
          }
 else           if (trimmedString.startsWith("...") && gotExample) {
            end=getEndOffset(currentPosition,string);
          }
          currentPosition=currentPosition + string.length();
        }
        if (gotExample && start < end)         injectionPlacesRegistrar.addPlace(PyDocstringLanguageDialect.getInstance(),TextRange.create(start,end - 1),null,null);
      }
    }
  }
}
