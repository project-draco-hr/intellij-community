{
  Node commitNode=dataPack.getGraphModel().getGraph().getCommitNodeInRow(rowIndex);
  CommitData data;
  if (commitNode == null) {
    data=null;
  }
 else {
    data=dataPack.getCommitDataGetter().getCommitData(commitNode);
  }
switch (columnIndex) {
case 0:
    GraphPrintCell graphPrintCell=dataPack.getPrintCellModel().getGraphPrintCell(rowIndex);
  GraphCommitCell.Kind cellKind=getCellKind(PositionUtil.getNode(graphPrintCell));
String message="";
List<Ref> refs=Collections.emptyList();
if (data != null) {
if (cellKind == GraphCommitCell.Kind.REWORD) {
message=reworded.get(commitNode.getCommitHash());
}
 else {
message=data.getMessage();
refs=dataPack.getRefsModel().refsToCommit(data.getCommitHash());
}
}
 else {
if (rowIndex == getRowCount() - 1) {
message="load more commits";
}
}
return new GraphCommitCell(graphPrintCell,cellKind,message,refs);
case 1:
if (data == null) {
return "";
}
 else {
return data.getAuthor();
}
case 2:
if (data == null) {
return "";
}
 else {
return DateConverter.getStringOfDate(data.getTimeStamp());
}
default :
throw new IllegalArgumentException("columnIndex > 2");
}
}
