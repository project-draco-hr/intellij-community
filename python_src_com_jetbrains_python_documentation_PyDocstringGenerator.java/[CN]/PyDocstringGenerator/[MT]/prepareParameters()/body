{
  if (!myParametersPrepared && myAddedParams.isEmpty() && myRemovedParams.isEmpty()) {
    if (myDocStringOwner instanceof PyFunction) {
      PySignature signature=null;
      if (myUseTypesFromDebuggerSignature) {
        signature=PySignatureCacheManager.getInstance(myDocStringOwner.getProject()).findSignature((PyFunction)myDocStringOwner);
      }
      for (      PyParameter param : ((PyFunction)myDocStringOwner).getParameterList().getParameters()) {
        final String paramName=param.getName();
        final StructuredDocString docString=getStructuredDocString();
        if (StringUtil.isEmpty(paramName) || param.isSelf() || docString != null && docString.getParameters().contains(paramName)) {
          continue;
        }
        final String signatureType=signature != null ? signature.getArgTypeQualifiedName(paramName) : null;
        String type=null;
        if (signatureType != null) {
          type=signatureType;
        }
 else         if (PyCodeInsightSettings.getInstance().INSERT_TYPE_DOCSTUB) {
          type="";
        }
        withParam(paramName);
        if (type != null) {
          withParamTypedByName(paramName,type);
        }
      }
      final RaiseVisitor visitor=new RaiseVisitor();
      final PyStatementList statementList=((PyFunction)myDocStringOwner).getStatementList();
      statementList.accept(visitor);
      if (visitor.myHasReturn || myAlwaysGenerateReturn) {
        myAddedParams.add(new DocstringParam("",null,true));
        if (PyCodeInsightSettings.getInstance().INSERT_TYPE_DOCSTUB) {
          withReturnValue("");
        }
      }
    }
  }
  final DocStringFormat format=getDocStringFormat();
  if (format == DocStringFormat.GOOGLE || format == DocStringFormat.NUMPY) {
    final ArrayList<DocstringParam> copy=new ArrayList<DocstringParam>(myAddedParams);
    for (    final DocstringParam param : copy) {
      if (param.getType() == null) {
        final DocstringParam sameParamWithType=ContainerUtil.find(myAddedParams,new Condition<DocstringParam>(){
          @Override public boolean value(          DocstringParam other){
            return other.isReturnValue() == param.isReturnValue() && other.getName().equals(param.getName()) && other.getType() != null;
          }
        }
);
        if (sameParamWithType != null) {
          myAddedParams.remove(param);
        }
      }
    }
  }
  myParametersPrepared=true;
}
