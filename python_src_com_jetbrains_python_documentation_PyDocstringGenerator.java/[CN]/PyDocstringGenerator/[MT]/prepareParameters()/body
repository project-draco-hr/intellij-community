{
  if (!myParametersPrepared && myAddedParams.isEmpty() && myRemovedParams.isEmpty()) {
    if (myDocStringOwner instanceof PyFunction) {
      for (      PyParameter param : ((PyFunction)myDocStringOwner).getParameterList().getParameters()) {
        final String paramName=param.getName();
        final StructuredDocString docString=getStructuredDocString();
        if (StringUtil.isEmpty(paramName) || param.isSelf() || docString != null && docString.getParameters().contains(paramName)) {
          continue;
        }
        withParam(paramName);
      }
      final RaiseVisitor visitor=new RaiseVisitor();
      final PyStatementList statementList=((PyFunction)myDocStringOwner).getStatementList();
      statementList.accept(visitor);
      if (visitor.myHasReturn || myAlwaysGenerateReturn) {
        myAddedParams.add(new DocstringParam("",null,true));
        if (PyCodeInsightSettings.getInstance().INSERT_TYPE_DOCSTUB) {
          withReturnValue("");
        }
      }
    }
  }
  final Set<Pair<String,Boolean>> withoutType=Sets.newHashSet();
  final Map<Pair<String,Boolean>,String> paramTypes=Maps.newHashMap();
  for (  DocstringParam param : myAddedParams) {
    if (param.getType() == null) {
      withoutType.add(Pair.create(param.getName(),param.isReturnValue()));
    }
 else {
      paramTypes.put(Pair.create(param.getName(),param.isReturnValue()),param.getType());
    }
  }
  PySignature signature=null;
  if (myDocStringOwner instanceof PyFunction && myUseTypesFromDebuggerSignature) {
    signature=PySignatureCacheManager.getInstance(myDocStringOwner.getProject()).findSignature((PyFunction)myDocStringOwner);
  }
  final DocStringFormat format=myDocStringFormat;
  final ArrayList<DocstringParam> filtered=Lists.newArrayList();
  final Set<Pair<String,Boolean>> processed=Sets.newHashSet();
  for (  DocstringParam param : myAddedParams) {
    final Pair<String,Boolean> paramCoordinates=Pair.create(param.getName(),param.isReturnValue());
    if (processed.contains(paramCoordinates)) {
      continue;
    }
    if (param.getType() == null) {
      String type=paramTypes.get(paramCoordinates);
      if (type == null && PyCodeInsightSettings.getInstance().INSERT_TYPE_DOCSTUB) {
        if (signature != null) {
          type=StringUtil.notNullize(signature.getArgTypeQualifiedName(param.getName()));
        }
 else {
          type="";
        }
      }
      if (type != null) {
        if (format == DocStringFormat.GOOGLE || format == DocStringFormat.NUMPY) {
          filtered.add(new DocstringParam(param.getName(),type,param.isReturnValue()));
        }
 else {
          filtered.add(param);
          filtered.add(new DocstringParam(param.getName(),type,param.isReturnValue()));
        }
      }
 else {
        filtered.add(param);
      }
    }
 else     if (!withoutType.contains(paramCoordinates)) {
      filtered.add(param);
    }
    processed.add(paramCoordinates);
  }
  myAddedParams.clear();
  myAddedParams.addAll(filtered);
  myParametersPrepared=true;
}
