{
  final Set<IdeaPluginDescriptor> pluginsToEnable=new HashSet<IdeaPluginDescriptor>();
  final List<PluginNode> nodes=new ArrayList<PluginNode>();
  for (  PluginDownloader downloader : myUploadedPlugins) {
    if (!mySkippedPlugins.contains(downloader.getPluginId())) {
      final IdeaPluginDescriptor descriptor=PluginManager.getPlugin(PluginId.getId(downloader.getPluginId()));
      if (descriptor != null) {
        pluginsToEnable.add(descriptor);
      }
 else {
        final PluginNode pluginNode=PluginDownloader.createPluginNode(null,downloader);
        if (pluginNode != null) {
          nodes.add(pluginNode);
        }
      }
    }
  }
  try {
    PluginManagerMain.downloadPlugins(nodes,myAllPlugins,new Runnable(){
      @Override public void run(){
        PluginManagerMain.notifyPluginsWereInstalled(null);
      }
    }
,null);
  }
 catch (  IOException e) {
    LOG.error(e);
  }
  for (  IdeaPluginDescriptor pluginDescriptor : pluginsToEnable) {
    PluginManagerCore.enablePlugin(pluginDescriptor.getPluginId().getIdString());
  }
  super.doOKAction();
}
