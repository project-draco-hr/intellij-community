{
  in.skip(4);
  this.minor_version=in.readUnsignedShort();
  this.major_version=in.readUnsignedShort();
  pool=new ConstantPool(in);
  this.access_flags=in.readUnsignedShort();
  this_class=in.readUnsignedShort();
  thisClass=pool.getPrimitiveConstant(this_class);
  qualifiedName=thisClass.getString();
  super_class=in.readUnsignedShort();
  superClass=pool.getPrimitiveConstant(super_class);
  int length=in.readUnsignedShort();
  int[] arrInterfaces=new int[length];
  String[] arrInterfaceNames=new String[length];
  for (int i=0; i < length; i++) {
    arrInterfaces[i]=in.readUnsignedShort();
    arrInterfaceNames[i]=pool.getPrimitiveConstant(arrInterfaces[i]).getString();
  }
  this.interfaces=arrInterfaces;
  this.interfaceNames=arrInterfaceNames;
  VBStyleCollection<StructField,String> lstFields=new VBStyleCollection<StructField,String>();
  length=in.readUnsignedShort();
  for (int i=0; i < length; i++) {
    StructField field=new StructField();
    field.access_flags=in.readUnsignedShort();
    field.name_index=in.readUnsignedShort();
    field.descriptor_index=in.readUnsignedShort();
    field.initStrings(pool,this_class);
    field.setAttributes(readAttributes(in));
    lstFields.addWithKey(field,InterpreterUtil.makeUniqueKey(field.getName(),field.getDescriptor()));
  }
  this.fields=lstFields;
  length=in.readUnsignedShort();
  for (int i=0; i < length; i++) {
    StructMethod meth=new StructMethod(in,own,this);
    methods.addWithKey(meth,InterpreterUtil.makeUniqueKey(meth.getName(),meth.getDescriptor()));
  }
  this.attributes=readAttributes(in);
  if (loader != null) {
    pool=null;
  }
}
