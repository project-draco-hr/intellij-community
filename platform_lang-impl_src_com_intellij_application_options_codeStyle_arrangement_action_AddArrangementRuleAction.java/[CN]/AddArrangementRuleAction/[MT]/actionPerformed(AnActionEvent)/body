{
  ArrangementMatchingRulesControl control=ArrangementMatchingRulesControl.KEY.getData(e.getDataContext());
  if (control == null) {
    return;
  }
  control.hideEditor();
  TIntArrayList rows=control.getSelectedModelRows();
  ArrangementMatchingRulesModel model=control.getModel();
  int rowToEdit;
  if (rows.size() == 1) {
    rowToEdit=rows.get(0) + 1;
    model.insertRow(rowToEdit,new Object[]{createNewRule(control)});
  }
 else {
    rowToEdit=model.getSize();
    model.add(createNewRule(control));
  }
  showEditor(control,rowToEdit);
  control.getSelectionModel().setSelectionInterval(rowToEdit,rowToEdit);
  final Rectangle rect=control.getCellRect(rowToEdit,0,false);
  final Rectangle editorRect=control.getCellRect(rowToEdit + 1,0,false);
  if (!rect.isEmpty() && !editorRect.isEmpty()) {
    final int height=(int)(rect.getHeight() + editorRect.getHeight());
    final Rectangle visibleRect=new Rectangle((int)rect.getX(),(int)rect.getY(),(int)rect.getWidth(),height);
    control.scrollRectToVisible(visibleRect);
  }
}
