{
  if (PyNames.SUPER.equals(node.getCallee().getName())) {
    PyExpression[] arguments=node.getArguments();
    if (arguments.length == 2) {
      if (arguments[0] instanceof PyReferenceExpression && arguments[1] instanceof PyReferenceExpression) {
        PsiElement firstElement=((PyReferenceExpression)arguments[0]).followAssignmentsChain(myTypeEvalContext).getElement();
        PsiElement secondElement=((PyReferenceExpression)arguments[1]).followAssignmentsChain(myTypeEvalContext).getElement();
        if (firstElement instanceof PyClass && secondElement instanceof PyClass) {
          PyClass firstClass=(PyClass)firstElement;
          PyClass secondClass=(PyClass)secondElement;
          if (!secondClass.isSubclass(firstClass)) {
            registerProblem(node.getArgumentList(),PyBundle.message("INSP.$0.is.not.superclass.of.$1",secondClass.getName(),firstClass.getName()));
          }
        }
      }
    }
  }
}
