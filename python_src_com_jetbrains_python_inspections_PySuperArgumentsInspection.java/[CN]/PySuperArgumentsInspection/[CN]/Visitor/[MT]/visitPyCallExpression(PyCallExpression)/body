{
  final PyExpression callee=node.getCallee();
  if (callee != null) {
    if (PyNames.SUPER.equals(callee.getName())) {
      PyExpression[] arguments=node.getArguments();
      if (arguments.length == 2) {
        if (arguments[0] instanceof PyReferenceExpression && arguments[1] instanceof PyReferenceExpression) {
          PyClass firstClass=findClassOf(arguments[0]);
          PyClass secondClass=findClassOf(arguments[1]);
          if (firstClass != null && secondClass != null) {
            if (!secondClass.isSubclass(firstClass,myTypeEvalContext)) {
              registerProblem(node.getArgumentList(),PyBundle.message("INSP.$0.is.not.superclass.of.$1",secondClass.getName(),firstClass.getName()));
            }
          }
        }
      }
    }
  }
}
