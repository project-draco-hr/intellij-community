{
  createFile(myModule,"A.test123","foo fo foo");
  VirtualFile custom=new WriteCommandAction<VirtualFile>(myProject){
    @Override protected void run(    @NotNull Result<VirtualFile> result) throws Throwable {
      File dir=createTempDirectory();
      File file=new File(dir.getPath(),"A.test1234");
      file.createNewFile();
      FileUtil.writeToFile(file,"foo fo foo");
      addSourceContentToRoots(myModule,VfsUtil.findFileByIoFile(dir,true));
      result.setResult(VfsUtil.findFileByIoFile(file,true));
    }
  }
.execute().getResultObject();
  assertNull(FileDocumentManager.getInstance().getCachedDocument(custom));
  assertEquals(PlainTextFileType.INSTANCE,custom.getFileType());
  FindModel findModel=new FindModel();
  findModel.setWholeWordsOnly(true);
  findModel.setFromCursor(false);
  findModel.setGlobal(true);
  findModel.setMultipleFiles(true);
  findModel.setProjectScope(true);
  findModel.setStringToFind("fo");
  assertSize(2,findUsages(findModel));
  assertNotNull(FileDocumentManager.getInstance().getDocument(custom));
  assertEquals(FileTypes.PLAIN_TEXT,custom.getFileType());
  assertSize(2,findUsages(findModel));
}
