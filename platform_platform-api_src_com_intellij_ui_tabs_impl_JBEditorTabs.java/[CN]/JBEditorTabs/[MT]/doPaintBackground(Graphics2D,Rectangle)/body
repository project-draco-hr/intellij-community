{
  List<TabInfo> visibleInfos=getVisibleInfos();
  final boolean vertical=getTabsPosition() == JBTabsPosition.left || getTabsPosition() == JBTabsPosition.right;
  Insets insets=getTabsBorder().getEffectiveBorder();
  int minOffset=vertical ? getHeight() : getWidth();
  int maxOffset=0;
  int maxLength=0;
  for (int i=visibleInfos.size() - 1; i >= 0; i--) {
    TabInfo visibleInfo=visibleInfos.get(i);
    TabLabel tabLabel=myInfo2Label.get(visibleInfo);
    Rectangle r=tabLabel.getBounds();
    if (r.width == 0 || r.height == 0)     continue;
    minOffset=Math.min(vertical ? r.y : r.x,minOffset);
    maxOffset=Math.max(vertical ? r.y + r.height : r.x + r.width,maxOffset);
    maxLength=vertical ? r.width : r.height;
  }
  minOffset--;
  maxOffset++;
  Rectangle r2=new Rectangle(0,0,getWidth(),getHeight());
  Rectangle beforeTabs;
  Rectangle afterTabs;
  if (vertical) {
    beforeTabs=new Rectangle(insets.left,insets.top,getWidth(),minOffset - insets.top);
    afterTabs=new Rectangle(insets.left,maxOffset,getWidth(),r2.height - maxOffset - insets.top- insets.bottom);
  }
 else {
    int y=r2.y + insets.top;
    int height=maxLength - insets.top - insets.bottom;
    if (getTabsPosition() == JBTabsPosition.bottom) {
      y=r2.height - height - insets.top + getActiveTabUnderlineHeight();
    }
 else {
      y--;
      height++;
      height-=getActiveTabUnderlineHeight();
    }
    afterTabs=new Rectangle(maxOffset,y,r2.width - maxOffset - insets.left- insets.right,height);
    beforeTabs=new Rectangle(0,y,minOffset,height);
  }
  getPainter().doPaintBackground(g2d,clip,vertical,afterTabs);
  if (isSingleRow()) {
    g2d.setPaint(getEmptySpaceColor());
    g2d.fill(beforeTabs);
    g2d.fill(afterTabs);
  }
}
