{
  final List<InspectionToolWrapper> needRepeatSearchRequest=new ArrayList<InspectionToolWrapper>();
  for (  Tools tools : globalTools) {
    for (    ScopeToolState state : tools.getTools()) {
      InspectionToolWrapper toolWrapper=state.getTool();
      GlobalInspectionTool tool=(GlobalInspectionTool)toolWrapper.getTool();
      InspectionToolPresentation toolPresentation=getPresentation(toolWrapper);
      try {
        if (tool.isGraphNeeded()) {
          ((RefManagerImpl)getRefManager()).findAllDeclarations();
        }
        tool.runInspection(scope,inspectionManager,this,toolPresentation);
        if (tool.queryExternalUsagesRequests(inspectionManager,this,toolPresentation)) {
          needRepeatSearchRequest.add(toolWrapper);
        }
      }
 catch (      ProcessCanceledException e) {
        throw e;
      }
catch (      IndexNotReadyException e) {
        throw e;
      }
catch (      Throwable e) {
        LOG.error(e);
      }
    }
  }
  for (  GlobalInspectionContextExtension extension : myExtensions.values()) {
    try {
      extension.performPostRunActivities(needRepeatSearchRequest,this);
    }
 catch (    ProcessCanceledException e) {
      throw e;
    }
catch (    IndexNotReadyException e) {
      throw e;
    }
catch (    Throwable e) {
      LOG.error(e);
    }
  }
}
