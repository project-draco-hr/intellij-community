{
  ApplicationManager.getApplication().invokeLater(new Runnable(){
    @Override public void run(){
      ApplicationManager.getApplication().runWriteAction(new Runnable(){
        @Override public void run(){
          Course course=StudyTaskManager.getInstance(project).getCourse();
          if (course == null) {
            return;
          }
          for (          VirtualFile file : FileEditorManager.getInstance(project).getOpenFiles()) {
            FileEditorManager.getInstance(project).closeFile(file);
          }
          JTree tree=ProjectView.getInstance(project).getCurrentProjectViewPane().getTree();
          TreePath path=TreeUtil.getFirstNodePath(tree);
          tree.collapsePath(path);
          List<Lesson> lessons=course.getLessons();
          for (          Lesson lesson : lessons) {
            List<Task> tasks=lesson.getTaskList();
            VirtualFile lessonDir=project.getBaseDir().findChild(Lesson.LESSON_DIR + (lesson.getIndex() + 1));
            if (lessonDir == null) {
              continue;
            }
            for (            Task task : tasks) {
              VirtualFile taskDir=lessonDir.findChild(Task.TASK_DIR + (task.getIndex() + 1));
              if (taskDir == null) {
                continue;
              }
              Map<String,TaskFile> taskFiles=task.getTaskFiles();
              for (              Map.Entry<String,TaskFile> entry : taskFiles.entrySet()) {
                String name=entry.getKey();
                TaskFile taskFile=entry.getValue();
                VirtualFile file=taskDir.findChild(name);
                if (file == null) {
                  continue;
                }
                Document document=FileDocumentManager.getInstance().getDocument(file);
                if (document == null) {
                  continue;
                }
                StudyRefreshTaskFileAction.resetTaskFile(document,project,course,taskFile,name,task);
              }
            }
          }
          Lesson firstLesson=StudyUtils.getFirst(lessons);
          if (firstLesson == null) {
            return;
          }
          Task firstTask=StudyUtils.getFirst(firstLesson.getTaskList());
          VirtualFile lessonDir=project.getBaseDir().findChild(Lesson.LESSON_DIR + (firstLesson.getIndex() + 1));
          if (lessonDir != null) {
            VirtualFile taskDir=lessonDir.findChild(Task.TASK_DIR + (firstTask.getIndex() + 1));
            if (taskDir != null) {
              ProjectView.getInstance(project).select(taskDir,taskDir,true);
            }
          }
        }
      }
);
    }
  }
);
}
