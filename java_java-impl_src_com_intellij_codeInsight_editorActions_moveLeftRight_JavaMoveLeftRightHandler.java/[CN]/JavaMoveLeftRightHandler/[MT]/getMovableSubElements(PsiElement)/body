{
  if (element instanceof PsiParameterList) {
    return ((PsiParameterList)element).getParameters();
  }
 else   if (element instanceof PsiExpressionList) {
    return ((PsiExpressionList)element).getExpressions();
  }
 else   if (element instanceof PsiAnnotationParameterList) {
    return ((PsiAnnotationParameterList)element).getAttributes();
  }
 else   if (element instanceof PsiArrayInitializerExpression) {
    return ((PsiArrayInitializerExpression)element).getInitializers();
  }
 else   if (element instanceof PsiClass && ((PsiClass)element).isEnum()) {
    PsiEnumConstant[] enumConstants=PsiTreeUtil.getChildrenOfType(element,PsiEnumConstant.class);
    if (enumConstants != null) {
      return enumConstants;
    }
  }
 else   if (element instanceof PsiReferenceList) {
    return ((PsiReferenceList)element).getReferenceElements();
  }
 else   if (element instanceof PsiTypeElement) {
    final PsiTypeElement[] result=PsiTreeUtil.getChildrenOfType(element,PsiTypeElement.class);
    return result == null ? PsiElement.EMPTY_ARRAY : result;
  }
 else   if (element instanceof PsiResourceList) {
    final PsiElement[] result=PsiTreeUtil.getChildrenOfType(element,PsiResourceListElement.class);
    return result == null ? PsiElement.EMPTY_ARRAY : result;
  }
 else   if (element instanceof PsiPolyadicExpression) {
    return ((PsiPolyadicExpression)element).getOperands();
  }
  return PsiElement.EMPTY_ARRAY;
}
