{
  if (StringUtil.isEmpty(linkedProjectPath) && !isDefaultModuleCreation) {
    myUseLocalDistributionButton.setSelected(true);
    myGradleHomePathField.setEnabled(true);
    return;
  }
  final boolean isGradleDefaultWrapperFilesExist=GradleUtil.isGradleDefaultWrapperFilesExist(linkedProjectPath);
  if (isGradleDefaultWrapperFilesExist || isDefaultModuleCreation) {
    myUseWrapperButton.setEnabled(true);
    myUseWrapperButton.setSelected(true);
    myGradleHomePathField.setEnabled(false);
    myUseWrapperButton.setText(GradleBundle.message("gradle.settings.text.use.default_wrapper.configured"));
  }
 else {
    myUseWrapperButton.setEnabled(false);
    myUseLocalDistributionButton.setSelected(true);
    myGradleHomePathField.setEnabled(true);
    myUseWrapperButton.setText(GradleBundle.message("gradle.settings.text.use.default_wrapper.not_configured"));
  }
  if (getInitialSettings().getDistributionType() == null) {
    return;
  }
switch (getInitialSettings().getDistributionType()) {
case LOCAL:
    myGradleHomePathField.setEnabled(true);
  myUseLocalDistributionButton.setSelected(true);
break;
case DEFAULT_WRAPPED:
myGradleHomePathField.setEnabled(false);
myUseWrapperButton.setSelected(true);
myUseWrapperButton.setEnabled(true);
break;
case WRAPPED:
myGradleHomePathField.setEnabled(false);
myUseWrapperWithVerificationButton.setSelected(true);
break;
case BUNDLED:
myGradleHomePathField.setEnabled(false);
myUseBundledDistributionButton.setSelected(true);
break;
}
}
