{
  RefreshLogAction refreshLogAction=new RefreshLogAction();
  refreshLogAction.registerShortcutOn(this);
  DefaultActionGroup toolbarGroup=new DefaultActionGroup();
  toolbarGroup.add(ActionManager.getInstance().getAction(VcsLogActionPlaces.TOOLBAR_ACTION_GROUP));
  toolbarGroup.add(refreshLogAction);
  DefaultActionGroup mainGroup=new DefaultActionGroup();
  mainGroup.add(myFilterUi.createActionGroup());
  mainGroup.addSeparator();
  if (BekSorter.isBekEnabled()) {
    if (BekSorter.isLinearBekEnabled()) {
      mainGroup.add(new IntelliSortChooserPopupAction());
    }
 else {
      mainGroup.add(ActionManager.getInstance().getAction(VcsLogActionPlaces.VCS_LOG_INTELLI_SORT_ACTION));
    }
  }
  mainGroup.add(toolbarGroup);
  ActionToolbar toolbar=createActionsToolbar(mainGroup);
  Wrapper textFilter=new Wrapper(myFilterUi.createTextFilter());
  textFilter.setVerticalSizeReferent(toolbar.getComponent());
  textFilter.setBorder(JBUI.Borders.emptyLeft(5));
  ActionToolbar settings=createActionsToolbar(new DefaultActionGroup(ActionManager.getInstance().getAction(VcsLogActionPlaces.VCS_LOG_QUICK_SETTINGS_ACTION)));
  settings.setReservePlaceAutoPopupIcon(false);
  JPanel panel=new JPanel(new BorderLayout());
  panel.add(textFilter,BorderLayout.LINE_START);
  panel.add(toolbar.getComponent(),BorderLayout.CENTER);
  panel.add(settings.getComponent(),BorderLayout.LINE_END);
  return panel;
}
