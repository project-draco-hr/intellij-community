{
  AnAction collapseBranchesAction=new GraphAction("Collapse linear branches","Collapse linear branches",VcsLogIcons.CollapseBranches){
    @Override public void actionPerformed(    AnActionEvent e){
      myUI.hideAll();
    }
    @Override public void update(    AnActionEvent e){
      super.update(e);
      if (!myFilterUi.getFilters().isEmpty()) {
        e.getPresentation().setEnabled(false);
      }
    }
  }
;
  AnAction expandBranchesAction=new GraphAction("Expand all branches","Expand all branches",VcsLogIcons.ExpandBranches){
    @Override public void actionPerformed(    AnActionEvent e){
      myUI.showAll();
    }
    @Override public void update(    AnActionEvent e){
      super.update(e);
      if (!myFilterUi.getFilters().isEmpty()) {
        e.getPresentation().setEnabled(false);
      }
    }
  }
;
  RefreshAction refreshAction=new RefreshAction("Refresh","Refresh",AllIcons.Actions.Refresh){
    @Override public void actionPerformed(    AnActionEvent e){
      myLogDataHolder.refreshCompletely();
    }
    @Override public void update(    AnActionEvent e){
      e.getPresentation().setEnabled(true);
    }
  }
;
  AnAction showFullPatchAction=new ShowLongEdgesAction();
  AnAction showDetailsAction=new ShowDetailsAction();
  refreshAction.registerShortcutOn(this);
  DefaultActionGroup toolbarGroup=new DefaultActionGroup(collapseBranchesAction,expandBranchesAction,showFullPatchAction,refreshAction,showDetailsAction);
  toolbarGroup.add(ActionManager.getInstance().getAction(VcsLogUiImpl.TOOLBAR_ACTION_GROUP));
  DefaultActionGroup mainGroup=new DefaultActionGroup();
  mainGroup.add(myFilterUi.createActionGroup());
  mainGroup.addSeparator();
  if (BekSorter.isBekEnabled()) {
    mainGroup.add(ActionManager.getInstance().getAction(VcsLogUiImpl.VCS_LOG_INTELLI_SORT_ACTION));
  }
  mainGroup.add(toolbarGroup);
  ActionToolbar toolbar=ActionManager.getInstance().createActionToolbar(ActionPlaces.CHANGES_VIEW_TOOLBAR,mainGroup,true);
  toolbar.setTargetComponent(this);
  return toolbar.getComponent();
}
