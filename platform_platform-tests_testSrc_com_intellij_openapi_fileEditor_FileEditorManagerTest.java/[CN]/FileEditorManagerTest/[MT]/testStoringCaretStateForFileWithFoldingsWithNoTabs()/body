{
  int savedValue=UISettings.getInstance().EDITOR_TAB_PLACEMENT;
  UISettings.getInstance().EDITOR_TAB_PLACEMENT=UISettings.TABS_NONE;
  try {
    VirtualFile file=getFile("/src/Test.java");
    assertNotNull(file);
    FileEditor[] editors=myManager.openFile(file,false);
    assertEquals(1,editors.length);
    assertTrue(editors[0] instanceof TextEditor);
    Editor editor=((TextEditor)editors[0]).getEditor();
    final FoldingModel foldingModel=editor.getFoldingModel();
    assertEquals(2,foldingModel.getAllFoldRegions().length);
    foldingModel.runBatchFoldingOperation(new Runnable(){
      @Override public void run(){
        for (        FoldRegion region : foldingModel.getAllFoldRegions()) {
          region.setExpanded(false);
        }
      }
    }
);
    int textLength=editor.getDocument().getTextLength();
    editor.getCaretModel().moveToOffset(textLength);
    editor.getSelectionModel().setSelection(textLength - 1,textLength);
    myManager.openFile(getFile("/src/1.txt"),false);
    assertEquals(0,myManager.getEditors(file).length);
    editors=myManager.openFile(file,false);
    assertEquals(1,editors.length);
    assertTrue(editors[0] instanceof TextEditor);
    editor=((TextEditor)editors[0]).getEditor();
    assertEquals(textLength,editor.getCaretModel().getOffset());
    assertEquals(textLength - 1,editor.getSelectionModel().getSelectionStart());
    assertEquals(textLength,editor.getSelectionModel().getSelectionEnd());
  }
  finally {
    UISettings.getInstance().EDITOR_TAB_PLACEMENT=savedValue;
  }
}
