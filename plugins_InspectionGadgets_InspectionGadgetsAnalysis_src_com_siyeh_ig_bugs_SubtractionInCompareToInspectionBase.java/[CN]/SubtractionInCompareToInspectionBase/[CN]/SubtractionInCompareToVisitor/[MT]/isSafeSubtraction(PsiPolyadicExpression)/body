{
  final PsiType type=polyadicExpression.getType();
  if (!(PsiType.INT).equals(type)) {
    return false;
  }
  final PsiExpression[] operands=polyadicExpression.getOperands();
  if (operands.length != 2) {
    return false;
  }
  final PsiExpression lhs=operands[0];
  final PsiExpression rhs=operands[1];
  final PsiType lhsType=lhs.getType();
  final PsiType rhsType=rhs.getType();
  if (lhsType == null || rhsType == null) {
    return false;
  }
  if ((PsiType.BYTE.equals(lhsType) || PsiType.SHORT.equals(lhsType) || PsiType.CHAR.equals(lhsType)) && (PsiType.BYTE.equals(rhsType) || PsiType.SHORT.equals(rhsType) || PsiType.CHAR.equals(rhsType))) {
    return true;
  }
  return isSafeOperand(lhs) && isSafeOperand(rhs);
}
