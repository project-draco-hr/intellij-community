{
  final PsiElement element=descriptor.getPsiElement();
  final PsiNameIdentifierOwner nameOwner=element instanceof PsiNameIdentifierOwner ? (PsiNameIdentifierOwner)element : PsiTreeUtil.getParentOfType(element,PsiNameIdentifierOwner.class,true);
  if (nameOwner != null) {
    final VirtualFile virtualFile=nameOwner.getContainingFile().getVirtualFile();
    if (virtualFile != null) {
      final Editor editor=FileEditorManager.getInstance(project).openTextEditor(new OpenFileDescriptor(project,virtualFile),true);
      if (ApplicationManager.getApplication().isUnitTestMode()) {
        renameInUnitTestMode(project,nameOwner,editor);
      }
 else {
        if (nameOwner instanceof PyNamedParameter || nameOwner instanceof PyTargetExpression) {
          new VariableInplaceRenamer(nameOwner,editor).performInplaceRename();
        }
 else {
          PsiElementRenameHandler.invoke(nameOwner,project,ScopeUtil.getScopeOwner(nameOwner),editor);
        }
      }
    }
  }
}
