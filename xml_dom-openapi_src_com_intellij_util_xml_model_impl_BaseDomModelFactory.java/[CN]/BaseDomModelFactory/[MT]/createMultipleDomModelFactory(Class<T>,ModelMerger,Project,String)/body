{
  return new CachedMultipleDomModelFactory<S,T,M,C>(aClass,modelMerger,project,name){
    @Override public M getModel(    @NotNull final C context){
      return BaseDomModelFactory.this.getModel(context);
    }
    @Override protected List<M> computeAllModels(    @NotNull final S scope){
      return BaseDomModelFactory.this.computeAllModels(scope);
    }
    @Override protected M createCombinedModel(    final Set<XmlFile> configFiles,    final DomFileElement<T> mergedModel,    final M firstModel,    final S scope){
      return BaseDomModelFactory.this.createCombinedModel(configFiles,mergedModel,firstModel,scope);
    }
    @Override @NotNull public Object[] computeDependencies(    @Nullable final M model,    @Nullable final S scope){
      return BaseDomModelFactory.this.computeDependencies(model,scope);
    }
    @Override public S getModelScope(    @NotNull final XmlFile xmlFile){
      return BaseDomModelFactory.this.getModelScope(xmlFile);
    }
  }
;
}
