{
  final StubElement stub=((StubBasedPsiElementBase<?>)scope).getStub();
  if (stub == null || stub instanceof PsiClassStub && ((PsiClassStub)stub).isAnonymousInQualifiedNew()) {
    return scope.getParent();
  }
  if (scope instanceof PsiClass) {
    if (!isAnonymousOrLocal((PsiClass)scope)) {
      return isInitialClass ? defaultResolveContext : scope;
    }
    if (!isInitialClass) {
      if (((PsiClass)scope).findInnerClassByName(baseClassName,true) != null)       return scope;
    }
  }
  final StubElement parentStub=stub.getParentStub();
  PsiElement psi=parentStub.getPsi();
  if (!(psi instanceof StubBasedPsiElementBase)) {
    LOG.error(stub + " parent is " + parentStub);
    return null;
  }
  if (hasChildClassStub(parentStub,baseClassName,scope)) {
    return scope.getParent();
  }
  if (psi instanceof PsiClass || psi instanceof PsiLambdaExpression) {
    return calcBasesResolveContext(psi,baseClassName,false,defaultResolveContext);
  }
  if (psi instanceof PsiMember) {
    return calcBasesResolveContext(((PsiMember)psi).getContainingClass(),baseClassName,false,defaultResolveContext);
  }
  LOG.error(parentStub);
  return psi;
}
