{
  GrMethodCall call=PsiTreeUtil.getParentOfType(place,GrMethodCall.class);
  if (call == null) {
    GrReferenceExpressionImpl expression=(GrReferenceExpressionImpl)place;
    String expr=expression.getCanonicalText();
    GrImplicitVariableImpl myPsi=new GrImplicitVariableImpl(place.getManager(),expr,Configuration.class.getName(),place);
    processor.execute(myPsi,state);
    setNavigation(myPsi,dependencyHandlerClass,METHOD_GET_BY_NAME,1);
    return;
  }
  GrArgumentList args=call.getArgumentList();
  if (args == null) {
    return;
  }
  int argsCount=GradleResolverUtil.getGrMethodArumentsCount(args);
  argsCount++;
  if (argsCount == 1) {
    GrLightMethodBuilder builder=new GrLightMethodBuilder(place.getManager(),METHOD_GET_BY_NAME);
    PsiClassType type=PsiType.getJavaLangObject(place.getManager(),place.getResolveScope());
    builder.addParameter(new GrLightParameter("s",type,builder));
    processor.execute(builder,state);
    argsCount++;
    setNavigation(builder,dependencyHandlerClass,METHOD_GET_BY_NAME,argsCount);
  }
}
