{
  String classOldFullName=cl.qualifiedName;
  String classNewFullName=interceptor.getName(classOldFullName);
  if (classNewFullName == null) {
    classNewFullName=classOldFullName;
  }
  HashSet<String> setMethodNames=new HashSet<String>();
  for (  StructMethod md : cl.getMethods()) {
    setMethodNames.add(md.getName());
  }
  VBStyleCollection<StructMethod,String> methods=cl.getMethods();
  for (int i=0; i < methods.size(); i++) {
    StructMethod mt=methods.get(i);
    String key=methods.getKey(i);
    boolean isPrivate=mt.hasModifier(CodeConstants.ACC_PRIVATE);
    String name=mt.getName();
    if (!cl.isOwn() || mt.hasModifier(CodeConstants.ACC_NATIVE)) {
      if (!isPrivate) {
        names.put(key,name);
      }
    }
 else     if (helper.toBeRenamed(IIdentifierRenamer.ELEMENT_METHOD,classOldFullName,name,mt.getDescriptor())) {
      if (isPrivate || !names.containsKey(key)) {
        do {
          name=helper.getNextMethodname(classOldFullName,name,mt.getDescriptor());
        }
 while (setMethodNames.contains(name));
        if (!isPrivate) {
          names.put(key,name);
        }
      }
 else {
        name=names.get(key);
      }
      interceptor.addName(classOldFullName + " " + mt.getName()+ " "+ mt.getDescriptor(),classNewFullName + " " + name+ " "+ buildNewDescriptor(false,mt.getDescriptor()));
    }
  }
  if (!cl.isOwn()) {
    return;
  }
  HashSet<String> setFieldNames=new HashSet<String>();
  for (  StructField fd : cl.getFields()) {
    setFieldNames.add(fd.getName());
  }
  for (  StructField fd : cl.getFields()) {
    if (helper.toBeRenamed(IIdentifierRenamer.ELEMENT_FIELD,classOldFullName,fd.getName(),fd.getDescriptor())) {
      String newname;
      do {
        newname=helper.getNextFieldname(classOldFullName,fd.getName(),fd.getDescriptor());
      }
 while (setFieldNames.contains(newname));
      interceptor.addName(classOldFullName + " " + fd.getName()+ " "+ fd.getDescriptor(),classNewFullName + " " + newname+ " "+ buildNewDescriptor(true,fd.getDescriptor()));
    }
  }
}
