{
  List<ClassWrapperNode> lstClasses=getReversePostOrderListIterative(rootClasses);
  HashMap<String,HashMap<String,String>> classNameMaps=new HashMap<String,HashMap<String,String>>();
  for (  ClassWrapperNode node : lstClasses) {
    StructClass cl=node.getClassStruct();
    HashMap<String,String> names=new HashMap<String,String>();
    if (cl.superClass != null) {
      HashMap<String,String> mapClass=classNameMaps.get(cl.superClass.getString());
      if (mapClass != null) {
        names.putAll(mapClass);
      }
    }
    for (    String intrName : cl.getInterfaceNames()) {
      HashMap<String,String> mapInt=interfaceNameMaps.get(intrName);
      if (mapInt != null) {
        names.putAll(mapInt);
      }
 else {
        StructClass clintr=context.getClass(intrName);
        if (clintr != null) {
          names.putAll(processExternalInterface(clintr));
        }
      }
    }
    renameClassIdentifiers(cl,names);
    if (!node.getSubclasses().isEmpty()) {
      classNameMaps.put(cl.qualifiedName,names);
    }
  }
}
