{
  super(model);
  myExpandedStateHolder=expandedStateHolder;
  setRootVisible(false);
  addTreeWillExpandListener(new TreeWillExpandListener(){
    @Override public void treeWillExpand(    TreeExpansionEvent event) throws ExpandVetoException {
      if (!mySuppressCollapseTracking) {
        myExpandedStateHolder.put(getPath(event.getPath()),true);
      }
    }
    @Override public void treeWillCollapse(    TreeExpansionEvent event) throws ExpandVetoException {
      if (!mySuppressCollapseTracking) {
        myExpandedStateHolder.put(getPath(event.getPath()),false);
      }
    }
  }
);
  model.addTreeModelListener(new TreeModelAdapter(){
    @Override public void treeStructureChanged(    TreeModelEvent e){
      scheduleCollapseStateAppliance(e.getTreePath());
    }
    @Override public void treeNodesInserted(    TreeModelEvent e){
      scheduleCollapseStateAppliance(e.getTreePath());
    }
  }
);
}
