{
  if (CodeInsightSettings.getInstance().SMART_BACKSPACE != CodeInsightSettings.AUTOINDENT || !StringUtil.isWhiteSpace(c)) {
    return false;
  }
  LanguageCodeStyleSettingsProvider codeStyleSettingsProvider=LanguageCodeStyleSettingsProvider.forLanguage(file.getLanguage());
  if (codeStyleSettingsProvider != null && codeStyleSettingsProvider.isIndentBasedLanguageSemantics()) {
    return false;
  }
  Document document=editor.getDocument();
  int caretOffset=editor.getCaretModel().getOffset();
  int offset=CharArrayUtil.shiftForward(document.getCharsSequence(),caretOffset," \t");
  int beforeWhitespaceOffset=CharArrayUtil.shiftBackward(document.getCharsSequence(),offset - 1," \t") + 1;
  LogicalPosition logicalPosition=caretOffset < offset ? editor.offsetToLogicalPosition(offset) : editor.getCaretModel().getLogicalPosition();
  int lineStartOffset=document.getLineStartOffset(logicalPosition.line);
  if (lineStartOffset < beforeWhitespaceOffset) {
    if (caretWasAtLineStart && beforeWhitespaceOffset < offset) {
      document.deleteString(beforeWhitespaceOffset,offset);
      return true;
    }
    return false;
  }
  Project project=file.getProject();
  CodeStyleFacade codeStyleFacade=CodeStyleFacade.getInstance(project);
  PsiDocumentManager psiDocumentManager=PsiDocumentManager.getInstance(project);
  String indent=codeStyleFacade.getLineIndent(document,caretWasAtLineStart && psiDocumentManager.isUncommited(document) ? initialCaretOffset : lineStartOffset);
  if (indent == null) {
    return false;
  }
  int tabSize=getTabSize(codeStyleFacade,document);
  int targetColumn=getWidth(indent,tabSize);
  if (logicalPosition.column == targetColumn) {
    if (caretOffset < offset) {
      editor.getCaretModel().moveToLogicalPosition(logicalPosition);
      return true;
    }
    return false;
  }
  if (caretWasAtLineStart || logicalPosition.column > targetColumn) {
    document.replaceString(lineStartOffset,offset,indent);
    editor.getCaretModel().moveToLogicalPosition(new LogicalPosition(logicalPosition.line,targetColumn));
    return true;
  }
  if (logicalPosition.line == 0) {
    return false;
  }
  int prevLineStartOffset=document.getLineStartOffset(logicalPosition.line - 1);
  int prevLineEndOffset=document.getLineEndOffset(logicalPosition.line - 1);
  int targetOffset=CharArrayUtil.shiftBackward(document.getCharsSequence(),prevLineEndOffset - 1," \t") + 1;
  if (prevLineStartOffset < targetOffset) {
    document.deleteString(targetOffset,offset);
    editor.getCaretModel().moveToOffset(targetOffset);
  }
 else {
    document.replaceString(prevLineStartOffset,offset,indent);
    editor.getCaretModel().moveToLogicalPosition(new LogicalPosition(logicalPosition.line - 1,targetColumn));
  }
  return true;
}
