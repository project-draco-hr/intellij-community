{
  final TextConsoleBuilder consoleBuilder=TextConsoleBuilderFactory.getInstance().createBuilder(project);
  consoleBuilder.filters(ExceptionFilters.getFilters(session.getSearchScope()));
  final ConsoleView consoleView=consoleBuilder.getConsole();
  final DefaultActionGroup toolbarActions=new DefaultActionGroup();
  consoleView.allowHeavyFilters();
  final ThreadDumpPanel panel=new ThreadDumpPanel(project,consoleView,toolbarActions,threads);
  final String id=THREAD_DUMP_CONTENT_PREFIX + " #" + myCurrentThreadDumpId;
  final Content content=ui.createContent(id,panel,id,null,null);
  content.putUserData(RunnerContentUi.LIGHTWEIGHT_CONTENT_MARKER,Boolean.TRUE);
  content.setCloseable(true);
  content.setDescription("Thread Dump");
  ui.addContent(content);
  ui.selectAndFocus(content,true,true);
  myThreadDumpsCount++;
  myCurrentThreadDumpId++;
  Disposer.register(content,new Disposable(){
    @Override public void dispose(){
      myThreadDumpsCount--;
      if (myThreadDumpsCount == 0) {
        myCurrentThreadDumpId=1;
      }
    }
  }
);
  Disposer.register(content,consoleView);
  ui.selectAndFocus(content,true,false);
  if (threads.size() > 0) {
    panel.selectStackFrame(0);
  }
}
