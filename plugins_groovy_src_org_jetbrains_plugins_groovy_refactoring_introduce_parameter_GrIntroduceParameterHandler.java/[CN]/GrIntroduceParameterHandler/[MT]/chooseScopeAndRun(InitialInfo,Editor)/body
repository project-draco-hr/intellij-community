{
  final List<GrParametersOwner> scopes=findScopes(initialInfo);
  if (scopes.size() == 0) {
    throw new GrRefactoringError(GroovyRefactoringBundle.message("there.is.no.method.or.closure"));
  }
 else   if (scopes.size() == 1 || ApplicationManager.getApplication().isUnitTestMode()) {
    final GrParametersOwner owner=scopes.get(0);
    final PsiElement toSearchFor;
    if (owner instanceof GrMethod) {
      toSearchFor=SuperMethodWarningUtil.checkSuperMethod((PsiMethod)owner,RefactoringBundle.message("to.refactor"));
      if (toSearchFor == null)       return;
    }
 else {
      toSearchFor=MethodOrClosureScopeChooser.findVariableToUse(owner);
    }
    showDialogOrStartInplace(new IntroduceParameterInfoImpl(initialInfo,owner,toSearchFor),editor);
  }
 else {
    myEnclosingMethodsPopup=MethodOrClosureScopeChooser.create(scopes,editor,this,new PairFunction<GrParametersOwner,PsiElement,Object>(){
      @Override public Object fun(      GrParametersOwner owner,      PsiElement element){
        showDialogOrStartInplace(new IntroduceParameterInfoImpl(initialInfo,owner,element),editor);
        return null;
      }
    }
);
    myEnclosingMethodsPopup.showInBestPositionFor(editor);
  }
}
