{
  CommandProcessor commandProcessor=CommandProcessor.getInstance();
  assertTrue(!commandProcessor.isUndoTransparentActionInProgress() && commandProcessor.getCurrentCommand() == null);
  final Document doc=new DocumentImpl("xxx");
  mustThrow(new Runnable(){
    @Override public void run(){
      doc.insertString(1,"x");
    }
  }
);
  mustThrow(new Runnable(){
    @Override public void run(){
      doc.deleteString(1,2);
    }
  }
);
  mustThrow(new Runnable(){
    @Override public void run(){
      doc.replaceString(1,2,"s");
    }
  }
);
  WriteCommandAction.runWriteCommandAction(getProject(),new Runnable(){
    @Override public void run(){
      doc.insertString(1,"s");
    }
  }
);
  WriteCommandAction.runWriteCommandAction(getProject(),new Runnable(){
    @Override public void run(){
      doc.deleteString(1,2);
    }
  }
);
  WriteCommandAction.runWriteCommandAction(getProject(),new Runnable(){
    @Override public void run(){
      doc.replaceString(1,2,"xxx");
    }
  }
);
  WriteCommandAction.runWriteCommandAction(getProject(),new Runnable(){
    @Override public void run(){
      doc.setText("sss");
    }
  }
);
  DocumentImpl console=new DocumentImpl("xxxx",true);
  console.insertString(1,"s");
  console.deleteString(1,2);
  console.replaceString(1,2,"xxx");
  console.setText("sss");
}
