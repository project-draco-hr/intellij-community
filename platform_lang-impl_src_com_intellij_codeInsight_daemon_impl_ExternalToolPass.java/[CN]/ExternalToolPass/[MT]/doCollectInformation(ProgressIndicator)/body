{
  myDocumentChanged=false;
  final FileViewProvider viewProvider=myFile.getViewProvider();
  final Set<Language> relevantLanguages=viewProvider.getLanguages();
  for (  Language language : relevantLanguages) {
    PsiFile psiRoot=viewProvider.getPsi(language);
    if (!HighlightingLevelManager.getInstance(myProject).shouldInspect(psiRoot))     continue;
    final List<ExternalAnnotator> externalAnnotators=ExternalLanguageAnnotators.allForFile(language,psiRoot);
    if (!externalAnnotators.isEmpty()) {
      DaemonCodeAnalyzerEx daemonCodeAnalyzer=DaemonCodeAnalyzerEx.getInstanceEx(myProject);
      boolean errorFound=daemonCodeAnalyzer.getFileStatusMap().wasErrorFound(myDocument);
      if (errorFound)       return;
      for (      ExternalAnnotator externalAnnotator : externalAnnotators) {
        externalAnnotator.annotate(psiRoot,myAnnotationHolder);
        final Object collectedInfo=externalAnnotator.collectInformation(psiRoot,myEditor);
        if (collectedInfo != null) {
          myAnnotator2DataMap.put(externalAnnotator,new MyData(psiRoot,collectedInfo));
        }
      }
    }
  }
}
