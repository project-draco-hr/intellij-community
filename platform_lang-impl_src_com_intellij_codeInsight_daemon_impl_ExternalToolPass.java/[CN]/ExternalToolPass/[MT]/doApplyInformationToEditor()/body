{
  DaemonCodeAnalyzerEx daemonCodeAnalyzer=DaemonCodeAnalyzerEx.getInstanceEx(myProject);
  daemonCodeAnalyzer.getFileStatusMap().markFileUpToDate(myDocument,getId());
  final long modificationStampBefore=myDocument.getModificationStamp();
  Update update=new Update(myFile){
    @Override public void setRejected(){
      super.setRejected();
      doFinish(Collections.<HighlightInfo>emptyList());
    }
    @Override public void run(){
      if (documentChanged(modificationStampBefore) || myProject.isDisposed()) {
        return;
      }
      doAnnotate();
      ApplicationManagerEx.getApplicationEx().tryRunReadAction(new Runnable(){
        @Override public void run(){
          if (documentChanged(modificationStampBefore) || myProject.isDisposed()) {
            return;
          }
          collectHighlighters();
          ApplicationManager.getApplication().invokeLater(new Runnable(){
            @Override public void run(){
              if (documentChanged(modificationStampBefore) || myProject.isDisposed()) {
                return;
              }
              doFinish(getHighlights());
            }
          }
,ModalityState.stateForComponent(myEditor.getComponent()));
        }
      }
);
    }
  }
;
  myExternalToolPassFactory.scheduleExternalActivity(update);
}
