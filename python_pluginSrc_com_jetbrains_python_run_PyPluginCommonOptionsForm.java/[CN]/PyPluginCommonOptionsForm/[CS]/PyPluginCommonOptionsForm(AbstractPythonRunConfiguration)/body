{
  final List<Module> validModules=configuration.getValidModules();
  Module selection=validModules.size() > 0 ? validModules.get(0) : null;
  myModuleComboBox.setModel(new CollectionComboBoxModel(validModules,selection));
  myModuleComboBox.setRenderer(new ColoredListCellRenderer(){
    @Override protected void customizeCellRenderer(    JList list,    Object value,    int index,    boolean selected,    boolean hasFocus){
      if (value == null) {
        append("[none]",SimpleTextAttributes.REGULAR_ATTRIBUTES);
      }
 else {
        Module module=(Module)value;
        setIcon(module.getModuleType().getNodeIcon(false));
        append(module.getName(),SimpleTextAttributes.REGULAR_ATTRIBUTES);
      }
    }
  }
);
  myInterpreterComboBox.setRenderer(new SdkListCellRenderer("<Project Default>",myInterpreterComboBox.getRenderer()));
  myWorkingDirectoryTextField.addBrowseFolderListener("Select Working Directory","",configuration.getProject(),new FileChooserDescriptor(false,true,false,false,false,false));
  ActionListener listener=new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      updateControls();
    }
  }
;
  myUseSpecifiedSdkRadioButton.addActionListener(listener);
  myUseModuleSdkRadioButton.addActionListener(listener);
}
