{
  final List<Module> validModules=configuration.getValidModules();
  Module selection=validModules.size() > 0 ? validModules.get(0) : null;
  myModuleComboBox.setModel(new CollectionComboBoxModel(validModules,selection));
  myModuleComboBox.setRenderer(new HtmlListCellRenderer<Module>(myModuleComboBox.getRenderer()){
    @Override protected void doCustomize(    JList list,    Module module,    int index,    boolean selected,    boolean hasFocus){
      if (module == null) {
        append("[none]",SimpleTextAttributes.REGULAR_ATTRIBUTES);
      }
 else {
        setIcon(ModuleType.get(module).getNodeIcon(false));
        append(module.getName(),SimpleTextAttributes.REGULAR_ATTRIBUTES);
      }
    }
  }
);
  myInterpreterComboBox.setRenderer(new SdkListCellRenderer("<Project Default>",myInterpreterComboBox.getRenderer()));
  myWorkingDirectoryTextField.addBrowseFolderListener("Select Working Directory","",configuration.getProject(),FileChooserDescriptorFactory.createSingleFolderDescriptor());
  ActionListener listener=new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      updateControls();
    }
  }
;
  myUseSpecifiedSdkRadioButton.addActionListener(listener);
  myUseModuleSdkRadioButton.addActionListener(listener);
}
