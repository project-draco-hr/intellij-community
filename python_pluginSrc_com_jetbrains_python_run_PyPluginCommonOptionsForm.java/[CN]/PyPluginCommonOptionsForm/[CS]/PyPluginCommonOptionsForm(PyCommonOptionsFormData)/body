{
  final List<Module> validModules=data.getValidModules();
  Collections.sort(validModules,new ModulesAlphaComparator());
  Module selection=validModules.size() > 0 ? validModules.get(0) : null;
  myModuleComboBox.setModel(new CollectionComboBoxModel(validModules,selection));
  myModuleComboBox.setRenderer(new PyModuleRenderer());
  myInterpreterComboBox.setRenderer(new SdkListCellRenderer("<Project Default>"));
  myWorkingDirectoryTextField.addBrowseFolderListener("Select Working Directory","",data.getProject(),FileChooserDescriptorFactory.createSingleFolderDescriptor());
  ActionListener listener=new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      updateControls();
    }
  }
;
  myUseSpecifiedSdkRadioButton.addActionListener(listener);
  myUseModuleSdkRadioButton.addActionListener(listener);
  setAnchor(myEnvsComponent.getLabel());
  myDecorator=new HideableDecorator(myHideablePanel,"Environment",false){
    @Override protected void on(){
      super.on();
      storeState();
    }
    @Override protected void off(){
      super.off();
      storeState();
    }
    private void storeState(){
      PropertiesComponent.getInstance().setValue(EXPAND_PROPERTY_KEY,String.valueOf(isExpanded()));
    }
  }
;
  myDecorator.setOn(PropertiesComponent.getInstance().getBoolean(EXPAND_PROPERTY_KEY,true));
  myDecorator.setContentComponent(myMainPanel);
}
