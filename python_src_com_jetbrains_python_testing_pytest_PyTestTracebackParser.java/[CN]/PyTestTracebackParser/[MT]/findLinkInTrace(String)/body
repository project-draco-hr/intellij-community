{
  final Collection<PyFilesStateMachine> machines=new ArrayList<PyFilesStateMachine>();
  machines.add(PyFilesStateMachine.createFromStart());
  final char[] chars=line.toCharArray();
  for (int i=0; i < chars.length; i++) {
    final char nextChar=chars[i];
    final Iterator<PyFilesStateMachine> iterator=machines.iterator();
    while (iterator.hasNext()) {
      final PyFilesStateMachine machine=iterator.next();
switch (machine.addChar(nextChar)) {
case FAILED:
        iterator.remove();
      break;
case FINISHED:
    return createLinkInTrace(machine);
case IN_PROGRESS:
  break;
}
}
final PyFilesStateMachine newMachine=PyFilesStateMachine.createFromChar(nextChar,i);
if (newMachine != null) {
machines.add(newMachine);
}
}
for (final PyFilesStateMachine machine : machines) {
if (machine.endLine() == PyFilesStateMachineResult.FINISHED) {
return createLinkInTrace(machine);
}
}
return null;
}
