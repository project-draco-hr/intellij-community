{
  List<String> vcs=myVcs.subList(blockRange.start1,blockRange.end1);
  List<String> current=myCurrent.subList(blockRange.start2,blockRange.end2);
  ArrayList<InnerRange> result=new ArrayList<>();
  FairDiffIterable iwIterable=ByLine.compare(vcs,current,ComparisonPolicy.IGNORE_WHITESPACES,DumbProgressIndicator.INSTANCE);
  for (  Pair<com.intellij.diff.util.Range,Boolean> pair : DiffIterableUtil.iterateAll(iwIterable)) {
    com.intellij.diff.util.Range range=pair.first;
    Boolean equals=pair.second;
    byte type=equals ? Range.EQUAL : getChangeType(range.start1,range.end1,range.start2,range.end2);
    result.add(new InnerRange(range.start2 + blockRange.start2,range.end2 + blockRange.start2,type));
  }
  result.trimToSize();
  return result;
}
