{
  FairDiffIterable iwIterable=ByLine.compare(vcs,current,ComparisonPolicy.IGNORE_WHITESPACES,DumbProgressIndicator.INSTANCE);
  RangeBuilder rangeBuilder=new RangeBuilder(current,vcs,shift,vcsShift);
  for (  Pair<com.intellij.diff.util.Range,Boolean> pair : DiffIterableUtil.iterateAll(iwIterable)) {
    com.intellij.diff.util.Range range=pair.first;
    Boolean equals=pair.second;
    if (equals) {
      int count=range.end1 - range.start1;
      for (int i=0; i < count; i++) {
        int vcsIndex=range.start1 + i;
        int currentIndex=range.start2 + i;
        String vcsLine=vcs.get(vcsIndex);
        String currentLine=current.get(currentIndex);
        if (vcsLine.equals(currentLine)) {
          rangeBuilder.flushChange();
        }
 else {
          rangeBuilder.markChanged(vcsIndex,currentIndex);
        }
      }
    }
 else {
      rangeBuilder.markChanged(range.start1,range.end1,range.start2,range.end2);
    }
  }
  return rangeBuilder.finish();
}
