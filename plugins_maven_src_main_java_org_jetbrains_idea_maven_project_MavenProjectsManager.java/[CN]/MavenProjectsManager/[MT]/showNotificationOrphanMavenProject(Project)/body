{
  final NotificationSettings notificationSettings=NotificationsConfigurationImpl.getSettings(NON_MANAGED_POM_NOTIFICATION_GROUP_ID);
  if (!notificationSettings.isShouldLog() && notificationSettings.getDisplayType().equals(NotificationDisplayType.NONE)) {
    return;
  }
  File baseDir=VfsUtilCore.virtualToIoFile(project.getBaseDir());
  final File[] files=baseDir.listFiles(new FilenameFilter(){
    @Override public boolean accept(    File dir,    String name){
      return FileUtil.namesEqual("pom.xml",name);
    }
  }
);
  if (files != null && files.length != 0) {
    final VirtualFile file=VfsUtil.findFileByIoFile(files[0],true);
    if (file == null)     return;
    showBalloon(ProjectBundle.message("maven.orphan.notification.title"),ProjectBundle.message("maven.orphan.notification.msg",file.getPresentableUrl()),NON_MANAGED_POM_NOTIFICATION_GROUP,NotificationType.INFORMATION,new NotificationListener.Adapter(){
      @Override protected void hyperlinkActivated(      @NotNull Notification notification,      @NotNull HyperlinkEvent e){
        if ("#add".equals(e.getDescription())) {
          addManagedFilesOrUnignore(ContainerUtil.list(file));
          notification.expire();
        }
 else         if ("#disable".equals(e.getDescription())) {
          final int result=Messages.showYesNoDialog(myProject,"Notification will be disabled for all projects.\n\n" + "Settings | Appearance & Behavior | Notifications | " + NON_MANAGED_POM_NOTIFICATION_GROUP_ID + "\ncan be used to configure the notification.","Non-Managed Maven Project Detection","Disable Notification",CommonBundle.getCancelButtonText(),Messages.getWarningIcon());
          if (result == Messages.YES) {
            NotificationsConfigurationImpl.getInstanceImpl().changeSettings(NON_MANAGED_POM_NOTIFICATION_GROUP_ID,NotificationDisplayType.NONE,false,false);
            notification.expire();
          }
 else {
            notification.hideBalloon();
          }
        }
      }
    }
);
  }
}
