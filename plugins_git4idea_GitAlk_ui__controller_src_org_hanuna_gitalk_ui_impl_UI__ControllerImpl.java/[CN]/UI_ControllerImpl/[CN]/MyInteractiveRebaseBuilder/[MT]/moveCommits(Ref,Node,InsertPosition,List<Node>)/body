{
  if (resultRef == null) {
    DataPackUtils du=getDataPackUtils();
    if (position == InsertPosition.BELOW) {
      base=getParent(base);
    }
    Node lowestInserted=nodesToInsert.get(nodesToInsert.size() - 1);
    if (du.isAncestorOf(base,lowestInserted)) {
      this.base=base;
    }
 else {
      this.base=getParent(lowestInserted);
    }
    List<Node> inputNodes=du.getCommitsInBranchAboveBase(this.base,subjectRef);
    inputNodes.removeAll(nodesToInsert);
    inputNodes.addAll(0,nodesToInsert);
    this.fakeBranch=createFakeCommits(this.base,inputNodes);
    setResultRef(subjectRef);
  }
}
