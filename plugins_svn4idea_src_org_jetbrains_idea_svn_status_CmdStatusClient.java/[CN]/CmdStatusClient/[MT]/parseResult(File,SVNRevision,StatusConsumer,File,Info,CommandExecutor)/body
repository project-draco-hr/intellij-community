{
  String result=command.getOutput();
  if (StringUtil.isEmptyOrSpaces(result)) {
    throw new SvnBindException("Status request returned nothing for command: " + command.getCommandText());
  }
  try {
    final SvnStatusHandler[] svnHandl=new SvnStatusHandler[1];
    svnHandl[0]=createStatusHandler(revision,handler,base,infoBase,svnHandl);
    SAXParser parser=SAXParserFactory.newInstance().newSAXParser();
    parser.parse(new ByteArrayInputStream(result.trim().getBytes(CharsetToolkit.UTF8_CHARSET)),svnHandl[0]);
    if (!svnHandl[0].isAnythingReported()) {
      if (!SvnUtil.isSvnVersioned(myVcs,path)) {
        throw new SvnBindException(SVNErrorCode.WC_NOT_DIRECTORY,"Command - " + command.getCommandText() + ". Result - "+ result);
      }
 else {
        PortableStatus status=new PortableStatus();
        status.setFile(path);
        status.setPath(path.getAbsolutePath());
        status.setContentsStatus(StatusType.STATUS_NORMAL);
        status.setInfoGetter(new Getter<Info>(){
          @Override public Info get(){
            return createInfoGetter(null).convert(path);
          }
        }
);
        try {
          handler.consume(status);
        }
 catch (        SVNException e) {
          throw new SvnBindException(e);
        }
      }
    }
  }
 catch (  SvnExceptionWrapper e) {
    throw new SvnBindException(e.getCause());
  }
catch (  IOException e) {
    throw new SvnBindException(e);
  }
catch (  ParserConfigurationException e) {
    throw new SvnBindException(e);
  }
catch (  SAXException e) {
    command.logCommand();
    throw new SvnBindException(e);
  }
}
