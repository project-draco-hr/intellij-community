{
  if (hasErrorElements(info.getCall()))   return;
  if (isSpockTimesOperator(info.getCall()))   return;
  GroovyResolveResult[] results=info.multiResolve();
  GroovyResolveResult resolveResult=info.advancedResolve();
  if (isOperatorWithSimpleTypes(info.getCall(),resolveResult))   return;
  if (!checkCannotInferArgumentTypes(info))   return;
  if (resolveResult.getElement() != null) {
    checkMethodApplicability(resolveResult,true,info);
  }
 else   if (results.length > 0) {
    for (    GroovyResolveResult result : results) {
      if (!checkMethodApplicability(result,false,info))       return;
    }
    registerError(info.getElementToHighlight(),GroovyBundle.message("method.call.is.ambiguous"));
  }
}
