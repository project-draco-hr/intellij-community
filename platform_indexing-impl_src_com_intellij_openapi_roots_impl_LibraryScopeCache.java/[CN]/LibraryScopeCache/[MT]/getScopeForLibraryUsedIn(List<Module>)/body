{
  Set<Module> set=new THashSet<Module>(modulesLibraryIsUsedIn);
  Module[] uniques=set.toArray(new Module[set.size()]);
  Arrays.sort(uniques,new Comparator<Module>(){
    @Override public int compare(    Module o1,    Module o2){
      return o1.getName().compareTo(o2.getName());
    }
  }
);
  GlobalSearchScope scope=myLibraryScopes.get(uniques);
  if (scope != null) {
    return scope;
  }
  GlobalSearchScope newScope=uniques.length == 0 ? new LibrariesOnlyScope(GlobalSearchScope.allScope(myProject)) : new LibraryRuntimeClasspathScope(myProject,modulesLibraryIsUsedIn);
  return ConcurrencyUtil.cacheOrGet(myLibraryScopes,uniques,newScope);
}
