{
  final String name=result.getName();
  if (name != null && !result.isMultipleMatch() && !result.isScopeMatch()) {
    final Object value=out.get(name);
    final PsiElement match=StructuralSearchUtil.getPresentableElement(result.getMatch());
    if (value == null) {
      out.put(name,match);
    }
 else     if (value instanceof List) {
      @SuppressWarnings("unchecked") final List<PsiElement> list=(List<PsiElement>)value;
      list.add(match);
    }
 else     if (value instanceof PsiElement) {
      final List<PsiElement> list=new ArrayList<PsiElement>();
      list.add((PsiElement)value);
      list.add(match);
      out.put(name,list);
    }
 else {
      throw new AssertionError();
    }
  }
  if (result.hasSons()) {
    for (    MatchResult son : result.getAllSons()) {
      buildVariableMap(son,out);
    }
  }
  return out;
}
