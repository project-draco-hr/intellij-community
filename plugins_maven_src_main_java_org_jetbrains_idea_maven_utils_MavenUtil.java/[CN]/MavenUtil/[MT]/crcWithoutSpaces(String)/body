{
  Lexer lexer=new FilterLexer(new XmlLexer(),new FilterLexer.SetFilter(XmlTokenType.COMMENTS));
  lexer.start(xmlText);
  CRC32 crc=new CRC32();
  while (true) {
    IElementType tokenType=lexer.getTokenType();
    if (tokenType == null)     break;
    if (tokenType == XmlTokenType.XML_DATA_CHARACTERS) {
      processToken(crc,lexer);
      int spacesCrc=0;
      IElementType t;
      while (true) {
        lexer.advance();
        t=lexer.getTokenType();
        if (t == XmlTokenType.XML_DATA_CHARACTERS) {
          if (spacesCrc != 0) {
            crc.update(spacesCrc & 0xFF);
            crc.update((spacesCrc >>> 8) & 0xFF);
          }
          processToken(crc,lexer);
          spacesCrc=0;
          continue;
        }
        if (XmlTokenType.WHITESPACES.contains(t) || t == XmlTokenType.XML_REAL_WHITE_SPACE) {
          for (int i=lexer.getTokenStart(), end=lexer.getTokenEnd(); i < end; i++) {
            spacesCrc=spacesCrc * 31 + xmlText.charAt(i);
          }
          continue;
        }
        break;
      }
    }
 else     if (XmlTokenType.WHITESPACES.contains(tokenType) || tokenType == XmlTokenType.XML_REAL_WHITE_SPACE) {
      lexer.advance();
    }
 else {
      processToken(crc,lexer);
      lexer.advance();
    }
  }
  return (int)crc.getValue();
}
