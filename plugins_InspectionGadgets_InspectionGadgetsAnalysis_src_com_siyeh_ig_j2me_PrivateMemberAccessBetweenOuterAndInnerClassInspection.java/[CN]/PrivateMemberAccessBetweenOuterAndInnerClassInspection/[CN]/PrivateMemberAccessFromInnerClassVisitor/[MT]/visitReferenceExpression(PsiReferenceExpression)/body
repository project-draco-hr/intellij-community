{
  super.visitReferenceExpression(expression);
  final PsiElement referenceNameElement=expression.getReferenceNameElement();
  if (referenceNameElement == null) {
    return;
  }
  final PsiElement element=expression.resolve();
  if (!(element instanceof PsiMethod || element instanceof PsiField)) {
    return;
  }
  final PsiMember member=(PsiMember)element;
  if (!member.hasModifierProperty(PsiModifier.PRIVATE)) {
    return;
  }
  final PsiElement containingClass=getContainingContextClass(expression);
  if (containingClass == null) {
    return;
  }
  final PsiClass memberClass=ClassUtils.getContainingClass(member);
  if (memberClass == null || memberClass.equals(containingClass) || (!PsiTreeUtil.isAncestor(containingClass,memberClass,true) && !PsiTreeUtil.isAncestor(memberClass,containingClass,true))) {
    return;
  }
  registerError(referenceNameElement,memberClass,member);
}
