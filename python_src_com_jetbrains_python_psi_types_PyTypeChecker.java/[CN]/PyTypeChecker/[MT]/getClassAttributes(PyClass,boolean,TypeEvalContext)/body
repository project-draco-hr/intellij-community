{
  final Set<String> attributes=new HashSet<String>();
  for (  PyFunction function : cls.getMethods(false)) {
    attributes.add(function.getName());
  }
  for (  PyTargetExpression instanceAttribute : cls.getInstanceAttributes()) {
    attributes.add(instanceAttribute.getName());
  }
  for (  PyTargetExpression classAttribute : cls.getClassAttributes()) {
    attributes.add(classAttribute.getName());
  }
  if (inherited) {
    for (    PyClass ancestor : cls.getAncestorClasses()) {
      final PyType ancestorType=context.getType(ancestor);
      if (ancestorType instanceof PyClassType) {
        attributes.addAll(getClassTypeAttributes((PyClassType)ancestorType,false,context));
      }
    }
  }
  return attributes;
}
