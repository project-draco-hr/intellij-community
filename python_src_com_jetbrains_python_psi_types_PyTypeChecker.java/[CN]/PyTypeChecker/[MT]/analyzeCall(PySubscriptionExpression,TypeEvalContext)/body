{
  final PsiReference ref=expr.getReference(PyResolveContext.noImplicits().withTypeEvalContext(context));
  final PsiElement resolved;
  resolved=ref.resolve();
  if (resolved instanceof PyTypedElement) {
    final PyType type=context.getType((PyTypedElement)resolved);
    if (type instanceof PyFunctionType) {
      final Callable callable=((PyFunctionType)type).getCallable();
      final PyParameter[] parameters=callable.getParameterList().getParameters();
      if (parameters.length == 2) {
        final PyNamedParameter param=parameters[1].getAsNamed();
        if (param != null) {
          final Map<PyExpression,PyNamedParameter> arguments=new LinkedHashMap<PyExpression,PyNamedParameter>();
          final PyExpression arg=expr.getIndexExpression();
          if (arg != null) {
            arguments.put(arg,param);
            return new AnalyzeCallResults(callable,expr.getOperand(),arguments);
          }
        }
      }
    }
  }
  return null;
}
