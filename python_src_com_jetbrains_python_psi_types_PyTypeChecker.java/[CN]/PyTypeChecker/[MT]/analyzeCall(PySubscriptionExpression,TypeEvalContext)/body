{
  final PsiReference ref=expr.getReference(PyResolveContext.noImplicits().withTypeEvalContext(context));
  if (ref != null) {
    final PsiElement resolved=ref.resolve();
    if (resolved instanceof PyTypedElement) {
      final PyType type=((PyTypedElement)resolved).getType(context);
      if (type instanceof PyFunctionType) {
        final PyFunction function=((PyFunctionType)type).getFunction();
        final PyParameter[] parameters=function.getParameterList().getParameters();
        if (parameters.length == 2) {
          final PyNamedParameter param=parameters[1].getAsNamed();
          if (param != null) {
            final Map<PyExpression,PyNamedParameter> arguments=new LinkedHashMap<PyExpression,PyNamedParameter>();
            final PyExpression arg=expr.getIndexExpression();
            if (arg != null) {
              arguments.put(arg,param);
              return new AnalyzeCallResults(function,expr.getOperand(),arguments);
            }
          }
        }
      }
    }
  }
  return null;
}
