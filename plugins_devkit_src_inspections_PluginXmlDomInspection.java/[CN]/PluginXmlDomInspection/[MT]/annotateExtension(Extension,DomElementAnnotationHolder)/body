{
  final ExtensionPoint extensionPoint=extension.getExtensionPoint();
  if (extensionPoint == null)   return;
  final GenericAttributeValue<PsiClass> interfaceAttribute=extensionPoint.getInterface();
  if (DomUtil.hasXml(interfaceAttribute)) {
    final PsiClass value=interfaceAttribute.getValue();
    if (value != null && value.isDeprecated()) {
      holder.createProblem(extension,ProblemHighlightType.LIKE_DEPRECATED,"Deprecated EP '" + extensionPoint.getEffectiveQualifiedName() + "'",null);
      return;
    }
  }
  if (ExtensionPoints.ERROR_HANDLER.equals(extensionPoint.getEffectiveQualifiedName()) && extension.exists()) {
    String implementation=extension.getXmlTag().getAttributeValue("implementation");
    if (ITNReporter.class.getName().equals(implementation)) {
      IdeaPlugin plugin=extension.getParentOfType(IdeaPlugin.class,true);
      if (plugin != null) {
        Vendor vendor=ContainerUtil.getFirstItem(plugin.getVendors());
        if (vendor != null && PluginManagerMain.isDevelopedByJetBrains(vendor.getValue())) {
          LocalQuickFix fix=new RemoveDomElementQuickFix(extension);
          holder.createProblem(extension,ProblemHighlightType.LIKE_UNUSED_SYMBOL,"Exceptions from plugins developed by JetBrains are reported via ITNReporter automatically," + " there is no need to specify it explicitly",null,fix).highlightWholeElement();
        }
      }
    }
  }
  final List<? extends DomAttributeChildDescription> descriptions=extension.getGenericInfo().getAttributeChildrenDescriptions();
  for (  DomAttributeChildDescription attributeDescription : descriptions) {
    final GenericAttributeValue attributeValue=attributeDescription.getDomAttributeValue(extension);
    if (attributeValue == null || !DomUtil.hasXml(attributeValue))     continue;
    if ("icon".equals(attributeDescription.getXmlElementName())) {
      annotateResolveProblems(holder,attributeValue);
    }
    final PsiElement declaration=attributeDescription.getDeclaration(extension.getManager().getProject());
    if (declaration instanceof PsiField) {
      PsiField psiField=(PsiField)declaration;
      if (psiField.isDeprecated()) {
        holder.createProblem(attributeValue,ProblemHighlightType.LIKE_DEPRECATED,"Deprecated attribute '" + attributeDescription.getName() + "'",null).highlightWholeElement();
      }
    }
  }
}
