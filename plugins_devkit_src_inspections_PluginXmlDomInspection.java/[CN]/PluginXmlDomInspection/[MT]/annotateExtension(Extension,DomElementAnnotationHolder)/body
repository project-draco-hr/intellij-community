{
  final ExtensionPoint extensionPoint=extension.getExtensionPoint();
  if (extensionPoint == null)   return;
  final GenericAttributeValue<PsiClass> interfaceAttribute=extensionPoint.getInterface();
  if (DomUtil.hasXml(interfaceAttribute)) {
    final PsiClass value=interfaceAttribute.getValue();
    if (value != null && value.isDeprecated()) {
      holder.createProblem(extension,ProblemHighlightType.LIKE_DEPRECATED,"Deprecated EP '" + extensionPoint.getEffectiveQualifiedName() + "'",null);
      return;
    }
  }
  final List<? extends DomAttributeChildDescription> descriptions=extension.getGenericInfo().getAttributeChildrenDescriptions();
  for (  DomAttributeChildDescription attributeDescription : descriptions) {
    final GenericAttributeValue attributeValue=attributeDescription.getDomAttributeValue(extension);
    if (attributeValue == null || !DomUtil.hasXml(attributeValue))     continue;
    final PsiElement declaration=attributeDescription.getDeclaration(extension.getManager().getProject());
    if (declaration instanceof PsiField) {
      PsiField psiField=(PsiField)declaration;
      if (psiField.isDeprecated()) {
        holder.createProblem(attributeValue,ProblemHighlightType.LIKE_DEPRECATED,"Deprecated attribute '" + attributeDescription.getName() + "'",null).highlightWholeElement();
      }
    }
  }
}
