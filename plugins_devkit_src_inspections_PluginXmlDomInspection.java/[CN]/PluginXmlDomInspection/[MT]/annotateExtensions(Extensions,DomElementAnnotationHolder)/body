{
  final GenericAttributeValue<IdeaPlugin> xmlnsAttribute=extensions.getXmlns();
  if (DomUtil.hasXml(xmlnsAttribute)) {
    holder.createProblem(xmlnsAttribute,ProblemHighlightType.LIKE_DEPRECATED,"Use defaultExtensionNs instead",null).highlightWholeElement();
    return;
  }
  if (!DomUtil.hasXml(extensions.getDefaultExtensionNs())) {
    holder.createProblem(extensions,ProblemHighlightType.GENERIC_ERROR_OR_WARNING,"Specify defaultExtensionNs=\"" + Extensions.DEFAULT_PREFIX + "\" explicitly",null,new AddDomElementQuickFix<GenericAttributeValue>(extensions.getDefaultExtensionNs()){
      @Override public void applyFix(      @NotNull Project project,      @NotNull ProblemDescriptor descriptor){
        super.applyFix(project,descriptor);
        myElement.setStringValue(Extensions.DEFAULT_PREFIX);
      }
    }
);
  }
}
