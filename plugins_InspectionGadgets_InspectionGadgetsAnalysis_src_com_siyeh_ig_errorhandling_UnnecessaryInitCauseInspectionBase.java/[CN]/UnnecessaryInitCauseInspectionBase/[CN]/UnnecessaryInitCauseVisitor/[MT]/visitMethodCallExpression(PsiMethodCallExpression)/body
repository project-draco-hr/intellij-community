{
  super.visitMethodCallExpression(expression);
  final PsiReferenceExpression methodExpression=expression.getMethodExpression();
  final String name=methodExpression.getReferenceName();
  if (!"initCause".equals(name)) {
    return;
  }
  final PsiExpressionList argumentList=expression.getArgumentList();
  final PsiExpression argument=ExpressionUtils.getOnlyExpressionInList(argumentList);
  if (!TypeUtils.expressionHasTypeOrSubtype(argument,CommonClassNames.JAVA_LANG_THROWABLE)) {
    return;
  }
  final PsiMethod method=expression.resolveMethod();
  if (method == null) {
    return;
  }
  final PsiClass aClass=method.getContainingClass();
  if (aClass == null || !CommonClassNames.JAVA_LANG_THROWABLE.equals(aClass.getQualifiedName())) {
    return;
  }
  final PsiExpression qualifier=ParenthesesUtils.stripParentheses(methodExpression.getQualifierExpression());
  final PsiNewExpression newExpression=findNewExpression(qualifier);
  if (!isCauseConstructorAvailable(newExpression)) {
    return;
  }
  registerMethodCallError(expression);
}
