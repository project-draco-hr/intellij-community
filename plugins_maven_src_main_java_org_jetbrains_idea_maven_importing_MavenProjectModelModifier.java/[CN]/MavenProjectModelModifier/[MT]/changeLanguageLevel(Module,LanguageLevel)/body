{
  if (!myProjectsManager.isMavenizedModule(module))   return null;
  MavenProject mavenProject=myProjectsManager.findProject(module);
  if (mavenProject == null)   return null;
  final MavenDomProjectModel model=MavenDomUtil.getMavenDomProjectModel(myProject,mavenProject.getFile());
  if (model == null)   return null;
  new WriteCommandAction(myProject,"Add Maven Dependency",DomUtil.getFile(model)){
    @Override protected void run(    @NotNull Result result) throws Throwable {
      MavenDomConfiguration configuration=getCompilerPlugin(model).getConfiguration();
      XmlTag tag=configuration.ensureTagExists();
      setChildTagValue(tag,"source",level.getCompilerComplianceOption());
      setChildTagValue(tag,"target",level.getCompilerComplianceOption());
      Document document=PsiDocumentManager.getInstance(myProject).getDocument(DomUtil.getFile(model));
      if (document != null) {
        FileDocumentManager.getInstance().saveDocument(document);
      }
    }
  }
.execute();
  return myProjectsManager.forceUpdateProjects(Collections.singleton(mavenProject));
}
