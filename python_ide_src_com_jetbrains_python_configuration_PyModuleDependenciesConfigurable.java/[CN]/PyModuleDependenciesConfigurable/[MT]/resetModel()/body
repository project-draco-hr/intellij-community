{
  List<Module> possibleDependencies=new ArrayList<Module>();
  myInitialDependencies=Arrays.asList(ModuleRootManager.getInstance(myModule).getDependencies());
  possibleDependencies.addAll(myInitialDependencies);
  for (  Module otherModule : ModuleManager.getInstance(myModule.getProject()).getModules()) {
    if (!possibleDependencies.contains(otherModule) && otherModule != myModule) {
      possibleDependencies.add(otherModule);
    }
  }
  myDependenciesList.setItems(possibleDependencies,new Function<Module,String>(){
    @Override public String fun(    Module module){
      return module.getName();
    }
  }
);
  myDependenciesList.setBorder(null);
  for (  Module dependency : myInitialDependencies) {
    myDependenciesList.setItemSelected(dependency,true);
  }
}
