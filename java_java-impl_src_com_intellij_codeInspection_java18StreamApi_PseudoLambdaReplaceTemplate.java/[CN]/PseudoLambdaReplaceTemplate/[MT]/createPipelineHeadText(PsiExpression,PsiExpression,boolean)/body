{
  if (collectionExpression instanceof PsiNewExpression) {
    final PsiDiamondType.DiamondInferenceResult diamondResolveResult=PsiDiamondTypeImpl.resolveInferredTypesNoCheck((PsiNewExpression)collectionExpression,collectionExpression);
    if (!diamondResolveResult.getInferredTypes().isEmpty()) {
      collectionExpression=PsiDiamondTypeUtil.expandTopLevelDiamondsInside(collectionExpression);
    }
  }
 else   if (collectionExpression instanceof PsiMethodCallExpression) {
    final PsiType currentType=collectionExpression.getType();
    if (currentType == null) {
      return null;
    }
    final PsiExpression copiedExpression=(PsiExpression)collectionExpression.copy();
    final PsiType newType=copiedExpression.getType();
    if (!currentType.equals(newType)) {
      collectionExpression=AddTypeArgumentsFix.addTypeArguments(copiedExpression,currentType);
    }
  }
  final PsiType type=collectionExpression.getType();
  if (type instanceof PsiClassType) {
    final PsiClass resolved=((PsiClassType)type).resolve();
    LOG.assertTrue(resolved != null && resolved.getQualifiedName() != null,type);
    return collectionExpression.getText() + ".stream()";
  }
 else   if (type instanceof PsiArrayType) {
    return CommonClassNames.JAVA_UTIL_ARRAYS + ".stream(" + collectionExpression.getText()+ ")";
  }
 else   if (force) {
    return collectionExpression.getText() + ".stream()";
  }
  throw new AssertionError("type: " + type + " is unexpected for expression: "+ collectionExpression.getText());
}
