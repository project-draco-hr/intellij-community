{
  int lineHeight=editor.getLineHeight();
  int startLine=clip.y / lineHeight;
  int endLine=Math.min(((clip.y + clip.height) / lineHeight) + 1,editor.getVisibleLineCount());
  if (startLine >= endLine) {
    return;
  }
  gutterContentProvider.beforeUiComponentUpdate(editor);
  g.setColor(JBColor.BLUE);
  g.setFont(editor.getColorsScheme().getFont(EditorFontType.PLAIN));
  int y=((startLine + 1) * lineHeight) - editor.getDescent();
  FontMetrics fontMetrics=editor.getFontMetrics(Font.PLAIN);
  for (int i=startLine; i < endLine; i++) {
    String text=gutterContentProvider.getText(editor.visualToLogicalPosition(new VisualPosition(i,0)).line,editor);
    if (text != null) {
      g.drawString(text,maxAnnotationWidth - RIGHT_INSET - fontMetrics.stringWidth(text),y);
    }
    y+=lineHeight;
  }
}
