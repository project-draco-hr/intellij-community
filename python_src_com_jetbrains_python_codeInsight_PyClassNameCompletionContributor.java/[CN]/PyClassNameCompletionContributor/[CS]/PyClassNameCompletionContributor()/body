{
  extend(CompletionType.CLASS_NAME,psiElement(),new CompletionProvider<CompletionParameters>(false){
    @Override protected void addCompletions(    @NotNull final CompletionParameters parameters,    ProcessingContext context,    @NotNull final CompletionResultSet resultSet){
      final Project project=parameters.getOriginalFile().getProject();
      final GlobalSearchScope scope=ProjectScope.getAllScope(project);
      final Collection<String> allKeys=ApplicationManager.getApplication().runReadAction(new Computable<Collection<String>>(){
        public Collection<String> compute(){
          return StubIndex.getInstance().getAllKeys(PyClassNameIndex.KEY,project);
        }
      }
);
      for (      final String className : allKeys) {
        if (resultSet.getPrefixMatcher().prefixMatches(className)) {
          ApplicationManager.getApplication().runReadAction(new Runnable(){
            public void run(){
              final Collection<PyClass> classes=PyClassNameIndex.find(className,project,scope);
              for (              PyClass aClass : classes) {
                resultSet.addElement(LookupElementBuilder.create(aClass).setIcon(aClass.getIcon(Iconable.ICON_FLAG_CLOSED)).setTailText(" " + aClass.getPresentation().getLocationString(),true).setInsertHandler(INSERT_HANDLER));
              }
            }
          }
);
        }
      }
    }
  }
);
}
