{
  final PsiNamePatternCondition nameCondition=ContainerUtil.findInstance(methodPattern.getCondition().getConditions(),PsiNamePatternCondition.class);
  return with(new PatternCondition<T>("methodCallParameter"){
    @Override public boolean accepts(    @NotNull final T literal,    final ProcessingContext context){
      final PsiElement parent=literal.getParent();
      return parent instanceof PsiExpressionList && checkCall(context,(PsiExpressionList)parent,methodPattern,nameCondition);
    }
  }
);
}
