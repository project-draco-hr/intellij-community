{
  return with(new PatternCondition<T>("methodCallParameter"){
    @Override public boolean accepts(    @NotNull final T literal,    final ProcessingContext context){
      final PsiElement parent=literal.getParent();
      if (parent instanceof PsiExpressionList) {
        final PsiExpressionList psiExpressionList=(PsiExpressionList)parent;
        final PsiElement element=psiExpressionList.getParent();
        if (element instanceof PsiMethodCallExpression) {
          final JavaResolveResult[] results=((PsiMethodCallExpression)element).getMethodExpression().multiResolve(false);
          for (          JavaResolveResult result : results) {
            final PsiElement psiElement=result.getElement();
            if (methodPattern.accepts(psiElement,context)) {
              return true;
            }
          }
        }
      }
      return false;
    }
  }
);
}
