{
  final PsiNamePatternCondition nameCondition=ContainerUtil.findInstance(methodPattern.getCondition().getConditions(),PsiNamePatternCondition.class);
  return with(new PatternCondition<T>("methodCallParameter"){
    @Override public boolean accepts(    @NotNull final T literal,    final ProcessingContext context){
      final PsiElement parent=literal.getParent();
      if (parent instanceof PsiExpressionList) {
        final PsiExpressionList psiExpressionList=(PsiExpressionList)parent;
        final PsiExpression[] psiExpressions=psiExpressionList.getExpressions();
        if (!(psiExpressions.length > index && psiExpressions[index] == literal))         return false;
        return checkCall(context,psiExpressionList,methodPattern,nameCondition);
      }
      return false;
    }
  }
);
}
