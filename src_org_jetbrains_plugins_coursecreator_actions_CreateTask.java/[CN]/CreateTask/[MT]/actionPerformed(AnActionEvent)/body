{
  final IdeView view=e.getData(LangDataKeys.IDE_VIEW);
  final Project project=e.getData(CommonDataKeys.PROJECT);
  if (view == null || project == null) {
    return;
  }
  final PsiDirectory directory=DirectoryChooserUtil.getOrChooseDirectory(view);
  if (directory == null)   return;
  final CCProjectService service=CCProjectService.getInstance(project);
  final Course course=service.getCourse();
  final Lesson lesson=course.getLesson(directory.getName());
  final int size=lesson.getTasklist().size();
  final String taskName=Messages.showInputDialog("Name:","Task Name",null,"task" + (size + 1),null);
  if (taskName == null)   return;
  ApplicationManager.getApplication().runWriteAction(new Runnable(){
    @Override public void run(){
      final PsiDirectory taskDirectory=DirectoryUtil.createSubdirectories("task" + (size + 1),directory,"\\/");
      if (taskDirectory != null) {
        final FileTemplate template=FileTemplateManager.getInstance().getInternalTemplate("task.html");
        final FileTemplate testsTemplate=FileTemplateManager.getInstance().getInternalTemplate("tests");
        final FileTemplate taskTemplate=FileTemplateManager.getInstance().getInternalTemplate("task.py");
        try {
          final PsiElement taskFile=FileTemplateUtil.createFromTemplate(template,"task.html",null,taskDirectory);
          final PsiElement testsFile=FileTemplateUtil.createFromTemplate(testsTemplate,"tests.py",null,taskDirectory);
          final PsiElement taskPyFile=FileTemplateUtil.createFromTemplate(taskTemplate,"file1" + ".py",null,taskDirectory);
          final Task task=new Task(taskName);
          task.addTaskFile(taskPyFile.getContainingFile().getName(),size + 1);
          task.setIndex(size + 1);
          lesson.addTask(task,taskDirectory);
          ApplicationManager.getApplication().invokeLater(new Runnable(){
            @Override public void run(){
              EditorHelper.openInEditor(testsFile,false);
              EditorHelper.openInEditor(taskPyFile,false);
              view.selectElement(taskFile);
            }
          }
);
        }
 catch (        Exception ignored) {
        }
      }
    }
  }
);
}
