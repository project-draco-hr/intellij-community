{
  super.visitPyListCompExpression(node);
  boolean hasProblem=false;
  StringBuilder message=new StringBuilder(myCommonMessage);
  for (int i=0; i != myVersionsToProcess.size(); ++i) {
    LanguageLevel languageLevel=myVersionsToProcess.get(i);
    boolean tmp=UnsupportedFeaturesUtil.visitPyListCompExpression(node,languageLevel);
    if (tmp) {
      if (hasProblem)       message.append(", ");
      message.append(languageLevel);
      hasProblem=true;
    }
  }
  message.append(" do not support this syntax in list comprehensions.");
  for (  ComprhForComponent forComponent : node.getForComponents()) {
    final PyExpression iteratedList=forComponent.getIteratedList();
    if (hasProblem)     registerProblem(iteratedList,message.toString(),new ReplaceListComprehensionsQuickFix());
  }
}
