{
  super.visitPyElement(node);
  if (shouldBeCompatibleWithPy3()) {
    final TypeEvalContext context=TypeEvalContext.codeAnalysis(node.getProject(),node.getContainingFile());
    final String nodeText=node.getText();
    if (nodeText.endsWith("iteritems") || nodeText.endsWith("iterkeys") || nodeText.endsWith("itervalues")) {
      final PyExpression qualifier=node.getQualifier();
      if (qualifier != null) {
        final PyType type=context.getType(qualifier);
        final PyClassType dictType=PyBuiltinCache.getInstance(node).getDictType();
        if (PyTypeChecker.match(dictType,type,context)) {
          registerProblem(node,"dict.iterkeys(), dict.iteritems() and dict.itervalues() methods are not available in py3");
        }
      }
    }
    if (PyNames.BASESTRING.equals(nodeText)) {
      PsiElement res=node.getReference().resolve();
      if (res != null) {
        ProjectFileIndex ind=ProjectRootManager.getInstance(node.getProject()).getFileIndex();
        PsiFile file=res.getContainingFile();
        if (file != null) {
          final VirtualFile virtualFile=file.getVirtualFile();
          if (virtualFile != null && ind.isInLibraryClasses(virtualFile)) {
            registerProblem(node,"basestring type is not available in py3");
          }
        }
 else {
          registerProblem(node,"basestring type is not available in py3");
        }
      }
    }
  }
}
