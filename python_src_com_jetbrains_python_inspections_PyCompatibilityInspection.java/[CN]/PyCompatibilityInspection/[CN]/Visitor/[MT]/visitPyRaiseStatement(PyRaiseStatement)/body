{
  super.visitPyRaiseStatement(node);
  boolean hasProblem=false;
  StringBuilder message=new StringBuilder(myCommonMessage);
  for (int i=0; i != myVersionsToProcess.size(); ++i) {
    LanguageLevel languageLevel=myVersionsToProcess.get(i);
    boolean hasNoArgs=UnsupportedFeaturesUtil.raiseHasNoArgs(node,languageLevel);
    if (hasNoArgs) {
      message.append(languageLevel).append(" ");
      hasProblem=true;
    }
  }
  message.append(" do not support this syntax. Raise with no arguments can only be used in an except block");
  if (hasProblem)   registerProblem(node,message.toString());
  hasProblem=false;
  message=new StringBuilder(myCommonMessage);
  for (int i=0; i != myVersionsToProcess.size(); ++i) {
    LanguageLevel languageLevel=myVersionsToProcess.get(i);
    boolean hasTwoArgs=UnsupportedFeaturesUtil.raiseHasMoreThenOneArg(node,languageLevel);
    if (hasTwoArgs) {
      if (hasProblem)       message.append(", ");
      message.append(languageLevel);
      hasProblem=true;
    }
  }
  message.append(" do not support this syntax.");
  if (hasProblem)   registerProblem(node,message.toString(),new ReplaceRaiseStatementQuickFix());
}
