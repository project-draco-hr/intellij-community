{
  super.visitPyNumericLiteralExpression(node);
  boolean hasProblem=false;
  StringBuilder message=new StringBuilder(myCommonMessage);
  for (int i=0; i != myVersionsToProcess.size(); ++i) {
    LanguageLevel languageLevel=myVersionsToProcess.get(i);
    if (languageLevel.isPy3K()) {
      if (!node.isIntegerLiteral()) {
        continue;
      }
      final String text=node.getText();
      if (text.endsWith("l") || text.endsWith("L")) {
        message.append(languageLevel.toString()).append(" ");
        hasProblem=true;
      }
      if (text.length() > 1 && text.charAt(0) == '0') {
        final char c=Character.toLowerCase(text.charAt(1));
        if (c != 'o' && c != 'b' && c != 'x') {
          boolean isNull=true;
          for (          char a : text.toCharArray()) {
            if (a != '0') {
              isNull=false;
              break;
            }
          }
          if (!isNull) {
            if (hasProblem)             message.append(", ");
            message.append(languageLevel.toString());
            hasProblem=true;
          }
        }
      }
    }
  }
  message.append(" do not support a trailing \'l\' or \'L\'.");
  if (hasProblem)   registerProblem(node,message.toString(),new ReplaceOctalNumericLiteralQuickFix());
}
