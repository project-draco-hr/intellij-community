{
  final List<PyElement> problemElements=new ArrayList<PyElement>();
  if (node.getParent() instanceof PyClass) {
    for (    final PyExpression expression : node.getArguments()) {
      if (expression instanceof PyKeywordArgument)       problemElements.add(expression);
    }
  }
  final String errorMessage="This syntax available only since py3";
  final boolean isPy3=LanguageLevel.forElement(node).isPy3K();
  if (shouldBeCompatibleWithPy2() || !isPy3) {
    for (    final PyElement problemElement : problemElements)     myHolder.registerProblem(problemElement,errorMessage,isPy3 ? ProblemHighlightType.GENERIC_ERROR_OR_WARNING : ProblemHighlightType.GENERIC_ERROR);
  }
}
