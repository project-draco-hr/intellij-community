{
  super.visitPyBinaryExpression(node);
  boolean hasProblem=false;
  if (node.isOperator("<>")) {
    StringBuilder message=new StringBuilder(myCommonMessage);
    for (int i=0; i != myVersionsToProcess.size(); ++i) {
      LanguageLevel level=myVersionsToProcess.get(i);
      if (level.isPy3K()) {
        if (hasProblem)         message.append(", ");
        message.append(level.toString());
        hasProblem=true;
      }
    }
    message.append(" do not support <>, use != instead.");
    if (hasProblem)     registerProblem(node,message.toString(),new ReplaceNotEqOperatorQuickFix());
  }
}
