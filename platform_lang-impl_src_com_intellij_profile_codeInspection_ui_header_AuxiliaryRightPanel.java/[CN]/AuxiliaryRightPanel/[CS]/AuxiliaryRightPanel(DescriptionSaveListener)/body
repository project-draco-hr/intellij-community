{
  myCardPanel=new JPanel();
  myDescriptionLabel=new DescriptionLabel();
  myErrorLabel=new JLabel();
  myErrorLabel.setBackground(UIUtil.isUnderDarcula() ? JBColor.PINK.darker() : JBColor.PINK);
  myErrorLabel.setForeground(JBColor.BLACK);
  myErrorLabel.setOpaque(true);
  myValidatedTextField=new ValidatedTextField(new SaveInputComponentValidator(){
    @Override public void doSave(    @NotNull String text){
      descriptionListener.saveDescription(text.trim());
    }
    @Override public boolean checkValid(    @NotNull String text){
      return true;
    }
    @Override public void cancel(){
      descriptionListener.cancel();
    }
  }
);
  myLayout=new CardLayout();
  myCardPanel.setLayout(myLayout);
  myCardPanel.setBorder(BorderFactory.createEmptyBorder(0,0,6,0));
  new ClickListener(){
    @Override public boolean onClick(    @NotNull MouseEvent event,    int clickCount){
      if (clickCount != 2) {
        return false;
      }
      editDescription(myDescriptionLabel.getText());
      return true;
    }
  }
.installOn(myDescriptionLabel);
  myCardPanel.add(myDescriptionLabel,SHOW_DESCRIPTION_CARD);
  myCardPanel.add(myErrorLabel,ERROR_CARD);
  myCardPanel.add(myValidatedTextField,EDIT_DESCRIPTION_CARD);
  showDescription(null);
  setLayout(new BorderLayout());
  add(myValidatedTextField.getHintLabel(),BorderLayout.NORTH);
  add(myCardPanel,BorderLayout.CENTER);
}
