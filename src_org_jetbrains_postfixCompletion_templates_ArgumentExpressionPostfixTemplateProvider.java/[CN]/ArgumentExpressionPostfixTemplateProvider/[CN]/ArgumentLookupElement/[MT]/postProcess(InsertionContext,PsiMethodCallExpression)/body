{
  SmartPointerManager pointerManager=SmartPointerManager.getInstance(context.getProject());
  final SmartPsiElementPointer<PsiMethodCallExpression> pointer=pointerManager.createSmartPsiElementPointer(expression);
  final Runnable runnable=new Runnable(){
    @Override public void run(){
      PsiMethodCallExpression callExpression=pointer.getElement();
      if (callExpression == null)       return;
      TemplateBuilderImpl builder=new TemplateBuilderImpl(callExpression);
      builder.replaceElement(callExpression.getMethodExpression(),new TextExpression("method"));
      PsiExpressionList argumentList=callExpression.getArgumentList();
      builder.setEndVariableAfter(argumentList.getExpressions()[0]);
      Template template=builder.buildInlineTemplate();
      Editor editor=context.getEditor();
      editor.getCaretModel().moveToOffset(callExpression.getTextRange().getStartOffset());
      TemplateManager manager=TemplateManager.getInstance(context.getProject());
      manager.startTemplate(editor,template);
    }
  }
;
  context.setLaterRunnable(new Runnable(){
    @Override public void run(){
      ApplicationManager.getApplication().runWriteAction(new Runnable(){
        @Override public void run(){
          CommandProcessor.getInstance().runUndoTransparentAction(runnable);
        }
      }
);
    }
  }
);
}
