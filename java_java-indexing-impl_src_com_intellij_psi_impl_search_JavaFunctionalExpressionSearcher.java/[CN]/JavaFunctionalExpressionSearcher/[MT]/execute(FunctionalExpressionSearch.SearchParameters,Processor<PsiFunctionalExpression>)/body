{
  final PsiClass aClass=queryParameters.getElementToSearch();
  final Set<Module> highLevelModules=new HashSet<Module>();
  if (ApplicationManager.getApplication().runReadAction(new Computable<Boolean>(){
    @Override public Boolean compute(){
      if (LambdaUtil.isFunctionalClass(aClass)) {
        final Project project=aClass.getProject();
        final boolean projectLevelIsHigh=PsiUtil.getLanguageLevel(project).isAtLeast(LanguageLevel.JDK_1_8);
        for (        Module module : ModuleManager.getInstance(project).getModules()) {
          final LanguageLevelModuleExtension extension=ModuleRootManager.getInstance(module).getModuleExtension(LanguageLevelModuleExtension.class);
          if (extension != null) {
            final LanguageLevel level=extension.getLanguageLevel();
            if (level == null && projectLevelIsHigh || level != null && level.isAtLeast(LanguageLevel.JDK_1_8)) {
              highLevelModules.add(module);
            }
          }
        }
        return highLevelModules.isEmpty();
      }
      return true;
    }
  }
)) {
    return true;
  }
  return collectFunctionalExpressions(aClass,ApplicationManager.getApplication().runReadAction(new Computable<SearchScope>(){
    @Override public SearchScope compute(){
      return queryParameters.getEffectiveSearchScope();
    }
  }
),consumer,highLevelModules);
}
