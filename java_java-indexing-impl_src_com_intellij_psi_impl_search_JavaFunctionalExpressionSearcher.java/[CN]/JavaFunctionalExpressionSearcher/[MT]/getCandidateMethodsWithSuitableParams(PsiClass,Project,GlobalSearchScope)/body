{
  return ApplicationManager.getApplication().runReadAction(new Computable<Collection<PsiMethod>>(){
    @Override public Collection<PsiMethod> compute(){
      final String functionalInterfaceName=aClass.getName();
      JavaMethodParameterTypesIndex parameterTypesIndex=JavaMethodParameterTypesIndex.getInstance();
      LinkedHashSet<PsiMethod> methods=new LinkedHashSet<PsiMethod>(parameterTypesIndex.get(functionalInterfaceName,project,useScope));
      methods.addAll(parameterTypesIndex.get(JavaMethodElementType.TYPE_PARAMETER_PSEUDO_NAME,project,GlobalSearchScope.allScope(project)));
      LOG.info("#methods: " + methods.size());
      return methods;
    }
  }
);
}
