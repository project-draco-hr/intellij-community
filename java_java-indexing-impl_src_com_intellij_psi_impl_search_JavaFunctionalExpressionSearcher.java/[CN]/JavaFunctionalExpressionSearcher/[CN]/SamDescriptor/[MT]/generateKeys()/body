{
  List<FunctionalExpressionKey> result=new ArrayList<>();
  for (  String lambdaType : new String[]{assertNotNull(samClass.getName()),""}) {
    for (    int lambdaParamCount : new int[]{FunctionalExpressionKey.UNKNOWN_PARAM_COUNT,samParamCount}) {
      result.add(new FunctionalExpressionKey(lambdaParamCount,FunctionalExpressionKey.CoarseType.UNKNOWN,lambdaType));
      if (isVoid) {
        result.add(new FunctionalExpressionKey(lambdaParamCount,FunctionalExpressionKey.CoarseType.VOID,lambdaType));
      }
 else {
        if (booleanCompatible) {
          result.add(new FunctionalExpressionKey(lambdaParamCount,FunctionalExpressionKey.CoarseType.BOOLEAN,lambdaType));
        }
        result.add(new FunctionalExpressionKey(lambdaParamCount,FunctionalExpressionKey.CoarseType.NON_VOID,lambdaType));
      }
    }
  }
  return result;
}
