{
  List<FunctionalExpressionKey> result=new ArrayList<>();
  for (  int lambdaParamCount : new int[]{FunctionalExpressionKey.UNKNOWN_PARAM_COUNT,samParamCount}) {
    result.add(new FunctionalExpressionKey(lambdaParamCount,FunctionalExpressionKey.CoarseType.UNKNOWN,location));
    if (isVoid) {
      result.add(new FunctionalExpressionKey(lambdaParamCount,FunctionalExpressionKey.CoarseType.VOID,location));
    }
 else {
      if (booleanCompatible) {
        result.add(new FunctionalExpressionKey(lambdaParamCount,FunctionalExpressionKey.CoarseType.BOOLEAN,location));
      }
      result.add(new FunctionalExpressionKey(lambdaParamCount,FunctionalExpressionKey.CoarseType.NON_VOID,location));
    }
  }
  return result;
}
