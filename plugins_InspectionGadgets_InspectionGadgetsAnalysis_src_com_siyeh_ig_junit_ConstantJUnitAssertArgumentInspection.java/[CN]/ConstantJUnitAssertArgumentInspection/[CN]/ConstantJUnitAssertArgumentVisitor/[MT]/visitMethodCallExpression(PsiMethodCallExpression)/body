{
  final PsiReferenceExpression methodExpression=expression.getMethodExpression();
  @NonNls final String methodName=methodExpression.getReferenceName();
  if (!ASSERT_METHODS.contains(methodName)) {
    return;
  }
  final PsiMethod method=expression.resolveMethod();
  if (method == null) {
    return;
  }
  final boolean messageOnFirstPosition=AssertHint.isMessageOnFirstPosition(method,false);
  final boolean messageOnLastPosition=AssertHint.isMessageOnLastPosition(method,false);
  if (!messageOnFirstPosition && !messageOnLastPosition) {
    return;
  }
  final PsiExpressionList argumentList=expression.getArgumentList();
  final PsiExpression[] arguments=argumentList.getExpressions();
  if (arguments.length == 0) {
    return;
  }
  final PsiExpression argument=arguments[messageOnFirstPosition ? arguments.length - 1 : 0];
  if (!PsiUtil.isConstantExpression(argument)) {
    return;
  }
  registerError(argument);
}
