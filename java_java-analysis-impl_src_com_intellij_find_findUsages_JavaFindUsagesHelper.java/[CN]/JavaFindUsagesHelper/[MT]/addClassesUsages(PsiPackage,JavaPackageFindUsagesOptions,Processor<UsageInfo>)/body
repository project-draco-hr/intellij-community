{
  ProgressIndicator progress=ProgressManager.getInstance().getProgressIndicator();
  if (progress != null) {
    progress.pushState();
  }
  try {
    List<PsiClass> classes=new ArrayList<>();
    addClassesInPackage(aPackage,options.isIncludeSubpackages,classes);
    for (    final PsiClass aClass : classes) {
      if (progress != null) {
        String name=ApplicationManager.getApplication().runReadAction(new Computable<String>(){
          @Override public String compute(){
            return aClass.getName();
          }
        }
);
        progress.setText(FindBundle.message("find.searching.for.references.to.class.progress",name));
        progress.checkCanceled();
      }
      boolean success=ReferencesSearch.search(new ReferencesSearch.SearchParameters(aClass,options.searchScope,false,options.fastTrack)).forEach(new ReadActionProcessor<PsiReference>(){
        @Override public boolean processInReadAction(        final PsiReference psiReference){
          return addResult(psiReference,options,processor);
        }
      }
);
      if (!success)       return false;
    }
  }
  finally {
    if (progress != null) {
      progress.popState();
    }
  }
  return true;
}
