{
  final TObjectDoubleHashMap<String> weights=new TObjectDoubleHashMap<String>(accessorNameTracker.size());
  double weight=0;
  double step=(double)myPropertyBindings.size() / (double)accessorNameTracker.size();
  for (  String name : accessorNameTracker) {
    weights.put(name,weight);
    weight+=step;
  }
  weight=0;
  for (  Accessor accessor : myPropertyBindings.values()) {
    String name=accessor.getName();
    if (!weights.containsKey(name)) {
      weights.put(name,weight);
    }
    weight++;
  }
  Binding[] result=myPropertyBindings.keySet().toArray(new Binding[myPropertyBindings.size()]);
  Arrays.sort(result,new Comparator<Binding>(){
    @Override public int compare(    @NotNull Binding o1,    @NotNull Binding o2){
      String n1=myPropertyBindings.get(o1).getName();
      String n2=myPropertyBindings.get(o2).getName();
      double w1=weights.get(n1);
      double w2=weights.get(n2);
      return (int)(w1 - w2);
    }
  }
);
  return Arrays.asList(result);
}
