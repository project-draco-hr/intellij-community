{
  List<RedmineIssue> issues=fetchIssues(query,offset,limit,withClosed);
  List<Task> result=ContainerUtil.map(issues,new Function<RedmineIssue,Task>(){
    @Override public RedmineTask fun(    RedmineIssue issue){
      return new RedmineTask(RedmineRepository.this,issue);
    }
  }
);
  if (query != null && ID_PATTERN.matcher(query).matches()) {
    LOG.debug("Query '" + query + "' looks like an issue ID. Requesting it explicitly from the server "+ this);
    final Task found=findTask(query);
    if (found != null) {
      result=ContainerUtil.append(result,found);
    }
  }
  return ArrayUtil.toObjectArray(result,Task.class);
}
