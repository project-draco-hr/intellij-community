{
  if (alarm.getActiveRequestCount() == 0) {
    alarm.addRequest(new Runnable(){
      @Override public void run(){
        Iterator<Map.Entry<EditorImpl,List<Sprite>>> iterator=state.entrySet().iterator();
        while (iterator.hasNext()) {
          Map.Entry<EditorImpl,List<Sprite>> entry=iterator.next();
          EditorImpl editor=entry.getKey();
          if (editor.isDisposed()) {
            iterator.remove();
          }
 else {
            BounceDetector bounceDetector=new BounceDetector(editor);
            for (            Sprite sprite : entry.getValue()) {
              sprite.requestRepaintInEditor(editor);
              List<Integer> offsetsToClear=bounceDetector.moveSprite(sprite);
              sprite.requestRepaintInEditor(editor);
              Collections.sort(offsetsToClear);
              for (int i=offsetsToClear.size() - 1; i >= 0; i--) {
                DocumentModifier.removeCharacter(editor,offsetsToClear.get(i));
              }
            }
          }
        }
        if (!state.isEmpty()) {
          startAnimation();
        }
      }
    }
,ANIMATION_INTERVAL);
  }
}
