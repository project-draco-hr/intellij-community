{
  HashMap<Integer,Collection<IntIdEquation>> map=new HashMap<Integer,Collection<IntIdEquation>>(2);
  try {
    ClassEquations rawEquations=processClass(new ClassReader(inputData.getContent()));
    List<Equation<Key,Value>> rawParameterEquations=rawEquations.parameterEquations;
    List<Equation<Key,Value>> rawContractEquations=rawEquations.contractEquations;
    Collection<IntIdEquation> idParameterEquations=new ArrayList<IntIdEquation>(rawParameterEquations.size());
    Collection<IntIdEquation> idContractEquations=new ArrayList<IntIdEquation>(rawContractEquations.size());
    map.put(BytecodeAnalysisIndex.indexKey(inputData.getFile(),true),idParameterEquations);
    map.put(BytecodeAnalysisIndex.indexKey(inputData.getFile(),false),idContractEquations);
    for (    Equation<Key,Value> rawParameterEquation : rawParameterEquations) {
      idParameterEquations.add(myConverter.convert(rawParameterEquation));
    }
    for (    Equation<Key,Value> rawContractEquation : rawContractEquations) {
      idContractEquations.add(myConverter.convert(rawContractEquation));
    }
  }
 catch (  ProcessCanceledException e) {
    throw e;
  }
catch (  Throwable e) {
    LOG.debug("Unexpected Error during indexing of bytecode",e);
  }
  return map;
}
