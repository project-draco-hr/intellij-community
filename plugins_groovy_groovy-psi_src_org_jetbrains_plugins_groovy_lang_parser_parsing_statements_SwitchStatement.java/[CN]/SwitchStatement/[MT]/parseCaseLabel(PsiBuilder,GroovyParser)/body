{
  IElementType elem=builder.getTokenType();
  if (elem != GroovyTokenTypes.kCASE && elem != GroovyTokenTypes.kDEFAULT) {
    return false;
  }
  PsiBuilder.Marker label=builder.mark();
  builder.advanceLexer();
  if (GroovyTokenTypes.kCASE.equals(elem) && !AssignmentExpression.parse(builder,parser)) {
    builder.error(GroovyBundle.message("expression.expected"));
  }
  ParserUtils.getToken(builder,GroovyTokenTypes.mCOLON,GroovyBundle.message("colon.expected"));
  label.done(GroovyElementTypes.CASE_LABEL);
  PsiBuilder.Marker beforeNls=builder.mark();
  ParserUtils.getToken(builder,GroovyTokenTypes.mNLS);
  if (parseCaseLabel(builder,parser)) {
    beforeNls.drop();
  }
 else {
    beforeNls.rollbackTo();
  }
  return true;
}
