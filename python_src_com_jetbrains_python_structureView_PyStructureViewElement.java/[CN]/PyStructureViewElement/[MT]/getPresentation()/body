{
  return new ItemPresentation(){
    public String getPresentableText(){
      if (myElement instanceof PyFunction) {
        PyParameterList argList=((PyFunction)myElement).getParameterList();
        StringBuilder result=new StringBuilder(myElement.getName());
        ParamHelper.appendParameterList(argList,result);
        return result.toString();
      }
      return myElement.getName();
    }
    @Nullable public TextAttributesKey getTextAttributesKey(){
      return null;
    }
    @Nullable public String getLocationString(){
      return null;
    }
    public Icon getIcon(    boolean open){
      Icon normal_icon=myElement.getIcon(Iconable.ICON_FLAG_OPEN);
      if (myIcon != null)       normal_icon=myIcon;
      if (myVisibility == Visibility.NORMAL) {
        return normal_icon;
      }
 else {
        LayeredIcon icon=new LayeredIcon(2);
        icon.setIcon(normal_icon,0);
        Icon overlay=null;
        if (myVisibility == Visibility.PRIVATE) {
          overlay=PyIcons.PRIVATE;
        }
 else         if (myVisibility == Visibility.PREDEFINED) {
          overlay=PyIcons.PREDEFINED;
        }
 else         if (myVisibility == Visibility.INVISIBLE)         overlay=PyIcons.INVISIBLE;
        if (overlay != null) {
          icon.setIcon(overlay,1);
        }
        return icon;
      }
    }
  }
;
}
