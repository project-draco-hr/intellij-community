{
  return new ItemPresentation(){
    public String getPresentableText(){
      if (my_element instanceof PyFunction) {
        PsiElement[] children=my_element.getChildren();
        if (children.length > 0 && children[0] instanceof PyParameterList) {
          PyParameterList argList=(PyParameterList)children[0];
          StringBuilder result=new StringBuilder(((PsiNamedElement)my_element).getName());
          result.append("(");
          boolean first=true;
          for (          PsiElement e : argList.getChildren()) {
            if (e instanceof PyParameter) {
              if (first) {
                first=false;
              }
 else {
                result.append(",");
              }
              PyParameter p=(PyParameter)e;
              if (p.isPositionalContainer()) {
                result.append("*");
              }
 else               if (p.isKeywordContainer()) {
                result.append("**");
              }
              result.append(p.getName());
            }
          }
          result.append(")");
          return result.toString();
        }
      }
      return ((PsiNamedElement)my_element).getName();
    }
    public @Nullable TextAttributesKey getTextAttributesKey(){
      return null;
    }
    public @Nullable String getLocationString(){
      return null;
    }
    public Icon getIcon(    boolean open){
      Icon normal_icon=my_element.getIcon(Iconable.ICON_FLAG_OPEN);
      if (my_icon != null)       normal_icon=my_icon;
      if (my_visibility == Visibility.NORMAL) {
        return normal_icon;
      }
 else {
        LayeredIcon icon=new LayeredIcon(2);
        icon.setIcon(normal_icon,0);
        Icon overlay=null;
        if (my_visibility == Visibility.PRIVATE)         overlay=PyIcons.PRIVATE;
 else         if (my_visibility == Visibility.PREDEFINED)         overlay=PyIcons.PREDEFINED;
 else         if (my_visibility == Visibility.INVISIBLE)         overlay=PyIcons.INVISIBLE;
        if (overlay != null) {
          icon.setIcon(overlay,1);
        }
        return icon;
      }
    }
  }
;
}
