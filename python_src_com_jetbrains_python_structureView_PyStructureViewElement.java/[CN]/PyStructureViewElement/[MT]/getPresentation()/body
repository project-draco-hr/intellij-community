{
  return new ItemPresentation(){
    public String getPresentableText(){
      if (_element instanceof PyFunction) {
        PsiElement[] children=_element.getChildren();
        if (children.length > 0 && children[0] instanceof PyParameterList) {
          PyParameterList argList=(PyParameterList)children[0];
          StringBuilder result=new StringBuilder(((PsiNamedElement)_element).getName());
          result.append("(");
          boolean first=true;
          for (          PsiElement e : argList.getChildren()) {
            if (e instanceof PyParameter) {
              if (first) {
                first=false;
              }
 else {
                result.append(",");
              }
              PyParameter p=(PyParameter)e;
              if (p.isPositionalContainer()) {
                result.append("*");
              }
 else               if (p.isKeywordContainer()) {
                result.append("**");
              }
              result.append(p.getName());
            }
          }
          result.append(")");
          return result.toString();
        }
      }
      return ((PsiNamedElement)_element).getName();
    }
    public @Nullable TextAttributesKey getTextAttributesKey(){
      return null;
    }
    public @Nullable String getLocationString(){
      return null;
    }
    public Icon getIcon(    boolean open){
      return _element.getIcon(Iconable.ICON_FLAG_OPEN);
    }
  }
;
}
