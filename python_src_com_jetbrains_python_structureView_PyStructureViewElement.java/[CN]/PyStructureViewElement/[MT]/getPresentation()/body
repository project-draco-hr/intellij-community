{
  return new ColoredItemPresentation(){
    public String getPresentableText(){
      final String unnamed="<unnamed>";
      if (myElement instanceof PyFunction) {
        PyParameterList argList=((PyFunction)myElement).getParameterList();
        StringBuilder result=new StringBuilder(notNullize(myElement.getName(),unnamed));
        result.append(argList.getPresentableText(true));
        return result.toString();
      }
 else       if (myElement instanceof PyClass && myElement.isValid()) {
        PyClass c=(PyClass)myElement;
        StringBuilder result=new StringBuilder(notNullize(c.getName(),unnamed));
        PyExpression[] superClassExpressions=c.getSuperClassExpressions();
        if (superClassExpressions.length > 0) {
          result.append("(");
          result.append(join(Arrays.asList(superClassExpressions),new Function<PyExpression,String>(){
            public String fun(            PyExpression expr){
              String name=expr.getText();
              return notNullize(name,unnamed);
            }
          }
,", "));
          result.append(")");
        }
        return result.toString();
      }
      return myElement.getName();
    }
    @Nullable @Override public TextAttributesKey getTextAttributesKey(){
      if (isInherited()) {
        return CodeInsightColors.NOT_USED_ELEMENT_ATTRIBUTES;
      }
      return null;
    }
    @Nullable public String getLocationString(){
      return null;
    }
    public Icon getIcon(    boolean open){
      Icon normal_icon=myElement.getIcon(Iconable.ICON_FLAG_OPEN);
      if (myIcon != null)       normal_icon=myIcon;
      if (myVisibility == Visibility.NORMAL) {
        return normal_icon;
      }
 else {
        LayeredIcon icon=new LayeredIcon(2);
        icon.setIcon(normal_icon,0);
        Icon overlay=null;
        if (myVisibility == Visibility.PRIVATE || myVisibility == Visibility.PROTECTED) {
          overlay=PyIcons.PRIVATE;
        }
 else         if (myVisibility == Visibility.PREDEFINED) {
          overlay=PyIcons.PREDEFINED;
        }
 else         if (myVisibility == Visibility.INVISIBLE) {
          overlay=PyIcons.INVISIBLE;
        }
        if (overlay != null) {
          icon.setIcon(overlay,1);
        }
        return icon;
      }
    }
  }
;
}
