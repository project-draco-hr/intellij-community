{
  if (!FileModificationService.getInstance().prepareFileForWrite(file))   return;
  myConjuncts.remove(myConjunct);
  myConjuncts.add(0,myConjunct);
  final String intersectionTypeText=StringUtil.join(myConjuncts,new Function<PsiTypeElement,String>(){
    @Override public String fun(    PsiTypeElement element){
      return element.getText();
    }
  }
," & ");
  final PsiElementFactory elementFactory=JavaPsiFacade.getElementFactory(project);
  final PsiTypeCastExpression fixedCast=(PsiTypeCastExpression)elementFactory.createExpressionFromText("(" + intersectionTypeText + ") a",myCastTypeElement);
  final PsiTypeElement fixedCastCastType=fixedCast.getCastType();
  LOG.assertTrue(fixedCastCastType != null);
  final PsiElement flippedTypeElement=myCastTypeElement.replace(fixedCastCastType);
  CodeStyleManager.getInstance(project).reformat(flippedTypeElement);
}
