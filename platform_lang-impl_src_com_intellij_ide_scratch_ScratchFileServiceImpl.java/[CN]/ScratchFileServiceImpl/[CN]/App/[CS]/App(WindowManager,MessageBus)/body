{
  final WindowManagerListener windowListener=new WindowManagerListener(){
    @Override public void frameCreated(    IdeFrame frame){
      Project project=frame.getProject();
      StatusBar statusBar=frame.getStatusBar();
      if (project == null || statusBar == null || statusBar.getWidget(ScratchWidget.WIDGET_ID) != null)       return;
      ScratchWidget widget=new ScratchWidget(project);
      statusBar.addWidget(widget,"before Encoding",project);
      statusBar.updateWidget(ScratchWidget.WIDGET_ID);
    }
    @Override public void beforeFrameReleased(    IdeFrame frame){
    }
  }
;
  for (  IdeFrame frame : windowManager.getAllProjectFrames()) {
    windowListener.frameCreated(frame);
  }
  windowManager.addListener(windowListener);
  final FileEditorManagerAdapter editorListener=new FileEditorManagerAdapter(){
    @Override public void fileOpened(    @NotNull FileEditorManager source,    @NotNull VirtualFile file){
      RootType rootType=getRootType(file);
      if (rootType != null) {
        rootType.fileOpened(file,source);
      }
    }
  }
;
  ProjectManagerAdapter projectListener=new ProjectManagerAdapter(){
    @Override public void projectOpened(    Project project){
      project.getMessageBus().connect(project).subscribe(FileEditorManagerListener.FILE_EDITOR_MANAGER,editorListener);
      FileEditorManager editorManager=FileEditorManager.getInstance(project);
      for (      VirtualFile virtualFile : editorManager.getOpenFiles()) {
        editorListener.fileOpened(editorManager,virtualFile);
      }
    }
  }
;
  for (  Project project : ProjectManager.getInstance().getOpenProjects()) {
    projectListener.projectOpened(project);
  }
  messageBus.connect().subscribe(ProjectManager.TOPIC,projectListener);
}
