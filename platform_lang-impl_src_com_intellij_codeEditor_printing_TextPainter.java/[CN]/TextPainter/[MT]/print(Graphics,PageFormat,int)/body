{
  return ApplicationManager.getApplication().runReadAction(new Computable<Integer>(){
    @Override public Integer compute(){
      if (myProgress.isCanceled() || myRangeToPrint == null || !myRangeToPrint.isValid()) {
        return NO_SUCH_PAGE;
      }
      int startOffset=myRangeToPrint.getStartOffset();
      myOffset=startOffset;
      mySegmentEnd=myRangeToPrint.getEndOffset();
      myLineNumber=myDocument.getLineNumber(myOffset) + 1;
      if (myOffset >= mySegmentEnd) {
        return NO_SUCH_PAGE;
      }
      isPrintingPass=!isPrintingPass;
      if (!isPrintingPass) {
        return PAGE_EXISTS;
      }
      myProgress.setText(CodeEditorBundle.message("print.file.page.progress",myFileName,(pageIndex + 1)));
      myPageIndex=pageIndex;
      Graphics2D g2D=(Graphics2D)g;
      Rectangle2D.Double clip=new Rectangle2D.Double(pageFormat.getImageableX(),pageFormat.getImageableY(),pageFormat.getImageableWidth(),pageFormat.getImageableHeight());
      draw(g2D,clip);
      myRangeToPrint.dispose();
      myRangeToPrint=myOffset > startOffset && myOffset < mySegmentEnd ? myDocument.createRangeMarker(myOffset,mySegmentEnd) : null;
      return PAGE_EXISTS;
    }
  }
);
}
