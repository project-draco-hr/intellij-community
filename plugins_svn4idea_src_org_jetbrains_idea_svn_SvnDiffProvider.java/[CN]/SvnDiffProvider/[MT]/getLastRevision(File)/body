{
  final SVNStatus svnStatus=getFileStatus(file,true);
  if (svnStatus == null || itemExists(svnStatus) && SVNRevision.UNDEFINED.equals(svnStatus.getRemoteRevision())) {
    final SVNInfo info=myVcs.getInfo(file,SVNRevision.HEAD);
    if (info == null || info.getURL() == null) {
      LOG.info("No SVN status returned for " + file.getPath());
      return defaultResult();
    }
    return createResult(info.getCommittedRevision(),true,false);
  }
  final boolean exists=itemExists(svnStatus);
  if (!exists) {
    WorkingCopyFormat format=myVcs.getWorkingCopyFormat(file);
    long revision=-1;
    if (!WorkingCopyFormat.ONE_DOT_EIGHT.equals(format)) {
      final LatestExistentSearcher searcher=new LatestExistentSearcher(myVcs,svnStatus.getURL());
      revision=searcher.getDeletionRevision();
    }
    return createResult(SVNRevision.create(revision),exists,false);
  }
  final SVNRevision remoteRevision=svnStatus.getRemoteRevision();
  if (remoteRevision != null) {
    return createResult(remoteRevision,exists,false);
  }
  return createResult(svnStatus.getRevision(),exists,false);
}
