{
  int m=pattern.size();
  int n=tokens.size();
  if (n < m) {
    return ArrayUtil.EMPTY_INT_ARRAY;
  }
  int[] pf=new int[m];
  pf[0]=0;
  for (int k=0, i=1; i < m; i++) {
    while (k > 0 && !pattern.get(i).equals(pattern.get(k))) {
      k=pf[k - 1];
    }
    if (pattern.get(i).equals(pattern.get(k))) {
      k++;
    }
    pf[i]=k;
  }
  IntArrayList result=new IntArrayList();
  for (int k=0, i=0; i < n; i++) {
    while ((k > 0) && !pattern.get(k).equals(tokens.get(i))) {
      k=pf[k - 1];
    }
    if (pattern.get(k).equals(tokens.get(i))) {
      k++;
    }
    if (k == m) {
      result.add(i - m + 1);
      k=pf[k - 1];
    }
  }
  return result.toArray();
}
