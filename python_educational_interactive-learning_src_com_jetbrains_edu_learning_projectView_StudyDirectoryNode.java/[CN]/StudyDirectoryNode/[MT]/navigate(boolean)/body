{
  if (myValue.getName().contains(StudyNames.TASK_DIR)) {
    TaskFile taskFile=null;
    VirtualFile virtualFile=null;
    for (    PsiElement child : myValue.getChildren()) {
      VirtualFile childFile=child.getContainingFile().getVirtualFile();
      taskFile=StudyTaskManager.getInstance(myProject).getTaskFile(childFile);
      if (taskFile != null) {
        virtualFile=childFile;
        break;
      }
    }
    if (taskFile != null) {
      VirtualFile taskDir=virtualFile.getParent();
      Task task=taskFile.getTask();
      for (      VirtualFile openFile : FileEditorManager.getInstance(myProject).getOpenFiles()) {
        FileEditorManager.getInstance(myProject).closeFile(openFile);
      }
      VirtualFile child=null;
      Map<String,TaskFile> taskFiles=task.getTaskFiles();
      for (      Map.Entry<String,TaskFile> entry : taskFiles.entrySet()) {
        VirtualFile file=taskDir.findChild(entry.getKey());
        if (file != null) {
          FileEditorManager.getInstance(myProject).openFile(file,true);
        }
        if (!entry.getValue().getAnswerPlaceholders().isEmpty()) {
          child=file;
        }
      }
      if (child != null) {
        ProjectView.getInstance(myProject).select(child,child,false);
        FileEditorManager.getInstance(myProject).openFile(child,true);
      }
 else {
        VirtualFile[] children=taskDir.getChildren();
        if (children.length > 0) {
          ProjectView.getInstance(myProject).select(children[0],children[0],false);
        }
      }
    }
  }
}
