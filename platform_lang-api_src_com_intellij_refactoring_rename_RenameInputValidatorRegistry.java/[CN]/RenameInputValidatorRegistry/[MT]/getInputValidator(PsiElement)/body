{
  final LinkedHashMap<RenameInputValidator,ProcessingContext> acceptedValidators=new LinkedHashMap<RenameInputValidator,ProcessingContext>();
  for (  final RenameInputValidator validator : Extensions.getExtensions(RenameInputValidator.EP_NAME)) {
    final ProcessingContext context=new ProcessingContext();
    if (validator.getPattern().accepts(element,context)) {
      acceptedValidators.put(validator,context);
    }
  }
  return acceptedValidators.isEmpty() ? null : new Condition<String>(){
    @Override public boolean value(    final String s){
      for (      RenameInputValidator validator : acceptedValidators.keySet()) {
        if (!validator.isInputValid(s,element,acceptedValidators.get(validator))) {
          return false;
        }
      }
      return true;
    }
  }
;
}
