{
  Adjustable adjustable=e.getAdjustable();
  if (e.getValue() + adjustable.getVisibleAmount() == adjustable.getMaximum()) {
    if (myEvaluatingChunk != null) {
      return;
    }
    if (adjustable.getOrientation() == Adjustable.HORIZONTAL && myTable.getColumnCount() == myViewCols) {
      int rightColumn=myColOffset + myViewCols;
      if (rightColumn >= myColLimit) {
        return;
      }
      int columnSize=Math.min(myColChunkSize,Math.abs(myColLimit - rightColumn));
      final T chunk=createChunk(getBaseSlice(),myViewRows,columnSize,myRowOffset,(myColOffset + myViewCols));
      myEvaluatingChunk=chunk;
      myColOffset+=columnSize;
      chunk.fillData(new Runnable(){
        @Override public void run(){
          moveNFirstColumns(chunk.getColumns());
          loadDataIntoTable(chunk,myViewCols - chunk.getColumns(),0);
        }
      }
);
    }
 else     if (adjustable.getOrientation() == Adjustable.VERTICAL && myTable.getRowCount() == myViewRows) {
      int bottomRow=myRowOffset + myViewRows;
      if (bottomRow >= myRowLimit) {
        return;
      }
      int rowSize=Math.min(myRowChunkSize,Math.abs(myRowLimit - bottomRow));
      final T chunk=createChunk(getBaseSlice(),rowSize,myViewCols,bottomRow,myColOffset);
      myEvaluatingChunk=chunk;
      myRowOffset+=rowSize;
      chunk.fillData(new Runnable(){
        @Override public void run(){
          moveNFirstRows(chunk.getRows());
          loadDataIntoTable(chunk,0,myViewRows - chunk.getRows());
        }
      }
);
    }
  }
  if (e.getValue() == 0) {
    if (myEvaluatingChunk != null) {
      return;
    }
    if (adjustable.getOrientation() == Adjustable.HORIZONTAL && myTable.getColumnCount() == myViewCols) {
      if (myColOffset != 0) {
        int leftSpace=Math.min(myColChunkSize,myColOffset);
        final T chunk=createChunk(getBaseSlice(),myViewRows,leftSpace,myRowOffset,myColOffset - leftSpace);
        myEvaluatingChunk=chunk;
        myColOffset-=leftSpace;
        chunk.fillData(new Runnable(){
          @Override public void run(){
            moveNLastColumns(chunk.getColumns());
            loadDataIntoTable(chunk,0,0);
          }
        }
);
      }
    }
 else     if (adjustable.getOrientation() == Adjustable.VERTICAL && myTable.getRowCount() == myViewRows) {
      if (myRowOffset != 0) {
        int upperSpace=Math.min(myRowChunkSize,myRowOffset);
        final T chunk=createChunk(getBaseSlice(),upperSpace,myViewCols,myRowOffset - upperSpace,myColOffset);
        myEvaluatingChunk=chunk;
        myRowOffset-=upperSpace;
        chunk.fillData(new Runnable(){
          @Override public void run(){
            moveNLastRows(chunk.getRows());
            loadDataIntoTable(chunk,0,0);
          }
        }
);
      }
    }
  }
}
