{
  final List<CodeSmellInfo> result=new ArrayList<CodeSmellInfo>();
  final DaemonCodeAnalyzerImpl codeAnalyzer=(DaemonCodeAnalyzerImpl)DaemonCodeAnalyzer.getInstance(myProject);
  final DaemonProgressIndicator daemonIndicator=new DaemonProgressIndicator();
  ((ProgressIndicatorEx)progress).addStateDelegate(new AbstractProgressIndicatorExBase(){
    @Override public void cancel(){
      super.cancel();
      daemonIndicator.cancel();
    }
  }
);
  ProgressManager.getInstance().runProcess(new Runnable(){
    @Override public void run(){
      ApplicationManager.getApplication().runReadAction(new Runnable(){
        @Override public void run(){
          final PsiFile psiFile=PsiManager.getInstance(myProject).findFile(file);
          if (psiFile != null) {
            final Document document=FileDocumentManager.getInstance().getDocument(file);
            if (document != null) {
              List<HighlightInfo> infos=codeAnalyzer.runMainPasses(psiFile,document,daemonIndicator);
              collectErrorsAndWarnings(infos,result,document);
            }
          }
        }
      }
);
    }
  }
,daemonIndicator);
  return result;
}
