{
  if (sideEffects == null || element == null)   return false;
  if (element instanceof PsiMethodCallExpression) {
    final PsiMethod psiMethod=((PsiMethodCallExpression)element).resolveMethod();
    if (psiMethod == null || !PropertyUtil.isSimpleGetter(psiMethod) && !PropertyUtil.isSimpleSetter(psiMethod)) {
      sideEffects.add(element);
      return true;
    }
  }
  if (element instanceof PsiNewExpression) {
    PsiNewExpression newExpression=(PsiNewExpression)element;
    if (newExpression.getArrayDimensions().length == 0 && newExpression.getArrayInitializer() == null && !isSideEffectFreeConstructor(newExpression)) {
      sideEffects.add(element);
      return true;
    }
  }
  if (element instanceof PsiAssignmentExpression && !(((PsiAssignmentExpression)element).getLExpression() instanceof PsiReferenceExpression && ((PsiReferenceExpression)((PsiAssignmentExpression)element).getLExpression()).resolve() == variable)) {
    sideEffects.add(element);
    return true;
  }
  IElementType tokenType=null;
  PsiExpression operand=null;
  if (element instanceof PsiPrefixExpression) {
    operand=((PsiPrefixExpression)element).getOperand();
    tokenType=((PsiPrefixExpression)element).getOperationTokenType();
  }
 else   if (element instanceof PsiPostfixExpression) {
    operand=((PsiPostfixExpression)element).getOperand();
    tokenType=((PsiPostfixExpression)element).getOperationTokenType();
  }
  if (JavaTokenType.MINUSMINUS.equals(tokenType) || JavaTokenType.PLUSPLUS.equals(tokenType)) {
    operand=PsiUtil.deparenthesizeExpression(operand);
    if (!(operand instanceof PsiReferenceExpression && ((PsiReferenceExpression)operand).resolve() == variable)) {
      sideEffects.add(element);
      return true;
    }
  }
  PsiElement[] children=element.getChildren();
  for (  PsiElement child : children) {
    checkSideEffects(child,variable,sideEffects);
  }
  return !sideEffects.isEmpty();
}
