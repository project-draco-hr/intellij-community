{
  String javaClassName=javaClass.getCanonicalName();
  System.out.println(javaClassName);
  PsiClass psiClass=myJavaPsiFacade.findClass(javaClassName,GlobalSearchScope.moduleWithLibrariesScope(myModule));
  assertNotNull(psiClass);
  for (  java.lang.reflect.Method javaMethod : javaClass.getDeclaredMethods()) {
    System.out.println(javaMethod.getName());
    Method method=new Method(Type.getDescriptor(javaClass),javaMethod.getName(),Type.getMethodDescriptor(javaMethod));
    boolean noKey=javaMethod.getAnnotation(ExpectNoPsiKey.class) != null;
    PsiMethod psiMethod=psiClass.findMethodsByName(javaMethod.getName(),false)[0];
    checkCompoundId(method,psiMethod,noKey);
  }
  for (  Constructor<?> constructor : javaClass.getDeclaredConstructors()) {
    Method method=new Method(Type.getDescriptor(javaClass),"<init>",Type.getConstructorDescriptor(constructor));
    boolean noKey=constructor.getAnnotation(ExpectNoPsiKey.class) != null;
    PsiMethod[] constructors=psiClass.getConstructors();
    PsiMethod psiMethod=constructors[0];
    checkCompoundId(method,psiMethod,noKey);
  }
}
