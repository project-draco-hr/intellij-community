{
  final Boolean callable=callee != null ? isCallable(callee,myTypeEvalContext) : PyTypeChecker.isCallable(type);
  if (callable == null) {
    return;
  }
  if (!callable) {
    final PyType calleeType=callee != null ? myTypeEvalContext.getType(callee) : type;
    if (calleeType instanceof PyClassType) {
      registerProblem(node,String.format("'%s' object is not callable",calleeType.getName()),new PyRemoveCallQuickFix());
    }
 else     if (callee != null) {
      registerProblem(node,String.format("'%s' is not callable",callee.getName()),new PyRemoveCallQuickFix());
    }
 else {
      registerProblem(node,"Expression is not callable",new PyRemoveCallQuickFix());
    }
  }
}
