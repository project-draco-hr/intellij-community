{
  final Sdk sdk;
  final String missingInterpreterMessage;
  if (format == DocStringFormat.EPYTEXT) {
    sdk=PythonSdkType.findPython2Sdk(module);
    missingInterpreterMessage=PyBundle.message("QDOC.epydoc.python2.sdk.not.found");
  }
 else {
    sdk=PythonSdkType.findLocalCPython(module);
    missingInterpreterMessage=PyBundle.message("QDOC.sdk.not.found");
  }
  if (sdk == null) {
    LOG.warn("Python SDK for docstring formatter " + format + " is not found");
    return "<p color=\"red\">" + missingInterpreterMessage + "</p>";
  }
  final String sdkHome=sdk.getHomePath();
  if (sdkHome == null)   return null;
  final ByteBuffer encoded=DEFAULT_CHARSET.encode(docstring);
  final byte[] data=new byte[encoded.limit()];
  encoded.get(data);
  final ArrayList<String> arguments=Lists.newArrayList(format.getFormatterCommand());
  final GeneralCommandLine commandLine=PythonHelper.DOCSTRING_FORMATTER.newCommandLine(sdk,arguments);
  commandLine.setCharset(DEFAULT_CHARSET);
  LOG.debug("Command for launching docstring formatter: " + commandLine.getCommandLineString());
  final ProcessOutput output=PySdkUtil.getProcessOutput(commandLine,new File(sdkHome).getParent(),null,5000,data,false);
  if (!output.checkSuccess(LOG)) {
    LOG.info("Malformed docstring:\n" + docstring);
    return null;
  }
  return output.getStdout();
}
