{
  final PsiElementFactory factory=JavaPsiFacade.getElementFactory(element.getProject());
  element.accept(new JavaRecursiveElementVisitor(){
    @Override public void visitReferenceExpression(    PsiReferenceExpression expression){
      super.visitReferenceExpression(expression);
      if (expression.getQualifierExpression() != null) {
        return;
      }
      final PsiElement expressionTarget=expression.resolve();
      if (!(expressionTarget instanceof PsiMember)) {
        return;
      }
      final PsiMember member=(PsiMember)expressionTarget;
      final PsiClass containingClass=member.getContainingClass();
      if (!target.equals(containingClass)) {
        return;
      }
      final PsiExpression newExpression=factory.createExpressionFromText(qualifierText + '.' + expression.getText(),expression);
      expression.replace(newExpression);
    }
  }
);
}
