{
  @SuppressWarnings("UseOfSystemOutOrSystemErr") MessageOutput messageOutput=new MessageOutput(new PrintWriter(System.out),new PrintWriter(System.err));
  messageOutput.info(getAppInfo() + " Formatter\n");
  FileSetFormatter fileSetFormatter=new FileSetFormatter(messageOutput);
  logArgs(args);
  if (args.length < 2) {
    showUsageInfo(messageOutput);
  }
  for (int i=1; i < args.length; i++) {
    if (args[i].startsWith("-")) {
      if (checkOption(args[i],"-h","-help")) {
        showUsageInfo(messageOutput);
      }
      if (checkOption(args[i],"-s","-settings")) {
        i++;
        if (i >= args.length) {
          fatalError(messageOutput,"Missing settings file path.");
        }
        try {
          CodeStyleSettings settings=readSettings(args[i]);
          fileSetFormatter.setCodeStyleSettings(settings);
        }
 catch (        SchemeImportException e) {
          fatalError(messageOutput,e.getLocalizedMessage() + "\n");
        }
      }
 else       if (checkOption(args[i],"-r","-R")) {
        fileSetFormatter.setRecursive();
      }
 else       if (checkOption(args[i],"-m","-mask")) {
        i++;
        if (i >= args.length) {
          fatalError(messageOutput,"Missing file mask(s).");
        }
        for (        String mask : args[i].split(",")) {
          if (!mask.isEmpty()) {
            fileSetFormatter.addFileMask(mask);
          }
        }
      }
 else {
        fatalError(messageOutput,"Unknown option " + args[i]);
      }
    }
 else {
      try {
        fileSetFormatter.addEntry(args[i]);
      }
 catch (      IOException e) {
        fatalError(messageOutput,e.getLocalizedMessage());
      }
    }
  }
  try {
    fileSetFormatter.processFiles();
    messageOutput.info("\n" + fileSetFormatter.getProcessedFiles() + " files formatted.\n");
  }
 catch (  IOException e) {
    fatalError(messageOutput,e.getLocalizedMessage());
  }
  ((ApplicationEx)ApplicationManager.getApplication()).exit(true,true);
}
