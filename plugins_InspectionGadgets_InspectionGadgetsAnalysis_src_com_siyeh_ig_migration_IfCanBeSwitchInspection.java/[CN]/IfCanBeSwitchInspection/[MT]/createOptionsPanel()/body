{
  final JPanel panel=new JPanel(new GridBagLayout());
  final JLabel label=new JLabel(InspectionGadgetsBundle.message("if.can.be.switch.minimum.branch.option"));
  final NumberFormat formatter=NumberFormat.getIntegerInstance();
  formatter.setParseIntegerOnly(true);
  final JFormattedTextField valueField=new JFormattedTextField(formatter);
  valueField.setValue(Integer.valueOf(minimumBranches));
  valueField.setColumns(2);
  final Document document=valueField.getDocument();
  document.addDocumentListener(new DocumentAdapter(){
    @Override public void textChanged(    DocumentEvent e){
      try {
        valueField.commitEdit();
        minimumBranches=((Number)valueField.getValue()).intValue();
      }
 catch (      ParseException ignore) {
      }
    }
  }
);
  final GridBagConstraints constraints=new GridBagConstraints();
  constraints.gridx=0;
  constraints.gridy=0;
  constraints.insets.bottom=4;
  constraints.weightx=0.0;
  constraints.anchor=GridBagConstraints.BASELINE_LEADING;
  constraints.fill=GridBagConstraints.NONE;
  constraints.insets.right=10;
  panel.add(label,constraints);
  constraints.gridx=1;
  constraints.gridy=0;
  constraints.weightx=1.0;
  constraints.insets.right=0;
  panel.add(valueField,constraints);
  constraints.gridx=0;
  constraints.gridy=1;
  constraints.gridwidth=2;
  final CheckBox checkBox1=new CheckBox(InspectionGadgetsBundle.message("if.can.be.switch.int.option"),this,"suggestIntSwitches");
  panel.add(checkBox1,constraints);
  constraints.gridy=2;
  final CheckBox checkBox2=new CheckBox(InspectionGadgetsBundle.message("if.can.be.switch.enum.option"),this,"suggestEnumSwitches");
  panel.add(checkBox2,constraints);
  constraints.gridy=3;
  constraints.weighty=1.0;
  final CheckBox checkBox3=new CheckBox(InspectionGadgetsBundle.message("if.can.be.switch.null.safe.option"),this,"onlySuggestNullSafe");
  panel.add(checkBox3,constraints);
  return panel;
}
