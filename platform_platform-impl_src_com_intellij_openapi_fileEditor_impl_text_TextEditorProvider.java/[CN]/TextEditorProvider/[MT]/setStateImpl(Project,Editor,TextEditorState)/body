{
  LogicalPosition pos=new LogicalPosition(state.LINE,state.COLUMN);
  editor.getCaretModel().moveToLogicalPosition(pos);
  editor.getSelectionModel().removeSelection();
  EditorEx editorEx=editor instanceof EditorEx ? (EditorEx)editor : null;
  boolean preciselyScrollVertically=state.VERTICAL_SCROLL_OFFSET > 0 && editorEx != null && editorEx.getScrollPane().getVerticalScrollBar() != null && editorEx.getScrollPane().getVerticalScrollBar().getMaximum() == state.MAX_VERTICAL_SCROLL_OFFSET;
  if (preciselyScrollVertically) {
    editor.getScrollingModel().scrollVertically(state.VERTICAL_SCROLL_OFFSET);
  }
 else {
    editor.getScrollingModel().scrollToCaret(ScrollType.RELATIVE);
    if (state.VERTICAL_SCROLL_PROPORTION != -1) {
      EditorUtil.setVerticalScrollProportion(editor,state.VERTICAL_SCROLL_PROPORTION);
    }
  }
  final Document document=editor.getDocument();
  if (state.SELECTION_START == state.SELECTION_END) {
    editor.getSelectionModel().removeSelection();
  }
 else {
    int startOffset=Math.min(state.SELECTION_START,document.getTextLength());
    int endOffset=Math.min(state.SELECTION_END,document.getTextLength());
    editor.getSelectionModel().setSelection(startOffset,endOffset);
  }
  if (editorEx != null && !preciselyScrollVertically) {
    ((EditorEx)editor).stopOptimizedScrolling();
  }
  if (!preciselyScrollVertically) {
    editor.getScrollingModel().scrollToCaret(ScrollType.RELATIVE);
  }
}
