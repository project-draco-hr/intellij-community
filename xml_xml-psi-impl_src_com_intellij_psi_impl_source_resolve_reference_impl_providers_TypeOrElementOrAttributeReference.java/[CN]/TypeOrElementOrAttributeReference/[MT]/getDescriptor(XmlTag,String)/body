{
  if (myType != ReferenceType.ElementReference && myType != ReferenceType.AttributeReference) {
    final PsiElement parentElement=myElement.getContext();
    final PsiElement grandParentElement=parentElement != null ? parentElement.getParent() : null;
    boolean doRedefineCheck=false;
    if (parentElement instanceof XmlAttribute && grandParentElement instanceof XmlTag) {
      final String attrName=((XmlAttribute)parentElement).getName();
      final String tagLocalName=((XmlTag)grandParentElement).getLocalName();
      doRedefineCheck=(SchemaReferencesProvider.REF_ATTR_NAME.equals(attrName) && (SchemaReferencesProvider.GROUP_TAG_NAME.equals(tagLocalName) || SchemaReferencesProvider.ATTRIBUTE_GROUP_TAG_NAME.equals(tagLocalName))) || (SchemaReferencesProvider.BASE_ATTR_NAME.equals(attrName) || SchemaReferencesProvider.MEMBER_TYPES_ATTR_NAME.equals(attrName));
    }
    if (doRedefineCheck) {
      XmlNSDescriptorImpl redefinedDescriptor=SchemaReferencesProvider.findRedefinedDescriptor(tag,text);
      if (redefinedDescriptor != null)       return redefinedDescriptor;
    }
  }
  final String namespace=getNamespace(tag,text);
  XmlNSDescriptor nsDescriptor=tag.getNSDescriptor(namespace,true);
  final XmlDocument document=((XmlFile)tag.getContainingFile()).getDocument();
  if (nsDescriptor == null) {
    nsDescriptor=(XmlNSDescriptor)document.getMetaData();
  }
  if (nsDescriptor == null) {
    final XmlNSDescriptor[] descrs=new XmlNSDescriptor[1];
    URLReference.processWsdlSchemas(document.getRootTag(),new Processor<XmlTag>(){
      public boolean process(      final XmlTag xmlTag){
        if (namespace.equals(xmlTag.getAttributeValue(TARGET_NAMESPACE))) {
          descrs[0]=(XmlNSDescriptor)xmlTag.getMetaData();
          return false;
        }
        return true;
      }
    }
);
    if (descrs[0] instanceof XmlNSDescriptorImpl)     return (XmlNSDescriptorImpl)descrs[0];
  }
  return nsDescriptor instanceof XmlNSDescriptorImpl ? (XmlNSDescriptorImpl)nsDescriptor : null;
}
