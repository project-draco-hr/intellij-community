{
  final int space=mySettings.SPACE_BEFORE_METHOD_LBRACE ? 1 : 0;
  final int methodBraceStyle=mySettings.METHOD_BRACE_STYLE;
  if (methodBraceStyle == CommonCodeStyleSettings.END_OF_LINE) {
    return createNonLFSpace(space,null,false);
  }
 else   if (methodBraceStyle == CommonCodeStyleSettings.NEXT_LINE_IF_WRAPPED) {
    TextRange headerRange=new TextRange(getMethodHeaderStartOffset(method),getMethodHeaderEndOffset(method));
    return createNonLFSpace(space,headerRange,false);
  }
 else   if (shouldHandleAsSimpleMethod(method)) {
    TextRange rangeWithoutAnnotations=new TextRange(getMethodHeaderStartOffset(method),method.getTextRange().getEndOffset());
    return createNonLFSpace(space,rangeWithoutAnnotations,false);
  }
  return Spacing.createSpacing(space,space,1,false,mySettings.KEEP_BLANK_LINES_IN_CODE);
}
