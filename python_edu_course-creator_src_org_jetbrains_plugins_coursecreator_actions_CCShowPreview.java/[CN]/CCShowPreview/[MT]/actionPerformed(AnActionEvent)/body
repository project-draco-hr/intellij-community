{
  final Project project=e.getProject();
  if (project == null) {
    return;
  }
  final PsiFile file=CommonDataKeys.PSI_FILE.getData(e.getDataContext());
  if (file == null || !file.getName().contains(".answer")) {
    return;
  }
  final PsiDirectory taskDir=file.getContainingDirectory();
  if (taskDir == null) {
    return;
  }
  PsiDirectory lessonDir=taskDir.getParentDirectory();
  if (lessonDir == null) {
    return;
  }
  Course course=CCProjectService.getInstance(project).getCourse();
  if (course == null) {
    return;
  }
  Lesson lesson=course.getLesson(lessonDir.getName());
  Task task=lesson.getTask(taskDir.getName());
  TaskFile taskFile=task.getTaskFile(file.getName());
  final Map<TaskFile,TaskFile> taskFilesCopy=new HashMap<TaskFile,TaskFile>();
  for (  final Map.Entry<String,TaskFile> entry : task.getTaskFiles().entrySet()) {
    if (entry.getValue() == taskFile) {
      ApplicationManager.getApplication().runWriteAction(new Runnable(){
        @Override public void run(){
          CCCreateCourseArchive.createUserFile(project,taskFilesCopy,taskDir.getVirtualFile(),taskDir.getVirtualFile(),entry);
        }
      }
);
    }
  }
  String userFileName=FileUtil.getNameWithoutExtension(file.getName()) + ".py";
  VirtualFile userFile=taskDir.getVirtualFile().findChild(userFileName);
  if (userFile != null) {
    FileEditorManager.getInstance(project).openFile(userFile,true);
    Editor editor=FileEditorManager.getInstance(project).getSelectedTextEditor();
    if (editor == null) {
      return;
    }
    for (    TaskWindow taskWindow : taskFile.getTaskWindows()) {
      taskWindow.drawHighlighter(editor,true);
    }
    CCCreateCourseArchive.resetTaskFiles(taskFilesCopy);
  }
}
