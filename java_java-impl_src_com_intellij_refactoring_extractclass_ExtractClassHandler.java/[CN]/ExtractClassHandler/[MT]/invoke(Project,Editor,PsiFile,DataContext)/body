{
  final ScrollingModel scrollingModel=editor.getScrollingModel();
  scrollingModel.scrollToCaret(ScrollType.MAKE_VISIBLE);
  final CaretModel caretModel=editor.getCaretModel();
  final int position=caretModel.getOffset();
  final PsiElement element=file.findElementAt(position);
  final PsiMember selectedMember=PsiTreeUtil.getParentOfType(element,PsiMember.class,true);
  if (selectedMember == null) {
    return;
  }
  PsiClass containingClass=selectedMember.getContainingClass();
  if (containingClass == null && selectedMember instanceof PsiClass) {
    containingClass=(PsiClass)selectedMember;
  }
  final String cannotRefactorMessage=getCannotRefactorMessage(containingClass);
  if (cannotRefactorMessage != null) {
    CommonRefactoringUtil.showErrorHint(project,editor,RefactorJBundle.message("cannot.perform.the.refactoring") + cannotRefactorMessage,null,getHelpID());
    return;
  }
  new ExtractClassDialog(containingClass,selectedMember).show();
}
