{
  Collection<? extends ProjectTask> buildTasks=tasksMap.get(ModuleBuildTask.class);
  if (!ContainerUtil.isEmpty(buildTasks)) {
    List<Module> modules=new SmartList<>();
    Boolean isIncrementalBuild=null;
    Boolean includeDependentModules=null;
    Boolean includeRuntimeDependencies=null;
    for (    ProjectTask buildProjectTask : buildTasks) {
      ModuleBuildTask moduleBuildTask=(ModuleBuildTask)buildProjectTask;
      assertModuleBuildSettings(moduleBuildTask,isIncrementalBuild,includeDependentModules,includeRuntimeDependencies);
      modules.add(moduleBuildTask.getModule());
      if (!moduleBuildTask.isIncrementalBuild()) {
        isIncrementalBuild=false;
      }
      if (moduleBuildTask.isIncludeDependentModules()) {
        includeDependentModules=true;
      }
      if (moduleBuildTask.isIncludeRuntimeDependencies()) {
        includeRuntimeDependencies=true;
      }
    }
    CompilerManager compilerManager=CompilerManager.getInstance(project);
    CompileScope scope=createScope(compilerManager,context,modules,includeDependentModules != null,includeRuntimeDependencies != null);
    if (isIncrementalBuild == null) {
      compilerManager.make(scope,compileNotification);
    }
 else {
      compilerManager.compile(scope,compileNotification);
    }
  }
}
