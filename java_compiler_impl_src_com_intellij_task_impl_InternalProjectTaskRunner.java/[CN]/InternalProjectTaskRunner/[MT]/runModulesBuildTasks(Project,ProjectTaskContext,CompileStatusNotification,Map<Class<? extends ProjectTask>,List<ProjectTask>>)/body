{
  Collection<? extends ProjectTask> buildTasks=tasksMap.get(ModuleBuildTask.class);
  if (!ContainerUtil.isEmpty(buildTasks)) {
    List<Module> toMake=new SmartList<>();
    List<Module> toCompile=new SmartList<>();
    for (    ProjectTask buildProjectTask : buildTasks) {
      ModuleBuildTask moduleBuildTask=(ModuleBuildTask)buildProjectTask;
      if (moduleBuildTask.isIncrementalBuild()) {
        toMake.add(moduleBuildTask.getModule());
      }
 else {
        toCompile.add(moduleBuildTask.getModule());
      }
    }
    CompilerManager compilerManager=CompilerManager.getInstance(project);
    if (!toMake.isEmpty()) {
      CompileScope scope=createScope(project,compilerManager,context,toMake);
      compilerManager.make(scope,compileNotification);
    }
    if (!toCompile.isEmpty()) {
      CompileScope scope=createScope(project,compilerManager,context,toCompile);
      compilerManager.compile(scope,compileNotification);
    }
  }
}
