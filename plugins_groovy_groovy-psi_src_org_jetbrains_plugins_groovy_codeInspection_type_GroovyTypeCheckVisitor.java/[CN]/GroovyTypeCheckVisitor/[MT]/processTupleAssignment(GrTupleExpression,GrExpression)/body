{
  GrExpression[] lValues=tupleExpression.getExpressions();
  if (initializer instanceof GrListOrMap) {
    GrExpression[] initializers=((GrListOrMap)initializer).getInitializers();
    for (int i=0; i < lValues.length; i++) {
      GrExpression lValue=lValues[i];
      if (initializers.length <= i)       break;
      GrExpression rValue=initializers[i];
      processAssignmentWithinMultipleAssignment(lValue,rValue,tupleExpression);
    }
  }
 else {
    PsiType type=initializer.getType();
    PsiType rType=extractIterableTypeParameter(type,false);
    for (    GrExpression lValue : lValues) {
      PsiType lType=lValue.getNominalType();
      if (PsiImplUtil.isSpreadAssignment(lValue)) {
        final PsiType argType=extractIterableArg(lType);
        if (argType != null && rType != null) {
          processAssignment(argType,rType,tupleExpression,getExpressionPartToHighlight(lValue));
        }
        return;
      }
      if (lValue instanceof GrReferenceExpression && ((GrReferenceExpression)lValue).resolve() instanceof GrReferenceExpression) {
        return;
      }
      if (lType != null && rType != null) {
        processAssignment(lType,rType,tupleExpression,getExpressionPartToHighlight(lValue));
      }
    }
  }
}
