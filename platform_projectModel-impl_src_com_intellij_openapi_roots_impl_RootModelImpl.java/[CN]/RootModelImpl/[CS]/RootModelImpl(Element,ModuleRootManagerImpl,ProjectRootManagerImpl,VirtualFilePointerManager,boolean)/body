{
  myProjectRootManager=projectRootManager;
  myFilePointerManager=filePointerManager;
  myModuleRootManager=moduleRootManager;
  myModuleLibraryTable=new ModuleLibraryTable(this,myProjectRootManager);
  for (  Element child : element.getChildren(ContentEntryImpl.ELEMENT_NAME)) {
    myContent.add(new ContentEntryImpl(child,this));
  }
  boolean moduleSourceAdded=false;
  for (  Element child : element.getChildren(OrderEntryFactory.ORDER_ENTRY_ELEMENT_NAME)) {
    final OrderEntry orderEntry=OrderEntryFactory.createOrderEntryByElement(child,this,myProjectRootManager);
    if (orderEntry instanceof ModuleSourceOrderEntry) {
      if (moduleSourceAdded)       continue;
      moduleSourceAdded=true;
    }
    myOrderEntries.add(orderEntry);
  }
  if (!moduleSourceAdded) {
    myOrderEntries.add(new ModuleSourceOrderEntryImpl(this));
  }
  myWritable=writable;
  RootModelImpl originalRootModel=moduleRootManager.getRootModel();
  for (  ModuleExtension extension : originalRootModel.myExtensions) {
    ModuleExtension model=extension.getModifiableModel(false);
    model.readExternal(element);
    registerOnDispose(model);
    myExtensions.add(model);
  }
  myConfigurationAccessor=new RootConfigurationAccessor();
}
