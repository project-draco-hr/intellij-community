{
  while (true) {
    while (true) {
      Runnable task;
synchronized (myTasks) {
        if (myTasks.isEmpty())         break;
        task=myTasks.removeFirst();
      }
      task.run();
      if (mySleep > 0) {
        TimeoutUtil.sleep(mySleep);
      }
    }
synchronized (myTasks) {
      if (myToDispose && myTasks.isEmpty()) {
        myDisposed=true;
        return;
      }
      try {
        myTasks.wait();
      }
 catch (      InterruptedException ignored) {
      }
    }
  }
}
