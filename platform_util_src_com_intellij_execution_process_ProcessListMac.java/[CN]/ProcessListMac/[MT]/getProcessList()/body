{
  Process ps;
  try {
    String[] command={"/bin/ps","-a","-x","-o","pid,command"};
    ps=ProcessUtils.createProcess(command,null,null);
  }
 catch (  Exception e) {
    return ProcessInfo.EMPTY_ARRAY;
  }
  List<ProcessInfo> procInfo=ContainerUtil.newArrayList();
  try {
    BufferedReader psOutput=new BufferedReader(new InputStreamReader(ps.getInputStream()));
    try {
      String line;
      while ((line=psOutput.readLine()) != null) {
        line=line.trim();
        int index=line.indexOf(' ');
        if (index != -1) {
          String pidString=line.substring(0,index).trim();
          try {
            int pid=Integer.parseInt(pidString);
            String arg=line.substring(index + 1);
            procInfo.add(new ProcessInfo(pid,arg));
          }
 catch (          NumberFormatException ignored) {
          }
        }
      }
    }
  finally {
      psOutput.close();
    }
  }
 catch (  Exception ignored) {
  }
  ps.destroy();
  return procInfo.isEmpty() ? ProcessInfo.EMPTY_ARRAY : procInfo.toArray(new ProcessInfo[procInfo.size()]);
}
