{
  WorkingCopyFormat format=myVcs.getWorkingCopyFormat(filePath.getIOFile());
  if (!WorkingCopyFormat.UNKNOWN.equals(format) && format.less(WorkingCopyFormat.ONE_DOT_SEVEN)) {
    loadEntriesFile(filePath);
  }
  FileStatus fStatus=SvnStatusConvertor.convertStatus(status);
  final StatusType statusType=status.getContentsStatus();
  if (status.is(StatusType.STATUS_UNVERSIONED,StatusType.UNKNOWN)) {
    final VirtualFile file=filePath.getVirtualFile();
    if (file != null) {
      myChangelistBuilder.processUnversionedFile(file);
    }
  }
 else   if (status.is(StatusType.STATUS_ADDED)) {
    processChangeInList(null,CurrentContentRevision.create(filePath),fStatus,status);
  }
 else   if (status.is(StatusType.STATUS_CONFLICTED,StatusType.STATUS_MODIFIED,StatusType.STATUS_REPLACED) || status.isProperty(StatusType.STATUS_MODIFIED,StatusType.STATUS_CONFLICTED)) {
    processChangeInList(SvnContentRevision.createBaseRevision(myVcs,filePath,status),CurrentContentRevision.create(filePath),fStatus,status);
    checkSwitched(filePath,status,fStatus);
  }
 else   if (status.is(StatusType.STATUS_DELETED)) {
    processChangeInList(SvnContentRevision.createBaseRevision(myVcs,filePath,status),null,fStatus,status);
  }
 else   if (status.is(StatusType.STATUS_MISSING)) {
    myChangelistBuilder.processLocallyDeletedFile(new SvnLocallyDeletedChange(filePath,getState(status)));
  }
 else   if (status.is(StatusType.STATUS_IGNORED)) {
    VirtualFile file=filePath.getVirtualFile();
    if (file == null) {
      file=LocalFileSystem.getInstance().refreshAndFindFileByPath(filePath.getPath());
    }
    if (file == null) {
      LOG.error("No virtual file for ignored file: " + filePath.getPresentableUrl() + ", isNonLocal: "+ filePath.isNonLocal());
    }
 else     if (!myVcs.isWcRoot(filePath)) {
      myChangelistBuilder.processIgnoredFile(filePath.getVirtualFile());
    }
  }
 else   if ((fStatus == FileStatus.NOT_CHANGED || fStatus == FileStatus.SWITCHED) && statusType != StatusType.STATUS_NONE) {
    VirtualFile file=filePath.getVirtualFile();
    if (file != null && FileDocumentManager.getInstance().isFileModified(file)) {
      processChangeInList(SvnContentRevision.createBaseRevision(myVcs,filePath,status),CurrentContentRevision.create(filePath),FileStatus.MODIFIED,status);
    }
 else     if (status.getTreeConflict() != null) {
      myChangelistBuilder.processChange(createChange(SvnContentRevision.createBaseRevision(myVcs,filePath,status),CurrentContentRevision.create(filePath),FileStatus.MODIFIED,status),SvnVcs.getKey());
    }
    checkSwitched(filePath,status,fStatus);
  }
}
