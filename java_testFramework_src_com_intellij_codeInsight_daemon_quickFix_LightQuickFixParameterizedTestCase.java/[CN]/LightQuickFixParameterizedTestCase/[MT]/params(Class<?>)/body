{
  final QuickFixTestCase testCase=((LightQuickFixTestCase)klass.newInstance()).createWrapper();
  final String path=testCase.getBasePath();
  assertNotNull("getBasePath() should not return null!",path);
  PathManagerEx.replaceLookupStrategy(klass,LightQuickFixTestCase.class,com.intellij.testFramework.Parameterized.class);
  String testDataPath=testCase.getTestDataPath();
  final String testDirPath=testDataPath.replace(File.separatorChar,'/') + path;
  File testDir=new File(testDirPath);
  final File[] files=testDir.listFiles(new FilenameFilter(){
    @Override public boolean accept(    File dir,    @NonNls String name){
      return name.startsWith(BEFORE_PREFIX);
    }
  }
);
  if (files == null) {
    fail("Test files not found in " + testDirPath);
  }
  final List<Object[]> result=new ArrayList<Object[]>();
  for (  File file : files) {
    final String testName=file.getName().substring(BEFORE_PREFIX.length());
    result.add(new Object[]{testName,testDataPath});
  }
  return result;
}
