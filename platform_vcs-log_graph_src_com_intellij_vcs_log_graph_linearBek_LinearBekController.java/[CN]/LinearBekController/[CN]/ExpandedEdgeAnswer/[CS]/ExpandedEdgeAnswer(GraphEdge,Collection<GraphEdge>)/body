{
  final Set<GraphChanges.Edge<Integer>> edgeChanges=ContainerUtil.newHashSet();
  edgeChanges.add(new ChangedEdge(expanded.getUpNodeIndex(),expanded.getDownNodeIndex(),true));
  for (  GraphEdge edge : addedEdges) {
    edgeChanges.add(new ChangedEdge(edge.getUpNodeIndex(),edge.getDownNodeIndex(),false));
  }
  myChanges=new GraphChanges<Integer>(){
    @NotNull @Override public Collection<Node<Integer>> getChangedNodes(){
      return Collections.emptySet();
    }
    @NotNull @Override public Collection<Edge<Integer>> getChangedEdges(){
      return edgeChanges;
    }
  }
;
}
