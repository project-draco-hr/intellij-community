{
  final PyExpression qualifier=importRef.getQualifier();
  if (qualifier instanceof PyReferenceExpression) {
    PsiElement qualifierElement=((PyReferenceExpression)qualifier).resolve();
    if (qualifierElement == null)     return null;
    return resolveChild(qualifierElement,referencedName,importRef);
  }
  if (importFrom != null) {
    return resolveChild(importFrom,referencedName,importRef);
  }
  final Module module=ModuleUtil.findModuleForPsiElement(importRef);
  if (module != null) {
    RootPolicy<PsiElement> resolvePolicy=new RootPolicy<PsiElement>(){
      public PsiElement visitModuleSourceOrderEntry(      final ModuleSourceOrderEntry moduleOrderEntry,      final PsiElement value){
        if (value != null)         return value;
        return resolveInRoots(moduleOrderEntry.getRootModel().getContentRoots(),referencedName,importRef);
      }
      public PsiElement visitJdkOrderEntry(      final JdkOrderEntry jdkOrderEntry,      final PsiElement value){
        if (value != null)         return value;
        return resolveInRoots(jdkOrderEntry.getRootFiles(OrderRootType.SOURCES),referencedName,importRef);
      }
    }
;
    return ModuleRootManager.getInstance(module).processOrder(resolvePolicy,null);
  }
 else {
    try {
      for (      OrderEntry entry : ProjectRootManager.getInstance(importRef.getProject()).getFileIndex().getOrderEntriesForFile(importRef.getContainingFile().getVirtualFile())) {
        PsiElement elt=resolveInRoots(entry.getFiles(OrderRootType.CLASSES),referencedName,importRef);
        if (elt != null)         return elt;
      }
    }
 catch (    NullPointerException ex) {
      return null;
    }
  }
  return null;
}
