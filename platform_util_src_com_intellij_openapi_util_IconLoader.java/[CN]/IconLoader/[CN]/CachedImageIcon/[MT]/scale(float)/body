{
  if (scaleFactor == 1f) {
    return this;
  }
  if (scaledIconsCache == null) {
    scaledIconsCache=new LinkedHashMap<Float,Icon>(1){
      @Override public boolean removeEldestEntry(      Map.Entry<Float,Icon> entry){
        return size() > SCALED_ICONS_CACHE_LIMIT;
      }
    }
;
  }
  float effectiveScale=scaleFactor * JBUI.scale(1f);
  Icon result=scaledIconsCache.get(effectiveScale);
  if (result != null) {
    return result;
  }
  boolean needRetinaImage=effectiveScale >= 1.5f || UIUtil.isRetina();
  Image image=needRetinaImage && retinaImageCache != null ? retinaImageCache : ImageLoader.loadFromUrl(myUrl,UIUtil.isUnderDarcula(),needRetinaImage,filter);
  if (image != null) {
    if (needRetinaImage && retinaImageCache == null) {
      retinaImageCache=image;
    }
    int width=(int)(getIconWidth() * scaleFactor);
    int height=(int)(getIconHeight() * scaleFactor);
    final BufferedImage resizedImage=Scalr.resize(ImageUtil.toBufferedImage(image),Scalr.Method.ULTRA_QUALITY,width,height);
    result=getIcon(resizedImage);
    scaledIconsCache.put(effectiveScale,result);
    return result;
  }
  return this;
}
