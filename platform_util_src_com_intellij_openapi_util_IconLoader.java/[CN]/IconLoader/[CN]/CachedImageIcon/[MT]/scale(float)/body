{
  if (scaleFactor == 1f) {
    return this;
  }
  if (scaledIcons == null) {
    scaledIcons=new LinkedHashMap<Float,Icon>(1){
      @Override public boolean removeEldestEntry(      Map.Entry<Float,Icon> entry){
        return size() > SCALED_ICONS_CACHE_LIMIT;
      }
    }
;
  }
  Icon result=scaledIcons.get(scaleFactor * SCALE);
  if (result != null) {
    return result;
  }
  Icon icon=getRealIcon();
  Image image=icon instanceof ImageIcon ? ((ImageIcon)icon).getImage() : ImageLoader.loadFromUrl(myUrl,UIUtil.isUnderDarcula(),(scaleFactor * SCALE) >= 1.5f || UIUtil.isRetina(),filter);
  if (image != null) {
    int width=(int)(getIconWidth() * scaleFactor);
    int height=(int)(getIconHeight() * scaleFactor);
    final BufferedImage resizedImage=Scalr.resize(ImageUtil.toBufferedImage(image),Scalr.Method.ULTRA_QUALITY,width,height);
    result=getIcon(resizedImage);
    scaledIcons.put(scaleFactor * SCALE,result);
    return result;
  }
  return this;
}
