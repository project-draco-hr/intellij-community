{
  final ResolveResultList ret=new ResolveResultList();
  for (  Instruction instruction : instructions) {
    final PsiElement definition=instruction.getElement();
    if (isInnerComprehension(element,definition))     continue;
    if (definition instanceof PyImportedNameDefiner && !(definition instanceof PsiNamedElement)) {
      final PyImportedNameDefiner definer=(PyImportedNameDefiner)definition;
      final List<RatedResolveResult> resolvedResults=definer.multiResolveName(name);
      for (      RatedResolveResult result : resolvedResults) {
        final PsiElement resolved=result.getElement();
        ret.add(new ImportedResolveResult(resolved,getRate(resolved,context),definer));
      }
      if (resolvedResults.isEmpty()) {
        ret.add(new ImportedResolveResult(null,RatedResolveResult.RATE_NORMAL,definer));
      }
 else {
        ret.poke(definer,RatedResolveResult.RATE_LOW);
      }
    }
 else {
      ret.poke(definition,getRate(definition,context));
    }
  }
  final ResolveResultList results=new ResolveResultList();
  for (  RatedResolveResult r : ret) {
    final PsiElement e=r.getElement();
    if (e == element) {
      continue;
    }
    if (element instanceof PyTargetExpression && e != null && PyPsiUtils.isBefore(element,e)) {
      continue;
    }
 else {
      results.add(r);
    }
  }
  return results;
}
