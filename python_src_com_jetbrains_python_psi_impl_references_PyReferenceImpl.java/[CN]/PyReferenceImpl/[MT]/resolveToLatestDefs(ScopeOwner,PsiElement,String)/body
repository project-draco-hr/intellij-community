{
  final ResolveResultList ret=new ResolveResultList();
  final List<ReadWriteInstruction> instructions=PyDefUseUtil.getLatestDefs(owner,name,element,false);
  for (  ReadWriteInstruction instruction : instructions) {
    PsiElement definition=instruction.getElement();
    NameDefiner definer=null;
    if (isInnerComprehension(element,definition))     continue;
    if (definition instanceof NameDefiner && !(definition instanceof PsiNamedElement)) {
      definer=(NameDefiner)definition;
      definition=definer.getElementNamed(name);
    }
    if (definer != null) {
      if (definer instanceof PyImportElement || definer instanceof PyStarImportElement || definer instanceof PyImportedModule) {
        ret.add(new ImportedResolveResult(definition,getRate(definition),Collections.<PsiElement>singletonList(definer)));
      }
 else {
        ret.poke(definition,getRate(definition));
      }
      if (definition != null) {
        ret.poke(definer,RatedResolveResult.RATE_LOW);
      }
    }
 else {
      ret.poke(definition,getRate(definition));
    }
  }
  final ResolveResultList results=new ResolveResultList();
  for (  RatedResolveResult r : ret) {
    final PsiElement e=r.getElement();
    if (e == element) {
      continue;
    }
    if (element instanceof PyTargetExpression && PyPsiUtils.isBefore(element,e)) {
      continue;
    }
 else {
      results.add(r);
    }
  }
  return results;
}
