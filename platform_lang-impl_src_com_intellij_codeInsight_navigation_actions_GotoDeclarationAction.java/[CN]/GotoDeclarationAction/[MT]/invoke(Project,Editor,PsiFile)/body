{
  PsiDocumentManager.getInstance(project).commitAllDocuments();
  try {
    int offset=editor.getCaretModel().getOffset();
    PsiElement[] elements=findAllTargetElements(project,editor,offset);
    FeatureUsageTracker.getInstance().triggerFeatureUsed("navigation.goto.declaration");
    if (elements.length != 1) {
      if (elements.length == 0) {
        PsiElement elementAt=file.findElementAt(TargetElementUtilBase.adjustOffset(file,editor.getDocument(),offset));
        PsiElement parent=elementAt == null ? null : elementAt.getParent();
        if (parent instanceof PsiNameIdentifierOwner && ((PsiNameIdentifierOwner)parent).getNameIdentifier() == elementAt) {
          ShowUsagesAction showUsages=(ShowUsagesAction)ActionManager.getInstance().getAction(ShowUsagesAction.ID);
          RelativePoint popupPosition=JBPopupFactory.getInstance().guessBestPopupLocation(editor);
          showUsages.startFindUsages(parent,popupPosition,editor,100);
          return;
        }
      }
      chooseAmbiguousTarget(editor,offset,elements);
      return;
    }
    PsiElement element=elements[0];
    PsiElement navElement=element.getNavigationElement();
    navElement=TargetElementUtilBase.getInstance().getGotoDeclarationTarget(element,navElement);
    if (navElement != null) {
      gotoTargetElement(navElement);
    }
  }
 catch (  IndexNotReadyException e) {
    DumbService.getInstance(project).showDumbModeNotification("Navigation is not available here during index update");
  }
}
