{
  while (!checkCredentials(project)) {
    final GithubLoginDialog dialog=new GithubLoginDialog(project);
    dialog.show();
    if (!dialog.isOK()) {
      return null;
    }
  }
  final GithubSettings settings=GithubSettings.getInstance();
  final String validPassword=settings.getPassword();
  return accessToGithubWithModalProgress(project,settings.getHost(),new ThrowableComputable<RepositoryInfo,IOException>(){
    @Nullable @Override public RepositoryInfo compute(){
      ProgressManager.getInstance().getProgressIndicator().setText("Extracting detailed info about repository ''" + name + "''");
      return getDetailedRepoInfo(settings.getHost(),settings.getLogin(),validPassword,owner,name);
    }
  }
);
}
