{
  super.visitLiteralExpression(expression);
  final PsiType type=expression.getType();
  if (!ClassUtils.isPrimitiveNumericType(type) || PsiType.CHAR.equals(type)) {
    return;
  }
  if (isSpecialCaseLiteral(expression) || isFinalVariableInitialization(expression)) {
    return;
  }
  if (ignoreInHashCode) {
    final PsiMethod containingMethod=PsiTreeUtil.getParentOfType(expression,PsiMethod.class);
    if (MethodUtils.isHashCode(containingMethod)) {
      return;
    }
  }
  if (ignoreInAnnotations) {
    final boolean insideAnnotation=AnnotationUtil.isInsideAnnotation(expression);
    if (insideAnnotation) {
      return;
    }
  }
  if (ignoreInitialCapacity && isInitialCapacity(expression)) {
    return;
  }
  final PsiField field=PsiTreeUtil.getParentOfType(expression,PsiField.class);
  if (field != null && PsiUtil.isCompileTimeConstant(field)) {
    return;
  }
  final PsiElement parent=expression.getParent();
  if (parent instanceof PsiPrefixExpression) {
    registerError(parent,parent);
  }
 else {
    registerError(expression,expression);
  }
}
