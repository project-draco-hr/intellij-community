{
  super.visitMethodCallExpression(expression);
  final PsiReferenceExpression methodExpression=expression.getMethodExpression();
  @NonNls final String name=methodExpression.getReferenceName();
  if (!"getBytes".equals(name)) {
    return;
  }
  final PsiMethod method=expression.resolveMethod();
  if (method == null) {
    return;
  }
  final PsiParameterList parameterList=method.getParameterList();
  if (parameterList.getParametersCount() == 1) {
    return;
  }
  final PsiClass aClass=method.getContainingClass();
  if (aClass == null) {
    return;
  }
  final String qName=aClass.getQualifiedName();
  if (!CommonClassNames.JAVA_LANG_STRING.equals(qName)) {
    return;
  }
  registerMethodCallError(expression,expression);
}
