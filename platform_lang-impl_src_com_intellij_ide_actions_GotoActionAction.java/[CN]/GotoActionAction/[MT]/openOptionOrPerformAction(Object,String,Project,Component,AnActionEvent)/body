{
  if (processOptionInplace(element,null)) {
    return;
  }
  if (element instanceof OptionDescription) {
    final String configurableId=((OptionDescription)element).getConfigurableId();
    ApplicationManager.getApplication().invokeLater(new Runnable(){
      @Override public void run(){
        ShowSettingsUtilImpl.showSettingsDialog(project,configurableId,enteredText);
      }
    }
);
  }
 else {
    final AnAction action=element instanceof AnAction ? (AnAction)element : ((GotoActionModel.ActionWrapper)element).getAction();
    if (action != null) {
      ApplicationManager.getApplication().invokeLater(new Runnable(){
        @Override public void run(){
          if (component == null || !component.isShowing()) {
            return;
          }
          final Presentation presentation=action.getTemplatePresentation().clone();
          final DataContext context=DataManager.getInstance().getDataContext(component);
          final AnActionEvent event=new AnActionEvent(e == null ? null : e.getInputEvent(),context,ActionPlaces.ACTION_SEARCH,presentation,ActionManager.getInstance(),e == null ? 0 : e.getModifiers());
          if (ActionUtil.lastUpdateAndCheckDumb(action,event,true)) {
            if (action instanceof ActionGroup) {
              JBPopupFactory.getInstance().createActionGroupPopup(presentation.getText(),(ActionGroup)action,context,JBPopupFactory.ActionSelectionAid.SPEEDSEARCH,false).showInBestPositionFor(context);
            }
 else {
              ActionUtil.performActionDumbAware(action,event);
            }
          }
        }
      }
,ModalityState.NON_MODAL);
    }
  }
}
