{
  final ChooseByNamePopup oldPopup=project == null ? null : project.getUserData(ChooseByNamePopup.CHOOSE_BY_NAME_POPUP_IN_PROJECT_KEY);
  if (oldPopup != null) {
    oldPopup.close(false);
  }
  final ChooseByNamePopup popup=new ChooseByNamePopup(project,model,new GotoActionItemProvider(model),oldPopup,initialText,false,initialIndex){
    @NotNull @Override protected Set<Object> filter(    @NotNull Set<Object> elements){
      return super.filter(model.sort(elements));
    }
    @Override protected boolean closeForbidden(    boolean ok){
      if (!ok)       return false;
      Object element=getChosenElement();
      return element instanceof GotoActionModel.MatchedValue && processOptionInplace(((GotoActionModel.MatchedValue)element).value,this) || super.closeForbidden(true);
    }
  }
;
  if (project != null) {
    project.putUserData(ChooseByNamePopup.CHOOSE_BY_NAME_POPUP_IN_PROJECT_KEY,popup);
  }
  popup.addMouseClickListener(new MouseAdapter(){
    @Override public void mouseClicked(    @NotNull MouseEvent e){
      Object element=popup.getSelectionByPoint(e.getPoint());
      if (element instanceof GotoActionModel.MatchedValue) {
        if (processOptionInplace(((GotoActionModel.MatchedValue)element).value,popup)) {
          e.consume();
        }
      }
    }
  }
);
  return popup;
}
