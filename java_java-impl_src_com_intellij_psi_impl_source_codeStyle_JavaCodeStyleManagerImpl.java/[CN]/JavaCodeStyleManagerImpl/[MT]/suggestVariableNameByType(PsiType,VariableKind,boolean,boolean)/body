{
  String longTypeName=skipIndices ? type.getCanonicalText() : getLongTypeName(type);
  CodeStyleSettings.TypeToNameMap map=getMapByVariableKind(variableKind);
  if (map != null && longTypeName != null) {
    if (type.equals(PsiType.NULL)) {
      longTypeName=CommonClassNames.JAVA_LANG_OBJECT;
    }
    String name=map.nameByType(longTypeName);
    if (name != null && isIdentifier(name)) {
      return new String[]{name};
    }
  }
  Collection<String> suggestions=new LinkedHashSet<String>();
  if (!skipIndices) {
    suggestNamesForCollectionInheritors(type,variableKind,suggestions,correctKeywords);
    suggestNamesFromGenericParameters(type,variableKind,suggestions,correctKeywords);
  }
  String typeName=getTypeName(type,!skipIndices);
  if (typeName != null) {
    typeName=normalizeTypeName(typeName);
    ContainerUtil.addAll(suggestions,getSuggestionsByName(typeName,variableKind,type instanceof PsiArrayType,correctKeywords));
  }
  return ArrayUtil.toStringArray(suggestions);
}
