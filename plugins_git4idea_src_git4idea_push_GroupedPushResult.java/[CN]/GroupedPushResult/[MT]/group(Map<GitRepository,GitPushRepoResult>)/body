{
  Map<GitRepository,GitPushRepoResult> successful=ContainerUtil.newHashMap();
  Map<GitRepository,GitPushRepoResult> rejected=ContainerUtil.newHashMap();
  Map<GitRepository,GitPushRepoResult> customRejected=ContainerUtil.newHashMap();
  Map<GitRepository,GitPushRepoResult> errors=ContainerUtil.newHashMap();
  for (  Map.Entry<GitRepository,GitPushRepoResult> entry : results.entrySet()) {
    GitRepository repository=entry.getKey();
    GitPushRepoResult result=entry.getValue();
    if (result.getType() == GitPushRepoResult.Type.REJECTED_NO_FF) {
      rejected.put(repository,result);
    }
 else     if (result.getType() == GitPushRepoResult.Type.ERROR) {
      errors.put(repository,result);
    }
 else     if (result.getType() == GitPushRepoResult.Type.REJECTED_OTHER) {
      customRejected.put(repository,result);
    }
 else {
      successful.put(repository,result);
    }
  }
  return new GroupedPushResult(successful,errors,rejected,customRejected);
}
