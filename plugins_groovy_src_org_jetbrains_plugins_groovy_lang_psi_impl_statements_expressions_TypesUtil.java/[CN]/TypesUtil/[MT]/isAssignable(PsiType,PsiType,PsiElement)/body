{
  if (lType == null || rType == null) {
    return false;
  }
  if (rType instanceof PsiIntersectionType) {
    for (    PsiType child : ((PsiIntersectionType)rType).getConjuncts()) {
      if (isAssignable(lType,child,context)) {
        return true;
      }
    }
    return false;
  }
  if (lType instanceof PsiIntersectionType) {
    for (    PsiType child : ((PsiIntersectionType)lType).getConjuncts()) {
      if (!isAssignable(child,rType,context)) {
        return false;
      }
    }
    return true;
  }
  if (isAssignableWithoutConversions(lType,rType,context)) {
    return true;
  }
  Boolean byConversionInMethodCall=isAssignableByConversion(lType,rType,context,true);
  if (byConversionInMethodCall != null) {
    return byConversionInMethodCall.booleanValue();
  }
  if (lType instanceof PsiPrimitiveType && rType == PsiType.NULL) {
    return false;
  }
  final PsiManager manager=context.getManager();
  final GlobalSearchScope scope=context.getResolveScope();
  lType=boxPrimitiveType(lType,manager,scope);
  rType=boxPrimitiveType(rType,manager,scope);
  if (lType.isAssignableFrom(rType)) {
    return true;
  }
  Boolean byConversion=isAssignableByConversion(lType,rType,context,false);
  if (byConversion != null) {
    return byConversion.booleanValue();
  }
  return false;
}
