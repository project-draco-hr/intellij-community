{
  final RenamePsiElementProcessor elementProcessor=RenamePsiElementProcessor.forElement(element);
  final RenameProcessor renameProcessor=new RenameProcessor(myProject,element,newName,elementProcessor.isToSearchInComments(element),elementProcessor.isToSearchForTextOccurrences(element)){
    @Nullable @Override protected String getRefactoringId(){
      return "refactoring.inplace.rename";
    }
    @Override public void doRun(){
      try {
        super.doRun();
      }
  finally {
        restoreCaretOffsetAfterRename();
      }
    }
  }
;
  for (  AutomaticRenamerFactory factory : Extensions.getExtensions(AutomaticRenamerFactory.EP_NAME)) {
    if (factory.getOptionName() != null && factory.isApplicable(element)) {
      renameProcessor.addRenamerFactory(factory);
    }
  }
  renameProcessor.run();
}
