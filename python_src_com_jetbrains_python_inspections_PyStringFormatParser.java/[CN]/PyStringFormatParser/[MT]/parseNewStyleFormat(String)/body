{
  final List<FormatStringChunk> results=new ArrayList<FormatStringChunk>();
  final Matcher matcher=NEW_STYLE_FORMAT_TOKENS.matcher(s);
  while (matcher.find()) {
    final String group=matcher.group();
    final int start=matcher.start();
    final int end=matcher.end();
    if ("{{".equals(group) || "}}".equals(group)) {
      results.add(new ConstantChunk(start,end));
    }
 else     if (group.startsWith("{") && group.endsWith("}")) {
      final SubstitutionChunk chunk=new SubstitutionChunk(start);
      chunk.setEndIndex(end);
      final int nameStart=start + 1;
      final int nameEnd=StringUtil.indexOfAny(s,"!:.[}",nameStart,end);
      if (nameEnd > 0 && nameStart < nameEnd) {
        final String name=s.substring(nameStart,nameEnd);
        try {
          final int number=Integer.parseInt(name);
          chunk.setPosition(number);
        }
 catch (        NumberFormatException e) {
          chunk.setMappingKey(name);
        }
      }
      results.add(chunk);
    }
 else {
      results.add(new ConstantChunk(start,end));
    }
  }
  return results;
}
