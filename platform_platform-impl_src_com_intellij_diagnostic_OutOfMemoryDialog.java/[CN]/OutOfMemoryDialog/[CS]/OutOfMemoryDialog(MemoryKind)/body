{
  super(false);
  myMemoryKind=memoryKind;
  setTitle(DiagnosticBundle.message("diagnostic.out.of.memory.title"));
  myIconLabel.setIcon(Messages.getErrorIcon());
  myMessageLabel.setText(DiagnosticBundle.message("diagnostic.out.of.memory.error",memoryKind.optionName));
  myMessageLabel.setBorder(IdeBorderFactory.createEmptyBorder(0,0,10,0));
  File file=VMOptions.getWriteFile();
  if (file != null) {
    mySettingsFileHintLabel.setText(DiagnosticBundle.message("diagnostic.out.of.memory.willBeSavedTo",file.getPath()));
    mySettingsFileHintLabel.setBorder(IdeBorderFactory.createEmptyBorder(10,0,0,0));
  }
 else {
    mySettingsFileHintLabel.setVisible(false);
    myHeapSizeField.setEnabled(false);
    myPermGenSizeField.setEnabled(false);
    myCodeCacheSizeField.setEnabled(false);
  }
  myContinueAction=new DialogWrapperAction(DiagnosticBundle.message("diagnostic.out.of.memory.continue")){
    @Override protected void doAction(    ActionEvent e){
      save();
      close(0);
    }
  }
;
  myShutdownAction=new DialogWrapperAction(IdeBundle.message("ide.shutdown.action")){
    @Override protected void doAction(    ActionEvent e){
      save();
      System.exit(Main.OUT_OF_MEMORY);
    }
  }
;
  myShutdownAction.putValue(DialogWrapper.DEFAULT_ACTION,true);
  configControls(MemoryKind.HEAP,myHeapSizeLabel,myHeapSizeField,myHeapUnitsLabel,myHeapCurrentValueLabel);
  configControls(MemoryKind.PERM_GEN,myPermGenSizeLabel,myPermGenSizeField,myPermGenUnitsLabel,myPermGenCurrentValueLabel);
  configControls(MemoryKind.CODE_CACHE,myCodeCacheSizeLabel,myCodeCacheSizeField,myCodeCacheUnitsLabel,myCodeCacheCurrentValueLabel);
  init();
}
