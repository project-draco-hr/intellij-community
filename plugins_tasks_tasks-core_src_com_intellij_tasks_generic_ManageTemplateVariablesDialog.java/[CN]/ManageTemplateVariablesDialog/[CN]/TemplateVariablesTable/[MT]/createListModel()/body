{
  final ColumnInfo name=new ElementsColumnInfoBase<TemplateVariable>("Name"){
    @Nullable @Override protected String getDescription(    final TemplateVariable templateVariable){
      return templateVariable.getDescription();
    }
    @Nullable @Override public String valueOf(    final TemplateVariable templateVariable){
      return templateVariable.getName();
    }
    @Override public boolean isCellEditable(    TemplateVariable templateVariable){
      return !templateVariable.getIsPredefined();
    }
    @Override public void setValue(    TemplateVariable templateVariable,    String s){
      if (s.equals(valueOf(templateVariable))) {
        return;
      }
      templateVariable.setName(s);
      setModified();
    }
  }
;
  final ColumnInfo value=new ElementsColumnInfoBase<TemplateVariable>("Value"){
    @Nullable @Override public String valueOf(    TemplateVariable templateVariable){
      return templateVariable.getValue();
    }
    @Override public boolean isCellEditable(    TemplateVariable templateVariable){
      return !templateVariable.getIsPredefined();
    }
    @Override public void setValue(    TemplateVariable templateVariable,    String s){
      templateVariable.setValue(s);
      setModified();
    }
    @Override public TableCellRenderer getRenderer(    TemplateVariable variable){
      if (variable.getIsHidden()) {
        return new TableCellRenderer(){
          @Override public Component getTableCellRendererComponent(          JTable table,          Object value,          boolean isSelected,          boolean hasFocus,          int row,          int column){
            return new JPasswordField(value.toString());
          }
        }
;
      }
      return super.getRenderer(variable);
    }
    @Nullable @Override public TableCellEditor getEditor(    final TemplateVariable variable){
      if (variable.getIsHidden()) {
        return new AbstractTableCellEditor(){
          private JPasswordField myPasswordField;
          @Override public Component getTableCellEditorComponent(          JTable table,          Object value,          boolean isSelected,          int row,          int column){
            myPasswordField=new JPasswordField(variable.getValue());
            return myPasswordField;
          }
          @Override public Object getCellEditorValue(){
            return myPasswordField.getText();
          }
        }
;
      }
      return super.getEditor(variable);
    }
    @Nullable @Override protected String getDescription(    TemplateVariable templateVariable){
      return templateVariable.getDescription();
    }
  }
;
  final ColumnInfo isShownOnFirstTab=new ColumnInfo<TemplateVariable,Boolean>("Show on first tab"){
    @Nullable @Override public Boolean valueOf(    TemplateVariable o){
      return o.getIsShownOnFirstTab();
    }
    @Override public void setValue(    TemplateVariable variable,    Boolean value){
      variable.setIsShownOnFirstTab(value);
      setModified();
    }
    @Override public Class getColumnClass(){
      return Boolean.class;
    }
    @Override public boolean isCellEditable(    TemplateVariable variable){
      return !variable.getIsPredefined();
    }
    @Nullable @Override public String getTooltipText(){
      return "Whether this template variable will be shown in 'General tab'";
    }
  }
;
  final ColumnInfo isHidden=new ColumnInfo<TemplateVariable,Boolean>("Hide"){
    @Nullable @Override public Boolean valueOf(    TemplateVariable o){
      return o.getIsHidden();
    }
    @Override public void setValue(    TemplateVariable variable,    Boolean value){
      variable.setIsHidden(value);
      setModified();
      TemplateVariablesTable.this.refreshValues();
    }
    @Override public Class getColumnClass(){
      return Boolean.class;
    }
    @Override public boolean isCellEditable(    TemplateVariable variable){
      return !variable.getIsPredefined();
    }
    @Nullable @Override public String getTooltipText(){
      return "Whether this template variable will be hidden like password field";
    }
  }
;
  return new ListTableModel((new ColumnInfo[]{name,value,isShownOnFirstTab,isHidden}));
}
