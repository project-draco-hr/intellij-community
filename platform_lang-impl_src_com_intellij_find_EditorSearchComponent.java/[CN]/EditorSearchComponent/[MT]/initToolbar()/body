{
  DefaultActionGroup actionGroup=new DefaultActionGroup("search bar",false);
  actionGroup.add(new PrevOccurrenceAction(this,mySearchFieldGetter));
  actionGroup.add(new NextOccurrenceAction(this,mySearchFieldGetter));
  actionGroup.add(new AddOccurrenceAction(this));
  actionGroup.add(new RemoveOccurrenceAction(this));
  actionGroup.add(new SelectAllAction(this));
  actionGroup.add(new FindAllAction(this));
  actionGroup.add(new ToggleMultiline(this));
  myMatchInfoLabel=new JLabel(){
    @Override public Font getFont(){
      Font font=super.getFont();
      return font != null ? font.deriveFont(Font.BOLD) : null;
    }
  }
;
  myStateLabel=new JLabel("",SwingConstants.RIGHT);
  myClickToHighlightLabel=new LinkLabel("Click to highlight",null,new LinkListener(){
    @Override public void linkSelected(    LinkLabel aSource,    Object aLinkData){
      setMatchesLimit(Integer.MAX_VALUE);
      updateResults(true);
    }
  }
);
  myClickToHighlightLabel.setVisible(false);
  myActionsToolbar=ActionManager.getInstance().createActionToolbar(ActionPlaces.EDITOR_TOOLBAR,actionGroup,true);
  myActionsToolbar.setSecondaryActionsTooltip("More Options(" + ShowMoreOptions.SHORT_CUT + ")");
  actionGroup.addAction(new ToggleMatchCase(this)).setAsSecondary(true);
  actionGroup.addAction(new ToggleRegex(this)).setAsSecondary(true);
  actionGroup.addAction(new ToggleWholeWordsOnlyAction(this)).setAsSecondary(true);
  actionGroup.addAction(new Separator()).setAsSecondary(true);
  actionGroup.addAction(new ToggleInCommentsAction(this)).setAsSecondary(true);
  actionGroup.addAction(new ToggleInLiteralsOnlyAction(this)).setAsSecondary(true);
  actionGroup.addAction(new ToggleExceptCommentsAction(this)).setAsSecondary(true);
  actionGroup.addAction(new ToggleExceptLiteralsAction(this)).setAsSecondary(true);
  actionGroup.addAction(new ToggleExceptCommentsAndLiteralsAction(this)).setAsSecondary(true);
  actionGroup.addAction(new Separator()).setAsSecondary(true);
  actionGroup.addAction(new TogglePreserveCaseAction(this)).setAsSecondary(true);
  actionGroup.addAction(new ToggleSelectionOnlyAction(this)).setAsSecondary(true);
class MyCustomComponentDoNothingAction extends AnAction implements CustomComponentAction {
    private final JComponent c;
    MyCustomComponentDoNothingAction(    JComponent c){
      this.c=c;
      c.setBorder(IdeBorderFactory.createEmptyBorder(new Insets(0,10,0,0)));
    }
    @Override public void actionPerformed(    AnActionEvent e){
    }
    @Override public JComponent createCustomComponent(    Presentation presentation){
      return c;
    }
  }
  actionGroup.add(new MyCustomComponentDoNothingAction(myMatchInfoLabel));
  actionGroup.add(new MyCustomComponentDoNothingAction(myClickToHighlightLabel));
  actionGroup.add(new MyCustomComponentDoNothingAction(myStateLabel));
  myActionsToolbar.setLayoutPolicy(ActionToolbar.AUTO_LAYOUT_POLICY);
  myToolbarComponent=myActionsToolbar.getComponent();
  myToolbarComponent.setBorder(null);
  myToolbarComponent.setOpaque(false);
}
