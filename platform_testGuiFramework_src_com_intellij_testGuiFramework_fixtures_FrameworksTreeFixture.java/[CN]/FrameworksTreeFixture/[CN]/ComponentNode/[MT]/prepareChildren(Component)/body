{
  if (!(component instanceof FrameworksTree))   return null;
  Vector<ComponentNode> result=new Vector<ComponentNode>();
  final Tree tree=(Tree)component;
  final int rowCount=tree.getRowCount();
  for (int i=0; i < rowCount; i++) {
    final TreePath treePath=tree.getPathForRow(i);
    final Rectangle rowBounds=tree.getPathBounds(treePath);
    final DefaultMutableTreeNode node=(DefaultMutableTreeNode)treePath.getPathComponent(1);
    if (component instanceof ProjectViewTree) {
      final String cmpText=treePath.getLastPathComponent().toString();
      ProjectViewElement projectViewElement=new ProjectViewElement(tree,node.getClass(),cmpText);
      projectViewElement.setBounds(rowBounds);
      projectViewElement.setVisible(true);
      result.add(new ComponentNode(projectViewElement));
    }
 else     if (component instanceof FrameworksTree) {
      FrameworksTree fTree=(FrameworksTree)component;
      final FrameworkSupportNodeBase fsnb=(FrameworkSupportNodeBase)treePath.getLastPathComponent();
      FrameworkSupportElement frameworkSupportElement=new FrameworkSupportElement(tree,node.getClass(),fsnb.getUserObject().getPresentableName(),fsnb instanceof FrameworkSupportNode,fTree);
      frameworkSupportElement.setBounds(rowBounds);
      frameworkSupportElement.setVisible(true);
      result.add(new ComponentNode(frameworkSupportElement));
    }
  }
  return result;
}
