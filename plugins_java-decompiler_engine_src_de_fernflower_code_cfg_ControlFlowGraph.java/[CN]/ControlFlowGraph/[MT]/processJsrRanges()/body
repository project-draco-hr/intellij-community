{
  List<Object[]> lstJsrAll=new ArrayList<Object[]>();
  for (  Entry<BasicBlock,BasicBlock> ent : subroutines.entrySet()) {
    BasicBlock jsr=ent.getKey();
    BasicBlock ret=ent.getValue();
    lstJsrAll.add(new Object[]{jsr,getJsrRange(jsr,ret),ret});
  }
  List<Object[]> lstJsr=new ArrayList<Object[]>();
  for (  Object[] arr : lstJsrAll) {
    int i=0;
    for (; i < lstJsr.size(); i++) {
      Object[] arrJsr=lstJsr.get(i);
      if (((HashSet<BasicBlock>)arrJsr[1]).contains(arr[0])) {
        break;
      }
    }
    lstJsr.add(i,arr);
  }
  for (int i=0; i < lstJsr.size(); i++) {
    Object[] arr=(Object[])lstJsr.get(i);
    HashSet<BasicBlock> set=(HashSet<BasicBlock>)arr[1];
    for (int j=i + 1; j < lstJsr.size(); j++) {
      Object[] arr1=(Object[])lstJsr.get(j);
      HashSet<BasicBlock> set1=(HashSet<BasicBlock>)arr1[1];
      if (!set.contains(arr1[0]) && !set1.contains(arr[0])) {
        HashSet<BasicBlock> setc=new HashSet<BasicBlock>(set);
        setc.retainAll(set1);
        if (!setc.isEmpty()) {
          splitJsrRange((BasicBlock)arr[0],(BasicBlock)arr[2],setc);
          return 1;
        }
      }
    }
  }
  return 0;
}
