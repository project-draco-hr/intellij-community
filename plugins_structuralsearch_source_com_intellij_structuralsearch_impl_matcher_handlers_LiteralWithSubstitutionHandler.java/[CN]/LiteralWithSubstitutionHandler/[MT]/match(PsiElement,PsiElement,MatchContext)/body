{
  final String text=RegExpPredicate.getMeaningfulText(matchedNode);
  int offset=matchedNode.getText().indexOf(text);
  if (matcher == null) {
    matcher=Pattern.compile(matchExpression).matcher(text);
  }
 else {
    matcher.reset(text);
  }
  while (matcher.find()) {
    for (int i=0; i < handlers.size(); ++i) {
      SubstitutionHandler handler=handlers.get(i);
      if (!handler.handle(matchedNode,offset + matcher.start(i + 1),offset + matcher.end(i + 1),context)) {
        return false;
      }
    }
    return true;
  }
  return false;
}
