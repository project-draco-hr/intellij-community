{
  PyExpression[] expressions=node.getExpressions();
  assert(expressions != null);
  if (expressions.length < 2) {
    return;
  }
  VirtualFile virtualFile=node.getContainingFile().getVirtualFile();
  if (virtualFile != null) {
    if (LanguageLevel.forFile(virtualFile).isPy3K()) {
      if (expressions.length == 3) {
        registerProblem(node,"Python3 not supported such syntax",new ReplaceRaiseStatementQuickFix());
        return;
      }
      PsiElement element=expressions[0].getNextSibling();
      while (element instanceof PsiWhiteSpace) {
        element=element.getNextSibling();
      }
      if (element != null && ",".equals(element.getText())) {
        registerProblem(node,"Python3 not supported such syntax",new ReplaceRaiseStatementQuickFix());
      }
    }
 else {
      if (expressions.length == 2) {
        PsiElement element=expressions[0].getNextSibling();
        while (element instanceof PsiWhiteSpace) {
          element=element.getNextSibling();
        }
        if (element != null && "from".equals(element.getText())) {
          registerProblem(node,"Python2 not supported such syntax");
        }
      }
    }
  }
}
