{
  PyExpression exceptClass=node.getExceptClass();
  if (exceptClass != null && node.getTarget() != null) {
    VirtualFile virtualFile=node.getContainingFile().getVirtualFile();
    if (virtualFile != null) {
      if (LanguageLevel.forFile(virtualFile).isPy3K()) {
        PsiElement element=exceptClass.getNextSibling();
        while (element instanceof PsiWhiteSpace) {
          element=element.getNextSibling();
        }
        if (element != null && ",".equals(element.getText())) {
          registerProblem(node,"Python 3 does not support this syntax",new ReplaceExceptPartQuickFix(true));
        }
      }
    }
  }
}
