{
  if (committables.isEmpty()) {
    return;
  }
  SVNCommitInfo[] results=mySvnVcs.getFactory(format).createCheckinClient().commit(committables,comment);
  final StringBuilder committedRevisions=new StringBuilder();
  for (  SVNCommitInfo result : results) {
    if (result.getErrorMessage() != null) {
      exception.add(new VcsException(result.getErrorMessage().getFullMessage()));
    }
 else     if (result != SVNCommitInfo.NULL && result.getNewRevision() > 0) {
      if (committedRevisions.length() > 0) {
        committedRevisions.append(", ");
      }
      committedRevisions.append(result.getNewRevision());
    }
  }
  if (committedRevisions.length() > 0) {
    reportCommittedRevisions(feedback,committedRevisions.toString());
  }
}
