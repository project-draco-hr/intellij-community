{
  VirtualFile studentFile=copyFile(requestor,parentDir,answerFile);
  if (studentFile == null) {
    return null;
  }
  Document studentDocument=FileDocumentManager.getInstance().getDocument(studentFile);
  if (studentDocument == null) {
    return null;
  }
  if (task == null) {
    task=StudyUtils.getTaskForFile(project,answerFile);
    if (task == null) {
      return null;
    }
    task=task.copy();
  }
  Map<Integer,TaskFile> taskFileSteps=getTaskFileSteps(task,answerFile.getName());
  TaskFile initialTaskFile=taskFileSteps.get(-1);
  if (initialTaskFile == null) {
    return null;
  }
  EduDocumentListener listener=new EduDocumentListener(initialTaskFile,false);
  studentDocument.addDocumentListener(listener);
  Pair<VirtualFile,TaskFile> result=null;
  for (  Map.Entry<Integer,TaskFile> entry : taskFileSteps.entrySet()) {
    Integer index=entry.getKey();
    if (index < stepIndex) {
      continue;
    }
    TaskFile stepTaskFile=entry.getValue();
    if (index == stepIndex) {
      result=Pair.createNonNull(studentFile,stepTaskFile);
    }
    for (    AnswerPlaceholder placeholder : stepTaskFile.getAnswerPlaceholders()) {
      replaceAnswerPlaceholder(project,studentDocument,placeholder);
    }
  }
  studentDocument.removeDocumentListener(listener);
  return result;
}
