{
  Course course=new Course();
  course.setDescription(oldCourse.description);
  course.setName(oldCourse.name);
  course.setAuthors(new String[]{oldCourse.author});
  String updatedCoursePath=FileUtil.join(PathManager.getConfigPath(),"courses",oldCourse.name);
  if (new File(updatedCoursePath).exists()) {
    course.setCourseDirectory(FileUtil.toSystemIndependentName(updatedCoursePath));
  }
  final ArrayList<Lesson> lessons=new ArrayList<Lesson>();
  for (  com.jetbrains.edu.learning.oldCourseFormat.Lesson oldLesson : oldCourse.lessons) {
    final Lesson lesson=new Lesson();
    lesson.setName(oldLesson.name);
    lesson.setIndex(oldLesson.myIndex + 1);
    final ArrayList<Task> tasks=new ArrayList<Task>();
    for (    com.jetbrains.edu.learning.oldCourseFormat.Task oldTask : oldLesson.taskList) {
      final Task task=new Task();
      task.setIndex(oldTask.myIndex + 1);
      task.setName(oldTask.name);
      task.setLesson(lesson);
      final HashMap<String,TaskFile> taskFiles=new HashMap<String,TaskFile>();
      for (      Map.Entry<String,com.jetbrains.edu.learning.oldCourseFormat.TaskFile> entry : oldTask.taskFiles.entrySet()) {
        final TaskFile taskFile=new TaskFile();
        final com.jetbrains.edu.learning.oldCourseFormat.TaskFile oldTaskFile=entry.getValue();
        taskFile.setIndex(oldTaskFile.myIndex);
        taskFile.name=entry.getKey();
        final ArrayList<AnswerPlaceholder> placeholders=new ArrayList<AnswerPlaceholder>();
        for (        TaskWindow window : oldTaskFile.taskWindows) {
          final AnswerPlaceholder placeholder=new AnswerPlaceholder();
          placeholder.setIndex(window.myIndex);
          placeholder.setHint(window.hint);
          placeholder.setLength(window.length);
          placeholder.setLine(window.line);
          placeholder.setPossibleAnswer(window.possibleAnswer);
          placeholder.setStart(window.start);
          placeholders.add(placeholder);
          placeholder.setInitialState(new AnswerPlaceholder.MyInitialState(window.myInitialLine,window.myInitialLength,window.myInitialStart));
          if (setStatus != null) {
            setStatus.fun(Pair.create(placeholder,window.myStatus));
          }
        }
        taskFile.setAnswerPlaceholders(placeholders);
        taskFiles.put(entry.getKey(),taskFile);
      }
      task.taskFiles=taskFiles;
      tasks.add(task);
    }
    lesson.taskList=tasks;
    lessons.add(lesson);
  }
  course.setLessons(lessons);
  course.initCourse(true);
  return course;
}
