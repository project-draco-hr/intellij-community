{
  PsiMethod method=e.resolveMethod();
  if (method == null || !isAnnotatedAsTestOnly(method))   return;
  if (isInsideTestOnlyMethod(e))   return;
  if (isInsideTestClass(e))   return;
  if (isUnderTestSources(e))   return;
  PsiAnnotation anno=findVisibleForTestingAnnotation(method);
  if (anno != null) {
    String modifier=getAccessModifierWithoutTesting(anno);
    if (modifier == null) {
      modifier=method.hasModifierProperty(PsiModifier.PUBLIC) ? PsiModifier.PROTECTED : method.hasModifierProperty(PsiModifier.PROTECTED) ? PsiModifier.PACKAGE_LOCAL : PsiModifier.PRIVATE;
    }
    LightModifierList modList=new LightModifierList(method.getManager(),JavaLanguage.INSTANCE,modifier);
    if (JavaResolveUtil.isAccessible(method,method.getContainingClass(),modList,e,null,null)) {
      return;
    }
  }
  reportProblem(e,h);
}
