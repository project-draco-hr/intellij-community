{
  VirtualFile repositoryRoot=LocalFileSystem.getInstance().refreshAndFindFileByIoFile(dir);
  if (repositoryRoot == null) {
    return;
  }
  final File gitDir=new File(dir,GitUtil.DOT_GIT);
  if (!gitDir.exists()) {
    return;
  }
  Project project=ProjectManager.getInstance().getDefaultProject();
  GitRepository repository=GitRepositoryImpl.getLightInstance(repositoryRoot,project,ServiceManager.getService(project,GitPlatformFacade.class),project);
  repository.update();
  for (  CloudGitDeploymentDetector deploymentDetector : CloudGitDeploymentDetector.EP_NAME.getExtensions()) {
    String applicationName=deploymentDetector.getFirstApplicationName(repository);
    if (applicationName != null) {
      result.add(new CloudGitProjectRoot(deploymentDetector,dir,repositoryRoot,applicationName));
    }
  }
}
