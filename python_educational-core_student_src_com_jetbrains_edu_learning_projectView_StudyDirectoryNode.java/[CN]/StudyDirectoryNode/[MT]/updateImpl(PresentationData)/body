{
  String valueName=myValue.getName();
  StudyTaskManager studyTaskManager=StudyTaskManager.getInstance(myProject);
  Course course=studyTaskManager.getCourse();
  if (course == null) {
    return;
  }
  if (valueName.equals(myProject.getBaseDir().getName())) {
    data.clearText();
    data.setIcon(InteractiveLearningIcons.Course);
    data.addText(course.getName(),new SimpleTextAttributes(SimpleTextAttributes.STYLE_PLAIN,JBColor.BLACK));
  }
 else   if (valueName.contains(EduNames.TASK)) {
    VirtualFile taskVirtualFile=myValue.getVirtualFile();
    VirtualFile lessonVirtualFile=taskVirtualFile.getParent();
    if (lessonVirtualFile != null) {
      Lesson lesson=course.getLesson(lessonVirtualFile.getName());
      if (lesson != null) {
        Task task=lesson.getTask(taskVirtualFile.getName());
        if (task != null) {
          setStudyAttributes(task,data,task.getName());
        }
      }
    }
  }
 else   if (valueName.contains(EduNames.LESSON)) {
    int lessonIndex=Integer.parseInt(valueName.substring(EduNames.LESSON.length())) - 1;
    Lesson lesson=course.getLessons().get(lessonIndex);
    setStudyAttributes(lesson,data,lesson.getName());
    data.setPresentableText(valueName);
  }
 else   if (valueName.contains(EduNames.SANDBOX_DIR)) {
    if (myValue.getParent() != null) {
      final String parentName=myValue.getParent().getName();
      if (!parentName.contains(EduNames.SANDBOX_DIR)) {
        data.setPresentableText(EduNames.SANDBOX_DIR);
        data.setIcon(InteractiveLearningIcons.Sandbox);
      }
    }
  }
  data.setPresentableText(valueName);
}
