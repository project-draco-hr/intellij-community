{
  try {
    PsiElement problem_elt=descriptor.getPsiElement().getParent();
    String item_name=myIdentifier;
    sure(myPyFile);
    sure(item_name);
    sure(CodeInsightUtilBase.preparePsiElementForWrite(myPyFile));
    PyFunctionBuilder builder=new PyFunctionBuilder(item_name);
    PsiElement pe=problem_elt.getParent();
    if (pe instanceof PyCallExpression) {
      PyArgumentList arglist=((PyCallExpression)pe).getArgumentList();
      sure(arglist);
      final PyExpression[] args=arglist.getArguments();
      for (      PyExpression arg : args) {
        if (arg instanceof PyKeywordArgument) {
          builder.parameter(((PyKeywordArgument)arg).getKeyword());
        }
 else         if (arg instanceof PyReferenceExpression) {
          PyReferenceExpression refex=(PyReferenceExpression)arg;
          builder.parameter(refex.getReferencedName());
        }
 else {
          builder.parameter("param");
        }
      }
    }
    PyFunction function=builder.buildFunction(project,LanguageLevel.getDefault());
    function=(PyFunction)myPyFile.add(function);
    showTemplateBuilder(function);
  }
 catch (  IncorrectOperationException ignored) {
    PyUtil.showBalloon(project,PyBundle.message("QFIX.failed.to.add.function"),MessageType.ERROR);
  }
}
