{
  return new DataIndexer<TokenIndexKey,List<Token>,FileContent>(){
    @NotNull public Map<TokenIndexKey,List<Token>> map(    FileContent inputData){
      PsiFile psiFile=inputData.getPsiFile();
      FileViewProvider viewProvider=psiFile.getViewProvider();
      Map<TokenIndexKey,List<Token>> result=new HashMap<TokenIndexKey,List<Token>>(1);
      for (      Language language : viewProvider.getLanguages()) {
        Tokenizer tokenizer=StructuralSearchUtil.getTokenizerForLanguage(language);
        if (tokenizer != null) {
          PsiFile f=viewProvider.getPsi(language);
          if (f != null) {
            List<Token> tokens=tokenizer.tokenize(Arrays.asList(f));
            if (tokens.size() > 0) {
              String path=inputData.getFile().getPath();
              tokens.add(new PathMarkerToken(path));
              TokenIndexKey key=new TokenIndexKey(language.getID(),getBlockId(path));
              result.put(key,tokens);
            }
          }
        }
      }
      return result;
    }
  }
;
}
