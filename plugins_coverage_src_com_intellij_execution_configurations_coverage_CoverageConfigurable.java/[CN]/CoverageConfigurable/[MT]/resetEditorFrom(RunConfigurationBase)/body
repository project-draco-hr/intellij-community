{
  final boolean isJre50;
  if (runConfiguration instanceof CommonJavaRunConfigurationParameters && myVersionDetector.isJre50Configured((CommonJavaRunConfigurationParameters)runConfiguration)) {
    isJre50=true;
  }
 else   if (runConfiguration instanceof ModuleBasedConfiguration) {
    isJre50=myVersionDetector.isModuleJre50Configured((ModuleBasedConfiguration)runConfiguration);
  }
 else {
    isJre50=true;
  }
  myCoverageNotSupportedLabel.setVisible(!isJre50);
  final JavaCoverageEnabledConfiguration configuration=(JavaCoverageEnabledConfiguration)CoverageEnabledConfiguration.getOrCreate(runConfiguration);
  final CoverageRunner runner=configuration.getCoverageRunner();
  if (runner != null) {
    myCoverageRunnerCb.setSelectedItem(new CoverageRunnerItem(runner));
  }
 else {
    final String runnerId=configuration.getRunnerId();
    if (runnerId != null) {
      final CoverageRunnerItem runnerItem=new CoverageRunnerItem(runnerId);
      final DefaultComboBoxModel model=(DefaultComboBoxModel)myCoverageRunnerCb.getModel();
      if (model.getIndexOf(runnerItem) == -1) {
        model.addElement(runnerItem);
      }
      myCoverageRunnerCb.setSelectedItem(runnerItem);
    }
 else {
      myCoverageRunnerCb.setSelectedIndex(0);
    }
  }
  UIUtil.setEnabled(myRunnerPanel,isJre50,true);
  myClassFilterEditor.setFilters(configuration.getCoveragePatterns());
  final boolean isCoverageByTestApplicable=runner != null && runner.isCoverageByTestApplicable();
  myTracingRb.setEnabled(myTracingRb.isEnabled() && isCoverageByTestApplicable);
  mySamplingRb.setSelected(configuration.isSampling() || !isCoverageByTestApplicable);
  myTracingRb.setSelected(!mySamplingRb.isSelected());
  myTrackPerTestCoverageCb.setSelected(configuration.isTrackPerTestCoverage());
  myTrackPerTestCoverageCb.setEnabled(myTracingRb.isEnabled() && myTracingRb.isSelected() && canHavePerTestCoverage());
  myTrackTestSourcesCb.setSelected(configuration.isTrackTestFolders());
}
