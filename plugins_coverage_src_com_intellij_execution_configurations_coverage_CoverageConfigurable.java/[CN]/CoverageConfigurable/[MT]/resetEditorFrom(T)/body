{
  final boolean isJre50=myVersionDetector.isJre50Configured(runConfiguration);
  myCoverageNotSupportedLabel.setVisible(!isJre50);
  myCoverageEnabledCheckbox.setEnabled(isJre50);
  final JavaCoverageEnabledConfiguration configuration=(JavaCoverageEnabledConfiguration)CoverageEnabledConfiguration.getOrCreate(runConfiguration);
  final CoverageRunner runner=configuration.getCoverageRunner();
  if (runner != null) {
    myCoverageRunnerCb.setSelectedItem(new CoverageRunnerItem(runner));
  }
 else {
    final String runnerId=configuration.getRunnerId();
    if (runnerId != null) {
      final CoverageRunnerItem runnerItem=new CoverageRunnerItem(runnerId);
      final DefaultComboBoxModel model=(DefaultComboBoxModel)myCoverageRunnerCb.getModel();
      if (model.getIndexOf(runnerItem) == -1) {
        model.addElement(runnerItem);
      }
      myCoverageRunnerCb.setSelectedItem(runnerItem);
    }
 else {
      myCoverageRunnerCb.setSelectedIndex(0);
    }
  }
  UIUtil.setEnabled(myRunnerPanel,isJre50 && configuration.isCoverageEnabled(),true);
  myCoverageEnabledCheckbox.setSelected(isJre50 && configuration.isCoverageEnabled());
  myClassFilterEditor.setEnabled(myCoverageEnabledCheckbox.isSelected());
  myClassFilterEditor.setFilters(configuration.getCoveragePatterns());
  myTracingRb.setEnabled(myTracingRb.isEnabled() && runner != null && runner.isCoverageByTestApplicable());
  mySamplingRb.setSelected(configuration.isSampling() || !myTracingRb.isEnabled());
  myTracingRb.setSelected(!mySamplingRb.isSelected());
  myTrackPerTestCoverageCb.setSelected(configuration.isTrackPerTestCoverage());
  myTrackPerTestCoverageCb.setEnabled(!mySamplingRb.isSelected() && canHavePerTestCoverage() && runner != null && runner.isCoverageByTestApplicable());
  myTrackTestSourcesCb.setSelected(configuration.isTrackTestFolders());
}
