{
  super.onBeforeDocumentChange(e);
  if (myDiffChanges.isEmpty())   return;
  if (myEditor1 == null || myEditor2 == null)   return;
  Side side;
  if (e.getDocument() == myEditor1.getDocument()) {
    side=Side.LEFT;
  }
 else   if (e.getDocument() == myEditor2.getDocument()) {
    side=Side.RIGHT;
  }
 else {
    LOG.warn("Unknown document changed");
    return;
  }
  int offset1=e.getOffset();
  int offset2=e.getOffset() + e.getOldLength();
  if (e.getOldLength() != 0 && e.getNewLength() != 0 && StringUtil.endsWithChar(e.getOldFragment(),'\n') && StringUtil.endsWithChar(e.getNewFragment(),'\n')) {
    offset2--;
  }
  int line1=e.getDocument().getLineNumber(offset1);
  int line2=e.getDocument().getLineNumber(offset2) + 1;
  int shift=StringUtil.countNewLines(e.getNewFragment()) - StringUtil.countNewLines(e.getOldFragment());
  List<SimpleDiffChange> invalid=new ArrayList<SimpleDiffChange>();
  for (  SimpleDiffChange change : myDiffChanges) {
    if (change.processChange(line1,line2,shift,side)) {
      invalid.add(change);
    }
  }
  if (!invalid.isEmpty()) {
    myDiffChanges.removeAll(invalid);
    myInvalidDiffChanges.addAll(invalid);
  }
}
