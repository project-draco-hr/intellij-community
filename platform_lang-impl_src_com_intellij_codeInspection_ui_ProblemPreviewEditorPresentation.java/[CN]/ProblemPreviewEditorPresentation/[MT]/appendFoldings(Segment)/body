{
  boolean isUpdated=false;
  final int startLine=Math.max(0,myDocument.getLineNumber(toShowRange.getStartOffset()) - 1);
  final int endLine=Math.min(myDocument.getLineCount(),myDocument.getLineNumber(toShowRange.getEndOffset()) + 2);
  for (  PreviewEditorFoldingRegion range : new ArrayList<>(myFoldedRegions)) {
    final boolean startInRegion=inRegion(startLine,range);
    final boolean endInRegion=inRegion(endLine,range);
    if (startInRegion && endInRegion) {
      myFoldedRegions.remove(range);
      if (range.startLine != startLine) {
        myFoldedRegions.add(new PreviewEditorFoldingRegion(range.startLine,startLine));
      }
      if (endLine != range.endLine) {
        myFoldedRegions.add(new PreviewEditorFoldingRegion(endLine,range.endLine));
      }
      return true;
    }
    if (startInRegion) {
      myFoldedRegions.remove(range);
      if (range.startLine != startLine) {
        myFoldedRegions.add(new PreviewEditorFoldingRegion(range.startLine,startLine));
      }
      isUpdated=true;
    }
    if (endInRegion) {
      myFoldedRegions.remove(range);
      if (endLine != range.endLine) {
        myFoldedRegions.add(new PreviewEditorFoldingRegion(endLine,range.endLine));
      }
      return true;
    }
  }
  return isUpdated;
}
