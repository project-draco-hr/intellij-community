{
  PsiElement element=descriptor.getStartElement();
  if (!(element instanceof PsiMethodCallExpression))   return;
  PsiElement countName=((PsiMethodCallExpression)element).getMethodExpression().getReferenceNameElement();
  if (countName == null)   return;
  PsiMethodCallExpression qualifierCall=getQualifierMethodCall((PsiMethodCallExpression)element);
  if (qualifierCall == null)   return;
  PsiMethod qualifier=qualifierCall.resolveMethod();
  if (!isCallOf(qualifier,CommonClassNames.JAVA_UTIL_STREAM_STREAM,FLAT_MAP_METHOD,1))   return;
  PsiElement flatMapName=qualifierCall.getMethodExpression().getReferenceNameElement();
  if (flatMapName == null)   return;
  PsiElement parameter=qualifierCall.getArgumentList().getExpressions()[0];
  if (!FileModificationService.getInstance().preparePsiElementForWrite(element.getContainingFile()))   return;
  PsiElementFactory factory=JavaPsiFacade.getElementFactory(project);
  PsiElement streamCallName=null;
  if (parameter instanceof PsiMethodReferenceExpression) {
    PsiMethodReferenceExpression methodRef=(PsiMethodReferenceExpression)parameter;
    streamCallName=methodRef.getReferenceNameElement();
  }
 else   if (parameter instanceof PsiLambdaExpression) {
    PsiExpression expression=extractLambdaReturnExpression((PsiLambdaExpression)parameter);
    if (expression instanceof PsiMethodCallExpression) {
      streamCallName=((PsiMethodCallExpression)expression).getMethodExpression().getReferenceNameElement();
    }
  }
  if (streamCallName == null || !streamCallName.getText().equals("stream"))   return;
  streamCallName.replace(factory.createIdentifier("size"));
  flatMapName.replace(factory.createIdentifier("mapToLong"));
  countName.replace(factory.createIdentifier("sum"));
  PsiReferenceParameterList parameterList=qualifierCall.getMethodExpression().getParameterList();
  if (parameterList != null) {
    parameterList.delete();
  }
}
