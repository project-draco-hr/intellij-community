{
  GenerationUtil.writeStatement(builder,context,expression,new StatementWriter(){
    @Override public void writeStatement(    StringBuilder builder,    ExpressionContext context){
      if (myExitPoints.contains(expression) && isRealExpression(expression)) {
        writeReturn(builder,context,expression);
      }
 else {
        expression.accept(new ExpressionGenerator(builder,context));
        builder.append(';');
      }
    }
    private boolean isRealExpression(    GrExpression expression){
      final PsiType type=expression.getType();
      if (type == PsiType.VOID)       return false;
      if (type == PsiType.NULL)       return !org.jetbrains.plugins.groovy.lang.psi.util.PsiUtil.isVoidMethodCall(expression);
      return true;
    }
  }
);
}
