{
  final DependencyTreeResolutionListener listener=new DependencyTreeResolutionListener(myConsoleWrapper);
  Collection<MavenExecutionResult> results=doResolveProject(files,new ArrayList<String>(activeProfiles),new ArrayList<String>(inactiveProfiles),Collections.<ResolutionListener>singletonList(listener));
  return ContainerUtil.mapNotNull(results,new Function<MavenExecutionResult,MavenServerExecutionResult>(){
    @Override public MavenServerExecutionResult fun(    MavenExecutionResult result){
      try {
        if (result != null && result.getMavenProject() != null && result.getMavenProject().getFile() != null) {
          return createExecutionResult(result.getMavenProject().getFile(),result,listener.getRootNode());
        }
      }
 catch (      RemoteException e) {
        ExceptionUtil.rethrowAllAsUnchecked(e);
      }
      return null;
    }
  }
);
}
