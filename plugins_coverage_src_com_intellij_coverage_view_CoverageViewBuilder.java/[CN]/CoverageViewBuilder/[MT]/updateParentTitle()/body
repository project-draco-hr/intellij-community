{
  if (myParentTitle == null)   return;
  AbstractTreeNode node=getParentNode();
  if (node instanceof CoverageListNode && node != myTreeStructure.getRootElement()) {
    final Object value=node.getValue();
    final CoverageAnnotator annotator=((CoverageListNode)node).getBundle().getAnnotator(myProject);
    myParentTitle.setText("Coverage Summary for Package \'" + node.toString() + "\': "+ ((JavaCoverageAnnotator)annotator).getPackageCoverageInformationString((PsiPackage)value,null,CoverageDataManager.getInstance(myProject)));
  }
 else {
    final AbstractTreeNode selectedNode=(AbstractTreeNode)getSelectedValue();
    if (selectedNode != null) {
      final Object value=selectedNode.getValue();
      final CoverageAnnotator annotator=((CoverageListNode)selectedNode).getBundle().getAnnotator(myProject);
      myParentTitle.setText("Coverage Summary for \'all classes in scope\': " + ((JavaCoverageAnnotator)annotator).getPackageCoverageInformationString((PsiPackage)value,null,CoverageDataManager.getInstance(myProject)));
    }
  }
}
