{
  final PsiManager manager=refClass.getManager();
  final JavaPsiFacade facade=JavaPsiFacade.getInstance(manager.getProject());
  final PsiResolveHelper helper=facade.getResolveHelper();
  if (manager.areElementsEquivalent(refClass,helper.resolveReferencedClass(referenceText,psiReference))) {
    if (psiReference instanceof PsiJavaCodeReferenceElement) {
      PsiElement parent=psiReference.getParent();
      if (parent instanceof PsiNewExpression || parent.getParent() instanceof PsiNewExpression)       return true;
      if (parent instanceof PsiTypeElement && parent.getParent() instanceof PsiInstanceOfExpression) {
        final PsiClass containingClass=refClass.getContainingClass();
        if (containingClass != null && containingClass.hasTypeParameters()) {
          return false;
        }
      }
    }
    return helper.resolveReferencedVariable(referenceText,psiReference) == null;
  }
  return false;
}
