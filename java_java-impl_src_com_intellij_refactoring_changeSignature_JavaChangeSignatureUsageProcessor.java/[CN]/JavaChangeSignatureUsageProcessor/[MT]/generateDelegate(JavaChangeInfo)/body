{
  final PsiMethod delegate=(PsiMethod)changeInfo.getMethod().copy();
  final PsiClass targetClass=changeInfo.getMethod().getContainingClass();
  LOG.assertTrue(targetClass != null);
  if (targetClass.isInterface() && delegate.getBody() == null) {
    delegate.getModifierList().setModifierProperty(PsiModifier.DEFAULT,true);
  }
  PsiElementFactory factory=JavaPsiFacade.getElementFactory(targetClass.getProject());
  ChangeSignatureProcessor.makeEmptyBody(factory,delegate);
  final PsiCallExpression callExpression=ChangeSignatureProcessor.addDelegatingCallTemplate(delegate,changeInfo.getNewName());
  addDelegateArguments(changeInfo,factory,callExpression);
  targetClass.addBefore(delegate,changeInfo.getMethod());
}
