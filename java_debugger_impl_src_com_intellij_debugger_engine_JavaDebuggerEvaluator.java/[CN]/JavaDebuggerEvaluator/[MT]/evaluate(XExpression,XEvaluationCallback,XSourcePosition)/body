{
  myDebugProcess.getManagerThread().schedule(new DebuggerContextCommandImpl(myDebugProcess.getDebuggerContext()){
    @Override public void threadAction(){
      WatchItemDescriptor descriptor=new WatchItemDescriptor(myDebugProcess.getProject(),TextWithImportsImpl.fromXExpression(expression));
      EvaluationContextImpl evalContext=myStackFrame.getFrameDebuggerContext().createEvaluationContext();
      if (evalContext == null) {
        callback.errorOccurred("Context is not available");
        return;
      }
      JavaDebugProcess process=myDebugProcess.getXdebugProcess();
      if (process != null) {
        callback.evaluated(JavaValue.create(descriptor,evalContext,process.getNodeManager()));
      }
    }
  }
);
}
