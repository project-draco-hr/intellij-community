{
  myDebugProcess.getManagerThread().schedule(new DebuggerContextCommandImpl(myDebugProcess.getDebuggerContext()){
    @Override public Priority getPriority(){
      return Priority.NORMAL;
    }
    @Override public void threadAction(){
      JavaDebugProcess process=myDebugProcess.getXdebugProcess();
      if (process == null) {
        callback.errorOccurred("No debug process");
        return;
      }
      TextWithImports text=TextWithImportsImpl.fromXExpression(expression);
      NodeManagerImpl nodeManager=process.getNodeManager();
      WatchItemDescriptor descriptor=nodeManager.getWatchItemDescriptor(null,text,null);
      EvaluationContextImpl evalContext=myStackFrame.getFrameDebuggerContext().createEvaluationContext();
      if (evalContext == null) {
        callback.errorOccurred("Context is not available");
        return;
      }
      descriptor.setContext(evalContext);
      @SuppressWarnings("ThrowableResultOfMethodCallIgnored") EvaluateException exception=descriptor.getEvaluateException();
      if (exception != null) {
        callback.errorOccurred(exception.getMessage());
        return;
      }
      callback.evaluated(JavaValue.create(null,descriptor,evalContext,nodeManager,true));
    }
  }
);
}
