{
  RootStatement root=method.root;
  StructClass cl=wrapper.getClassStruct();
  Statement firstData=Statements.findFirstData(root);
  if (firstData != null) {
    boolean isInterface=cl.hasModifier(CodeConstants.ACC_INTERFACE);
    while (!firstData.getExprents().isEmpty()) {
      Exprent exprent=firstData.getExprents().get(0);
      boolean found=false;
      if (exprent.type == Exprent.EXPRENT_ASSIGNMENT) {
        AssignmentExprent assignExpr=(AssignmentExprent)exprent;
        if (assignExpr.getLeft().type == Exprent.EXPRENT_FIELD) {
          FieldExprent fExpr=(FieldExprent)assignExpr.getLeft();
          if (fExpr.isStatic() && fExpr.getClassname().equals(cl.qualifiedName) && cl.hasField(fExpr.getName(),fExpr.getDescriptor().descriptorString)) {
            if (isInterface || isExprentIndependent(assignExpr.getRight(),method)) {
              String keyField=InterpreterUtil.makeUniqueKey(fExpr.getName(),fExpr.getDescriptor().descriptorString);
              if (!wrapper.getStaticFieldInitializers().containsKey(keyField)) {
                wrapper.getStaticFieldInitializers().addWithKey(assignExpr.getRight(),keyField);
                firstData.getExprents().remove(0);
                found=true;
              }
            }
          }
        }
      }
      if (!found) {
        break;
      }
    }
  }
}
