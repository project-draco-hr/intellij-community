{
switch (type) {
case RecordType.END_REQUEST:
    int appStatus=buffer.readInt();
  int protocolStatus=buffer.readUnsignedByte();
buffer.skipBytes(3);
if (appStatus != 0 || protocolStatus != ProtocolStatus.REQUEST_COMPLETE.ordinal()) {
LOG.warn("Protocol status " + protocolStatus);
dataBuffers.remove(id);
return new FastCgiResponse(id,null);
}
 else if (protocolStatus == ProtocolStatus.REQUEST_COMPLETE.ordinal()) {
return new FastCgiResponse(id,dataBuffers.remove(id));
}
break;
case RecordType.STDOUT:
ByteBuf data=dataBuffers.get(id);
ByteBuf sliced=buffer.slice(buffer.readerIndex(),contentLength);
if (data == null) {
dataBuffers.put(id,sliced);
}
 else if (data instanceof CompositeByteBuf) {
((CompositeByteBuf)data).addComponent(sliced);
data.writerIndex(data.writerIndex() + sliced.readableBytes());
}
 else {
dataBuffers.put(id,Unpooled.wrappedBuffer(data,sliced));
}
sliced.retain();
buffer.skipBytes(contentLength);
break;
case RecordType.STDERR:
try {
errorOutputConsumer.consume(buffer.toString(buffer.readerIndex(),contentLength,CharsetUtil.UTF_8));
}
 catch (Throwable e) {
LOG.error(e);
}
buffer.skipBytes(contentLength);
break;
default :
LOG.error("Unknown type " + type);
break;
}
return null;
}
