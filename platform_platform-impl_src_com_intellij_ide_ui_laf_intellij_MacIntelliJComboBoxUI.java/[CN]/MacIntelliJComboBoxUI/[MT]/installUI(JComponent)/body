{
  super.installUI(c);
  myEditorBorderChangeListener=new PropertyChangeListener(){
    @Override public void propertyChange(    PropertyChangeEvent evt){
      Object value=evt.getNewValue();
      if (value == ourDefaultEditorBorder)       return;
      ComboBoxEditor editor=((JComboBox)c).getEditor();
      if (editor != null) {
        Component component=editor.getEditorComponent();
        if (component instanceof JComponent) {
          ((JComponent)component).setBorder(ourDefaultEditorBorder);
        }
      }
    }
  }
;
  myEditorChangeListener=new PropertyChangeListener(){
    @Override public void propertyChange(    PropertyChangeEvent evt){
      Object value=evt.getNewValue();
      Object oldEditor=evt.getOldValue();
      if (oldEditor instanceof ComboBoxEditor) {
        Component component=((ComboBoxEditor)oldEditor).getEditorComponent();
        if (component instanceof JComponent) {
          component.removePropertyChangeListener("border",myEditorBorderChangeListener);
        }
      }
      if (value instanceof ComboBoxEditor) {
        Component component=((ComboBoxEditor)value).getEditorComponent();
        if (component instanceof JComponent) {
          JComponent comboBoxEditor=(JComponent)component;
          comboBoxEditor.setBorder(ourDefaultEditorBorder);
          comboBoxEditor.addPropertyChangeListener("border",myEditorBorderChangeListener);
        }
      }
    }
  }
;
  c.addPropertyChangeListener("editor",myEditorChangeListener);
}
