{
  return new BasicComboPopup(myComboBox){
    @Override protected void configurePopup(){
      super.configurePopup();
      setBorderPainted(false);
      setBorder(JBUI.Borders.empty());
      setBackground(Gray.xFF);
    }
    @Override protected void configureList(){
      super.configureList();
      wrapRenderer();
    }
    @Override protected PropertyChangeListener createPropertyChangeListener(){
      final PropertyChangeListener listener=super.createPropertyChangeListener();
      return new PropertyChangeListener(){
        @Override public void propertyChange(        PropertyChangeEvent evt){
          listener.propertyChange(evt);
          if ("renderer".equals(evt.getPropertyName())) {
            wrapRenderer();
          }
        }
      }
;
    }
class ComboBoxRendererWraper implements ListCellRenderer {
      private final ListCellRenderer myRenderer;
      public ComboBoxRendererWraper(      ListCellRenderer renderer){
        myRenderer=renderer;
      }
      BorderLayoutPanel myPanel=JBUI.Panels.simplePanel().withBorder(JBUI.Borders.empty(0,8));
      @Override public Component getListCellRendererComponent(      JList list,      Object value,      int index,      boolean isSelected,      boolean cellHasFocus){
        Component c=myRenderer.getListCellRendererComponent(list,value,index,isSelected,cellHasFocus);
        myPanel.removeAll();
        myPanel.add(c);
        myPanel.setBackground(c.getBackground());
        return myPanel;
      }
    }
    private void wrapRenderer(){
      ListCellRenderer renderer=list.getCellRenderer();
      if (!(renderer instanceof ComboBoxRendererWraper)) {
        list.setCellRenderer(new ComboBoxRendererWraper(renderer));
      }
    }
  }
;
}
