{
  if (rtnode.edgetypes.get(0).intValue() == 0) {
    IfNode ifbranch=rtnode.succs.get(0);
    if (ifbranch.succs.size() == 2) {
      if (ifbranch.succs.get(0).value == rtnode.succs.get(1).value) {
        IfStatement ifparent=(IfStatement)rtnode.value;
        IfStatement ifchild=(IfStatement)ifbranch.value;
        if (ifchild.getFirst().getExprents().isEmpty()) {
          ifparent.getFirst().removeSuccessor(ifparent.getIfEdge());
          ifchild.getFirst().removeSuccessor(ifchild.getIfEdge());
          ifparent.getStats().removeWithKey(ifchild.id);
          if (ifbranch.edgetypes.get(1).intValue() == 1 && ifbranch.edgetypes.get(0).intValue() == 1) {
            ifparent.setIfstat(null);
            StatEdge ifedge=ifchild.getAllSuccessorEdges().get(0);
            ifchild.removeSuccessor(ifedge);
            ifedge.setSource(ifparent.getFirst());
            ifparent.getFirst().addSuccessor(ifedge);
            ifparent.setIfEdge(ifedge);
          }
 else {
            throw new RuntimeException("inconsistent if structure!");
          }
          IfExprent statexpr=ifparent.getHeadexprent();
          List<Exprent> lstOperands=new ArrayList<Exprent>();
          lstOperands.add(statexpr.getCondition());
          lstOperands.add(new FunctionExprent(FunctionExprent.FUNCTION_BOOLNOT,Arrays.asList(new Exprent[]{ifchild.getHeadexprent().getCondition()})));
          statexpr.setCondition(new FunctionExprent(FunctionExprent.FUNCTION_CADD,lstOperands));
          return true;
        }
      }
    }
  }
  return false;
}
