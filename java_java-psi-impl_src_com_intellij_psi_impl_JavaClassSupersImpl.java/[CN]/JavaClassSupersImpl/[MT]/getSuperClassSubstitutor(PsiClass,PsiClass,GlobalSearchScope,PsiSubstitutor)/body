{
  if (InheritanceImplUtil.hasObjectQualifiedName(superClass))   return PsiSubstitutor.EMPTY;
  if (superClass instanceof InferenceVariable && !(derivedClass instanceof PsiTypeParameter)) {
    for (    PsiType lowerBound : ((InferenceVariable)superClass).getBounds(InferenceBound.LOWER)) {
      if (lowerBound instanceof PsiClassType) {
        final PsiClassType.ClassResolveResult result=((PsiClassType)lowerBound).resolveGenerics();
        final PsiClass boundClass=result.getElement();
        if (boundClass != null && boundClass.equals(derivedClass)) {
          final PsiSubstitutor substitutor=getSuperSubstitutorWithCaching(boundClass,derivedClass,scope,result.getSubstitutor());
          if (substitutor != null) {
            return composeSubstitutors(derivedSubstitutor,substitutor,boundClass);
          }
        }
      }
    }
  }
  return derivedClass instanceof PsiTypeParameter ? processTypeParameter((PsiTypeParameter)derivedClass,scope,superClass,ContainerUtil.<PsiTypeParameter>newTroveSet(),derivedSubstitutor) : getSuperSubstitutorWithCaching(superClass,derivedClass,scope,derivedSubstitutor);
}
