{
  final SearchTextFieldWithStoredHistory textFilter=new SearchTextFieldWithStoredHistory(VCS_LOG_TEXT_FILTER_HISTORY){
    @Override protected void onFieldCleared(){
      myFilterModel.setFilter(null);
    }
    @Override public Dimension getPreferredSize(){
      Dimension preferredSize=super.getPreferredSize();
      return new Dimension(preferredSize.width,UIUtil.isUnderWindowsLookAndFeel() ? preferredSize.height : getSearchFieldSize());
    }
  }
;
  textFilter.setText(myFilterModel.getText());
  textFilter.getTextEditor().addActionListener(new ActionListener(){
    @Override public void actionPerformed(    @NotNull ActionEvent e){
      myFilterModel.setFilter(new VcsLogTextFilterImpl(textFilter.getText()));
      textFilter.addCurrentTextToHistory();
    }
  }
);
  textFilter.addDocumentListener(new DocumentAdapter(){
    @Override protected void textChanged(    DocumentEvent e){
      try {
        myFilterModel.setUnsavedText(e.getDocument().getText(0,e.getDocument().getLength()));
      }
 catch (      BadLocationException ex) {
        LOG.error(ex);
      }
    }
  }
);
  textFilter.setBorder(IdeBorderFactory.createEmptyBorder());
  return textFilter;
}
