{
  ArrayList<CompilerMessage> messages=new ArrayList<CompilerMessage>(compilerMessages);
  final StringBuffer unparsedBuffer=getStdErr();
  if (unparsedBuffer.length() != 0) {
    String msg=unparsedBuffer.toString();
    if (msg.contains(GroovyRtConstants.NO_GROOVY)) {
      messages.add(reportNoGroovy());
    }
 else {
      messages.add(new CompilerMessage("Groovyc",BuildMessage.Kind.INFO,"While compiling " + myChunk.getPresentableShortName() + ":"+ msg));
    }
  }
  if (myExitCode != 0) {
    for (    CompilerMessage message : messages) {
      if (message.getKind() == BuildMessage.Kind.ERROR) {
        return messages;
      }
    }
    messages.add(new CompilerMessage("Groovyc",BuildMessage.Kind.ERROR,"Internal groovyc error: code " + myExitCode));
  }
  return messages;
}
