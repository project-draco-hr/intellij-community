{
  final String prefix;
  if (myFormatter.getSettings().JD_LEADING_ASTERISKS_ARE_ENABLED) {
    prefix=indent + " * ";
  }
 else {
    prefix=indent;
  }
  StringBuilder sb=new StringBuilder();
  int start=sb.length();
  if (!isNull(myDescription)) {
    sb.append(prefix);
    sb.append(myFormatter.getParser().formatJDTagDescription(myDescription,prefix));
    if (myFormatter.getSettings().JD_ADD_BLANK_AFTER_DESCRIPTION) {
      sb.append(prefix);
      sb.append('\n');
    }
  }
  generateSpecial(prefix,sb);
  if (!isNull(myUnknownList) && myFormatter.getSettings().JD_KEEP_INVALID_TAGS) {
    for (    String aUnknownList : myUnknownList) {
      sb.append(prefix);
      sb.append(myFormatter.getParser().formatJDTagDescription(aUnknownList,prefix));
    }
  }
  if (!isNull(mySeeAlsoList)) {
    JDTag tag=JDTag.SEE;
    for (    String aSeeAlsoList : mySeeAlsoList) {
      sb.append(prefix);
      sb.append(tag.getWithEndWhitespace());
      StringBuilder tagDescription=myFormatter.getParser().formatJDTagDescription(aSeeAlsoList,prefix,true,tag.getDescriptionPrefix(prefix).length());
      sb.append(tagDescription);
    }
  }
  if (!isNull(mySince)) {
    JDTag tag=JDTag.SINCE;
    sb.append(prefix);
    sb.append(tag.getWithEndWhitespace());
    StringBuilder tagDescription=myFormatter.getParser().formatJDTagDescription(mySince,prefix,true,tag.getDescriptionPrefix(prefix).length());
    sb.append(tagDescription);
  }
  if (myDeprecated != null) {
    JDTag tag=JDTag.DEPRECATED;
    sb.append(prefix);
    sb.append(tag.getWithEndWhitespace());
    StringBuilder tagDescription=myFormatter.getParser().formatJDTagDescription(myDeprecated,prefix,true,tag.getDescriptionPrefix(prefix).length());
    sb.append(tagDescription);
  }
  if (sb.length() == start)   return null;
  int nlen=sb.length() - prefix.length() - 1;
  if (sb.substring(nlen,sb.length()).equals(prefix + "\n")) {
    sb.delete(nlen,sb.length());
  }
  if (myMultiLineComment && myFormatter.getSettings().JD_DO_NOT_WRAP_ONE_LINE_COMMENTS || !myFormatter.getSettings().JD_DO_NOT_WRAP_ONE_LINE_COMMENTS || sb.indexOf("\n") != sb.length() - 1) {
    sb.insert(0,myFirstLine + '\n');
    sb.append(indent);
  }
 else {
    sb.replace(0,prefix.length(),"/** ");
    sb.deleteCharAt(sb.length() - 1);
  }
  sb.append(' ').append(myEndLine);
  return sb.toString();
}
