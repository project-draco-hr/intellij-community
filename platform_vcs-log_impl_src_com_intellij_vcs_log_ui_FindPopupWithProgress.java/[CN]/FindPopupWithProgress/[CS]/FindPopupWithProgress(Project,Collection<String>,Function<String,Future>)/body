{
  myFunction=function;
  myTextField=new TextFieldWithProgress(project,variants){
    @Override public void onOk(){
      if (myFuture == null) {
        final Future future=myFunction.fun(getText().trim());
        myFuture=future;
        showProgress();
        ApplicationManager.getApplication().executeOnPooledThread(new Runnable(){
          @Override public void run(){
            try {
              future.get();
              ok();
            }
 catch (            CancellationException ex) {
              cancel();
            }
catch (            InterruptedException ex) {
              cancel();
            }
catch (            ExecutionException ex) {
              LOG.error(ex);
              cancel();
            }
          }
        }
);
      }
    }
  }
;
  myPopup=JBPopupFactory.getInstance().createComponentPopupBuilder(myTextField,myTextField.getPreferableFocusComponent()).setCancelOnClickOutside(true).setCancelOnWindowDeactivation(true).setCancelKeyEnabled(true).setRequestFocus(true).createPopup();
  myPopup.addListener(new JBPopupListener.Adapter(){
    @Override public void onClosed(    LightweightWindowEvent event){
      if (!event.isOk()) {
        if (myFuture != null) {
          myFuture.cancel(false);
          myFuture=null;
        }
      }
    }
  }
);
  final JBTextField field=new JBTextField(20);
  final Dimension size=field.getPreferredSize();
  final Insets insets=myTextField.getBorder().getBorderInsets(myTextField);
  size.height+=6 + insets.top + insets.bottom;
  size.width+=4 + insets.left + insets.right;
  myPopup.setSize(size);
}
