{
  SearchScope scope=queryParameters.getScope();
  for (  QueryExecutor executor : Extensions.getExtensions(ClassesWithAnnotatedMembersSearch.EP_NAME)) {
    if (executor instanceof ScopedQueryExecutor) {
      scope=scope.intersectWith(GlobalSearchScope.notScope(((ScopedQueryExecutor)executor).getScope(queryParameters)));
    }
  }
  final Set<PsiClass> processed=new HashSet<PsiClass>();
  AnnotatedElementsSearch.searchPsiMembers(queryParameters.getAnnotationClass(),scope).forEach(new Processor<PsiMember>(){
    @Override public boolean process(    PsiMember member){
      PsiClass psiClass;
      AccessToken token=ReadAction.start();
      try {
        psiClass=member instanceof PsiClass ? (PsiClass)member : member.getContainingClass();
      }
  finally {
        token.finish();
      }
      if (psiClass != null && processed.add(psiClass)) {
        consumer.process(psiClass);
      }
      return true;
    }
  }
);
}
