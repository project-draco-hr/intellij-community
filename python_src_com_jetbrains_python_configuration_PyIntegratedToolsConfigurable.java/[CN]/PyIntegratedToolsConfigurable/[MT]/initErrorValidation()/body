{
  final FacetErrorPanel facetErrorPanel=new FacetErrorPanel();
  myErrorPanel.add(facetErrorPanel.getComponent(),BorderLayout.CENTER);
  facetErrorPanel.getValidatorsManager().registerValidator(new FacetEditorValidator(){
    @Override public ValidationResult check(){
      Module[] modules=ModuleManager.getInstance(myProject).getModules();
      if (modules.length == 0)       return ValidationResult.OK;
      final Sdk sdk=PythonSdkType.findPythonSdk(modules[0]);
      if (sdk != null) {
        final Object selectedItem=myTestRunnerComboBox.getSelectedItem();
        if (PythonTestConfigurationsModel.PY_TEST_NAME.equals(selectedItem)) {
          if (!VFSTestFrameworkListener.getInstance().isPyTestInstalled(sdk)) {
            return new ValidationResult(PyBundle.message("runcfg.testing.no.test.framework","py.test"),createQuickFix(sdk,facetErrorPanel,PyNames.PY_TEST));
          }
        }
 else         if (PythonTestConfigurationsModel.PYTHONS_NOSETEST_NAME.equals(selectedItem)) {
          if (!VFSTestFrameworkListener.getInstance().isNoseTestInstalled(sdk)) {
            return new ValidationResult(PyBundle.message("runcfg.testing.no.test.framework","nosetest"),createQuickFix(sdk,facetErrorPanel,PyNames.NOSE_TEST));
          }
        }
 else         if (PythonTestConfigurationsModel.PYTHONS_ATTEST_NAME.equals(selectedItem)) {
          if (!VFSTestFrameworkListener.getInstance().isAtTestInstalled(sdk)) {
            return new ValidationResult(PyBundle.message("runcfg.testing.no.test.framework","attest"),createQuickFix(sdk,facetErrorPanel,PyNames.AT_TEST));
          }
        }
      }
      return ValidationResult.OK;
    }
  }
,myTestRunnerComboBox);
  facetErrorPanel.getValidatorsManager().validate();
}
