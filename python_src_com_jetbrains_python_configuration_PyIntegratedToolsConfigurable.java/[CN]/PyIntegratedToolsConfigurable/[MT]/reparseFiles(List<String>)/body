{
  final List<VirtualFile> filesToReparse=Lists.newArrayList();
  ProjectRootManager.getInstance(myProject).getFileIndex().iterateContent(new ContentIterator(){
    @Override public boolean processFile(    VirtualFile fileOrDir){
      if (!fileOrDir.isDirectory() && extensions.contains(fileOrDir.getExtension())) {
        filesToReparse.add(fileOrDir);
      }
      return true;
    }
  }
);
  FileContentUtilCore.reparseFiles(filesToReparse);
  ApplicationManager.getApplication().runWriteAction(new Runnable(){
    @Override public void run(){
      for (      Editor editor : EditorFactory.getInstance().getAllEditors()) {
        if (editor instanceof EditorEx && editor.getProject() == myProject) {
          final VirtualFile vFile=((EditorEx)editor).getVirtualFile();
          if (vFile != null) {
            final EditorHighlighter highlighter=EditorHighlighterFactory.getInstance().createEditorHighlighter(myProject,vFile);
            ((EditorEx)editor).setHighlighter(highlighter);
          }
        }
      }
    }
  }
);
  DaemonCodeAnalyzer.getInstance(myProject).restart();
}
