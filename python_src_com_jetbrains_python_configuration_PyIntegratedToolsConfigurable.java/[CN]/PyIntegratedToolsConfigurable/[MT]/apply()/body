{
  if (!Comparing.equal(myDocstringFormatComboBox.getSelectedItem(),myDocumentationSettings.myDocStringFormat)) {
    DaemonCodeAnalyzer.getInstance(myProject).restart();
  }
  if (analyzeDoctest.isSelected() != myDocumentationSettings.analyzeDoctest) {
    final List<VirtualFile> files=Lists.newArrayList();
    ProjectRootManager.getInstance(myProject).getFileIndex().iterateContent(new ContentIterator(){
      @Override public boolean processFile(      VirtualFile fileOrDir){
        if (!fileOrDir.isDirectory() && PythonFileType.INSTANCE.getDefaultExtension().equals(fileOrDir.getExtension())) {
          files.add(fileOrDir);
        }
        return true;
      }
    }
);
    FileContentUtil.reparseFiles(myProject,Lists.newArrayList(files),false);
  }
  myModel.apply();
  myDocumentationSettings.myDocStringFormat=(String)myDocstringFormatComboBox.getSelectedItem();
  ReSTService.getInstance(myModule).setWorkdir(myWorkDir.getText());
  ReSTService.getInstance(myModule).setTxtIsRst(txtIsRst.isSelected());
  myDocumentationSettings.analyzeDoctest=analyzeDoctest.isSelected();
  PyPackageRequirementsSettings.getInstance(myModule).setRequirementsPath(myRequirementsPathField.getText());
  DaemonCodeAnalyzer.getInstance(myProject).restart();
}
