{
  myModule=module;
  myProject=myModule.getProject();
  myDocumentationSettings=PyDocumentationSettings.getInstance(myModule);
  myDocstringFormatComboBox.setModel(new CollectionComboBoxModel<>(Arrays.asList(DocStringFormat.values()),myDocumentationSettings.getFormat()));
  myDocstringFormatComboBox.setRenderer(new ListCellRendererWrapper<DocStringFormat>(){
    @Override public void customize(    JList list,    DocStringFormat value,    int index,    boolean selected,    boolean hasFocus){
      setText(value.getName());
    }
  }
);
  final FileChooserDescriptor fileChooserDescriptor=FileChooserDescriptorFactory.createSingleFolderDescriptor();
  myWorkDir.addBrowseFolderListener("Please choose working directory:",null,myProject,fileChooserDescriptor);
  ReSTService service=ReSTService.getInstance(myModule);
  myWorkDir.setText(service.getWorkdir());
  txtIsRst.setSelected(service.txtIsRst());
  analyzeDoctest.setSelected(myDocumentationSettings.isAnalyzeDoctest());
  myRequirementsPathField.addBrowseFolderListener("Choose path to the package requirements file:",null,myProject,FileChooserDescriptorFactory.createSingleLocalFileDescriptor());
  myRequirementsPathField.setText(getRequirementsPath());
  myDocStringsPanel.setBorder(IdeBorderFactory.createTitledBorder("Docstrings"));
  myRestPanel.setBorder(IdeBorderFactory.createTitledBorder("reStructuredText"));
}
