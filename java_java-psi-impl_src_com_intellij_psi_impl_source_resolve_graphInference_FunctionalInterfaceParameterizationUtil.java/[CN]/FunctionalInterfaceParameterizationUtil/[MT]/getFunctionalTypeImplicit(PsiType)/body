{
  if (psiClassType instanceof PsiClassType) {
    final PsiClassType classType=(PsiClassType)psiClassType;
    final PsiClass psiClass=classType.resolve();
    if (psiClass != null) {
      final PsiTypeParameter[] typeParameters=psiClass.getTypeParameters();
      final HashSet<PsiTypeParameter> typeParametersSet=ContainerUtil.newHashSet(typeParameters);
      PsiType[] parameters=classType.getParameters();
      for (int i=0; i < parameters.length; i++) {
        PsiType paramType=parameters[i];
        if (paramType instanceof PsiWildcardType) {
          final PsiClassType[] extendsListTypes=typeParameters[i].getExtendsListTypes();
          final PsiClassType Bi=extendsListTypes.length > 0 ? extendsListTypes[0] : PsiType.getJavaLangObject(psiClass.getManager(),GlobalSearchScope.allScope(psiClass.getProject()));
          if (PsiPolyExpressionUtil.mentionsTypeParameters(Bi,typeParametersSet))           return null;
          final PsiType bound=((PsiWildcardType)paramType).getBound();
          if (bound == null) {
            parameters[i]=Bi;
          }
 else           if (((PsiWildcardType)paramType).isExtends()) {
            parameters[i]=GenericsUtil.getGreatestLowerBound(Bi,bound);
          }
 else {
            parameters[i]=bound;
          }
        }
      }
      return JavaPsiFacade.getElementFactory(psiClass.getProject()).createType(psiClass,parameters);
    }
  }
  return psiClassType;
}
