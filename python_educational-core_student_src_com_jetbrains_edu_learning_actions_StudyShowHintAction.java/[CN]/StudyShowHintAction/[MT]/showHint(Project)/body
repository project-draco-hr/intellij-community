{
  Course course=StudyTaskManager.getInstance(project).getCourse();
  if (course == null) {
    return;
  }
  StudyState studyState=new StudyState(StudyUtils.getSelectedStudyEditor(project));
  if (!studyState.isValid()) {
    return;
  }
  PsiFile file=PsiManager.getInstance(project).findFile(studyState.getVirtualFile());
  final Editor editor=studyState.getEditor();
  int offset=editor.getCaretModel().getOffset();
  AnswerPlaceholder answerPlaceholder=studyState.getTaskFile().getAnswerPlaceholder(offset);
  if (file == null) {
    return;
  }
  String hintText=ourWarningMessage;
  if (answerPlaceholder != null) {
    String hint=answerPlaceholder.getHint();
    hintText=hint.isEmpty() ? HINT_NOT_AVAILABLE : hint;
  }
  PsiElement element=file.findElementAt(offset);
  DocumentationManager documentationManager=DocumentationManager.getInstance(project);
  DocumentationComponent component=new DocumentationComponent(documentationManager);
  component.setData(element != null ? element : file,element != null ? hintText : ourWarningMessage,true,null);
  showHintPopUp(project,editor,component);
}
