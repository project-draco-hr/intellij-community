{
  List<String> specs=new ArrayList<String>();
  List<AbstractTestProxy> failedTests=getFailedTests(myProject);
  for (  AbstractTestProxy failedTest : failedTests) {
    if (failedTest.isLeaf()) {
      final Location location=failedTest.getLocation(myProject);
      if (location != null) {
        final PsiElement element=location.getPsiElement();
        if (getConfiguration() instanceof DjangoTestsRunConfiguration) {
          String appName=DjangoTestUtil.getAppNameForLocation(location.getModule(),location.getPsiElement());
          String target=DjangoTestUtil.buildTargetFromLocation(appName,element);
          specs.add(target);
        }
 else {
          PyClass pyClass=PsiTreeUtil.getParentOfType(element,PyClass.class,false);
          String path=location.getVirtualFile().getCanonicalPath();
          if (pyClass != null)           path+="::" + pyClass.getName();
          path+="::" + failedTest.getName();
          specs.add(path);
        }
      }
    }
  }
  return specs;
}
