{
  if (PyUtil.isClassPrivateName(name)) {
    return Collections.emptyList();
  }
  final PsiElement parent=getParentByStub();
  if (parent instanceof PyFromImportStatement) {
    PyFromImportStatement fromImportStatement=(PyFromImportStatement)parent;
    final List<PsiElement> importedFiles=fromImportStatement.resolveImportSourceCandidates();
    for (    PsiElement importedFile : new HashSet<PsiElement>(importedFiles)) {
      final PsiElement source=PyUtil.turnDirIntoInit(importedFile);
      if (source instanceof PyFile) {
        PyFile sourceFile=(PyFile)source;
        final PyModuleType moduleType=new PyModuleType(sourceFile);
        final List<? extends RatedResolveResult> results=moduleType.resolveMember(name,null,AccessDirection.READ,PyResolveContext.defaultContext());
        if (results != null && !results.isEmpty() && PyUtil.isStarImportableFrom(name,sourceFile)) {
          if (results.isEmpty()) {
            return Collections.emptyList();
          }
          final List<RatedResolveResult> res=Lists.newArrayList();
          for (          RatedResolveResult result : results) {
            res.add(result);
          }
          return res;
        }
      }
    }
  }
  return Collections.emptyList();
}
