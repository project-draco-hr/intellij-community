{
  myActionsList=new JBList(new DefaultListModel());
  myActionsList.setCellRenderer(new MyListCellRenderer());
  myActionsList.getEmptyText().setText(KeyMapBundle.message("no.actions"));
  myActionsList.setEnabled(true);
  new DoubleClickListener(){
    @Override protected boolean onDoubleClick(    MouseEvent e){
      excludeSelectionAction();
      return true;
    }
  }
.installOn(myActionsList);
  myListPanel.add(ToolbarDecorator.createDecorator(myActionsList).setAddAction(new AnActionButtonRunnable(){
    @Override public void run(    AnActionButton button){
      java.util.List<QuickList> items=model.getItems();
      ChooseActionsDialog dialog=new ChooseActionsDialog(myActionsList,KeymapManager.getInstance().getActiveKeymap(),items.toArray(new QuickList[items.size()]));
      if (dialog.showAndGet()) {
        String[] ids=dialog.getTreeSelectedActionIds();
        for (        String id : ids) {
          includeActionId(id);
        }
        DefaultListModel listModel=(DefaultListModel)myActionsList.getModel();
        int size=listModel.getSize();
        ListSelectionModel selectionModel=myActionsList.getSelectionModel();
        if (size > 0) {
          selectionModel.removeIndexInterval(0,size - 1);
        }
        for (        String id1 : ids) {
          int idx=listModel.lastIndexOf(id1);
          if (idx >= 0) {
            selectionModel.addSelectionInterval(idx,idx);
          }
        }
      }
    }
  }
).addExtraAction(new AnActionButton("Add Separator",AllIcons.General.SeparatorH){
    @Override public void actionPerformed(    @Nullable AnActionEvent e){
      ((DefaultListModel)myActionsList.getModel()).addElement(QuickList.SEPARATOR_ID);
    }
  }
).setButtonComparator("Add","Add Separator","Remove","Up","Down").createPanel(),BorderLayout.CENTER);
}
