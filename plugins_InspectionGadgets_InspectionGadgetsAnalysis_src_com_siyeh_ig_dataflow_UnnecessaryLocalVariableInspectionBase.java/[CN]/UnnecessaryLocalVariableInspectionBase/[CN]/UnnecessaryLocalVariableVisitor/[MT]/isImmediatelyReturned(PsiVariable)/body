{
  final PsiCodeBlock containingScope=PsiTreeUtil.getParentOfType(variable,PsiCodeBlock.class,true,PsiClass.class);
  if (containingScope == null) {
    return false;
  }
  final PsiElement parent=variable.getParent();
  if (!(parent instanceof PsiDeclarationStatement)) {
    return false;
  }
  final PsiDeclarationStatement declarationStatement=(PsiDeclarationStatement)parent;
  PsiElement next=PsiTreeUtil.skipSiblingsForward(declarationStatement,PsiWhiteSpace.class,PsiComment.class);
  PsiStatement nextStatement=next instanceof PsiStatement ? (PsiStatement)next : null;
  if (!(nextStatement instanceof PsiReturnStatement)) {
    return false;
  }
  final PsiReturnStatement returnStatement=(PsiReturnStatement)nextStatement;
  final PsiExpression returnValue=ParenthesesUtils.stripParentheses(returnStatement.getReturnValue());
  if (!(returnValue instanceof PsiReferenceExpression)) {
    return false;
  }
  final PsiReferenceExpression referenceExpression=(PsiReferenceExpression)returnValue;
  final PsiElement referent=referenceExpression.resolve();
  if (referent == null || !referent.equals(variable)) {
    return false;
  }
  return !isVariableUsedInFollowingDeclarations(variable,declarationStatement);
}
