{
  final PsiExpression initializer=ParenthesesUtils.stripParentheses(variable.getInitializer());
  if (!(initializer instanceof PsiReferenceExpression)) {
    return false;
  }
  final PsiReferenceExpression reference=(PsiReferenceExpression)initializer;
  final PsiElement referent=reference.resolve();
  if (referent == null) {
    return false;
  }
  if (!(referent instanceof PsiLocalVariable || referent instanceof PsiParameter)) {
    return false;
  }
  if (!(referent instanceof PsiResourceVariable) && variable instanceof PsiResourceVariable) {
    return false;
  }
  final PsiCodeBlock containingScope=PsiTreeUtil.getParentOfType(variable,PsiCodeBlock.class);
  if (containingScope == null) {
    return false;
  }
  if (!variable.hasModifierProperty(PsiModifier.FINAL) && VariableAccessUtils.variableIsAssigned(variable,containingScope,false)) {
    return false;
  }
  final PsiVariable initialization=(PsiVariable)referent;
  if (!initialization.hasModifierProperty(PsiModifier.FINAL) && VariableAccessUtils.variableIsAssigned(initialization,containingScope,false)) {
    return false;
  }
  if (!initialization.hasModifierProperty(PsiModifier.FINAL) && variable.hasModifierProperty(PsiModifier.FINAL) || PsiUtil.isLanguageLevel8OrHigher(initialization) && !HighlightControlFlowUtil.isEffectivelyFinal(initialization,containingScope,null) && HighlightControlFlowUtil.isEffectivelyFinal(variable,containingScope,null)) {
    for (    PsiReference ref : ReferencesSearch.search(variable,new LocalSearchScope(containingScope))) {
      final PsiElement element=PsiTreeUtil.getParentOfType(ref.getElement(),PsiClass.class,PsiLambdaExpression.class);
      if (element != null && PsiTreeUtil.isAncestor(containingScope,element,true)) {
        return false;
      }
    }
  }
  return !TypeConversionUtil.boxingConversionApplicable(variable.getType(),initialization.getType());
}
