{
  return new PyElementPattern.Capture<PyExpression>(new InitialPatternCondition<PyExpression>(PyExpression.class){
    public boolean accepts(    @Nullable final Object o,    final ProcessingContext context){
      PyCallable function=resolveCalledFunction(o,functionName,index);
      if (!(function instanceof PyFunction)) {
        return false;
      }
      ScopeOwner scopeOwner=PsiTreeUtil.getParentOfType(function,ScopeOwner.class);
      if (!(scopeOwner instanceof PyClass)) {
        return false;
      }
      return classQualifiedName.equals(((PyClass)scopeOwner).getQualifiedName());
    }
  }
);
}
