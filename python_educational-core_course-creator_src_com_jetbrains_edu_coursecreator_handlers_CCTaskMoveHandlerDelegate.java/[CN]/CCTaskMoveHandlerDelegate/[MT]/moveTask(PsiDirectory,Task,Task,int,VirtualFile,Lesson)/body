{
  ApplicationManager.getApplication().runWriteAction(new Runnable(){
    @Override public void run(){
      try {
        sourceDirectory.getVirtualFile().rename(this,"tmp");
      }
 catch (      IOException e) {
        LOG.error(e);
      }
    }
  }
);
  final VirtualFile sourceLessonDir=sourceDirectory.getVirtualFile().getParent();
  if (sourceLessonDir == null) {
    return;
  }
  CCUtils.updateHigherElements(sourceLessonDir.getChildren(),new Function<VirtualFile,StudyItem>(){
    @Override public StudyItem fun(    VirtualFile file){
      return taskToMove.getLesson().getTask(file.getName());
    }
  }
,taskToMove.getIndex(),EduNames.TASK,-1);
  final int newItemIndex=targetTask != null ? targetTask.getIndex() + indexDelta : 1;
  taskToMove.setIndex(-1);
  taskToMove.getLesson().getTaskList().remove(taskToMove);
  final Lesson finalTargetLesson=targetLesson;
  CCUtils.updateHigherElements(targetDirectory.getChildren(),new Function<VirtualFile,StudyItem>(){
    @Override public StudyItem fun(    VirtualFile file){
      return finalTargetLesson.getTask(file.getName());
    }
  }
,newItemIndex - 1,EduNames.TASK,1);
  taskToMove.setIndex(newItemIndex);
  taskToMove.setLesson(targetLesson);
  targetLesson.getTaskList().add(taskToMove);
  Collections.sort(targetLesson.getTaskList(),EduUtils.INDEX_COMPARATOR);
  ApplicationManager.getApplication().runWriteAction(new Runnable(){
    @Override public void run(){
      try {
        if (!targetDirectory.equals(sourceLessonDir)) {
          sourceDirectory.getVirtualFile().move(this,targetDirectory);
        }
        sourceDirectory.getVirtualFile().rename(this,EduNames.TASK + newItemIndex);
      }
 catch (      IOException e) {
        LOG.error(e);
      }
    }
  }
);
}
