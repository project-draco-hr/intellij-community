{
  if (targetContainer == null || !(targetContainer instanceof PsiDirectory)) {
    return;
  }
  PsiDirectory targetDir=(PsiDirectory)targetContainer;
  if (!isTaskDir(targetDir) && !CCUtils.isLessonDir(targetDir)) {
    Messages.showInfoMessage("Tasks can be moved only to other lessons or inside lesson","Incorrect Target For Move");
    return;
  }
  final Course course=StudyTaskManager.getInstance(project).getCourse();
  final PsiDirectory sourceDirectory=(PsiDirectory)elements[0];
  if (course == null) {
    return;
  }
  final Task taskToMove=EduUtils.getTask(sourceDirectory,course);
  if (taskToMove == null) {
    return;
  }
  if (CCUtils.isLessonDir(targetDir)) {
    Lesson targetLesson=course.getLesson(targetDir.getName());
    if (targetLesson == null) {
      return;
    }
    List<Task> taskList=targetLesson.getTaskList();
    moveTask(sourceDirectory,taskToMove,taskList.isEmpty() ? null : taskList.get(taskList.size() - 1),1,targetDir.getVirtualFile(),targetLesson);
  }
 else {
    PsiDirectory lessonDir=targetDir.getParent();
    if (lessonDir == null) {
      return;
    }
    Task targetTask=EduUtils.getTask(targetDir,course);
    if (targetTask == null) {
      return;
    }
    final CCMoveStudyItemDialog dialog=new CCMoveStudyItemDialog(project,EduNames.TASK,targetTask.getName());
    dialog.show();
    if (dialog.getExitCode() != DialogWrapper.OK_EXIT_CODE) {
      return;
    }
    moveTask(sourceDirectory,taskToMove,targetTask,dialog.getIndexDelta(),lessonDir.getVirtualFile(),targetTask.getLesson());
  }
}
