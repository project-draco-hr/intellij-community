{
  final AbstractTreeStructure treeStructure=getTreeStructure();
  final BasePsiNode node=GuiActionRunner.execute(new GuiQuery<BasePsiNode>(){
    @Nullable @Override protected BasePsiNode executeInEDT() throws Throwable {
      Object root=treeStructure.getRootElement();
      final List<Object> treePath=Lists.newArrayList(root);
      for (      String path : paths) {
        Object[] childElements=treeStructure.getChildElements(root);
        Object newRoot=null;
        for (        Object child : childElements) {
          if (child instanceof PsiDirectoryNode) {
            PsiDirectory dir=((PsiDirectoryNode)child).getValue();
            if (dir != null && path.equals(dir.getName())) {
              newRoot=child;
              treePath.add(newRoot);
              break;
            }
          }
          if (child instanceof PsiFileNode) {
            PsiFile file=((PsiFileNode)child).getValue();
            if (file != null && path.equals(file.getName())) {
              newRoot=child;
              treePath.add(newRoot);
              break;
            }
          }
        }
        if (newRoot != null) {
          root=newRoot;
        }
 else {
          return null;
        }
      }
      if (root == treeStructure.getRootElement()) {
        return null;
      }
      myPane.expand(treePath.toArray(),true);
      myPane.select(root,((BasePsiNode)root).getVirtualFile(),true);
      return (BasePsiNode)root;
    }
  }
);
  assertNotNull(node);
  pause(new Condition("Node to be selected"){
    @Override public boolean test(){
      return node.equals(GuiActionRunner.execute(new GuiQuery<Object>(){
        @Override protected Object executeInEDT() throws Throwable {
          DefaultMutableTreeNode selectedNode=myPane.getSelectedNode();
          if (selectedNode != null) {
            return selectedNode.getUserObject();
          }
          return null;
        }
      }
));
    }
  }
,SHORT_TIMEOUT);
}
