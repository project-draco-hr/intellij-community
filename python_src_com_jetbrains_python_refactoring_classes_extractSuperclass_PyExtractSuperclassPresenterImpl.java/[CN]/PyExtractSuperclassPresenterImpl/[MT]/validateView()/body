{
  super.validateView();
  final Project project=myClassUnderRefactoring.getProject();
  if (!myNamesValidator.isIdentifier(myView.getSuperClassName(),project)) {
    throw new BadDataException(PyBundle.message("refactoring.extract.super.name.0.must.be.ident",myView.getSuperClassName()));
  }
  boolean rootFound=false;
  try {
    final String targetDir=FileUtil.toSystemIndependentName(new File(myView.getModuleFile()).getCanonicalPath());
    for (    final VirtualFile file : ProjectRootManager.getInstance(project).getContentRoots()) {
      if (StringUtil.startsWithIgnoreCase(targetDir,file.getPath())) {
        rootFound=true;
        break;
      }
    }
  }
 catch (  final IOException ignore) {
  }
  if (!rootFound) {
    throw new BadDataException(PyBundle.message("refactoring.extract.super.target.path.outside.roots"));
  }
}
