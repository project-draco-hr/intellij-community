{
  PsiSubstitutor substitutor=myCalcedSubstitutor;
  if (substitutor == null || !includeReturnConstraint) {
    PsiSubstitutor incompleteSubstitutor=super.getSubstitutor();
    PsiMethod method=getElement();
    if (myTypeArguments == null) {
      final RecursionGuard.StackStamp stackStamp=PsiDiamondType.ourDiamondGuard.markStack();
      final PsiSubstitutor inferredSubstitutor=inferTypeArguments(DefaultParameterTypeInferencePolicy.INSTANCE,includeReturnConstraint);
      if (!stackStamp.mayCacheNow() || !includeReturnConstraint) {
        return inferredSubstitutor;
      }
      myCalcedSubstitutor=substitutor=inferredSubstitutor;
    }
 else {
      PsiTypeParameter[] typeParams=method.getTypeParameters();
      for (int i=0; i < myTypeArguments.length && i < typeParams.length; i++) {
        incompleteSubstitutor=incompleteSubstitutor.put(typeParams[i],myTypeArguments[i]);
      }
      myCalcedSubstitutor=substitutor=incompleteSubstitutor;
    }
  }
  return substitutor;
}
