{
  if (myTypeArguments != null) {
    return getApplicabilityLevel();
  }
  final PsiMethod method=getElement();
  if (method != null && method.hasTypeParameters() || myArgumentList == null || !PsiUtil.isLanguageLevel8OrHigher(myArgumentList)) {
    @ApplicabilityLevelConstant int level;
    if (myArgumentTypes == null) {
      return ApplicabilityLevel.NOT_APPLICABLE;
    }
 else {
      final PsiSubstitutor substitutor=getSubstitutor();
      level=ourOverloadGuard.doPreventingRecursion(myArgumentList,false,new Computable<Integer>(){
        @Override public Integer compute(){
          return PsiUtil.getApplicabilityLevel(getElement(),substitutor,myArgumentTypes,myLanguageLevel);
        }
      }
);
    }
    if (level > ApplicabilityLevel.NOT_APPLICABLE && !isTypeArgumentsApplicable())     level=ApplicabilityLevel.NOT_APPLICABLE;
    return level;
  }
  return ourOverloadGuard.doPreventingRecursion(myArgumentList,false,new Computable<Integer>(){
    @Override public Integer compute(){
      return getApplicabilityLevelInner();
    }
  }
);
}
