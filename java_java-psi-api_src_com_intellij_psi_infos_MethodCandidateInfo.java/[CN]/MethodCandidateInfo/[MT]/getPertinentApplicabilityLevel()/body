{
  if (myTypeArguments != null) {
    return getApplicabilityLevel();
  }
  if (myArgumentTypes == null) {
    return ApplicabilityLevel.NOT_APPLICABLE;
  }
  @ApplicabilityLevelConstant int level;
  Integer boxedLevel=ourOverloadGuard.doPreventingRecursion(myArgumentList,false,new Computable<Integer>(){
    @Override public Integer compute(){
      final PsiMethod method=getElement();
      if (method != null && method.hasTypeParameters() || myArgumentList == null || !PsiUtil.isLanguageLevel8OrHigher(myArgumentList)) {
        return PsiUtil.getApplicabilityLevel(getElement(),getSubstitutor(false),myArgumentTypes,myLanguageLevel);
      }
      return getApplicabilityLevelInner();
    }
  }
);
  level=boxedLevel != null ? boxedLevel : getApplicabilityLevel();
  if (level > ApplicabilityLevel.NOT_APPLICABLE && !isTypeArgumentsApplicable(false))   level=ApplicabilityLevel.NOT_APPLICABLE;
  return level;
}
