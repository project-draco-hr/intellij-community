{
  if (myTypeArguments != null) {
    return getApplicabilityLevel();
  }
  @ApplicabilityLevelConstant int level;
  Integer boxedLevel=ourOverloadGuard.doPreventingRecursion(myArgumentList,false,new Computable<Integer>(){
    @Override public Integer compute(){
      if (PsiUtil.isLanguageLevel8OrHigher(myArgumentList)) {
        final PsiType[] argumentTypes=getArgumentTypes();
        if (argumentTypes == null) {
          return ApplicabilityLevel.NOT_APPLICABLE;
        }
        return PsiUtil.getApplicabilityLevel(getElement(),getSubstitutor(false),argumentTypes,myLanguageLevel);
      }
      return getApplicabilityLevelInner();
    }
  }
);
  level=boxedLevel != null ? boxedLevel : getApplicabilityLevel();
  if (level > ApplicabilityLevel.NOT_APPLICABLE && !isTypeArgumentsApplicable(false))   level=ApplicabilityLevel.NOT_APPLICABLE;
  return level;
}
