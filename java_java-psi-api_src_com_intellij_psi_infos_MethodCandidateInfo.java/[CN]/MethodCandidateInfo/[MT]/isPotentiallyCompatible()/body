{
  if (myArgumentList instanceof PsiExpressionList) {
    final PsiMethod method=getElement();
    final PsiParameter[] parameters=method.getParameterList().getParameters();
    final PsiExpression[] expressions=((PsiExpressionList)myArgumentList).getExpressions();
    for (int i=0; i < expressions.length; i++) {
      final PsiExpression expression=expressions[i];
      PsiType formalParameterType=i < parameters.length ? parameters[i].getType() : parameters[parameters.length - 1].getType();
      if (formalParameterType instanceof PsiEllipsisType && isVarargs()) {
        formalParameterType=((PsiEllipsisType)formalParameterType).getComponentType();
      }
      if (!isPotentialCompatible(expression,formalParameterType,method)) {
        return false;
      }
    }
    if (method.hasTypeParameters() && myTypeArguments != null) {
      return method.getTypeParameters().length == myTypeArguments.length;
    }
  }
  return true;
}
