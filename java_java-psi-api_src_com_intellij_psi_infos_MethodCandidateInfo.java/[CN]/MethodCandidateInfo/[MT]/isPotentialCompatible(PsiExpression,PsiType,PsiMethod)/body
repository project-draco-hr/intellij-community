{
  if (expression instanceof PsiFunctionalExpression) {
    final PsiClass targetTypeParameter=PsiUtil.resolveClassInClassTypeOnly(formalType);
    if (targetTypeParameter instanceof PsiTypeParameter && method.equals(((PsiTypeParameter)targetTypeParameter).getOwner())) {
      return ThreeState.YES;
    }
    if (!LambdaUtil.isFunctionalType(formalType)) {
      return ThreeState.NO;
    }
    if (!((PsiFunctionalExpression)expression).isPotentiallyCompatible(formalType)) {
      return ThreeState.UNSURE;
    }
  }
 else   if (expression instanceof PsiParenthesizedExpression) {
    return isPotentialCompatible(((PsiParenthesizedExpression)expression).getExpression(),formalType,method);
  }
 else   if (expression instanceof PsiConditionalExpression) {
    ThreeState thenCompatible=isPotentialCompatible(((PsiConditionalExpression)expression).getThenExpression(),formalType,method);
    ThreeState elseCompatible=isPotentialCompatible(((PsiConditionalExpression)expression).getElseExpression(),formalType,method);
    if (thenCompatible == ThreeState.NO || elseCompatible == ThreeState.NO) {
      return ThreeState.NO;
    }
    if (thenCompatible == ThreeState.UNSURE || elseCompatible == ThreeState.UNSURE) {
      return ThreeState.UNSURE;
    }
  }
  return ThreeState.YES;
}
