{
  final Module mod1=setupModule("mod1","T1");
  final Module mod2=setupModule("mod2","T2");
  final JUnitConfiguration configuration=new JUnitConfiguration("p",getProject(),JUnitConfigurationType.getInstance().getConfigurationFactories()[0]);
  configuration.setWorkingDirectory("$MODULE_DIR$");
  final JUnitConfiguration.Data persistentData=configuration.getPersistentData();
  persistentData.setScope(TestSearchScope.SINGLE_MODULE);
  configuration.setModule(mod1);
  persistentData.PACKAGE_NAME="p";
  persistentData.TEST_OBJECT=JUnitConfiguration.TEST_PACKAGE;
  final ExecutionEnvironment environment=ExecutionEnvironmentBuilder.create(DefaultRunExecutor.getRunExecutorInstance(),configuration).build();
  final TestPackage aPackage=new TestPackage(configuration,environment){
    @Override protected boolean createTempFiles(){
      return true;
    }
  }
;
  aPackage.createSearchingForTestsTask().startSearch();
  File workingDirsFile=aPackage.getWorkingDirsFile();
  assertNotNull(workingDirsFile);
  assertEmpty(FileUtil.loadFile(workingDirsFile));
  persistentData.setScope(TestSearchScope.WHOLE_PROJECT);
  final RegistryValue smRunnerProperty=Registry.get("junit_sm");
  final boolean oldValue=smRunnerProperty.asBoolean();
  try {
    smRunnerProperty.setValue(false);
    aPackage.createSearchingForTestsTask().startSearch();
    workingDirsFile=aPackage.getWorkingDirsFile();
    assertNotNull(workingDirsFile);
    String file=preparePathsForComparison(FileUtil.loadFile(workingDirsFile),mod1,mod2);
    assertEquals("p\n" + "MODULE_1\n" + "mod1\n"+ "CLASSPATH\n"+ "1\n"+ "p.T1\n"+ "MODULE_2\n"+ "mod2\n"+ "CLASSPATH\n"+ "1\n"+ "p.T2",file);
    smRunnerProperty.setValue(true);
    aPackage.createSearchingForTestsTask().startSearch();
    workingDirsFile=aPackage.getWorkingDirsFile();
    assertNotNull(workingDirsFile);
    file=preparePathsForComparison(FileUtil.loadFile(workingDirsFile),mod1,mod2);
    assertEquals("p\n" + "MODULE_1\n" + "mod1\n"+ "CLASSPATH\n"+ "1\n"+ "p.T1\n"+ "MODULE_2\n"+ "mod2\n"+ "CLASSPATH\n"+ "1\n"+ "p.T2",file);
  }
  finally {
    smRunnerProperty.setValue(oldValue);
  }
}
