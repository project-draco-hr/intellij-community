{
  Set<PsiJavaModule> projectModules=ContainerUtil.newHashSet();
  for (  Module module : ModuleManager.getInstance(project).getModules()) {
    Collection<VirtualFile> files=FilenameIndex.getVirtualFilesByName(project,MODULE_INFO_FILE,new ModulesScope(module));
    if (files.size() > 1)     return null;
    VirtualFile vFile=ContainerUtil.getFirstItem(files);
    if (vFile != null) {
      PsiFile psiFile=PsiManager.getInstance(project).findFile(vFile);
      if (psiFile instanceof PsiJavaFile) {
        PsiJavaModule moduleDeclaration=((PsiJavaFile)psiFile).getModuleDeclaration();
        if (moduleDeclaration != null) {
          projectModules.add(moduleDeclaration);
        }
      }
    }
  }
  MultiMap<PsiJavaModule,PsiJavaModule> relations=MultiMap.create();
  for (  PsiJavaModule moduleDeclaration : projectModules) {
    for (    PsiRequiresStatement statement : psiTraverser().children(moduleDeclaration).filter(PsiRequiresStatement.class)) {
      PsiJavaModule dependency=resolveDependency(statement);
      if (dependency != null && projectModules.contains(dependency)) {
        relations.putValue(moduleDeclaration,dependency);
      }
    }
  }
  return new JavaModuleGraph(relations);
}
