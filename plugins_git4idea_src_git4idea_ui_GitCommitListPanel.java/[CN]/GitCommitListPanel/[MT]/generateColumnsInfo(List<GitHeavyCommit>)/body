{
  ItemAndWidth hash=new ItemAndWidth("",0);
  ItemAndWidth author=new ItemAndWidth("",0);
  ItemAndWidth time=new ItemAndWidth("",0);
  for (  GitHeavyCommit commit : commits) {
    hash=getMax(hash,getHash(commit));
    author=getMax(author,getAuthor(commit));
    time=getMax(time,getTime(commit));
  }
  return new ColumnInfo[]{new GitCommitColumnInfo("Hash",hash.myItem){
    @Override public String valueOf(    GitHeavyCommit commit){
      return getHash(commit);
    }
  }
,new ColumnInfo<GitHeavyCommit,String>("Subject"){
    @Override public String valueOf(    GitHeavyCommit commit){
      return commit.getSubject();
    }
  }
,new GitCommitColumnInfo("Author",author.myItem){
    @Override public String valueOf(    GitHeavyCommit commit){
      return getAuthor(commit);
    }
  }
,new GitCommitColumnInfo("Author time",time.myItem){
    @Override public String valueOf(    GitHeavyCommit commit){
      return getTime(commit);
    }
  }
};
}
