{
  final PsiElement element=info.getElement();
  final PsiElement prevSibling=PsiTreeUtil.skipSiblingsBackward(element,PsiWhiteSpace.class);
  if (prevSibling instanceof PsiJavaToken && isRemovableToken(prevSibling)) {
    final int start=info.getBeforeDelimiterPos() + offset - (prevSibling.getTextLength() - 1);
    final int end=info.getStartIndex() + offset;
    result.delete(start,end);
    return offset - (end - start);
  }
  final PsiElement nextSibling=PsiTreeUtil.skipSiblingsForward(element,PsiWhiteSpace.class);
  if (nextSibling instanceof PsiJavaToken && isRemovableToken(nextSibling)) {
    final int start=info.getStartIndex() + offset;
    final int end=info.getAfterDelimiterPos() + nextSibling.getTextLength() + offset;
    result.delete(start,end);
    return offset - 1;
  }
  if (element == null || !(element.getParent() instanceof PsiForStatement)) {
    return removeExtraSemicolon(info,offset,result,null);
  }
  return offset;
}
