{
  PsiFile file=getPsiManager().findFile(createFile());
  assertNotNull(file);
  assertTrue(file.isPhysical());
  final Document document=getPsiDocumentManager().getDocument(file);
  assertNotNull(document);
  final Semaphore semaphore=new Semaphore();
  semaphore.down();
  getPsiDocumentManager().performWhenAllCommitted(new Runnable(){
    @Override public void run(){
      assertTrue(getPsiDocumentManager().isCommitted(document));
      semaphore.up();
    }
  }
);
  waitAndPump(semaphore,TIMEOUT);
  assertTrue(getPsiDocumentManager().isCommitted(document));
  WriteCommandAction.runWriteCommandAction(null,new Runnable(){
    @Override public void run(){
      document.insertString(0,"class X {}");
    }
  }
);
  semaphore.down();
  getPsiDocumentManager().performWhenAllCommitted(new Runnable(){
    @Override public void run(){
      assertTrue(getPsiDocumentManager().isCommitted(document));
      semaphore.up();
    }
  }
);
  waitAndPump(semaphore,TIMEOUT);
  assertTrue(getPsiDocumentManager().isCommitted(document));
  final AtomicInteger count=new AtomicInteger();
  final Runnable action=new Runnable(){
    @Override public void run(){
      count.incrementAndGet();
    }
  }
;
  WriteCommandAction.runWriteCommandAction(null,new Runnable(){
    @Override public void run(){
      document.insertString(0,"/**/");
      boolean executed=getPsiDocumentManager().cancelAndRunWhenAllCommitted("xxx",action);
      assertFalse(executed);
      executed=getPsiDocumentManager().cancelAndRunWhenAllCommitted("xxx",action);
      assertFalse(executed);
      assertEquals(0,count.get());
    }
  }
);
  while (!getPsiDocumentManager().isCommitted(document)) {
    UIUtil.dispatchAllInvocationEvents();
  }
  assertTrue(getPsiDocumentManager().isCommitted(document));
  assertEquals(1,count.get());
  count.set(0);
  WriteCommandAction.runWriteCommandAction(null,new Runnable(){
    @Override public void run(){
      document.insertString(0,"/**/");
      boolean executed=getPsiDocumentManager().performWhenAllCommitted(action);
      assertFalse(executed);
      executed=getPsiDocumentManager().performWhenAllCommitted(action);
      assertFalse(executed);
      assertEquals(0,count.get());
    }
  }
);
  while (!getPsiDocumentManager().isCommitted(document)) {
    UIUtil.dispatchAllInvocationEvents();
  }
  assertTrue(getPsiDocumentManager().isCommitted(document));
  assertEquals(2,count.get());
}
