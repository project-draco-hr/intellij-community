{
  PsiFile file=getPsiManager().findFile(createFile());
  final Document document=getPsiDocumentManager().getDocument(file);
  File temp=createTempDirectory();
  final Project alienProject=createProject(temp + "/alien.ipr",DebugUtil.currentStackTrace());
  boolean succ2=ProjectManagerEx.getInstanceEx().openProject(alienProject);
  assertTrue(succ2);
  UIUtil.dispatchAllInvocationEvents();
  try {
    PsiManager alienManager=PsiManager.getInstance(alienProject);
    final String alienText="alien";
    LightVirtualFile alienVirt=new LightVirtualFile("foo.txt",alienText);
    final PsiFile alienFile=alienManager.findFile(alienVirt);
    final PsiDocumentManagerImpl alienDocManager=(PsiDocumentManagerImpl)PsiDocumentManager.getInstance(alienProject);
    final Document alienDocument=alienDocManager.getDocument(alienFile);
    assertEquals(0,alienDocManager.getUncommittedDocuments().length);
    assertEquals(0,getPsiDocumentManager().getUncommittedDocuments().length);
    WriteCommandAction.runWriteCommandAction(null,new Runnable(){
      @Override public void run(){
        changeDocument(alienDocument,PsiDocumentManagerImplTest.this.getPsiDocumentManager());
        assertEquals(0,getPsiDocumentManager().getUncommittedDocuments().length);
        assertEquals(0,alienDocManager.getUncommittedDocuments().length);
        changeDocument(alienDocument,alienDocManager);
        assertEquals(0,getPsiDocumentManager().getUncommittedDocuments().length);
        assertEquals(1,alienDocManager.getUncommittedDocuments().length);
        changeDocument(document,PsiDocumentManagerImplTest.this.getPsiDocumentManager());
        assertEquals(1,getPsiDocumentManager().getUncommittedDocuments().length);
        assertEquals(1,alienDocManager.getUncommittedDocuments().length);
        changeDocument(document,alienDocManager);
        assertEquals(1,getPsiDocumentManager().getUncommittedDocuments().length);
        assertEquals(1,alienDocManager.getUncommittedDocuments().length);
      }
    }
);
  }
  finally {
    ProjectUtil.closeAndDispose(alienProject);
  }
}
