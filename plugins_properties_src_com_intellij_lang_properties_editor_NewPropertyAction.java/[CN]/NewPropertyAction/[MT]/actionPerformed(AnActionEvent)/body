{
  final Project project=getEventProject(e);
  if (project == null) {
    return;
  }
  ResourceBundleEditor resourceBundleEditor;
  final DataContext context=e.getDataContext();
  FileEditor fileEditor=PlatformDataKeys.FILE_EDITOR.getData(context);
  if (fileEditor instanceof ResourceBundleEditor) {
    resourceBundleEditor=(ResourceBundleEditor)fileEditor;
  }
 else {
    final Editor editor=CommonDataKeys.EDITOR.getData(context);
    resourceBundleEditor=editor != null ? editor.getUserData(ResourceBundleEditor.RESOURCE_BUNDLE_EDITOR_KEY) : null;
  }
  if (resourceBundleEditor == null) {
    for (    FileEditor editor : FileEditorManager.getInstance(project).getSelectedEditors()) {
      if (editor instanceof ResourceBundleEditor) {
        resourceBundleEditor=(ResourceBundleEditor)editor;
      }
    }
    if (resourceBundleEditor == null) {
      return;
    }
  }
  final ResourceBundle bundle=resourceBundleEditor.getResourceBundle();
  final VirtualFile file=bundle.getDefaultPropertiesFile().getVirtualFile();
  final ReadonlyStatusHandler.OperationStatus status=ReadonlyStatusHandler.getInstance(project).ensureFilesWritable(file);
  if (status.hasReadonlyFiles()) {
    Messages.showErrorDialog(bundle.getProject(),String.format("Resource bundle '%s' has read-only default properties file",bundle.getBaseName()),"Can't Create New Property");
    return;
  }
  final String prefix;
  final String separator;
  final String place=e.getPlace();
  if (ActionPlaces.STRUCTURE_VIEW_TOOLBAR.equals(place)) {
    prefix=null;
    separator=null;
  }
 else {
    final ResourceBundleEditorViewElement selectedElement=resourceBundleEditor.getSelectedElementIfOnlyOne();
    if (selectedElement == null) {
      return;
    }
    if (selectedElement instanceof PropertiesPrefixGroup) {
      final PropertiesPrefixGroup group=(PropertiesPrefixGroup)selectedElement;
      prefix=group.getPrefix();
      separator=group.getSeparator();
    }
 else     if (selectedElement instanceof ResourceBundlePropertyStructureViewElement || selectedElement instanceof ResourceBundleFileStructureViewElement) {
      prefix=null;
      separator=null;
    }
 else {
      throw new IllegalStateException("unsupported type: " + selectedElement.getClass());
    }
  }
  Messages.showInputDialog(project,PropertiesBundle.message("new.property.dialog.name.prompt.text"),PropertiesBundle.message("new.property.dialog.title"),Messages.getQuestionIcon(),null,new NewPropertyNameValidator(resourceBundleEditor,prefix,separator));
}
