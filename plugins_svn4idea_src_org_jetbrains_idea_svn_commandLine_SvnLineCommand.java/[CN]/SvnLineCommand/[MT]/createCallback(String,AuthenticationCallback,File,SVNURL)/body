{
  if (errText.startsWith(CERTIFICATE_ERROR)) {
    return new CertificateCallbackCase(callback,base);
  }
  if (errText.startsWith(AUTHENTICATION_REALM)) {
    return new CredentialsCallback(callback,base);
  }
  if (errText.startsWith(PASSPHRASE_FOR)) {
    return new PassphraseCallback(callback,base);
  }
  if (errText.startsWith(UNABLE_TO_CONNECT) && errText.contains(CANNOT_AUTHENTICATE_TO_PROXY)) {
    return new ProxyCallback(callback,base);
  }
  if (errText.contains(AUTHENTICATION_FAILED_MESSAGE)) {
    return new UsernamePasswordCallback(callback,base,url);
  }
  if (errText.contains(INVALID_CREDENTIALS_FOR_SVN_PROTOCOL) && errText.contains(PASSWORD_STRING)) {
    return new UsernamePasswordCallback(callback,base,url);
  }
  if (errText.contains(UNTRUSTED_SERVER_CERTIFICATE)) {
    return new CertificateCallbackCase(callback,base);
  }
  if (errText.contains(ACCESS_TO_PREFIX) && errText.contains(FORBIDDEN_STATUS)) {
    return new TwoWaySslCallback(callback,base,url);
  }
  return null;
}
