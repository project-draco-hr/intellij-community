{
  GrLightMethodBuilder builder=new GrLightMethodBuilder(place.getManager(),gradleConfigurationName);
  PsiElementFactory factory=JavaPsiFacade.getElementFactory(place.getManager().getProject());
  PsiType type=new PsiArrayType(factory.createTypeByFQClassName(CommonClassNames.JAVA_LANG_OBJECT,place.getResolveScope()));
  builder.addParameter(new GrLightParameter("param",type,builder));
  PsiClassType retType=factory.createTypeByFQClassName(CommonClassNames.JAVA_LANG_OBJECT,place.getResolveScope());
  builder.setReturnType(retType);
  processor.execute(builder,state);
  GrMethodCall call=PsiTreeUtil.getParentOfType(place,GrMethodCall.class);
  if (call == null) {
    return;
  }
  GrArgumentList args=call.getArgumentList();
  if (args == null) {
    return;
  }
  int argsCount=getGrMethodArumentsCount(args);
  argsCount++;
  for (  PsiMethod method : dependencyHandlerClass.findMethodsByName(gradleConfigurationName,false)) {
    if (method.getParameterList().getParametersCount() == argsCount) {
      builder.setNavigationElement(method);
      return;
    }
  }
  if (defaultMethodName != null) {
    for (    PsiMethod method : dependencyHandlerClass.findMethodsByName(defaultMethodName,false)) {
      if (method.getParameterList().getParametersCount() == argsCount) {
        builder.setNavigationElement(method);
        return;
      }
    }
  }
}
