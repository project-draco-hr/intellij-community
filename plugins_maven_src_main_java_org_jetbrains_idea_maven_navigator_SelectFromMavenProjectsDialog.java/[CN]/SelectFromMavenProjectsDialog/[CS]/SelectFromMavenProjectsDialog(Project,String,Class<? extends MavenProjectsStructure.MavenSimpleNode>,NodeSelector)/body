{
  super(project,false);
  mySelector=selector;
  setTitle(title);
  myTree=new SimpleTree();
  myTree.getSelectionModel().setSelectionMode(TreeSelectionModel.SINGLE_TREE_SELECTION);
  MavenProjectsStructure treeStructure=new MavenProjectsStructure(project,MavenProjectsManager.getInstance(project),MavenTasksManager.getInstance(project),MavenShortcutsManager.getInstance(project),MavenProjectsNavigator.getInstance(project),myTree){
    @Override protected Class<? extends MavenSimpleNode>[] getVisibleNodesClasses(){
      return new Class[]{nodeClass};
    }
    @Override protected boolean showDescriptions(){
      return false;
    }
    @Override protected boolean showOnlyBasicPhases(){
      return false;
    }
  }
;
  treeStructure.update();
  if (mySelector != null) {
    final SimpleNode[] selection=new SimpleNode[]{null};
    treeStructure.accept(new SimpleNodeVisitor(){
      public boolean accept(      SimpleNode each){
        if (!mySelector.shouldSelect(each))         return false;
        selection[0]=each;
        return true;
      }
    }
);
    if (selection[0] != null) {
      treeStructure.select(selection[0]);
    }
  }
  init();
}
