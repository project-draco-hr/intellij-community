{
  Boolean Accessible=myAccessible;
  boolean accessible=true;
  if (Accessible == null) {
    if (myPlace != null && myCandidate instanceof PsiMember) {
      final PsiMember member=(PsiMember)myCandidate;
      accessible=JavaPsiFacade.getInstance(myPlace.getProject()).getResolveHelper().isAccessible(member,member.getModifierList(),myPlace,myAccessClass,myCurrentFileResolveContext);
      if (accessible && member.hasModifierProperty(PsiModifier.PRIVATE) && myPlace instanceof PsiReferenceExpression&& JavaVersionService.getInstance().isAtLeast(myPlace,JavaSdkVersion.JDK_1_7)) {
        accessible=!isAccessedThroughTypeParameterBound();
      }
    }
    myAccessible=accessible;
  }
 else {
    accessible=Accessible;
  }
  return accessible;
}
