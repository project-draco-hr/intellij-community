{
  SearchScope searchScope=compiledPattern.getScope();
  final boolean ourOptimizedScope=searchScope != null;
  if (!ourOptimizedScope)   searchScope=options.getScope();
  if (searchScope instanceof GlobalSearchScope) {
    final GlobalSearchScope scope=(GlobalSearchScope)searchScope;
    final ContentIterator ci=new ContentIterator(){
      public boolean processFile(      final VirtualFile fileOrDir){
        if (!fileOrDir.isDirectory() && scope.contains(fileOrDir) && fileOrDir.getFileType() != FileTypes.UNKNOWN) {
          ++totalFilesToScan;
          scheduler.addOneTask(new MatchOneVirtualFile(fileOrDir));
        }
        return true;
      }
    }
;
    ApplicationManager.getApplication().runReadAction(new Runnable(){
      @Override public void run(){
        FileBasedIndex.getInstance().iterateIndexableFiles(ci,project,progress);
      }
    }
);
    progress.setText2("");
  }
 else {
    final PsiElement[] elementsToScan=((LocalSearchScope)searchScope).getScope();
    totalFilesToScan=elementsToScan.length;
    for (int i=0; i < elementsToScan.length; ++i) {
      final PsiElement psiElement=elementsToScan[i];
      if (psiElement == null)       continue;
      scheduler.addOneTask(new MatchOnePsiFile(psiElement));
      if (ourOptimizedScope)       elementsToScan[i]=null;
    }
  }
  return true;
}
