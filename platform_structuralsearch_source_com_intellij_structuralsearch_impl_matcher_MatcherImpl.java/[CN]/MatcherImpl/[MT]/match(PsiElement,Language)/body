{
  final MatchingStrategy strategy=matchContext.getPattern().getStrategy();
  final Language elementLanguage=element.getLanguage();
  if (strategy.continueMatching(element) && elementLanguage.isKindOf(language)) {
    visitor.matchContext(new ArrayBackedNodeIterator(new PsiElement[]{element}));
    return;
  }
  for (PsiElement el=element.getFirstChild(); el != null; el=el.getNextSibling()) {
    match(el,language);
  }
  if (element instanceof PsiLanguageInjectionHost) {
    InjectedLanguageUtil.enumerate(element,new PsiLanguageInjectionHost.InjectedPsiVisitor(){
      @Override public void visit(      @NotNull PsiFile injectedPsi,      @NotNull List<PsiLanguageInjectionHost.Shred> places){
        match(injectedPsi,language);
      }
    }
);
  }
}
