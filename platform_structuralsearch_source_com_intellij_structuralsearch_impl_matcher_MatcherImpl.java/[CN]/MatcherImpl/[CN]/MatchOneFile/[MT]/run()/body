{
  final List<PsiElement> files=getPsiElementsToProcess();
  if (progress != null) {
    progress.setFraction((double)scannedFilesCount / totalFilesToScan);
  }
  ++scannedFilesCount;
  if (files.size() == 0)   return;
  final LanguageFileType fileType=(LanguageFileType)matchContext.getOptions().getFileType();
  final Language patternLanguage=fileType.getLanguage();
  for (  PsiElement file : files) {
    if (file instanceof PsiFile) {
      matchContext.getSink().processFile((PsiFile)file);
    }
    final PsiElement finalFile=file;
    documentManager.commitAndRunReadAction(new Runnable(){
      public void run(){
        PsiElement file=finalFile;
        if (!file.isValid())         return;
        final StructuralSearchProfile profile=StructuralSearchUtil.getProfileByLanguage(file.getLanguage());
        if (profile == null) {
          return;
        }
        file=profile.extendMatchOnePsiFile(file);
        match(file,patternLanguage);
      }
    }
);
  }
}
