{
  Wrap wrap=Wrap.createWrap(getWrapType(mySettings.ARRAY_INITIALIZER_WRAP),false);
  Alignment alignment=mySettings.ALIGN_MULTILINE_ARRAY_INITIALIZER_EXPRESSION ? Alignment.createAlignment() : null;
  ChildrenBlocksBuilder.Config config=new ChildrenBlocksBuilder.Config().setDefaultIndent(Indent.getContinuationWithoutFirstIndent()).setIndent(JavaTokenType.RBRACE,Indent.getNoneIndent()).setIndent(JavaTokenType.LBRACE,Indent.getNoneIndent()).setDefaultWrap(wrap).setNoWrap(JavaTokenType.COMMA).setNoWrap(JavaTokenType.RBRACE).setNoWrap(JavaTokenType.LBRACE).setDefaultAlignment(alignment).setNoAlignment(JavaTokenType.COMMA).setNoAlignment(JavaTokenType.LBRACE).setAlignmentIf(JavaTokenType.RBRACE,alignment,new Condition<ASTNode>(){
    @Override public boolean value(    ASTNode node){
      PsiElement prev=PsiTreeUtil.skipSiblingsBackward(node.getPsi(),PsiWhiteSpace.class);
      if (prev == null)       return false;
      return prev.getNode().getElementType() == JavaTokenType.COMMA;
    }
  }
);
  return config.createBuilder().buildNodeChildBlocks(myNode,myBlockFactory);
}
