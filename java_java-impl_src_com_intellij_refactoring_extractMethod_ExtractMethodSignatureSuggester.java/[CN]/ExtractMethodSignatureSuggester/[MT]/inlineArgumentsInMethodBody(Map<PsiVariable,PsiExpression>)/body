{
  final Map<PsiExpression,PsiExpression> replacement=new HashMap<PsiExpression,PsiExpression>();
  myExtractedMethod.accept(new JavaRecursiveElementWalkingVisitor(){
    @Override public void visitReferenceExpression(    PsiReferenceExpression expression){
      super.visitReferenceExpression(expression);
      final PsiElement resolve=expression.resolve();
      if (resolve instanceof PsiVariable) {
        final PsiExpression toInlineExpr=param2ExprMap.get((PsiVariable)resolve);
        if (toInlineExpr != null) {
          replacement.put(expression,toInlineExpr);
        }
      }
    }
  }
);
  for (  PsiExpression expression : replacement.keySet()) {
    expression.replace(replacement.get(expression));
  }
}
