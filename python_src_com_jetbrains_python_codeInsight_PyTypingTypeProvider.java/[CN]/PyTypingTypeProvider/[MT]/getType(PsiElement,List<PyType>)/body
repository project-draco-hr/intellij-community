{
  final String qualifiedName=getQualifiedName(resolved);
  final List<Integer> paramListTypePositions=new ArrayList<>();
  final List<Integer> ellipsisTypePositions=new ArrayList<>();
  for (int i=0; i < elementTypes.size(); i++) {
    final PyType type=elementTypes.get(i);
    if (type instanceof PyTypeParser.ParameterListType) {
      paramListTypePositions.add(i);
    }
 else     if (type instanceof PyTypeParser.EllipsisType) {
      ellipsisTypePositions.add(i);
    }
  }
  if (!paramListTypePositions.isEmpty()) {
    if (!("typing.Callable".equals(qualifiedName) && paramListTypePositions.equals(Collections.singletonList(0)))) {
      return null;
    }
  }
  if (!ellipsisTypePositions.isEmpty()) {
    if (!("typing.Callable".equals(qualifiedName) && ellipsisTypePositions.equals(Collections.singletonList(0)))) {
      return null;
    }
  }
  if ("typing.Union".equals(qualifiedName)) {
    return PyUnionType.union(elementTypes);
  }
  if ("typing.Optional".equals(qualifiedName) && elementTypes.size() == 1) {
    return PyUnionType.union(elementTypes.get(0),PyNoneType.INSTANCE);
  }
  if ("typing.Callable".equals(qualifiedName) && elementTypes.size() == 2) {
    final PyTypeParser.ParameterListType paramList=as(elementTypes.get(0),PyTypeParser.ParameterListType.class);
    if (paramList != null) {
      return new PyCallableTypeImpl(paramList.getCallableParameters(),elementTypes.get(1));
    }
    if (elementTypes.get(0) instanceof PyTypeParser.EllipsisType) {
      return new PyCallableTypeImpl(null,elementTypes.get(1));
    }
  }
  if ("typing.Tuple".equals(qualifiedName)) {
    return PyTupleType.create(resolved,elementTypes.toArray(new PyType[elementTypes.size()]));
  }
  final PyType builtinCollection=getBuiltinCollection(resolved);
  if (builtinCollection instanceof PyClassType) {
    final PyClassType classType=(PyClassType)builtinCollection;
    return new PyCollectionTypeImpl(classType.getPyClass(),false,elementTypes);
  }
  return null;
}
