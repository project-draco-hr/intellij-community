{
  if (element instanceof PyTypedElement) {
    final PyType type=context.getType((PyTypedElement)element);
    if (type != null && isAny(type)) {
      return Ref.create();
    }
    if (type instanceof PyClassLikeType) {
      final PyClassLikeType classType=(PyClassLikeType)type;
      if (classType.isDefinition()) {
        final PyType instanceType=classType.toInstance();
        return Ref.create(instanceType);
      }
    }
 else     if (type instanceof PyNoneType) {
      return Ref.create(type);
    }
  }
  return null;
}
