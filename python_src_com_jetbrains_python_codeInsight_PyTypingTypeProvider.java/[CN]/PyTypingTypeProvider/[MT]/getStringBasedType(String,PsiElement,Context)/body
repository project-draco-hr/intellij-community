{
  final Project project=anchor.getProject();
  final PyExpressionCodeFragmentImpl codeFragment=new PyExpressionCodeFragmentImpl(project,"dummy.py",contents,false);
  codeFragment.setContext(anchor.getContainingFile());
  final PsiElement element=codeFragment.getFirstChild();
  if (element instanceof PyExpressionStatement) {
    final PyExpression expr=((PyExpressionStatement)element).getExpression();
    if (expr instanceof PyTupleExpression) {
      final PyTupleExpression tupleExpr=(PyTupleExpression)expr;
      final List<PyType> elementTypes=new ArrayList<>();
      for (      PyExpression elementExpr : tupleExpr.getElements()) {
        elementTypes.add(getType(elementExpr,context));
      }
      return PyTupleType.create(anchor,elementTypes.toArray(new PyType[elementTypes.size()]));
    }
    return getType(expr,context);
  }
  return null;
}
