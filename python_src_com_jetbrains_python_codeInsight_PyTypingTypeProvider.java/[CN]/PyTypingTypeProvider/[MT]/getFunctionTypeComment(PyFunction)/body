{
  final PyStatementList statements=func.getStatementList();
  final PsiComment comment;
  if (statements.getStatements().length != 0) {
    comment=as(statements.getFirstChild(),PsiComment.class);
  }
 else {
    comment=as(PyPsiUtils.getNextNonWhitespaceSibling(statements),PsiComment.class);
  }
  if (comment != null) {
    final Matcher m=TYPE_COMMENT_PATTERN.matcher(comment.getText());
    if (m.matches()) {
      return m.group(1);
    }
  }
  return null;
}
