{
  if (expression instanceof PySubscriptionExpression) {
    final PySubscriptionExpression subscriptionExpr=(PySubscriptionExpression)expression;
    final PyExpression operand=subscriptionExpr.getOperand();
    final PyExpression indexExpr=subscriptionExpr.getIndexExpression();
    final String operandName=resolveToQualifiedName(operand,context);
    if ("typing.Union".equals(operandName)) {
      return PyUnionType.union(getIndexTypes(subscriptionExpr,context));
    }
 else {
      final PyType operandType=getType(operand,context);
      if (operandType instanceof PyClassType) {
        final PyClass cls=((PyClassType)operandType).getPyClass();
        if (PyNames.TUPLE.equals(cls.getQualifiedName())) {
          final List<PyType> indexTypes=getIndexTypes(subscriptionExpr,context);
          return PyTupleType.create(expression,indexTypes.toArray(new PyType[indexTypes.size()]));
        }
 else         if (indexExpr != null) {
          final PyType indexType=context.getType(indexExpr);
          return new PyCollectionTypeImpl(cls,false,indexType);
        }
      }
    }
  }
 else {
    final PyType builtinCollection=getBuiltinCollection(expression,context);
    if (builtinCollection != null) {
      return builtinCollection;
    }
    final PyType genericType=getGenericType(expression,context);
    if (genericType != null) {
      return genericType;
    }
  }
  return null;
}
