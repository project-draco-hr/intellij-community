{
  if (expression instanceof PyReferenceOwner) {
    final PyReferenceOwner referenceOwner=(PyReferenceOwner)expression;
    final PyResolveContext resolveContext=PyResolveContext.noImplicits().withTypeEvalContext(context);
    final PsiPolyVariantReference reference=referenceOwner.getReference(resolveContext);
    final PsiElement element=reference.resolve();
    if (element instanceof PyFunction) {
      final PyFunction function=(PyFunction)element;
      if (PyUtil.isInit(function)) {
        final PyClass cls=function.getContainingClass();
        if (cls != null) {
          return cls;
        }
      }
    }
    return element;
  }
  return null;
}
