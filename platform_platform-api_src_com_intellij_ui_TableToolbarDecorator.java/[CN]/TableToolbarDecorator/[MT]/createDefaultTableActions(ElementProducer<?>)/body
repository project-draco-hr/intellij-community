{
  final JTable table=myTable;
  final EditableModel tableModel=(EditableModel)table.getModel();
  myAddAction=new AnActionButtonRunnable(){
    @Override public void run(    AnActionButton button){
      TableUtil.stopEditing(table);
      final int rowCount=table.getRowCount();
      if (tableModel instanceof ListTableModel && producer != null) {
        ((ListTableModel)tableModel).addRow(producer.createElement());
      }
 else {
        tableModel.addRow();
      }
      if (rowCount == table.getRowCount())       return;
      final int index=table.getModel().getRowCount() - 1;
      table.setRowSelectionInterval(index,index);
      table.setColumnSelectionInterval(0,0);
      table.editCellAt(index,0);
      TableUtil.updateScroller(table);
      SwingUtilities.invokeLater(new Runnable(){
        @Override public void run(){
          final Component editorComponent=table.getEditorComponent();
          if (editorComponent != null) {
            final Rectangle bounds=editorComponent.getBounds();
            table.scrollRectToVisible(bounds);
            editorComponent.requestFocus();
          }
        }
      }
);
    }
  }
;
  myRemoveAction=new AnActionButtonRunnable(){
    @Override public void run(    AnActionButton button){
      if (TableUtil.doRemoveSelectedItems(table,tableModel,null)) {
        updateButtons();
        table.requestFocus();
        TableUtil.updateScroller(table);
      }
    }
  }
;
class MoveRunnable implements AnActionButtonRunnable {
    final int delta;
    MoveRunnable(    int delta){
      this.delta=delta;
    }
    @Override public void run(    AnActionButton button){
      int row=table.getEditingRow();
      int col=table.getEditingColumn();
      TableUtil.stopEditing(table);
      int[] idx=table.getSelectedRows();
      Arrays.sort(idx);
      if (delta > 0) {
        idx=ArrayUtil.reverseArray(idx);
      }
      if (idx.length == 0)       return;
      if (idx[0] + delta < 0)       return;
      if (idx[idx.length - 1] + delta > table.getModel().getRowCount())       return;
      for (int i=0; i < idx.length; i++) {
        tableModel.exchangeRows(idx[i],idx[i] + delta);
        idx[i]+=delta;
      }
      TableUtil.selectRows(table,idx);
      table.requestFocus();
      if (row > 0 && col != -1) {
        table.editCellAt(row - 1,col);
      }
    }
  }
  myUpAction=new MoveRunnable(-1);
  myDownAction=new MoveRunnable(1);
}
