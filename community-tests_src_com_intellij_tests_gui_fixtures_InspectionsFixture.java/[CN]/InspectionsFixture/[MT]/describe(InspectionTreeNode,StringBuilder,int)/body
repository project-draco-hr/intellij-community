{
  for (int i=0; i < depth; i++) {
    sb.append("    ");
  }
  sb.append(node.toString());
  sb.append("\n");
  List<InspectionTreeNode> children=Lists.newArrayListWithExpectedSize(node.getChildCount());
  for (int i=0, n=node.getChildCount(); i < n; i++) {
    children.add((InspectionTreeNode)node.getChildAt(i));
  }
  Collections.sort(children,new Comparator<InspectionTreeNode>(){
    @Override public int compare(    InspectionTreeNode node1,    InspectionTreeNode node2){
      return node1.toString().compareTo(node2.toString());
    }
  }
);
  for (  InspectionTreeNode child : children) {
    describe(child,sb,depth + 1);
  }
}
