{
  extend(CompletionType.BASIC,psiElement().withLanguage(PythonLanguage.getInstance()).andOr(IN_IMPORT_AFTER_REF,IN_WITH_AFTER_REF).andNot(AFTER_QUALIFIER),new CompletionProvider<CompletionParameters>(){
    protected void addCompletions(    @NotNull final CompletionParameters parameters,    final ProcessingContext context,    @NotNull final CompletionResultSet result){
      final @NonNls String[] space_strings={"as"};
      putKeywords(space_strings,TailType.SPACE,result);
    }
  }
);
}
