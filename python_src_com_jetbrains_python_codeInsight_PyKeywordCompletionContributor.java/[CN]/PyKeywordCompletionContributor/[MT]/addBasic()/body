{
  extend(CompletionType.BASIC,psiElement().withLanguage(PythonLanguage.getInstance()).andNot(AFTER_QUALIFIED_REFERENCE).andNot(IN_IMPORT_STMT),new CompletionProvider<CompletionParameters>(){
    protected void addCompletions(    @NotNull final CompletionParameters parameters,    final ProcessingContext context,    @NotNull final CompletionResultSet result){
      final @NonNls String[] space_strings={"assert","def","class","for","del","exec","from","import","lambda","print","raise","while","with"};
      final @NonNls String[] colon_strings={"if","try"};
      final @NonNls String[] just_strings={"pass"};
      addKeywords(space_strings,TailType.SPACE,parameters,result);
      addKeywords(colon_strings,TailType.CASE_COLON,parameters,result);
      addKeywords(just_strings,TailType.NONE,parameters,result);
    }
  }
);
}
