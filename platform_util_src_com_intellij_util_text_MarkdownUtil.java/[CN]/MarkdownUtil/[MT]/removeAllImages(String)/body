{
  int n=text.length();
  List<TextRange> intervals=null;
  int i=0;
  while (i < n) {
    int imageEndIndex=findImageEndIndexInclusive(text,i);
    if (imageEndIndex != -1) {
      TextRange linkRange=findEnclosingLink(text,i,imageEndIndex);
      if (intervals == null) {
        intervals=new ArrayList<TextRange>(1);
      }
      final TextRange range;
      if (linkRange != null) {
        range=linkRange;
      }
 else {
        range=new TextRange(i,imageEndIndex);
      }
      intervals.add(range);
      i=range.getEndOffset();
    }
    i++;
  }
  if (intervals == null) {
    return text;
  }
  StringBuilder buf=new StringBuilder(text);
  for (int intervalInd=intervals.size() - 1; intervalInd >= 0; intervalInd--) {
    TextRange range=intervals.get(intervalInd);
    buf.delete(range.getStartOffset(),range.getEndOffset() + 1);
  }
  return buf.toString();
}
