{
  if (externalProject == null) {
    return;
  }
  Collection<DataNode<ModuleData>> moduleNodes=ExternalSystemApiUtil.findAllRecursively(externalProject,ProjectKeys.MODULE);
  for (  DataNode<ModuleData> node : moduleNodes) {
    myExternalModulePaths.add(node.getData().getLinkedExternalProjectPath());
  }
  ExternalSystemApiUtil.executeProjectChangeAction(true,new DisposeAwareProjectChange(myProject){
    @Override public void execute(){
      ProjectRootManagerEx.getInstanceEx(myProject).mergeRootsChangesDuring(new Runnable(){
        @Override public void run(){
          myProjectDataManager.importData(externalProject,myProject,true);
        }
      }
);
      processOrphanProjectLibraries();
    }
  }
);
}
