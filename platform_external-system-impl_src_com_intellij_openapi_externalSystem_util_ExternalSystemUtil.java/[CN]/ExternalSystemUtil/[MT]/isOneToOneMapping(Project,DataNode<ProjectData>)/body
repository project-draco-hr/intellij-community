{
  ExternalSystemSettingsManager settingsManager=ServiceManager.getService(ExternalSystemSettingsManager.class);
  String linkedExternalProjectPath=null;
  for (  ExternalSystemManager<?,?,?,?,?> manager : ExternalSystemApiUtil.getAllManagers()) {
    ProjectSystemId externalSystemId=manager.getSystemId();
    AbstractExternalSystemSettings systemSettings=settingsManager.getSettings(ideProject,externalSystemId);
    Collection projectsSettings=systemSettings.getLinkedProjectsSettings();
    int linkedProjectsNumber=projectsSettings.size();
    if (linkedProjectsNumber > 1) {
      return false;
    }
 else     if (linkedProjectsNumber == 1) {
      if (linkedExternalProjectPath == null) {
        linkedExternalProjectPath=((ExternalProjectSettings)projectsSettings.iterator().next()).getExternalProjectPath();
      }
 else {
        return false;
      }
    }
  }
  ProjectData projectData=externalProject.getData();
  if (linkedExternalProjectPath != null && !linkedExternalProjectPath.equals(projectData.getLinkedExternalProjectPath())) {
    return false;
  }
  PlatformFacade platformFacade=ServiceManager.getService(PlatformFacade.class);
  for (  Module module : platformFacade.getModules(ideProject)) {
    if (!projectData.getLinkedExternalProjectPath().equals(module.getOptionValue(ExternalSystemConstants.LINKED_PROJECT_PATH_KEY))) {
      return false;
    }
  }
  return true;
}
