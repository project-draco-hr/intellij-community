{
  List<GithubIssueComment> result=GithubApiUtil.getIssueComments(getAuthData(),getRepoAuthor(),getRepoName(),id);
  return ContainerUtil.map2Array(result,Comment.class,new Function<GithubIssueComment,Comment>(){
    @Override public Comment fun(    GithubIssueComment comment){
      return new GitHubComment(comment.getCreatedAt(),comment.getUser().getLogin(),comment.getBody(),comment.getUser().getGravatarId(),comment.getUser().getHtmlUrl());
    }
  }
);
}
