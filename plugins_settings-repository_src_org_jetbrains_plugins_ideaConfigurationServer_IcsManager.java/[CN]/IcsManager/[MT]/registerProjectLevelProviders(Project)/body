{
  StateStorageManager storageManager=((ProjectEx)project).getStateStore().getStateStorageManager();
  StateStorage workspaceFileStorage=storageManager.getFileStateStorage(StoragePathMacros.WORKSPACE_FILE);
  LOG.assertTrue(workspaceFileStorage != null);
  ProjectId projectId=workspaceFileStorage.getState(new ProjectId(),"IcsProjectId",ProjectId.class,null);
  if (projectId == null || projectId.uid == null) {
    return;
  }
  storageManager.setStreamProvider(new IcsStreamProvider(projectId.uid){
    @Override protected boolean isAutoCommit(    String fileSpec,    RoamingType roamingType){
      return !StorageUtil.isProjectOrModuleFile(fileSpec);
    }
    @Override public boolean isApplicable(    @NotNull String fileSpec,    @NotNull RoamingType roamingType){
      if (StorageUtil.isProjectOrModuleFile(fileSpec)) {
        return repositoryManager.has(IcsUrlBuilder.buildPath(fileSpec,roamingType,projectId));
      }
      return settings.shareProjectWorkspace || !fileSpec.equals(StoragePathMacros.WORKSPACE_FILE);
    }
  }
);
  updateStoragesFromStreamProvider(storageManager,storageManager.getStorageFileNames());
}
