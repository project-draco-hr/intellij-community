{
  try {
    settings.load();
  }
 catch (  Exception e) {
    LOG.error(e);
  }
  connectAndUpdateRepository();
  IcsStreamProvider streamProvider=new IcsStreamProvider(null){
    @NotNull @Override public Collection<String> listSubFiles(    @NotNull String fileSpec,    @NotNull RoamingType roamingType){
      return repositoryManager.listSubFileNames(IcsUrlBuilder.buildPath(fileSpec,roamingType,null));
    }
    @Override public void deleteFile(    @NotNull String fileSpec,    @NotNull RoamingType roamingType){
      if (!isShareable(fileSpec,roamingType)) {
        return;
      }
      repositoryManager.deleteAsync(IcsUrlBuilder.buildPath(fileSpec,roamingType,null));
      commitAlarm.cancelAndRequest();
    }
    @Override protected boolean isShareable(    @NotNull String fileSpec,    @NotNull RoamingType roamingType){
      return !fileSpec.equals(STAT_FILE) && !fileSpec.equals(STAT_VERSION_FILE);
    }
  }
;
  ((ApplicationImpl)application).getStateStore().getStateStorageManager().registerStreamProvider(streamProvider);
}
