{
  PsiJavaCodeReferenceElement element=annotation.getNameReferenceElement();
  PsiElement declaration=element == null ? null : element.resolve();
  if (!(declaration instanceof PsiClass))   return false;
  String fqn=nullable ? JAVAX_ANNOTATION_NULLABLE : JAVAX_ANNOTATION_NONNULL;
  if (!AnnotationUtil.isAnnotated((PsiClass)declaration,fqn,false,true))   return false;
  PsiAnnotation tqDefault=AnnotationUtil.findAnnotation((PsiClass)declaration,true,"javax.annotation.meta.TypeQualifierDefault");
  if (tqDefault == null)   return false;
  Set<PsiAnnotation.TargetType> required=AnnotationTargetUtil.extractRequiredAnnotationTargets(tqDefault.findAttributeValue(null));
  return required != null && (required.isEmpty() || ContainerUtil.intersects(required,Arrays.asList(placeTargetTypes)));
}
