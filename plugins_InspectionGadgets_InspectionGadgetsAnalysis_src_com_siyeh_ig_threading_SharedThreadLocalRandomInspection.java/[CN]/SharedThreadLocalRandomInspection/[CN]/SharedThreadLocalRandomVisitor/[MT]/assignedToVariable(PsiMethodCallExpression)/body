{
  final PsiElement parent=PsiTreeUtil.skipParentsOfType(expression,PsiParenthesizedExpression.class);
  if (parent instanceof PsiVariable) {
    return (PsiVariable)parent;
  }
  if (!(parent instanceof PsiAssignmentExpression)) {
    return null;
  }
  final PsiAssignmentExpression assignmentExpression=(PsiAssignmentExpression)parent;
  final PsiExpression rhs=assignmentExpression.getRExpression();
  if (!PsiTreeUtil.isAncestor(rhs,expression,false)) {
    return null;
  }
  final PsiExpression lhs=ParenthesesUtils.stripParentheses(assignmentExpression.getLExpression());
  if (!(lhs instanceof PsiReferenceExpression)) {
    return null;
  }
  final PsiReferenceExpression referenceExpression=(PsiReferenceExpression)lhs;
  final PsiElement target=referenceExpression.resolve();
  if (!(target instanceof PsiVariable)) {
    return null;
  }
  return (PsiVariable)target;
}
