{
  ProjectId projectId=ServiceManager.getService(project,ProjectId.class);
  if (projectId.uid == null) {
  }
  Change[] changes=context.getSelectedChanges();
  ProjectChangeCollectConsumer collectConsumer=new ProjectChangeCollectConsumer(project);
  if (changes != null && changes.length > 0) {
    for (    Change change : changes) {
      collectConsumer.consume(change);
    }
  }
 else {
    ChangeListManager manager=ChangeListManager.getInstance(project);
    FilePath[] paths=getRoots(context);
    for (    FilePath path : paths) {
      collectProjectChanges(manager.getChangesIn(path),collectConsumer);
    }
  }
  if (!collectConsumer.hasResult()) {
    return;
  }
  new CommitToIcsDialog(project,collectConsumer.getResult()).show();
}
