{
  if (!visited.add(aClass))   return false;
  if (!aClass.hasModifierProperty(PsiModifier.PUBLIC))   return false;
  for (  PsiClass superClass : aClass.getSupers()) {
    if (!accessible(superClass,visited))     return false;
  }
  PsiClass containingClass=aClass.getContainingClass();
  return containingClass == null || accessible(containingClass,visited);
}
