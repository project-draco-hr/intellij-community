{
  final IdeView view=e.getData(LangDataKeys.IDE_VIEW);
  final Project project=e.getData(CommonDataKeys.PROJECT);
  if (view == null || project == null) {
    return;
  }
  final PsiDirectory taskDir=DirectoryChooserUtil.getOrChooseDirectory(view);
  if (taskDir == null)   return;
  PsiDirectory lessonDir=taskDir.getParent();
  if (lessonDir == null) {
    return;
  }
  final CCProjectService service=CCProjectService.getInstance(project);
  final Course course=service.getCourse();
  final Task task=service.getTask(taskDir.getVirtualFile().getPath());
  final int index=task.getTaskFiles().size() + 1;
  String generatedName="file" + index;
  CreateTaskFileDialog dialog=new CreateTaskFileDialog(project,generatedName,course);
  dialog.show();
  if (dialog.getExitCode() != OK_EXIT_CODE) {
    return;
  }
  final String taskFileName=dialog.getFileName();
  if (taskFileName == null)   return;
  FileType type=dialog.getFileType();
  if (type == null) {
    return;
  }
  final CCLanguageManager CCLanguageManager=CCUtils.getStudyLanguageManager(course);
  if (CCLanguageManager == null) {
    return;
  }
  final String extension=type.getDefaultExtension();
  ApplicationManager.getApplication().runWriteAction(new Runnable(){
    @Override public void run(){
      final FileTemplate taskTemplate=CCLanguageManager.getTaskFileTemplateForExtension(project,extension);
      final String answerFileName=taskFileName + ".answer." + extension;
      try {
        if (taskTemplate == null) {
          VirtualFile file=taskDir.getVirtualFile().createChildData(this,answerFileName);
          ProjectView.getInstance(project).select(file,file,false);
          FileEditorManager.getInstance(project).openFile(file,true);
        }
 else {
          final PsiElement taskFile=FileTemplateUtil.createFromTemplate(taskTemplate,answerFileName,null,taskDir);
          ApplicationManager.getApplication().invokeLater(new Runnable(){
            @Override public void run(){
              EditorHelper.openInEditor(taskFile,false);
              view.selectElement(taskFile);
            }
          }
);
        }
        task.addTaskFile(taskFileName + "." + extension,index);
      }
 catch (      Exception ignored) {
      }
    }
  }
);
}
