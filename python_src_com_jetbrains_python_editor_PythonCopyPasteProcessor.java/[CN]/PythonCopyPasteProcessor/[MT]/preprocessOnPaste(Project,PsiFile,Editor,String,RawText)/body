{
  if (!CodeInsightSettings.getInstance().INDENT_TO_CARET_ON_PASTE || file.getLanguage() != PythonLanguage.getInstance()) {
    return text;
  }
  final CodeStyleSettings codeStyleSettings=CodeStyleSettingsManager.getSettings(project);
  final boolean useTabs=codeStyleSettings.useTabCharacter(PythonFileType.INSTANCE);
  final int indentSize=codeStyleSettings.getIndentSize(PythonFileType.INSTANCE);
  CharFilter NOT_INDENT_FILTER=new CharFilter(){
    public boolean accept(    char ch){
      return ch != (useTabs ? '\t' : ' ');
    }
  }
;
  final String indentChar=useTabs ? "\t" : " ";
  final CaretModel caretModel=editor.getCaretModel();
  final SelectionModel selectionModel=editor.getSelectionModel();
  final Document document=editor.getDocument();
  final int caretOffset=selectionModel.getSelectionStart() != selectionModel.getSelectionEnd() ? selectionModel.getSelectionStart() : caretModel.getOffset();
  final int lineNumber=document.getLineNumber(caretOffset);
  final int lineStartOffset=getLineStartSafeOffset(document,lineNumber);
  final int lineEndOffset=document.getLineEndOffset(lineNumber);
  final String linePrefix=document.getText(TextRange.create(lineStartOffset,caretOffset));
  if (!StringUtil.isEmptyOrSpaces(linePrefix))   return text;
  final PsiElement element=file.findElementAt(caretOffset);
  if (PsiTreeUtil.getParentOfType(element,PyStringLiteralExpression.class) != null)   return text;
  text=addLeadingSpaces(text,NOT_INDENT_FILTER,indentSize,indentChar);
  final String indentText=getIndentText(file,document,caretOffset,lineNumber);
  final String line=document.getText(TextRange.create(lineStartOffset,lineEndOffset));
  if (StringUtil.isEmptyOrSpaces(indentText) && shouldPasteOnPreviousLine(file,text,caretOffset)) {
    caretModel.moveToOffset(lineStartOffset);
    editor.getSelectionModel().setSelection(lineStartOffset,selectionModel.getSelectionEnd());
    if (StringUtil.isEmptyOrSpaces(line)) {
      ApplicationManager.getApplication().runWriteAction(new Runnable(){
        @Override public void run(){
          document.deleteString(lineStartOffset,lineEndOffset);
        }
      }
);
    }
  }
  String newText;
  if (StringUtil.isEmptyOrSpaces(indentText)) {
    newText=PyIndentUtil.changeIndent(text,false,indentText);
  }
 else {
    newText=text;
  }
  if (addLinebreak(text,line,useTabs) && selectionModel.getSelectionStart() == selectionModel.getSelectionEnd()) {
    newText+="\n";
  }
  return newText;
}
