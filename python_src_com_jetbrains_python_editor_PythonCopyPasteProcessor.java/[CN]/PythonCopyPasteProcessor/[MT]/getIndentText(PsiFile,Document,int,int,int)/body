{
  PsiElement nonWS=PyUtil.findNextAtOffset(file,caretOffset,PsiWhiteSpace.class);
  if (nonWS != null) {
    final IElementType nonWSType=nonWS.getNode().getElementType();
    if (nonWSType == PyTokenTypes.ELSE_KEYWORD || nonWSType == PyTokenTypes.ELIF_KEYWORD || nonWSType == PyTokenTypes.EXCEPT_KEYWORD || nonWSType == PyTokenTypes.FINALLY_KEYWORD) {
      lineNumber-=1;
      nonWS=PyUtil.findNextAtOffset(file,getLineStartSafeOffset(document,lineNumber),PsiWhiteSpace.class);
    }
  }
  int lineStartOffset=getLineStartSafeOffset(document,lineNumber);
  String indentText=document.getText(TextRange.create(lineStartOffset,caretOffset));
  if (nonWS != null && document.getLineNumber(nonWS.getTextOffset()) == lineNumber) {
    indentText=document.getText(TextRange.create(lineStartOffset,nonWS.getTextOffset()));
  }
 else   if (caretOffset == lineStartOffset) {
    final PsiElement ws=file.findElementAt(lineStartOffset);
    if (ws != null) {
      final String wsText=ws.getText();
      final List<String> strings=StringUtil.split(wsText,"\n");
      if (strings.size() >= 1) {
        indentText=strings.get(0);
      }
    }
    if (indentText.length() == firstLineIndent)     return "";
  }
  return indentText;
}
