{
  final ExclusionHandler<T> exclusionProcessor=ExclusionHandler.EXCLUSION_HANDLER.getData(e.getDataContext());
  if (exclusionProcessor == null || Disposer.isDisposed(exclusionProcessor)) {
    e.getPresentation().setEnabledAndVisible(false);
    return;
  }
  final Component component=PlatformDataKeys.CONTEXT_COMPONENT.getData(e.getDataContext());
  final Presentation presentation=e.getPresentation();
  if (!(component instanceof JTree) || !exclusionProcessor.isActionEnabled(myIsExclude)) {
    presentation.setEnabledAndVisible(false);
    return;
  }
  JTree tree=(JTree)component;
  final TreePath[] selection=tree.getSelectionPaths();
  if (selection == null) {
    presentation.setEnabledAndVisible(false);
    return;
  }
  boolean isEnabled=false;
  for (  TreePath path : selection) {
    final T node=(T)path.getLastPathComponent();
    final Boolean isNodeExcluded=exclusionProcessor.isNodeExcluded(node);
    if (myIsExclude != isNodeExcluded) {
      isEnabled=true;
      break;
    }
  }
  presentation.setEnabledAndVisible(isEnabled);
  if (isEnabled) {
    String text=getActionText();
    if (selection.length > 1) {
      text+=" All";
    }
    presentation.setText(text);
  }
}
