{
  MostlySingularMultiMap<String,AnnotationData> annotations=new MostlySingularMultiMap<String,AnnotationData>();
  HashMap<String,StringBuilder> contracts=new HashMap<String,StringBuilder>();
  for (  Map.Entry<Key,Value> solution : solutions.entrySet()) {
    Key key=solution.getKey();
    Value value=solution.getValue();
    if (value == Value.Top || value == Value.Bot) {
      continue;
    }
    Direction direction=key.direction;
    String annKey=annotationKey(key.method,direction);
    if ((direction instanceof In || direction instanceof Out) && value == Value.NotNull) {
      annotations.add(annKey,new AnnotationData("org.jetbrains.annotations.NotNull",""));
    }
 else     if (direction instanceof InOut) {
      StringBuilder sb=contracts.get(annKey);
      if (sb == null) {
        sb=new StringBuilder("\"");
        contracts.put(annKey,sb);
      }
 else {
        sb.append(';');
      }
      contractElement(sb,key.method,(InOut)direction,value);
    }
  }
  for (  Map.Entry<String,StringBuilder> contract : contracts.entrySet()) {
    annotations.add(contract.getKey(),new AnnotationData("org.jetbrains.annotations.Contract",contract.getValue().append('"').toString()));
  }
  return annotations;
}
