{
  ButtonUI ui=cb.getUI();
  String text=cb.getText();
  Icon buttonIcon=cb.getIcon();
  if (buttonIcon == null && ui != null) {
    if (ui instanceof BasicRadioButtonUI) {
      buttonIcon=((BasicRadioButtonUI)ui).getDefaultIcon();
    }
 else     if (isUnderAquaLookAndFeel()) {
      Ref<Method> cached=ourDefaultIconMethodsCache.get(ui.getClass());
      if (cached == null) {
        cached=Ref.create(ReflectionUtil.findMethod(Arrays.asList(ui.getClass().getMethods()),"getDefaultIcon",JComponent.class));
        ourDefaultIconMethodsCache.put(ui.getClass(),cached);
        if (!cached.isNull()) {
          cached.get().setAccessible(true);
        }
      }
      Method method=cached.get();
      if (method != null) {
        try {
          buttonIcon=(Icon)method.invoke(ui,cb);
        }
 catch (        Exception e) {
          cached.set(null);
        }
      }
    }
  }
  Dimension size=new Dimension();
  Rectangle viewRect=new Rectangle();
  Rectangle iconRect=new Rectangle();
  Rectangle textRect=new Rectangle();
  Insets i=cb.getInsets();
  size=cb.getSize(size);
  viewRect.x=i.left;
  viewRect.y=i.top;
  viewRect.width=size.width - (i.right + viewRect.x);
  viewRect.height=size.height - (i.bottom + viewRect.y);
  iconRect.x=iconRect.y=iconRect.width=iconRect.height=0;
  textRect.x=textRect.y=textRect.width=textRect.height=0;
  SwingUtilities.layoutCompoundLabel(cb,cb.getFontMetrics(cb.getFont()),text,buttonIcon,cb.getVerticalAlignment(),cb.getHorizontalAlignment(),cb.getVerticalTextPosition(),cb.getHorizontalTextPosition(),viewRect,iconRect,textRect,text == null ? 0 : cb.getIconTextGap());
  return textRect.x;
}
