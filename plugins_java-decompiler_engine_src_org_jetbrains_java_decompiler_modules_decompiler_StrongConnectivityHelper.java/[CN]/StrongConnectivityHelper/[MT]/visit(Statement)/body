{
  lstack.push(stat);
  dfsnummap.put(stat,ncounter);
  lowmap.put(stat,ncounter);
  ncounter++;
  List<Statement> lstSuccs=stat.getNeighbours(StatEdge.TYPE_REGULAR,Statement.DIRECTION_FORWARD);
  lstSuccs.removeAll(setProcessed);
  for (int i=0; i < lstSuccs.size(); i++) {
    Statement succ=lstSuccs.get(i);
    int secvalue;
    if (tset.contains(succ)) {
      secvalue=dfsnummap.get(succ);
    }
 else {
      tset.add(succ);
      visit(succ);
      secvalue=lowmap.get(succ);
    }
    lowmap.put(stat,Math.min(lowmap.get(stat),secvalue));
  }
  if (lowmap.get(stat).intValue() == dfsnummap.get(stat).intValue()) {
    List<Statement> lst=new ArrayList<>();
    Statement v;
    do {
      v=lstack.pop();
      lst.add(v);
    }
 while (v != stat);
    components.add(lst);
  }
}
