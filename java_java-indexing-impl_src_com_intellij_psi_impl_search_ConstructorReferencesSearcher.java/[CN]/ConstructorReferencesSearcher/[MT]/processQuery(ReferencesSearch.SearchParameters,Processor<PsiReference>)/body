{
  final PsiElement element=p.getElementToSearch();
  if (!(element instanceof PsiMethod)) {
    return;
  }
  final PsiMethod method=(PsiMethod)element;
  final PsiManager[] manager=new PsiManager[1];
  PsiClass aClass=ApplicationManager.getApplication().runReadAction(new Computable<PsiClass>(){
    public PsiClass compute(){
      if (!method.isConstructor())       return null;
      PsiClass aClass=method.getContainingClass();
      manager[0]=aClass == null ? null : aClass.getManager();
      return aClass;
    }
  }
);
  if (manager[0] == null) {
    return;
  }
  SearchScope scope=ApplicationManager.getApplication().runReadAction(new Computable<SearchScope>(){
    @Override public SearchScope compute(){
      return p.getEffectiveSearchScope();
    }
  }
);
  new ConstructorReferencesSearchHelper(manager[0]).processConstructorReferences(consumer,method,aClass,scope,p.isIgnoreAccessScope(),true,p.getOptimizer());
}
