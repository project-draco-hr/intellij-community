{
  super(member);
  LOG.assertTrue(member.isValid());
  mySourceReferenceList=sourceReferenceList;
  if (member instanceof GrMethod) {
    GrMethod method=(GrMethod)member;
    displayName=PsiFormatUtil.formatMethod(method,PsiSubstitutor.EMPTY,PsiFormatUtil.SHOW_NAME | PsiFormatUtil.SHOW_TYPE | PsiFormatUtil.TYPE_AFTER| PsiFormatUtil.SHOW_PARAMETERS,PsiFormatUtil.SHOW_NAME | PsiFormatUtil.SHOW_TYPE | PsiFormatUtil.TYPE_AFTER);
    PsiMethod[] superMethods=method.findSuperMethods();
    if (superMethods.length > 0) {
      overrides=!superMethods[0].hasModifierProperty(PsiModifier.ABSTRACT);
    }
 else {
      overrides=null;
    }
    isStatic=method.hasModifierProperty(PsiModifier.STATIC);
  }
 else   if (member instanceof GrField) {
    GrField field=(GrField)member;
    displayName=PsiFormatUtil.formatVariable(field,PsiFormatUtil.SHOW_NAME | PsiFormatUtil.SHOW_TYPE | PsiFormatUtil.TYPE_AFTER,PsiSubstitutor.EMPTY);
    isStatic=field.hasModifierProperty(PsiModifier.STATIC);
    overrides=null;
  }
 else   if (member instanceof GrTypeDefinition) {
    GrTypeDefinition aClass=(GrTypeDefinition)member;
    if (isSuperClass) {
      if (aClass.isInterface()) {
        displayName=RefactoringBundle.message("member.info.implements.0",aClass.getName());
        overrides=Boolean.FALSE;
      }
 else {
        displayName=RefactoringBundle.message("member.info.extends.0",aClass.getName());
        overrides=Boolean.TRUE;
      }
    }
 else {
      displayName=aClass.getName();
      overrides=null;
    }
    isStatic=aClass.hasModifierProperty(PsiModifier.STATIC);
  }
 else {
    LOG.assertTrue(false);
    isStatic=false;
    displayName="";
    overrides=null;
  }
}
