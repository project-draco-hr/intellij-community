{
  if (paths.length == 0)   return Revision.SVN_INVALID_REVNUM;
  final List<String> parameters=new ArrayList<String>();
  CommandUtil.put(parameters,depth);
  CommandUtil.put(parameters,noUnlock,"--no-unlock");
  CommandUtil.put(parameters,keepChangelist,"--keep-changelists");
  CommandUtil.putChangeLists(parameters,changelists);
  if (revpropTable != null && !revpropTable.isEmpty()) {
    final Set<Map.Entry<Object,Object>> set=revpropTable.entrySet();
    for (    Map.Entry<Object,Object> entry : set) {
      parameters.add("--with-revprop");
      parameters.add(entry.getKey() + "=" + entry.getValue());
    }
  }
  parameters.add("-m");
  parameters.add(message);
  Arrays.sort(paths);
  CommandUtil.put(parameters,paths);
  myCommandListener.setBaseDirectory(SvnBindUtil.correctUpToExistingParent(paths[0]));
  SvnLineCommand.runWithAuthenticationAttempt(paths[0],urlProvider.convert(paths),SvnCommandName.ci,myCommandListener,myAuthenticationCallback,ArrayUtil.toStringArray(parameters));
  myCommandListener.throwExceptionIfOccurred();
  return validateRevisionNumber();
}
