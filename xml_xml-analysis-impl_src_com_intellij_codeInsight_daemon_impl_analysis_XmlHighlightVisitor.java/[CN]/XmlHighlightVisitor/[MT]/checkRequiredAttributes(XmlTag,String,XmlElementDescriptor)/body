{
  XmlAttributeDescriptor[] attributeDescriptors=elementDescriptor.getAttributesDescriptors(tag);
  Set<String> requiredAttributes=null;
  for (  XmlAttributeDescriptor attribute : attributeDescriptors) {
    if (attribute != null && attribute.isRequired()) {
      if (requiredAttributes == null) {
        requiredAttributes=new HashSet<>();
      }
      requiredAttributes.add(attribute.getName(tag));
    }
  }
  if (requiredAttributes != null) {
    for (    final String attrName : requiredAttributes) {
      if (!hasAttribute(tag,attrName) && !XmlExtension.getExtension(tag.getContainingFile()).isRequiredAttributeImplicitlyPresent(tag,attrName)) {
        IntentionAction insertRequiredAttributeIntention=XmlQuickFixFactory.getInstance().insertRequiredAttributeFix(tag,attrName);
        final String localizedMessage=XmlErrorMessages.message("element.doesnt.have.required.attribute",name,attrName);
        final InspectionProfile profile=InspectionProfileManager.getInstance(tag.getProject()).getCurrentProfile();
        RequiredAttributesInspectionBase inspection=(RequiredAttributesInspectionBase)profile.getUnwrappedTool(XmlEntitiesInspection.REQUIRED_ATTRIBUTES_SHORT_NAME,tag);
        if (inspection != null) {
          reportOneTagProblem(tag,attrName,localizedMessage,insertRequiredAttributeIntention,HighlightDisplayKey.find(XmlEntitiesInspection.REQUIRED_ATTRIBUTES_SHORT_NAME),inspection,RequiredAttributesInspectionBase.getIntentionAction(attrName));
        }
      }
    }
  }
}
