{
  super.visitMethodCallExpression(expression);
  final List<PsiClassType> exceptions=ExceptionUtil.getThrownExceptions(expression);
  if (exceptions.isEmpty()) {
    return;
  }
  for (  PsiClassType exception : exceptions) {
    final PsiCodeBlock finallyBlock=getContainingFinallyBlock(expression,exception);
    if (finallyBlock != null && isHidingOfPreviousException(finallyBlock,expression)) {
      registerMethodCallError(expression,exception);
      return;
    }
  }
}
