{
  expression=ParenthesesUtils.stripParentheses(expression);
  if (expression instanceof PsiMethodCallExpression) {
    final PsiMethodCallExpression methodCallExpression=(PsiMethodCallExpression)expression;
    final PsiReferenceExpression methodExpression=methodCallExpression.getMethodExpression();
    final String name=methodExpression.getReferenceName();
    if (!"isPresent".equals(name)) {
      return false;
    }
    final PsiExpression qualifier=methodExpression.getQualifierExpression();
    if (!(qualifier instanceof PsiReferenceExpression)) {
      return false;
    }
    final PsiReferenceExpression referenceExpression=(PsiReferenceExpression)qualifier;
    final PsiElement qTarget=referenceExpression.resolve();
    final PsiElement target=reference.resolve();
    return qTarget != null && qTarget.equals(target);
  }
 else   if (expression instanceof PsiPolyadicExpression) {
    final PsiPolyadicExpression polyadicExpression=(PsiPolyadicExpression)expression;
    final PsiExpression[] operands=polyadicExpression.getOperands();
    for (    PsiExpression operand : operands) {
      if (isIsPresentCheck(operand,reference)) {
        return true;
      }
    }
  }
  return false;
}
