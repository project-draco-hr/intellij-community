{
  expression=PsiUtil.deparenthesizeExpression(expression);
  if (expression instanceof PsiPrefixExpression) {
    final PsiPrefixExpression prefixExpression=(PsiPrefixExpression)expression;
    final IElementType tokenType=prefixExpression.getOperationTokenType();
    if (tokenType != JavaTokenType.EXCL) {
      return;
    }
    negate=!negate;
    checkExpression(prefixExpression.getOperand());
  }
 else   if (expression instanceof PsiPolyadicExpression) {
    final PsiPolyadicExpression binaryExpression=(PsiPolyadicExpression)expression;
    visitPolyadicExpression(binaryExpression);
  }
 else   if (expression instanceof PsiMethodCallExpression) {
    final PsiMethodCallExpression methodCallExpression=(PsiMethodCallExpression)expression;
    final PsiReferenceExpression methodExpression=methodCallExpression.getMethodExpression();
    final String name=methodExpression.getReferenceName();
    if (!"isPresent".equals(name)) {
      return;
    }
    final PsiExpression qualifier=ParenthesesUtils.stripParentheses(methodExpression.getQualifierExpression());
    if (!(qualifier instanceof PsiReferenceExpression)) {
      return;
    }
    final PsiReferenceExpression referenceExpression=(PsiReferenceExpression)qualifier;
    hasIsPresentCall=!negate && EquivalenceChecker.expressionsAreEquivalent(referenceExpression,this.referenceExpression);
  }
 else   if (expression instanceof PsiReferenceExpression) {
    final PsiReferenceExpression referenceExpression=(PsiReferenceExpression)expression;
    final PsiExpression definition=VariableSearchUtils.findDefinition(referenceExpression,null);
    final PsiExpression optionalDefinition=VariableSearchUtils.findDefinition(this.referenceExpression,null);
    if (definition == null || optionalDefinition == null || optionalDefinition.getTextOffset() > definition.getTextOffset()) {
      return;
    }
    checkExpression(definition);
  }
}
