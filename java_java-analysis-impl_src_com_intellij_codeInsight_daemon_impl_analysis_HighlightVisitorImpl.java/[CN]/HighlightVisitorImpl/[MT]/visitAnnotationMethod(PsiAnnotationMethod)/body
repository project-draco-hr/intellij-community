{
  PsiType returnType=method.getReturnType();
  PsiAnnotationMemberValue value=method.getDefaultValue();
  if (returnType != null && value != null) {
    myHolder.add(AnnotationsHighlightUtil.checkMemberValueType(value,returnType));
  }
  myHolder.add(AnnotationsHighlightUtil.checkValidAnnotationType(method.getReturnType(),method.getReturnTypeElement()));
  final PsiClass aClass=method.getContainingClass();
  myHolder.add(AnnotationsHighlightUtil.checkCyclicMemberType(method.getReturnTypeElement(),aClass));
  myHolder.add(AnnotationsHighlightUtil.checkClashesWithSuperMethods(method));
  if (!myHolder.hasErrorResults() && aClass != null) {
    myHolder.add(HighlightMethodUtil.checkDuplicateMethod(aClass,method,getDuplicateMethods(aClass)));
  }
}
