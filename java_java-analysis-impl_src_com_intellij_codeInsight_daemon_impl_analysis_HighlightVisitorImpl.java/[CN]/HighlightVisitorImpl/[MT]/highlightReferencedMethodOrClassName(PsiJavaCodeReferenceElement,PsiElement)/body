{
  PsiElement parent=element.getParent();
  final TextAttributesScheme colorsScheme=myHolder.getColorsScheme();
  if (parent instanceof PsiMethodCallExpression) {
    PsiMethod method=((PsiMethodCallExpression)parent).resolveMethod();
    PsiElement methodNameElement=element.getReferenceNameElement();
    if (method != null && methodNameElement != null && !(methodNameElement instanceof PsiKeyword)) {
      myHolder.add(HighlightNamesUtil.highlightMethodName(method,methodNameElement,false,colorsScheme));
      myHolder.add(HighlightNamesUtil.highlightClassNameInQualifier(element,colorsScheme));
    }
  }
 else   if (parent instanceof PsiConstructorCall) {
    try {
      PsiMethod method=((PsiConstructorCall)parent).resolveConstructor();
      PsiMember methodOrClass=method != null ? method : resolved instanceof PsiClass ? (PsiClass)resolved : null;
      if (methodOrClass != null) {
        final PsiElement referenceNameElement=element.getReferenceNameElement();
        if (referenceNameElement != null) {
          TextRange range=referenceNameElement.getTextRange();
          myHolder.add(HighlightNamesUtil.highlightMethodName(methodOrClass,referenceNameElement,range,colorsScheme,false));
        }
      }
    }
 catch (    IndexNotReadyException ignored) {
    }
  }
 else   if (resolved instanceof PsiPackage) {
    myHolder.add(HighlightNamesUtil.highlightPackage(resolved,element,colorsScheme));
  }
 else   if (resolved instanceof PsiClass) {
    myHolder.add(HighlightNamesUtil.highlightClassName((PsiClass)resolved,element,colorsScheme));
  }
}
