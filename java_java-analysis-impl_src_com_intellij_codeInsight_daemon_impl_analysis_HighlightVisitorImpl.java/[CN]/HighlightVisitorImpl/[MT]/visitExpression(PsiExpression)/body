{
  ProgressManager.checkCanceled();
  super.visitExpression(expression);
  PsiType type=expression.getType();
  if (myHolder.add(HighlightUtil.checkMustBeBoolean(expression,type)))   return;
  if (expression instanceof PsiArrayAccessExpression) {
    myHolder.add(HighlightUtil.checkValidArrayAccessExpression((PsiArrayAccessExpression)expression));
  }
  PsiElement parent=expression.getParent();
  if (parent instanceof PsiNewExpression && ((PsiNewExpression)parent).getQualifier() != expression && ((PsiNewExpression)parent).getArrayInitializer() != expression) {
    myHolder.add(HighlightUtil.checkAssignability(PsiType.INT,expression.getType(),expression,expression));
  }
  if (!myHolder.hasErrorResults())   myHolder.add(HighlightControlFlowUtil.checkCannotWriteToFinal(expression,myFile));
  if (!myHolder.hasErrorResults())   myHolder.add(HighlightUtil.checkVariableExpected(expression));
  if (!myHolder.hasErrorResults())   myHolder.addAll(HighlightUtil.checkArrayInitializer(expression,type));
  if (!myHolder.hasErrorResults())   myHolder.add(HighlightUtil.checkTernaryOperatorConditionIsBoolean(expression,type));
  if (!myHolder.hasErrorResults())   myHolder.add(HighlightUtil.checkAssertOperatorTypes(expression,type));
  if (!myHolder.hasErrorResults())   myHolder.add(HighlightUtil.checkSynchronizedExpressionType(expression,type,myFile));
  if (!myHolder.hasErrorResults())   myHolder.add(HighlightUtil.checkConditionalExpressionBranchTypesMatch(expression,type));
  if (!myHolder.hasErrorResults() && parent instanceof PsiThrowStatement && ((PsiThrowStatement)parent).getException() == expression) {
    myHolder.add(HighlightUtil.checkMustBeThrowable(type,expression,true));
  }
  if (!myHolder.hasErrorResults()) {
    myHolder.add(AnnotationsHighlightUtil.checkConstantExpression(expression));
  }
  if (!myHolder.hasErrorResults() && parent instanceof PsiForeachStatement && ((PsiForeachStatement)parent).getIteratedValue() == expression) {
    myHolder.add(GenericsHighlightUtil.checkForeachExpressionTypeIsIterable(expression));
  }
}
