{
  PsiElement patternElement;
  MatchingHandler handler;
  MatchingStrategy strategy=context.getPattern().getStrategy();
  skipIfNecessary(nodes,nodes2,strategy);
  skipIfNecessary(nodes2,nodes,strategy);
  if (nodes2.hasNext() && (handler=context.getPattern().getHandler(nodes.current())).match(patternElement=nodes.current(),nodes2.current(),context)) {
    nodes.advance();
    if (shouldAdvanceTheMatchFor(patternElement,nodes2.current())) {
      nodes2.advance();
      skipIfNecessary(nodes,nodes2,strategy);
    }
    skipIfNecessary(nodes2,nodes,strategy);
    if (nodes.hasNext()) {
      final MatchingHandler nextHandler=context.getPattern().getHandler(nodes.current());
      if (nextHandler.matchSequentially(nodes,nodes2,context)) {
        return true;
      }
 else {
        nodes.rewind();
        nodes2.rewind();
      }
    }
 else {
      return handler.isMatchSequentiallySucceeded(nodes2);
    }
  }
  return false;
}
