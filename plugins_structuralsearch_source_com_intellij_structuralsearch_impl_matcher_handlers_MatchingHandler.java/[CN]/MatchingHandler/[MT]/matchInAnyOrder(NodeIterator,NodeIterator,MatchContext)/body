{
  final MatchResultImpl saveResult=context.hasResult() ? context.getResult() : null;
  context.setResult(null);
  try {
    if (patternNodes.hasNext() && !matchedNodes.hasNext()) {
      return validateSatisfactionOfHandlers(patternNodes,context);
    }
    Set<PsiElement> usedVars=null;
    for (; patternNodes.hasNext(); patternNodes.advance()) {
      final PsiElement patternNode=patternNodes.current();
      final PsiElement startMatching=matchedNodes.current();
      do {
        final MatchingHandler handler=context.getPattern().getHandler(patternNode);
        final PsiElement element=handler.getPinnedNode(null);
        final PsiElement matchedNode=element != null ? element : matchedNodes.current();
        if (element == null)         matchedNodes.advance();
        if (!matchedNodes.hasNext())         matchedNodes.reset();
        if (usedVars == null || !usedVars.contains(matchedNode)) {
          final boolean matched=handler.match(patternNode,matchedNode,context);
          if (matched) {
            if (usedVars == null)             usedVars=new HashSet<PsiElement>();
            usedVars.add(matchedNode);
            if (context.getMatcher().shouldAdvanceThePattern(patternNode,matchedNode)) {
              break;
            }
          }
 else           if (element != null) {
            return false;
          }
          clearingVisitor.clearState(context.getPattern(),patternNode);
        }
        if (startMatching == matchedNodes.current()) {
          final boolean result=validateSatisfactionOfHandlers(patternNodes,context);
          if (result && context.getMatchedElementsListener() != null) {
            context.getMatchedElementsListener().matchedElements(usedVars);
          }
          return result;
        }
      }
 while (true);
      if (!context.getMatcher().shouldAdvanceThePattern(patternNode,null)) {
        patternNodes.rewind();
      }
    }
    final boolean result=validateSatisfactionOfHandlers(patternNodes,context);
    if (result && context.getMatchedElementsListener() != null) {
      context.getMatchedElementsListener().matchedElements(usedVars);
    }
    return result;
  }
  finally {
    if (saveResult != null) {
      if (context.hasResult()) {
        saveResult.getMatches().addAll(context.getResult().getMatches());
      }
      context.setResult(saveResult);
    }
  }
}
