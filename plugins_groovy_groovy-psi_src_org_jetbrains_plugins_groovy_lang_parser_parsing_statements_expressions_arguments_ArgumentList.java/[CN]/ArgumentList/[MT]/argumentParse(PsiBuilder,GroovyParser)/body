{
  PsiBuilder.Marker argMarker=builder.mark();
  Pair<Boolean,Boolean> check=argumentLabelStartCheck(builder,parser);
  if (check.first) {
    ParserUtils.getToken(builder,GroovyTokenTypes.mCOLON,GroovyBundle.message("colon.expected"));
    if (!AssignmentExpression.parse(builder,parser)) {
      builder.error(GroovyBundle.message("expression.expected"));
    }
    argMarker.done(GroovyElementTypes.NAMED_ARGUMENT);
    return true;
  }
  if (check.second) {
    argMarker.drop();
    return true;
  }
  if (ParserUtils.getToken(builder,GroovyTokenTypes.mSTAR)) {
    if (AssignmentExpression.parse(builder,parser)) {
      argMarker.done(GroovyElementTypes.SPREAD_ARGUMENT);
    }
 else {
      builder.error(GroovyBundle.message("colon.expected"));
      argMarker.done(GroovyElementTypes.NAMED_ARGUMENT);
    }
    return true;
  }
  argMarker.drop();
  return AssignmentExpression.parse(builder,parser);
}
