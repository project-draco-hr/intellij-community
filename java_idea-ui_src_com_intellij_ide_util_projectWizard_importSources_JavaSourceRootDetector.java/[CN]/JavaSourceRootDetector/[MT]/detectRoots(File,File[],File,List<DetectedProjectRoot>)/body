{
  if (dir.getName().equals("node_modules")) {
    return DirectoryProcessingResult.SKIP_CHILDREN;
  }
  final String fileExtension=getFileExtension();
  if (JavaFileType.DEFAULT_EXTENSION.equals(fileExtension)) {
    for (    File child : children) {
      if (child.isFile() && "module-info.java".equals(child.getName())) {
        JavaModuleSourceRoot sourceRoot=new JavaModuleSourceRoot(dir,getLanguageName(),true);
        result.add(sourceRoot);
        return DirectoryProcessingResult.SKIP_CHILDREN;
      }
    }
  }
  for (  File child : children) {
    if (child.isFile() && FileUtilRt.extensionEquals(child.getName(),fileExtension)) {
      Pair<File,String> root=CommonSourceRootDetectionUtil.IO_FILE.suggestRootForFileWithPackageStatement(child,base,getPackageNameFetcher(),true);
      if (root != null) {
        JavaModuleSourceRoot sourceRoot=new JavaModuleSourceRoot(root.getFirst(),root.getSecond(),getLanguageName());
        result.add(sourceRoot);
        if (areLastRootsTheSame(result,sourceRoot,20)) {
          return DirectoryProcessingResult.skipChildrenAndParentsUpTo(root.getFirst());
        }
      }
      return DirectoryProcessingResult.SKIP_CHILDREN;
    }
  }
  return DirectoryProcessingResult.PROCESS_CHILDREN;
}
