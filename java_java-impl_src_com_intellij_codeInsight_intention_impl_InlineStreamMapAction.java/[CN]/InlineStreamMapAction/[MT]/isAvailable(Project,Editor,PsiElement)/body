{
  if (!(element instanceof PsiIdentifier))   return false;
  final PsiElement parent=element.getParent();
  if (!(parent instanceof PsiReferenceExpression))   return false;
  final PsiElement gParent=parent.getParent();
  if (!(gParent instanceof PsiMethodCallExpression))   return false;
  PsiMethodCallExpression curCall=(PsiMethodCallExpression)gParent;
  if (!isMapCall(curCall))   return false;
  PsiMethodCallExpression nextCall=getNextExpressionToMerge(curCall);
  if (nextCall == null)   return false;
  String key=curCall.getArgumentList().getExpressions().length == 0 || nextCall.getArgumentList().getExpressions().length == 0 ? "intention.inline.map.merge.text" : "intention.inline.map.inline.text";
  setText(CodeInsightBundle.message(key,element.getText(),nextCall.getMethodExpression().getReferenceName()));
  return true;
}
