{
  PsiMethodCallExpression mapCall=PsiTreeUtil.getParentOfType(element,PsiMethodCallExpression.class);
  if (mapCall == null)   return;
  PsiMethodCallExpression nextCall=getNextExpressionToMerge(mapCall);
  if (nextCall == null)   return;
  PsiExpression nextQualifier=nextCall.getMethodExpression().getQualifierExpression();
  if (nextQualifier == null)   return;
  String newName=translateName(mapCall,nextCall);
  if (newName == null)   return;
  if (!FileModificationService.getInstance().preparePsiElementForWrite(element))   return;
  PsiLambdaExpression previousLambda=getLambda(mapCall);
  LOG.assertTrue(previousLambda != null);
  PsiExpression previousBody=LambdaUtil.extractSingleExpressionFromBody(previousLambda.getBody());
  LOG.assertTrue(previousBody != null);
  PsiLambdaExpression lambda=getLambda(nextCall);
  LOG.assertTrue(lambda != null);
  if (!lambda.isPhysical()) {
    lambda=(PsiLambdaExpression)nextCall.getArgumentList().add(lambda);
  }
  PsiElement body=lambda.getBody();
  LOG.assertTrue(body != null);
  PsiParameter[] nextParameters=lambda.getParameterList().getParameters();
  LOG.assertTrue(nextParameters.length == 1);
  PsiParameter[] prevParameters=previousLambda.getParameterList().getParameters();
  LOG.assertTrue(prevParameters.length == 1);
  PsiElementFactory factory=JavaPsiFacade.getElementFactory(project);
  for (  PsiReference ref : ReferencesSearch.search(nextParameters[0],new LocalSearchScope(body)).findAll()) {
    PsiElement e=ref.getElement();
    PsiExpression replacement=previousBody;
    if (e.getParent() instanceof PsiExpression && ParenthesesUtils.areParenthesesNeeded(previousBody,(PsiExpression)e.getParent(),false)) {
      replacement=factory.createExpressionFromText("(a)",e);
      PsiExpression parenthesized=((PsiParenthesizedExpression)replacement).getExpression();
      LOG.assertTrue(parenthesized != null);
      parenthesized.replace(previousBody);
    }
    e.replace(replacement);
  }
  nextParameters[0].replace(prevParameters[0]);
  PsiElement nameElement=nextCall.getMethodExpression().getReferenceNameElement();
  if (nameElement != null && !nameElement.getText().equals(newName)) {
    nameElement.replace(factory.createIdentifier(newName));
  }
  PsiExpression prevQualifier=mapCall.getMethodExpression().getQualifierExpression();
  if (prevQualifier == null) {
    nextQualifier.delete();
  }
 else {
    nextQualifier.replace(prevQualifier);
  }
  CodeStyleManager.getInstance(project).reformat(lambda);
}
