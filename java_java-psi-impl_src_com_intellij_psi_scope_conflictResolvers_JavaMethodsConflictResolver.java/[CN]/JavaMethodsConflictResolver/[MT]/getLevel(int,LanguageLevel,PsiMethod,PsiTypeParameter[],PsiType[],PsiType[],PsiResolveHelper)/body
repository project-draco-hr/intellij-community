{
  final PsiSubstitutor methodSubstitutor2=calculateMethodSubstitutor(typeParameters2,types2,types1,resolveHelper,languageLevel);
  final int level=Math.min(applicabilityLevel,PsiUtil.getApplicabilityLevel(method2,methodSubstitutor2,types1,languageLevel,false));
  if (level > MethodCandidateInfo.ApplicabilityLevel.NOT_APPLICABLE) {
    for (    PsiTypeParameter typeParameter : typeParameters2) {
      final PsiType substituted=methodSubstitutor2.substitute(typeParameter);
      for (      PsiClassType extendsType : typeParameter.getExtendsListTypes()) {
        if (substituted == null || !TypeConversionUtil.isAssignable(methodSubstitutor2.substitute(extendsType),substituted,false)) {
          return MethodCandidateInfo.ApplicabilityLevel.NOT_APPLICABLE;
        }
      }
    }
    if (level == MethodCandidateInfo.ApplicabilityLevel.VARARGS) {
      if (!TypeConversionUtil.isAssignable(methodSubstitutor2.substitute(types2[types1.length - 1]),types1[types1.length - 1])) {
        return MethodCandidateInfo.ApplicabilityLevel.NOT_APPLICABLE;
      }
    }
  }
  return level;
}
