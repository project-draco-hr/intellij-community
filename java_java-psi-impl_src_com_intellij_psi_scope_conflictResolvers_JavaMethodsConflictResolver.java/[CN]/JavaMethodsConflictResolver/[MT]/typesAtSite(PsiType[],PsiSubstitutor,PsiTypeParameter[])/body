{
  final PsiType[] types=PsiType.createArray(types1.length);
  for (int i=0; i < types1.length; i++) {
    types[i]=siteSubstitutor1.substitute(types1[i]);
    if (types[i] instanceof PsiClassType) {
      final PsiClass aClass=((PsiClassType)types[i]).resolve();
      if (aClass instanceof PsiTypeParameter) {
        final List<PsiType> resultBounds=new ArrayList<PsiType>();
        for (        PsiType bound : aClass.getExtendsListTypes()) {
          bound=siteSubstitutor1.substitute(bound);
          if (!dependsOnOtherTypeParams(bound,typeParameters1)) {
            resultBounds.add(bound);
          }
 else {
            resultBounds.clear();
            break;
          }
        }
        if (!resultBounds.isEmpty()) {
          types[i]=PsiIntersectionType.createIntersection(resultBounds);
        }
      }
    }
  }
  return types;
}
