{
  if (!(myArgumentsList instanceof PsiExpressionList))   return;
  PsiClass qualifierClass=null;
  for (Iterator<CandidateInfo> iterator=conflicts.iterator(); iterator.hasNext(); ) {
    CandidateInfo conflict=iterator.next();
    if (!(conflict instanceof MethodCandidateInfo))     continue;
    final PsiMethod method=((MethodCandidateInfo)conflict).getElement();
    if (method.hasModifierProperty(PsiModifier.STATIC)) {
      if (conflict.getCurrentFileResolveScope() instanceof PsiImportStaticStatement)       continue;
      final PsiClass containingClass=method.getContainingClass();
      if (containingClass != null && containingClass.isInterface()) {
        if (qualifierClass == null) {
          qualifierClass=getQualifiedClass(method);
          if (qualifierClass == null)           return;
        }
        if (!containingClass.getManager().areElementsEquivalent(containingClass,qualifierClass)) {
          iterator.remove();
        }
      }
    }
  }
}
