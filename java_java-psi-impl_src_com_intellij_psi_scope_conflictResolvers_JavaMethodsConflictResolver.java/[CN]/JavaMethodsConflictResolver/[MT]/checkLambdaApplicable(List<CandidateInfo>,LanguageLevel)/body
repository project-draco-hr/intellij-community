{
  if (!languageLevel.isAtLeast(LanguageLevel.JDK_1_8))   return;
  for (int i=0; i < getActualParametersLength(); i++) {
    PsiExpression expression;
    if (myArgumentsList instanceof PsiExpressionList) {
      expression=((PsiExpressionList)myArgumentsList).getExpressions()[i];
    }
 else {
      final PsiType argType=getActualParameterTypes()[i];
      expression=argType instanceof PsiLambdaExpressionType ? ((PsiLambdaExpressionType)argType).getExpression() : null;
    }
    final PsiLambdaExpression lambdaExpression=findNestedLambdaExpression(expression);
    if (lambdaExpression != null) {
      checkLambdaApplicable(conflicts,i,lambdaExpression);
    }
  }
}
