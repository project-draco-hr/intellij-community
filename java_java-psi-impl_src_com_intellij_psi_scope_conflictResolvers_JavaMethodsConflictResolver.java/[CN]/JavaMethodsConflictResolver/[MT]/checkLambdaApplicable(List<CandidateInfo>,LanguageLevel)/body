{
  if (!languageLevel.isAtLeast(LanguageLevel.JDK_1_8))   return;
  for (int i=0; i < getActualParametersLength(); i++) {
    PsiExpression expression;
    if (myArgumentsList instanceof PsiExpressionList) {
      expression=((PsiExpressionList)myArgumentsList).getExpressions()[i];
    }
 else {
      final PsiType argType=getActualParameterTypes()[i];
      expression=argType instanceof PsiLambdaExpressionType ? ((PsiLambdaExpressionType)argType).getExpression() : null;
    }
    if (expression instanceof PsiLambdaExpression) {
      final PsiLambdaExpression lambdaExpression=(PsiLambdaExpression)expression;
      for (Iterator<CandidateInfo> iterator=conflicts.iterator(); iterator.hasNext(); ) {
        ProgressManager.checkCanceled();
        final CandidateInfo conflict=iterator.next();
        final PsiMethod method=(PsiMethod)conflict.getElement();
        if (method != null) {
          final PsiParameter[] methodParameters=method.getParameterList().getParameters();
          if (methodParameters.length == 0)           continue;
          final PsiParameter param=i < methodParameters.length ? methodParameters[i] : methodParameters[methodParameters.length - 1];
          final PsiType paramType=param.getType();
          if (!lambdaExpression.isAcceptable(((MethodCandidateInfo)conflict).getSubstitutor(false).substitute(paramType),lambdaExpression.hasFormalParameterTypes())) {
            iterator.remove();
          }
        }
      }
    }
  }
}
