{
  for (Iterator<CandidateInfo> iterator=conflicts.iterator(); iterator.hasNext(); ) {
    ProgressManager.checkCanceled();
    final CandidateInfo conflict=iterator.next();
    final PsiMethod method=(PsiMethod)conflict.getElement();
    final PsiParameter[] methodParameters=method.getParameterList().getParameters();
    if (methodParameters.length == 0)     continue;
    final PsiParameter param=i < methodParameters.length ? methodParameters[i] : methodParameters[methodParameters.length - 1];
    final PsiType paramType=param.getType();
    final PsiClass paramClass=PsiUtil.resolveClassInType(paramType);
    if (paramClass instanceof PsiTypeParameter && ((PsiTypeParameter)paramClass).getOwner() == method)     continue;
    if (!lambdaExpression.isAcceptable(((MethodCandidateInfo)conflict).getSubstitutor(false).substitute(paramType),InferenceSession.isPertinentToApplicability(lambdaExpression,method))) {
      iterator.remove();
    }
  }
}
