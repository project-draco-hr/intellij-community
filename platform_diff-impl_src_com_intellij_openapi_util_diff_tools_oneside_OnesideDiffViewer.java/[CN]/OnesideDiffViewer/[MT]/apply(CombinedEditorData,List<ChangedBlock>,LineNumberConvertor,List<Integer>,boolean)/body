{
  return new Runnable(){
    @Override public void run(){
      clearDiffPresentation();
      if (isEqual)       myPanel.addContentsEqualNotification();
      myEditor.getGutterComponentEx().setLineNumberConvertor(data.getLineConvertor1(),data.getLineConvertor2());
      ApplicationManager.getApplication().runWriteAction(new Runnable(){
        @Override public void run(){
          myDocument.setText(data.getText());
        }
      }
);
      if (data.getHighlighter() != null)       myEditor.setHighlighter(data.getHighlighter());
      DiffUtil.setEditorCodeStyle(myProject,myEditor,data.getFileType());
      ArrayList<OnesideDiffChange> diffChanges=new ArrayList<OnesideDiffChange>(blocks.size());
      for (      ChangedBlock block : blocks) {
        diffChanges.add(new OnesideDiffChange(myEditor,block));
      }
      ArrayList<OnesideDiffSeparator> diffSeparators=new ArrayList<OnesideDiffSeparator>(separatorLines.size());
      for (      Integer line : separatorLines) {
        diffSeparators.add(new OnesideDiffSeparator(myEditor,line));
      }
      myChangedBlockData=new ChangedBlockData(diffChanges,convertor,diffSeparators);
      myScrollToLineHelper.onRediff();
      myStatusPanel.update();
      myPanel.setGoodContent();
    }
  }
;
}
