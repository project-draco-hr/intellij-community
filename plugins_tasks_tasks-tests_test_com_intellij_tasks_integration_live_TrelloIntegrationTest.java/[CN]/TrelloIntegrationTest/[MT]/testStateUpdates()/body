{
  TrelloCard card=myRepository.fetchCardById(FEATURE_CARD_ID);
  assertNotNull(card);
  assertEquals(STATE_UPDATES_BOARD_ID,card.getIdBoard());
  assertEquals(BACKLOG_LIST_ID,card.getIdList());
  TrelloTask task=new TrelloTask(card,myRepository);
  Set<CustomTaskState> states=myRepository.getAvailableTaskStates(task);
  assertEquals(1,states.size());
  final CustomTaskState inProgressState=states.iterator().next();
  assertEquals(IN_PROGRESS_LIST_ID,inProgressState.getId());
  assertEquals("In Progress",inProgressState.getPresentableName());
  myRepository.setTaskState(task,inProgressState);
  card=myRepository.fetchCardById(FEATURE_CARD_ID);
  assertNotNull(card);
  assertEquals(STATE_UPDATES_BOARD_ID,card.getIdBoard());
  assertEquals(IN_PROGRESS_LIST_ID,card.getIdList());
  task=new TrelloTask(card,myRepository);
  states=myRepository.getAvailableTaskStates(task);
  assertEquals(1,states.size());
  final CustomTaskState backlogState=states.iterator().next();
  assertEquals(BACKLOG_LIST_ID,backlogState.getId());
  assertEquals("Backlog",backlogState.getPresentableName());
  myRepository.setTaskState(task,backlogState);
  card=myRepository.fetchCardById(FEATURE_CARD_ID);
  assertNotNull(card);
  assertEquals(STATE_UPDATES_BOARD_ID,card.getIdBoard());
  assertEquals(BACKLOG_LIST_ID,card.getIdList());
}
