{
  if (!(element instanceof PsiExpressionStatement))   return null;
  PsiExpression expression=((PsiExpressionStatement)element).getExpression();
  if (!(expression instanceof PsiMethodCallExpression))   return null;
  PsiMethodCallExpression methodCall=(PsiMethodCallExpression)expression;
  PsiReferenceExpression methodExpression=methodCall.getMethodExpression();
  if (!"sort".equals(methodExpression.getReferenceName()))   return null;
  PsiMethod method=methodCall.resolveMethod();
  if (method == null)   return null;
  PsiClass containingClass=method.getContainingClass();
  if (containingClass == null)   return null;
  PsiExpression listExpression=null;
  PsiExpression comparatorExpression=null;
  if (CommonClassNames.JAVA_UTIL_COLLECTIONS.equals(containingClass.getQualifiedName())) {
    PsiExpression[] args=methodCall.getArgumentList().getExpressions();
    if (args.length == 1) {
      listExpression=args[0];
    }
 else     if (args.length == 2) {
      listExpression=args[0];
      comparatorExpression=args[1];
    }
 else     return null;
  }
 else   if (InheritanceUtil.isInheritor(containingClass,CommonClassNames.JAVA_UTIL_LIST)) {
    listExpression=methodExpression.getQualifierExpression();
    PsiExpression[] args=methodCall.getArgumentList().getExpressions();
    if (args.length != 1)     return null;
    comparatorExpression=args[0];
  }
  if (!(listExpression instanceof PsiReferenceExpression) || !((PsiReferenceExpression)listExpression).isReferenceTo(list))   return null;
  if (comparatorExpression == null || ExpressionUtils.isNullLiteral(comparatorExpression))   return "";
  return comparatorExpression.getText();
}
