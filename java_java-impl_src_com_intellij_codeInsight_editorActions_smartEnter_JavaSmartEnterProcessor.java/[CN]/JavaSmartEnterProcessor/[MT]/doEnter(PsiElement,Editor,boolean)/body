{
  final PsiFile psiFile=atCaret.getContainingFile();
  if (myFirstErrorOffset != Integer.MAX_VALUE) {
    editor.getCaretModel().moveToOffset(myFirstErrorOffset);
    reformat(atCaret);
    return;
  }
  final RangeMarker rangeMarker=createRangeMarker(atCaret);
  reformat(atCaret);
  commit(editor);
  if (!mySkipEnter) {
    atCaret=CodeInsightUtil.findElementInRange(psiFile,rangeMarker.getStartOffset(),rangeMarker.getEndOffset(),atCaret.getClass());
    for (    EnterProcessor processor : afterCompletion ? ourAfterCompletionEnterProcessors : ourEnterProcessors) {
      if (atCaret == null) {
        break;
      }
      if (processor.doEnter(editor,atCaret,isModified(editor)))       return;
    }
    if (!isModified(editor) && !afterCompletion) {
      plainEnter(editor);
    }
 else {
      if (myFirstErrorOffset == Integer.MAX_VALUE) {
        editor.getCaretModel().moveToOffset(rangeMarker.getEndOffset());
      }
 else {
        editor.getCaretModel().moveToOffset(myFirstErrorOffset);
      }
    }
  }
  rangeMarker.dispose();
}
