{
  final DataExternalizer<String> stringDataExternalizer=new EnumeratorStringDescriptor();
  return new DataExternalizer<CompiledDataValueContainer<V>>(){
    @Override public void save(    final DataOutput out,    final CompiledDataValueContainer<V> value) throws IOException {
      final THashMap<String,V> underlying=value.myUnderlying;
      out.writeInt(underlying.size());
      for (      final Map.Entry<String,V> entry : underlying.entrySet()) {
        stringDataExternalizer.save(out,entry.getKey());
        valueExternalizer.save(out,entry.getValue());
      }
    }
    @Override public CompiledDataValueContainer<V> read(    final DataInput in) throws IOException {
      final THashMap<String,V> map=new THashMap<String,V>();
      final int size=in.readInt();
      for (int i=0; i < size; i++) {
        map.put(stringDataExternalizer.read(in),valueExternalizer.read(in));
      }
      return new CompiledDataValueContainer<V>(map);
    }
  }
;
}
