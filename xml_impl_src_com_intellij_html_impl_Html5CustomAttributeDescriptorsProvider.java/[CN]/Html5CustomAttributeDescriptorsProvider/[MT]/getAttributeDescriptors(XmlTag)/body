{
  if (tag == null || !HtmlUtil.isHtml5Context(tag)) {
    return XmlAttributeDescriptor.EMPTY;
  }
  final List<String> currentAttrs=new ArrayList<String>();
  for (  XmlAttribute attribute : tag.getAttributes()) {
    currentAttrs.add(attribute.getName());
  }
  final Project project=tag.getProject();
  final Collection<String> keys=CachedValuesManager.getManager(project).getCachedValue(project,new CachedValueProvider<Collection<String>>(){
    @Nullable @Override public Result<Collection<String>> compute(){
      final Collection<String> keys=FileBasedIndex.getInstance().getAllKeys(Html5CustomAttributesIndex.INDEX_ID,project);
      final GlobalSearchScope scope=GlobalSearchScope.allScope(project);
      return Result.<Collection<String>>create(ContainerUtil.filter(keys,new Condition<String>(){
        @Override public boolean value(        String key){
          return !FileBasedIndex.getInstance().processValues(Html5CustomAttributesIndex.INDEX_ID,key,null,new FileBasedIndex.ValueProcessor<Void>(){
            @Override public boolean process(            VirtualFile file,            Void value){
              return false;
            }
          }
,scope);
        }
      }
),PsiModificationTracker.MODIFICATION_COUNT);
    }
  }
);
  if (keys.isEmpty())   return XmlAttributeDescriptor.EMPTY;
  final List<XmlAttributeDescriptor> result=new ArrayList<XmlAttributeDescriptor>();
  for (  String key : keys) {
    boolean add=true;
    for (    String attr : currentAttrs) {
      if (attr.startsWith(key)) {
        add=false;
      }
    }
    if (add) {
      result.add(new AnyXmlAttributeDescriptor(key));
    }
  }
  return result.toArray(new XmlAttributeDescriptor[result.size()]);
}
