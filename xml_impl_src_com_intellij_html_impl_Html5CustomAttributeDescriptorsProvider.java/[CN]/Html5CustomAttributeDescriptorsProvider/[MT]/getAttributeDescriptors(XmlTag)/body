{
  if (tag == null || !HtmlUtil.isHtml5Context(tag)) {
    return XmlAttributeDescriptor.EMPTY;
  }
  final List<String> currentAttrs=new ArrayList<String>();
  for (  XmlAttribute attribute : tag.getAttributes()) {
    currentAttrs.add(attribute.getName());
  }
  final List<XmlAttributeDescriptor> result=new ArrayList<XmlAttributeDescriptor>();
  final GlobalSearchScope scope=GlobalSearchScope.allScope(tag.getProject());
  final Collection<String> keys=FileBasedIndex.getInstance().getAllKeys(Html5CustomAttributesIndex.INDEX_ID,tag.getProject());
  for (  String key : keys) {
    final boolean canProcessKey=!FileBasedIndex.getInstance().processValues(Html5CustomAttributesIndex.INDEX_ID,key,null,new FileBasedIndex.ValueProcessor<Void>(){
      @Override public boolean process(      VirtualFile file,      Void value){
        return false;
      }
    }
,scope);
    if (!canProcessKey)     continue;
    boolean add=true;
    for (    String attr : currentAttrs) {
      if (attr.startsWith(key)) {
        add=false;
      }
    }
    if (add) {
      result.add(new AnyXmlAttributeDescriptor(key));
    }
  }
  return result.toArray(new XmlAttributeDescriptor[result.size()]);
}
