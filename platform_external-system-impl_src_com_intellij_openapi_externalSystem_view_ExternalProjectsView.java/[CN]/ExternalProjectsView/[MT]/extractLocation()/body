{
  final List<ExternalSystemNode> selectedNodes=getSelectedNodes(ExternalSystemNode.class);
  if (selectedNodes.isEmpty())   return null;
  List<TaskData> tasks=ContainerUtil.newSmartList();
  ExternalTaskExecutionInfo taskExecutionInfo=new ExternalTaskExecutionInfo();
  String projectPath=null;
  for (  ExternalSystemNode node : selectedNodes) {
    final Object data=node.getData();
    if (data instanceof TaskData) {
      final TaskData taskData=(TaskData)data;
      if (projectPath == null) {
        projectPath=taskData.getLinkedExternalProjectPath();
      }
 else       if (!taskData.getLinkedExternalProjectPath().equals(projectPath)) {
        return null;
      }
      taskExecutionInfo.getSettings().getTaskNames().add(taskData.getName());
      taskExecutionInfo.getSettings().getTaskDescriptions().add(taskData.getDescription());
      tasks.add(taskData);
    }
  }
  if (tasks.isEmpty())   return null;
  taskExecutionInfo.getSettings().setExternalSystemIdString(myExternalSystemId.toString());
  taskExecutionInfo.getSettings().setExternalProjectPath(projectPath);
  String name=myExternalSystemId.getReadableName() + projectPath + StringUtil.join(taskExecutionInfo.getSettings().getTaskNames()," ");
  PsiFile file=PsiFileFactory.getInstance(myProject).createFileFromText(name,PlainTextFileType.INSTANCE,"");
  return new ExternalSystemTaskLocation(myProject,file,taskExecutionInfo);
}
