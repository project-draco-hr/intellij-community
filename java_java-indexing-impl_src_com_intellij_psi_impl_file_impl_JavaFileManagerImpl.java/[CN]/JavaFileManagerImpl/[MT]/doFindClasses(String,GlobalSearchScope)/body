{
  final Collection<PsiClass> classes=JavaFullClassNameIndex.getInstance().get(qName.hashCode(),myManager.getProject(),scope);
  if (classes.isEmpty())   return Collections.emptyList();
  List<Pair<PsiClass,VirtualFile>> result=new ArrayList<>(classes.size());
  for (  PsiClass aClass : classes) {
    final String qualifiedName=aClass.getQualifiedName();
    if (qualifiedName == null || !qualifiedName.equals(qName))     continue;
    PsiFile file=aClass.getContainingFile();
    if (file == null) {
      throw new AssertionError("No file for class: " + aClass + " of "+ aClass.getClass());
    }
    final boolean valid=file.isValid();
    VirtualFile vFile=file.getVirtualFile();
    if (!valid) {
      LOG.error("Invalid file " + file + "; virtualFile:"+ vFile+ (vFile != null && !vFile.isValid() ? " (invalid)" : "")+ "; id="+ (vFile == null ? 0 : ((VirtualFileWithId)vFile).getId()),new PsiInvalidElementAccessException(aClass));
      continue;
    }
    if (!hasAcceptablePackage(vFile))     continue;
    result.add(Pair.create(aClass,vFile));
  }
  return result;
}
