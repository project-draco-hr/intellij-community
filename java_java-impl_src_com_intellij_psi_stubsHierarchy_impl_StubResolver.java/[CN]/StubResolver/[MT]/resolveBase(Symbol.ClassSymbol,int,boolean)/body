{
  @QNameId int prefix=myNameEnvironment.prefixId(name);
  @ShortName int shortName=myNameEnvironment.shortName(name);
  if (prefix == NameEnvironment.NO_NAME) {
    Set<Symbol> result=findIdent(sym.myOwner,sym.myUnitInfo,shortName,processPackages);
    if (result.isEmpty()) {
      throw IncompleteHierarchyException.INSTANCE;
    }
    return result;
  }
  int k=processPackages ? IndexTree.CLASS | IndexTree.PACKAGE : IndexTree.CLASS;
  Set<Symbol> prev=resolveBase(sym,prefix,true);
  Set<Symbol> result=new HashSet<>();
  for (  Symbol symbol : prev) {
    selectSym(symbol,shortName,k,result);
  }
  if (result.isEmpty()) {
    throw IncompleteHierarchyException.INSTANCE;
  }
  return result;
}
