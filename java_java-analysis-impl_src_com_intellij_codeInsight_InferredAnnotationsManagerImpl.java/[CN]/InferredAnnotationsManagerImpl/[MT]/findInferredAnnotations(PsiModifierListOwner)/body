{
  listOwner=BaseExternalAnnotationsManager.preferCompiledElement(listOwner);
  List<PsiAnnotation> result=ContainerUtil.newArrayList();
  PsiAnnotation[] fromBytecode=ProjectBytecodeAnalysis.getInstance(myProject).findInferredAnnotations(listOwner);
  for (  PsiAnnotation annotation : fromBytecode) {
    if (!ignoreInference(listOwner,annotation.getQualifiedName())) {
      if (!ORG_JETBRAINS_ANNOTATIONS_CONTRACT.equals(annotation.getQualifiedName()) || canInferFromSource(listOwner)) {
        result.add(annotation);
      }
    }
  }
  if (canInferFromSource(listOwner)) {
    PsiAnnotation hardcoded=getHardcodedContractAnnotation((PsiMethod)listOwner);
    ContainerUtil.addIfNotNull(result,hardcoded != null ? hardcoded : getInferredContractAnnotation((PsiMethod)listOwner));
    ContainerUtil.addIfNotNull(result,getInferredNullityAnnotation((PsiMethod)listOwner));
  }
  return result.isEmpty() ? PsiAnnotation.EMPTY_ARRAY : result.toArray(new PsiAnnotation[result.size()]);
}
