{
  listOwner=BaseExternalAnnotationsManager.preferCompiledElement(listOwner);
  List<PsiAnnotation> result=ContainerUtil.newArrayList();
  PsiAnnotation[] fromBytecode=ProjectBytecodeAnalysis.getInstance(myProject).findInferredAnnotations(listOwner);
  for (  PsiAnnotation annotation : fromBytecode) {
    if (!ignoreInference(listOwner,annotation.getQualifiedName())) {
      result.add(annotation);
    }
  }
  if (listOwner instanceof PsiMethod) {
    PsiAnnotation hardcoded=getHardcodedContractAnnotation((PsiMethod)listOwner);
    if (hardcoded != null) {
      result.add(hardcoded);
    }
 else     if (!ignoreInference(listOwner,ORG_JETBRAINS_ANNOTATIONS_CONTRACT)) {
      ContainerUtil.addIfNotNull(result,getInferredContractAnnotation((PsiMethod)listOwner));
    }
    if (!ignoreInference(listOwner,AnnotationUtil.NOT_NULL) || !ignoreInference(listOwner,AnnotationUtil.NULLABLE)) {
      PsiAnnotation annotation=getInferredNullityAnnotation((PsiMethod)listOwner);
      if (annotation != null && !ignoreInference(listOwner,annotation.getQualifiedName())) {
        result.add(annotation);
      }
    }
  }
  return result.isEmpty() ? PsiAnnotation.EMPTY_ARRAY : result.toArray(new PsiAnnotation[result.size()]);
}
