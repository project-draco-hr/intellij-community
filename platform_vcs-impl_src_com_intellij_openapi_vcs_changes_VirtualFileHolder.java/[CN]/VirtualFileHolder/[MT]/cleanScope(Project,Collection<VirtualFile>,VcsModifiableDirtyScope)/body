{
  return ApplicationManager.getApplication().runReadAction(new Computable<Integer>(){
    public Integer compute(){
      int result=0;
      if (project.isDisposed() || files.isEmpty())       return 0;
      if (scope.getRecursivelyDirtyDirectories().size() == 0) {
        final Set<FilePath> dirtyFiles=scope.getDirtyFiles();
        boolean cleanDroppedFiles=false;
        for (        FilePath dirtyFile : dirtyFiles) {
          VirtualFile f=dirtyFile.getVirtualFile();
          if (f != null) {
            if (files.remove(f)) {
              if (f.isDirectory())               ++result;
            }
          }
 else {
            cleanDroppedFiles=true;
          }
        }
        if (cleanDroppedFiles) {
          for (Iterator<VirtualFile> iterator=files.iterator(); iterator.hasNext(); ) {
            final VirtualFile file=iterator.next();
            if (fileDropped(file)) {
              iterator.remove();
              scope.addDirtyFile(VcsUtil.getFilePath(file));
              if (file.isDirectory())               ++result;
            }
          }
        }
      }
 else {
        for (Iterator<VirtualFile> iterator=files.iterator(); iterator.hasNext(); ) {
          final VirtualFile file=iterator.next();
          final boolean fileDropped=fileDropped(file);
          if (fileDropped) {
            scope.addDirtyFile(VcsUtil.getFilePath(file));
          }
          if (fileDropped || scope.belongsTo(VcsUtil.getFilePath(file))) {
            iterator.remove();
            if (file.isDirectory())             ++result;
          }
        }
      }
      return result;
    }
  }
);
}
