{
  PyLambdaExpression lambdaExpression=PsiTreeUtil.getParentOfType(file.findElementAt(editor.getCaretModel().getOffset()),PyLambdaExpression.class);
  PyElementGenerator elementGenerator=PyElementGenerator.getInstance(project);
  if (lambdaExpression != null) {
    String name="function";
    PsiElement parent=lambdaExpression.getParent();
    if (parent instanceof PyAssignmentStatement) {
      name=((PyAssignmentStatement)parent).getLeftHandSideExpression().getText();
    }
 else {
      Application application=ApplicationManager.getApplication();
      if (application != null && !application.isUnitTestMode()) {
        name=Messages.showInputDialog(project,"Enter new function name","New function name",Messages.getQuestionIcon());
        if (name == null)         return;
      }
    }
    if (name.isEmpty())     return;
    PyExpression body=lambdaExpression.getBody();
    PyParameter[] parameters=lambdaExpression.getParameterList().getParameters();
    StringBuilder stringBuilder=new StringBuilder();
    stringBuilder.append("def ");
    stringBuilder.append(name);
    stringBuilder.append("(");
    int size=parameters.length;
    for (int i=0; i != size; ++i) {
      PyParameter parameter=parameters[i];
      stringBuilder.append(parameter.getName());
      if (i != size - 1)       stringBuilder.append(",");
    }
    stringBuilder.append("):\n  return ");
    stringBuilder.append(body.getText());
    PyFunction function=elementGenerator.createFromText(LanguageLevel.forElement(lambdaExpression),PyFunction.class,stringBuilder.toString());
    PyStatement statement=PsiTreeUtil.getParentOfType(lambdaExpression,PyStatement.class);
    if (statement != null) {
      PsiElement parentOfStatement=statement.getParent();
      if (parentOfStatement != null)       parentOfStatement.addBefore(function,statement);
    }
    if (parent instanceof PyAssignmentStatement) {
      parent.delete();
    }
 else {
      lambdaExpression.replace(elementGenerator.createFromText(LanguageLevel.forElement(lambdaExpression),PyExpression.class,name));
    }
  }
}
