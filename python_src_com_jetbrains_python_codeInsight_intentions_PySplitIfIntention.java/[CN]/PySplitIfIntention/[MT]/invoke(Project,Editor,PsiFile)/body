{
  PsiElement elementAtOffset=file.findElementAt(editor.getCaretModel().getOffset());
  final IElementType elementType=elementAtOffset.getNode().getElementType();
  if (elementType == PyTokenTypes.COLON) {
    elementAtOffset=elementAtOffset.getPrevSibling();
    elementAtOffset=PyUtil.getFirstNonCommentBefore(elementAtOffset);
  }
 else   if (elementType == PyTokenTypes.IF_KEYWORD) {
    elementAtOffset=elementAtOffset.getNextSibling();
    elementAtOffset=PyUtil.getFirstNonCommentAfter(elementAtOffset);
  }
  PyBinaryExpression element=PsiTreeUtil.getParentOfType(elementAtOffset,PyBinaryExpression.class,false);
  while (element.getParent() instanceof PyBinaryExpression) {
    element=(PyBinaryExpression)element.getParent();
  }
  PyIfStatement ifStatement=PsiTreeUtil.getParentOfType(element,PyIfStatement.class);
  PyElementGenerator elementGenerator=PyElementGenerator.getInstance(project);
  PyIfStatement subIf=(PyIfStatement)ifStatement.copy();
  subIf.getIfPart().getCondition().replace(element.getRightExpression());
  ifStatement.getIfPart().getCondition().replace(element.getLeftExpression());
  PyStatementList statementList=elementGenerator.createFromText(PyIfStatement.class,"if a:\n    a = 1").getIfPart().getStatementList();
  statementList.getStatements()[0].replace(subIf);
  ifStatement.getIfPart().getStatementList().replace(statementList);
}
