{
  PyBinaryExpression element=PsiTreeUtil.getParentOfType(file.findElementAt(editor.getCaretModel().getOffset()),PyBinaryExpression.class);
  while (element.getParent() instanceof PyBinaryExpression) {
    element=(PyBinaryExpression)element.getParent();
  }
  PyIfStatement ifStatement=PsiTreeUtil.getParentOfType(element,PyIfStatement.class);
  PyElementGenerator elementGenerator=PyElementGenerator.getInstance(project);
  StringBuilder builder=new StringBuilder();
  builder.append("if ").append(element.getLeftExpression().getText()).append(":\n");
  builder.append("    if ").append(element.getRightExpression().getText()).append(":");
  appendStatements(ifStatement.getIfPart().getStatementList(),builder);
  final PyIfPart[] elifParts=ifStatement.getElifParts();
  for (  PyIfPart elifPart : elifParts) {
    builder.append("\n    elif ").append(elifPart.getCondition().getText()).append(":");
    appendStatements(elifPart.getStatementList(),builder);
  }
  final PyElsePart elsePart=ifStatement.getElsePart();
  if (elsePart != null) {
    builder.append("\n    else:");
    appendStatements(elsePart.getStatementList(),builder);
  }
  ifStatement.getIfPart().replace(elementGenerator.createFromText(PyIfStatement.class,builder.toString()));
}
