{
  final VirtualFile file=FileChooser.chooseFile(FileChooserDescriptorFactory.createSingleFileNoJarsDescriptor(),myProject,null);
  if (file != null) {
    final String relativePath=VfsUtil.getRelativePath(file,myProject.getBaseDir());
    if (relativePath == null) {
      Messages.showErrorDialog(myProject,"Please select file under project root or import schema.",ADD_PROJECT_SCHEMA);
      return;
    }
    final JsonSchemaChecker importer=new JsonSchemaChecker(file,true);
    if (!importer.checkSchemaFile()) {
      if (!StringUtil.isEmptyOrSpaces(importer.getError())) {
        JsonSchemaReader.ERRORS_NOTIFICATION.createNotification(importer.getError(),MessageType.ERROR).notify(myProject);
        Messages.showErrorDialog(myProject,importer.getError(),READ_JSON_SCHEMA);
      }
      return;
    }
    addCreatedMappings(file,new JsonSchemaMappingsConfigurationBase.SchemaInfo(file.getNameWithoutExtension(),relativePath,false,null));
  }
}
