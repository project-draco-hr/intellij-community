{
  if (psiClass == null)   return CtorAccessibility.NOT_ACCESSIBLE;
  if (psiClass.isEnum())   return CtorAccessibility.NOT_ACCESSIBLE;
  if (psiClass.isInterface())   return CtorAccessibility.WITH_DEFAULT_CTOR;
  PsiClass containingType=PsiTreeUtil.getParentOfType(accessContext,PsiClass.class);
  JavaPsiFacade psiFacade=JavaPsiFacade.getInstance(accessContext.getProject());
  PsiResolveHelper resolveHelper=psiFacade.getResolveHelper();
  PsiMethod[] constructors=psiClass.getConstructors();
  if (constructors.length == 0)   return CtorAccessibility.WITH_DEFAULT_CTOR;
  boolean hasAccessibleCtors=false, hasParametricCtors=false;
  for (  PsiMethod constructor : constructors) {
    if (resolveHelper.isAccessible(constructor,accessContext,containingType)) {
      hasAccessibleCtors=true;
      int parametersCount=constructor.getParameterList().getParametersCount();
      if (parametersCount != 0)       hasParametricCtors=true;
    }
  }
  if (!hasAccessibleCtors)   return CtorAccessibility.NOT_ACCESSIBLE;
  return hasParametricCtors ? CtorAccessibility.WITH_PARAMETRIC_CTOR : CtorAccessibility.WITH_DEFAULT_CTOR;
}
