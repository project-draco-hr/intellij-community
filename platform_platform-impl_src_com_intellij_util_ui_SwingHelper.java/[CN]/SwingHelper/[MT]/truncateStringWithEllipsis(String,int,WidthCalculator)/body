{
  final int error=fm.stringWidth(ERROR_STR);
  final int wholeWidth=fm.stringWidth(text) + error;
  if (wholeWidth <= maxWidth || text.isEmpty())   return text;
  final int ellipsisWidth=fm.stringWidth(ELLIPSIS) + error;
  if (ellipsisWidth >= maxWidth)   return ELLIPSIS;
  final int availableWidth=maxWidth - ellipsisWidth;
  int currentLen=(int)Math.floor(availableWidth / (((double)wholeWidth) / text.length()));
  final String currentSubstring=text.substring(0,currentLen);
  int realWidth=fm.stringWidth(currentSubstring);
  if (realWidth >= availableWidth) {
    int delta=0;
    for (int i=currentLen - 1; i >= 0; i--) {
      if ((realWidth - delta) < availableWidth)       return text.substring(0,i) + ELLIPSIS;
      delta+=fm.charWidth(currentSubstring.charAt(i));
    }
    return text.substring(0,1) + ELLIPSIS;
  }
 else {
    int delta=0;
    for (int i=currentLen; i < text.length(); i++) {
      if ((realWidth + delta) >= availableWidth)       return text.substring(0,i) + ELLIPSIS;
      delta+=fm.charWidth(text.charAt(i));
    }
    return text.substring(0,currentLen) + ELLIPSIS;
  }
}
