{
  DebugEnvironment environment=new DefaultDebugEnvironment(env,state,connection,pollTimeout);
  final DebuggerSession debuggerSession=DebuggerManagerEx.getInstanceEx(env.getProject()).attachVirtualMachine(environment);
  if (debuggerSession == null) {
    return null;
  }
  final DebugProcessImpl debugProcess=debuggerSession.getProcess();
  return XDebuggerManager.getInstance(env.getProject()).startSession(env,new XDebugProcessStarter(){
    @Override @NotNull public XDebugProcess start(    @NotNull XDebugSession session){
      XDebugSessionImpl sessionImpl=(XDebugSessionImpl)session;
      ExecutionResult executionResult=debugProcess.getExecutionResult();
      sessionImpl.addExtraActions(executionResult.getActions());
      if (executionResult instanceof DefaultExecutionResult) {
        sessionImpl.addRestartActions(((DefaultExecutionResult)executionResult).getRestartActions());
        sessionImpl.addExtraStopActions(((DefaultExecutionResult)executionResult).getAdditionalStopActions());
      }
      return JavaDebugProcess.create(session,debuggerSession);
    }
  }
).getRunContentDescriptor();
}
