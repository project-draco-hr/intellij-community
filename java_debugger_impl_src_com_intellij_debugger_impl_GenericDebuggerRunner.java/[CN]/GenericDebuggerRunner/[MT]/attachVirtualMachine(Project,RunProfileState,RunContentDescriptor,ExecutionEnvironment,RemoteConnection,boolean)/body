{
  final DebuggerPanelsManager manager=DebuggerPanelsManager.getInstance(project);
  final RunContentDescriptor res=manager.attachVirtualMachine(env.getExecutor(),this,env,state,contentToReuse,connection,pollConnection);
  if (false) {
    return res;
  }
 else {
    final DebuggerManagerImpl debugManager=(DebuggerManagerImpl)DebuggerManagerEx.getInstance(project);
    XDebugSession debugSession=XDebuggerManager.getInstance(project).startSession(this,env,contentToReuse,new XDebugProcessStarter(){
      @Override @NotNull public XDebugProcess start(      @NotNull XDebugSession session){
        return new JavaDebugProcess(session,debugManager.getDebugSession(res.getProcessHandler()));
      }
    }
);
    return debugSession.getRunContentDescriptor();
  }
}
