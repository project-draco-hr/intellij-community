{
  boolean deleteExpression=expression != null && PsiUtil.isExpressionStatement(expression) && !isSingleGStringInjectionExpr(expression);
  boolean anchorEqualsExpression=anchor == expression;
  if (deleteExpression && !anchorEqualsExpression) {
    expression.delete();
  }
  boolean isInsideControlStatement=isControlStatementBranch(anchor);
  if (isInsideControlStatement) {
    anchor=insertBraces(anchor);
  }
  LOG.assertTrue(myOccurrences.length > 0);
  GrStatementOwner block=(GrStatementOwner)anchor.getParent();
  if (deleteExpression && anchorEqualsExpression) {
    declaration=(GrVariableDeclaration)anchor.replace(declaration);
  }
 else {
    declaration=(GrVariableDeclaration)block.addStatementBefore(declaration,anchor);
  }
  final GrVariable variable=declaration.getVariables()[0];
  JavaCodeStyleManager.getInstance(declaration.getProject()).shortenClassReferences(declaration);
  PsiElement markerPlace=deleteExpression ? variable : isInsideControlStatement ? declaration.getParent() : expression;
  refreshPositionMarker(markerPlace);
  return variable;
}
