{
  Collection<GitRemote> remotes=repository.getRemotes();
  if (remotes.isEmpty()) {
    return null;
  }
 else   if (remotes.size() == 1) {
    return makeTargetForNewBranch(repository,remotes.iterator().next(),currentBranch);
  }
 else {
    GitRemote remote=GitUtil.getDefaultRemote(remotes);
    if (remote == null) {
      remote=remotes.iterator().next();
    }
    return makeTargetForNewBranch(repository,remote,currentBranch);
  }
}
