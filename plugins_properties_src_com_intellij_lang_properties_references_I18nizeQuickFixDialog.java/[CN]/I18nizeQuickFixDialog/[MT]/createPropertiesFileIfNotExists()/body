{
  if (getPropertiesFile() != null)   return true;
  final String path=FileUtil.toSystemIndependentName(myPropertiesFile.getText());
  if (StringUtil.isEmptyOrSpaces(path)) {
    String message=CodeInsightBundle.message("i18nize.empty.file.path",myPropertiesFile.getText());
    Messages.showErrorDialog(myProject,message,CodeInsightBundle.message("i18nize.error.creating.properties.file"));
    myPropertiesFile.requestFocusInWindow();
    return false;
  }
  final FileType fileType=FileTypeManager.getInstance().getFileTypeByFileName(path);
  if (fileType != StdFileTypes.PROPERTIES && fileType != StdFileTypes.XML) {
    String message=CodeInsightBundle.message("i18nize.cant.create.properties.file.because.its.name.is.associated",myPropertiesFile.getText(),fileType.getDescription());
    Messages.showErrorDialog(myProject,message,CodeInsightBundle.message("i18nize.error.creating.properties.file"));
    myPropertiesFile.requestFocusInWindow();
    return false;
  }
  try {
    final File file=new File(path).getCanonicalFile();
    FileUtil.createParentDirs(file);
    ApplicationManager.getApplication().runWriteAction(new ThrowableComputable<PsiFile,Exception>(){
      @Override public PsiFile compute() throws Exception {
        VirtualFile dir=LocalFileSystem.getInstance().refreshAndFindFileByIoFile(file.getParentFile());
        final PsiManager psiManager=PsiManager.getInstance(myProject);
        if (dir == null) {
          throw new IOException("Error creating directory structure for file '" + path + "'");
        }
        if (fileType == StdFileTypes.PROPERTIES) {
          return psiManager.findFile(dir.createChildData(this,file.getName()));
        }
 else {
          FileTemplate template=FileTemplateManager.getInstance(myProject).getInternalTemplate("XML Properties File.xml");
          LOG.assertTrue(template != null);
          return (PsiFile)FileTemplateUtil.createFromTemplate(template,file.getName(),null,psiManager.findDirectory(dir));
        }
      }
    }
);
  }
 catch (  Exception e) {
    Messages.showErrorDialog(myProject,e.getLocalizedMessage(),CodeInsightBundle.message("i18nize.error.creating.properties.file"));
    return false;
  }
  return true;
}
