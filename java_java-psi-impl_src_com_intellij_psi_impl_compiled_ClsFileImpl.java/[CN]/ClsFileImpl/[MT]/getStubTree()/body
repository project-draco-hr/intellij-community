{
  ApplicationManager.getApplication().assertReadAccessAllowed();
  StubTree stubTree=dereference(myStub);
  if (stubTree != null)   return stubTree;
  StubTree newStubTree=(StubTree)StubTreeLoader.getInstance().readOrBuild(getProject(),getVirtualFile(),this);
  if (newStubTree == null) {
    if (LOG.isDebugEnabled()) {
      LOG.debug("No stub for class file in index: " + getVirtualFile().getPresentableUrl());
    }
    newStubTree=new StubTree(new PsiJavaFileStubImpl("corrupted_class_files",true));
  }
synchronized (myStubLock) {
    stubTree=dereference(myStub);
    if (stubTree != null)     return stubTree;
    stubTree=newStubTree;
    @SuppressWarnings("unchecked") PsiFileStubImpl<PsiFile> fileStub=(PsiFileStubImpl)stubTree.getRoot();
    fileStub.setPsi(this);
    myStub=new SoftReference<StubTree>(stubTree);
  }
  return stubTree;
}
