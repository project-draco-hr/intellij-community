{
  ApplicationManager.getApplication().assertReadAccessAllowed();
  StubTree stubTree=dereference(myStub);
  if (stubTree != null)   return stubTree;
synchronized (myStubLock) {
    stubTree=dereference(myStub);
    if (stubTree != null)     return stubTree;
    stubTree=(StubTree)StubTreeLoader.getInstance().readOrBuild(getProject(),getVirtualFile(),this);
    if (stubTree == null) {
      LOG.warn("No stub for class file in index: " + getVirtualFile().getPresentableUrl());
      stubTree=new StubTree(new PsiJavaFileStubImpl("corrupted.classfiles",true));
    }
    ((PsiFileStubImpl)stubTree.getRoot()).setPsi(this);
    myStub=new SoftReference<StubTree>(stubTree);
  }
  return stubTree;
}
