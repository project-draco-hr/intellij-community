{
  CharSequence mirrorText=ClassFileDecompiler.decompileText(file);
  PsiFileFactory factory=PsiFileFactory.getInstance(getManager().getProject());
  PsiFile mirror=factory.createFileFromText(fileName,JavaLanguage.INSTANCE,mirrorText,false,false);
  mirror.putUserData(PsiUtil.FILE_LANGUAGE_LEVEL_KEY,getLanguageLevel());
  final TreeElement mirrorTreeElement=SourceTreeToPsiMap.psiToTreeNotNull(mirror);
  try {
    ProgressManager.getInstance().executeNonCancelableSection(new Runnable(){
      @Override public void run(){
        setMirror(mirrorTreeElement);
      }
    }
);
  }
 catch (  InvalidMirrorException e) {
    if (usePlugin && !ApplicationManager.getApplication().isUnitTestMode()) {
      LOG.warn(file.getUrl(),wrapException(e,file));
      return null;
    }
 else {
      LOG.error(file.getUrl(),e);
    }
  }
  return mirrorTreeElement;
}
