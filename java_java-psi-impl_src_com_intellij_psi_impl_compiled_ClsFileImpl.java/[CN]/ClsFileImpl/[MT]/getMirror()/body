{
  TreeElement mirrorTreeElement=myMirrorFileElement;
  if (mirrorTreeElement == null) {
synchronized (myMirrorLock) {
      mirrorTreeElement=myMirrorFileElement;
      if (mirrorTreeElement == null) {
        VirtualFile file=getVirtualFile();
        CharSequence mirrorText=decompileInternal(file);
        String ext=JavaFileType.INSTANCE.getDefaultExtension();
        PsiClass[] classes=getClasses();
        String fileName=(classes.length > 0 ? classes[0].getName() : file.getNameWithoutExtension()) + "." + ext;
        PsiFileFactory factory=PsiFileFactory.getInstance(getManager().getProject());
        PsiFile mirror=factory.createFileFromText(fileName,JavaLanguage.INSTANCE,mirrorText,false,false);
        mirror.putUserData(PsiUtil.FILE_LANGUAGE_LEVEL_KEY,getLanguageLevel());
        mirrorTreeElement=SourceTreeToPsiMap.psiToTreeNotNull(mirror);
        NonCancelableSection section=ProgressIndicatorProvider.startNonCancelableSectionIfSupported();
        try {
          setMirror(mirrorTreeElement);
        }
 catch (        InvalidMirrorException e) {
          LOG.error(file.getPath(),e);
        }
 finally {
          section.done();
        }
        myMirrorFileElement=mirrorTreeElement;
      }
    }
  }
  return mirrorTreeElement.getPsi();
}
