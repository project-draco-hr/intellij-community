{
  try {
    DefaultJDOMExternalizer.readExternal(this,element);
  }
 catch (  InvalidDataException e) {
    throw new RuntimeException(e);
  }
  Element schElement=element;
  final String activeName=element.getAttributeValue(ACTIVE);
  if (activeName != null) {
    for (    Element toolbarElement : element.getChildren(ACTIONS_SCHEMA)) {
      for (      Object o : toolbarElement.getChildren("option")) {
        if (Comparing.strEqual(((Element)o).getAttributeValue("name"),"myName") && Comparing.strEqual(((Element)o).getAttributeValue("value"),activeName)) {
          schElement=toolbarElement;
          break;
        }
      }
    }
  }
  for (  Object groupElement : schElement.getChildren(GROUP)) {
    ActionUrl url=new ActionUrl();
    try {
      url.readExternal((Element)groupElement);
    }
 catch (    InvalidDataException e) {
      throw new RuntimeException(e);
    }
    myActions.add(url);
  }
  if (ApplicationManager.getApplication().isUnitTestMode()) {
    System.err.println("read custom actions: " + myActions.toString());
  }
  for (  Element action : element.getChildren(ELEMENT_ACTION)) {
    String actionId=action.getAttributeValue(ATTRIBUTE_ID);
    String iconPath=action.getAttributeValue(ATTRIBUTE_ICON);
    if (actionId != null) {
      myIconCustomizations.put(actionId,iconPath);
    }
  }
  final boolean reload=!isFirstLoadState;
  if (isFirstLoadState) {
    isFirstLoadState=false;
  }
  ApplicationManager.getApplication().invokeLater(new Runnable(){
    @Override public void run(){
      initActionIcons();
      if (reload) {
        setCustomizationSchemaForCurrentProjects();
      }
    }
  }
);
}
