{
  final PsiElement referent=baseClassReference.resolve();
  if (referent == null) {
    return;
  }
  final PsiClass referencedClass=(PsiClass)referent;
  final String referencedClassName=referencedClass.getQualifiedName();
  if (!"java.lang.Thread".equals(referencedClassName)) {
    return;
  }
  final PsiExpressionList argumentList=expression.getArgumentList();
  if (argumentList == null) {
    return;
  }
  final PsiExpression[] arguments=argumentList.getExpressions();
  for (  PsiExpression argument : arguments) {
    if (TypeUtils.expressionHasTypeOrSubtype(argument,"java.lang.Runnable")) {
      return;
    }
  }
  registerNewExpressionError(expression);
}
