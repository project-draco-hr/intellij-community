{
  super.visitNewExpression(expression);
  final PsiAnonymousClass anonymousClass=expression.getAnonymousClass();
  if (anonymousClass != null) {
    if (definesRun(anonymousClass)) {
      return;
    }
    processExpression(expression,anonymousClass.getBaseClassReference());
  }
 else {
    final PsiJavaCodeReferenceElement classReference=expression.getClassReference();
    if (classReference == null) {
      return;
    }
    processExpression(expression,classReference);
  }
}
