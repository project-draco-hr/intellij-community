{
  List<File> existentFiles=getExistentFiles(libraryDescription);
  if (!existentFiles.isEmpty()) {
    return existentFiles;
  }
  final DownloadableFileService downloadService=DownloadableFileService.getInstance();
  URL versionsUrl=libraryDescription.getDescriptionUrl();
  final DownloadableFileSetVersions<DownloadableFileSetDescription> versions=downloadService.createFileSetVersions(null,versionsUrl);
  List<DownloadableFileSetDescription> descriptions=versions.fetchVersions();
  if (descriptions.isEmpty()) {
    throw new IOException("No client library versions loaded");
  }
  FileDownloader downloader=downloadService.createDownloader(descriptions.get(0));
  List<Pair<File,DownloadableFileDescription>> downloaded=downloader.download(getStoreDirectory(libraryDescription));
  List<File> files=myFiles.get(libraryDescription.getId());
  if (files == null) {
    files=new ArrayList<File>();
    myFiles.put(libraryDescription.getId(),files);
  }
  for (  Pair<File,DownloadableFileDescription> pair : downloaded) {
    files.add(pair.getFirst());
  }
  myEventDispatcher.getMulticaster().downloaded();
  return files;
}
