{
  final LibraryJarDescriptor[] descriptors=LibraryJarStatisticsService.getInstance().getTechnologyDescriptors();
  final Set<UsageDescriptor> result=new HashSet<UsageDescriptor>(descriptors.length);
  ApplicationManager.getApplication().runReadAction(new Runnable(){
    @Override public void run(){
      for (      LibraryJarDescriptor descriptor : descriptors) {
        String className=descriptor.myClass;
        if (className == null)         continue;
        PsiClass[] psiClasses=JavaPsiFacade.getInstance(project).findClasses(className,ProjectScope.getLibrariesScope(project));
        for (        PsiClass psiClass : psiClasses) {
          if (psiClass == null)           continue;
          VirtualFile localFile=JarFileSystem.getInstance().getLocalVirtualFileFor(psiClass.getContainingFile().getVirtualFile());
          if (localFile == null)           continue;
          String version=getVersionByJarManifest(localFile);
          if (version == null)           version=getVersionByJarFileName(localFile.getName());
          if (version == null)           continue;
          result.add(new UsageDescriptor(descriptor.myName + "_" + version,1));
        }
      }
    }
  }
);
  return result;
}
