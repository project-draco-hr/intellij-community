{
  if (infos.length == 1 && infos[0] instanceof PsiAnnotation) {
    final PsiAnnotation annotation=(PsiAnnotation)infos[0];
    final Collection<String> ids=JavaSuppressionUtil.getInspectionIdsSuppressedInAnnotation((PsiModifierList)annotation.getParent());
    if (!ids.isEmpty()) {
      return new InspectionGadgetsFix(){
        @Override protected void doFix(        Project project,        ProblemDescriptor descriptor){
          final PsiElement psiElement=descriptor.getPsiElement();
          if (psiElement instanceof PsiAnnotation) {
            final Collection<String> ids=JavaSuppressionUtil.getInspectionIdsSuppressedInAnnotation((PsiModifierList)psiElement.getParent());
            for (            String id : ids) {
              if (!myAllowedSuppressions.contains(id)) {
                myAllowedSuppressions.add(id);
              }
            }
            saveProfile(project);
          }
        }
        private void saveProfile(        Project project){
          final InspectionProfile inspectionProfile=InspectionProjectProfileManager.getInstance(project).getInspectionProfile();
          InspectionProfileManager.getInstance().fireProfileChanged(inspectionProfile);
        }
        @NotNull @Override public String getName(){
          return getFamilyName();
        }
        @NotNull @Override public String getFamilyName(){
          return "Allow suppressions";
        }
      }
;
    }
  }
  return null;
}
