{
  TestFramework[] frameworks=Extensions.getExtensions(TestFramework.EXTENSION_NAME);
  TestFramework framework=null;
  for (  TestFramework each : frameworks) {
    if (each.isTestClass(psiClass)) {
      framework=each;
      break;
    }
  }
  if (framework == null) {
    return TestDataDescriptor.NOTHING_FOUND;
  }
  final PsiElement setUpMethod=framework.findSetUpMethod(psiClass);
  final PsiElement tearDownMethod=framework.findTearDownMethod(psiClass);
  List<String> testNames=new ArrayList<String>();
  for (  PsiMethod method : psiClass.getMethods()) {
    final String name=getTestName(method.getName());
    if (StringUtil.isEmpty(name) || method == setUpMethod || method == tearDownMethod || name.equals(psiClass.getName()) || isUtilityMethod(method,psiClass,framework)) {
      continue;
    }
    testNames.add(name);
  }
  ProjectFileIndex fileIndex=ProjectRootManager.getInstance(psiClass.getProject()).getFileIndex();
  final TestDataDescriptor descriptor=buildDescriptor(fileIndex,testNames,psiClass);
  if (isClassWithoutTestData(descriptor,testNames,psiClass)) {
    return TestDataDescriptor.NOTHING_FOUND;
  }
  return descriptor;
}
