{
  List<Module> otherModules=configureTwoMoreModules();
  assertSize(2,otherModules);
  PsiClass psiClass=myJavaFacade.findClass("p.A",getModule().getModuleWithDependenciesAndLibrariesScope(true));
  assertNotNull(psiClass);
  assertEquals("p.A",psiClass.getQualifiedName());
  PsiClass packClass1=myJavaFacade.findClass("pack.MyClass",getModule().getModuleWithDependenciesAndLibrariesScope(true));
  assertNull(packClass1);
  PsiClass psiClass2=myJavaFacade.findClass("p.A",otherModules.get(0).getModuleWithDependenciesAndLibrariesScope(true));
  assertNotNull(psiClass2);
  assertEquals("p.A",psiClass2.getQualifiedName());
  PsiClass packClass2=myJavaFacade.findClass("pack.MyClass",otherModules.get(0).getModuleWithDependenciesAndLibrariesScope(true));
  assertNotNull(packClass2);
  assertEquals("pack.MyClass",packClass2.getQualifiedName());
  PsiClass psiClass3=myJavaFacade.findClass("p.A",otherModules.get(1).getModuleWithDependenciesAndLibrariesScope(true));
  assertNull(psiClass3);
  PsiClass packClass3=myJavaFacade.findClass("pack.MyClass",otherModules.get(1).getModuleWithDependenciesAndLibrariesScope(true));
  assertNull(packClass3);
}
