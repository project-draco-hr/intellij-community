{
  final Map<String,String> attrs=new HashMap<>();
  attrs.put("name",testIdentifier.getDisplayName());
  attrs.put("id",testIdentifier.getUniqueId().toString());
  if (duration > 0) {
    attrs.put("duration",Long.toString(duration));
  }
  if (reason != null) {
    attrs.put("message",reason);
  }
  try {
    if (ex != null) {
      final StringWriter stringWriter=new StringWriter();
      final PrintWriter writer=new PrintWriter(stringWriter);
      ex.printStackTrace(writer);
      ComparisonFailureData failureData=null;
      if (ex instanceof AssertionFailedError && ((AssertionFailedError)ex).isActualDefined() && ((AssertionFailedError)ex).isExpectedDefined()) {
        final ValueWrapper actual=((AssertionFailedError)ex).getActual();
        final ValueWrapper expected=((AssertionFailedError)ex).getExpected();
        failureData=new ComparisonFailureData(expected.getStringRepresentation(),actual.getStringRepresentation());
      }
 else {
        try {
          failureData=ExpectedPatterns.createExceptionNotification(ex);
        }
 catch (        Throwable ignore) {
        }
      }
      ComparisonFailureData.registerSMAttributes(failureData,stringWriter.toString(),ex.getMessage(),attrs,ex);
    }
  }
  finally {
    myPrintStream.println("\n" + MapSerializerUtil.asString(messageName,attrs));
  }
}
