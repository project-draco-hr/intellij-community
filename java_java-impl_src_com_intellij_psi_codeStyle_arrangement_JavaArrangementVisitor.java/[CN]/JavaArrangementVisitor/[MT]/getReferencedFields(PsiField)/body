{
  final List<PsiField> referencedElements=new ArrayList<PsiField>();
  PsiExpression fieldInitializer=field.getInitializer();
  PsiClass containingClass=field.getContainingClass();
  if (fieldInitializer == null || containingClass == null) {
    return referencedElements;
  }
  if (classFields == null) {
    classFields=ContainerUtil.map2Set(containingClass.getFields(),new Function.Self<PsiField,PsiField>());
  }
  fieldInitializer.accept(new JavaRecursiveElementVisitor(){
    @Override public void visitReferenceExpression(    PsiReferenceExpression expression){
      PsiElement ref=expression.resolve();
      if (ref instanceof PsiField && classFields.contains(ref)) {
        referencedElements.add((PsiField)ref);
      }
    }
  }
);
  return referencedElements;
}
