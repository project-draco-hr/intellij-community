{
  if (StudyTaskManager.getInstance(project).getCourse() != null) {
    contentPanel.setLayout(new BoxLayout(contentPanel,BoxLayout.PAGE_AXIS));
    contentPanel.add(Box.createRigidArea(new Dimension(10,0)));
    StudyTaskManager taskManager=StudyTaskManager.getInstance(project);
    Course course=taskManager.getCourse();
    if (course == null) {
      return;
    }
    String courseName=UIUtil.toHtml("<h1>" + course.getName() + "</h1>",10);
    String description=UIUtil.toHtml(course.getDescription(),5);
    String author=taskManager.getCourse().getAuthor();
    String authorLabel=UIUtil.toHtml("<b>Author: </b>" + author,5);
    contentPanel.add(new JLabel(courseName));
    contentPanel.add(new JLabel(authorLabel));
    contentPanel.add(Box.createRigidArea(new Dimension(0,10)));
    contentPanel.add(new JLabel(description));
    contentPanel.add(Box.createRigidArea(new Dimension(0,10)));
    JButton reloadCourseButton=new JButton("reload course");
    reloadCourseButton.addActionListener(new ActionListener(){
      public void actionPerformed(      ActionEvent e){
        StudyReloadCourseAction.reloadCourse(project);
      }
    }
);
    contentPanel.add(reloadCourseButton);
    int taskNum=0;
    int taskSolved=0;
    int lessonsCompleted=0;
    List<Lesson> lessons=course.getLessons();
    for (    Lesson lesson : lessons) {
      if (lesson.getStatus() == StudyStatus.Solved) {
        lessonsCompleted++;
      }
      LessonInfo lessonInfo=lesson.getLessonInfo();
      taskNum+=lessonInfo.getTaskNum();
      taskSolved+=lessonInfo.getTaskSolved();
    }
    String completedLessons=String.format("%d of %d lessons completed",lessonsCompleted,course.getLessons().size());
    String completedTasks=String.format("%d of %d tasks completed",taskSolved,taskNum);
    String tasksLeft=String.format("%d of %d tasks left",taskNum - taskSolved,taskNum);
    contentPanel.add(Box.createVerticalStrut(10));
    addStatistics(completedLessons);
    addStatistics(completedTasks);
    double percent=(taskSolved * 100.0) / taskNum;
    contentPanel.add(Box.createRigidArea(new Dimension(0,10)));
    StudyProgressBar studyProgressBar=new StudyProgressBar(percent / 100,JBColor.GREEN,40,10);
    contentPanel.add(studyProgressBar);
    addStatistics(tasksLeft);
    ContentFactory contentFactory=ContentFactory.SERVICE.getInstance();
    Content content=contentFactory.createContent(contentPanel,"",true);
    toolWindow.getContentManager().addContent(content);
  }
}
