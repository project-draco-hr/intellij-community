{
  XDebuggerEvaluator.XEvaluationCallback callback=new XDebuggerEvaluator.XEvaluationCallback(){
    @Override public void evaluated(    @NotNull XValue result){
      String rawValue=((PyDebugValue)result).getValue();
      double min;
      double max;
      String minValue=rawValue.substring(1,rawValue.indexOf(","));
      String maxValue=rawValue.substring(rawValue.indexOf(", ") + 2,rawValue.length() - 1);
      if ("c".equals(myDtypeKind)) {
        min=0;
        max=1;
        myTableCellRenderer.setComplexMin(minValue);
        myTableCellRenderer.setComplexMax(maxValue);
      }
 else       if ("b".equals(myDtypeKind)) {
        min=minValue.equals("True") ? 1 : 0;
        max=maxValue.equals("True") ? 1 : 0;
      }
 else {
        min=Double.parseDouble(minValue);
        max=Double.parseDouble(maxValue);
      }
      myTableCellRenderer.setMin(min);
      myTableCellRenderer.setMax(max);
      returnToMain.run();
    }
    @Override public void errorOccurred(    @NotNull String errorMessage){
      showError(errorMessage);
    }
  }
;
  if (getMaxRow(myShape) * getMaxColumn(myShape) > HUGE_ARRAY_SIZE) {
    myTableCellRenderer.setMin(1.);
    myTableCellRenderer.setMax(1.);
    returnToMain.run();
  }
  String evalTypeCommand="[" + getNodeName() + ".min(), "+ getNodeName()+ ".max()]";
  getEvaluator().evaluate(evalTypeCommand,callback,null);
}
