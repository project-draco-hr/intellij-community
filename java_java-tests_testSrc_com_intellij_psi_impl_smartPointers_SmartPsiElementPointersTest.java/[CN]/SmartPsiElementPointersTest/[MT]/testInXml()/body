{
  final PsiFile file=configureByText(HtmlFileType.INSTANCE,"<!doctype html>\n" + "<html>\n" + "    <fieldset></fieldset>\n"+ "    <select></select>\n"+ "\n"+ "    <caret>\n"+ "</html>");
  final XmlTag fieldSet=PsiTreeUtil.getParentOfType(file.findElementAt(file.getText().indexOf("fieldset")),XmlTag.class);
  assertNotNull(fieldSet);
  assertEquals("fieldset",fieldSet.getName());
  final XmlTag select=PsiTreeUtil.getParentOfType(file.findElementAt(file.getText().indexOf("select")),XmlTag.class);
  assertNotNull(select);
  assertEquals("select",select.getName());
  final SmartPsiElementPointer<XmlTag> fieldSetPointer=SmartPointerManager.getInstance(getProject()).createSmartPsiElementPointer(fieldSet);
  final SmartPsiElementPointer<XmlTag> selectPointer=SmartPointerManager.getInstance(getProject()).createSmartPsiElementPointer(select);
  WriteCommandAction.runWriteCommandAction(getProject(),new Runnable(){
    @Override public void run(){
      getEditor().getDocument().insertString(getEditor().getCaretModel().getOffset(),"<a></a>");
    }
  }
);
  PsiDocumentManager.getInstance(getProject()).commitAllDocuments();
  final XmlTag newFieldSet=fieldSetPointer.getElement();
  assertNotNull(newFieldSet);
  assertEquals("fieldset",newFieldSet.getName());
  final XmlTag newSelect=selectPointer.getElement();
  assertNotNull(newSelect);
  assertEquals("select",newSelect.getName());
}
