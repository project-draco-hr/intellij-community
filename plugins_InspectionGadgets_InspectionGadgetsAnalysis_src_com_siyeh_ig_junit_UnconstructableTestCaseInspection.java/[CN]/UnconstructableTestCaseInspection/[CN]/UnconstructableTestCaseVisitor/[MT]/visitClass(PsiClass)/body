{
  if (aClass.isInterface() || aClass.isEnum() || aClass.isAnnotationType()|| aClass.hasModifierProperty(PsiModifier.ABSTRACT)) {
    return;
  }
  if (aClass instanceof PsiTypeParameter) {
    return;
  }
  if (TestUtils.isJUnit4TestClass(aClass,false)) {
    final PsiMethod[] constructors=aClass.getConstructors();
    if (constructors.length == 0) {
      return;
    }
    if (constructors.length == 1) {
      final PsiMethod constructor=constructors[0];
      final PsiParameterList parameterList=constructor.getParameterList();
      if (constructor.hasModifierProperty(PsiModifier.PUBLIC) && parameterList.getParametersCount() == 0) {
        return;
      }
    }
  }
 else   if (TestUtils.isJUnitTestClass(aClass)) {
    final PsiMethod[] constructors=aClass.getConstructors();
    boolean hasStringConstructor=false;
    boolean hasNoArgConstructor=false;
    boolean hasConstructor=false;
    for (    final PsiMethod constructor : constructors) {
      hasConstructor=true;
      if (!constructor.hasModifierProperty(PsiModifier.PUBLIC)) {
        continue;
      }
      final PsiParameterList parameterList=constructor.getParameterList();
      final int parametersCount=parameterList.getParametersCount();
      if (parametersCount == 0) {
        hasNoArgConstructor=true;
      }
      if (parametersCount == 1) {
        final PsiParameter[] parameters=parameterList.getParameters();
        final PsiType type=parameters[0].getType();
        if (TypeUtils.typeEquals(CommonClassNames.JAVA_LANG_STRING,type)) {
          hasStringConstructor=true;
        }
      }
    }
    if (!hasConstructor) {
      return;
    }
    if (hasNoArgConstructor || hasStringConstructor) {
      return;
    }
  }
 else {
    return;
  }
  registerClassError(aClass);
}
