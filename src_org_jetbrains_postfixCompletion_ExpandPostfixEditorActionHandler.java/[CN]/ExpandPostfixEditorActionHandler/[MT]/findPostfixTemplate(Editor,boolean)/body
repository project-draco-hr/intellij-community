{
  Project project=editor.getProject();
  if (project == null)   return null;
  final Document document=editor.getDocument();
  final int offset=editor.getCaretModel().getOffset();
  final String dummyIdentifier=CompletionUtilCore.DUMMY_IDENTIFIER_TRIMMED;
  final CommandProcessor commandProcessor=CommandProcessor.getInstance();
  boolean reparseBack=true;
  Application application=ApplicationManager.getApplication();
  try {
    application.runWriteAction(new Runnable(){
      @Override public void run(){
        commandProcessor.runUndoTransparentAction(new Runnable(){
          @Override public void run(){
            document.insertString(offset,dummyIdentifier);
          }
        }
);
      }
    }
);
    PsiDocumentManager.getInstance(project).commitDocument(document);
    PsiFile psiFile=PsiUtilBase.getPsiFileInEditor(editor,project);
    if (psiFile == null)     return null;
    PsiElement position=psiFile.findElementAt(offset);
    if (position == null)     return null;
    PostfixExecutionContext executionContext=new PostfixExecutionContext(true,dummyIdentifier,(psiFile instanceof PsiCodeFragment));
    PostfixTemplateContext templateContext=myTemplatesService.isAvailable(position,executionContext);
    if (templateContext == null)     return null;
    for (    LookupElement element : myTemplatesService.collectTemplates(templateContext)) {
      String lookupString=element.getLookupString();
      if (offset <= lookupString.length())       continue;
      TextRange prefixRange=new TextRange(offset - lookupString.length(),offset);
      if (lookupString.equals(document.getText(prefixRange))) {
        if (leaveReparseOnSuccess)         reparseBack=false;
        return element;
      }
    }
  }
  finally {
    if (reparseBack) {
      application.runWriteAction(new Runnable(){
        @Override public void run(){
          commandProcessor.runUndoTransparentAction(new Runnable(){
            @Override public void run(){
              document.deleteString(offset,offset + dummyIdentifier.length());
            }
          }
);
        }
      }
);
    }
  }
  return null;
}
