{
  Project project=editor.getProject();
  if (project == null)   return null;
  final Document document=editor.getDocument();
  final int offset=editor.getCaretModel().getOffset();
  boolean reparseBack=true;
  try {
    ApplicationManager.getApplication().runWriteAction(new Runnable(){
      @Override public void run(){
        document.insertString(offset,CompletionUtilCore.DUMMY_IDENTIFIER_TRIMMED);
      }
    }
);
    PsiDocumentManager.getInstance(project).commitAllDocuments();
    PsiFile file=PsiUtilBase.getPsiFileInEditor(editor,project);
    if (file == null)     return null;
    PsiElement elementAt=file.findElementAt(offset);
    if (elementAt == null)     return null;
    if (elementAt instanceof PsiWhiteSpace && offset > 0) {
      elementAt=file.findElementAt(offset - 1);
    }
    if (elementAt == null)     return null;
    PostfixExecutionContext executionContext=new PostfixExecutionContext(true,"postfix",false);
    PostfixTemplateContext templateContext=myTemplatesManager.isAvailable(elementAt,executionContext);
    if (templateContext == null)     return null;
    List<LookupElement> elements=myTemplatesManager.collectTemplates(templateContext);
    for (    LookupElement element : elements) {
      String lookupString=element.getLookupString();
      if (offset > lookupString.length()) {
        String prefix=document.getText(new TextRange(offset - lookupString.length(),offset));
        if (prefix.equals(lookupString)) {
          if (reparseIfAvailable) {
            reparseBack=false;
          }
          return element;
        }
      }
    }
    return null;
  }
  finally {
    if (reparseBack) {
      ApplicationManager.getApplication().runWriteAction(new Runnable(){
        @Override public void run(){
          document.deleteString(offset,offset + CompletionUtilCore.DUMMY_IDENTIFIER_TRIMMED.length());
        }
      }
);
    }
  }
}
