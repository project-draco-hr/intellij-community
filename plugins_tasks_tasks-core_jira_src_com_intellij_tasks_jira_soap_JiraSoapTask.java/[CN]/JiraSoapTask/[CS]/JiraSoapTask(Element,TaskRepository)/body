{
  super(repository);
  myKey=element.getChildText("key");
  mySummary=element.getChildText("summary");
  myDescription=element.getChildText("description");
  myIconUrl=getChildAttribute(element,"type","iconUrl");
  myType=getTypeByName(element.getChildText("type"));
  String statusIdText=getChildAttribute(element,"status","id");
  myState=getStateById(StringUtil.isEmpty(statusIdText) ? 0 : Integer.parseInt(statusIdText));
  myCreated=parseDate(element.getChildText("created"));
  myUpdated=parseDate(element.getChildText("updated"));
  Element comments=element.getChild("comments");
  if (comments != null) {
    myComments=ContainerUtil.map(comments.getChildren("comment"),new Function<Element,Comment>(){
      @Override public Comment fun(      final Element element){
        return new Comment(){
          @Override public String getText(){
            return element.getText();
          }
          @Nullable @Override public String getAuthor(){
            return element.getAttributeValue("author");
          }
          @Nullable @Override public Date getDate(){
            return parseDate(element.getAttributeValue("created"));
          }
        }
;
      }
    }
);
  }
 else {
    myComments=ContainerUtil.emptyList();
  }
}
