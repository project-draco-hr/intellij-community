{
  for (  int upNodeIndex : myTailEdges.keys()) {
    for (    int downNodeIndex : myTailEdges.get(upNodeIndex)) {
      workingGraph.removeEdge(upNodeIndex,downNodeIndex);
    }
  }
  TIntIterator it=myTails.iterator();
  while (it.hasNext()) {
    int tail=it.next();
    if (!LinearGraphUtils.getDownNodes(workingGraph,tail).contains(myFirstChild)) {
      workingGraph.addEdge(tail,myFirstChild);
    }
 else     if (myMergeWithOldCommit) {
      workingGraph.replaceEdge(tail,myFirstChild);
    }
  }
  workingGraph.removeEdge(myParent,myFirstChild);
  workingGraph.apply();
}
