{
  Statement st=stat.getFirst();
  while (st.type == Statement.TYPE_SEQUENCE) {
    st=st.getFirst();
  }
  if (st.type == Statement.TYPE_IF) {
    IfStatement ifstat=(IfStatement)st;
    Statement ifbranch=ifstat.getIfstat();
    Exprent if_condition=ifstat.getHeadexprent().getCondition();
    boolean is_notnull_check=false;
    if (ifbranch != null && if_condition.type == Exprent.EXPRENT_FUNCTION && ((FunctionExprent)if_condition).getFunctype() == FunctionExprent.FUNCTION_EQ && ifbranch.type == Statement.TYPE_BASICBLOCK && ifbranch.getExprents().size() == 1 && ifbranch.getExprents().get(0).type == Exprent.EXPRENT_EXIT) {
      FunctionExprent func=(FunctionExprent)if_condition;
      Exprent first_param=func.getLstOperands().get(0);
      Exprent second_param=func.getLstOperands().get(1);
      if (second_param.type == Exprent.EXPRENT_CONST && ((ConstExprent)second_param).getExprType().type == CodeConstants.TYPE_NULL) {
        if (first_param.type == Exprent.EXPRENT_VAR) {
          VarExprent var=(VarExprent)first_param;
          boolean thisvar=(mt.getAccessFlags() & CodeConstants.ACC_STATIC) == 0;
          MethodDescriptor md=MethodDescriptor.parseDescriptor(mt.getDescriptor());
          VBStyleCollection<StructGeneralAttribute,String> attributes=mt.getAttributes();
          StructAnnotationParameterAttribute param_annotations=(StructAnnotationParameterAttribute)attributes.getWithKey(StructGeneralAttribute.ATTRIBUTE_RUNTIME_INVISIBLE_PARAMETER_ANNOTATIONS);
          if (param_annotations != null) {
            List<List<AnnotationExprent>> param_annotations_lists=param_annotations.getParamAnnotations();
            int method_param_number=md.params.length;
            int index=thisvar ? 1 : 0;
            for (int i=0; i < method_param_number; i++) {
              if (index == var.getIndex()) {
                if (param_annotations_lists.size() >= method_param_number - i) {
                  int shift=method_param_number - param_annotations_lists.size();
                  List<AnnotationExprent> annotations=param_annotations_lists.get(i - shift);
                  for (                  AnnotationExprent ann : annotations) {
                    if (ann.getClassname().equals("org/jetbrains/annotations/NotNull")) {
                      is_notnull_check=true;
                    }
                  }
                }
                break;
              }
              index+=md.params[i].stack_size;
            }
          }
        }
      }
    }
    if (!is_notnull_check) {
      return false;
    }
    removeParameterCheck(stat,mt);
    return true;
  }
  return false;
}
