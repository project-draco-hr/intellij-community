{
  return ContainerUtil.map(log,new Function<TimedVcsCommit,GraphCommit<Integer>>(){
    @Override public GraphCommit<Integer> fun(    final TimedVcsCommit commit){
      final int commtId=getCommitIndex(commit.getId());
      final long timestamp=commit.getTimestamp();
      List<Hash> parentHashes=commit.getParents();
      List<Integer> parents;
      if (parentHashes.size() == 1)       parents=Collections.singletonList(getCommitIndex(parentHashes.get(0)));
 else {
        parents=ContainerUtil.map(parentHashes,new Function<Hash,Integer>(){
          @Override public Integer fun(          Hash hash){
            return getCommitIndex(hash);
          }
        }
);
      }
      return new GraphCommitInt(commtId,parents,timestamp);
    }
  }
);
}
