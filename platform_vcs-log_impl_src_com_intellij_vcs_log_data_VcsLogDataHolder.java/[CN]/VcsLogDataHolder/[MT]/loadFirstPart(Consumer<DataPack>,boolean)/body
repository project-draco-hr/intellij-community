{
  runInBackground(new ThrowableConsumer<ProgressIndicator,VcsException>(){
    @Override public void consume(    ProgressIndicator indicator) throws VcsException {
      boolean initialization=myLogData == null;
      boolean isFullLogReady=!initialization && myLogData.isFullLogReady();
      boolean fairRefresh=invalidateWholeLog || !isFullLogReady;
      Map<VirtualFile,List<TimedVcsCommit>> logsToBuild=ContainerUtil.newHashMap();
      Map<VirtualFile,Collection<VcsRef>> refsByRoot=ContainerUtil.newHashMap();
      int topCommitCount=myLogData == null ? 0 : myLogData.getTopCommitsCount();
      for (      Map.Entry<VirtualFile,VcsLogProvider> entry : myLogProviders.entrySet()) {
        VirtualFile root=entry.getKey();
        VcsLogProvider logProvider=entry.getValue();
        List<? extends VcsFullCommitDetails> firstBlockDetails=logProvider.readFirstBlock(root,fairRefresh,mySettings.getRecentCommitsCount());
        Collection<VcsRef> newRefs=logProvider.readAllRefs(root);
        storeTopCommitsDetailsInCache(firstBlockDetails);
        List<TimedVcsCommit> firstBlockCommits=getCommitsFromDetails(firstBlockDetails);
        List<TimedVcsCommit> refreshedLog;
        if (fairRefresh) {
          refreshedLog=firstBlockCommits;
          topCommitCount=firstBlockCommits.size();
        }
 else {
          Pair<List<TimedVcsCommit>,Integer> joinResult=myLogJoiner.addCommits(myLogData.getLog(root),myLogData.getRefs(root),firstBlockCommits,newRefs);
          refreshedLog=joinResult.getFirst();
          int newCommitsCount=joinResult.getSecond();
          topCommitCount+=newCommitsCount;
        }
        logsToBuild.put(root,refreshedLog);
        refsByRoot.put(root,newRefs);
      }
      List<TimedVcsCommit> compoundLog=myMultiRepoJoiner.join(logsToBuild.values());
      List<TimedVcsCommit> topPartOfTheLog=compoundLog.subList(0,topCommitCount);
      List<TimedVcsCommit> logToBuild=myFullLogShowing ? compoundLog : topPartOfTheLog;
      final DataPack dataPack=DataPack.build(logToBuild,collectAllRefs(refsByRoot),indicator);
      myLogData=new LogData(logsToBuild,refsByRoot,topPartOfTheLog,dataPack,isFullLogReady);
      handleOnSuccessInEdt(onSuccess,dataPack);
    }
  }
);
}
