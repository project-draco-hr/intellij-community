{
  if (element instanceof PyDocStringOwner) {
    String docString=((PyDocStringOwner)element).getDocString();
    if (docString == null) {
      if (element instanceof PyClass) {
        PyClass cls=(PyClass)element;
        StringBuffer cat=new StringBuffer("class ");
        cat.append(cls.getName());
        final PyExpression[] ancestors=cls.getSuperClassExpressions();
        if (ancestors.length > 0) {
          cat.append("(");
          boolean is_not_first=false;
          for (          PyExpression one : ancestors) {
            if (is_not_first)             cat.append(", ");
 else             is_not_first=true;
            cat.append(PyUtil.getReadableRepr(one,false));
          }
          cat.append(")");
        }
        docString=cat.toString();
      }
 else       if (element instanceof PyFunction) {
        PyFunction fun=(PyFunction)element;
        StringBuffer cat=new StringBuffer("def ");
        cat.append(fun.getName());
        cat.append(PyUtil.getReadableRepr(fun.getParameterList(),false));
        docString=cat.toString();
      }
 else       docString=PyUtil.getReadableRepr(element,false);
    }
    return XmlStringUtil.escapeString(docString).replace("\n","<br>").replace(" ","&nbsp;");
  }
  return null;
}
