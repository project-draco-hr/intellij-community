{
  ChainIterable<String> cat=new ChainIterable<String>();
  String[] fragments=Pattern.compile("\n").split(docstring);
  Pattern spaces_pat=Pattern.compile("^\\s+");
  boolean is_first=true;
  final int IMPOSSIBLY_BIG=999999;
  int cut_width=IMPOSSIBLY_BIG;
  for (  String frag : fragments) {
    if (frag.length() == 0)     continue;
    int pad_width=0;
    final Matcher matcher=spaces_pat.matcher(frag);
    if (matcher.find()) {
      pad_width=matcher.end();
      if (is_first) {
        is_first=false;
        if (pad_width == 0)         continue;
      }
    }
    if (pad_width < cut_width)     cut_width=pad_width;
  }
  if (cut_width > 0 && cut_width < IMPOSSIBLY_BIG) {
    for (int i=0; i < fragments.length; i+=1) {
      if (fragments[i].length() > 0)       fragments[i]=fragments[i].substring(cut_width);
    }
  }
  is_first=true;
  for (  String frag : fragments) {
    if (is_first && spaces_pat.matcher(frag).matches())     continue;
    if (is_first)     is_first=false;
 else     cat.add(BR);
    cat.add(combUp(frag));
  }
  return cat;
}
