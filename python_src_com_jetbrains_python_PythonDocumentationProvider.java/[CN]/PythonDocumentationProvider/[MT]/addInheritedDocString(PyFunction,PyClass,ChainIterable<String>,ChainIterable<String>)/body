{
  boolean not_found=true;
  String meth_name=fun.getName();
  if (cls != null && meth_name != null) {
    for (    PyClass ancestor : cls.iterateAncestors()) {
      PyFunction inherited=ancestor.findMethodByName(meth_name,false);
      if (inherited != null) {
        PyStringLiteralExpression doc_elt=inherited.getDocStringExpression();
        if (doc_elt != null) {
          String inherited_doc=doc_elt.getStringValue();
          if (inherited_doc.length() > 1) {
            epilog_cat.add(BR).add(BR).add(PyBundle.message("QDOC.copied.from.$0.$1",ancestor.getName(),meth_name)).add(BR).add(BR).addWith(TagCode,combUpDocString(inherited_doc));
            not_found=false;
            break;
          }
        }
      }
    }
    if (not_found) {
      if (PyNames.UnderscoredAttributes.contains(meth_name)) {
        PyClassType objtype=PyBuiltinCache.getInstance(fun).getObjectType();
        if (objtype != null) {
          PyClass objcls=objtype.getPyClass();
          if (objcls != null) {
            PyFunction obj_underscored=objcls.findMethodByName(meth_name,false);
            if (obj_underscored != null) {
              PyStringLiteralExpression predefined_doc_expr=obj_underscored.getDocStringExpression();
              String predefined_doc=predefined_doc_expr != null ? predefined_doc_expr.getStringValue() : null;
              if (predefined_doc != null && predefined_doc.length() > 1) {
                doc_cat.add(combUpDocString(predefined_doc));
                epilog_cat.add(BR).add(BR).add(PyBundle.message("QDOC.copied.from.builtin"));
              }
            }
          }
        }
      }
    }
  }
}
