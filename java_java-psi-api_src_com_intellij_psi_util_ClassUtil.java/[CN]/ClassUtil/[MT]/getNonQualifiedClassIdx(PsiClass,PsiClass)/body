{
  TObjectIntHashMap<PsiClass> indices=CachedValuesManager.getCachedValue(containingClass,new CachedValueProvider<TObjectIntHashMap<PsiClass>>(){
    @Nullable @Override public Result<TObjectIntHashMap<PsiClass>> compute(){
      final TObjectIntHashMap<PsiClass> map=new TObjectIntHashMap<PsiClass>();
      containingClass.accept(new JavaRecursiveElementWalkingVisitor(){
        private int myCurrentIdx=0;
        @Override public void visitClass(        PsiClass aClass){
          super.visitClass(aClass);
          if (aClass.getQualifiedName() == null) {
            myCurrentIdx++;
            map.put(aClass,myCurrentIdx);
          }
        }
      }
);
      return Result.create(map,containingClass);
    }
  }
);
  return indices.get(psiClass);
}
