{
  final EquivalenceDescriptorBuilder builder=new EquivalenceDescriptorBuilder();
  if (element instanceof JSClass) {
    final JSClass c=(JSClass)element;
    return builder.element(c.getNameIdentifier()).childrenOptionally(c.getAttributeList()).childrenInAnyOrder(c.getExtendsList()).childrenInAnyOrder(c.getImplementsList()).inAnyOrder(c.getFields()).inAnyOrder(c.getFunctions());
  }
 else   if (element instanceof JSVariable) {
    final JSVariable v=(JSVariable)element;
    return builder.element(v.getNameIdentifier()).optionally(v.getTypeElement()).optionallyInPattern(v.getInitializer()).role(v.getNameIdentifier(),ChildRole.VARIABLE_NAME);
  }
 else   if (element instanceof JSFunction) {
    final JSFunction f=(JSFunction)element;
    return builder.constant(f.getKind()).element(f.getNameIdentifier()).childrenOptionally(f.getAttributeList()).children(f.getParameterList()).optionally(f.getReturnTypeElement()).optionallyInPattern(f.getBody()).role(f.getNameIdentifier(),ChildRole.FUNCTION_NAME);
  }
 else   if (element instanceof JSBlockStatement) {
    return builder.codeBlock(((JSBlockStatement)element).getStatements());
  }
 else   if (element instanceof JSParenthesizedExpression) {
    return builder.element(((JSParenthesizedExpression)element).getInnerExpression());
  }
  return null;
}
