{
  if (languageLevel.isAtLeast(LanguageLevel.JDK_1_8) && qualifier instanceof PsiSuperExpression) {
    final PsiMethod method=PsiTreeUtil.getParentOfType(expr,PsiMethod.class);
    if (method != null && method.hasModifierProperty(PsiModifier.DEFAULT) && ((PsiSuperExpression)qualifier).getQualifier() == null) {
      String description=JavaErrorMessages.message("unqualified.super.disallowed");
      HighlightInfo info=HighlightInfo.newHighlightInfo(HighlightInfoType.ERROR).range(expr).descriptionAndTooltip(description).create();
      QualifySuperArgumentFix.registerQuickFixAction((PsiSuperExpression)qualifier,info);
      return info;
    }
  }
  return null;
}
