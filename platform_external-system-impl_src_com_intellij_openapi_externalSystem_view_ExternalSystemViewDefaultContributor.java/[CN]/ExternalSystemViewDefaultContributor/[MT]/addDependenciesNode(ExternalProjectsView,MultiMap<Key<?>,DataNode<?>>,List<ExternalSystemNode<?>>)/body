{
  final Collection<DataNode<?>> moduleDeps=dataNodes.get(ProjectKeys.MODULE_DEPENDENCY);
  final Collection<DataNode<?>> libDeps=dataNodes.get(ProjectKeys.LIBRARY_DEPENDENCY);
  if (!moduleDeps.isEmpty() || !libDeps.isEmpty()) {
    final ExternalSystemNode depNode=new MyDependenciesNode(externalProjectsView);
    for (    DataNode<?> dataNode : moduleDeps) {
      if (!(dataNode.getData() instanceof ModuleDependencyData))       continue;
      depNode.add(new ModuleDependencyDataExternalSystemNode(externalProjectsView,(DataNode<ModuleDependencyData>)dataNode));
    }
    for (    DataNode<?> dataNode : libDeps) {
      if (!(dataNode.getData() instanceof LibraryDependencyData))       continue;
      final ExternalSystemNode<LibraryDependencyData> libraryDependencyDataExternalSystemNode=new LibraryDependencyDataExternalSystemNode(externalProjectsView,(DataNode<LibraryDependencyData>)dataNode);
      depNode.add(libraryDependencyDataExternalSystemNode);
      libraryDependencyDataExternalSystemNode.setErrorLevel(((LibraryDependencyData)dataNode.getData()).getTarget().isUnresolved() ? ExternalProjectsStructure.ErrorLevel.ERROR : ExternalProjectsStructure.ErrorLevel.NONE);
    }
    result.add(depNode);
  }
}
