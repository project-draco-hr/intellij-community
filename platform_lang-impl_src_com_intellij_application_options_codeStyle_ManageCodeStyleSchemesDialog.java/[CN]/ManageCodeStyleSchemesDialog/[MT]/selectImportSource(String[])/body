{
  final Set<String> extensions=new HashSet<String>(Arrays.asList(sourceExtensions));
  FileChooserDialog fileChooser=FileChooserFactory.getInstance().createFileChooser(new FileChooserDescriptor(true,false,false,false,false,false){
    @Override public boolean isFileVisible(    VirtualFile file,    boolean showHiddenFiles){
      return file.isDirectory() || extensions.contains(file.getExtension());
    }
    @Override public boolean isFileSelectable(    VirtualFile file){
      return !file.isDirectory() && extensions.contains(file.getExtension());
    }
  }
,null,myContentPane);
  final VirtualFile[] virtualFiles=fileChooser.choose(null,CodeStyleSchemesUIConfiguration.Util.getRecentImportFile());
  if (virtualFiles.length != 1)   return null;
  virtualFiles[0].refresh(false,false);
  return virtualFiles[0];
}
