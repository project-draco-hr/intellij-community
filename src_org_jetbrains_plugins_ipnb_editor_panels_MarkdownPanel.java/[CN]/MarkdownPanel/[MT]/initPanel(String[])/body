{
  if (text == null)   return;
  StringBuilder formula=new StringBuilder();
  boolean hasFormula=false;
  boolean isEscaped=false;
  boolean inFormula=false;
  for (  String string : text) {
    if (string.startsWith("```") && !isEscaped) {
      isEscaped=true;
    }
 else     if (StringUtil.trimTrailing(string).endsWith("```") && isEscaped) {
      isEscaped=false;
    }
    if ((StringUtil.trimTrailing(string).endsWith("$$") || string.startsWith("\\\\end{")) && inFormula) {
      inFormula=false;
    }
 else     if (string.trim().startsWith("$$") && !isEscaped) {
      formula.append(string.substring(2));
      hasFormula=true;
      inFormula=true;
    }
    if (string.startsWith("\\") && !isEscaped || inFormula) {
      inFormula=true;
      hasFormula=true;
      if (string.contains("equation*"))       string=string.replace("equation*","align");
      formula.append(string);
    }
 else {
      if (hasFormula) {
        try {
          TeXFormula f=new TeXFormula(formula.toString());
          final Image image=f.createBufferedImage(TeXFormula.SERIF,new Float(20.),JBColor.BLACK,JBColor.WHITE);
          JLabel picLabel=new JLabel(new ImageIcon(image));
          add(picLabel);
        }
 catch (        ParseException x) {
          x.printStackTrace();
        }
        hasFormula=false;
        formula=new StringBuilder();
      }
 else {
        final String s=IpnbUtils.markdown2Html(string);
        final JLabel comp=new JLabel("<html><body style='width: 900px'" + s + "</body></html>");
        final Font font=new Font(Font.SERIF,Font.PLAIN,16);
        comp.setFont(font);
        add(comp);
      }
    }
  }
  if (hasFormula) {
    try {
      TeXFormula f=new TeXFormula(formula.toString());
      final TeXIcon icon=f.createTeXIcon(TeXFormula.SERIF,20);
      JLabel picLabel=new JLabel(icon);
      add(picLabel);
    }
 catch (    ParseException x) {
      x.printStackTrace();
    }
  }
  setBackground(IpnbEditorUtil.getBackground());
  setOpaque(true);
}
