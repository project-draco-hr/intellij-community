{
  if (text == null)   return;
  final SnuggleEngine engine=new SnuggleEngine(new SimpleStylesheetCache());
  final SnuggleSession session=engine.createSession();
  final SnuggleInput input=new SnuggleInput(text);
  try {
    session.parseInput(input);
  }
 catch (  IOException e) {
    LOG.error("Couldn't parse formula " + text);
    return;
  }
  final NodeList nodes=session.buildDOMSubtree();
  boolean hasPlain=true;
  final StringBuilder plainContent=new StringBuilder();
  int compNumber=0;
  for (int i=0; i != nodes.getLength(); ++i) {
    final Node node=nodes.item(i);
    final StylesheetManager stylesheetManager=session.getStylesheetManager();
    final XMLStringOutputOptions xmlStringOutputOptions=engine.getDefaultXMLStringOutputOptions();
    final String str=XMLUtilities.serializeNodeChildren(stylesheetManager,node,xmlStringOutputOptions);
    final Node child=node.getFirstChild();
    if (child != null && "math".equals(child.getLocalName())) {
      if (hasPlain) {
        hasPlain=false;
        compNumber=addPlainComponent(compNumber,plainContent);
        plainContent.setLength(0);
      }
      final JMathComponent comp=new JMathComponent();
      comp.setBackground(IpnbEditorUtil.getBackground());
      comp.setOpaque(true);
      comp.setContent("<html>" + str + "</html>");
      add(comp,compNumber);
      compNumber+=1;
    }
 else {
      hasPlain=true;
      plainContent.append(IpnbUtils.markdown2Html(str));
    }
  }
  if (hasPlain) {
    addPlainComponent(compNumber,plainContent);
  }
  setBackground(IpnbEditorUtil.getBackground());
  setOpaque(true);
}
