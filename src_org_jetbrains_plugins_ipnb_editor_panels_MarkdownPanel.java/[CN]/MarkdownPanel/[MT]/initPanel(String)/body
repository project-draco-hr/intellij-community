{
  if (text == null)   return;
  setLayout(new GridBagLayout());
  GridBagConstraints c=new GridBagConstraints();
  c.fill=GridBagConstraints.HORIZONTAL;
  c.gridy=0;
  c.gridx=0;
  final SnuggleEngine engine=new SnuggleEngine(new SimpleStylesheetCache());
  final SnuggleSession session=engine.createSession();
  final SnuggleInput input=new SnuggleInput(text);
  try {
    session.parseInput(input);
  }
 catch (  IOException e) {
    LOG.error("Couldn't parse formula " + text);
    return;
  }
  final NodeList nodes=session.buildDOMSubtree();
  for (int i=0; i != nodes.getLength(); ++i) {
    final Node node=nodes.item(i);
    final StylesheetManager stylesheetManager=session.getStylesheetManager();
    final XMLStringOutputOptions xmlStringOutputOptions=engine.getDefaultXMLStringOutputOptions();
    final String str=XMLUtilities.serializeNodeChildren(stylesheetManager,node,xmlStringOutputOptions);
    if (str.startsWith("<math")) {
      final JMathComponent comp=new JMathComponent();
      comp.setBackground(IpnbEditorUtil.getBackground());
      comp.setOpaque(true);
      comp.setContent("<html>" + str + "</html>");
      add(comp,c);
    }
 else {
      final String html=IpnbUtils.markdown2Html(str);
      final JBLabel comp=new JBLabel(html);
      comp.setBackground(IpnbEditorUtil.getBackground());
      comp.setOpaque(true);
      add(comp,c);
    }
    c.gridy=c.gridy + 1;
  }
  setBackground(IpnbEditorUtil.getBackground());
  setOpaque(true);
}
