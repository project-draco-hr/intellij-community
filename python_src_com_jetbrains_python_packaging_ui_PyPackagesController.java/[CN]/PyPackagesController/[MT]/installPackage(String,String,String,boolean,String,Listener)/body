{
  final String repository=repositoryUrl.equals(PyPIPackageUtil.PYPI_URL) ? null : repositoryUrl;
  final List<String> extraArgs=new ArrayList<String>();
  if (installToUser) {
    extraArgs.add(PyPackageManagerImpl.USE_USER_SITE);
  }
  if (extraOptions != null) {
    Collections.addAll(extraArgs,extraOptions.split(" +"));
  }
  if (!StringUtil.isEmptyOrSpaces(repository)) {
    extraArgs.add("--extra-index-url");
    extraArgs.add(repository);
  }
  final PyRequirement req;
  if (version != null) {
    req=new PyRequirement(packageName,version);
  }
 else {
    req=new PyRequirement(packageName);
  }
  final PyPackageManagerImpl.UI ui=new PyPackageManagerImpl.UI(myProject,mySdk,new PyPackageManagerImpl.UI.Listener(){
    @Override public void started(){
      listener.installationStarted();
    }
    @Override public void finished(    @Nullable List<PyExternalProcessException> exceptions){
      listener.installationFinished(PyPackageManagerImpl.UI.createDescription(exceptions,""));
    }
  }
);
  ui.install(Collections.singletonList(req),extraArgs);
}
