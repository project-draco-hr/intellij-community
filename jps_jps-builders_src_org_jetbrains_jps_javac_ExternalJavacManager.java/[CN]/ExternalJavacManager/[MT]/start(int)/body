{
  final ServerBootstrap bootstrap=new ServerBootstrap().group(new NioEventLoopGroup(1,SharedThreadPool.getInstance())).channel(NioServerSocketChannel.class);
  bootstrap.childOption(ChannelOption.TCP_NODELAY,true).childOption(ChannelOption.SO_KEEPALIVE,true);
  final ChannelHandler compilationRequestsHandler=new CompilationRequestsHandler();
  bootstrap.childHandler(new ChannelInitializer(){
    @Override protected void initChannel(    Channel channel) throws Exception {
      channel.pipeline().addLast(myChannelRegistrar,new ProtobufVarint32FrameDecoder(),new ProtobufDecoder(JavacRemoteProto.Message.getDefaultInstance()),new ProtobufVarint32LengthFieldPrepender(),new ProtobufEncoder(),compilationRequestsHandler);
    }
  }
);
  myChannelRegistrar.add(bootstrap.bind(listenPort).syncUninterruptibly().channel());
  myListenPort=listenPort;
}
