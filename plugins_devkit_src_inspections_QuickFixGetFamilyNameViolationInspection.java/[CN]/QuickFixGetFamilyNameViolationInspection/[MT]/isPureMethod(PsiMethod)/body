{
  if (method.hasModifierProperty(PsiModifier.STATIC))   return true;
  final PsiCodeBlock body=method.getBody();
  if (body == null)   return true;
  final Collection<PsiJavaCodeReferenceElement> referenceIterator=PsiTreeUtil.findChildrenOfType(body,PsiJavaCodeReferenceElement.class);
  for (  PsiJavaCodeReferenceElement reference : referenceIterator) {
    final PsiElement resolved=reference.resolve();
    if (resolved instanceof PsiVariable) {
      if (resolved instanceof PsiParameter || (resolved instanceof PsiLocalVariable && !PsiTreeUtil.isAncestor(body,resolved,false))) {
        return false;
      }
      if (resolved instanceof PsiField && !((PsiField)resolved).hasModifierProperty(PsiModifier.STATIC)) {
        return false;
      }
    }
    if (resolved instanceof PsiMethod && !((PsiMethod)resolved).hasModifierProperty(PsiModifier.STATIC)) {
      final PsiClass resolvedContainingClass=((PsiMethod)resolved).getContainingClass();
      if (resolvedContainingClass == method.getContainingClass()) {
        if (!isPureMethod((PsiMethod)resolved)) {
          return false;
        }
      }
    }
  }
  return true;
}
