{
  if (perModule != null && perModule.size() > 1) {
    final String classpath=getScope() == TestSearchScope.WHOLE_PROJECT ? null : javaParameters.getClassPath().getPathsString();
    final PrintWriter wWriter=new PrintWriter(myWorkingDirsFile,CharsetToolkit.UTF8);
    try {
      wWriter.println(packageName);
      for (      Module module : perModule.keySet()) {
        wWriter.println(PathMacroUtil.getModuleDir(module.getModuleFilePath()));
        wWriter.println(module.getName());
        if (classpath == null) {
          final JavaParameters parameters=new JavaParameters();
          parameters.getClassPath().add(JavaSdkUtil.getIdeaRtJarPath());
          configureRTClasspath(parameters);
          JavaParametersUtil.configureModule(module,parameters,JavaParameters.JDK_AND_CLASSES_AND_TESTS,getConfiguration().isAlternativeJrePathEnabled() ? getConfiguration().getAlternativeJrePath() : null);
          wWriter.println(parameters.getClassPath().getPathsString());
        }
 else {
          wWriter.println(classpath);
        }
        final List<String> classNames=perModule.get(module);
        wWriter.println(classNames.size());
        for (        String className : classNames) {
          wWriter.println(className);
        }
      }
    }
  finally {
      wWriter.close();
    }
  }
}
