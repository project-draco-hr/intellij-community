{
  for (  JavacRefSymbol def : defs) {
    Tree.Kind kind=def.getPlaceKind();
    if (kind == Tree.Kind.CLASS) {
      Symbol.ClassSymbol sym=(Symbol.ClassSymbol)def.getSymbol();
      Type superclass=sym.getSuperclass();
      List<Type> interfaces=sym.getInterfaces();
      final Symbol[] supers;
      if (superclass != Type.noType) {
        supers=new Symbol[interfaces.size() + 1];
        supers[interfaces.size()]=superclass.asElement();
      }
 else {
        supers=interfaces.isEmpty() ? EMPTY_SYMBOL_ARRAY : new Symbol[interfaces.size()];
      }
      int i=0;
      for (      Type anInterface : interfaces) {
        supers[i++]=anInterface.asElement();
      }
      myWriter.writeHierarchy(sym,supers);
    }
  }
  myWriter.writeReferences(file,refs);
}
