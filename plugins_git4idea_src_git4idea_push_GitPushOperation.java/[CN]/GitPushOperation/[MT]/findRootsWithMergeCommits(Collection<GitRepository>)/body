{
  return ContainerUtil.mapNotNull(rootsToSearch,new Function<GitRepository,VirtualFile>(){
    @Override public VirtualFile fun(    GitRepository repo){
      PushSpec<GitPushSource,GitPushTarget> pushSpec=myPushSpecs.get(repo);
      if (pushSpec == null) {
        GitPushSource source=myPushSupport.getSource(repo);
        GitPushTarget target=myPushSupport.getDefaultTarget(repo);
        if (target == null) {
          return null;
        }
        pushSpec=new PushSpec<>(source,target);
      }
      String baseRef=pushSpec.getTarget().getBranch().getFullName();
      String currentRef=pushSpec.getSource().getBranch().getFullName();
      return GitRebaseOverMergeProblem.hasProblem(myProject,repo.getRoot(),baseRef,currentRef) ? repo.getRoot() : null;
    }
  }
);
}
