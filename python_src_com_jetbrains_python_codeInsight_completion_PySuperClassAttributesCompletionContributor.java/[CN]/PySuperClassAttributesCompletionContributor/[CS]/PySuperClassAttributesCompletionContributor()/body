{
  extend(CompletionType.BASIC,PlatformPatterns.psiElement().withParents(PyReferenceExpression.class,PyExpressionStatement.class,PyStatementList.class,PyClass.class),new CompletionProvider<CompletionParameters>(){
    @Override protected void addCompletions(    @NotNull CompletionParameters parameters,    ProcessingContext context,    @NotNull CompletionResultSet result){
      PsiElement position=parameters.getOriginalPosition();
      PyClass containingClass=PsiTreeUtil.getParentOfType(position,PyClass.class);
      if (containingClass == null) {
        return;
      }
      for (      PyTargetExpression expr : getSuperClassAttributes(containingClass)) {
        result.addElement(LookupElementBuilder.create(expr,expr.getName() + " = "));
      }
    }
  }
);
}
