{
  JPanel panel=new JPanel();
  panel.setLayout(new BorderLayout());
  myModel=new DefaultTreeModel(new DefaultMutableTreeNode());
  createTreeModel();
  myTree=new Tree(myModel);
  UIUtil.setLineStyleAngled(myTree);
  myTree.setCellRenderer(new DefaultTreeCellRenderer(){
    public Component getTreeCellRendererComponent(    JTree tree,    Object value,    boolean sel,    boolean expanded,    boolean leaf,    int row,    boolean hasFocus){
      super.getTreeCellRendererComponent(tree,value,sel,expanded,leaf,row,hasFocus);
      setIcon(PlatformIcons.PACKAGE_ICON);
      if (value instanceof DefaultMutableTreeNode) {
        DefaultMutableTreeNode node=(DefaultMutableTreeNode)value;
        Object object=node.getUserObject();
        if (object instanceof PsiPackage) {
          String name=((PsiPackage)object).getName();
          if (name != null && name.length() > 0) {
            setText(name);
          }
 else {
            setText(IdeBundle.message("node.default"));
          }
        }
      }
      return this;
    }
  }
);
  JScrollPane scrollPane=ScrollPaneFactory.createScrollPane(myTree);
  scrollPane.setPreferredSize(new Dimension(500,300));
  new TreeSpeedSearch(myTree,new Convertor<TreePath,String>(){
    public String convert(    TreePath path){
      DefaultMutableTreeNode node=(DefaultMutableTreeNode)path.getLastPathComponent();
      Object object=node.getUserObject();
      if (object instanceof PsiPackage)       return ((PsiPackage)object).getName();
 else       return "";
    }
  }
);
  myTree.getSelectionModel().addTreeSelectionListener(new TreeSelectionListener(){
    public void valueChanged(    TreeSelectionEvent e){
      PsiPackage selection=getTreeSelection();
      if (selection != null) {
        String name=selection.getQualifiedName();
        setTitle(myTitle + " - " + ("".equals(name) ? IdeBundle.message("node.default.package") : name));
      }
 else {
        setTitle(myTitle);
      }
      updatePathFromTree();
    }
  }
);
  panel.add(scrollPane,BorderLayout.CENTER);
  DefaultActionGroup group=createActionGroup(myTree);
  final JPanel northPanel=new JPanel(new BorderLayout());
  panel.add(northPanel,BorderLayout.NORTH);
  ActionToolbar toolBar=ActionManager.getInstance().createActionToolbar(ActionPlaces.UNKNOWN,group,true);
  northPanel.add(toolBar.getComponent(),BorderLayout.WEST);
  setupPathComponent(northPanel);
  return panel;
}
