{
  ApplicationEx application=ApplicationManagerEx.getApplicationEx();
  application.assertWriteAccessAllowed();
  if (ProjectManagerEx.getInstanceEx().isProjectOpened(this)) {
    throw new IllegalStateException("Must call .dispose() for a closed project only. See ProjectManager.closeProject() or ProjectUtil.closeAndDispose().");
  }
  LOG.assertTrue(!super.isDisposed());
  if (myProjectManagerListener != null) {
    myProjectManager.removeProjectManagerListener(this,myProjectManagerListener);
  }
  disposeComponents();
  Extensions.disposeArea(this);
  myProjectManager=null;
  myProjectManagerListener=null;
  super.dispose();
  if (!application.isDisposed()) {
    application.getMessageBus().syncPublisher(ProjectLifecycleListener.TOPIC).afterProjectClosed(this);
  }
  TimedReference.disposeTimed();
}
