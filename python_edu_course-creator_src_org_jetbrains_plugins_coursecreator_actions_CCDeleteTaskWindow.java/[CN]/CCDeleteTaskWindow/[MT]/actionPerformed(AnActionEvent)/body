{
  final Project project=e.getData(PlatformDataKeys.PROJECT);
  if (project == null)   return;
  final PsiFile file=CommonDataKeys.PSI_FILE.getData(e.getDataContext());
  if (file == null)   return;
  final Editor editor=CommonDataKeys.EDITOR.getData(e.getDataContext());
  if (editor == null) {
    return;
  }
  final Document document=PsiDocumentManager.getInstance(project).getDocument(file);
  if (document == null)   return;
  final CCProjectService service=CCProjectService.getInstance(project);
  final Course course=service.getCourse();
  final PsiDirectory taskDir=file.getContainingDirectory();
  final PsiDirectory lessonDir=taskDir.getParent();
  if (lessonDir == null)   return;
  final Lesson lesson=course.getLesson(lessonDir.getName());
  final Task task=lesson.getTask(taskDir.getName());
  final TaskFile taskFile=task.getTaskFile(file.getName());
  if (taskFile == null) {
    LOG.info("could not find task file");
    return;
  }
  final List<TaskWindow> taskWindows=taskFile.getTaskWindows();
  if (taskWindows.contains(myTaskWindow)) {
    myTaskWindow.removeResources(project);
    taskWindows.remove(myTaskWindow);
    editor.getMarkupModel().removeAllHighlighters();
    CCProjectService.getInstance(project).drawTaskWindows(file.getVirtualFile(),editor,course);
    taskFile.createGuardedBlocks(editor);
    DaemonCodeAnalyzerImpl.getInstance(project).restart(file);
  }
}
