{
  final ConflictCreator creator=new ConflictCreator(myProject,myTheirs,myWorkingCopyDir,TreeConflictData.FileToFile.MINE_UNV_THEIRS_ADD,mySvnClientRunner);
  creator.create();
  final String conflictFile=TreeConflictData.FileToFile.MINE_UNV_THEIRS_ADD.getConflictFile();
  VcsDirtyScopeManager.getInstance(myProject).markEverythingDirty();
  ChangeListManager changeListManager=ChangeListManager.getInstance(myProject);
  changeListManager.ensureUpToDate(false);
  VirtualFile vf=LocalFileSystem.getInstance().refreshAndFindFileByIoFile(new File(myWorkingCopyDir.getPath(),conflictFile));
  Assert.assertNotNull(vf);
  final Change change=changeListManager.getChange(vf);
  Assert.assertTrue(change instanceof ConflictedSvnChange);
  TreeConflictDescription beforeDescription=((ConflictedSvnChange)change).getBeforeDescription();
  Assert.assertNotNull(beforeDescription);
  final TreeConflictDescription afterDescription=((ConflictedSvnChange)change).getAfterDescription();
  Assert.assertNull(afterDescription);
  Assert.assertEquals(ConflictOperation.UPDATE,beforeDescription.getOperation());
  Assert.assertEquals(ConflictAction.ADD,beforeDescription.getConflictAction());
  Assert.assertTrue(beforeDescription.isTreeConflict());
  Assert.assertNull(beforeDescription.getSourceLeftVersion());
  final ConflictVersion version=beforeDescription.getSourceRightVersion();
  Assert.assertNotNull(version);
  Assert.assertTrue(version.isFile());
}
