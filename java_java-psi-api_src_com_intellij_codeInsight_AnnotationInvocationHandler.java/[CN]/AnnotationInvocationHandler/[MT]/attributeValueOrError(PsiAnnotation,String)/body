{
  PsiNameValuePair attribute=AnnotationUtil.findDeclaredAttribute(annotation,attributeName);
  final PsiAnnotationMemberValue value=attribute == null ? null : attribute.getValue();
  if (value != null)   return Pair.create(value,null);
  if (attributeName == null)   attributeName="value";
  final PsiJavaCodeReferenceElement referenceElement=annotation.getNameReferenceElement();
  if (referenceElement == null) {
    return Pair.create(null,"no reference found in " + annotation.getText());
  }
  PsiElement resolved=referenceElement.resolve();
  if (resolved == null) {
    return Pair.create(null,"can't resolve reference '" + referenceElement.getText() + "'");
  }
  PsiClass psiClass;
  if (!(resolved instanceof PsiClass) || !(psiClass=(PsiClass)resolved).isAnnotationType()) {
    return Pair.create(null,"reference '" + referenceElement.getText() + "' resolved to "+ resolved+ " ("+ resolved.getClass()+ ") instead of enum");
  }
  PsiMethod[] methods=psiClass.findMethodsByName(attributeName,false);
  for (  PsiMethod method : methods) {
    if (method instanceof PsiAnnotationMethod) {
      PsiAnnotationMemberValue defaultValue=((PsiAnnotationMethod)method).getDefaultValue();
      if (defaultValue != null) {
        return Pair.create(defaultValue,null);
      }
      return Pair.create(null,"method has no value nor default value: " + method.getText());
    }
  }
  return Pair.create(null,"method '" + attributeName + "' not found in "+ psiClass.getQualifiedName()+ " among methods "+ Arrays.asList(psiClass.getMethods()));
}
