{
  PsiBuilder.Marker marker=builder.mark();
  final PsiBuilder.Marker lfMarker;
  if (checkIdentAndAssign(builder)) {
    ParserUtils.getToken(builder,TokenSets.CODE_REFERENCE_ELEMENT_NAME_TOKENS);
    ParserUtils.getToken(builder,GroovyTokenTypes.mASSIGN);
    lfMarker=builder.mark();
    ParserUtils.getToken(builder,GroovyTokenTypes.mNLS);
  }
 else {
    lfMarker=null;
  }
  if (!parseAnnotationMemberValueInitializer(builder,parser)) {
    if (lfMarker != null) {
      lfMarker.rollbackTo();
      builder.error(GroovyBundle.message("annotation.member.value.initializer.expected"));
    }
 else {
      builder.error(GroovyBundle.message("annotation.attribute.expected"));
    }
  }
 else   if (lfMarker != null) {
    lfMarker.drop();
  }
  marker.done(ANNOTATION_MEMBER_VALUE_PAIR);
  return true;
}
