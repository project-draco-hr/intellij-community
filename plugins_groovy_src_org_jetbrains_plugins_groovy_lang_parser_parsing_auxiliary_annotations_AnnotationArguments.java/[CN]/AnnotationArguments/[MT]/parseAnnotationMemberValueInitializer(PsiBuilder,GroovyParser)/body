{
  if (builder.getTokenType() == GroovyTokenTypes.mAT) {
    return Annotation.parse(builder,parser);
  }
 else   if (builder.getTokenType() == GroovyTokenTypes.mLBRACK) {
    PsiBuilder.Marker marker=builder.mark();
    ParserUtils.getToken(builder,GroovyTokenTypes.mLBRACK);
    while (parseAnnotationMemberValueInitializer(builder,parser)) {
      if (builder.eof() || builder.getTokenType() == GroovyTokenTypes.mRBRACK)       break;
      ParserUtils.getToken(builder,GroovyTokenTypes.mCOMMA,GroovyBundle.message("comma.expected"));
    }
    ParserUtils.getToken(builder,GroovyTokenTypes.mRBRACK,GroovyBundle.message("rbrack.expected"));
    marker.done(ANNOTATION_ARRAY_INITIALIZER);
    return true;
  }
  return ConditionalExpression.parse(builder,parser) && !ParserUtils.getToken(builder,GroovyTokenTypes.mASSIGN);
}
