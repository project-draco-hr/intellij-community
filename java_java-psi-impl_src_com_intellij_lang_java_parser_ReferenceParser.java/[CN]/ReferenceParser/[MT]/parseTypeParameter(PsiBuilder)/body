{
  final PsiBuilder.Marker param=builder.mark();
  myParser.getDeclarationParser().parseAnnotations(builder);
  if (EXPERIMENTAL_FEATURES && "any".equals(builder.getTokenText()) && getLanguageLevel(builder).isAtLeast(LanguageLevel.JDK_1_9)) {
    PsiBuilder.Marker mark=builder.mark();
    builder.advanceLexer();
    mark.done(JavaElementType.DUMMY_ELEMENT);
  }
  final boolean wild=expect(builder,JavaTokenType.QUEST);
  if (!wild && !expect(builder,JavaTokenType.IDENTIFIER)) {
    param.rollbackTo();
    return null;
  }
  parseReferenceList(builder,JavaTokenType.EXTENDS_KEYWORD,JavaElementType.EXTENDS_BOUND_LIST,JavaTokenType.AND);
  if (!wild) {
    param.done(JavaElementType.TYPE_PARAMETER);
  }
 else {
    param.error(JavaErrorMessages.message("wildcard.not.expected"));
  }
  return param;
}
