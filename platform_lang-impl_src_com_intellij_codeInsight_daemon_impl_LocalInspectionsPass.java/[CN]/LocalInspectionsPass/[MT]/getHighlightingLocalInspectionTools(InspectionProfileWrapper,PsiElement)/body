{
  List<LocalInspectionToolWrapper> enabled=new ArrayList<LocalInspectionToolWrapper>();
  final InspectionToolWrapper[] toolWrappers=profile.getInspectionTools(element);
  InspectionProfileWrapper.checkInspectionsDuplicates(toolWrappers);
  Language language=myFile.getLanguage();
  for (  InspectionToolWrapper toolWrapper : toolWrappers) {
    if (!profile.isToolEnabled(HighlightDisplayKey.find(toolWrapper.getShortName()),element))     continue;
    LocalInspectionToolWrapper wrapper=null;
    if (toolWrapper instanceof LocalInspectionToolWrapper) {
      wrapper=(LocalInspectionToolWrapper)toolWrapper;
    }
 else     if (toolWrapper instanceof GlobalInspectionToolWrapper) {
      final GlobalInspectionToolWrapper globalInspectionToolWrapper=(GlobalInspectionToolWrapper)toolWrapper;
      wrapper=globalInspectionToolWrapper.getSharedLocalInspectionToolWrapper();
    }
    if (wrapper == null)     continue;
    if (myIgnoreSuppressed) {
      if (wrapper.isApplicable(language) && SuppressionUtil.inspectionResultSuppressed(myFile,wrapper.getTool())) {
        continue;
      }
    }
    enabled.add(wrapper);
  }
  return enabled;
}
