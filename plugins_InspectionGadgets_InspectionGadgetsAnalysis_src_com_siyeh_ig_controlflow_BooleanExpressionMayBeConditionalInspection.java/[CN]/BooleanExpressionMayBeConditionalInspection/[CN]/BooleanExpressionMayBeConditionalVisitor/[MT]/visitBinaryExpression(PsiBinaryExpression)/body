{
  super.visitBinaryExpression(expression);
  final IElementType tokenType=expression.getOperationTokenType();
  if (!JavaTokenType.OROR.equals(tokenType)) {
    return;
  }
  final PsiExpression lhs=ParenthesesUtils.stripParentheses(expression.getLOperand());
  final PsiExpression rhs=ParenthesesUtils.stripParentheses(expression.getROperand());
  if (!(lhs instanceof PsiBinaryExpression) || !(rhs instanceof PsiBinaryExpression)) {
    return;
  }
  final PsiBinaryExpression lBinaryExpression=(PsiBinaryExpression)lhs;
  final PsiBinaryExpression rBinaryExpression=(PsiBinaryExpression)rhs;
  final IElementType lTokenType=lBinaryExpression.getOperationTokenType();
  final IElementType rTokenType=rBinaryExpression.getOperationTokenType();
  if (!JavaTokenType.ANDAND.equals(lTokenType) || !JavaTokenType.ANDAND.equals(rTokenType)) {
    return;
  }
  final PsiExpression expression1=ParenthesesUtils.stripParentheses(lBinaryExpression.getLOperand());
  final PsiExpression expression2=ParenthesesUtils.stripParentheses(rBinaryExpression.getLOperand());
  if (expression1 == null || expression2 == null || ParenthesesUtils.stripParentheses(lBinaryExpression.getROperand()) == null || ParenthesesUtils.stripParentheses(rBinaryExpression.getROperand()) == null) {
    return;
  }
  if (EquivalenceChecker.expressionsAreEquivalent(BoolUtils.getNegated(expression1),expression2) && !SideEffectChecker.mayHaveSideEffects(expression2)) {
    registerError(expression);
  }
 else   if (EquivalenceChecker.expressionsAreEquivalent(expression1,BoolUtils.getNegated(expression2)) && !SideEffectChecker.mayHaveSideEffects(expression1)) {
    registerError(expression);
  }
}
