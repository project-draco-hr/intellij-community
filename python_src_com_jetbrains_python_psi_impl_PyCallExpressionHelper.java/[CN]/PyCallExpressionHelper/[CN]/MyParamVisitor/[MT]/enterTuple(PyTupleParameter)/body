{
  PyExpression arg=null;
  if (myArgIterator.hasNext())   arg=myArgIterator.next();
  PyExpression[] elements=null;
  if (arg instanceof PyParenthesizedExpression) {
    PyExpression inner_expr=((PyParenthesizedExpression)arg).getContainedExpression();
    if (inner_expr instanceof PyTupleExpression)     elements=((PyTupleExpression)inner_expr).getElements();
  }
 else   if (arg instanceof PyListLiteralExpression) {
    elements=((PyListLiteralExpression)arg).getElements();
  }
  final PyParameter[] nested_params=param.getContents();
  if (elements != null) {
    MyParamVisitor visitor=new MyParamVisitor(Arrays.asList(elements).iterator(),myResult);
    for (    PyParameter nested : nested_params)     nested.accept(visitor);
    myUnmatchedSubargs.addAll(visitor.getUnmatchedSubargs());
  }
 else {
    final List<PyNamedParameter> nested_mapped=new ArrayList<PyNamedParameter>(nested_params.length);
    ParamHelper.walkDownParamArray(nested_params,new ParamHelper.ParamVisitor(){
      @Override public void visitNamedParameter(      PyNamedParameter param,      boolean first,      boolean last){
        nested_mapped.add(param);
      }
    }
);
    myResult.my_nested_mapped_params.put(arg,nested_mapped);
  }
}
