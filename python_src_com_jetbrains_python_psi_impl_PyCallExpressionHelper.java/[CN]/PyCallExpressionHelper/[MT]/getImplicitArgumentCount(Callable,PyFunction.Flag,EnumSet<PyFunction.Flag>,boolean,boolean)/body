{
  int implicit_offset=0;
  if (isByInstance)   implicit_offset+=1;
  PyFunction method=callable.asMethod();
  if (method == null)   return implicit_offset;
  if (wrappedFlag != null) {
    if (flags != null) {
      flags.add(wrappedFlag);
      flags.add(PyFunction.Flag.WRAPPED);
    }
    if (wrappedFlag == PyFunction.Flag.STATICMETHOD && implicit_offset > 0) {
      implicit_offset-=1;
    }
    if (wrappedFlag == PyFunction.Flag.CLASSMETHOD && !isByInstance) {
      implicit_offset+=1;
    }
  }
  if (!isByInstance && PyNames.NEW.equals(method.getName()))   implicit_offset+=1;
  if (!isByInstance && !isByClass && PyNames.INIT.equals(method.getName())) {
    implicit_offset++;
  }
  final String deconame=PyUtil.getClassOrStaticMethodDecorator(method);
  if (PyNames.STATICMETHOD.equals(deconame)) {
    if (flags != null) {
      flags.add(PyFunction.Flag.STATICMETHOD);
    }
    if (isByInstance && implicit_offset > 0)     implicit_offset-=1;
  }
 else   if (PyNames.CLASSMETHOD.equals(deconame)) {
    if (flags != null) {
      flags.add(PyFunction.Flag.CLASSMETHOD);
    }
    if (!isByInstance)     implicit_offset+=1;
  }
  return implicit_offset;
}
