{
  if (typeContext == null)   typeContext=TypeEvalContext.fast();
  final PyDecorator decorator=PsiTreeUtil.getParentOfType(callReference,PyDecorator.class);
  if (decorator != null && PsiTreeUtil.isAncestor(decorator.getCallee(),callReference,false)) {
    return 1;
  }
  QualifiedResolveResult followed=callReference.followAssignmentsChain(typeContext);
  boolean isByInstance=isQualifiedByInstance(functionBeingCalled,followed.getQualifiers(),typeContext);
  boolean isByClass=isQualifiedByInstance(functionBeingCalled,followed.getQualifiers(),typeContext);
  return getImplicitArgumentCount(functionBeingCalled,null,null,isByInstance,isByClass);
}
