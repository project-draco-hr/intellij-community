{
  final Collection<PyType> callResultTypes=new HashSet<>();
  for (  final PyType memberType : type.getMembers()) {
    final Boolean callable=PyTypeChecker.isCallable(memberType);
    if (!((callable != null && callable && memberType instanceof PyCallableType))) {
      continue;
    }
    final PyCallableType callableMemberType=(PyCallableType)memberType;
    if (!callableMemberType.isCallable()) {
      continue;
    }
    final PyType callResultType=callableMemberType.getCallType(context,call);
    if (callResultType != null) {
      callResultTypes.add(callResultType);
    }
  }
  return PyUnionType.union(callResultTypes);
}
