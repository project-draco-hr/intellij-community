{
  final AnalysisResultImpl ret=new AnalysisResultImpl(call.getArgumentList());
  PyExpression[] arguments=call.getArguments();
  final String name=call.getCallee().getName();
  if (name != null) {
    PyFile builtins=PyBuiltinCache.getInstance(call).getBuiltinsFile();
    if (builtins != null) {
      int arg_offset=0;
      EnumSet<PyFunction.Flag> flags=EnumSet.noneOf(PyFunction.Flag.class);
      PyFunction func=builtins.findTopLevelFunction(name);
      if (func == null) {
        PyClass cls=builtins.findTopLevelClass(name);
        if (cls != null) {
          func=cls.findInitOrNew(true);
          arg_offset=1;
        }
      }
      if (func != null) {
        if (PyNames.NEW.equals(func.getName()))         flags.add(PyFunction.Flag.CLASSMETHOD);
        ret.mapArguments(arguments,new PyCallExpression.PyMarkedCallee(func,flags,arg_offset,false));
        return ret;
      }
    }
  }
  return null;
}
