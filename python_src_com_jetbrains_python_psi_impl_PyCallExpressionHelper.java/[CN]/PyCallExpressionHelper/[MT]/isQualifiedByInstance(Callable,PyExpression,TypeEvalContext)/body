{
  PyFunction method=resolved.asMethod();
  if (method != null) {
    if (lastQualifier == null)     return true;
    PyType qtype=context.getType(lastQualifier);
    if (qtype != null) {
      if (qtype instanceof PyClassType) {
        if (!((PyClassType)qtype).isDefinition()) {
          return false;
        }
        PyClass resolvedParent=PsiTreeUtil.getParentOfType(resolved,PyClass.class);
        if (resolvedParent != null) {
          final PyClass qualifierClass=((PyClassType)qtype).getPyClass();
          if (qualifierClass != null && (qualifierClass.isSubclass(resolvedParent) || resolvedParent.isSubclass(qualifierClass))) {
            return false;
          }
        }
      }
    }
    return true;
  }
  return false;
}
