{
  AbstractCreateVirtualEnvDialog.VirtualEnvCallback callback=getVEnvCallback();
  final CreateVirtualEnvDialog dialog;
  final List<Sdk> allSdks=Lists.newArrayList(myExistingSdks);
  Iterables.removeIf(allSdks,new Predicate<Sdk>(){
    @Override public boolean apply(    Sdk sdk){
      return !(sdk.getSdkType() instanceof PythonSdkType);
    }
  }
);
  final List<PythonSdkFlavor> flavors=PythonSdkFlavor.getApplicableFlavors(false);
  for (  PythonSdkFlavor flavor : flavors) {
    final Collection<String> strings=flavor.suggestHomePaths();
    for (    String string : SdkConfigurationUtil.filterExistingPaths(PythonSdkType.getInstance(),strings,myExistingSdks)) {
      allSdks.add(new PyDetectedSdk(string));
    }
  }
  if (myProject != null) {
    dialog=new CreateVirtualEnvDialog(myProject,allSdks);
  }
 else {
    dialog=new CreateVirtualEnvDialog(myOwnerComponent,allSdks);
  }
  if (dialog.showAndGet()) {
    dialog.createVirtualEnv(callback);
  }
}
