{
  runPythonTest(new PyDebuggerTask("/debug","test_stepping_filter.py"){
    @Override protected boolean shouldAddDataPathToContentRoots(){
      return true;
    }
    @Override public void before() throws Exception {
      toggleBreakpoint(getScriptPath(),4);
      List<PySteppingFilter> filters=new ArrayList<>();
      filters.add(new PySteppingFilter(true,"*/test_m?_code.py"));
      final PyDebuggerSettings debuggerSettings=PyDebuggerSettings.getInstance();
      debuggerSettings.setLibrariesFilterEnabled(true);
      debuggerSettings.setSteppingFiltersEnabled(true);
      debuggerSettings.setSteppingFilters(filters);
    }
    @Override public void doFinally(){
      final PyDebuggerSettings debuggerSettings=PyDebuggerSettings.getInstance();
      debuggerSettings.setLibrariesFilterEnabled(false);
      debuggerSettings.setSteppingFiltersEnabled(false);
    }
    @Override public void testing() throws Exception {
      waitForPause();
      stepInto();
      waitForPause();
      eval("stopped_in_user_file").hasValue("True");
      stepInto();
      waitForPause();
      eval("stopped_in_user_file").hasValue("True");
    }
  }
);
}
