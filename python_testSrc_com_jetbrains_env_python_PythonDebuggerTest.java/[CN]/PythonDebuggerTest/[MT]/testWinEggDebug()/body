{
  if (UsefulTestCase.IS_UNDER_TEAMCITY && !SystemInfo.isWindows) {
    return;
  }
  runPythonTest(new PyDebuggerTask("/debug","test_winegg.py"){
    @Override public void before() throws Exception {
      String egg=getFilePath("wintestegg-0.1.egg");
      toggleBreakpointInEgg(egg,"eggxample/lower_case.py",2);
      toggleBreakpointInEgg(egg,"eggxample/MIXED_case.py",2);
      PythonSdkFlavor flavor=PythonSdkFlavor.getFlavor(getRunConfiguration().getSdkHome());
      if (flavor != null) {
        flavor.initPythonPath(Lists.newArrayList(egg),getRunConfiguration().getEnvs());
      }
 else {
        getRunConfiguration().getEnvs().put("PYTHONPATH",egg);
      }
    }
    @Override public void testing() throws Exception {
      waitForPause();
      eval("ret").hasValue("16");
      resume();
      waitForPause();
      eval("ret").hasValue("17");
      resume();
    }
    @NotNull @Override public Set<String> getTags(){
      return ImmutableSet.of("-jython");
    }
  }
);
}
