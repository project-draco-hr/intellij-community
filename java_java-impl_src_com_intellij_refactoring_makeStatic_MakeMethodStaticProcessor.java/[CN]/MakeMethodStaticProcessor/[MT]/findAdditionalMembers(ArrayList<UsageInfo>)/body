{
  if (!toMakeStatic.isEmpty()) {
    myAdditionalMethods=new ArrayList<PsiMethod>();
    if (ApplicationManager.getApplication().isUnitTestMode()) {
      for (      UsageInfo usageInfo : toMakeStatic) {
        myAdditionalMethods.add((PsiMethod)usageInfo.getElement());
      }
    }
 else {
      final JavaCallerChooser chooser=new MakeStaticJavaCallerChooser(myMember,myProject,new Consumer<Set<PsiMethod>>(){
        @Override public void consume(        Set<PsiMethod> methods){
          myAdditionalMethods.addAll(methods);
        }
      }
){
        @Override protected ArrayList<UsageInfo> getTopLevelItems(){
          return toMakeStatic;
        }
      }
;
      TreeUtil.expand(chooser.getTree(),2);
      if (!chooser.showAndGet()) {
        return false;
      }
    }
  }
  return true;
}
