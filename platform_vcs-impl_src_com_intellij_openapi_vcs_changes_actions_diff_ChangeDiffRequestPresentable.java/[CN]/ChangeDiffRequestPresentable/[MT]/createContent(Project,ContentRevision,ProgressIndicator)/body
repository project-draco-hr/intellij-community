{
  indicator.checkCanceled();
  if (revision == null)   return DiffContentFactory.createEmpty();
  if (revision instanceof CurrentContentRevision) {
    VirtualFile vFile=((CurrentContentRevision)revision).getVirtualFile();
    if (vFile == null)     throw new DiffRequestPresentableException("Can't get current revision content");
    return DiffContentFactory.create(project,vFile);
  }
  FilePath filePath=revision.getFile();
  if (revision instanceof BinaryContentRevision) {
    byte[] content=((BinaryContentRevision)revision).getBinaryContent();
    if (content == null) {
      throw new DiffRequestPresentableException("Can't get binary revision content");
    }
    return DiffContentFactory.createBinary(project,filePath.getName(),filePath.getPath(),content);
  }
  String revisionContent=revision.getContent();
  if (revisionContent == null)   throw new IOException("Can't get revision content");
  return FileAwareDocumentContent.create(project,revisionContent,filePath);
}
