{
  return new DataIndexer<String,Set<String>,ClassReader>(){
    @NotNull @Override public Map<String,Set<String>> map(    final ClassReader inputData){
      final Map<String,Set<String>> map=new HashMap<String,Set<String>>();
      inputData.accept(new ClassVisitor(Opcodes.ASM4){
        @Override public void visit(        final int version,        final int access,        final String name,        final String signature,        final String superName,        final String[] interfaces){
          final String className=Type.getObjectType(name).getClassName();
          if (className != null) {
            final HashSet<String> value=ContainerUtil.newHashSet(AsmUtil.getQualifiedClassNames(interfaces,superName));
            value.remove(CommonClassNames.JAVA_LANG_OBJECT);
            map.put(className,value);
          }
        }
      }
,Opcodes.ASM4);
      return map;
    }
  }
;
}
