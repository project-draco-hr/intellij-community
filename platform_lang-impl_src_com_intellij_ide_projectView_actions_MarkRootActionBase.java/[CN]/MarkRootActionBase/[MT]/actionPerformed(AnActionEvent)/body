{
  VirtualFile[] files=e.getData(CommonDataKeys.VIRTUAL_FILE_ARRAY);
  final Module module=getModule(e,files);
  if (module == null) {
    return;
  }
  final ModifiableRootModel model=ModuleRootManager.getInstance(module).getModifiableModel();
  for (  VirtualFile file : files) {
    ContentEntry entry=findContentEntry(model,file);
    if (entry != null) {
      final SourceFolder[] sourceFolders=entry.getSourceFolders();
      for (      SourceFolder sourceFolder : sourceFolders) {
        if (Comparing.equal(sourceFolder.getFile(),file)) {
          entry.removeSourceFolder(sourceFolder);
          break;
        }
      }
      modifyRoots(file,entry);
    }
  }
  DumbService.allowStartingDumbModeInside(DumbModePermission.MAY_START_BACKGROUND,new Runnable(){
    @Override public void run(){
      ApplicationManager.getApplication().runWriteAction(new Runnable(){
        @Override public void run(){
          model.commit();
          module.getProject().save();
        }
      }
);
    }
  }
);
}
