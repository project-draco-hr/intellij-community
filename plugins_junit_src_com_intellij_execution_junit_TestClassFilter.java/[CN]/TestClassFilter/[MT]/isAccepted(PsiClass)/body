{
  return ApplicationManager.getApplication().runReadAction(new Computable<Boolean>(){
    @Override public Boolean compute(){
      if (aClass.getQualifiedName() != null && (aClass.isInheritor(myBase,true) && ConfigurationUtil.PUBLIC_INSTANTIATABLE_CLASS.value(aClass) || JUnitUtil.isTestClass(aClass))) {
        final CompilerConfiguration compilerConfiguration=CompilerConfiguration.getInstance(getProject());
        final VirtualFile virtualFile=PsiUtilCore.getVirtualFile(aClass);
        if (virtualFile == null)         return false;
        return !compilerConfiguration.isExcludedFromCompilation(virtualFile) && !ProjectRootManager.getInstance(myProject).getFileIndex().isUnderSourceRootOfType(virtualFile,JavaModuleSourceRootTypes.RESOURCES);
      }
      return false;
    }
  }
);
}
