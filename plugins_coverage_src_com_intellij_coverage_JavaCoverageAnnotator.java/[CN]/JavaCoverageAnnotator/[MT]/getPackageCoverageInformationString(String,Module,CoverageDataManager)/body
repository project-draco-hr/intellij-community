{
  final boolean subCoverageActive=coverageDataManager.isSubCoverageActive();
  PackageAnnotator.PackageCoverageInfo info;
  if (module != null) {
    final Pair<String,Module> p=new Pair<String,Module>(packageFQName,module);
    info=myDirCoverageInfos.get(p);
    final PackageAnnotator.PackageCoverageInfo testInfo=myTestDirCoverageInfos.get(p);
    if (testInfo != null) {
      if (info == null) {
        return getCoverageInformationString(testInfo,subCoverageActive);
      }
 else {
        final PackageAnnotator.PackageCoverageInfo coverageInfo=new PackageAnnotator.PackageCoverageInfo();
        coverageInfo.totalClassCount=info.totalClassCount + testInfo.totalClassCount;
        coverageInfo.coveredClassCount=info.coveredClassCount + testInfo.coveredClassCount;
        coverageInfo.totalLineCount=info.totalLineCount + testInfo.totalLineCount;
        coverageInfo.coveredLineCount=info.coveredLineCount + testInfo.coveredLineCount;
        return getCoverageInformationString(coverageInfo,subCoverageActive);
      }
    }
  }
 else {
    info=myPackageCoverageInfos.get(packageFQName);
  }
  return getCoverageInformationString(info,subCoverageActive);
}
