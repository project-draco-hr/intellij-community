{
  final List<Step> steps=new ArrayList<Step>();
  if (!(element.getParent() instanceof JsonObject) && !isName) {
    steps.add(new Step(StateType._value,null));
  }
  PsiElement current=element;
  while (!(current instanceof PsiFile)) {
    final PsiElement position=current;
    current=current.getParent();
    if (current instanceof JsonArray) {
      JsonArray array=(JsonArray)current;
      final List<JsonValue> list=array.getValueList();
      int idx=-1;
      for (int i=0; i < list.size(); i++) {
        final JsonValue value=list.get(i);
        if (value.equals(position)) {
          idx=i;
          break;
        }
      }
      steps.add(new Step(StateType._array,new ArrayTransition(idx)));
    }
 else     if (current instanceof JsonProperty) {
      final String propertyName=((JsonProperty)current).getName();
      current=current.getParent();
      if (!(current instanceof JsonObject))       return null;
      steps.add(new Step(StateType._object,new PropertyTransition(propertyName)));
    }
 else     if (current instanceof PsiFile) {
      break;
    }
 else {
      return null;
    }
  }
  Collections.reverse(steps);
  return steps;
}
