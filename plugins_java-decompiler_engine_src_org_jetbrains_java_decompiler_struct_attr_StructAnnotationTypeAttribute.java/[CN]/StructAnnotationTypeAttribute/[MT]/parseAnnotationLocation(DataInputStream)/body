{
  AnnotationLocation ann_location=new AnnotationLocation();
  ann_location.target_type=data.readUnsignedByte();
switch (ann_location.target_type) {
case ANNOTATION_TARGET_TYPE_GENERIC_CLASS:
case ANNOTATION_TARGET_TYPE_GENERIC_METHOD:
    ann_location.target_union=ANNOTATION_TARGET_UNION_TYPE_PARAMETER;
  break;
case ANNOTATION_TARGET_TYPE_EXTENDS_IMPLEMENTS:
ann_location.target_union=ANNOTATION_TARGET_UNION_SUPERTYPE;
break;
case ANNOTATION_TARGET_TYPE_GENERIC_CLASS_BOUND:
case ANNOTATION_TARGET_TYPE_GENERIC_METHOD_BOUND:
ann_location.target_union=ANNOTATION_TARGET_UNION_TYPE_PARAMETER_BOUND;
break;
case ANNOTATION_TARGET_TYPE_FIELD:
case ANNOTATION_TARGET_TYPE_RETURN:
case ANNOTATION_TARGET_TYPE_RECEIVER:
ann_location.target_union=ANNOTATION_TARGET_UNION_EMPTY;
break;
case ANNOTATION_TARGET_TYPE_FORMAL:
ann_location.target_union=ANNOTATION_TARGET_UNION_FORMAL_PARAMETER;
break;
case ANNOTATION_TARGET_TYPE_THROWS:
ann_location.target_union=ANNOTATION_TARGET_UNION_THROWS;
break;
case ANNOTATION_TARGET_TYPE_LOCAL_VARIABLE:
case ANNOTATION_TARGET_TYPE_RESOURCE_VARIABLE:
ann_location.target_union=ANNOTATION_TARGET_UNION_LOCALVAR;
break;
case ANNOTATION_TARGET_TYPE_EXCEPTION:
ann_location.target_union=ANNOTATION_TARGET_UNION_CATCH;
break;
case ANNOTATION_TARGET_TYPE_INSTANCEOF:
case ANNOTATION_TARGET_TYPE_NEW:
case ANNOTATION_TARGET_TYPE_DOUBLECOLON_NEW:
case ANNOTATION_TARGET_TYPE_DOUBLECOLON_ID:
ann_location.target_union=ANNOTATION_TARGET_UNION_OFFSET;
break;
case ANNOTATION_TARGET_TYPE_CAST:
case ANNOTATION_TARGET_TYPE_INVOKATION_CONSTRUCTOR:
case ANNOTATION_TARGET_TYPE_INVOKATION_METHOD:
case ANNOTATION_TARGET_TYPE_GENERIC_DOUBLECOLON_NEW:
case ANNOTATION_TARGET_TYPE_GENERIC_DOUBLECOLON_ID:
ann_location.target_union=ANNOTATION_TARGET_UNION_TYPE_ARGUMENT;
break;
default :
throw new RuntimeException("Unknown target type in a type annotation!");
}
switch (ann_location.target_union) {
case ANNOTATION_TARGET_UNION_TYPE_PARAMETER:
case ANNOTATION_TARGET_UNION_FORMAL_PARAMETER:
ann_location.data=new int[]{data.readUnsignedByte()};
break;
case ANNOTATION_TARGET_UNION_SUPERTYPE:
case ANNOTATION_TARGET_UNION_THROWS:
case ANNOTATION_TARGET_UNION_CATCH:
case ANNOTATION_TARGET_UNION_OFFSET:
ann_location.data=new int[]{data.readUnsignedShort()};
break;
case ANNOTATION_TARGET_UNION_TYPE_PARAMETER_BOUND:
ann_location.data=new int[]{data.readUnsignedByte(),data.readUnsignedByte()};
break;
case ANNOTATION_TARGET_UNION_EMPTY:
break;
case ANNOTATION_TARGET_UNION_LOCALVAR:
int table_length=data.readUnsignedShort();
ann_location.data=new int[table_length * 3 + 1];
ann_location.data[0]=table_length;
for (int i=0; i < table_length; ++i) {
ann_location.data[3 * i + 1]=data.readUnsignedShort();
ann_location.data[3 * i + 2]=data.readUnsignedShort();
ann_location.data[3 * i + 3]=data.readUnsignedShort();
}
break;
case ANNOTATION_TARGET_UNION_TYPE_ARGUMENT:
ann_location.data=new int[]{data.readUnsignedShort(),data.readUnsignedByte()};
}
int path_length=data.readUnsignedByte();
ann_location.target_path_kind=new int[path_length];
ann_location.target_argument_index=new int[path_length];
for (int i=0; i < path_length; ++i) {
ann_location.target_path_kind[i]=data.readUnsignedByte();
ann_location.target_argument_index[i]=data.readUnsignedByte();
}
return ann_location;
}
