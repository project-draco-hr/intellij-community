{
  if (!(file instanceof PyFile)) {
    return false;
  }
  PsiElement element=file.findElementAt(editor.getCaretModel().getOffset());
  PyBinaryExpression binaryExpression=PsiTreeUtil.getParentOfType(element,PyBinaryExpression.class,false);
  while (binaryExpression != null) {
    PyElementType operator=binaryExpression.getOperator();
    if (FLIPPED_OPERATORS.containsKey(operator)) {
      String operatorText=binaryExpression.getPsiOperator().getText();
      String flippedOperatorText=FLIPPED_OPERATORS.get(operator);
      if (flippedOperatorText.equals(operatorText)) {
        setText(PyBundle.message("INTN.flip.$0",operatorText));
      }
 else {
        setText(PyBundle.message("INTN.flip.$0.to.$1",operatorText,flippedOperatorText));
      }
      return true;
    }
    binaryExpression=PsiTreeUtil.getParentOfType(binaryExpression,PyBinaryExpression.class);
  }
  return false;
}
