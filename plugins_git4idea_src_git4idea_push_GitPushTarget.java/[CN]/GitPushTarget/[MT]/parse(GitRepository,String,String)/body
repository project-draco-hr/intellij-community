{
  if (remoteName == null) {
    throw new ParseException("No remotes defined",-1);
  }
  if (!GitRefNameValidator.getInstance().checkInput(branchName)) {
    throw new ParseException("Invalid destination branch name: " + branchName,-1);
  }
  GitRemote remote=findRemote(repository.getRemotes(),remoteName);
  if (remote == null) {
    LOG.error("Remote [" + remoteName + "] is not found among "+ repository.getRemotes());
    throw new ParseException("Invalid remote: " + remoteName,-1);
  }
  GitRemoteBranch existingRemoteBranch=findRemoteBranch(repository,remote,branchName);
  if (existingRemoteBranch != null) {
    return new GitPushTarget(existingRemoteBranch,false);
  }
  GitRemoteBranch rb=new GitStandardRemoteBranch(remote,branchName);
  return new GitPushTarget(rb,true);
}
