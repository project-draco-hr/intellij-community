{
  if (type instanceof PyClassLikeType && type instanceof PyCollectionType) {
    final String classQName=((PyClassLikeType)type).getClassQName();
    final PyCollectionType collectionType=(PyCollectionType)type;
    if (PyNames.FAKE_GENERATOR.equals(classQName)) {
      return ContainerUtil.getOrElse(collectionType.getElementTypes(context),2,null);
    }
 else     if (PyNames.FAKE_COROUTINE.equals(classQName) || type instanceof PyClassType && PyNames.AWAITABLE.equals(((PyClassType)type).getPyClass().getName())) {
      return collectionType.getIteratedItemType();
    }
  }
 else   if (type instanceof PyUnionType) {
    final List<PyType> memberReturnTypes=new ArrayList<>();
    final PyUnionType unionType=(PyUnionType)type;
    for (    PyType member : unionType.getMembers()) {
      memberReturnTypes.add(getGeneratorReturnType(member,context));
    }
    return PyUnionType.union(memberReturnTypes);
  }
  return null;
}
