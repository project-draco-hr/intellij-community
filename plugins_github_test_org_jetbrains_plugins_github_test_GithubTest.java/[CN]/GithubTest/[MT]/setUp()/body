{
  final String host=System.getenv("idea.test.github.host");
  final String login1=System.getenv("idea.test.github.login1");
  final String login2=System.getenv("idea.test.github.login2");
  final String password=System.getenv("idea.test.github.password1");
  assumeNotNull(host);
  assumeNotNull(login1);
  assumeNotNull(password);
  super.setUp();
  try {
    myProjectFixture=IdeaTestFixtureFactory.getFixtureFactory().createFixtureBuilder(getTestName(true)).getFixture();
    myProjectFixture.setUp();
  }
 catch (  Exception e) {
    super.tearDown();
    throw e;
  }
  myProject=myProjectFixture.getProject();
  myProjectRoot=myProject.getBaseDir();
  myGitSettings=GitVcsSettings.getInstance(myProject);
  myGitSettings.getAppSettings().setPathToGit(GitExecutor.GIT_EXECUTABLE);
  myHost=host;
  myLogin1=login1;
  myLogin2=login2;
  myPassword=password;
  myAuth=GithubAuthData.createBasicAuth(host,login1,password);
  myGitHubSettings=GithubSettings.getInstance();
  myGitHubSettings.setAuthData(myAuth,false);
  myDialogManager=(TestDialogManager)ServiceManager.getService(DialogManager.class);
  myNotificator=(TestNotificator)ServiceManager.getService(myProject,Notificator.class);
  myHttpAuthService=(GitHttpAuthTestService)ServiceManager.getService(GitHttpAuthService.class);
  myGitRepositoryManager=GitUtil.getRepositoryManager(myProject);
  try {
    beforeTest();
  }
 catch (  Exception e) {
    try {
      tearDown();
    }
 catch (    Exception e2) {
      e2.printStackTrace();
    }
    throw e;
  }
}
