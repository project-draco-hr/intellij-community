{
  myList.removeAll();
  myList.setModel(JBList.createDefaultListModel(myOptions));
  if (myRenderer != null) {
    myList.setCellRenderer(myRenderer);
  }
  final JBPopup popup=JBPopupFactory.getInstance().createListPopupBuilder(myList).setItemChoosenCallback(new Runnable(){
    @Override public void run(){
      final ActionEvent event=new ActionEvent(myList,ActionEvent.ACTION_PERFORMED,"elementChosen");
      for (      ActionListener listener : myListeners) {
        listener.actionPerformed(event);
      }
      myValue=myList.getSelectedValue();
      TableUtil.stopEditing(myTable);
      myTable.setValueAt(myValue,myRow,myColumn);
      myTable.tableChanged(new TableModelEvent(myTable.getModel(),myRow));
    }
  }
).setCancelCallback(new Computable<Boolean>(){
    @Override public Boolean compute(){
      TableUtil.stopEditing(myTable);
      return true;
    }
  }
).createPopup();
  final Rectangle rect=myTable.getCellRect(myRow,myColumn,true);
  Point point=new Point(rect.x,rect.y);
  if (myWide) {
    popup.setMinimumSize(new Dimension(((int)rect.getSize().getWidth()),-1));
  }
  popup.show(new RelativePoint(myTable,point));
}
