{
  showStatusText(DebuggerBundle.message("status.step.into"));
  final SuspendContextImpl suspendContext=getSuspendContext();
  final ThreadReferenceProxyImpl stepThread=getContextThread();
  final RequestHint hint=mySmartStepFilter != null ? new RequestHint(stepThread,suspendContext,mySmartStepFilter) : new RequestHint(stepThread,suspendContext,StepRequest.STEP_INTO);
  if (myForcedIgnoreFilters) {
    try {
      mySession.setIgnoreStepFiltersFlag(stepThread.frameCount());
    }
 catch (    EvaluateException e) {
      LOG.info(e);
    }
  }
  hint.setIgnoreFilters(myForcedIgnoreFilters || mySession.shouldIgnoreSteppingFilters());
  applyThreadFilter(stepThread);
  if (myBreakpoint != null) {
    myBreakpoint.SUSPEND_POLICY=suspendContext.getSuspendPolicy() == EventRequest.SUSPEND_EVENT_THREAD ? DebuggerSettings.SUSPEND_THREAD : DebuggerSettings.SUSPEND_ALL;
    myBreakpoint.createRequest(suspendContext.getDebugProcess());
    myRunToCursorBreakpoint=myBreakpoint;
  }
  doStep(suspendContext,stepThread,StepRequest.STEP_INTO,hint);
  super.contextAction();
}
