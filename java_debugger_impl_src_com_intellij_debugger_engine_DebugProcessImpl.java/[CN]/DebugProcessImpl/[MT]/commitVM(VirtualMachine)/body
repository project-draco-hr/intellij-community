{
  if (!isInInitialState()) {
    LOG.error("State is invalid " + myState.get());
  }
  DebuggerManagerThreadImpl.assertIsManagerThread();
  myPositionManager=createPositionManager();
  LOG.debug("*******************VM attached******************");
  checkVirtualMachineVersion(vm);
  myVirtualMachineProxy=new VirtualMachineProxyImpl(this,vm);
  if (!StringUtil.isEmpty(ourTrace)) {
    int mask=0;
    StringTokenizer tokenizer=new StringTokenizer(ourTrace);
    while (tokenizer.hasMoreTokens()) {
      String token=tokenizer.nextToken();
      if ("SENDS".compareToIgnoreCase(token) == 0) {
        mask|=VirtualMachine.TRACE_SENDS;
      }
 else       if ("RAW_SENDS".compareToIgnoreCase(token) == 0) {
        mask|=0x01000000;
      }
 else       if ("RECEIVES".compareToIgnoreCase(token) == 0) {
        mask|=VirtualMachine.TRACE_RECEIVES;
      }
 else       if ("RAW_RECEIVES".compareToIgnoreCase(token) == 0) {
        mask|=0x02000000;
      }
 else       if ("EVENTS".compareToIgnoreCase(token) == 0) {
        mask|=VirtualMachine.TRACE_EVENTS;
      }
 else       if ("REFTYPES".compareToIgnoreCase(token) == 0) {
        mask|=VirtualMachine.TRACE_REFTYPES;
      }
 else       if ("OBJREFS".compareToIgnoreCase(token) == 0) {
        mask|=VirtualMachine.TRACE_OBJREFS;
      }
 else       if ("ALL".compareToIgnoreCase(token) == 0) {
        mask|=VirtualMachine.TRACE_ALL;
      }
    }
    vm.setDebugTraceMode(mask);
  }
}
