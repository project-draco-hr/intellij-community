{
  final PsiParameter[] parameters=lambdaExpression.getParameterList().getParameters();
  if (parameters.length == 0)   return null;
  final PsiType[] lambdaArgs=PsiType.createArray(parameters.length);
  for (int i=0; i < parameters.length; i++) {
    PsiParameter parameter=parameters[i];
    if (parameter.getTypeElement() == null) {
      return null;
    }
    lambdaArgs[i]=parameter.getType();
  }
  final PsiParameter[] methodParameters=method.getParameterList().getParameters();
  PsiType[] methodParamTypes=PsiType.createArray(methodParameters.length);
  for (int i=0; i < methodParameters.length; i++) {
    methodParamTypes[i]=GenericsUtil.eliminateWildcards(subst.substitute(methodParameters[i].getType()));
  }
  return inferTypeForMethodTypeParameterInner(typeParam,methodParamTypes,lambdaArgs,subst,null,DefaultParameterTypeInferencePolicy.INSTANCE);
}
