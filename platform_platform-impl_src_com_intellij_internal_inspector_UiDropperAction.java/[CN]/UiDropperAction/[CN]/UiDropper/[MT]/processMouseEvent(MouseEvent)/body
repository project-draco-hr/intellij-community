{
  if (!me.isAltDown() || !me.isControlDown()) {
    cleanupHighlighting();
    return;
  }
  if (me instanceof MouseWheelEvent) {
    if (((MouseWheelEvent)me).getWheelRotation() > 0 && lastComponent != null && lastComponent.getParent() != null) {
      lastComponent=lastComponent.getParent();
      highlightCmp(true,lastComponent);
      me.consume();
      return;
    }
  }
  Component component=me.getComponent();
  if (component instanceof HighlightComponent)   return;
  me.consume();
  Point mousePoint=me.getPoint();
  if (component instanceof JFrame) {
    JLayeredPane layeredPane=((JFrame)component).getLayeredPane();
    Point pt=SwingUtilities.convertPoint(component,mousePoint,layeredPane);
    component=layeredPane.findComponentAt(pt);
  }
 else   if (component instanceof Container) {
    component=((Container)component).findComponentAt(mousePoint);
  }
  if (component instanceof HighlightComponent)   return;
 else   if (component == null) {
    component=KeyboardFocusManager.getCurrentKeyboardFocusManager().getFocusOwner();
  }
  if (component != null) {
    if (me.getClickCount() == 1 && me.getID() == MOUSE_CLICKED && me.getButton() == BUTTON1) {
      if (clickAction != null) {
        DataContext dataContext=SimpleDataContext.getSimpleContext("Component",component);
        AnActionEvent event=AnActionEvent.createFromDataContext(UI_DROPPER_PLACE,null,dataContext);
        clickAction.actionPerformed(event);
        return;
      }
    }
    lastComponent=component;
    if (component instanceof JBList) {
      highlightJBListCell(((JBList)component),mousePoint);
      return;
    }
    highlightCmp(true,component);
  }
}
