{
  Timer t=new Timer("log parse");
  Process p=Runtime.getRuntime().exec("git log --all --date-order --format=%h|-%p|-%an|-%ct|-%s");
  BufferedReader r=new BufferedReader(new InputStreamReader(p.getInputStream()));
  CommitsModel list=GitLogParser.parseCommitLog(r);
  t.print();
  Timer t1=new Timer("precalculate");
  if (1 == 1) {
    CommitRowListBuilder builder=new CommitRowListBuilder(list);
    ReadOnlyList<CommitRow> commitRows=builder.build();
    t1.print();
    if (1 == 0) {
      ReadOnlyList<RowOfNode> rows=builder.rowsModel;
      for (      RowOfNode row : rows) {
        for (        Node node : row) {
          System.out.print(toStr(node.getCommit().hash()) + ":" + node.getColorIndex()+ " ");
        }
        System.out.println(row.getLastColorIndex());
      }
    }
    if (1 == 0) {
      ReadOnlyList<HideCommits> hidesCommits=builder.hideModel;
      for (      HideCommits hides : hidesCommits) {
        for (        Commit commit : hides) {
          System.out.print(toStr(commit.hash()) + ":" + commit.getMessage()+ " ");
        }
        System.out.println();
      }
    }
    new GitAlkUI(commitRows,list);
  }
}
