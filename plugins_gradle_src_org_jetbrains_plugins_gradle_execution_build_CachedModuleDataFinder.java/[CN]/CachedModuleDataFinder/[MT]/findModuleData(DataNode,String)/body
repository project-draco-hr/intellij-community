{
  DataNode<ModuleData> node=cache.get(projectPath);
  if (node != null)   return node;
  return (DataNode<ModuleData>)ExternalSystemApiUtil.findFirstRecursively(parentNode,new BooleanFunction<DataNode<?>>(){
    @Override public boolean fun(    DataNode<?> node){
      if ((ProjectKeys.MODULE.equals(node.getKey()) || GradleSourceSetData.KEY.equals(node.getKey())) && node.getData() instanceof ModuleData) {
        String externalProjectPath=((ModuleData)node.getData()).getLinkedExternalProjectPath();
        DataNode<ModuleData> myNode=(DataNode<ModuleData>)node;
        cache.put(externalProjectPath,myNode);
        return StringUtil.equals(projectPath,((ModuleData)node.getData()).getLinkedExternalProjectPath());
      }
      return false;
    }
  }
);
}
