{
  String s1="@MyBean(\"\")\n" + "@MyBean2(\"\")\n" + "public class TestBean {}\n"+ "@MyBean2(\"\")\n"+ "@MyBean(\"\")\n"+ "public class TestBean2 {}\n"+ "public class TestBean3 {}\n";
  String s2="@MyBean(\"\")\n" + "@MyBean2(\"\")\n" + "public class $a$ {}\n";
  assertEquals("Simple find annotated class",2,findMatchesCount(s1,s2,false));
  String s3="@VisualBean(\"????????? ?????????? ? ??\")\n" + "public class TestBean\n" + "{\n"+ "    @VisualBeanField(\n"+ "            name = \"??? ????????????\",\n"+ "            initialValue = \"?????????????\"\n"+ "            )\n"+ "    public String user;\n"+ "\n"+ "    @VisualBeanField(\n"+ "            name = \"??????\",\n"+ "            initialValue = \"\",\n"+ "            fieldType = FieldTypeEnum.PASSWORD_FIELD\n"+ "            )\n"+ "    public String password;\n"+ "\n"+ "    @VisualBeanField(\n"+ "            initialValue = \"User\",\n"+ "            name = \"????? ???????\",\n"+ "            name = \"Second name\",\n"+ "            fieldType = FieldTypeEnum.COMBOBOX_FIELD,\n"+ "            comboValues = {\n"+ "               @ComboFieldValue(\"Administrator\"),\n"+ "               @ComboFieldValue(\"User\"),\n"+ "               @ComboFieldValue(\"Guest\")}\n"+ "            )    \n"+ "    public String accessRights;\n"+ "    \n"+ "    public String otherField;\n"+ "}";
  String s4="class '_a {\n" + "  @'_Annotation+ ( 'AnnotationMember*:name = '_AnnotationValue* )\n" + "  String '_field* ;\n"+ "}";
  String s4_2="class '_a {\n" + "  @'_Annotation+ ()\n" + "  String 'field* ;\n"+ "}";
  assertEquals("Find annotation members of annotated field class",4,findMatchesCount(s3,s4,false));
  assertEquals("Find annotation fields",3,findMatchesCount(s3,s4_2,false));
  String s5="class A {" + "  @NotNull private static Collection<PsiElement> resolveElements(final PsiReference reference, final Project project) {}\n" + "  @NotNull private static Collection resolveElements2(final PsiReference reference, final Project project) {}\n"+ "}";
  String s6="class '_c {@NotNull '_rt 'method* ('_pt* '_p*){ '_inst*; } }";
  String s6_2="class '_c {@'_:NotNull '_rt 'method* ('_pt* '_p*){ '_inst*; } }";
  assertEquals("Find annotated methods",2,findMatchesCount(s5,s6));
  assertEquals("Find annotated methods, 2",2,findMatchesCount(s5,s6_2));
}
