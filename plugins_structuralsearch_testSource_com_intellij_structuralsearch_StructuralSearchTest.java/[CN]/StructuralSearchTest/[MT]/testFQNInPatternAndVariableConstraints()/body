{
  String s1="import java.awt.List;\n" + "class A { List l; }";
  String s1_2="import java.util.List;\n" + "class A { List l; }";
  String s2="class '_ { 'Type:java\\.util\\.List '_Field; }";
  assertEquals("No matches for qualified class",findMatchesCount(s1,s2,true),0);
  assertEquals("Matches for qualified class",findMatchesCount(s1_2,s2,true),1);
  String s3="import java.util.ArrayList;\n" + "class A { ArrayList l; }";
  String s4="class '_ { 'Type:*java\\.util\\.Collection '_Field; }";
  assertEquals("Matches for qualified class in hierarchy",findMatchesCount(s3,s4,true),1);
  String s5="import java.util.List;\n" + "class A { { List l = new List(); l.add(\"1\"); }  }";
  String s5_2="import java.awt.List;\n" + "class A { { List l = new List(); l.add(\"1\"); } }";
  String s6="'a:[exprtype( java\\.util\\.List )]";
  String s6_2="'a:[exprtype( *java\\.util\\.Collection )]";
  String s6_3="java.util.List '_a = '_b?;";
  assertEquals("Matches for qualified expr type",findMatchesCount(s5,s6,true),1);
  assertEquals("No matches for qualified expr type",findMatchesCount(s5_2,s6,true),0);
  assertEquals("Matches for qualified expr type in hierarchy",findMatchesCount(s5,s6_2,true),1);
  assertEquals("Matches for qualified var type in pattern",findMatchesCount(s5,s6_3,true),1);
  assertEquals("No matches for qualified var type in pattern",findMatchesCount(s5_2,s6_3,true),0);
  String s7="import java.util.List;\n" + "class A extends List { }";
  String s7_2="import java.awt.List;\n" + "class A extends List {}";
  String s8="class 'a extends java.util.List {}";
  assertEquals("Matches for qualified type in pattern",findMatchesCount(s7,s8,true),1);
  assertEquals("No matches for qualified type in pattern",findMatchesCount(s7_2,s8,true),0);
  String s9="String.intern(\"1\");\n" + "java.util.Collections.sort(null);" + "java.util.Collections.sort(null);";
  String s10="java.lang.String.'_method ( '_params* )";
  assertEquals("FQN in class name",1,findMatchesCount(s9,s10,false));
}
