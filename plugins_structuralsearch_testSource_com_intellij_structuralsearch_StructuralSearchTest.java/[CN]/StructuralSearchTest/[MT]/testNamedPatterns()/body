{
  String s133="class String1 implements java.io.Serializable { " + "private static final long serialVersionUID = -6849794470754667710L;" + "private static final ObjectStreamField[] serialPersistentFields = new ObjectStreamField[0];"+ "}"+ "class StringBuilder1 implements java.io.Serializable {"+ "    private void writeObject(java.io.ObjectOutputStream s)\n"+ "        throws java.io.IOException {\n"+ "        s.defaultWriteObject();\n"+ "    }"+ "private void readObject(java.io.ObjectInputStream s)\n"+ "        throws java.io.IOException, ClassNotFoundException {\n"+ "        s.defaultReadObject();\n"+ "    }"+ "    static final long serialVersionUID = 4383685877147921099L;"+ "}";
  String s134="class '_ implements '_:*Serializable {\n" + "  static final long 'VersionField?:serialVersionUID = '_?;\n" + "  private static final ObjectStreamField[] '_?:serialPersistentFields = '_?; \n"+ "  private void '_SerializationWriteHandler?:writeObject (ObjectOutputStream s) throws IOException;\n"+ "  private void '_SerializationReadHandler?:readObject (ObjectInputStream s) throws IOException, ClassNotFoundException;\n"+ "  Object '_SpecialSerializationReadHandler?:readResolve () throws ObjectStreamException;"+ "  Object '_SpecialSerializationWriteHandler?:writeReplace () throws ObjectStreamException;"+ "}";
  assertEquals("serialization match",findMatchesCount(s133,s134),2);
  String s135="class SimpleStudentEventActionImpl extends Action { " + "  public ActionForward execute(ActionMapping mapping,\n" + "         ActionForm _form,\n"+ "         HttpServletRequest _request,\n"+ "         HttpServletResponse _response)"+ "  throws Exception {}"+ "} "+ "public class DoEnrollStudent extends SimpleStudentEventActionImpl { }"+ "public class DoCancelStudent extends SimpleStudentEventActionImpl { }";
  String s136="public class 'StrutsActionClass extends '_*:Action {" + "  public ActionForward '_AnActionMethod:*execute (ActionMapping '_,\n" + "                                 ActionForm '_,\n"+ "                                 HttpServletRequest '_,\n"+ "                                 HttpServletResponse '_);"+ "}";
  assertEquals("Struts actions",findMatchesCount(s135,s136),2);
  final String s123="class NodeFilter {} public class MethodFilter extends NodeFilter {\n" + "  private MethodFilter() {}\n" + "\n"+ "  public static NodeFilter getInstance() {\n"+ "    if (instance==null) instance = new MethodFilter();\n"+ "    return instance;\n"+ "  }\n"+ "  private static NodeFilter instance;\n"+ "}";
  final String s124="class 'Class {\n" + "  private 'Class('_* '_*) {\n" + "   '_*;\n"+ "  }\n"+ "  private static '_Class2:* '_Instance;\n"+ "  static '_Class2:* '_GetInstance() {\n"+ "    '_*;\n"+ "    return '_Instance;\n"+ "  }\n"+ "}";
  assertEquals("singleton search",findMatchesCount(s123,s124),1);
  String s1111="if (true) { a=1; b=1; } else { a=1; }\n" + "if(true) { a=1; } else { a=1; b=1; }\n" + "if(true) { a=1; b=2; } else { a = 1; b=2; }";
  String s1112="if (true) { '_a{1,2}; } else { '_a; }";
  assertEquals("same multiple name pattern",findMatchesCount(s1111,s1112),1);
}
