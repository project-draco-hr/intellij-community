{
  boolean isInherited=false;
  if (!isDeclaration) {
    if (isCalledOnThis(elementToHighlight)) {
      final PsiClass containingClass=methodOrClass instanceof PsiMethod ? methodOrClass.getContainingClass() : null;
      PsiClass enclosingClass=containingClass == null ? null : PsiTreeUtil.getParentOfType(elementToHighlight,PsiClass.class);
      while (enclosingClass != null) {
        isInherited=enclosingClass.isInheritor(containingClass,true);
        if (isInherited)         break;
        enclosingClass=PsiTreeUtil.getParentOfType(enclosingClass,PsiClass.class,true);
      }
    }
  }
  LOG.assertTrue(methodOrClass instanceof PsiMethod || !isDeclaration);
  HighlightInfoType type=methodOrClass instanceof PsiMethod ? getMethodNameHighlightType((PsiMethod)methodOrClass,isDeclaration,isInherited) : JavaHighlightInfoTypes.CONSTRUCTOR_CALL;
  if (type != null) {
    TextAttributes attributes=mergeWithScopeAttributes(methodOrClass,type,colorsScheme);
    HighlightInfo.Builder builder=HighlightInfo.newHighlightInfo(type).range(range);
    if (attributes != null) {
      builder.textAttributes(attributes);
    }
    return builder.createUnconditionally();
  }
  return null;
}
