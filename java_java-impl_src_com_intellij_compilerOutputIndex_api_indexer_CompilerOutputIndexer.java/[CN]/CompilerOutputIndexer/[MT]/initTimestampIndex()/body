{
  final File storageFile=IndexInfrastructure.getStorageFile(getFileTimestampsIndexId());
  try {
    myFileTimestampsIndex=IOUtil.openCleanOrResetBroken(new ThrowableComputable<PersistentHashMap<String,Long>,IOException>(){
      @Override public PersistentHashMap<String,Long> compute() throws IOException {
        return new PersistentHashMap<String,Long>(storageFile,new EnumeratorStringDescriptor(),new DataExternalizer<Long>(){
          @Override public void save(          final DataOutput out,          final Long value) throws IOException {
            out.writeLong(value);
          }
          @Override public Long read(          final DataInput in) throws IOException {
            return in.readLong();
          }
        }
);
      }
    }
,new Runnable(){
      public void run(){
        FileUtil.delete(IndexInfrastructure.getIndexRootDir(getFileTimestampsIndexId()));
      }
    }
);
  }
 catch (  IOException ex) {
    throw new RuntimeException("Timestamps index not initialized",ex);
  }
}
