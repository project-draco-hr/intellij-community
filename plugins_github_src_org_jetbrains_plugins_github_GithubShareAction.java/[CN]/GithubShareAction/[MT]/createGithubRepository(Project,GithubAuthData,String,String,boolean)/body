{
  String path="/user/repos";
  String requestBody=prepareRequest(name,description,isPrivate);
  JsonElement result;
  try {
    result=GithubApiUtil.postRequest(auth,path,requestBody);
  }
 catch (  IOException e) {
    GithubNotifications.showError(project,"Creating GitHub Repository",e);
    return null;
  }
  if (result == null) {
    GithubNotifications.showError(project,"Creating GitHub Repository","Failed to create new GitHub repository","result is null");
    return null;
  }
  if (!result.isJsonObject()) {
    GithubNotifications.showError(project,"Creating GitHub Repository","Failed to create new GitHub repository",result.toString());
    return null;
  }
  if (!result.getAsJsonObject().has("html_url")) {
    GithubNotifications.showError(project,"Creating GitHub Repository","Failed to create new GitHub repository",result.toString());
    return null;
  }
  return result.getAsJsonObject().get("html_url").getAsString();
}
