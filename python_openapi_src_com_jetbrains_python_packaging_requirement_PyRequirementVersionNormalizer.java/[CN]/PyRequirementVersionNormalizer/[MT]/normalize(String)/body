{
  final Matcher matcher=VERSION.matcher(version);
  if (matcher.matches()) {
    final StringBuilder sb=new StringBuilder();
    final String epoch=matcher.group(EPOCH_GROUP);
    if (epoch != null) {
      final String normalizedEpoch=normalizeNumber(epoch.substring(0,epoch.length() - 1));
      sb.append(normalizedEpoch).append('!');
    }
    for (    String releasePart : StringUtil.tokenize(matcher.group(RELEASE_GROUP),".")) {
      sb.append(releasePart.equals("*") ? "*" : normalizeNumber(releasePart)).append('.');
    }
    if (sb.charAt(sb.length() - 1) == '.') {
      sb.setLength(sb.length() - 1);
    }
    final String preReleaseType=matcher.group(PRE_RELEASE_TYPE_GROUP);
    if (preReleaseType != null) {
      final String preReleaseNumber=matcher.group(PRE_RELEASE_NUMBER_GROUP);
      final String normalizedPreReleaseNumber=preReleaseNumber == null ? "0" : normalizeNumber(preReleaseNumber);
      sb.append(normalizePreReleaseType(preReleaseType)).append(normalizedPreReleaseNumber);
    }
    final String postReleaseType=matcher.group(POST_RELEASE_TYPE_GROUP);
    if (postReleaseType != null) {
      final String postReleaseNumber=matcher.group(POST_RELEASE_NUMBER_GROUP);
      final String normalizedPostReleaseNumber=postReleaseNumber == null ? "0" : normalizeNumber(postReleaseNumber);
      sb.append(".post").append(normalizeNumber(normalizedPostReleaseNumber));
    }
    final String implicitPostReleaseNumber=matcher.group(IMPLICIT_POST_RELEASE_NUMBER_GROUP);
    if (implicitPostReleaseNumber != null) {
      sb.append(".post").append(normalizeNumber(implicitPostReleaseNumber));
    }
    if (matcher.group(DEV_RELEASE_TYPE_GROUP) != null) {
      final String devReleaseNumber=matcher.group(DEV_RELEASE_NUMBER_GROUP);
      final String normalizedDevReleaseNumber=devReleaseNumber == null ? "0" : normalizeNumber(devReleaseNumber);
      sb.append(".dev").append(normalizedDevReleaseNumber);
    }
    final String localVersion=matcher.group(LOCAL_VERSION_GROUP);
    if (localVersion != null) {
      sb.append(normalizeLocalVersion(localVersion));
    }
    return sb.toString();
  }
  return null;
}
