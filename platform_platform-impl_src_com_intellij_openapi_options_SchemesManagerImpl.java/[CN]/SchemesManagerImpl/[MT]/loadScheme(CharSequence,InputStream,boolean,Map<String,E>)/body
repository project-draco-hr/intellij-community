{
  try {
    Element element=JDOMUtil.load(input);
    E scheme;
    if (myProcessor instanceof BaseSchemeProcessor) {
      scheme=((BaseSchemeProcessor<E>)myProcessor).readScheme(element,duringLoad);
    }
 else {
      scheme=myProcessor.readScheme(new Document((Element)element.detach()));
    }
    if (scheme == null) {
      return null;
    }
    String fileNameWithoutExtension=createFileName(name);
    if (duringLoad) {
      if (myFilesToDelete.contains(fileNameWithoutExtension)) {
        return null;
      }
      if (result == null ? findSchemeByName(scheme.getName()) != null : result.containsKey(scheme.getName())) {
        LOG.warn("Scheme file " + name + " is ignored because defines duplicated name "+ scheme.getName());
        return null;
      }
    }
    ExternalInfo info=getExternalInfo(scheme);
    info.hash=JDOMUtil.getTreeHash(element,true);
    info.previouslySavedName=scheme.getName();
    info.fileName=fileNameWithoutExtension;
    T s=(T)scheme;
    if (duringLoad) {
      mySchemes.add(s);
    }
 else {
      addScheme(s);
    }
    if (result != null) {
      result.put(scheme.getName(),scheme);
    }
    return scheme;
  }
 catch (  Exception e) {
    LOG.error("Cannot read scheme " + name,e);
  }
  return null;
}
