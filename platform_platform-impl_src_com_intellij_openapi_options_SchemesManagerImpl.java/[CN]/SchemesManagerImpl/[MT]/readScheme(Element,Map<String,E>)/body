{
  if (element.getName().equals(SHARED_SCHEME)) {
    String schemeName=element.getAttributeValue(NAME);
    if (filter.containsKey(schemeName)) {
      return null;
    }
    String schemePath=element.getAttributeValue(ORIGINAL_SCHEME_PATH);
    Element sharedElement=loadGlobalScheme(schemePath);
    if (sharedElement != null) {
      E result=readScheme(sharedElement,Collections.<String,E>emptyMap());
      if (result != null) {
        renameScheme(result,schemeName);
        result.getExternalInfo().setOriginalPath(schemePath);
        result.getExternalInfo().setIsImported(true);
      }
      return result;
    }
 else {
      Element localCopyElement=element.getChild(SCHEME_LOCAL_COPY);
      if (localCopyElement == null) {
        return null;
      }
 else {
        E scheme=myProcessor.readScheme(new Document(localCopyElement.getChildren().get(0).clone()));
        return filter.containsKey(scheme.getName()) ? null : scheme;
      }
    }
  }
 else   if (element.getName().equals(SHARED_SCHEME_ORIGINAL)) {
    SharedSchemeData schemeData=unwrap(element);
    E scheme=myProcessor.readScheme(new Document(schemeData.original));
    if (scheme == null || filter.containsKey(scheme.getName())) {
      return null;
    }
    renameScheme(scheme,schemeData.name);
    return scheme;
  }
 else {
    E scheme=myProcessor.readScheme(new Document(element));
    return filter.containsKey(scheme.getName()) ? null : scheme;
  }
}
