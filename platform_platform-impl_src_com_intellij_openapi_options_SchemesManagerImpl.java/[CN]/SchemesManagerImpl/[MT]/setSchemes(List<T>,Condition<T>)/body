{
  if (removeCondition == null) {
    doRemoveAll();
  }
 else {
    for (int i=0; i < schemes.size(); i++) {
      T scheme=schemes.get(i);
      if (removeCondition.value(scheme)) {
        schemeDeleted(scheme);
        mySchemes.remove(i);
      }
    }
  }
  mySchemeToInfo.retainEntries(new TObjectObjectProcedure<ExternalizableScheme,ExternalInfo>(){
    @Override public boolean execute(    ExternalizableScheme scheme,    ExternalInfo b){
      return schemes.contains(scheme);
    }
  }
);
  mySchemes.ensureCapacity(schemes.size());
  for (  T scheme : schemes) {
    mySchemes.add(scheme);
    schemeAdded(scheme);
  }
  if (myCurrentSchemeName != null) {
    myCurrentScheme=findSchemeByName(myCurrentSchemeName);
    if (myCurrentScheme != null) {
      return;
    }
  }
  myCurrentScheme=mySchemes.isEmpty() ? null : mySchemes.get(0);
  myCurrentSchemeName=myCurrentScheme == null ? null : myCurrentScheme.getName();
}
