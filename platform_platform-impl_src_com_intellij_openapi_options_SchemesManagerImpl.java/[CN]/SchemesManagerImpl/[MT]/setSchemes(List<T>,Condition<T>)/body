{
  Map<T,String> schemeToFilename=new THashMap<T,String>(mySchemes.size());
  if (removeCondition == null) {
    for (    T scheme : mySchemes) {
      String filename=scheme instanceof ExternalizableScheme ? ((ExternalizableScheme)scheme).getExternalInfo().getCurrentFileName() : null;
      if (filename != null) {
        schemeToFilename.put(scheme,filename);
      }
    }
    clearAllSchemes();
  }
 else {
    for (int i=0; i < schemes.size(); i++) {
      T scheme=schemes.get(i);
      if (removeCondition.value(scheme)) {
        String filename=scheme instanceof ExternalizableScheme ? ((ExternalizableScheme)scheme).getExternalInfo().getCurrentFileName() : null;
        if (filename != null) {
          schemeToFilename.put(scheme,filename);
        }
        schemeDeleted(scheme);
        mySchemes.remove(i);
      }
    }
  }
  mySchemes.ensureCapacity(schemes.size());
  for (  T scheme : schemes) {
    if (scheme instanceof ExternalizableScheme && ((ExternalizableScheme)scheme).getExternalInfo().getCurrentFileName() == null) {
      ((ExternalizableScheme)scheme).getExternalInfo().setCurrentFileName(schemeToFilename.get(scheme));
    }
    addNewScheme(scheme,true);
  }
  if (myCurrentSchemeName != null) {
    myCurrentScheme=findSchemeByName(myCurrentSchemeName);
    if (myCurrentScheme != null) {
      return;
    }
  }
  myCurrentScheme=mySchemes.isEmpty() ? null : mySchemes.get(0);
  myCurrentSchemeName=myCurrentScheme == null ? null : myCurrentScheme.getName();
}
