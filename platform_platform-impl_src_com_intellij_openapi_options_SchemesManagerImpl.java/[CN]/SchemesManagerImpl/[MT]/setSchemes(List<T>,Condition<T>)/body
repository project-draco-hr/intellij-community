{
  if (removeCondition == null) {
    mySchemes.clear();
  }
 else {
    for (int i=schemes.size() - 1; i >= 0; i--) {
      T scheme=schemes.get(i);
      if (removeCondition.value(scheme)) {
        mySchemes.remove(i);
      }
    }
  }
  mySchemeToInfo.retainEntries(new TObjectObjectProcedure<ExternalizableScheme,ExternalInfo>(){
    @Override public boolean execute(    ExternalizableScheme scheme,    ExternalInfo info){
      boolean keep=schemes.contains(scheme);
      if (!keep && info.getCurrentFileName() != null) {
        myFilesToDelete.remove(info.getCurrentFileName());
      }
      return keep;
    }
  }
);
  mySchemes.ensureCapacity(schemes.size());
  for (  T scheme : schemes) {
    mySchemes.add(scheme);
    schemeAdded(scheme);
  }
  if (myCurrentSchemeName != null) {
    myCurrentScheme=findSchemeByName(myCurrentSchemeName);
    if (myCurrentScheme != null) {
      return;
    }
  }
  myCurrentScheme=mySchemes.isEmpty() ? null : mySchemes.get(0);
  myCurrentSchemeName=myCurrentScheme == null ? null : myCurrentScheme.getName();
}
