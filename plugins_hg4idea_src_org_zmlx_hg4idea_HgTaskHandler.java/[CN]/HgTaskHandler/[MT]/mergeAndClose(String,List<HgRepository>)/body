{
  String bookmarkRevisionArg="bookmark(\"" + branch + "\")";
  FileDocumentManager.getInstance().saveAllDocuments();
  final UpdatedFiles updatedFiles=UpdatedFiles.create();
  for (  final HgRepository repository : repositories) {
    HgMergeCommand.mergeWith(repository,bookmarkRevisionArg,updatedFiles,new Runnable(){
      @Override public void run(){
        Project project=repository.getProject();
        VirtualFile repositoryRoot=repository.getRoot();
        try {
          new HgCommitCommand(project,repository,"Automated merge with " + branch).execute();
          new HgBookmarkCommand(project,repositoryRoot,branch).deleteBookmark();
        }
 catch (        HgCommandException e) {
          HgErrorUtil.handleException(project,e);
        }
catch (        VcsException e) {
          VcsNotifier.getInstance(project).notifyError("Exception during merge commit with " + branch,e.getMessage());
        }
      }
    }
);
  }
}
