{
  PsiManager manager=PsiManager.getInstance(myProject);
  PsiClass targetClass=getMethod().getContainingClass();
  body.accept(new JavaRecursiveElementVisitor(){
    @Override public void visitReturnStatement(    PsiReturnStatement statement){
      if (statement.getCopyableUserData(GENERATED_RETURN) == null) {
        super.visitReturnStatement(statement);
      }
    }
    @Override public void visitThisExpression(    PsiThisExpression expression){
      if (expression.getQualifier() == null) {
        expression.replace(RefactoringChangeUtil.createThisExpression(manager,targetClass));
      }
    }
    @Override public void visitSuperExpression(    PsiSuperExpression expression){
      if (expression.getQualifier() == null) {
        expression.replace(RefactoringChangeUtil.createSuperExpression(manager,targetClass));
      }
    }
    @Override public void visitClass(    PsiClass aClass){
    }
  }
);
}
