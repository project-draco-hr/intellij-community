{
  File tempJar=IoTestUtil.createTestJar();
  final VirtualFile jar=refreshAndFindFile(tempJar);
  assertNotNull(jar);
  final JarFileSystem fs=JarFileSystem.getInstance();
  final String path=jar.getPath() + "!/";
  final NewVirtualFile root=ManagingFS.getInstance().findRoot(path,fs);
  PlatformTestUtil.startPerformanceTest("find root is slow",5000,new ThrowableRunnable(){
    @Override public void run() throws Throwable {
      JobLauncher.getInstance().invokeConcurrentlyUnderProgress(Collections.nCopies(500,null),null,false,false,new Processor<Object>(){
        @Override public boolean process(        Object o){
          for (int i=0; i < 20000; i++) {
            NewVirtualFile rootJar=ManagingFS.getInstance().findRoot(path,fs);
            assertNotNull(rootJar);
            assertSame(root,rootJar);
          }
          return true;
        }
      }
);
    }
  }
).assertTiming();
}
