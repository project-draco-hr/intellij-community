{
  assertThat(path).isNotEmpty();
  int segmentCount=path.length;
  List<JPopupMenu> previouslyFoundPopups=new ArrayList<>();
  Container root=myContainer;
  for (int i=0; i < segmentCount; i++) {
    final String segment=path[i];
    assertNotNull(root);
    JMenuItem found=myRobot.finder().find(root,new GenericTypeMatcher<JMenuItem>(JMenuItem.class){
      @Override protected boolean isMatching(      @NotNull JMenuItem menuItem){
        return pathIsRegex ? menuItem.getText().matches(segment) : segment.equals(menuItem.getText());
      }
    }
);
    if (root instanceof JPopupMenu) {
      previouslyFoundPopups.add((JPopupMenu)root);
    }
    if (i < segmentCount - 1) {
      myRobot.click(found);
      List<JPopupMenu> showingPopupMenus=findShowingPopupMenus(i + 1);
      showingPopupMenus.removeAll(previouslyFoundPopups);
      assertThat(showingPopupMenus).hasSize(1);
      root=showingPopupMenus.get(0);
      continue;
    }
    return found;
  }
  throw new AssertionError("Menu item with path " + Arrays.toString(path) + " should have been found already");
}
