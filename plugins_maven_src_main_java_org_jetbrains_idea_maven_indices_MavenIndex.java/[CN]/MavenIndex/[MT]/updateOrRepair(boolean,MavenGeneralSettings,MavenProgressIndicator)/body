{
  try {
    final File newDataDir=createNewDataDir();
    final File newDataContextDir=getDataContextDir(newDataDir);
    final File currentDataContextDir=getCurrentDataContextDir();
    boolean reuseExistingContext=fullUpdate ? myKind != Kind.LOCAL && hasValidContext(currentDataContextDir) : hasValidContext(currentDataContextDir);
    fullUpdate=fullUpdate || !reuseExistingContext && myKind == Kind.LOCAL;
    if (reuseExistingContext) {
      try {
        FileUtil.copyDir(currentDataContextDir,newDataContextDir);
      }
 catch (      IOException e) {
        throw new MavenIndexException(e);
      }
    }
    if (fullUpdate) {
      int context=createContext(newDataContextDir,"update");
      try {
        updateContext(context,settings,progress);
      }
  finally {
        myIndexer.releaseIndex(context);
      }
    }
    updateData(progress,newDataDir,fullUpdate);
    isBroken=false;
    myFailureMessage=null;
  }
 catch (  MavenProcessCanceledException e) {
    throw e;
  }
catch (  Exception e) {
    handleUpdateException(e);
  }
  save();
}
