{
  final PyExpression qualifier=element.getQualifier();
  if (qualifier == null)   return;
  if (qualifier instanceof PyCallExpression) {
    final StringBuilder newElement=new StringBuilder(element.getLastChild().getText());
    final PyExpression callee=((PyCallExpression)qualifier).getCallee();
    if (callee instanceof PyReferenceExpression) {
      final PyExpression calleeQualifier=((PyReferenceExpression)callee).getQualifier();
      if (calleeQualifier != null)       newElement.insert(0,calleeQualifier.getText() + ".");
    }
    final PyElementGenerator elementGenerator=PyElementGenerator.getInstance(element.getProject());
    final PyExpression expression=elementGenerator.createExpressionFromText(LanguageLevel.forElement(element),newElement.toString());
    element.replace(expression);
  }
 else {
    final PsiReference reference=qualifier.getReference();
    if (reference != null) {
      final PsiElement resolved=reference.resolve();
      if (resolved instanceof PyTargetExpression) {
        final PsiElement parent=resolved.getParent();
        if (parent instanceof PyAssignmentStatement) {
          final PyExpression value=((PyAssignmentStatement)parent).getAssignedValue();
          if (value instanceof PyCallExpression) {
            final PyExpression callee=((PyCallExpression)value).getCallee();
            if (callee instanceof PyReferenceExpression) {
              final PyExpression calleeQualifier=((PyReferenceExpression)callee).getQualifier();
              if (calleeQualifier != null) {
                value.replace(calleeQualifier);
              }
            }
          }
        }
      }
    }
  }
}
