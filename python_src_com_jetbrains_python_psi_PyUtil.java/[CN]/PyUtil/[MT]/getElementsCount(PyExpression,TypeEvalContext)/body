{
  int valuesLength=-1;
  PyType type=evalContext.getType(expression);
  if (type instanceof PyTupleType) {
    valuesLength=((PyTupleType)type).getElementCount();
  }
 else   if (type instanceof PyNamedTupleType) {
    valuesLength=((PyNamedTupleType)type).getElementCount();
  }
 else   if (expression instanceof PySequenceExpression) {
    valuesLength=((PySequenceExpression)expression).getElements().length;
  }
 else   if (expression instanceof PyStringLiteralExpression) {
    valuesLength=((PyStringLiteralExpression)expression).getStringValue().length();
  }
 else   if (expression instanceof PyNumericLiteralExpression) {
    valuesLength=1;
  }
 else   if (expression instanceof PyCallExpression) {
    PyCallExpression call=(PyCallExpression)expression;
    if (call.isCalleeText("dict")) {
      valuesLength=call.getArguments().length;
    }
 else     if (call.isCalleeText("tuple")) {
      PyExpression[] arguments=call.getArguments();
      if (arguments.length > 0 && arguments[0] instanceof PySequenceExpression) {
        valuesLength=((PySequenceExpression)arguments[0]).getElements().length;
      }
    }
  }
  return valuesLength;
}
