{
  final Map<P,T> cache=CachedValuesManager.getCachedValue(element,new CachedValueProvider<Map<P,T>>(){
    @Nullable @Override public Result<Map<P,T>> compute(){
      return Result.create(Maps.newHashMap(),PsiModificationTracker.MODIFICATION_COUNT);
    }
  }
);
  T result=cache.get(param);
  if (result == null) {
    result=f.fun(param);
    cache.put(param,result);
  }
  return result;
}
