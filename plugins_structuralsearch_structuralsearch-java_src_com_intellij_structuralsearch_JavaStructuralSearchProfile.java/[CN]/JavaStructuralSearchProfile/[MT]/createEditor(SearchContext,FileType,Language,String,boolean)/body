{
  PsiElement element=searchContext.getFile();
  if (element != null && !useLastConfiguration) {
    final Editor selectedEditor=FileEditorManager.getInstance(searchContext.getProject()).getSelectedTextEditor();
    if (selectedEditor != null) {
      int caretPosition=selectedEditor.getCaretModel().getOffset();
      PsiElement positionedElement=searchContext.getFile().findElementAt(caretPosition);
      if (positionedElement == null) {
        positionedElement=searchContext.getFile().findElementAt(caretPosition + 1);
      }
      if (positionedElement != null) {
        element=PsiTreeUtil.getParentOfType(positionedElement,PsiClass.class,PsiCodeBlock.class);
      }
    }
  }
  final PsiManager psimanager=PsiManager.getInstance(searchContext.getProject());
  final Project project=psimanager.getProject();
  final PsiCodeFragment file=createCodeFragment(project,text,element);
  final Document doc=PsiDocumentManager.getInstance(searchContext.getProject()).getDocument(file);
  DaemonCodeAnalyzer.getInstance(searchContext.getProject()).setHighlightingEnabled(file,false);
  return UIUtil.createEditor(doc,searchContext.getProject(),true,true,getTemplateContextType());
}
