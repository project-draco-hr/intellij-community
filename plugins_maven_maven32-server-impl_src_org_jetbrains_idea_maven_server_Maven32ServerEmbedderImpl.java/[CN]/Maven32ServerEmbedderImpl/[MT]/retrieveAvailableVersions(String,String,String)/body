{
  try {
    Artifact artifact=new DefaultArtifact(groupId,artifactId,"",Artifact.SCOPE_COMPILE,"pom",null,new DefaultArtifactHandler("pom"));
    ArtifactRepository remoteRepository=new MavenArtifactRepository("id",remoteRepositoryUrl,getComponent(ArtifactRepositoryLayout.class),new ArtifactRepositoryPolicy(true,ArtifactRepositoryPolicy.UPDATE_POLICY_DAILY,ArtifactRepositoryPolicy.CHECKSUM_POLICY_WARN),new ArtifactRepositoryPolicy(true,ArtifactRepositoryPolicy.UPDATE_POLICY_DAILY,ArtifactRepositoryPolicy.CHECKSUM_POLICY_WARN));
    List<ArtifactVersion> versions=getComponent(ArtifactMetadataSource.class).retrieveAvailableVersions(artifact,myLocalRepository,Collections.singletonList(remoteRepository));
    return Lists.newArrayList(Iterables.transform(versions,new Function<ArtifactVersion,String>(){
      @Override public String apply(      ArtifactVersion version){
        return version.toString();
      }
    }
));
  }
 catch (  Exception e) {
    Maven3ServerGlobals.getLogger().info(e);
  }
  return Collections.emptyList();
}
