{
  DefaultMaven maven=(DefaultMaven)getComponent(Maven.class);
  RepositorySystemSession repositorySession=maven.newRepositorySession(request);
  if (repositorySession instanceof DefaultRepositorySystemSession) {
    ((DefaultRepositorySystemSession)repositorySession).setConfigProperty(ConflictResolver.CONFIG_PROP_VERBOSE,true);
  }
  request.getProjectBuildingRequest().setRepositorySession(repositorySession);
  MavenSession mavenSession=new MavenSession(myContainer,repositorySession,request,new DefaultMavenExecutionResult());
  LegacySupport legacySupport=getComponent(LegacySupport.class);
  MavenSession oldSession=legacySupport.getSession();
  legacySupport.setSession(mavenSession);
  try {
    for (    AbstractMavenLifecycleParticipant listener : getLifecycleParticipants(Collections.<MavenProject>emptyList())) {
      listener.afterSessionStart(mavenSession);
    }
  }
 catch (  MavenExecutionException e) {
    throw new RuntimeException(e);
  }
  try {
    runnable.run();
  }
  finally {
    legacySupport.setSession(oldSession);
  }
}
