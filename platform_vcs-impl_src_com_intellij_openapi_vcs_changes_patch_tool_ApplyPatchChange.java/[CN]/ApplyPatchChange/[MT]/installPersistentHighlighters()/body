{
  EditorEx patchEditor=myViewer.getPatchEditor();
  DocumentEx patchDocument=patchEditor.getDocument();
  if (myPatchDeletionRange.isEmpty() || myPatchInsertionRange.isEmpty()) {
    DiffDrawUtil.createUnifiedChunkHighlighters(patchEditor,myPatchDeletionRange,myPatchInsertionRange,false);
  }
 else {
    DiffDrawUtil.createUnifiedChunkHighlighters(patchEditor,myPatchDeletionRange,myPatchInsertionRange,true);
    CharSequence deleted=DiffUtil.getLinesContent(patchDocument,myPatchDeletionRange.start,myPatchDeletionRange.end);
    CharSequence inserted=DiffUtil.getLinesContent(patchDocument,myPatchInsertionRange.start,myPatchInsertionRange.end);
    List<DiffFragment> wordDiff=ByWord.compare(deleted,inserted,ComparisonPolicy.DEFAULT,DumbProgressIndicator.INSTANCE);
    int deletionStartShift=patchDocument.getLineStartOffset(myPatchDeletionRange.start);
    int insertionStartShift=patchDocument.getLineStartOffset(myPatchInsertionRange.start);
    for (    DiffFragment fragment : wordDiff) {
      int deletedWordStart=deletionStartShift + fragment.getStartOffset1();
      int deletedWordEnd=deletionStartShift + fragment.getEndOffset1();
      DiffDrawUtil.createInlineHighlighter(patchEditor,deletedWordStart,deletedWordEnd,TextDiffType.DELETED);
      int insertedWordStart=insertionStartShift + fragment.getStartOffset2();
      int insertedWordEndEnd=insertionStartShift + fragment.getEndOffset2();
      DiffDrawUtil.createInlineHighlighter(patchEditor,insertedWordStart,insertedWordEndEnd,TextDiffType.INSERTED);
    }
  }
}
