{
  final PomModel model=PomManager.getModel(getProject());
  final XmlAspect aspect=model.getModelAspect(XmlAspect.class);
  if (child.getElementType() == XmlElementType.XML_ATTRIBUTE) {
    try {
      model.runTransaction(new PomTransactionBase(this,aspect){
        @Override public PomModelEvent runInner(){
          final String name=((XmlAttribute)child).getName();
          XmlTagImpl.super.deleteChildInternal(child);
          return XmlAttributeSetImpl.createXmlAttributeSet(model,XmlTagImpl.this,name,null);
        }
      }
);
    }
 catch (    IncorrectOperationException e) {
      LOG.error(e);
    }
  }
 else {
    final ASTNode treePrev=child.getTreePrev();
    final ASTNode treeNext=child.getTreeNext();
    XmlTagImpl.super.deleteChildInternal(child);
    if (treePrev != null && treeNext != null && treePrev.getElementType() == XmlElementType.XML_TEXT && treeNext.getElementType() == XmlElementType.XML_TEXT) {
      final XmlText prevText=(XmlText)treePrev.getPsi();
      final XmlText nextText=(XmlText)treeNext.getPsi();
      final String newValue=prevText.getValue() + nextText.getValue();
      ChangeUtil.prepareAndRunChangeAction(new ChangeUtil.ChangeAction(){
        @Override public void makeChange(        TreeChangeEvent destinationTreeChange){
          PsiElement anchor=prevText.getPrevSibling();
          prevText.delete();
          nextText.delete();
          XmlText text=(XmlText)addAfter(XmlElementFactory.getInstance(getProject()).createDisplayText("x"),anchor);
          text.setValue(newValue);
        }
      }
,this);
    }
  }
}
