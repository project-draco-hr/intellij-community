{
  final ProcessHandler process=createProcess(env);
  final Project project=myModule.getProject();
  new RunContentExecutor(project,process).withFilter(new PythonTracebackFilter(project)).withConsole(consoleView).withTitle(myRunTabTitle).withRerun(new Runnable(){
    @Override public void run(){
      try {
        process.destroyProcess();
        if (process.waitFor(TIME_TO_WAIT_PROCESS_STOP)) {
          PythonTask.this.run(env,consoleView);
        }
 else {
          Messages.showErrorDialog(PyBundle.message("unable.to.stop"),myRunTabTitle);
        }
      }
 catch (      ExecutionException e) {
        Messages.showErrorDialog(e.getMessage(),myRunTabTitle);
      }
    }
  }
).withStop(new Runnable(){
    @Override public void run(){
      process.destroyProcess();
    }
  }
,new Computable<Boolean>(){
    @Override public Boolean compute(){
      return !process.isProcessTerminated();
    }
  }
).withAfterCompletion(myAfterCompletion).withHelpId(myHelpId).run();
}
