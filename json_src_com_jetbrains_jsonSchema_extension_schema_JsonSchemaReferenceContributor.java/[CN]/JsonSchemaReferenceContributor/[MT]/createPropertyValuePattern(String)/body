{
  return PlatformPatterns.psiElement(JsonValue.class).and(new FilterPattern(new ElementFilter(){
    @Override public boolean isAcceptable(    Object element,    @Nullable PsiElement context){
      if (element instanceof JsonValue) {
        if (!isSchemaFile((PsiElement)element))         return false;
        if (((JsonValue)element).getParent() instanceof JsonProperty && ((JsonProperty)((JsonValue)element).getParent()).getValue() == element) {
          return propertyName.equals(((JsonProperty)((JsonValue)element).getParent()).getName());
        }
      }
      return false;
    }
    @Override public boolean isClassAcceptable(    Class hintClass){
      return true;
    }
  }
));
}
