{
  final List<T> result=new ArrayList<T>();
  if (stub != null) {
    final List<StubElement> children=stub.getChildrenStubs();
    for (    StubElement child : children) {
      if (child.getStubType() == elementType) {
        result.add((T)child.getPsi());
      }
    }
  }
 else {
    e.acceptChildren(new PyRecursiveElementVisitor(){
      public void visitPyElement(      final PyElement node){
        super.visitPyElement(node);
        checkAddElement(node);
      }
      public void visitPyClass(      final PyClass node){
        checkAddElement(node);
      }
      public void visitPyFunction(      final PyFunction node){
        checkAddElement(node);
      }
      private void checkAddElement(      PsiElement node){
        if (itemClass.isInstance(node)) {
          result.add((T)node);
        }
      }
    }
);
  }
  return result;
}
