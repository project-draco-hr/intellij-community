{
  final Collection<String> absolutePaths=GitUtil.toAbsolute(repository.getRoot(),relativeFilePaths);
  final List<Change> changes=GitUtil.findLocalChangesForPaths(project,repository,absolutePaths,false);
  String notificationTitle="Git " + StringUtil.capitalize(operationName) + " Failed";
  VcsNotifier.getInstance(project).notifyError(notificationTitle,getErrorNotificationDescription(),new NotificationListener.Adapter(){
    @Override protected void hyperlinkActivated(    @NotNull Notification notification,    @NotNull HyperlinkEvent e){
      String title="Local Changes Prevent from " + StringUtil.capitalize(operationName);
      String description=getErrorDialogDescription();
      if (changes.isEmpty()) {
        GitUtil.showPathsInDialog(project,absolutePaths,title,description);
      }
 else {
        DialogBuilder builder=new DialogBuilder(project);
        builder.setNorthPanel(new MultiLineLabel(description));
        builder.setCenterPanel(new ChangesBrowserWithRollback(project,changes));
        builder.addOkAction();
        builder.setTitle(title);
        builder.show();
      }
    }
  }
);
}
