{
  List<PyExpression> unmatched_args=new LinkedList<PyExpression>();
  Collections.addAll(unmatched_args,myArgumentList.getArguments());
  for (  PyExpression arg : myArgumentList.getArguments()) {
    if (arg instanceof PyStarArgument) {
      PyStarArgument star_arg=(PyStarArgument)arg;
      if (star_arg.isKeyword()) {
        if (myKwdArg == null)         myKwdArg=star_arg;
 else {
          markArgument(arg,ArgFlag.IS_DUP_KWD);
          unmatched_args.remove(arg);
        }
      }
 else {
        if (myTupleArg == null)         myTupleArg=star_arg;
 else {
          markArgument(arg,ArgFlag.IS_DUP_TUPLE);
          unmatched_args.remove(arg);
        }
      }
    }
  }
  markPastBoundPositionalArguments(myArgumentList.getArguments());
  return unmatched_args;
}
