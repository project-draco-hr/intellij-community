{
  final Set<String> superClasses=new HashSet<String>();
  final List<PyFunction> methods=new ArrayList<PyFunction>();
  for (  PyMemberInfo member : mySelectedMemberInfos) {
    final PyElement element=member.getMember();
    if (element instanceof PyFunction)     methods.add((PyFunction)element);
 else     if (element instanceof PyClass)     superClasses.add(element.getName());
 else     LOG.error("unmatched member class " + element.getClass());
  }
  final PsiElement[] elements=methods.toArray(new PsiElement[methods.size()]);
  if (methods.size() != 0) {
    PyPsiUtils.removeElements(elements);
  }
  final List<PsiElement> superClassesElements=PyClassRefactoringUtil.removeAndGetSuperClasses(myClass,superClasses);
  for (  UsageInfo usage : usages) {
    final PyClass targetClass=(PyClass)usage.getElement();
    PyClassRefactoringUtil.addMethods(targetClass,elements);
    PyClassRefactoringUtil.addSuperclasses(myClass.getProject(),targetClass,superClassesElements,superClasses);
  }
}
