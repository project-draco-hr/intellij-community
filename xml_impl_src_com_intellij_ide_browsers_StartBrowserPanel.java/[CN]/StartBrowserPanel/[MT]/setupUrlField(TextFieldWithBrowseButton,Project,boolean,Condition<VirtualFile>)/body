{
  FileChooserDescriptor descriptor=new FileChooserDescriptor(true,chooseFolders,false,false,false,false){
    @Override public boolean isFileSelectable(    VirtualFile file){
      if (additionalFileCondition != null && additionalFileCondition.value(file)) {
        return true;
      }
      return HtmlUtil.isHtmlFile(file) || virtualFileToUrl(file,project) != null;
    }
  }
;
  descriptor.setTitle(XmlBundle.message("javascript.debugger.settings.choose.file.title"));
  descriptor.setDescription(XmlBundle.message("javascript.debugger.settings.choose.file.subtitle"));
  descriptor.setRoots(ProjectRootManager.getInstance(project).getContentRoots());
  field.addBrowseFolderListener(new TextBrowseFolderListener(descriptor,project){
    @NotNull @Override protected String chosenFileToResultingText(    @NotNull VirtualFile chosenFile){
      if (chosenFile.isDirectory()) {
        return chosenFile.getPath();
      }
      Url url=virtualFileToUrl(chosenFile,project);
      return url == null ? chosenFile.getUrl() : url.toDecodedForm();
    }
  }
);
}
