{
  PyArgumentList argumentList=findArgumentList(context,-1);
  if (argumentList != null) {
    final PyCallExpression callExpr=argumentList.getCallExpression();
    if (callExpr != null) {
      final TypeEvalContext typeEvalContext=TypeEvalContext.userInitiated(argumentList.getProject(),argumentList.getContainingFile());
      final PyResolveContext resolveContext=PyResolveContext.noImplicits().withRemote().withTypeEvalContext(typeEvalContext);
      final PyCallExpression.PyArgumentsMapping mapping=callExpr.mapArguments(resolveContext);
      if (mapping.getMarkedCallee() != null) {
        context.setItemsToShow(new Object[]{mapping});
        return argumentList;
      }
    }
  }
  return null;
}
