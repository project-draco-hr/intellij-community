{
  Map<Integer,FoldRegion> actualFoldRegions=new HashMap<Integer,FoldRegion>();
  List<Integer> actualTabPositions=new ArrayList<Integer>();
  for (int i=entry.startOffset; i < entry.endOffset; i++) {
    FoldRegion region=myEditor.getFoldingModel().getCollapsedRegionAtOffset(i);
    if (region == null) {
      if (myEditor.getDocument().getCharsSequence().charAt(i) == '\t') {
        actualTabPositions.add(i);
      }
    }
 else {
      if (region.getStartOffset() == i) {
        actualFoldRegions.put(i,region);
      }
    }
  }
  final Map<Integer,FoldRegion> cachedFoldRegions=new HashMap<Integer,FoldRegion>();
  entry.getFoldingData().forEachEntry(new TIntObjectProcedure<FoldingData>(){
    @Override public boolean execute(    int offset,    FoldingData data){
      cachedFoldRegions.put(offset,data.getFoldRegion());
      return true;
    }
  }
);
  assertEquals(actualFoldRegions,cachedFoldRegions);
  List<Integer> cachedTabPositions=new ArrayList<Integer>();
  for (  TabData tabData : entry.getTabData()) {
    cachedTabPositions.add(tabData.offset);
  }
  assertEquals(actualTabPositions,cachedTabPositions);
}
