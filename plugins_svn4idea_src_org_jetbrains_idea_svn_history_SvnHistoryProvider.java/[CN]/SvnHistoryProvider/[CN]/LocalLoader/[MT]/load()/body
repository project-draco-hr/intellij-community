{
  String relativeUrl=myUrl;
  final SVNURL repoRootURL=myInfo.getRepositoryRootURL();
  final String root=repoRootURL.toString();
  if (myUrl != null && myUrl.startsWith(root)) {
    relativeUrl=myUrl.substring(root.length());
  }
  if (myPI != null) {
    myPI.setText2(SvnBundle.message("progress.text2.changes.establishing.connection",myUrl));
  }
  final SVNRevision pegRevision=myInfo.getRevision();
  final SvnTarget target=SvnTarget.fromFile(myFile.getIOFile(),myPeg);
  try {
    myVcs.getFactory(target).createHistoryClient().doLog(target,myFrom == null ? SVNRevision.HEAD : myFrom,myTo == null ? SVNRevision.create(1) : myTo,false,true,myShowMergeSources && mySupport15,myLimit + 1,null,new MyLogEntryHandler(myVcs,myUrl,pegRevision,relativeUrl,createConsumerAdapter(myConsumer),repoRootURL,myFile.getCharset()));
  }
 catch (  SVNCancelException e) {
  }
catch (  SVNException e) {
    myException=new VcsException(e);
  }
catch (  VcsException e) {
    myException=e;
  }
}
