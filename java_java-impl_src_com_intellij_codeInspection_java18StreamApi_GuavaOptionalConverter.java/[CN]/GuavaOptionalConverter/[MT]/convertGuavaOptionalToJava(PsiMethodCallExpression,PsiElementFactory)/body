{
  final String methodName=methodCall.getMethodExpression().getReferenceName();
  if (methodName == OR_METHOD) {
    final PsiExpression[] arguments=methodCall.getArgumentList().getExpressions();
    if (arguments.length != 1) {
      return methodCall;
    }
    final PsiExpression argument=arguments[0];
    final PsiType type=argument.getType();
    if (type instanceof PsiClassType) {
      final PsiClass resolvedClass=((PsiClassType)type).resolve();
      if (resolvedClass != null) {
        final String qName=resolvedClass.getQualifiedName();
        if (GuavaFluentIterableInspection.GUAVA_OPTIONAL.equals(qName) || "com.google.common.base.Supplier".equals(qName)) {
          return methodCall;
        }
      }
    }
  }
  final FluentIterableMethodTransformer conversion=METHODS_CONVERSION.get(methodName);
  if (conversion == null) {
    return methodCall;
  }
  final PsiMethodCallExpression transformed=conversion.transform(methodCall,elementFactory);
  LOG.assertTrue(transformed != null);
  return transformed;
}
