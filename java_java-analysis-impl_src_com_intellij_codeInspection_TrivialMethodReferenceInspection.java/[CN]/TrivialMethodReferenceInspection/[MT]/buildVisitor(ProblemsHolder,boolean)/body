{
  return new JavaElementVisitor(){
    @Override public void visitMethodReferenceExpression(    PsiMethodReferenceExpression expression){
      final PsiExpression qualifierExpression=expression.getQualifierExpression();
      final PsiElement referenceNameElement=expression.getReferenceNameElement();
      if (qualifierExpression != null && referenceNameElement != null) {
        final PsiMethod interfaceMethod=LambdaUtil.getFunctionalInterfaceMethod(expression);
        if (interfaceMethod != null) {
          final PsiElement resolve=expression.resolve();
          if (resolve instanceof PsiMethod && (interfaceMethod == resolve || MethodSignatureUtil.isSuperMethod(interfaceMethod,(PsiMethod)resolve))) {
            holder.registerProblem(referenceNameElement,"Method reference can be replaced with qualifier",new ReplaceMethodRefWithQualifierFix());
          }
        }
      }
    }
  }
;
}
