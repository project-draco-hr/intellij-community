{
  Map<String,Object> options=ContainerUtil.newHashMap();
  options.put(IFernflowerPreferences.HIDE_DEFAULT_CONSTRUCTOR,"0");
  options.put(IFernflowerPreferences.DECOMPILE_GENERIC_SIGNATURES,"1");
  options.put(IFernflowerPreferences.REMOVE_SYNTHETIC,"1");
  options.put(IFernflowerPreferences.REMOVE_BRIDGE,"1");
  options.put(IFernflowerPreferences.LITERALS_AS_IS,"1");
  options.put(IFernflowerPreferences.NEW_LINE_SEPARATOR,"1");
  options.put(IFernflowerPreferences.BANNER,BANNER);
  options.put(IFernflowerPreferences.MAX_PROCESSING_METHOD,60);
  Project project=DefaultProjectFactory.getInstance().getDefaultProject();
  CodeStyleSettings settings=CodeStyleSettingsManager.getInstance(project).getCurrentSettings();
  CommonCodeStyleSettings.IndentOptions indentOptions=settings.getIndentOptions(JavaFileType.INSTANCE);
  options.put(IFernflowerPreferences.INDENT_STRING,StringUtil.repeat(" ",indentOptions.INDENT_SIZE));
  Application app=ApplicationManager.getApplication();
  myLegalNoticeAccepted=app.isUnitTestMode() || PropertiesComponent.getInstance().isValueSet(LEGAL_NOTICE_KEY);
  if (!myLegalNoticeAccepted) {
    MessageBusConnection connection=app.getMessageBus().connect(app);
    connection.subscribe(FileEditorManagerListener.FILE_EDITOR_MANAGER,new FileEditorManagerAdapter(){
      @Override public void fileOpened(      @NotNull FileEditorManager source,      @NotNull VirtualFile file){
        if (file.getFileType() == StdFileTypes.CLASS) {
          FileEditor editor=source.getSelectedEditor(file);
          if (editor instanceof TextEditor) {
            CharSequence text=((TextEditor)editor).getEditor().getDocument().getImmutableCharSequence();
            if (StringUtil.startsWith(text,BANNER)) {
              showLegalNotice(source.getProject(),file);
            }
          }
        }
      }
    }
);
  }
  if (app.isUnitTestMode()) {
    options.put(IFernflowerPreferences.UNIT_TEST_MODE,"1");
  }
  myOptions=Collections.unmodifiableMap(options);
}
