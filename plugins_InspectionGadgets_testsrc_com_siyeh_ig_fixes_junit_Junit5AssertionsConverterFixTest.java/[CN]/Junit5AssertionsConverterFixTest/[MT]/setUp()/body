{
  super.setUp();
  myFixture.enableInspections(new JUnit5AssertionsConverterInspection());
  myRelativePath="junit/junit5_assertions_converter";
  myFixture.addClass("package org.hamcrest;\n" + "public interface Matcher<T>{}");
  myFixture.addClass("package org.hamcrest;\n" + "public class MatcherAssert{}");
  myFixture.addClass("package org.junit;" + "public class Assert {" + "    public static void assertArrayEquals(Object[] expecteds, Object[] actuals) {}"+ "    public static void assertArrayEquals(String message, Object[] expecteds, Object[] actuals){}"+ "    public static void assertTrue(String message, boolean condition) {}"+ "    public static void assertTrue(boolean condition) {}"+ "    public static void assertEquals(String message, Object expected, Object actual) {}"+ "    public static void assertEquals(Object expected, Object actual) {}"+ "    public static void fail(String message) {}"+ "    public static <T> void assertThat(T actual, Matcher<? super T> matcher) {}"+ "}");
  myFixture.addClass("package org.junit.jupiter.api;\n" + "public class Assumptions {\n" + "    public static void assumeTrue(boolean b) {}\n"+ "    public static void assumeTrue(boolean b, String message) {}\n"+ "}");
  myFixture.addClass("package org.junit;\n" + "public class Assume {\n" + "    public static void assumeTrue(boolean b) {}\n"+ "    public static void assumeTrue(String message, boolean b) {}\n"+ "}");
  myFixture.addClass("package org.junit.jupiter.api;" + "public @interface Test {}");
  myFixture.addClass("package org.junit.jupiter.api;\n" + "public final class Assertions {\n" + "    public static void assertArrayEquals(Object[] expected, Object[] actual) {}\n"+ "    public static void assertArrayEquals(Object[] expected, Object[] actual, String message) {}\n"+ "    public static void assertEquals(Object expected, Object actual) {}\n"+ "    public static void assertTrue(boolean expected) {}\n"+ "    public static void assertEquals(Object expected, Object actual, String message) {}\n"+ "    public static void assertTrue(Object expected, String message) {}\n"+ "    public static void fail(String message) {}"+ "}");
}
