{
  BuildNumber build=ApplicationInfo.getInstance().getBuild();
  @SuppressWarnings("IOResourceOpenedButNotSafelyClosed") BufferExposingByteArrayOutputStream byteOut=new BufferExposingByteArrayOutputStream();
  JsonWriter writer=createJsonWriter(byteOut);
  writer.beginObject();
  ApplicationInfoEx appInfo=ApplicationInfoEx.getInstanceEx();
  String appName=appInfo.getFullApplicationName();
  if (!PlatformUtils.isIdeaUltimate()) {
    String productName=ApplicationNamesInfo.getInstance().getProductName();
    appName=appName.replace(productName + " (" + productName+ ")",productName);
    appName=StringUtil.trimStart(appName,"JetBrains ");
  }
  writer.name("name").value(appName);
  writer.name("productName").value(ApplicationNamesInfo.getInstance().getProductName());
  writer.name("baselineVersion").value(build.getBaselineVersion());
  if (build.getBuildNumber() != Integer.MAX_VALUE) {
    writer.name("buildNumber").value(build.getBuildNumber());
  }
  if (getBooleanParameter("registeredFileTypes",urlDecoder)) {
    writer.name("registeredFileTypes").beginArray();
    for (    FileType fileType : FileTypeRegistry.getInstance().getRegisteredFileTypes()) {
      writer.beginObject();
      writer.name("name").value(fileType.getName());
      writer.name("description").value(fileType.getDescription());
      writer.name("isBinary").value(fileType.isBinary());
      writer.endObject();
    }
    writer.endArray();
  }
  String uri=request.getUri();
  if (uri != null && uri.endsWith("?more")) {
    writer.name("vendor").value(appInfo.getCompanyName());
    writer.name("isEAP").value(appInfo.isEAP());
    writer.name("productCode").value(appInfo.getBuild().getProductCode());
    writer.name("buildDate").value(appInfo.getBuildDate().getTime().getTime());
    writer.name("isSnapshot").value(appInfo.getBuild().isSnapshot());
    writer.name("configPath").value(PathManager.getConfigPath());
    writer.name("systemPath").value(PathManager.getSystemPath());
    writer.name("binPath").value(PathManager.getBinPath());
    writer.name("logPath").value(PathManager.getLogPath());
    writer.name("homePath").value(PathManager.getHomePath());
  }
  writer.endObject();
  writer.close();
  send(byteOut,request,context);
  return null;
}
