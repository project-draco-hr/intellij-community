{
  if (myConfig.showCommandLineAfterwards()) {
    if (executor.getId() == DefaultDebugExecutor.EXECUTOR_ID) {
      return super.execute(executor,ArrayUtil.append(patchers,new CommandLinePatcher(){
        @Override public void patchCommandLine(        GeneralCommandLine commandLine){
          commandLine.getParametersList().getParamsGroup(PythonCommandLineState.GROUP_DEBUGGER).addParameterAt(1,"--cmd-line");
        }
      }
));
    }
    PydevConsoleRunner runner=new PythonScriptWithConsoleRunner(myConfig.getProject(),myConfig.getSdk(),PyConsoleType.PYTHON,myConfig.getWorkingDirectory(),myConfig.getEnvs(),patchers,PyConsoleOptions.getInstance(myConfig.getProject()).getPythonConsoleSettings());
    runner.runSync();
    List<AnAction> actions=Lists.newArrayList(createActions(runner.getConsoleView(),runner.getProcessHandler()));
    return new DefaultExecutionResult(runner.getConsoleView(),runner.getProcessHandler(),actions.toArray(new AnAction[actions.size()]));
  }
 else {
    return super.execute(executor,patchers);
  }
}
