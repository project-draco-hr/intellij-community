{
  super.visitTypeCastExpression(expression);
  final PsiType castType=expression.getType();
  if (!ClassUtils.isPrimitiveNumericType(castType)) {
    return;
  }
  final PsiExpression operand=expression.getOperand();
  if (operand == null) {
    return;
  }
  final PsiType operandType=operand.getType();
  if (castType.equals(operandType) || isPrimitiveNumericCastNecessary(expression)) {
    return;
  }
  final PsiTypeElement typeElement=expression.getCastType();
  if (typeElement != null) {
    registerError(typeElement,ProblemHighlightType.LIKE_UNUSED_SYMBOL,operand);
  }
}
