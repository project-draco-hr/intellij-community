{
  final Set<String> abstractNames=ContainerUtil.newHashSet();
  final Set<String> defaultNames=ContainerUtil.newHashSet();
  InheritanceUtil.processSupers(psiClass,true,new Processor<PsiClass>(){
    @Override public boolean process(    PsiClass psiClass){
      for (      PsiMethod method : psiClass.getMethods()) {
        if (isDefinitelyAbstractInterfaceMethod(method)) {
          abstractNames.add(method.getName());
        }
 else         if (method.hasModifierProperty(PsiModifier.DEFAULT)) {
          defaultNames.add(method.getName());
        }
      }
      return true;
    }
  }
);
  abstractNames.removeAll(defaultNames);
  return abstractNames.size() > 1;
}
