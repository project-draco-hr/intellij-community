{
  if (PsiUtil.isLanguageLevel8OrHigher(methodReferenceExpression)) {
    final PsiExpression qualifierExpression=methodReferenceExpression.getQualifierExpression();
    final PsiClass containingClass=method.getContainingClass();
    if (containingClass != null && containingClass.isInterface() && method.hasModifierProperty(PsiModifier.STATIC)) {
      return qualifierExpression == null && PsiTreeUtil.isAncestor(containingClass,methodReferenceExpression,true) || qualifierExpression instanceof PsiReferenceExpression && ((PsiReferenceExpression)qualifierExpression).resolve() == containingClass;
    }
  }
  return true;
}
