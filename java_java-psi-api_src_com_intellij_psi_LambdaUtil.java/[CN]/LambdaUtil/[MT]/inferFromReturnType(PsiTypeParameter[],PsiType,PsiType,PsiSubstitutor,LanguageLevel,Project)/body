{
  if (returnType == PsiType.VOID || interfaceMethodReturnType == PsiType.VOID)   return psiSubstitutor;
  final PsiResolveHelper resolveHelper=JavaPsiFacade.getInstance(project).getResolveHelper();
  final PsiSubstitutor substitutor=resolveHelper.inferTypeArguments(typeParameters,new PsiType[]{interfaceMethodReturnType},new PsiType[]{returnType},languageLevel);
  for (  PsiTypeParameter typeParameter : typeParameters) {
    final PsiType inferredType=substitutor.substitute(typeParameter);
    if (PsiUtil.resolveClassInType(inferredType) != typeParameter) {
      psiSubstitutor=psiSubstitutor.put(typeParameter,inferredType);
    }
  }
  return psiSubstitutor;
}
