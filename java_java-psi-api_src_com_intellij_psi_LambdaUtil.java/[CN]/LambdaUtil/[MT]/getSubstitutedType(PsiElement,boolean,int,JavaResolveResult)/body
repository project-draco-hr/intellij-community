{
  final PsiElement resolve=resolveResult.getElement();
  if (resolve instanceof PsiMethod) {
    final PsiParameter[] parameters=((PsiMethod)resolve).getParameterList().getParameters();
    final int finalLambdaIdx=adjustLambdaIdx(lambdaIdx,(PsiMethod)resolve,parameters);
    if (finalLambdaIdx < parameters.length) {
      if (!tryToSubstitute)       return getNormalizedType(parameters[finalLambdaIdx]);
      return PsiResolveHelper.ourGraphGuard.doPreventingRecursion(expression,!MethodCandidateInfo.isOverloadCheck(),new Computable<PsiType>(){
        @Override public PsiType compute(){
          final PsiType normalizedType=getNormalizedType(parameters[finalLambdaIdx]);
          if (resolveResult instanceof MethodCandidateInfo && ((MethodCandidateInfo)resolveResult).isRawSubstitution()) {
            return TypeConversionUtil.erasure(normalizedType);
          }
 else {
            return resolveResult.getSubstitutor().substitute(normalizedType);
          }
        }
      }
);
    }
  }
  return null;
}
