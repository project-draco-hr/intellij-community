{
  return new Runnable(){
    @Override public void run(){
      myFoldingModel.updateContext(myRequest,getFoldingModelSettings());
      clearDiffPresentation();
      if (isEqual)       myPanel.addContentsEqualNotification();
      TIntFunction separatorLines=myFoldingModel.getLineNumberConvertor();
      myEditor.getGutterComponentEx().setLineNumberConvertor(mergeConverters(data.getLineConvertor1(),separatorLines),mergeConverters(data.getLineConvertor2(),separatorLines));
      ApplicationManager.getApplication().runWriteAction(new Runnable(){
        @Override public void run(){
          myDocument.setText(data.getText());
        }
      }
);
      if (data.getHighlighter() != null)       myEditor.setHighlighter(data.getHighlighter());
      DiffUtil.setEditorCodeStyle(myProject,myEditor,data.getFileType());
      if (data.getRangeHighlighter() != null)       data.getRangeHighlighter().apply(myProject,myDocument);
      ArrayList<OnesideDiffChange> diffChanges=new ArrayList<OnesideDiffChange>(blocks.size());
      for (      ChangedBlock block : blocks) {
        diffChanges.add(new OnesideDiffChange(myEditor,block));
      }
      myChangedBlockData=new ChangedBlockData(diffChanges,convertor);
      myFoldingModel.install(changedLines,myRequest,getFoldingModelSettings());
      myScrollToLineHelper.onRediff();
      myStatusPanel.update();
      myPanel.setGoodContent();
    }
  }
;
}
