{
  final GenericTypeMatcher<IdeFrameImpl> matcher=new GenericTypeMatcher<IdeFrameImpl>(IdeFrameImpl.class){
    @Override protected boolean isMatching(    @NotNull IdeFrameImpl frame){
      Project project=frame.getProject();
      if (projectPath == null && project != null)       return true;
      if (project != null && PathManager.getAbsolutePath(projectPath.getPath()).equals(PathManager.getAbsolutePath(project.getBasePath()))) {
        return projectName == null || projectName.equals(project.getName());
      }
      return false;
    }
  }
;
  pause(new Condition("IdeFrame " + (projectPath != null ? quote(projectPath.getPath()) : "") + " to show up"){
    @Override public boolean test(){
      Collection<IdeFrameImpl> frames=robot.finder().findAll(matcher);
      return !frames.isEmpty();
    }
  }
,LONG_TIMEOUT);
  IdeFrameImpl ideFrame=robot.finder().find(matcher);
  return new IdeFrameFixture(robot,ideFrame,new File(ideFrame.getProject().getBasePath()));
}
