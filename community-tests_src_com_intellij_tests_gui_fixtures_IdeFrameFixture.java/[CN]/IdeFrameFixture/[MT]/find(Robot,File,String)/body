{
  final GenericTypeMatcher<IdeFrameImpl> matcher=new GenericTypeMatcher<IdeFrameImpl>(IdeFrameImpl.class){
    @Override protected boolean isMatching(    @NotNull IdeFrameImpl frame){
      Project project=frame.getProject();
      if (project != null && toSystemIndependentName(projectPath.getPath()).equals(project.getBasePath())) {
        return projectName == null || projectName.equals(project.getName());
      }
      return false;
    }
  }
;
  pause(new Condition("IdeFrame " + quote(projectPath.getPath()) + " to show up"){
    @Override public boolean test(){
      Collection<IdeFrameImpl> frames=robot.finder().findAll(matcher);
      return !frames.isEmpty();
    }
  }
,LONG_TIMEOUT);
  IdeFrameImpl ideFrame=robot.finder().find(matcher);
  return new IdeFrameFixture(robot,ideFrame,projectPath);
}
