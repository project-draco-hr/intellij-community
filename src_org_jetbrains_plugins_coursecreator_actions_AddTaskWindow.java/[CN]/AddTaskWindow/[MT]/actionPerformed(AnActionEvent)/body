{
  final Project project=e.getData(CommonDataKeys.PROJECT);
  if (project == null) {
    return;
  }
  final PsiFile file=CommonDataKeys.PSI_FILE.getData(e.getDataContext());
  if (file == null)   return;
  final Editor editor=CommonDataKeys.EDITOR.getData(e.getDataContext());
  if (editor == null)   return;
  final SelectionModel model=editor.getSelectionModel();
  final Document document=PsiDocumentManager.getInstance(project).getDocument(file);
  if (document == null)   return;
  final int start=model.getSelectionStart();
  final int end=model.getSelectionEnd();
  final int lineNumber=document.getLineNumber(start);
  final int length=end - start;
  int realStart=start - document.getLineStartOffset(lineNumber);
  final CCProjectService service=CCProjectService.getInstance(project);
  final Course course=service.getCourse();
  final PsiDirectory taskDir=file.getContainingDirectory();
  final PsiDirectory lessonDir=taskDir.getParent();
  if (lessonDir == null)   return;
  final Lesson lesson=course.getLesson(lessonDir.getName());
  final Task task=lesson.getTask(taskDir.getName());
  final TaskFile taskFile=task.getTaskFile(file.getName());
  final String taskText=Messages.showMultilineInputDialog(project,"Add window task text","Task Window Text","",null,null);
  final TaskWindow taskWindow=new TaskWindow(lineNumber,realStart,length,model.getSelectedText());
  taskWindow.setTaskText(StringUtil.notNullize(taskText));
  taskFile.addTaskWindow(taskWindow);
  DaemonCodeAnalyzerImpl.getInstance(project).restart(file);
}
