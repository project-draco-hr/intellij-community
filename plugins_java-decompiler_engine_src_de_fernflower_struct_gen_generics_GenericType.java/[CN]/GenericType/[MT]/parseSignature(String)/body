{
  int index=0;
  while (index < sig.length()) {
switch (sig.charAt(index)) {
case '[':
      arraydim++;
    break;
case 'T':
  type=CodeConstants.TYPE_GENVAR;
value=sig.substring(index + 1,sig.length() - 1);
return;
case 'L':
type=CodeConstants.TYPE_OBJECT;
sig=sig.substring(index + 1,sig.length() - 1);
for (; ; ) {
String cl=getNextClassSignature(sig);
String name=cl;
String args=null;
int argfrom=cl.indexOf("<");
if (argfrom >= 0) {
name=cl.substring(0,argfrom);
args=cl.substring(argfrom + 1,cl.length() - 1);
}
if (cl.length() < sig.length()) {
sig=sig.substring(cl.length() + 1);
GenericType type=new GenericType(CodeConstants.TYPE_OBJECT,0,name);
parseArgumentsList(args,type);
enclosingClasses.add(type);
}
 else {
value=name;
parseArgumentsList(args,this);
break;
}
}
return;
default :
value=sig.substring(index,index + 1);
type=getType(value.charAt(0));
}
index++;
}
}
