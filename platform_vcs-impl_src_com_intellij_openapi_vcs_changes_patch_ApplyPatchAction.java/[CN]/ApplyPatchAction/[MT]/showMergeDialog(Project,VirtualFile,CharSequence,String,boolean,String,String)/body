{
  Document document=FileDocumentManager.getInstance().getDocument(file);
  if (document != null) {
    FileDocumentManager.getInstance().saveDocument(document);
  }
  CharSequence fileContent=LoadTextUtil.loadText(file);
  if (content == null) {
    return ApplyPatchStatus.FAILURE;
  }
  final String leftText=fileContent.toString();
  MergeRequest request=DiffRequestFactory.getInstance().createMergeRequest(reverse ? patchedContent : leftText,reverse ? leftText : patchedContent,content.toString(),file,project,ActionButtonPresentation.APPLY,ActionButtonPresentation.CANCEL_WITH_PROMPT);
  request.setVersionTitles(new String[]{leftPanelTitle == null ? VcsBundle.message("patch.apply.conflict.local.version") : leftPanelTitle,rightPanelTitle == null ? VcsBundle.message("patch.apply.conflict.merged.version") : rightPanelTitle,VcsBundle.message("patch.apply.conflict.patched.version")});
  request.setWindowTitle(VcsBundle.message("patch.apply.conflict.title",file.getPresentableUrl()));
  DiffManager.getInstance().getDiffTool().show(request);
  if (request.getResult() == DialogWrapper.OK_EXIT_CODE) {
    return ApplyPatchStatus.SUCCESS;
  }
 else {
    request.restoreOriginalContent();
    return ApplyPatchStatus.FAILURE;
  }
}
