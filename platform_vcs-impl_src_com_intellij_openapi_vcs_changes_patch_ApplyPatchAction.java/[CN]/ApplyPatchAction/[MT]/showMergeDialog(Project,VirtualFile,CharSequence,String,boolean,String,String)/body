{
  Document document=FileDocumentManager.getInstance().getDocument(file);
  if (content == null || document == null) {
    return ApplyPatchStatus.FAILURE;
  }
  List<String> titles=ContainerUtil.list(leftPanelTitle == null ? VcsBundle.message("patch.apply.conflict.local.version") : leftPanelTitle,rightPanelTitle == null ? VcsBundle.message("patch.apply.conflict.merged.version") : rightPanelTitle,VcsBundle.message("patch.apply.conflict.patched.version"));
  String windowTitle=VcsBundle.message("patch.apply.conflict.title",file.getPresentableUrl());
  final String leftText=document.getText();
  List<String> contents=ContainerUtil.list(reverse ? patchedContent : leftText,content.toString(),reverse ? leftText : patchedContent);
  final Ref<Boolean> successRef=new Ref<Boolean>();
  final Consumer<MergeResult> callback=new Consumer<MergeResult>(){
    @Override public void consume(    MergeResult result){
      successRef.set(result != MergeResult.CANCEL);
    }
  }
;
  try {
    MergeRequest request=DiffRequestFactory.getInstance().createMergeRequest(project,file.getFileType(),document,contents,windowTitle,titles,callback);
    com.intellij.diff.DiffManager.getInstance().showMerge(project,request);
    return successRef.get() == Boolean.TRUE ? ApplyPatchStatus.SUCCESS : ApplyPatchStatus.FAILURE;
  }
 catch (  InvalidDiffRequestException e) {
    LOG.warn(e);
    return ApplyPatchStatus.FAILURE;
  }
}
