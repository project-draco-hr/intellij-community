{
  final int length=pattern.length();
  for (char ch; index < length && !Character.isWhitespace(ch=pattern.charAt(index)); ++index) {
    miscBuffer.append(ch);
  }
  if (miscBuffer.length() == 0)   return index;
  String regexp=miscBuffer.toString();
  if (constraint.getRegExp() != null && constraint.getRegExp().length() > 0 && !constraint.getRegExp().equals(regexp)) {
    throw new MalformedPatternException(SSRBundle.message("error.two.different.type.constraints"));
  }
 else {
    try {
      Pattern.compile(regexp);
    }
 catch (    PatternSyntaxException e) {
      throw new MalformedPatternException(SSRBundle.message("invalid.regular.expression"));
    }
    constraint.setRegExp(regexp);
  }
  return index;
}
