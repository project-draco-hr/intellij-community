{
  if (isShowing(configurable))   return new ActionCallback.Done();
  final ActionCallback result=new ActionCallback();
  if (configurable == null) {
    myOwnDetails.setContent(null);
    updateSpotlight(true);
    checkModified(oldConfigurable);
    result.setDone();
  }
 else {
    getUiFor(configurable).doWhenDone(new EdtRunnable(){
      @Override public void runEdt(){
        if (myDisposed)         return;
        final Configurable current=getContext().getCurrentConfigurable();
        if (current != configurable) {
          result.setRejected();
          return;
        }
        myHistory.pushQueryPlace();
        updateDetails();
        myOwnDetails.setContent(myContentWrapper);
        myOwnDetails.setBannerMinHeight(mySearchWrapper.getHeight());
        myOwnDetails.setText(getBannerText(configurable));
        if (myTreeView != null) {
          myOwnDetails.forProject(myTreeView.findConfigurableProject(configurable));
        }
 else         if (Registry.is("ide.file.settings.order.new")) {
          myOwnDetails.forProject(myTree.getConfigurableProject(configurable));
        }
        final ConfigurableContent content=myConfigurable2Content.get(current);
        content.setText(getBannerText(configurable));
        content.setBannerActions(new Action[]{new ResetAction(configurable)});
        content.updateBannerActions();
        myLoadingDecorator.stopLoading();
        updateSpotlight(false);
        checkModified(oldConfigurable);
        checkModified(configurable);
        FilteringTreeBuilder builder=myTreeView != null ? myTreeView.myBuilder : myTree.myBuilder;
        if (builder.getSelectedElements().size() == 0) {
          select(configurable).notify(result);
        }
 else {
          result.setDone();
        }
      }
    }
);
  }
  return result;
}
